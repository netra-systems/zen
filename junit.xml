<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="1" failures="0" skipped="0" tests="1" time="5.721" timestamp="2025-08-30T06:41:21.471230-07:00" hostname="Anthony"><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_refresh_endpoint_expired_token" time="4.338"><error message="failed on setup with &quot;RuntimeError: Auth database initialization failed: Database connection failed: [WinError 1225] The remote computer refused the network connection&quot;">auth_service\auth_core\database\connection.py:67: in initialize
    await asyncio.wait_for(
..\..\..\..\miniconda3\Lib\asyncio\tasks.py:520: in wait_for
    return await fut
           ^^^^^^^^^
auth_service\auth_core\database\connection.py:141: in _validate_initial_connection
    async with self.engine.connect() as conn:
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\base.py:121: in __aenter__
    return await self.start(is_ctxmanager=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\ext\asyncio\engine.py:274: in start
    await greenlet_spawn(self.sync_engine.connect)
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py:3277: in connect
    return self._connection_cls(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py:143: in __init__
    self._dbapi_connection = engine.raw_connection()
                             ^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\base.py:3301: in raw_connection
    return self.pool.connect()
           ^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:447: in connect
    return _ConnectionFairy._checkout(self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:1264: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:711: in checkout
    rec = pool._do_get()
          ^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py:177: in _do_get
    with util.safe_reraise():
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\impl.py:175: in _do_get
    return self._create_connection()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:388: in _create_connection
    return _ConnectionRecord(self)
           ^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:673: in __init__
    self.__connect()
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:899: in __connect
    with util.safe_reraise():
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\langhelpers.py:224: in __exit__
    raise exc_value.with_traceback(exc_tb)
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\pool\base.py:895: in __connect
    self.dbapi_connection = connection = pool._invoke_creator(self)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\create.py:661: in connect
    return dialect.connect(*cargs, **cparams)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\engine\default.py:629: in connect
    return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\dialects\postgresql\asyncpg.py:964: in connect
    await_only(creator_fn(*arg, **kw)),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\sqlalchemy\util\_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\asyncpg\connection.py:2421: in connect
    return await connect_utils._connect(
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\asyncpg\connect_utils.py:1075: in _connect
    raise last_error or exceptions.TargetServerAttributeNotMatched(
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\asyncpg\connect_utils.py:1049: in _connect
    conn = await _connect_addr(
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\asyncpg\connect_utils.py:886: in _connect_addr
    return await __connect_addr(params, True, *args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\asyncpg\connect_utils.py:931: in __connect_addr
    tr, pr = await connector
             ^^^^^^^^^^^^^^^
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\asyncpg\connect_utils.py:802: in _create_ssl_connection
    tr, pr = await loop.create_connection(
..\..\..\..\miniconda3\Lib\asyncio\base_events.py:1127: in create_connection
    raise exceptions[0]
..\..\..\..\miniconda3\Lib\asyncio\base_events.py:1104: in create_connection
    sock = await self._connect_sock(
..\..\..\..\miniconda3\Lib\asyncio\base_events.py:1007: in _connect_sock
    await self.sock_connect(sock, address)
..\..\..\..\miniconda3\Lib\asyncio\proactor_events.py:729: in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\miniconda3\Lib\asyncio\windows_events.py:803: in _poll
    value = callback(transferred, key, ov)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\..\..\..\miniconda3\Lib\asyncio\windows_events.py:599: in finish_connect
    ov.getresult()
E   ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:
auth_service\auth_core\database\connection.py:88: in initialize
    raise RuntimeError(f"Database connection failed: {e}") from e
E   RuntimeError: Database connection failed: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:
..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pytest_asyncio\plugin.py:683: in pytest_fixture_setup
    return (yield)
            ^^^^^
auth_service\tests\conftest.py:88: in initialize_test_database
    loop.run_until_complete(setup_db())
..\..\..\..\miniconda3\Lib\asyncio\base_events.py:687: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
auth_service\tests\conftest.py:70: in setup_db
    await auth_db.initialize()
auth_service\auth_core\database\connection.py:127: in initialize
    raise RuntimeError(f"Auth database initialization failed: {e}") from e
E   RuntimeError: Auth database initialization failed: Database connection failed: [WinError 1225] The remote computer refused the network connection</error></testcase></testsuite></testsuites>