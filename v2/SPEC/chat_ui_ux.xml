<?xml version="1.0" encoding="UTF-8"?>
<specification>
    <metadata>
        <name>Chat UI/UX</name>
        <type>chat_ui_ux</type>
        <version>1.0</version>
    </metadata>
    
    <primary-goal>AMAZING UI/UX experience for Chat</primary-goal>
    
    <conventions>
        <convention>See Schemas and Types that are existing to see what fields and concepts are available</convention>
        <convention>ALL chat components stay in components/chat</convention>
        <convention>There is a single MainChat: "drop in" component that has all sub chat components</convention>
        <convention>MainChat is the only item imported into the next.js formatted app/chat folder</convention>
    </conventions>
    
    <requirements>
        <requirement id="1">
            <title>Primary Header</title>
            <description>The primary header is the SubAgent name</description>
            <subitems>
                <item>Secondary items are things related to SubAgent status and state etc. e.g. Tools being used</item>
            </subitems>
        </requirement>
        
        <requirement id="2">Third is messages</requirement>
        
        <requirement id="3">Show relevant concepts as collapsible items inside cards etc.</requirement>
        
        <requirement id="4">Show errors if existing</requirement>
        
        <requirement id="5">Define with strong types which messages are shown to user by default (not all events we want to show)</requirement>
        
        <requirement id="6">User messages display user text and user references</requirement>
        
        <requirement id="7">UI/UX feels "alive" while still being subtle</requirement>
        
        <requirement id="8">An expandable "Raw" mode that can expand JSON objects at various processing stages (e.g JSON tree view)</requirement>
        
        <requirement id="9">A "Stop" processing button</requirement>
        
        <requirement id="10">
            <title>Examples</title>
            <subitems>
                <item>Import examplePrompts.ts. Keep examplePrompts.ts exactly as is</item>
                <item>Show examples to user</item>
                <item>Examples are shown as cards with great visual UI/UX style</item>
                <item>Clicking an example sends it to chat and collapses examples panel</item>
            </subitems>
        </requirement>
        
        <requirement id="11">Add tests for chat_ui_ux:1:0:1 through chat_ui_ux:1:0:11</requirement>
    </requirements>
</specification>