<?xml version="1.0" encoding="UTF-8"?>
<specification>
    <metadata>
        <name>Enhanced Chat UI/UX</name>
        <type>enhanced_chat_ui_ux</type>
        <version>2.0</version>
        <created>2025-08-10</created>
        <description>Comprehensive UI/UX specification for Netra AI chat interface with real-time updates and reporting</description>
    </metadata>
    
    <primary-goal>World-class UI/UX experience with real-time agent status, timing metrics, and comprehensive reporting</primary-goal>
    
    <conventions>
        <convention>All chat components stay in components/chat directory</convention>
        <convention>MainChat is the primary drop-in component containing all sub-components</convention>
        <convention>Use TypeScript with strict typing for all components</convention>
        <convention>Follow existing Tailwind CSS patterns and utility classes</convention>
        <convention>Leverage Framer Motion for smooth animations</convention>
        <convention>Maintain responsive design for all screen sizes</convention>
    </conventions>
    
    <ui-concepts>
        <!-- Existing Concepts -->
        <concept id="static-header">
            <name>Static Header Bar</name>
            <description>Top bar remains static while content cycles through different thoughts/states</description>
            <implementation>
                <component>EnhancedChatHeader.tsx</component>
                <features>
                    <feature>Fixed position during scrolling</feature>
                    <feature>Displays current agent name</feature>
                    <feature>Shows processing status</feature>
                    <feature>Metrics summary (step count, duration)</feature>
                </features>
            </implementation>
        </concept>
        
        <concept id="cycling-thoughts">
            <name>Cycling Thought Indicator</name>
            <description>Display rotating thoughts/status messages while keeping UI stable</description>
            <implementation>
                <component>EnhancedChatHeader.tsx</component>
                <features>
                    <feature>Static progress bar</feature>
                    <feature>Cycling text messages every 3 seconds</feature>
                    <feature>Smooth fade transitions between thoughts</feature>
                    <feature>Context-aware messages based on current agent</feature>
                </features>
            </implementation>
        </concept>
        
        <!-- New Enhanced Concepts -->
        <concept id="agent-transitions">
            <name>Agent Transition Indicators</name>
            <description>Visual feedback when processing moves between agents</description>
            <implementation>
                <component>EnhancedMessageItem.tsx</component>
                <features>
                    <feature>Animated transition banner</feature>
                    <feature>Shows from/to agent names</feature>
                    <feature>Gradient background animation</feature>
                    <feature>Timestamp of transition</feature>
                </features>
            </implementation>
        </concept>
        
        <concept id="real-time-timing">
            <name>Real-Time Timing Display</name>
            <description>Live elapsed time tracking for each processing step</description>
            <implementation>
                <component>EnhancedMessageItem.tsx</component>
                <features>
                    <feature>Live elapsed time counter (updates every 100ms)</feature>
                    <feature>Per-step timing with start/end timestamps</feature>
                    <feature>Total duration calculation</feature>
                    <feature>Visual spinner for active steps</feature>
                    <feature>Formatted duration display (ms/s/m)</feature>
                </features>
            </implementation>
        </concept>
        
        <concept id="expandable-details">
            <name>Progressive Disclosure</name>
            <description>Expandable sections for detailed information</description>
            <implementation>
                <component>EnhancedMessageItem.tsx</component>
                <features>
                    <feature>Collapsible tool information</feature>
                    <feature>Expandable raw JSON data</feature>
                    <feature>Detailed metrics section</feature>
                    <feature>Eye icon toggle for visibility</feature>
                </features>
            </implementation>
        </concept>
        
        <concept id="final-report">
            <name>Comprehensive Final Report View</name>
            <description>Dedicated screen for viewing complete analysis results</description>
            <implementation>
                <component>FinalReportView.tsx</component>
                <features>
                    <feature>Tabbed interface for different report sections</feature>
                    <feature>Executive summary display</feature>
                    <feature>Data analysis visualization</feature>
                    <feature>Optimization recommendations</feature>
                    <feature>Action plan steps</feature>
                    <feature>Performance metrics dashboard</feature>
                    <feature>Download/Copy functionality</feature>
                    <feature>Agent execution timeline</feature>
                    <feature>Tool usage statistics</feature>
                </features>
            </implementation>
        </concept>
        
        <concept id="status-badges">
            <name>Dynamic Status Badges</name>
            <description>Color-coded badges showing agent and tool status</description>
            <implementation>
                <features>
                    <feature>Agent status: pending/running/completed/failed</feature>
                    <feature>Tool execution indicators</feature>
                    <feature>Animated pulse for active states</feature>
                    <feature>Color coding: green (success), blue (info), red (error), yellow (warning)</feature>
                </features>
            </implementation>
        </concept>
        
        <concept id="message-types">
            <name>Message Type Differentiation</name>
            <description>Visual distinction between different message types</description>
            <implementation>
                <features>
                    <feature>User messages: blue gradient background, right-aligned</feature>
                    <feature>Agent messages: white background, left-aligned</feature>
                    <feature>Tool messages: purple accent</feature>
                    <feature>Error messages: red background with icon</feature>
                    <feature>System messages: gray background</feature>
                </features>
            </implementation>
        </concept>
    </ui-concepts>
    
    <data-elements>
        <element id="data-result">
            <name>data_result</name>
            <description>Contains data analysis results from DataSubAgent</description>
            <structure>
                <field name="data" type="object">Analyzed data</field>
                <field name="metadata" type="object">Analysis metadata</field>
            </structure>
            <display>
                <location>FinalReportView - Data Analysis Tab</location>
                <format>Formatted JSON with syntax highlighting</format>
            </display>
        </element>
        
        <element id="optimizations-result">
            <name>optimizations_result</name>
            <description>Optimization recommendations from OptimizationsSubAgent</description>
            <structure>
                <field name="recommendations" type="array">List of optimizations</field>
                <field name="impact" type="object">Expected impact metrics</field>
            </structure>
            <display>
                <location>FinalReportView - Optimizations Tab</location>
                <format>Expandable cards with details</format>
            </display>
        </element>
        
        <element id="action-plan-result">
            <name>action_plan_result</name>
            <description>Implementation action plan from ActionsSubAgent</description>
            <structure>
                <field name="steps" type="array">Ordered implementation steps</field>
                <field name="timeline" type="object">Suggested timeline</field>
            </structure>
            <display>
                <location>FinalReportView - Action Plan Tab</location>
                <format>Numbered list with alert boxes</format>
            </display>
        </element>
        
        <element id="execution-metrics">
            <name>execution_metrics</name>
            <description>Performance metrics for the analysis execution</description>
            <structure>
                <field name="total_duration" type="number">Total execution time in ms</field>
                <field name="agent_timings" type="array">Per-agent timing data</field>
                <field name="tool_calls" type="array">Tool usage statistics</field>
            </structure>
            <display>
                <location>FinalReportView - Metrics Tab</location>
                <format>Charts, progress bars, and statistics cards</format>
            </display>
        </element>
    </data-elements>
    
    <user-interactions>
        <interaction id="view-report">
            <name>Access Final Report</name>
            <trigger>Analysis completion or explicit user request</trigger>
            <action>Display FinalReportView component with all data_result elements</action>
            <features>
                <feature>Automatic navigation on completion</feature>
                <feature>Manual access via button/link</feature>
                <feature>Shareable report URL</feature>
            </features>
        </interaction>
        
        <interaction id="expand-details">
            <name>Expand Message Details</name>
            <trigger>Click on expand icon or detail section</trigger>
            <action>Reveal additional metrics and raw data</action>
        </interaction>
        
        <interaction id="download-report">
            <name>Download Report</name>
            <trigger>Click download button in FinalReportView</trigger>
            <action>Generate and download JSON file with complete report data</action>
        </interaction>
        
        <interaction id="copy-report">
            <name>Copy Report Data</name>
            <trigger>Click copy button</trigger>
            <action>Copy report JSON to clipboard</action>
        </interaction>
    </user-interactions>
    
    <animations>
        <animation id="message-entry">
            <name>Message Entry Animation</name>
            <description>Smooth fade-in and slide-up for new messages</description>
            <duration>300ms</duration>
            <easing>easeOut</easing>
        </animation>
        
        <animation id="agent-transition">
            <name>Agent Transition Animation</name>
            <description>Gradient sweep for agent changes</description>
            <duration>500ms</duration>
            <effect>Gradient background animation</effect>
        </animation>
        
        <animation id="pulse-active">
            <name>Active State Pulse</name>
            <description>Gentle pulse for active processing indicators</description>
            <duration>2000ms</duration>
            <repeat>infinite</repeat>
        </animation>
        
        <animation id="thought-cycle">
            <name>Thought Cycling</name>
            <description>Fade transition between thought messages</description>
            <duration>300ms</duration>
            <interval>3000ms</interval>
        </animation>
    </animations>
    
    <performance>
        <optimization id="virtualization">
            <name>Message List Virtualization</name>
            <description>Virtualize long message lists for performance</description>
            <threshold>100 messages</threshold>
        </optimization>
        
        <optimization id="memo-components">
            <name>Component Memoization</name>
            <description>Use React.memo for message components</description>
            <target>MessageItem, EnhancedMessageItem</target>
        </optimization>
        
        <optimization id="debounce-updates">
            <name>Debounced Updates</name>
            <description>Debounce rapid WebSocket message updates</description>
            <interval>100ms</interval>
        </optimization>
    </performance>
    
    <accessibility>
        <feature id="keyboard-nav">
            <name>Keyboard Navigation</name>
            <description>Full keyboard support for all interactive elements</description>
        </feature>
        
        <feature id="screen-reader">
            <name>Screen Reader Support</name>
            <description>ARIA labels and live regions for dynamic content</description>
        </feature>
        
        <feature id="focus-management">
            <name>Focus Management</name>
            <description>Proper focus handling for modals and expandable sections</description>
        </feature>
    </accessibility>
    
    <testing>
        <test-category id="unit">
            <name>Unit Tests</name>
            <coverage>All new components and hooks</coverage>
            <framework>Jest + React Testing Library</framework>
        </test-category>
        
        <test-category id="integration">
            <name>Integration Tests</name>
            <coverage>WebSocket message flow, state management</coverage>
            <framework>Jest</framework>
        </test-category>
        
        <test-category id="e2e">
            <name>End-to-End Tests</name>
            <coverage>Complete user workflows including report generation</coverage>
            <framework>Cypress</framework>
        </test-category>
    </testing>
</specification>