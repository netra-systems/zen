
app\tests\core\test_config_manager.py::TestSecretManager::test_initialization PASSED [  0%]
app\tests\core\test_config_manager.py::TestSecretManager::test_load_from_environment PASSED [  0%]
app\tests\core\test_config_manager.py::TestSecretManager::test_secret_manager_client_creation_success PASSED [  0%]
app\tests\core\test_config_manager.py::TestSecretManager::test_secret_manager_client_creation_failure FAILED [  1%]
app\tests\core\test_config_manager.py::TestSecretManager::test_load_from_secret_manager_success PASSED [  1%]
app\tests\core\test_config_manager.py::TestSecretManager::test_load_secrets_fallback_to_env PASSED [  1%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_initialization PASSED [  2%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_validate_valid_config 
-------------------------------- live log call --------------------------------
LLM configuration warnings: LLM 'default' is missing API key, LLM 'analysis' is missing API key, LLM 'triage' is missing API key, LLM 'data' is missing API key, LLM 'optimizations_core' is missing API key, LLM 'actions_to_meet_goals' is missing API key, LLM 'reporting' is missing API key
PASSED                                                                   [  2%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_validate_database_config_missing_url 
-------------------------------- live log call --------------------------------
Configuration validation failed: Database configuration errors: Database URL is not configured
PASSED                                                                   [  2%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_validate_database_config_invalid_url 
-------------------------------- live log call --------------------------------
Configuration validation failed: Database configuration errors: Database URL must be a PostgreSQL connection string
PASSED                                                                   [  3%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_validate_auth_config_missing_jwt_secret 
-------------------------------- live log call --------------------------------
Configuration validation failed: Authentication configuration errors: JWT secret key is not configured
PASSED                                                                   [  3%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_validate_auth_config_production_dev_secret 
-------------------------------- live log call --------------------------------
Configuration validation failed: Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production
FAILED                                                                   [  3%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_get_validation_report_success 
-------------------------------- live log call --------------------------------
LLM configuration warnings: LLM 'default' is missing API key, LLM 'analysis' is missing API key, LLM 'triage' is missing API key, LLM 'data' is missing API key, LLM 'optimizations_core' is missing API key, LLM 'actions_to_meet_goals' is missing API key, LLM 'reporting' is missing API key
PASSED                                                                   [  3%]
app\tests\core\test_config_manager.py::TestConfigValidator::test_get_validation_report_failure 
-------------------------------- live log call --------------------------------
Configuration validation failed: Database configuration errors: Database URL is not configured
PASSED                                                                   [  4%]
app\tests\core\test_config_manager.py::TestConfigManager::test_initialization PASSED [  4%]
app\tests\core\test_config_manager.py::TestConfigManager::test_get_environment_development FAILED [  4%]
app\tests\core\test_config_manager.py::TestConfigManager::test_get_environment_testing PASSED [  5%]
app\tests\core\test_config_manager.py::TestConfigManager::test_get_environment_production FAILED [  5%]
app\tests\core\test_config_manager.py::TestConfigManager::test_create_base_config_development PASSED [  5%]
app\tests\core\test_config_manager.py::TestConfigManager::test_create_base_config_unknown_defaults_to_dev PASSED [  6%]
app\tests\core\test_config_manager.py::TestConfigManager::test_load_configuration_success PASSED [  6%]
app\tests\core\test_config_manager.py::TestConfigManager::test_load_configuration_validation_failure FAILED [  6%]
app\tests\core\test_config_manager.py::TestConfigManager::test_get_config_caching PASSED [  6%]
app\tests\core\test_config_manager.py::TestConfigManager::test_reload_config PASSED [  7%]
app\tests\core\test_config_manager.py::TestConfigurationFunctions::test_get_config PASSED [  7%]
app\tests\core\test_config_manager.py::TestConfigurationFunctions::test_reload_config PASSED [  7%]
app\tests\core\test_config_manager.py::TestConfigurationIntegration::test_full_configuration_flow FAILED [  8%]
app\tests\core\test_config_manager.py::TestConfigurationIntegration::test_testing_configuration PASSED [  8%]
app\tests\core\test_config_manager.py::TestConfigurationIntegration::test_configuration_error_handling FAILED [  8%]
app\tests\core\test_error_handling.py::TestErrorCodes::test_error_code_values PASSED [  9%]
app\tests\core\test_error_handling.py::TestErrorCodes::test_error_severity_values PASSED [  9%]
app\tests\core\test_error_handling.py::TestErrorDetails::test_error_details_creation PASSED [  9%]
app\tests\core\test_error_handling.py::TestErrorDetails::test_error_details_with_context FAILED [  9%]
app\tests\core\test_error_handling.py::TestErrorDetails::test_error_details_serialization PASSED [ 10%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_netra_exception_basic FAILED [ 10%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_netra_exception_with_code PASSED [ 10%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_netra_exception_to_dict PASSED [ 11%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_configuration_error PASSED [ 11%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_validation_error_with_errors PASSED [ 11%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_authentication_error PASSED [ 12%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_authorization_error PASSED [ 12%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_token_expired_error FAILED [ 12%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_database_error PASSED [ 12%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_record_not_found_error FAILED [ 13%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_service_error PASSED [ 13%]
app\tests\core\test_error_handling.py::TestNetraExceptions::test_llm_request_error FAILED [ 13%]
app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_netra_exception FAILED [ 14%]
app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_pydantic_validation_error 
-------------------------------- live log call --------------------------------
Validation error: ['field1: field required', 'field2: invalid format']
FAILED                                                                   [ 14%]
app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_sqlalchemy_integrity_error 
-------------------------------- live log call --------------------------------
Database integrity error: (builtins.str) orig
[SQL: statement]
[parameters: 'params']
(Background on this error at: https://sqlalche.me/e/20/gkpj)
FAILED                                                                   [ 14%]
app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_http_exception 
-------------------------------- live log call --------------------------------
HTTP exception 404: Not found
FAILED                                                                   [ 15%]
app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_unknown_exception 
-------------------------------- live log call --------------------------------
Unhandled exception: Unknown error
NoneType: None
FAILED                                                                   [ 15%]
app\tests\core\test_error_handling.py::TestErrorHandler::test_get_http_status_code_mapping PASSED [ 15%]
app\tests\core\test_error_handling.py::TestErrorContext::test_trace_id_context PASSED [ 15%]
app\tests\core\test_error_handling.py::TestErrorContext::test_request_id_context PASSED [ 16%]
app\tests\core\test_error_handling.py::TestErrorContext::test_user_id_context PASSED [ 16%]
app\tests\core\test_error_handling.py::TestErrorContext::test_custom_context PASSED [ 16%]
app\tests\core\test_error_handling.py::TestErrorContext::test_get_all_context PASSED [ 17%]
app\tests\core\test_error_handling.py::TestErrorContext::test_clear_context PASSED [ 17%]
app\tests\core\test_error_handling.py::TestErrorContext::test_error_context_manager PASSED [ 17%]
app\tests\core\test_error_handling.py::TestErrorContext::test_get_enriched_error_context PASSED [ 18%]
app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_handle_exception_function FAILED [ 18%]
app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_get_http_status_code_function PASSED [ 18%]
app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_netra_exception_handler FAILED [ 18%]
app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_validation_exception_handler 
-------------------------------- live log call --------------------------------
Validation error: ['field: required']
FAILED                                                                   [ 19%]

================================== FAILURES ===================================
________ TestSecretManager.test_secret_manager_client_creation_failure ________
app\core\secret_manager.py:46: in _get_secret_client
    self._client = secretmanager.SecretManagerServiceClient()
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1134: in __call__
    return self._mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1138: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1193: in _execute_mock_call
    raise effect
app\core\secret_manager.py:46: in _get_secret_client
    self._client = secretmanager.SecretManagerServiceClient()
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1134: in __call__
    return self._mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1138: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1193: in _execute_mock_call
    raise effect
app\core\secret_manager.py:46: in _get_secret_client
    self._client = secretmanager.SecretManagerServiceClient()
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1134: in __call__
    return self._mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1138: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1193: in _execute_mock_call
    raise effect
E   Exception: Connection failed

During handling of the above exception, another exception occurred:
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\tenacity\__init__.py:480: in __call__
    result = fn(*args, **kwargs)
app\core\secret_manager.py:49: in _get_secret_client
    raise SecretManagerError(f"Failed to create Secret Manager client: {e}")
E   app.core.secret_manager.SecretManagerError: Failed to create Secret Manager client: Connection failed

The above exception was the direct cause of the following exception:
app\tests\core\test_config_manager.py:60: in test_secret_manager_client_creation_failure
    manager._get_secret_client()
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\tenacity\__init__.py:338: in wrapped_f
    return copy(f, *args, **kw)
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\tenacity\__init__.py:477: in __call__
    do = self.iter(retry_state=retry_state)
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\tenacity\__init__.py:378: in iter
    result = action(retry_state)
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\tenacity\__init__.py:421: in exc_check
    raise retry_exc from fut.exception()
E   tenacity.RetryError: RetryError[<Future at 0x26a8d6f1850 state=finished raised SecretManagerError>]
_____ TestConfigValidator.test_validate_auth_config_production_dev_secret _____
app\tests\core\test_config_manager.py:152: in test_validate_auth_config_production_dev_secret
    assert "Development JWT secret key cannot be used in production" in str(exc_info.value)
E   AssertionError: assert 'Development JWT secret key cannot be used in production' in 'Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production'
E    +  where 'Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production' = str(ConfigurationValidationError('Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production'))
E    +    where ConfigurationValidationError('Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production') = <ExceptionInfo ConfigurationValidationError('Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production') tblen=3>.value
---------------------------- Captured stdout call -----------------------------
[32m2025-08-10 06:50:11.382[0m | [31mERROR   [0m | [36mlogging[0m:[36mcallHandlers[0m:[36m1762[0m - [31mConfiguration validation failed: Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production[0m
------------------------------ Captured log call ------------------------------
ERROR    app.core.config_validator:config_validator.py:34 Configuration validation failed: Database configuration errors: clickhouse_native password is required in production, clickhouse_https password is required in production, clickhouse_https_dev password is required in production
_____________ TestConfigManager.test_get_environment_development ______________
app\tests\core\test_config_manager.py:193: in test_get_environment_development
    assert env == "development"
E   AssertionError: assert 'testing' == 'development'
E     
E     - development
E     + testing
______________ TestConfigManager.test_get_environment_production ______________
app\tests\core\test_config_manager.py:207: in test_get_environment_production
    assert env == "production"
E   AssertionError: assert 'testing' == 'production'
E     
E     - production
E     + testing
________ TestConfigManager.test_load_configuration_validation_failure _________
app\tests\core\test_config_manager.py:242: in test_load_configuration_validation_failure
    manager._load_configuration()
app\config.py:50: in _load_configuration
    self._validator.validate_config(config)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1134: in __call__
    return self._mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1138: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1193: in _execute_mock_call
    raise effect
E   app.core.config_validator.ConfigurationValidationError: Validation failed
------------------------------ Captured log call ------------------------------
INFO     app.config:config.py:41 Loading configuration for: testing
INFO     app.core.secret_manager:secret_manager.py:28 Using environment variables for secrets (local development mode)
INFO     app.core.secret_manager:secret_manager.py:117 Loaded 2 secrets from environment variables
__________ TestConfigurationIntegration.test_full_configuration_flow __________
app\tests\core\test_config_manager.py:308: in test_full_configuration_flow
    assert config.environment == "development"
E   AssertionError: assert 'testing' == 'development'
E     
E     - development
E     + testing
_______ TestConfigurationIntegration.test_configuration_error_handling ________
app\tests\core\test_config_manager.py:332: in test_configuration_error_handling
    manager.get_config()
app\config.py:34: in get_config
    self._config = self._load_configuration()
app\config.py:50: in _load_configuration
    self._validator.validate_config(config)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1134: in __call__
    return self._mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1138: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1193: in _execute_mock_call
    raise effect
E   app.core.config_validator.ConfigurationValidationError: Test error
------------------------------ Captured log call ------------------------------
INFO     app.config:config.py:41 Loading configuration for: testing
INFO     app.core.secret_manager:secret_manager.py:28 Using environment variables for secrets (local development mode)
INFO     app.core.secret_manager:secret_manager.py:117 Loaded 2 secrets from environment variables
______________ TestErrorDetails.test_error_details_with_context _______________
app\tests\core\test_error_handling.py:78: in test_error_details_with_context
    code=ErrorCode.DATABASE_ERROR,
E   AttributeError: type object 'ErrorCode' has no attribute 'DATABASE_ERROR'
_______________ TestNetraExceptions.test_netra_exception_basic ________________
app\tests\core\test_error_handling.py:108: in test_netra_exception_basic
    assert str(exc) == "INTERNAL_ERROR: Test error"
app\core\exceptions.py:109: in __str__
    return f"{self.error_details.code.value}: {self.error_details.message}"
E   AttributeError: 'str' object has no attribute 'value'
________________ TestNetraExceptions.test_token_expired_error _________________
app\tests\core\test_error_handling.py:166: in test_token_expired_error
    exc = TokenExpiredError()
app\core\exceptions.py:176: in __init__
    super().__init__(
app\core\exceptions.py:150: in __init__
    super().__init__(
E   TypeError: app.core.exceptions.NetraException.__init__() got multiple values for keyword argument 'code'
_______________ TestNetraExceptions.test_record_not_found_error _______________
app\tests\core\test_error_handling.py:180: in test_record_not_found_error
    exc = RecordNotFoundError("User", "123")
app\core\exceptions.py:231: in __init__
    super().__init__(
app\core\exceptions.py:202: in __init__
    super().__init__(
E   TypeError: app.core.exceptions.NetraException.__init__() got multiple values for keyword argument 'code'
_________________ TestNetraExceptions.test_llm_request_error __________________
app\tests\core\test_error_handling.py:196: in test_llm_request_error
    exc = LLMRequestError("openai", "gpt-4")
app\core\exceptions.py:350: in __init__
    super().__init__(
app\core\exceptions.py:331: in __init__
    super().__init__(
E   TypeError: app.core.exceptions.NetraException.__init__() got multiple values for keyword argument 'code'
________________ TestErrorHandler.test_handle_netra_exception _________________
app\tests\core\test_error_handling.py:221: in test_handle_netra_exception
    response = handler.handle_exception(exc)
app\core\error_handlers.py:81: in handle_exception
    return self._handle_netra_exception(exc, trace_id, request_id)
app\core\error_handlers.py:110: in _handle_netra_exception
    self._log_error(exc, exc.error_details.severity)
app\core\error_handlers.py:247: in _log_error
    self._logger.info(f"Low severity error: {exc}")
app\core\exceptions.py:109: in __str__
    return f"{self.error_details.code.value}: {self.error_details.message}"
E   AttributeError: 'str' object has no attribute 'value'
___________ TestErrorHandler.test_handle_pydantic_validation_error ____________
app\tests\core\test_error_handling.py:241: in test_handle_pydantic_validation_error
    response = handler._handle_pydantic_validation_error(exc, "trace-123", "req-123")
app\core\error_handlers.py:146: in _handle_pydantic_validation_error
    timestamp=ErrorDetails().timestamp.isoformat(),
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorDetails
E   code
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
E   message
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
------------------------------ Captured log call ------------------------------
WARNING  app.core.error_handlers:error_handlers.py:135 Validation error: ['field1: field required', 'field2: invalid format']
___________ TestErrorHandler.test_handle_sqlalchemy_integrity_error ___________
app\tests\core\test_error_handling.py:253: in test_handle_sqlalchemy_integrity_error
    response = handler._handle_sqlalchemy_error(exc, "trace-123", "req-123")
app\core\error_handlers.py:166: in _handle_sqlalchemy_error
    timestamp=ErrorDetails().timestamp.isoformat(),
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorDetails
E   code
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
E   message
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
------------------------------ Captured log call ------------------------------
WARNING  app.core.error_handlers:error_handlers.py:159 Database integrity error: (builtins.str) orig
[SQL: statement]
[parameters: 'params']
(Background on this error at: https://sqlalche.me/e/20/gkpj)
_________________ TestErrorHandler.test_handle_http_exception _________________
app\tests\core\test_error_handling.py:263: in test_handle_http_exception
    response = handler._handle_http_exception(exc, "trace-123", "req-123")
app\core\error_handlers.py:210: in _handle_http_exception
    timestamp=ErrorDetails().timestamp.isoformat(),
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorDetails
E   code
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
E   message
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
------------------------------ Captured log call ------------------------------
WARNING  app.core.error_handlers:error_handlers.py:202 HTTP exception 404: Not found
_______________ TestErrorHandler.test_handle_unknown_exception ________________
app\tests\core\test_error_handling.py:274: in test_handle_unknown_exception
    response = handler._handle_unknown_exception(exc, "trace-123", "req-123")
app\core\error_handlers.py:233: in _handle_unknown_exception
    timestamp=ErrorDetails().timestamp.isoformat(),
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorDetails
E   code
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
E   message
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
---------------------------- Captured stdout call -----------------------------
[32m2025-08-10 06:50:12.260[0m | [31mERROR   [0m | [36mlogging[0m:[36mcallHandlers[0m:[36m1762[0m - [31mUnhandled exception: Unknown error[0m
------------------------------ Captured log call ------------------------------
ERROR    app.core.error_handlers:error_handlers.py:222 Unhandled exception: Unknown error
NoneType: None
__________ TestErrorHandlerFunctions.test_handle_exception_function ___________
app\tests\core\test_error_handling.py:385: in test_handle_exception_function
    response = handle_exception(exc)
app\core\error_handlers.py:294: in handle_exception
    return _error_handler.handle_exception(exc, request, trace_id)
app\core\error_handlers.py:81: in handle_exception
    return self._handle_netra_exception(exc, trace_id, request_id)
app\core\error_handlers.py:110: in _handle_netra_exception
    self._log_error(exc, exc.error_details.severity)
app\core\error_handlers.py:247: in _log_error
    self._logger.info(f"Low severity error: {exc}")
app\core\exceptions.py:109: in __str__
    return f"{self.error_details.code.value}: {self.error_details.message}"
E   AttributeError: 'str' object has no attribute 'value'
___________ TestErrorHandlerFunctions.test_netra_exception_handler ____________
app\tests\core\test_error_handling.py:401: in test_netra_exception_handler
    response = await netra_exception_handler(request, exc)
app\core\error_handlers.py:306: in netra_exception_handler
    error_response = handle_exception(exc, request)
app\core\error_handlers.py:294: in handle_exception
    return _error_handler.handle_exception(exc, request, trace_id)
app\core\error_handlers.py:81: in handle_exception
    return self._handle_netra_exception(exc, trace_id, request_id)
app\core\error_handlers.py:110: in _handle_netra_exception
    self._log_error(exc, exc.error_details.severity)
app\core\error_handlers.py:247: in _log_error
    self._logger.info(f"Low severity error: {exc}")
app\core\exceptions.py:109: in __str__
    return f"{self.error_details.code.value}: {self.error_details.message}"
E   AttributeError: 'str' object has no attribute 'value'
----------------------------- Captured log setup ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
_________ TestErrorHandlerFunctions.test_validation_exception_handler _________
app\tests\core\test_error_handling.py:414: in test_validation_exception_handler
    response = await validation_exception_handler(request, exc)
app\core\error_handlers.py:317: in validation_exception_handler
    error_response = handle_exception(exc, request)
app\core\error_handlers.py:294: in handle_exception
    return _error_handler.handle_exception(exc, request, trace_id)
app\core\error_handlers.py:85: in handle_exception
    return self._handle_pydantic_validation_error(exc, trace_id, request_id)
app\core\error_handlers.py:146: in _handle_pydantic_validation_error
    timestamp=ErrorDetails().timestamp.isoformat(),
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ErrorDetails
E   code
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
E   message
E     Field required [type=missing, input_value={}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
----------------------------- Captured log setup ------------------------------
DEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor
------------------------------ Captured log call ------------------------------
WARNING  app.core.error_handlers:error_handlers.py:135 Validation error: ['field: required']
============================== warnings summary ===============================
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323
  C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:298
  C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(

app\services\apex_optimizer_agent\tools\log_fetcher.py:14
  C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\v2\app\services\apex_optimizer_agent\tools\log_fetcher.py:14: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    @validator('time_range', 'data_source', pre=True)

..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628
..\..\..\..\..\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628
  C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\pydantic\_internal\_generate_schema.py:628: UserWarning: <built-in function any> is not a Python type (it may be an instance of an object), Pydantic will allow any object with no validation since we cannot even enforce that the input is an instance of the given type. To get rid of this error wrap the type with `pydantic.SkipValidation`.
    warn(

tests/core/test_error_handling.py::TestErrorDetails::test_error_details_serialization
  C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\v2\app\tests\core\test_error_handling.py:95: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    data = details.dict()

tests/core/test_error_handling.py::TestNetraExceptions::test_netra_exception_to_dict
  C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\v2\app\core\exceptions.py:106: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    return self.error_details.dict()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED app\tests\core\test_config_manager.py::TestSecretManager::test_secret_manager_client_creation_failure
FAILED app\tests\core\test_config_manager.py::TestConfigValidator::test_validate_auth_config_production_dev_secret
FAILED app\tests\core\test_config_manager.py::TestConfigManager::test_get_environment_development
FAILED app\tests\core\test_config_manager.py::TestConfigManager::test_get_environment_production
FAILED app\tests\core\test_config_manager.py::TestConfigManager::test_load_configuration_validation_failure
FAILED app\tests\core\test_config_manager.py::TestConfigurationIntegration::test_full_configuration_flow
FAILED app\tests\core\test_config_manager.py::TestConfigurationIntegration::test_configuration_error_handling
FAILED app\tests\core\test_error_handling.py::TestErrorDetails::test_error_details_with_context
FAILED app\tests\core\test_error_handling.py::TestNetraExceptions::test_netra_exception_basic
FAILED app\tests\core\test_error_handling.py::TestNetraExceptions::test_token_expired_error
FAILED app\tests\core\test_error_handling.py::TestNetraExceptions::test_record_not_found_error
FAILED app\tests\core\test_error_handling.py::TestNetraExceptions::test_llm_request_error
FAILED app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_netra_exception
FAILED app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_pydantic_validation_error
FAILED app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_sqlalchemy_integrity_error
FAILED app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_http_exception
FAILED app\tests\core\test_error_handling.py::TestErrorHandler::test_handle_unknown_exception
FAILED app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_handle_exception_function
FAILED app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_netra_exception_handler
FAILED app\tests\core\test_error_handling.py::TestErrorHandlerFunctions::test_validation_exception_handler
!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 20 failures !!!!!!!!!!!!!!!!!!!!!!!!!!
========= 20 failed, 44 passed, 147 deselected, 19 warnings in 6.15s ==========
