# Test Environment Configuration for Minimal WebSocket Testing
# NO external dependencies - for WebSocket endpoint testing only
# Created for WebSocket connectivity testing without Docker requirements

ENVIRONMENT=test
NETRA_ENV=testing

# Skip all startup checks and fixes
SKIP_STARTUP_CHECKS=true
DISABLE_STARTUP_CHECKS=true

# Service Modes - Disable external services for minimal testing
REDIS_MODE=disabled
CLICKHOUSE_MODE=disabled
LLM_MODE=disabled

# PostgreSQL Database Configuration - Use in-memory SQLite for testing
DATABASE_URL=sqlite:///test_websocket.db
POSTGRES_HOST=disabled
POSTGRES_PORT=0
POSTGRES_DB=disabled
POSTGRES_USER=disabled
POSTGRES_PASSWORD=disabled

# Redis Configuration - Disabled for minimal testing
REDIS_URL=disabled
REDIS_HOST=disabled
REDIS_PORT=0
REDIS_PASSWORD=disabled

# ClickHouse Configuration - Disabled for minimal testing
CLICKHOUSE_URL=disabled
CLICKHOUSE_HOST=disabled
CLICKHOUSE_HTTP_PORT=0
CLICKHOUSE_TCP_PORT=0
CLICKHOUSE_NATIVE_PORT=0
CLICKHOUSE_DB=disabled
CLICKHOUSE_USER=disabled
CLICKHOUSE_PASSWORD=disabled

# Auth Service Configuration - Minimal for WebSocket testing
AUTH_SERVICE_URL=http://localhost:8001
AUTH_SERVICE_ENABLED=false
AUTH_ENABLED=false

# Service ID and authentication for minimal testing
SERVICE_ID=netra-backend-test
SERVICE_SECRET=test-secret-for-minimal-websocket-testing-32chars

# Security Keys - Test environment
SECRET_KEY=test-secret-key-for-session-middleware-32chars
JWT_SECRET_KEY=test-jwt-secret-key-for-alpine-containers-256-bit
FERNET_KEY=test-fernet-key-for-encryption-32-base64-encoded=

# JWT Configuration
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7

# Google OAuth Test Configuration
GOOGLE_CLIENT_ID=test-client-id
GOOGLE_CLIENT_SECRET=test-client-secret
GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT=test-client-id
GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT=test-client-secret

# API Keys for testing
GEMINI_API_KEY=test-gemini-key
ANTHROPIC_API_KEY=test-anthropic-key
OPENAI_API_KEY=test-openai-key

# Real LLM Testing - As required by CLAUDE.md
NETRA_REAL_LLM_ENABLED=true
TEST_USE_REAL_LLM=true
USE_REAL_LLM=true
ENABLE_REAL_LLM_TESTING=true

# Service Status Flags
DEV_MODE_REDIS_ENABLED=true
DEV_MODE_CLICKHOUSE_ENABLED=true
DEV_MODE_LLM_ENABLED=true

# Test Features
ALLOW_DEV_LOGIN=true
DEBUG=true

# Backend Service Configuration
HOST=0.0.0.0
PORT=8000

# WebSocket Configuration - PRIORITY 3 FIX: Cloud-native timeout hierarchy
WEBSOCKET_CONNECTION_TIMEOUT=60
WEBSOCKET_RECV_TIMEOUT=35          # CRITICAL: 35s for cloud environments (staging/production)
WEBSOCKET_SEND_TIMEOUT=30          # Must coordinate with recv timeout
WEBSOCKET_HEARTBEAT_INTERVAL=30
WEBSOCKET_HEARTBEAT_TIMEOUT=90

# Agent Configuration - PRIORITY 3 FIX: Must be < WebSocket timeouts for coordination  
AGENT_EXECUTION_TIMEOUT=30         # CRITICAL: 30s < 35s WebSocket recv timeout
AGENT_THINKING_TIMEOUT=25
AGENT_TOOL_TIMEOUT=20
AGENT_COMPLETION_TIMEOUT=15