./scripts/add_pytest_markers.py:            if i > 0 and '@pytest.mark.' in lines[i-1]:
./scripts/add_pytest_markers.py:            marker_line = ' ' * indent + f'@pytest.mark.{marker}'
./scripts/add_pytest_markers.py:            print(f"\nProcessing {dir_pattern} -> @pytest.mark.{marker}")
./scripts/add_pytest_markers.py:            return False, f"Already has @pytest.mark.{marker} or no tests"
./scripts/add_pytest_markers.py:            return True, f"Added @pytest.mark.{marker}"
./scripts/add_test_markers.py:            if "@pytest.mark." in line:
./scripts/rapid_test_consolidation.py:- **Proper categorization**: Use @pytest.mark.{category}
./scripts/test_collection_audit.py:                    report.append(f"    - @pytest.mark.{marker}: {count}")
./test_framework/auto_splitter.py:        if "@pytest.mark." in func_content:
access_logging
agent
agent_critical
agent_events
agent_execution
agent_execution_flows
agent_execution_routing
agent_factory_testing
agent_integration
agent_orchestration
agent_state_management
agent_websocket_coordination
agents
api
api_contract
api_integration
async_safety
asyncio
audit_logging
audit_trail
audit_trails
auth
auth_critical
auth_flow
auth_required
auth_resilience
auth_service
auth_service_integration
auth_testing
auth_validation
authenticated
authentication
authentication_compliance
backend
backup_recovery
baseline
batch_processing
benchmark
broadcast_performance
bug_reproduction
business_continuity
business_critical
business_metrics
business_requirements
business_value
business_value_validation
business_workflow
capacity_planning
cascade_failure_testing
chat
chat_flow
child_context_tracking
circuit_breaker
circuit_breaker_states
class_validation
claude_commands
cleanup_critical
cleanup_error_handling
cleanup_stress
cleanup_types
cleanup_validation
cloud_run
collection_fix
compatibility
completion_tracking
compliance
compliance_validation
comprehensive
concurrency
concurrent
concurrent_cleanup
concurrent_enterprise
concurrent_isolation
concurrent_safe
concurrent_security
concurrent_websocket_validation
config
config_validation
configuration
configuration_audit
configuration_critical
configuration_drift
connection_management
consolidation_validation
context_building
context_creation
context_hierarchy
context_management
context_validation
continuous_monitoring
coordination
corpus_admin
coverage_validation
cpu_isolation
critical
cross_device_recovery
cross_platform
cross_service
cycle_31
cycle_32
cycle_33
cycle_34
cycle_35
cycle_36
cycle_37
cycle_38
cycle_39
cycle_40
data_retention
database
database_integrity
database_testing
delayed_recovery
demo_mode
deployment
deployment_critical
deprecated
dev
directory_structure
disaster_recovery
docker
duplicate_detection
e2e
e2e_auth_required
e2e_helpers
e2e_staging
edge_case
enterprise
enterprise_critical
enterprise_scaling
enterprise_security
enterprise_sso
env
env_test
environment
environment_specific
error
error_handling
error_rate_monitoring
error_recovery
error_scenarios
event_delivery
execution_context
execution_tracking
expected_failure
expected_to_fail
external_api
factory_coordination
factory_isolation
factory_metrics
factory_pattern
factory_patterns
factory_structure
fallback_prevention
fast
fast_test
filesystem_isolation
first_time_user
fixture_validation
flow_context
frontend
gcp
gcp_staging
github
github_integration
golden_path
graceful_degradation
health
health_check
heartbeat_monitoring
hierarchy_validation
high_load
id_collision_prevention
id_consistency
id_contamination
id_extraction_consistency
id_system
id_system_validation
id_validation
immutability_validation
implementation_status
import_dependencies
import_validation
infrastructure
infrastructure_dependencies
integration
integration_points
interface_violations
interservice
isolation
isolation_critical
isolation_status
issue_131
issue_135
issue_263
issue_263_fix
l3
lifecycle_management
lightweight_services
load
load_balancing
load_test
load_testing
logging_metrics
medium
memory
memory_isolation
memory_management
memory_tracking
message_context_validation
message_routing
metrics_tracking
middleware
mission_critical
mock_only
models
module_structure
monitoring
monitoring_integration
multi_tenant_isolation
multi_user
multi_user_isolation
multiuser
network_isolation
no_docker
no_mocks
no_skip
oauth
observability
orchestration
p1_critical_failure
parametrize
performance
performance_load
performance_monitoring
phase_1_pre_consolidation
phase_2_consolidation
phase_transitions
pipeline_execution
pipeline_validation
post_deployment
priority_p0
priority_p1
production
production_simulation
production_validation
pytest_fixtures
race_condition
race_condition_detection
race_condition_testing
race_conditions
rate_limiting
real_clickhouse
real_database
real_e2e
real_llm
real_redis
real_services
real_time_feedback
real_websocket
reconnection
recovery
recovery_critical
recovery_performance
recovery_security
redis
regression
regression_reproduction
reliability
reproduction
requires_auth
requires_database
requires_docker
requires_websocket
resilience
resource_isolation
resource_limits
resource_management
resource_monitoring
retry
revenue_protection
routing_validation
security
security_critical
serialization
service_connectivity
service_coordination
service_integration
session
session_integration
session_management
session_persistence
session_security
skip
skip_if_no_real_llm
skip_unless_fix_applied
skip_unless_staging
skipif
sla
slo_validation
slow
smoke
soak
ssot_compliance
ssot_delegation
ssot_ids
ssot_migration
ssot_validation
staging
staging_compatible
staging_environment
staging_only
staging_post_fix
startup
startup_cache
startup_database
startup_dependencies
startup_init
startup_services
startup_validation
state_isolation
state_management
state_persistence
stress
sub_agent_coordination
summary
supervisor_isolation
syntax_comprehensive
syntax_validation
thread_isolation
thread_safety
thread_service_testing
threading
timeout
timeout_management
token_management
token_refresh
tool_execution_workflows
tool_notifications
toolregistry
ultra_strict_isolation
undefined_test_marker_272
unified_id_manager
unit
usefixtures
user_behavior_analytics
user_engine_delegation
user_flow
user_isolation
user_journey
validation
validation_patterns
websocket
websocket_1011
websocket_auth
websocket_auth_protocol
websocket_authentication
websocket_coordination
websocket_core
websocket_critical
websocket_emitter_consolidation
websocket_errors
websocket_events
websocket_infrastructure
websocket_integration
websocket_isolation
websocket_performance
websocket_race_conditions
websocket_regression
websocket_reliability
websocket_resilience
websocket_security
websocket_service
websocket_staging
websocket_threading
websocket_unified_auth
websocket_validation
windows_deadlock
workflow_coordination
workflow_execution
workflow_logic
workflow_validation
xfail
