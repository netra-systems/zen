# Cloud Build configuration for Netra Apex CI/CD
# Builds and deploys all services to GCP

timeout: '3600s'
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
  _REGION: us-central1
  _ARTIFACT_REGISTRY: ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/netra-containers

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Build Backend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile.backend'
      - '-t'
      - '${_ARTIFACT_REGISTRY}/backend:${SHORT_SHA}'
      - '-t'
      - '${_ARTIFACT_REGISTRY}/backend:latest'
      - '.'
    dir: '/'

  # Step 2: Build Frontend Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile.frontend.optimized'
      - '-t'
      - '${_ARTIFACT_REGISTRY}/frontend:${SHORT_SHA}'
      - '-t'
      - '${_ARTIFACT_REGISTRY}/frontend:latest'
      - '.'
    dir: '/'

  # Step 3: Build Auth Service Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-auth'
    args:
      - 'build'
      - '-f'
      - 'Dockerfile.auth'
      - '-t'
      - '${_ARTIFACT_REGISTRY}/auth:${SHORT_SHA}'
      - '-t'
      - '${_ARTIFACT_REGISTRY}/auth:latest'
      - '.'
    dir: '/'

  # Step 4: Push Backend Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - '--all-tags'
      - '${_ARTIFACT_REGISTRY}/backend'
    waitFor: ['build-backend']

  # Step 5: Push Frontend Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - '--all-tags'
      - '${_ARTIFACT_REGISTRY}/frontend'
    waitFor: ['build-frontend']

  # Step 6: Push Auth Image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-auth'
    args:
      - 'push'
      - '--all-tags'
      - '${_ARTIFACT_REGISTRY}/auth'
    waitFor: ['build-auth']

  # Step 7: Run Database Migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'run-migrations'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Running database migrations..."
        gcloud run jobs execute netra-db-migration \
          --region=${_REGION} \
          --wait || echo "Migration job not configured yet"
    waitFor: ['push-backend']

  # Step 8: Deploy Backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    args:
      - 'run'
      - 'deploy'
      - 'netra-backend'
      - '--image=${_ARTIFACT_REGISTRY}/backend:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--cpu=2'
      - '--memory=4Gi'
      - '--min-instances=1'
      - '--max-instances=10'
      - '--concurrency=100'
      - '--timeout=300'
      - '--service-account=netra-cloudrun@${_PROJECT_ID}.iam.gserviceaccount.com'
      - '--update-env-vars=ENVIRONMENT=production,GCP_PROJECT_ID=${_PROJECT_ID}'
    waitFor: ['push-backend', 'run-migrations']

  # Step 9: Deploy Frontend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-frontend'
    args:
      - 'run'
      - 'deploy'
      - 'netra-frontend'
      - '--image=${_ARTIFACT_REGISTRY}/frontend:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=3000'
      - '--cpu=1'
      - '--memory=2Gi'
      - '--min-instances=1'
      - '--max-instances=5'
      - '--concurrency=100'
      - '--timeout=60'
      - '--service-account=netra-cloudrun@${_PROJECT_ID}.iam.gserviceaccount.com'
    waitFor: ['push-frontend']

  # Step 10: Deploy Auth Service to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-auth'
    args:
      - 'run'
      - 'deploy'
      - 'netra-auth'
      - '--image=${_ARTIFACT_REGISTRY}/auth:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=1'
      - '--max-instances=10'
      - '--concurrency=100'
      - '--timeout=60'
      - '--service-account=netra-cloudrun@${_PROJECT_ID}.iam.gserviceaccount.com'
    waitFor: ['push-auth']

  # Step 11: Update Traffic Routing
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'update-traffic'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Updating traffic to new revision..."
        gcloud run services update-traffic netra-backend \
          --region=${_REGION} \
          --to-latest
        gcloud run services update-traffic netra-frontend \
          --region=${_REGION} \
          --to-latest
        gcloud run services update-traffic netra-auth \
          --region=${_REGION} \
          --to-latest
    waitFor: ['deploy-backend', 'deploy-frontend', 'deploy-auth']

  # Step 12: Smoke Test
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'smoke-test'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Running smoke tests..."
        BACKEND_URL=$(gcloud run services describe netra-backend --region=${_REGION} --format='value(status.url)')
        FRONTEND_URL=$(gcloud run services describe netra-frontend --region=${_REGION} --format='value(status.url)')
        
        echo "Testing backend health..."
        curl -f $${BACKEND_URL}/health || exit 1
        
        echo "Testing frontend..."
        curl -f $${FRONTEND_URL} || exit 1
        
        echo "All smoke tests passed!"
    waitFor: ['update-traffic']

images:
  - '${_ARTIFACT_REGISTRY}/backend:${SHORT_SHA}'
  - '${_ARTIFACT_REGISTRY}/backend:latest'
  - '${_ARTIFACT_REGISTRY}/frontend:${SHORT_SHA}'
  - '${_ARTIFACT_REGISTRY}/frontend:latest'
  - '${_ARTIFACT_REGISTRY}/auth:${SHORT_SHA}'
  - '${_ARTIFACT_REGISTRY}/auth:latest'