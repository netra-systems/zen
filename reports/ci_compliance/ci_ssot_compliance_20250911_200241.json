{
  "validation_summary": {
    "passed": false,
    "exit_code": 2,
    "validation_timestamp": "2025-09-11T20:02:37.462305",
    "total_files_checked": 3715,
    "critical_violations": 1,
    "error_violations": 20,
    "warning_violations": 52
  },
  "config": {
    "mode": "deployment-gate",
    "compliance_level": "strict",
    "environment": "unknown",
    "branch": null,
    "commit_sha": null,
    "pr_number": null
  },
  "violations": [
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/dependencies.py",
      "line": 369,
      "content": "                f\"\ud83d\udea8 FALLBACK_DEBUG: Auth trace logger not available. \"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/auth_dependencies.py",
      "line": 95,
      "content": "    \"\"\"System database session that bypasses authentication.",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/clients/auth_client_cache.py",
      "line": 329,
      "content": "        \"\"\"Backward compatibility method for legacy auth flow.",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/clients/auth_client_core.py",
      "line": 320,
      "content": "                logger.info(\"Loaded SERVICE_SECRET from environment as auth client fallback\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/clients/auth_client_core.py",
      "line": 584,
      "content": "        logger.debug(\"SSOT COMPLIANCE: Rejecting fallback validation - auth service is single source of truth\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/middleware/fastapi_auth_middleware.py",
      "line": 121,
      "content": "                    logger.warning(f\"Using fallback auth for {request.url.path}: {validation_result.get('source', 'unknown')}\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/middleware/fastapi_auth_middleware.py",
      "line": 168,
      "content": "        request.state.auth_fallback_used = validation_result.get(\"fallback_used\", False)",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/middleware/fastapi_auth_middleware.py",
      "line": 189,
      "content": "            response.headers[\"X-Auth-Fallback-Source\"] = validation_result.get(\"source\", \"unknown\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/database/__init__.py",
      "line": 146,
      "content": "    Get system database session that bypasses authentication.",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/database/request_scoped_session_factory.py",
      "line": 258,
      "content": "                logger.info(f\"Using system database session for user {user_id} - bypassing authentication\")",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/config_dependencies.py",
      "line": 478,
      "content": "            \"fallback_warning\": \"JIRA email authentication disabled\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/config_dependencies.py",
      "line": 538,
      "content": "            \"fallback_warning\": \"AWS S3 authentication disabled\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/config_dependencies.py",
      "line": 633,
      "content": "            \"fallback_warning\": \"Email authentication disabled - may fail to send\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/config_dependencies.py",
      "line": 644,
      "content": "            \"fallback_warning\": \"Email password not set - authentication will fail\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/config_dependencies.py",
      "line": 696,
      "content": "            \"fallback_warning\": \"Google OAuth disabled - Google login unavailable\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/config_dependencies.py",
      "line": 707,
      "content": "            \"fallback_warning\": \"GitHub OAuth disabled - GitHub login unavailable\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/middleware_setup.py",
      "line": 356,
      "content": "                logger.info(f\"GCP Authentication Context Middleware installed (fallback import) for {environment}\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/middleware_setup.py",
      "line": 358,
      "content": "                logger.debug(f\"GCP Auth Context middleware skipped (fallback), environment: {environment}\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/schemas/auth_types.py",
      "line": 165,
      "content": "        when password is missing for local auth, allowing fallback behaviors.",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/schemas/auth_types.py",
      "line": 173,
      "content": "                \"Password missing for local auth. Consider enabling fallback auth methods.\",",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/ssot_service_initializer.py",
      "line": 7,
      "content": "CRITICAL: This eliminates fallback handler creation by providing authentic",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/service_initialization_manager.py",
      "line": 7,
      "content": "CRITICAL: This replaces the dumb fallback handler creation with authentic",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_emitter.py",
      "line": 820,
      "content": "        Escalate failed authentication events to fallback channels.",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_emitter.py",
      "line": 828,
      "content": "                f\"ESCALATING TO FALLBACK - Authentication event {event_type} \"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_emitter.py",
      "line": 1115,
      "content": "        self.auth_metrics['fallback_escalations'] += 1",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_emitter.py",
      "line": 1137,
      "content": "        Send authentication event via fallback channel.",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_emitter.py",
      "line": 1148,
      "content": "                f\"Using fallback channel for auth event {event_type} \"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_emitter.py",
      "line": 1159,
      "content": "                f\"AUTH FALLBACK TRIGGERED: {event_type} for user {self.user_id} - \"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_websocket_auth.py",
      "line": 58,
      "content": "    determine if this is an E2E test that should bypass strict authentication.",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_websocket_auth.py",
      "line": 136,
      "content": "            logger.info(\"DEMO MODE: Authentication bypass disabled, using full auth flow\")",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_websocket_auth.py",
      "line": 1407,
      "content": "    \"WebSocketAuthenticator\",  # Legacy alias",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/unified_websocket_auth.py",
      "line": 1408,
      "content": "    \"UnifiedWebSocketAuth\",  # Legacy alias",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/user_context_extractor.py",
      "line": 223,
      "content": "                logger.info(\"\ud83d\udd04 FALLBACK: Using auth_client_core for token validation\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/websocket_core/user_context_extractor.py",
      "line": 251,
      "content": "                payload[\"source\"] = \"auth_service_fallback\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/monitoring/configuration_drift_monitor.py",
      "line": 134,
      "content": "            logger.error(\"Could not import SSOT OAuth validation - falling back to legacy implementation\")",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/monitoring/configuration_drift_monitor.py",
      "line": 136,
      "content": "            logger.error(f\"SSOT OAuth validation failed: {e} - falling back to legacy implementation\")",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/monitoring/configuration_drift_monitor.py",
      "line": 288,
      "content": "                \"e2e_bypass_used\": auth_result.metadata.get(\"e2e_bypass\", False) if auth_result else False,",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_proxy.py",
      "line": 168,
      "content": "    \"\"\"HTTP proxy to auth service - fallback for endpoints not handled by auth client.\"\"\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 134,
      "content": "    def _create_e2e_bypass_auth_result(self, token: str, e2e_context: Dict[str, Any]) -> AuthResult:",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 155,
      "content": "        logger.info(f\"E2E BYPASS: Creating mock auth result for user {user_id}\")",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 493,
      "content": "                logger.info(\"E2E BYPASS: Using mock authentication for E2E testing\")",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 494,
      "content": "                auth_result = self._create_e2e_bypass_auth_result(token, e2e_context)",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 568,
      "content": "                    logger.debug(\"UNIFIED AUTH: JWT token found in query parameters (fallback)\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 652,
      "content": "                fallback_user_id = getattr(auth_result, 'user_id', 'fallback_user') or 'fallback_user'",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 655,
      "content": "                logger.warning(f\"UNIFIED AUTH: Attempting fallback UserExecutionContext creation for user {fallback_user_id[:8]}...\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 665,
      "content": "                logger.info(f\"UNIFIED AUTH: Successfully created fallback UserExecutionContext: {fallback_context.websocket_client_id}\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/unified_authentication_service.py",
      "line": 669,
      "content": "                logger.critical(f\"UNIFIED AUTH: Fallback UserExecutionContext creation also failed: {fallback_error}\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/user_auth_service.py",
      "line": 35,
      "content": "    \"\"\"Legacy authenticate function.\"\"\"",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/auth_failover_service.py",
      "line": 142,
      "content": "        logger.info(\"Legacy conflict resolution requested, but using unified auth - no conflicts to resolve\")",
      "type": "legacy_auth_patterns",
      "description": "Legacy authentication patterns outside SSOT",
      "suggestion": "Migrate to UnifiedAuthInterface SSOT pattern",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - Legacy auth removal",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/security/threat_detection.py",
      "line": 47,
      "content": "    AUTHENTICATION_BYPASS = \"authentication_bypass\"",
      "type": "websocket_auth_bypass",
      "description": "WebSocket authentication bypass mechanism",
      "suggestion": "Remove auth bypass, enforce proper WebSocket authentication",
      "severity": "ERROR",
      "issue_reference": "WebSocket security - No auth bypass allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/auth/token_security_validator.py",
      "line": 194,
      "content": "            decoded = jwt.decode(token, options={\"verify_signature\": False})",
      "type": "jwt_options_no_verify",
      "description": "JWT options disable signature verification - CRITICAL VULNERABILITY",
      "suggestion": "Remove JWT decode options bypassing signature verification",
      "severity": "CRITICAL",
      "issue_reference": "GitHub Issue #300 - WebSocket JWT bypass",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/services/auth/token_security_validator.py",
      "line": 194,
      "content": "            decoded = jwt.decode(token, options={\"verify_signature\": False})",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/debug_helpers.py",
      "line": 22,
      "content": "        \"\"\"Get auth service URL from environment with fallback logic.\"\"\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 119,
      "content": "    \"\"\"Get fallback URLs for auth service and frontend.\"\"\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 122,
      "content": "def build_fallback_endpoints() -> AuthEndpoints:",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 123,
      "content": "    \"\"\"Build fallback authentication endpoints.\"\"\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 124,
      "content": "    auth_service_url, frontend_url = _get_fallback_urls()",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 132,
      "content": "def _create_fallback_config(fallback_endpoints: AuthEndpoints, frontend_url: str) -> AuthConfigResponse:",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 137,
      "content": "        endpoints=fallback_endpoints, authorized_javascript_origins=[frontend_url],",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 141,
      "content": "def create_fallback_response() -> AuthConfigResponse:",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/routes/auth_routes/config_handler.py",
      "line": 142,
      "content": "    \"\"\"Create fallback authentication configuration response.\"\"\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/configuration/validator.py",
      "line": 134,
      "content": "        errors.extend(self._collect_auth_errors_with_fallbacks(config))",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/configuration/validator.py",
      "line": 253,
      "content": "    def _collect_auth_errors_with_fallbacks(self, config: AppConfig) -> List[str]:",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/configuration/validator.py",
      "line": 254,
      "content": "        \"\"\"Collect auth validation errors with fallback handling.\"\"\"",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/configuration/validator.py",
      "line": 258,
      "content": "            self._logger.warning(f\"Auth validation failed with fallback: {e}\")",
      "type": "auth_fallback_logic",
      "description": "Authentication fallback logic bypassing SSOT",
      "suggestion": "Remove fallbacks, implement proper error handling with UnifiedAuthInterface",
      "severity": "WARNING",
      "issue_reference": "SSOT compliance - No auth fallbacks allowed",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 15,
      "content": "import jwt",
      "type": "direct_jwt_import",
      "description": "Direct JWT library import bypassing UnifiedAuthInterface SSOT",
      "suggestion": "Use UnifiedAuthInterface instead of direct JWT operations",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - UnifiedAuthInterface required",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 94,
      "content": "            test_token = jwt.encode(payload, self.jwt_secret, algorithm=self.jwt_algorithm)",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 155,
      "content": "            expired_token = jwt.encode(expired_payload, self.jwt_secret, algorithm=self.jwt_algorithm)",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 219,
      "content": "            valid_token = jwt.encode(payload, self.jwt_secret, algorithm=self.jwt_algorithm)",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 289,
      "content": "            service_token = jwt.encode(service_payload, self.jwt_secret, algorithm=self.jwt_algorithm)",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 336,
      "content": "            decoded = jwt.decode(token, self.jwt_secret, algorithms=[self.jwt_algorithm])",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 353,
      "content": "            decoded = jwt.decode(token, self.jwt_secret, algorithms=[self.jwt_algorithm])",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    },
    {
      "file": "/Users/rindhujajohnson/Netra/GitHub/netra-apex/netra_backend/app/core/cross_service_validators/security_validators.py",
      "line": 369,
      "content": "            decoded = jwt.decode(token, self.jwt_secret, algorithms=[self.jwt_algorithm])",
      "type": "direct_jwt_operations",
      "description": "Direct JWT operations bypassing auth service SSOT",
      "suggestion": "Use auth service endpoints through UnifiedAuthInterface",
      "severity": "ERROR",
      "issue_reference": "SSOT compliance - Auth service is exclusive JWT source",
      "business_impact": null
    }
  ],
  "recommendations": [
    "\ud83d\udea8 IMMEDIATE ACTION: Fix critical security violations before deployment",
    "Review resolved GitHub issues (e.g., Issue #300) to prevent regression",
    "\ud83d\udd27 Fix SSOT violations by using UnifiedAuthInterface for auth operations",
    "Remove direct JWT operations bypassing auth service",
    "\ud83d\udcdd Review warning violations for architectural improvements",
    "\ud83d\udd04 Address regression violations - these are newly introduced issues"
  ],
  "blocking_reasons": [
    "Critical violations: 1 (max: 0)",
    "Error violations: 20 (max: 0)",
    "Warning violations: 52 (max: 0)",
    "Regression violations: 59 (blocking enabled)"
  ],
  "business_impact": {
    "revenue_protection": "$500K+ ARR protected from security vulnerabilities",
    "compliance_status": "CRITICAL"
  }
}