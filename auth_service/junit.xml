<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="10" failures="40" skipped="23" tests="281" time="57.314" timestamp="2025-08-30T06:58:51.938362-07:00" hostname="Anthony"><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_google_oauth_client_id_missing_staging_regression" time="0.777" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_google_oauth_client_secret_missing_staging_regression" time="0.016" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_oauth_provider_initialization_failure_regression" time="0.020" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_oauth_provider_with_proper_staging_credentials" time="0.032" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_oauth_manager_integration_with_staging_credentials" time="0.023" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthServiceIntegrationRegression" name="test_auth_service_oauth_providers_availability" time="0.023" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthServiceIntegrationRegression" name="test_oauth_login_flow_functional_with_credentials" time="0.014" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthServiceIntegrationRegression" name="test_oauth_callback_handling_with_credentials" time="0.018" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_connection_with_docker_compose_url" time="0.030" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_connection_initialization_with_database_url" time="4.299"><failure message="RuntimeError: Auth database initialization failed: Database connection failed: [WinError 1225] The remote computer refused the network connection">E   ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:
E   RuntimeError: Database connection failed: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:
E   RuntimeError: Auth database initialization failed: Database connection failed: [WinError 1225] The remote computer refused the network connection</failure></testcase><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_connection_with_postgres_vars" time="0.025"><failure message="AssertionError: assert 'testuser' in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'">E   AssertionError: assert 'testuser' in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'</failure></testcase><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_connection_timeout_handling" time="1.313" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_connection_retry_logic" time="4.123"><failure message="RuntimeError: Auth database initialization failed: Database connection failed: [WinError 1225] The remote computer refused the network connection">E   ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:
E   RuntimeError: Database connection failed: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:
E   RuntimeError: Auth database initialization failed: Database connection failed: [WinError 1225] The remote computer refused the network connection</failure></testcase><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_database_url_format_conversion" time="0.020" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseConnection" name="test_auth_config_database_url_construction" time="0.009"><failure message="AttributeError: 'IsolatedEnvironment' object has no attribute 'clear'">E   AttributeError: 'IsolatedEnvironment' object has no attribute 'clear'</failure></testcase><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseManager" name="test_get_auth_database_url_async" time="0.016" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseManager" name="test_get_auth_database_url_sync" time="0.032" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseManager" name="test_create_async_engine_with_url" time="0.050" /><testcase classname="tests.integration.test_database_connection.TestAuthDatabaseManager" name="test_create_async_engine_without_url" time="0.022" /><testcase classname="tests.integration.test_database_connection.TestDatabaseURLValidation" name="test_validate_auth_url" time="0.013" /><testcase classname="tests.integration.test_database_connection.TestDatabaseURLValidation" name="test_environment_detection" time="0.015"><failure message="AttributeError: 'IsolatedEnvironment' object has no attribute 'clear'">E   AttributeError: 'IsolatedEnvironment' object has no attribute 'clear'</failure></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_complete_refresh_flow" time="0.059"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_refresh_with_redis_session" time="0.054"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_concurrent_refresh_requests" time="0.059"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_refresh_with_database_user_lookup" time="0.096"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_refresh_token_expiry_boundary" time="0.070"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_refresh_with_all_field_name_variants" time="0.064"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_refresh_error_responses" time="0.059"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenIntegration" name="test_refresh_maintains_user_permissions" time="0.069"><error message="failed on setup with &quot;TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'&quot;">E   TypeError: AsyncClient.__init__() got an unexpected keyword argument 'app'</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenCleanup" name="test_logout_blacklists_refresh_token" time="0.001"><error message="failed on setup with &quot;file C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py, line 390&#10;      async def test_logout_blacklists_refresh_token(self, auth_client):&#10;          &quot;&quot;&quot;Test that logout blacklists both access and refresh tokens&quot;&quot;&quot;&#10;          from auth_service.auth_core.core.jwt_handler import JWTHandler&#10;&#10;          jwt_handler = JWTHandler()&#10;&#10;          # Create tokens&#10;          access_token = jwt_handler.create_access_token(&#10;              user_id=&quot;test-user&quot;,&#10;              email=&quot;test@example.com&quot;&#10;          )&#10;          refresh_token = jwt_handler.create_refresh_token(&quot;test-user&quot;)&#10;&#10;          # Logout&#10;          logout_response = await auth_client.post(&#10;              &quot;/auth/logout&quot;,&#10;              headers={&quot;Authorization&quot;: f&quot;Bearer {access_token}&quot;}&#10;          )&#10;          assert logout_response.status_code == 200&#10;&#10;          # Try to use refresh token - should fail&#10;          refresh_response = await auth_client.post(&#10;              &quot;/auth/refresh&quot;,&#10;              json={&quot;refresh_token&quot;: refresh_token}&#10;          )&#10;          assert refresh_response.status_code == 401&#10;E       fixture 'auth_client' not found&#10;&gt;       available fixtures: _class_scoped_runner, _function_scoped_runner, _module_scoped_runner, _package_scoped_runner, _session_faker, _session_scoped_runner, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, clean_environment, common_test_user, cov, docker_test_manager, doctest_namespace, e2e_logger, e2e_services, e2e_test_config, event_loop, event_loop_policy, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, initialize_test_database, initialized_test_db, isolated_test_users, json_metadata, metadata, mock_agent_service, mock_agent_supervisor, mock_auth_client, mock_auth_redis, mock_background_task_manager, mock_clickhouse_client, mock_database_factory, mock_jwt_handler, mock_key_manager, mock_llm_manager, mock_oauth_provider, mock_permission_system, mock_redis_client, mock_redis_manager, mock_security_service, mock_session_manager, mock_tool_dispatcher, mock_websocket_manager, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_monitor, pytestconfig, real_llm_config, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_data, service_urls, session_mocker, test_db_session, test_services, test_user_data, test_user_token, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py:390&quot;">file C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py, line 390
      async def test_logout_blacklists_refresh_token(self, auth_client):
          """Test that logout blacklists both access and refresh tokens"""
          from auth_service.auth_core.core.jwt_handler import JWTHandler

          jwt_handler = JWTHandler()

          # Create tokens
          access_token = jwt_handler.create_access_token(
              user_id="test-user",
              email="test@example.com"
          )
          refresh_token = jwt_handler.create_refresh_token("test-user")

          # Logout
          logout_response = await auth_client.post(
              "/auth/logout",
              headers={"Authorization": f"Bearer {access_token}"}
          )
          assert logout_response.status_code == 200

          # Try to use refresh token - should fail
          refresh_response = await auth_client.post(
              "/auth/refresh",
              json={"refresh_token": refresh_token}
          )
          assert refresh_response.status_code == 401
E       fixture 'auth_client' not found
&gt;       available fixtures: _class_scoped_runner, _function_scoped_runner, _module_scoped_runner, _package_scoped_runner, _session_faker, _session_scoped_runner, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, clean_environment, common_test_user, cov, docker_test_manager, doctest_namespace, e2e_logger, e2e_services, e2e_test_config, event_loop, event_loop_policy, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, initialize_test_database, initialized_test_db, isolated_test_users, json_metadata, metadata, mock_agent_service, mock_agent_supervisor, mock_auth_client, mock_auth_redis, mock_background_task_manager, mock_clickhouse_client, mock_database_factory, mock_jwt_handler, mock_key_manager, mock_llm_manager, mock_oauth_provider, mock_permission_system, mock_redis_client, mock_redis_manager, mock_security_service, mock_session_manager, mock_tool_dispatcher, mock_websocket_manager, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_monitor, pytestconfig, real_llm_config, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_data, service_urls, session_mocker, test_db_session, test_services, test_user_data, test_user_token, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py:390</error></testcase><testcase classname="tests.integration.test_refresh_integration.TestRefreshTokenCleanup" name="test_old_refresh_token_invalidated_after_use" time="0.002"><error message="failed on setup with &quot;file C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py, line 417&#10;      async def test_old_refresh_token_invalidated_after_use(self, auth_client):&#10;          &quot;&quot;&quot;Test that refresh tokens are single-use&quot;&quot;&quot;&#10;          from auth_service.auth_core.core.jwt_handler import JWTHandler&#10;&#10;          jwt_handler = JWTHandler()&#10;          refresh_token = jwt_handler.create_refresh_token(&quot;test-user&quot;)&#10;&#10;          # First refresh should succeed&#10;          response1 = await auth_client.post(&#10;              &quot;/auth/refresh&quot;,&#10;              json={&quot;refresh_token&quot;: refresh_token}&#10;          )&#10;          assert response1.status_code == 200&#10;&#10;          # Second refresh with same token should fail&#10;          response2 = await auth_client.post(&#10;              &quot;/auth/refresh&quot;,&#10;              json={&quot;refresh_token&quot;: refresh_token}&#10;          )&#10;          assert response2.status_code == 401&#10;E       fixture 'auth_client' not found&#10;&gt;       available fixtures: _class_scoped_runner, _function_scoped_runner, _module_scoped_runner, _package_scoped_runner, _session_faker, _session_scoped_runner, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, clean_environment, common_test_user, cov, docker_test_manager, doctest_namespace, e2e_logger, e2e_services, e2e_test_config, event_loop, event_loop_policy, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, initialize_test_database, initialized_test_db, isolated_test_users, json_metadata, metadata, mock_agent_service, mock_agent_supervisor, mock_auth_client, mock_auth_redis, mock_background_task_manager, mock_clickhouse_client, mock_database_factory, mock_jwt_handler, mock_key_manager, mock_llm_manager, mock_oauth_provider, mock_permission_system, mock_redis_client, mock_redis_manager, mock_security_service, mock_session_manager, mock_tool_dispatcher, mock_websocket_manager, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_monitor, pytestconfig, real_llm_config, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_data, service_urls, session_mocker, test_db_session, test_services, test_user_data, test_user_token, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py:417&quot;">file C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py, line 417
      async def test_old_refresh_token_invalidated_after_use(self, auth_client):
          """Test that refresh tokens are single-use"""
          from auth_service.auth_core.core.jwt_handler import JWTHandler

          jwt_handler = JWTHandler()
          refresh_token = jwt_handler.create_refresh_token("test-user")

          # First refresh should succeed
          response1 = await auth_client.post(
              "/auth/refresh",
              json={"refresh_token": refresh_token}
          )
          assert response1.status_code == 200

          # Second refresh with same token should fail
          response2 = await auth_client.post(
              "/auth/refresh",
              json={"refresh_token": refresh_token}
          )
          assert response2.status_code == 401
E       fixture 'auth_client' not found
&gt;       available fixtures: _class_scoped_runner, _function_scoped_runner, _module_scoped_runner, _package_scoped_runner, _session_faker, _session_scoped_runner, anyio_backend, anyio_backend_name, anyio_backend_options, auth_headers, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, capteesys, class_mocker, clean_environment, common_test_user, cov, docker_test_manager, doctest_namespace, e2e_logger, e2e_services, e2e_test_config, event_loop, event_loop_policy, extra, extras, faker, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, include_metadata_in_junit_xml, initialize_test_database, initialized_test_db, isolated_test_users, json_metadata, metadata, mock_agent_service, mock_agent_supervisor, mock_auth_client, mock_auth_redis, mock_background_task_manager, mock_clickhouse_client, mock_database_factory, mock_jwt_handler, mock_key_manager, mock_llm_manager, mock_oauth_provider, mock_permission_system, mock_redis_client, mock_redis_manager, mock_security_service, mock_session_manager, mock_tool_dispatcher, mock_websocket_manager, mocker, module_mocker, monkeypatch, no_cover, package_mocker, performance_monitor, pytestconfig, real_llm_config, record_property, record_testsuite_property, record_xml_attribute, recwarn, sample_data, service_urls, session_mocker, test_db_session, test_services, test_user_data, test_user_token, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory, worker_id
&gt;       use 'pytest --fixtures [testpath]' for help on them.

C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\integration\test_refresh_integration.py:417</error></testcase><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.gunicorn_config-file_path0]" time="0.010" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.health_check-file_path1]" time="0.005" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.health_config-file_path2]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.init_database-file_path3]" time="0.070" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.main-file_path4]" time="0.162" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.services_init-file_path5]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.__init__-file_path6]" time="0.005" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.config-file_path7]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.isolated_environment-file_path8]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.oauth_manager-file_path9]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.redis_manager-file_path10]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.secret_loader-file_path11]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.unified_auth_interface-file_path12]" time="0.005" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.__init__-file_path13]" time="0.003" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.core.jwt_cache-file_path14]" time="0.007" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.core.jwt_handler-file_path15]" time="0.017" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.core.security_manager-file_path16]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.core.session_manager-file_path17]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.core.token_validator-file_path18]" time="0.003" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.core.__init__-file_path19]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.connection-file_path20]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.connection_events-file_path21]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.database_manager-file_path22]" time="0.003" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.models-file_path23]" time="0.052" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.repository-file_path24]" time="0.056" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.staging_validation-file_path25]" time="0.007" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.database.__init__-file_path26]" time="0.026" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.models.auth_models-file_path27]" time="0.094" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.models.__init__-file_path28]" time="0.007" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.oauth.google_oauth-file_path29]" time="0.005" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.oauth.__init__-file_path30]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.performance.metrics-file_path31]" time="0.010" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.performance.startup_optimizer-file_path32]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.performance.__init__-file_path33]" time="0.018" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.routes.auth_routes-file_path34]" time="0.150" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.routes.__init__-file_path35]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.security.middleware-file_path36]" time="0.003" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.security.oauth_security-file_path37]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.security.__init__-file_path38]" time="0.006" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.services.auth_service-file_path39]" time="0.014" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.services.__init__-file_path40]" time="0.004" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.validation.pre_deployment_validator-file_path41]" time="0.005" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.validation.__init__-file_path42]" time="0.011" /><testcase classname="tests.test_all_imports" name="test_auth_service_independence" time="0.080" /><testcase classname="tests.test_all_imports" name="test_critical_auth_imports" time="0.003"><failure message="AssertionError: auth_routes is missing critical import: jwt&#10;assert ('jwt' in ['APIRouter', 'AsyncSession', 'AuthConfig', 'AuthConfigResponse', 'AuthEndpoints', 'AuthService', ...] or False)&#10; +  where ['APIRouter', 'AsyncSession', 'AuthConfig', 'AuthConfigResponse', 'AuthEndpoints', 'AuthService', ...] = dir(&lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt;)&#10; +  and   False = hasattr(&lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt;, 'jwt')">E   AssertionError: auth_routes is missing critical import: jwt
    assert ('jwt' in ['APIRouter', 'AsyncSession', 'AuthConfig', 'AuthConfigResponse', 'AuthEndpoints', 'AuthService', ...] or False)
     +  where ['APIRouter', 'AsyncSession', 'AuthConfig', 'AuthConfigResponse', 'AuthEndpoints', 'AuthService', ...] = dir(&lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt;)
     +  and   False = hasattr(&lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt;, 'jwt')</failure></testcase><testcase classname="tests.test_all_imports" name="test_jwt_secret_key_usage" time="0.064" /><testcase classname="tests.test_auth_comprehensive.TestAuthConfiguration" name="test_environment_setup" time="0.006"><failure message="AssertionError: assert 'development' == 'test'&#10;  &#10;  - test&#10;  + development">E   AssertionError: assert 'development' == 'test'
      
      - test
      + development</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestAuthConfiguration" name="test_auth_config_initialization" time="0.010" /><testcase classname="tests.test_auth_comprehensive.TestAuthConfiguration" name="test_auth_provider_enum" time="0.002" /><testcase classname="tests.test_auth_comprehensive.TestDatabaseOperations" name="test_database_connection_initialization" time="0.002" /><testcase classname="tests.test_auth_comprehensive.TestDatabaseOperations" name="test_database_connection_parameters" time="0.004" /><testcase classname="tests.test_auth_comprehensive.TestJWTTokenHandling" name="test_jwt_token_structure_validation" time="0.019" /><testcase classname="tests.test_auth_comprehensive.TestJWTTokenHandling" name="test_jwt_secret_configuration" time="0.144" /><testcase classname="tests.test_auth_comprehensive.TestJWTTokenHandling" name="test_jwt_token_generation" time="0.021" /><testcase classname="tests.test_auth_comprehensive.TestJWTTokenHandling" name="test_jwt_token_expiration" time="0.026" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_google_oauth_initiation" time="0.081" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_redirect_uri_configuration" time="0.007" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_state_csrf_protection" time="0.041" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_callback_handling" time="0.073" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_error_scenarios" time="0.030" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_staging_configuration" time="0.003" /><testcase classname="tests.test_auth_comprehensive.TestAPIEndpoints" name="test_health_endpoint" time="0.016" /><testcase classname="tests.test_auth_comprehensive.TestAPIEndpoints" name="test_auth_endpoints_head_method_support" time="0.067" /><testcase classname="tests.test_auth_comprehensive.TestAPIEndpoints" name="test_cors_headers" time="0.014" /><testcase classname="tests.test_auth_comprehensive.TestAPIEndpoints" name="test_login_endpoint_validation" time="0.106" /><testcase classname="tests.test_auth_comprehensive.TestSecurityScenarios" name="test_sql_injection_protection" time="0.075" /><testcase classname="tests.test_auth_comprehensive.TestSecurityScenarios" name="test_rate_limiting_protection" time="0.491" /><testcase classname="tests.test_auth_comprehensive.TestSecurityScenarios" name="test_password_security_validation" time="0.058" /><testcase classname="tests.test_auth_comprehensive.TestRedisOperations" name="test_redis_connection_availability" time="0.003"><skipped type="pytest.skip" message="Redis not available in test environment">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_auth_comprehensive.py:439: Redis not available in test environment</skipped></testcase><testcase classname="tests.test_auth_comprehensive.TestRedisOperations" name="test_redis_failover_graceful_degradation" time="0.015" /><testcase classname="tests.test_auth_comprehensive.TestErrorHandling" name="test_database_connection_error_handling" time="0.015" /><testcase classname="tests.test_auth_comprehensive.TestErrorHandling" name="test_invalid_jwt_token_handling" time="0.054" /><testcase classname="tests.test_auth_comprehensive.TestErrorHandling" name="test_malformed_request_handling" time="0.046" /><testcase classname="tests.test_auth_comprehensive.TestEnvironmentCompatibility" name="test_development_environment_features" time="0.016" /><testcase classname="tests.test_auth_comprehensive.TestEnvironmentCompatibility" name="test_staging_environment_features" time="0.004"><skipped type="pytest.skip" message="Test requires staging environment, current: development">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_auth_comprehensive.py:538: Test requires staging environment, current: development</skipped></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_port_configuration_sources_consistency" time="0.006" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_service_startup_completion_with_correct_port" time="0.013" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_port_environment_variable_precedence" time="0.025" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_service_url_generation_with_port_validation" time="0.013" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_hardcoded_port_detection" time="0.010" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_service_port_binding_matches_url_configuration" time="0.013" /><testcase classname="tests.test_auth_port_configuration.TestAuthServiceConfigurationValidation" name="test_configuration_validation_detects_port_mismatch" time="0.012" /><testcase classname="tests.test_auth_port_configuration.TestAuthServiceConfigurationValidation" name="test_auth_service_startup_validation" time="0.011"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthServiceConfigurationValidation" name="test_development_vs_production_port_configuration" time="0.036"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_port_configuration.TestPortConfigurationRecovery" name="test_port_configuration_error_reporting" time="0.013"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_port_configuration.TestPortConfigurationRecovery" name="test_port_configuration_auto_correction" time="0.013"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_session_persistence_edge_cases" name="test_session_persistence_during_service_restart" time="0.266"><skipped type="pytest.xfail" message="Complex asyncio event loop issue during simulated service restart - needs investigation" /></testcase><testcase classname="tests.test_auth_session_persistence_edge_cases" name="test_session_consistency_during_database_failover" time="0.018"><skipped type="pytest.xfail" message="Complex database failover simulation - asyncio event loop issues" /></testcase><testcase classname="tests.test_auth_session_persistence_edge_cases" name="test_cross_service_session_sync_consistency" time="0.017"><skipped type="pytest.xfail" message="Complex cross-service session sync simulation - asyncio issues" /></testcase><testcase classname="tests.test_auth_session_persistence_edge_cases" name="test_session_cleanup_on_user_logout" time="0.016"><skipped type="pytest.xfail" message="Session cleanup test - potential asyncio event loop issues" /></testcase><testcase classname="tests.test_critical_bugs.TestAuthRefreshEndpointBug" name="test_refresh_endpoint_body_await_bug" time="0.012" /><testcase classname="tests.test_critical_bugs.TestAuthRefreshEndpointBug" name="test_refresh_endpoint_should_use_json_method" time="0.032"><failure message="fastapi.exceptions.HTTPException: 500: Internal server error: the JSON object must be str, bytes or bytearray, not AsyncMock">E   TypeError: the JSON object must be str, bytes or bytearray, not AsyncMock

During handling of the above exception, another exception occurred:
E   fastapi.exceptions.HTTPException: 500: Internal server error: the JSON object must be str, bytes or bytearray, not AsyncMock</failure></testcase><testcase classname="tests.test_critical_bugs.TestUserModelRoleFieldBug" name="test_user_model_missing_required_fields" time="0.002" /><testcase classname="tests.test_critical_bugs.TestUserModelRoleFieldBug" name="test_user_model_needs_extension" time="0.003"><failure message="AssertionError: User model missing fields: ['role', 'is_active', 'created_at', 'updated_at']&#10;assert 4 == 0&#10; +  where 4 = len(['role', 'is_active', 'created_at', 'updated_at'])">E   AssertionError: User model missing fields: ['role', 'is_active', 'created_at', 'updated_at']
    assert 4 == 0
     +  where 4 = len(['role', 'is_active', 'created_at', 'updated_at'])</failure></testcase><testcase classname="tests.test_critical_bugs.TestAsyncClientInitializationBug" name="test_async_client_proper_initialization" time="1.948"><failure message="Failed: AsyncClient should not work without proper context management">E   Failed: AsyncClient should not work without proper context management</failure></testcase><testcase classname="tests.test_critical_bugs.TestAsyncClientInitializationBug" name="test_async_client_context_manager" time="0.576" /><testcase classname="tests.test_critical_bugs.TestImportIssues" name="test_jwt_generation_test_manager_import" time="0.029" /><testcase classname="tests.test_critical_bugs.TestImportIssues" name="test_alternative_jwt_manager_import_paths" time="0.003" /><testcase classname="tests.test_critical_bugs_simple.TestAuthRefreshEndpointBugSimple" name="test_request_body_is_not_awaitable" time="0.014" /><testcase classname="tests.test_critical_bugs_simple.TestAuthRefreshEndpointBugSimple" name="test_correct_way_is_json_method" time="0.013" /><testcase classname="tests.test_critical_bugs_simple.TestUserModelFieldsSimple" name="test_user_model_missing_fields" time="0.003" /><testcase classname="tests.test_critical_bugs_simple.TestImportPathsSimple" name="test_jwt_manager_import_fails" time="0.005"><failure message="Failed: DID NOT RAISE &lt;class 'ImportError'&gt;">E   Failed: DID NOT RAISE &lt;class 'ImportError'&gt;</failure></testcase><testcase classname="tests.test_critical_bugs_simple.TestImportPathsSimple" name="test_find_correct_import_path" time="0.002"><failure message="AssertionError: JWTGenerationTestManager should not be found in any expected location&#10;assert not True">E   AssertionError: JWTGenerationTestManager should not be found in any expected location
    assert not True</failure></testcase><testcase classname="tests.test_critical_bugs_simple.TestAsyncClientUsageSimple" name="test_async_client_without_context_manager_warning" time="0.634" /><testcase classname="tests.test_critical_bugs_simple.TestAsyncClientUsageSimple" name="test_async_client_correct_usage" time="0.556" /><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_service_secret_required_no_mocks" time="0.009"><failure message="NameError: name 'secret' is not defined">E   NameError: name 'secret' is not defined</failure></testcase><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_service_id_required" time="0.003"><failure message="NameError: name 'service_id' is not defined">E   NameError: name 'service_id' is not defined</failure></testcase><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_env_loading_before_import" time="0.023"><failure message="NameError: name 'secret' is not defined">E   NameError: name 'secret' is not defined</failure></testcase><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_import_order_race_condition" time="0.008"><failure message="NameError: name 'e2' is not defined">E   NameError: name 'e2' is not defined</failure></testcase><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_service_id_must_be_auth_service" time="0.003"><failure message="NameError: name 'service_id' is not defined">E   NameError: name 'service_id' is not defined</failure></testcase><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_isolated_environment_reads_os_environ" time="0.006"><failure message="NameError: name 'test_var' is not defined">E   NameError: name 'test_var' is not defined</failure></testcase><testcase classname="tests.test_environment_loading.TestMainEntrypoint" name="test_main_loads_env_before_imports" time="0.003" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_csrf_state_parameter_replay_attack_prevention" time="0.016" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_authorization_code_reuse_attack_prevention" time="0.008" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_nonce_replay_attack_prevention" time="0.006" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_redirect_uri_validation_security" time="0.013" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_pkce_challenge_validation_security" time="0.010" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_session_fixation_attack_prevention" time="0.010" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_oauth_state_expiration_security" time="0.005" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_concurrent_oauth_flow_isolation" time="0.005"><skipped type="pytest.xfail" message="Complex OAuth security test - cross-session isolation needs implementation" /></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_timing_attack_resistance" time="0.004" /><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_generation" time="0.006" /><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_storage_and_retrieval" time="0.004" /><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_validation_wrong_session" time="0.006" /><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_validation_no_session" time="0.004" /><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_initiation_creates_session_cookie" time="0.049"><skipped type="pytest.xfail" message="OAuth integration test - needs proper FastAPI test setup" /></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_callback_validates_state" time="0.121"><skipped type="pytest.xfail" message="OAuth integration test - needs proper FastAPI test setup" /></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_callback_rejects_invalid_state" time="0.800"><skipped type="pytest.xfail" message="OAuth integration test - needs proper FastAPI test setup" /></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_callback_rejects_missing_session" time="0.785"><skipped type="pytest.xfail" message="OAuth integration test - needs proper FastAPI test setup" /></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_expiration" time="0.007"><skipped type="pytest.xfail" message="OAuth state expiration test - timing/mocking issues" /></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_concurrent_oauth_flows" time="0.004" /><testcase classname="tests.test_oauth_state_validation.TestOAuthFlowIntegration" name="test_complete_oauth_flow" time="0.049"><skipped type="pytest.xfail" message="Complete OAuth flow test - complex integration test" /></testcase><testcase classname="tests.test_redis_staging_fixes" name="test_redis_no_localhost_fallback_in_staging" time="0.020" /><testcase classname="tests.test_redis_staging_fixes" name="test_redis_localhost_rejected_in_staging" time="0.023" /><testcase classname="tests.test_redis_staging_fixes" name="test_redis_required_in_staging" time="0.023" /><testcase classname="tests.test_redis_staging_fixes" name="test_redis_graceful_degradation_when_not_required" time="0.021" /><testcase classname="tests.test_redis_staging_fixes" name="test_redis_localhost_allowed_in_development" time="0.033" /><testcase classname="tests.test_redis_staging_fixes" name="test_redis_timeout_handling" time="10.031" /><testcase classname="tests.test_redis_staging_fixes" name="test_redis_connection_with_valid_staging_url" time="0.022" /><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_refresh_endpoint_with_valid_token" time="0.065"><failure message="AttributeError: &lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt; does not have the attribute 'get_db_session'">E   AttributeError: &lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt; does not have the attribute 'get_db_session'</failure></testcase><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_refresh_endpoint_handles_body_correctly" time="0.017" /><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_refresh_endpoint_missing_token" time="0.067"><failure message="assert 404 == 422&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 422
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_refresh_endpoint_expired_token" time="0.071"><failure message="assert 404 in [401, 422, 500]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 in [401, 422, 500]
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_refresh_endpoint_blacklisted_token" time="0.063"><failure message="assert 404 in [401, 403, 422, 500]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 in [401, 403, 422, 500]
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_sync_request_body_not_awaitable" time="0.002" /><testcase classname="tests.test_refresh_endpoint.TestRefreshEndpoint" name="test_actual_implementation_pattern" time="0.020" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_snake_case_field" time="0.027"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">E   assert 401 == 200
     +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_camel_case_field" time="0.022"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">E   assert 401 == 200
     +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_simple_token_field" time="0.020"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">E   assert 401 == 200
     +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_empty_body" time="0.017" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_missing_field" time="0.018" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_invalid_token" time="0.020" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_expired_token" time="0.024" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_null_value" time="0.020" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_empty_string" time="0.017" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_with_invalid_json" time="0.024" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_preserves_backwards_compatibility" time="0.022"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">E   assert 401 == 200
     +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_field_variations[refresh_token-valid_token-200]" time="0.018" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_field_variations[refreshToken-valid_token-200]" time="0.018" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_field_variations[token-valid_token-200]" time="0.019" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_field_variations[refresh_token--422]" time="0.024" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_field_variations[refreshToken-None-422]" time="0.020" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointCompatibility" name="test_refresh_field_variations[wrongField-valid_token-422]" time="0.026" /><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointIntegration" name="test_refresh_with_real_token_snake_case" time="0.076"><skipped type="pytest.skip" message="Dev login not available in test environment">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_refresh_endpoint_compatibility.py:246: Dev login not available in test environment</skipped></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointIntegration" name="test_refresh_with_real_token_camel_case" time="0.053"><skipped type="pytest.skip" message="Dev login not available in test environment">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_refresh_endpoint_compatibility.py:264: Dev login not available in test environment</skipped></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointStagingCompatibility" name="test_refresh_endpoint_staging_format" time="0.024"><failure message="assert 401 == 200&#10; +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code">E   assert 401 == 200
     +  where 401 = &lt;Response [401 Unauthorized]&gt;.status_code</failure></testcase><testcase classname="tests.test_refresh_endpoint_compatibility.TestRefreshEndpointStagingCompatibility" name="test_refresh_logging_in_staging" time="0.022"><failure message="AssertionError: Expected 'info' to have been called.">E   AssertionError: Expected 'info' to have been called.

During handling of the above exception, another exception occurred:
E   AssertionError: Expected 'info' to have been called.</failure></testcase><testcase classname="tests.test_refresh_endpoint_integration.TestRefreshEndpointIntegration" name="test_refresh_endpoint_exists" time="0.150" /><testcase classname="tests.test_refresh_endpoint_integration.TestRefreshEndpointIntegration" name="test_refresh_with_mock_valid_token" time="0.007"><failure message="AttributeError: &lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt; does not have the attribute 'get_db_session'">E   AttributeError: &lt;module 'auth_service.auth_core.routes.auth_routes' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py'&gt; does not have the attribute 'get_db_session'</failure></testcase><testcase classname="tests.test_refresh_endpoint_integration.TestRefreshEndpointIntegration" name="test_refresh_with_different_field_names" time="0.056" /><testcase classname="tests.test_refresh_endpoint_integration.TestRefreshEndpointIntegration" name="test_refresh_with_expired_token_mock" time="0.023" /><testcase classname="tests.test_refresh_endpoint_integration.TestRefreshEndpointIntegration" name="test_refresh_handles_body_parsing" time="0.014" /><testcase classname="tests.test_refresh_endpoint_integration.TestRefreshEndpointIntegration" name="test_refresh_without_token" time="0.036" /><testcase classname="tests.test_refresh_endpoint_simple" name="test_refresh_endpoint_accepts_multiple_formats" time="0.021"><failure message="fastapi.exceptions.HTTPException: 500: Internal server error: object bytes can't be used in 'await' expression">E   TypeError: object bytes can't be used in 'await' expression

During handling of the above exception, another exception occurred:
E   fastapi.exceptions.HTTPException: 500: Internal server error: object bytes can't be used in 'await' expression</failure></testcase><testcase classname="tests.test_refresh_endpoint_simple" name="test_refresh_endpoint_error_handling" time="0.018"><failure message="assert 500 == 422&#10; +  where 500 = HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;).status_code&#10; +    where HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;) = &lt;ExceptionInfo HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;) tblen=5&gt;.value">E   assert 500 == 422
     +  where 500 = HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression").status_code
     +    where HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression") = &lt;ExceptionInfo HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression") tblen=5&gt;.value</failure></testcase><testcase classname="tests.test_refresh_endpoint_simple" name="test_refresh_endpoint_invalid_json" time="0.010"><failure message="assert 500 == 422&#10; +  where 500 = HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;).status_code&#10; +    where HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;) = &lt;ExceptionInfo HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;) tblen=5&gt;.value">E   assert 500 == 422
     +  where 500 = HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression").status_code
     +    where HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression") = &lt;ExceptionInfo HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression") tblen=5&gt;.value</failure></testcase><testcase classname="tests.test_refresh_endpoint_simple" name="test_refresh_endpoint_invalid_token" time="0.014"><failure message="assert 500 == 401&#10; +  where 500 = HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;).status_code&#10; +    where HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;) = &lt;ExceptionInfo HTTPException(status_code=500, detail=&quot;Internal server error: object bytes can't be used in 'await' expression&quot;) tblen=5&gt;.value">E   assert 500 == 401
     +  where 500 = HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression").status_code
     +    where HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression") = &lt;ExceptionInfo HTTPException(status_code=500, detail="Internal server error: object bytes can't be used in 'await' expression") tblen=5&gt;.value</failure></testcase><testcase classname="tests.test_session_security_cycles_36_40.TestSessionSecurity" name="test_session_hijacking_prevention_validates_client_fingerprint" time="0.030" /><testcase classname="tests.test_session_security_cycles_36_40.TestSessionSecurity" name="test_concurrent_session_limit_prevents_account_sharing" time="0.043"><skipped type="pytest.xfail" message="Complex session security test - needs extensive session manager mocking" /></testcase><testcase classname="tests.test_session_security_cycles_36_40.TestSessionSecurity" name="test_session_timeout_enforcement_prevents_stale_access" time="2.528"><skipped type="pytest.xfail" message="Complex session security test - timeout enforcement mocking" /></testcase><testcase classname="tests.test_session_security_cycles_36_40.TestSessionSecurity" name="test_session_activity_tracking_detects_anomalous_behavior" time="0.019"><skipped type="pytest.xfail" message="Complex session security test - activity tracking implementation" /></testcase><testcase classname="tests.test_session_security_cycles_36_40.TestSessionSecurity" name="test_session_invalidation_cascade_prevents_orphaned_sessions" time="0.034"><skipped type="pytest.xfail" message="Complex session security test - cascade invalidation logic" /></testcase><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[valid@example.com-True]" time="0.023" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user.name@domain.co.uk-True]" time="0.024" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user+tag@example.org-True]" time="0.018" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user_123@test-domain.com-True]" time="0.018" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[invalid-False]" time="0.020" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[@example.com-False]" time="0.024" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user@-False]" time="0.022" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user @example.com-False]" time="0.023" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user@.com-False]" time="0.024" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[user@domain-False]" time="0.027" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[-False]" time="0.019" /><testcase classname="tests.test_signup_flow_comprehensive.TestEmailValidation" name="test_email_validation[None-False]" time="0.018" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[ValidPass123!-True-Password is valid]" time="0.018" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[short-False-Password must be at least 8 characters long]" time="0.017" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[nouppercase123!-False-Password must contain at least one uppercase letter]" time="0.023" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[NOLOWERCASE123!-False-Password must contain at least one lowercase letter]" time="0.021" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[NoNumbers!-False-Password must contain at least one number]" time="0.023" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[NoSpecial123-False-Password must contain at least one special character]" time="0.023" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[-False-Password must be at least 8 characters long]" time="0.020" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[        -False-Password must contain at least one uppercase letter]" time="0.018" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[Password123-False-Password must contain at least one special character]" time="0.019" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[P@ssw0rd-True-Password is valid]" time="0.016" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordValidation" name="test_password_validation[Super$ecure123Password!-True-Password is valid]" time="0.024" /><testcase classname="tests.test_signup_flow_comprehensive.TestUserRegistration" name="test_successful_registration" time="0.124" /><testcase classname="tests.test_signup_flow_comprehensive.TestUserRegistration" name="test_duplicate_email_registration" time="0.116" /><testcase classname="tests.test_signup_flow_comprehensive.TestUserRegistration" name="test_invalid_email_registration" time="0.028" /><testcase classname="tests.test_signup_flow_comprehensive.TestUserRegistration" name="test_weak_password_registration" time="0.025" /><testcase classname="tests.test_signup_flow_comprehensive.TestUserRegistration" name="test_database_error_handling" time="0.127" /><testcase classname="tests.test_signup_flow_comprehensive.TestUserRegistration" name="test_fallback_to_test_registration" time="0.115" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordHashing" name="test_password_hashing" time="0.168" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordHashing" name="test_password_verification_mismatch" time="0.182" /><testcase classname="tests.test_signup_flow_comprehensive.TestPasswordHashing" name="test_same_password_different_hashes" time="0.368" /><testcase classname="tests.test_signup_flow_comprehensive.TestEdgeCases" name="test_empty_fields" time="0.029" /><testcase classname="tests.test_signup_flow_comprehensive.TestEdgeCases" name="test_sql_injection_attempts" time="0.023" /><testcase classname="tests.test_signup_flow_comprehensive.TestEdgeCases" name="test_extremely_long_inputs" time="0.029" /><testcase classname="tests.test_signup_flow_comprehensive.TestEdgeCases" name="test_unicode_and_special_characters" time="0.131" /><testcase classname="tests.test_signup_flow_comprehensive.TestEdgeCases" name="test_concurrent_registration_same_email" time="0.129" /><testcase classname="tests.test_token_validation_security_cycles_31_35.TestTokenValidationSecurity" name="test_jwt_signature_tampering_detection_prevents_privilege_escalation" time="0.006" /><testcase classname="tests.test_token_validation_security_cycles_31_35.TestTokenValidationSecurity" name="test_token_expiration_enforcement_prevents_stale_access" time="1.507" /><testcase classname="tests.test_token_validation_security_cycles_31_35.TestTokenValidationSecurity" name="test_token_replay_attack_detection_prevents_reuse" time="0.010" /><testcase classname="tests.test_token_validation_security_cycles_31_35.TestTokenValidationSecurity" name="test_token_revocation_enforcement_blocks_compromised_tokens" time="0.009" /><testcase classname="tests.test_token_validation_security_cycles_31_35.TestTokenValidationSecurity" name="test_concurrent_token_validation_prevents_race_conditions" time="0.008" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_database_url_override" time="0.018"><failure message="AssertionError: '@custom_host:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'">E   AssertionError: '@custom_host:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_detection_via_cgroup" time="0.026"><failure message="AssertionError: '@postgres:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'">E   AssertionError: '@postgres:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_detection_via_dockerenv_file" time="0.018"><failure message="AssertionError: '@postgres:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'">E   AssertionError: '@postgres:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_detection_via_env_variable" time="0.017"><failure message="AssertionError: '@postgres:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'">E   AssertionError: '@postgres:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_not_applied_in_production" time="0.019" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_not_applied_in_staging" time="0.019" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_non_docker_environment" time="0.018" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_non_localhost_host_not_overridden" time="0.024"><failure message="AssertionError: '@custom-db-host.example.com:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'">E   AssertionError: '@custom-db-host.example.com:' not found in 'postgresql+asyncpg://postgres:postgres@localhost:5432/netra_dev'</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_valid_token_in_body" time="0.077" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_camelcase_field" time="0.069" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_token_field" time="0.066" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_missing_token_field" time="0.072" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_invalid_json" time="0.060" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_invalid_token" time="0.068" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_service_error" time="0.069" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_create_refresh_token" time="0.016"><failure message="jwt.exceptions.InvalidAudienceError: Invalid audience">E   jwt.exceptions.InvalidAudienceError: Invalid audience</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_refresh_token_success" time="0.019" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_refresh_token_wrong_type" time="0.018" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_expired_refresh_token" time="0.027" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_malformed_refresh_token" time="0.017" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_refresh_token_blacklist_check" time="0.024" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_refresh_token_expiry_time" time="0.018"><failure message="jwt.exceptions.InvalidAudienceError: Invalid audience">E   jwt.exceptions.InvalidAudienceError: Invalid audience</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_tokens_success" time="0.026" /><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_tokens_invalid_token" time="0.026" /><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_tokens_race_condition" time="0.026" /><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_updates_session" time="0.036" /></testsuite></testsuites>