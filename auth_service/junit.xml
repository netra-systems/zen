<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="14" skipped="0" tests="26" time="3.353" timestamp="2025-09-04T19:25:56.582082-07:00" hostname="Anthony"><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_database_url_override" time="0.154" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_detection_via_cgroup" time="0.009" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_detection_via_dockerenv_file" time="0.006" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_detection_via_env_variable" time="0.006" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_not_applied_in_production" time="0.008"><failure message="ValueError: Database configuration error: Invalid host 'localhost' for production environment - use actual database host">E   ValueError: Database configuration error: Invalid host 'localhost' for production environment - use actual database host</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_docker_not_applied_in_staging" time="0.005"><failure message="ValueError: Database configuration error: Invalid host 'localhost' for staging environment - use actual database host">E   ValueError: Database configuration error: Invalid host 'localhost' for staging environment - use actual database host</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_non_docker_environment" time="0.006" /><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_non_localhost_host_not_overridden" time="0.005" /><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_valid_token_in_body" time="0.111"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 200
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_camelcase_field" time="0.044"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 200
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_token_field" time="0.005"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 200
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_missing_token_field" time="0.004"><failure message="assert 404 == 422&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 422
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_invalid_json" time="0.004"><failure message="assert 404 == 422&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 422
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_invalid_token" time="0.005"><failure message="assert 404 == 401&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 401
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestRefreshEndpointUnit" name="test_refresh_with_service_error" time="0.006"><failure message="assert 404 == 500&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">E   assert 404 == 500
     +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_create_refresh_token" time="0.006"><failure message="jwt.exceptions.InvalidAudienceError: Invalid audience">E   jwt.exceptions.InvalidAudienceError: Invalid audience</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_refresh_token_success" time="0.004" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_refresh_token_wrong_type" time="0.003" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_expired_refresh_token" time="0.004" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_validate_malformed_refresh_token" time="0.004" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_refresh_token_blacklist_check" time="0.004" /><testcase classname="tests.unit.test_refresh_endpoint.TestJWTHandlerRefreshTokens" name="test_refresh_token_expiry_time" time="0.004"><failure message="jwt.exceptions.InvalidAudienceError: Invalid audience">E   jwt.exceptions.InvalidAudienceError: Invalid audience</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_tokens_success" time="0.007"><failure message="AttributeError: 'AuthService' object has no attribute 'session_manager'">E   AttributeError: 'AuthService' object has no attribute 'session_manager'</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_tokens_invalid_token" time="0.005" /><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_tokens_race_condition" time="0.006"><failure message="AttributeError: 'AuthService' object has no attribute 'session_manager'">E   AttributeError: 'AuthService' object has no attribute 'session_manager'</failure></testcase><testcase classname="tests.unit.test_refresh_endpoint.TestAuthServiceRefreshLogic" name="test_refresh_updates_session" time="0.007"><failure message="AttributeError: 'AuthService' object has no attribute 'session_manager'">E   AttributeError: 'AuthService' object has no attribute 'session_manager'</failure></testcase></testsuite></testsuites>