<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="3" failures="19" skipped="27" tests="74" time="6.752" timestamp="2025-09-04T20:55:39.607814-07:00" hostname="Anthony"><testcase classname="" name="tests.test_auth_real_services_comprehensive" time="0.000"><skipped message="collection skipped">('C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\test_auth_real_services_comprehensive.py', 49, 'Skipped: Test framework functions have been removed')</skipped></testcase><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_google_oauth_client_id_missing_staging_regression" time="0.107" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_google_oauth_client_secret_missing_staging_regression" time="0.004" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_oauth_provider_initialization_failure_regression" time="0.002" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_oauth_provider_with_proper_staging_credentials" time="0.002" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthConfigurationMissingRegression" name="test_oauth_manager_integration_with_staging_credentials" time="0.003"><failure message="TypeError: OAuthManager.get_provider_status() missing 1 required positional argument: 'provider_name'">tests\critical\test_oauth_configuration_missing_staging_regression.py:279: in test_oauth_manager_integration_with_staging_credentials
    provider_status = oauth_manager.get_provider_status()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: OAuthManager.get_provider_status() missing 1 required positional argument: 'provider_name'</failure></testcase><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthServiceIntegrationRegression" name="test_auth_service_oauth_providers_availability" time="0.002" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthServiceIntegrationRegression" name="test_oauth_login_flow_functional_with_credentials" time="0.002" /><testcase classname="tests.critical.test_oauth_configuration_missing_staging_regression.TestOAuthServiceIntegrationRegression" name="test_oauth_callback_handling_with_credentials" time="0.002" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.gunicorn_config-file_path1]" time="0.001" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.health_config-file_path3]" time="0.001" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.auth_environment-file_path8]" time="0.001" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.config-file_path9]" time="0.001" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.oauth_manager-file_path10]" time="0.001" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.oauth.google_oauth-file_path28]" time="0.001" /><testcase classname="tests.test_all_imports" name="test_module_imports[auth_service.auth_core.oauth.__init__-file_path29]" time="0.001" /><testcase classname="tests.test_auth_comprehensive.TestAuthConfiguration" name="test_environment_setup" time="0.001"><failure message="AssertionError: assert 'staging' == 'test'&#10;  &#10;  - test&#10;  + staging">tests\test_auth_comprehensive.py:57: in test_environment_setup
    assert env_vars.get("ENVIRONMENT") == "test"
E   AssertionError: assert 'staging' == 'test'
E     
E     - test
E     + staging</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestAuthConfiguration" name="test_auth_config_initialization" time="0.001"><failure message="AssertionError: assert 'staging' in ['test', 'development']">tests\test_auth_comprehensive.py:64: in test_auth_config_initialization
    assert env in ["test", "development"]
E   AssertionError: assert 'staging' in ['test', 'development']</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestAuthConfiguration" name="test_auth_provider_enum" time="0.000" /><testcase classname="tests.test_auth_comprehensive.TestJWTTokenHandling" name="test_jwt_secret_configuration" time="0.000" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_google_oauth_initiation" time="0.010"><failure message="assert 404 == 302&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\test_auth_comprehensive.py:170: in test_google_oauth_initiation
    assert response.status_code == 302  # Should redirect
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   assert 404 == 302
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_redirect_uri_configuration" time="0.001"><failure message="ModuleNotFoundError: No module named 'auth_service.auth_core.security.oauth_security'">tests\test_auth_comprehensive.py:180: in test_oauth_redirect_uri_configuration
    from auth_service.auth_core.security.oauth_security import OAuthSecurityManager
E   ModuleNotFoundError: No module named 'auth_service.auth_core.security.oauth_security'</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_state_csrf_protection" time="0.003" /><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_callback_handling" time="0.005"><failure message="assert 404 in [200, 302, 400, 401, 422]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\test_auth_comprehensive.py:240: in test_oauth_callback_handling
    assert response.status_code in [200, 302, 400, 401, 422]
E   assert 404 in [200, 302, 400, 401, 422]
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_error_scenarios" time="0.004"><failure message="assert 404 in [400, 422]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\test_auth_comprehensive.py:246: in test_oauth_error_scenarios
    assert response.status_code in [400, 422]  # Bad request or validation error
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   assert 404 in [400, 422]
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_auth_comprehensive.TestOAuthFlows" name="test_oauth_staging_configuration" time="0.000"><skipped type="pytest.skip" message="Staging-specific test">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_auth_comprehensive.py:255: Staging-specific test</skipped></testcase><testcase classname="tests.test_auth_comprehensive.TestEnvironmentCompatibility" name="test_development_environment_features" time="0.001" /><testcase classname="tests.test_auth_comprehensive.TestEnvironmentCompatibility" name="test_staging_environment_features" time="0.000"><skipped type="pytest.skip" message="Staging-specific test">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_auth_comprehensive.py:514: Staging-specific test</skipped></testcase><testcase classname="tests.test_auth_comprehensive_audit.TestLevel1BasicAuthFlows" name="test_config_endpoint_returns_valid_structure" time="0.003"><failure message="assert 404 == 200&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\test_auth_comprehensive_audit.py:52: in test_config_endpoint_returns_valid_structure
    assert response.status_code == 200
E   assert 404 == 200
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_port_configuration_sources_consistency" time="0.001" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_service_startup_completion_with_correct_port" time="0.002"><failure message="NameError: name 'AuthConfig' is not defined">tests\test_auth_port_configuration.py:91: in test_auth_service_startup_completion_with_correct_port
    auth_service_url = AuthConfig.get_auth_service_url()
                       ^^^^^^^^^^
E   NameError: name 'AuthConfig' is not defined</failure></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_port_environment_variable_precedence" time="0.006" /><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_service_url_generation_with_port_validation" time="0.003"><failure message="NameError: name 'AuthConfig' is not defined">tests\test_auth_port_configuration.py:161: in test_auth_service_url_generation_with_port_validation
    auth_url = AuthConfig.get_auth_service_url()
               ^^^^^^^^^^
E   NameError: name 'AuthConfig' is not defined</failure></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_hardcoded_port_detection" time="0.002"><failure message="NameError: name 'AuthConfig' is not defined">tests\test_auth_port_configuration.py:197: in test_hardcoded_port_detection
    auth_url = AuthConfig.get_auth_service_url()
               ^^^^^^^^^^
E   NameError: name 'AuthConfig' is not defined</failure></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthPortConfigurationConsistency" name="test_auth_service_port_binding_matches_url_configuration" time="0.002"><failure message="NameError: name 'AuthConfig' is not defined">tests\test_auth_port_configuration.py:230: in test_auth_service_port_binding_matches_url_configuration
    auth_url = AuthConfig.get_auth_service_url()
               ^^^^^^^^^^
E   NameError: name 'AuthConfig' is not defined</failure></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthServiceConfigurationValidation" name="test_configuration_validation_detects_port_mismatch" time="0.003"><failure message="Failed: Configuration validation should catch port mismatches gracefully, but got exception: name 'env' is not defined">tests\test_auth_port_configuration.py:283: in test_configuration_validation_detects_port_mismatch
    binding_port = env.get("PORT")  # Use os.environ directly since we patched it
                   ^^^
E   NameError: name 'env' is not defined

During handling of the above exception, another exception occurred:
tests\test_auth_port_configuration.py:300: in test_configuration_validation_detects_port_mismatch
    pytest.fail(
E   Failed: Configuration validation should catch port mismatches gracefully, but got exception: name 'env' is not defined</failure></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthServiceConfigurationValidation" name="test_auth_service_startup_validation" time="0.002"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_port_configuration.TestAuthServiceConfigurationValidation" name="test_development_vs_production_port_configuration" time="0.002"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_port_configuration.TestPortConfigurationRecovery" name="test_port_configuration_error_reporting" time="0.002"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_auth_port_configuration.TestPortConfigurationRecovery" name="test_port_configuration_auto_correction" time="0.002"><skipped type="pytest.xfail" message="Test exposes known port configuration issue - MUST fail until validation is implemented" /></testcase><testcase classname="tests.test_critical_bugs.TestAuthRefreshEndpointBugsReal" name="test_environment_configuration_bugs" time="0.006"><failure message="assert 404 in [400, 401, 422, 500]&#10; +  where 404 = &lt;Response [404 Not Found]&gt;.status_code">tests\test_critical_bugs.py:351: in test_environment_configuration_bugs
    assert response.status_code in [400, 401, 422, 500]
E   assert 404 in [400, 401, 422, 500]
E    +  where 404 = &lt;Response [404 Not Found]&gt;.status_code</failure></testcase><testcase classname="tests.test_critical_bugs_real.TestRealAuthServiceIntegration" name="test_real_auth_configuration_validation" time="0.002"><failure message="AssertionError: Config missing jwt_secret&#10;assert False&#10; +  where False = hasattr(&lt;auth_service.auth_core.config.AuthConfig object at 0x0000020C4E88DB80&gt;, 'jwt_secret')">tests\test_critical_bugs_real.py:132: in test_real_auth_configuration_validation
    assert hasattr(config, 'jwt_secret'), "Config missing jwt_secret"
E   AssertionError: Config missing jwt_secret
E   assert False
E    +  where False = hasattr(&lt;auth_service.auth_core.config.AuthConfig object at 0x0000020C4E88DB80&gt;, 'jwt_secret')</failure></testcase><testcase classname="tests.test_critical_bugs_real.TestRealServiceValidation" name="test_real_environment_isolation_usage" time="0.002"><failure message="AssertionError: TESTING environment not set correctly: 0&#10;assert '0' == '1'&#10;  &#10;  - 1&#10;  + 0">tests\test_critical_bugs_real.py:278: in test_real_environment_isolation_usage
    assert testing_flag == "1", f"TESTING environment not set correctly: {testing_flag}"
E   AssertionError: TESTING environment not set correctly: 0
E   assert '0' == '1'
E     
E     - 1
E     + 0</failure></testcase><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_jwt_secret_required_in_production" time="0.236" /><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_database_url_uses_sqlite_in_test" time="0.215" /><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_env_loading_before_import" time="0.230" /><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_oauth_configuration_in_test_environment" time="0.227" /><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_environment_specific_defaults" time="0.214" /><testcase classname="tests.test_environment_loading.TestEnvironmentLoading" name="test_isolated_environment_integration" time="0.224" /><testcase classname="tests.test_environment_loading.TestMainEntrypoint" name="test_main_loads_env_before_imports" time="0.001" /><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_csrf_state_parameter_replay_attack_prevention" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:22: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_authorization_code_reuse_attack_prevention" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:54: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_nonce_replay_attack_prevention" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:66: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_redirect_uri_validation_security" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:78: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_pkce_challenge_validation_security" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:104: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_session_fixation_attack_prevention" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:134: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_oauth_state_expiration_security" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:163: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_concurrent_oauth_flow_isolation" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:177: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_security_vulnerabilities.TestOAuthSecurityVulnerabilities" name="test_timing_attack_resistance" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_security_vulnerabilities.py:201: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_generation" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:39: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_storage_and_retrieval" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:46: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_validation_wrong_session" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:64: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_validation_no_session" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:78: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_initiation_creates_session_cookie" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:91: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_callback_validates_state" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:109: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_callback_rejects_invalid_state" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:155: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_oauth_callback_rejects_missing_session" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:173: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_state_expiration" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:189: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthStateValidation" name="test_concurrent_oauth_flows" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:210: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_oauth_state_validation.TestOAuthFlowIntegration" name="test_complete_oauth_flow" time="0.000"><skipped type="pytest.skip" message="oauth_security module has been removed/refactored">C:\Users\antho\OneDrive\Desktop\Netra\netra-core-generation-1\auth_service\tests\test_oauth_state_validation.py:235: oauth_security module has been removed/refactored</skipped></testcase><testcase classname="tests.test_redis_staging_connectivity_fixes.TestRedisConnectivityFixes" name="test_redis_url_from_environment_variable" time="0.001"><failure message="AssertionError: assert 'redis://localhost:6379/0' == 'redis://test-redis:6379'&#10;  &#10;  - redis://test-redis:6379&#10;  + redis://localhost:6379/0">tests\test_redis_staging_connectivity_fixes.py:52: in test_redis_url_from_environment_variable
    assert redis_url == 'redis://test-redis:6379'
E   AssertionError: assert 'redis://localhost:6379/0' == 'redis://test-redis:6379'
E     
E     - redis://test-redis:6379
E     + redis://localhost:6379/0</failure></testcase><testcase classname="tests.test_redis_staging_connectivity_fixes.TestRedisConnectivityFixes" name="test_redis_url_from_environment_variable" time="0.000"><error message="failed on teardown with &quot;AttributeError: 'AuthRedisManager' object has no attribute 'close'&quot;">tests\test_redis_staging_connectivity_fixes.py:33: in redis_manager
    asyncio.create_task(manager.close())
                        ^^^^^^^^^^^^^
E   AttributeError: 'AuthRedisManager' object has no attribute 'close'</error></testcase><testcase classname="tests.test_redis_staging_connectivity_fixes.TestRedisConnectivityFixes" name="test_environment_specific_redis_behavior" time="0.001"><failure message="AssertionError: assert 'redis://localhost:6379/0' == ''&#10;  &#10;  + redis://localhost:6379/0">tests\test_redis_staging_connectivity_fixes.py:258: in test_environment_specific_redis_behavior
    assert redis_url == ''  # Should return empty string, not raise error
    ^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: assert 'redis://localhost:6379/0' == ''
E     
E     + redis://localhost:6379/0</failure></testcase><testcase classname="tests.test_redis_staging_fixes" name="test_redis_connection_configuration" time="4.065"><error message="failed on setup with &quot;test_framework.real_services.ServiceUnavailableError: Failed to connect to Redis: Error 22 connecting to localhost:6381. The remote computer refused the network connection.&quot;">C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\connection.py:305: in connect_check_health
    await self.retry.call_with_retry(
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\retry.py:50: in call_with_retry
    return await do()
           ^^^^^^^^^^
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\connection.py:760: in _connect
    reader, writer = await asyncio.open_connection(
C:\Users\antho\miniconda3\Lib\asyncio\streams.py:48: in open_connection
    transport, _ = await loop.create_connection(
C:\Users\antho\miniconda3\Lib\asyncio\base_events.py:1127: in create_connection
    raise exceptions[0]
C:\Users\antho\miniconda3\Lib\asyncio\base_events.py:1104: in create_connection
    sock = await self._connect_sock(
C:\Users\antho\miniconda3\Lib\asyncio\base_events.py:1007: in _connect_sock
    await self.sock_connect(sock, address)
C:\Users\antho\miniconda3\Lib\asyncio\proactor_events.py:729: in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\asyncio\windows_events.py:803: in _poll
    value = callback(transferred, key, ov)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\asyncio\windows_events.py:599: in finish_connect
    ov.getresult()
E   ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

During handling of the above exception, another exception occurred:
..\test_framework\real_services.py:225: in connect
    await self._client.ping()
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\client.py:672: in execute_command
    conn = self.connection or await pool.get_connection()
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\connection.py:1149: in get_connection
    await self.ensure_connection(connection)
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\connection.py:1182: in ensure_connection
    await connection.connect()
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\connection.py:296: in connect
    await self.connect_check_health(check_health=True)
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\redis\asyncio\connection.py:315: in connect_check_health
    raise ConnectionError(self._error_message(e))
E   redis.exceptions.ConnectionError: Error 22 connecting to localhost:6381. The remote computer refused the network connection.

During handling of the above exception, another exception occurred:
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\pytest_asyncio\plugin.py:696: in pytest_fixture_setup
    hook_result = yield
                  ^^^^^
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\pytest_asyncio\plugin.py:272: in _asyncgen_fixture_wrapper
    result = runner.run(setup(), context=context)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\asyncio\runners.py:118: in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\asyncio\base_events.py:687: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
C:\Users\antho\AppData\Roaming\Python\Python312\site-packages\pytest_asyncio\plugin.py:268: in setup
    res = await gen_obj.__anext__()  # type: ignore[union-attr]
          ^^^^^^^^^^^^^^^^^^^^^^^^^
tests\conftest.py:184: in real_auth_redis
    redis_client = await services.redis.get_client()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..\test_framework\real_services.py:242: in get_client
    await self.connect()
..\test_framework\real_services.py:231: in connect
    raise ServiceUnavailableError(f"Failed to connect to Redis: {e}")
E   test_framework.real_services.ServiceUnavailableError: Failed to connect to Redis: Error 22 connecting to localhost:6381. The remote computer refused the network connection.</error></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_non_docker_environment" time="0.001"><failure message="AttributeError: &lt;module 'auth_service.auth_core.config' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\config.py'&gt; does not have the attribute 'get_env'">C:\Users\antho\miniconda3\Lib\unittest\mock.py:1387: in patched
    with self.decoration_helper(patched,
C:\Users\antho\miniconda3\Lib\contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1369: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1458: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
C:\Users\antho\miniconda3\Lib\unittest\mock.py:1431: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'auth_service.auth_core.config' from 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\config.py'&gt; does not have the attribute 'get_env'</failure></testcase><testcase classname="tests.unit.test_docker_hostname_resolution.TestDockerHostnameResolution" name="test_non_docker_environment" time="0.002"><error message="failed on teardown with &quot;RuntimeError: Cannot clear environment variables outside isolation mode&quot;">tests\unit\test_docker_hostname_resolution.py:34: in tearDown
    env.clear()
..\shared\isolated_environment.py:674: in clear
    raise RuntimeError("Cannot clear environment variables outside isolation mode")
E   RuntimeError: Cannot clear environment variables outside isolation mode</error></testcase></testsuite></testsuites>