[pytest]
# Auth Service Pytest Configuration
# Comprehensive test configuration for auth service with coverage

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --timeout=30
    # Coverage options
    --cov=auth_core
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-branch
    --cov-fail-under=88
    # Output options
    --junit-xml=junit.xml
    --tb=short

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for service interactions  
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer than 1 second
    critical: Critical path tests that must always pass
    auth: Authentication-related tests
    auth_service: Auth service specific tests
    oauth: OAuth provider tests
    database: Database-dependent tests
    redis: Redis-dependent tests
    security: Security-focused tests
    session_security: Session security tests
    staging: Tests that require staging environment
    env: marks tests with environment compatibility (test, dev, staging, prod)
    env_requires: marks tests with environment-specific requirements
    env_safe: marks tests as safe for specific environments
    test: marks tests for test environment only
    dev: marks tests for development environment
    prod: marks tests compatible with production environment
    env_test: marks tests for test environment compatibility
    account_recovery: Account recovery flow tests
    advanced_security: Advanced security scenario tests
    device_fingerprinting: Device fingerprinting tests
    metrics: Metrics and monitoring tests
    monitoring: System monitoring tests
    streaming: Event streaming tests
    events: Event-based tests
    performance: Performance-related tests
    cross_service: Cross-service integration tests
    cycle_31: Test cycle 31
    cycle_32: Test cycle 32
    cycle_33: Test cycle 33
    cycle_34: Test cycle 34
    cycle_35: Test cycle 35
    cycle_36: Test cycle 36
    cycle_37: Test cycle 37
    cycle_38: Test cycle 38
    cycle_39: Test cycle 39
    cycle_40: Test cycle 40
    import_validation: Import validation tests

# Test timeout
timeout = 30
timeout_method = thread

# Asyncio configuration
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore::UserWarning:urllib3.*

# Minimum Python version
minversion = 3.9

# Test directory structure
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    .venv
    venv
    node_modules
    __pycache__
    .pytest_cache
    htmlcov

# Parallel test execution
# Uncomment to enable parallel testing:
# -n auto