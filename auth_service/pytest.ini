[tool:pytest]
# Auth Service Pytest Configuration
# Comprehensive test configuration for auth service with coverage

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    # Coverage options
    --cov=auth_core
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-branch
    --cov-fail-under=88
    # Output options
    --junit-xml=junit.xml
    --tb=short

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for service interactions  
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer than 1 second
    auth: Authentication-related tests
    oauth: OAuth provider tests
    database: Database-dependent tests
    redis: Redis-dependent tests
    security: Security-focused tests

# Test timeout
timeout = 30
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore::UserWarning:urllib3.*

# Minimum Python version
minversion = 3.9

# Test directory structure
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    .venv
    venv
    node_modules
    __pycache__
    .pytest_cache
    htmlcov

# Parallel test execution
# Uncomment to enable parallel testing:
# -n auto