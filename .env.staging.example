# Staging Environment Configuration Example
# 
# CRITICAL SECURITY NOTICE:
# ========================
# 1. This is an EXAMPLE file for staging configuration
# 2. NEVER commit actual secrets to git
# 3. NEVER use localhost in staging/production
# 4. NEVER set test flags (TESTING, E2E_TESTING, etc.) in staging/production
# 5. All secrets MUST be loaded from Google Secrets Manager
#
# To use this file:
# 1. Copy to .env.staging (which should be gitignored)
# 2. Replace placeholder values with actual staging URLs
# 3. Ensure all secrets are configured in Google Secrets Manager
# 4. Validate configuration with scripts/validate_environment_config.py

# =============================================================================
# ENVIRONMENT IDENTIFICATION
# =============================================================================
ENVIRONMENT=staging
NETRA_ENV=staging

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Replace with actual staging database endpoints
POSTGRES_HOST=<staging-postgres-host>
POSTGRES_PORT=5432
POSTGRES_DB=<staging-database-name>
POSTGRES_USER=<staging-database-user>
# Password MUST be loaded from Google Secrets Manager (postgres-password-staging)

# =============================================================================
# CACHE AND STORAGE
# =============================================================================
# Replace with actual staging Redis endpoint
REDIS_URL=redis://<staging-redis-host>:6379/1
REDIS_REQUIRED=true
REDIS_FALLBACK_ENABLED=true
# Password loaded from Google Secrets Manager (redis-password-staging)

# Replace with actual staging ClickHouse endpoint
CLICKHOUSE_HOST=<staging-clickhouse-host>
CLICKHOUSE_PORT=8123
CLICKHOUSE_USERNAME=default
CLICKHOUSE_USER=default
CLICKHOUSE_DB=default
CLICKHOUSE_SECURE=true
CLICKHOUSE_TIMEOUT=30
# Password loaded from Google Secrets Manager (clickhouse-password)

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================
SERVER_PORT=8080
LOG_LEVEL=INFO

# Replace with actual staging service URLs
API_BASE_URL=https://<staging-api-domain>
WS_BASE_URL=wss://<staging-api-domain>/ws
FRONTEND_URL=https://<staging-frontend-domain>
AUTH_SERVICE_URL=https://<staging-auth-service-domain>

# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=15
REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_ACCESS_EXPIRY_MINUTES=15
JWT_REFRESH_EXPIRY_DAYS=7
JWT_SERVICE_EXPIRY_MINUTES=60

# CRITICAL: The following secrets MUST be loaded from Google Secrets Manager:
# - SECRET_KEY (from secret-key)
# - JWT_SECRET_KEY (from jwt-secret-key)
# - FERNET_KEY (from fernet-key)
# DO NOT hardcode these values!

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Replace with actual staging domains
CORS_ALLOWED_ORIGINS=https://<staging-frontend-domain>,https://<staging-api-domain>

# =============================================================================
# WEBSOCKET CONFIGURATION
# =============================================================================
# Optimized for staging environment with GCP load balancers
WEBSOCKET_HEARTBEAT_INTERVAL=30
WEBSOCKET_HEARTBEAT_TIMEOUT=90
WEBSOCKET_CONNECTION_TIMEOUT=600
WEBSOCKET_MAX_RECONNECT_ATTEMPTS=5
WEBSOCKET_MAX_CONNECTIONS_PER_USER=3
WEBSOCKET_MAX_MESSAGE_RATE_PER_MINUTE=100
WEBSOCKET_MAX_MESSAGE_SIZE_BYTES=8192
WEBSOCKET_CLEANUP_INTERVAL=120
WEBSOCKET_RECONNECT_BASE_DELAY=2.0
WEBSOCKET_RECONNECT_MAX_DELAY=60.0
WEBSOCKET_RECONNECT_JITTER_FACTOR=0.3

# Monitoring (staging only)
WEBSOCKET_DEBUG_LOGGING=true
WEBSOCKET_METRICS_ENABLED=true
ENABLE_WEBSOCKET_METRICS=true

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================
HEALTH_CHECK_GRACE_PERIOD=60
HEALTH_CHECK_MAX_RETRIES=5

# =============================================================================
# FEATURE FLAGS
# =============================================================================
SKIP_MIGRATION_ON_STARTUP=false
ENABLE_STARTUP_CHECKS=true
STARTUP_CHECK_TIMEOUT=30

# =============================================================================
# GOOGLE CLOUD CONFIGURATION
# =============================================================================
GCP_PROJECT_ID=<your-staging-project-id>
GCP_PROJECT_ID_NUMERICAL_STAGING=<your-numerical-project-id>

# =============================================================================
# FORBIDDEN VARIABLES - NEVER SET THESE IN STAGING
# =============================================================================
# The following variables MUST NEVER be set in staging/production:
# - TESTING
# - E2E_TESTING
# - AUTH_FAST_TEST_MODE
# - PYTEST_CURRENT_TEST
# - ALLOW_DEV_AUTH_BYPASS
# - WEBSOCKET_AUTH_BYPASS
# - SKIP_AUTH_VALIDATION
# - TEST_MODE
# - CI_TEST_RUN
#
# Setting any of these will cause the application to fail at startup
# with a critical security error.

# =============================================================================
# SECRETS FROM GOOGLE SECRETS MANAGER
# =============================================================================
# The following secrets are automatically loaded from Google Secrets Manager:
#
# Database:
# - POSTGRES_PASSWORD (postgres-password-staging)
#
# Cache:
# - REDIS_PASSWORD (redis-password-staging)
# - CLICKHOUSE_PASSWORD (clickhouse-password)
#
# Authentication:
# - SECRET_KEY (secret-key)
# - JWT_SECRET_KEY (jwt-secret-key)
# - FERNET_KEY (fernet-key)
#
# OAuth:
# - GOOGLE_OAUTH_CLIENT_ID_STAGING (google-oauth-client-id-staging)
# - GOOGLE_OAUTH_CLIENT_SECRET_STAGING (google-oauth-client-secret-staging)
#
# AI/LLM:
# - ANTHROPIC_API_KEY (anthropic-api-key)
# - OPENAI_API_KEY (openai-api-key)
# - GEMINI_API_KEY (gemini-api-key)
#
# Monitoring:
# - LANGFUSE_PUBLIC_KEY (langfuse-public-key)
# - LANGFUSE_SECRET_KEY (langfuse-secret-key)