# Alpine-based Test Environment with Fresh Builds
# Optimized for isolation and minimal resource usage

services:
  # ============================================
  # ALPINE TEST INFRASTRUCTURE
  # ============================================
  
  alpine-test-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: netra_test
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --data-checksums"
    ports:
      - "${ALPINE_TEST_POSTGRES_PORT:-5435}:5432"
    volumes:
      # Use named volume for persistent storage
      - alpine-test-postgres-data:/var/lib/postgresql/data
    command: |
      postgres
        -c shared_buffers=128MB
        -c max_connections=100
        -c fsync=off
        -c synchronous_commit=off
        -c full_page_writes=off
        -c checkpoint_completion_target=0.9
        -c wal_buffers=16MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '0.5'
        reservations:
          memory: 1G

  alpine-test-redis:
    image: redis:7-alpine
    command: |
      redis-server
        --appendonly no
        --save ""
        --maxmemory 800mb
        --maxmemory-policy allkeys-lru
        --tcp-keepalive 60
    ports:
      - "${ALPINE_TEST_REDIS_PORT:-6382}:6379"
    volumes:
      - alpine-test-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.25'
        reservations:
          memory: 512M

  alpine-test-clickhouse:
    image: clickhouse/clickhouse-server:25.7.6.21-alpine
    environment:
      CLICKHOUSE_DB: test_analytics
      CLICKHOUSE_USER: test
      CLICKHOUSE_PASSWORD: test
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_LOG_LEVEL: error
    ports:
      - "${ALPINE_TEST_CLICKHOUSE_HTTP:-8126}:8123"
      - "${ALPINE_TEST_CLICKHOUSE_TCP:-9003}:9000"
    volumes:
      - alpine-test-clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '0.5'
        reservations:
          memory: 1G

  # ============================================
  # ALPINE APPLICATION SERVICES
  # ============================================

  alpine-test-migration:
    image: netra-alpine-test-migration:latest
    build:
      context: .
      dockerfile: dockerfiles/migration.alpine.Dockerfile
      args:
        BUILD_ENV: test
    environment:
      POSTGRES_HOST: alpine-test-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: netra_test
    depends_on:
      alpine-test-postgres:
        condition: service_healthy
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'

  alpine-test-backend:
    image: netra-alpine-test-backend:latest
    container_name: alpine-test-backend
    networks:
      default:
        aliases:
          - backend
    build:
      context: .
      dockerfile: dockerfiles/backend.alpine.Dockerfile
      args:
        BUILD_ENV: test
      cache_from:
        - python:3.11-alpine3.19
    environment:
      ENVIRONMENT: test
      LOG_LEVEL: ERROR
      POSTGRES_HOST: alpine-test-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: netra_test
      REDIS_HOST: alpine-test-redis
      REDIS_PORT: 6379
      REDIS_URL: redis://alpine-test-redis:6379
      CLICKHOUSE_HOST: alpine-test-clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_HTTP_PORT: 8123
      CLICKHOUSE_USER: test
      CLICKHOUSE_PASSWORD: test
      CLICKHOUSE_DB: test_analytics
      AUTH_SERVICE_URL: http://alpine-test-auth:8081
      TEST_MODE: "true"
      WORKERS: 2
      SERVICE_ID: backend-test-alpine
      JWT_SECRET_KEY: rsWwwvq8X6mCSuNv-TMXHDCfb96Xc-Dbay9MZy6EDCU
      SERVICE_SECRET: test_service_secret_32_character_minimum_length_required
      FERNET_KEY: hMT-Xu0HfnNhKf-J5sKXMJLnCfCiSUQnVdE1yc6Xqzg=
    ports:
      - "${ALPINE_TEST_BACKEND_PORT:-8002}:8000"
    depends_on:
      alpine-test-postgres:
        condition: service_healthy
        restart: true
      alpine-test-redis:
        condition: service_healthy
        restart: true
      alpine-test-clickhouse:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '1.0'
        reservations:
          memory: 2G

  alpine-test-auth:
    image: netra-alpine-test-auth:latest
    container_name: alpine-test-auth
    networks:
      default:
        aliases:
          - auth
    build:
      context: .
      dockerfile: dockerfiles/auth.alpine.Dockerfile
      args:
        BUILD_ENV: test
      cache_from:
        - python:3.11-alpine3.19
    environment:
      ENVIRONMENT: test
      LOG_LEVEL: ERROR
      POSTGRES_HOST: alpine-test-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: netra_test
      REDIS_HOST: alpine-test-redis
      REDIS_PORT: 6379
      REDIS_URL: redis://alpine-test-redis:6379
      TEST_MODE: "true"
      JWT_SECRET_KEY: rsWwwvq8X6mCSuNv-TMXHDCfb96Xc-Dbay9MZy6EDCU
      SERVICE_SECRET: test_service_secret_32_character_minimum_length_required
      SERVICE_ID: auth-test-alpine
    ports:
      - "${ALPINE_TEST_AUTH_PORT:-8083}:8081"
    depends_on:
      alpine-test-postgres:
        condition: service_healthy
        restart: true
      alpine-test-redis:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '1.0'
        reservations:
          memory: 1.5G

  alpine-test-frontend:
    image: netra-alpine-test-frontend:latest
    build:
      context: .
      dockerfile: dockerfiles/frontend.alpine.Dockerfile
      args:
        BUILD_ENV: test
        NEXT_PUBLIC_API_URL: http://localhost:8002
        NEXT_PUBLIC_AUTH_URL: http://localhost:8083
        NEXT_PUBLIC_WS_URL: ws://localhost:8002
        NEXT_PUBLIC_ENVIRONMENT: test
      cache_from:
        - node:20-alpine
    environment:
      NODE_ENV: test
      PORT: 3000
    ports:
      - "${ALPINE_TEST_FRONTEND_PORT:-3002}:3000"
    depends_on:
      alpine-test-backend:
        condition: service_healthy
      alpine-test-auth:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 120s
    networks:
      - default
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.3'
        reservations:
          memory: 512M

networks:
  default:
    driver: bridge
    # Network name will be prefixed with project name automatically
    driver_opts:
      com.docker.network.driver.mtu: 1500

# Named volumes for persistent storage
volumes:
  alpine-test-postgres-data:
  alpine-test-redis-data:
  alpine-test-clickhouse-data: