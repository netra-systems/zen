{
  "instances": [
    {
      "command": "/action",
      "name": "action-comprehensive",
      "description": "Executes specific development actions",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/agent-test",
      "name": "agent-test-comprehensive",
      "description": "Tests agent functionality and behavior",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/analyze-repository",
      "name": "analyze-repository-comprehensive",
      "description": "Comprehensive repository analysis and insights",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/audit-docker-logs",
      "name": "audit-docker-logs-comprehensive",
      "description": "Audits Docker container logs",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/audit-gcp-error-loop",
      "name": "audit-gcp-error-loop-comprehensive",
      "description": "Continuous GCP error monitoring and analysis",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/audit-gcp-logs",
      "name": "audit-gcp-logs-comprehensive",
      "description": "Audits Google Cloud Platform logs",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/audit-issue-depends",
      "name": "audit-issue-depends-comprehensive",
      "description": "Audits issue dependencies and relationships",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/audit-staging-logs-gcp-loop",
      "name": "audit-staging-logs-gcp-loop-comprehensive",
      "description": "Continuous staging environment log monitoring",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/canary",
      "name": "canary-comprehensive",
      "description": "Canary deployment and testing workflows",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/clear-old-issue-locks",
      "name": "clear-old-issue-locks-comprehensive",
      "description": "Clears stale issue locks and constraints",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/compliance",
      "name": "compliance-comprehensive",
      "description": "Runs architectural compliance checks",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/createtestsv2",
      "name": "createtestsv2-comprehensive",
      "description": "Creates comprehensive test coverage",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/critical-path-planning",
      "name": "critical-path-planning-comprehensive",
      "description": "Plans critical development paths",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/debug-error",
      "name": "debug-error-comprehensive",
      "description": "Debugs and analyzes system errors",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/dependency-analysis",
      "name": "dependency-analysis-comprehensive",
      "description": "Analyzes project dependencies and relationships",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/dependency-health-check",
      "name": "dependency-health-check-comprehensive",
      "description": "Health check for project dependencies",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/deploy-gcp",
      "name": "deploy-gcp-comprehensive",
      "description": "Deploys application to Google Cloud Platform",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/docker-rebuild",
      "name": "docker-rebuild-comprehensive",
      "description": "Rebuilds Docker containers and images",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/e2e-fix-directly",
      "name": "e2e-fix-directly-comprehensive",
      "description": "Direct end-to-end test fixes",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/failingtestsgardener",
      "name": "failingtestsgardener-comprehensive",
      "description": "Identifies and fixes failing tests",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/gcploggardener",
      "name": "gcploggardener-comprehensive",
      "description": "Maintains and analyzes GCP logs",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/gitcommitgardener",
      "name": "gitcommitgardener-comprehensive",
      "description": "Maintains git commit hygiene and standards",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/gitissueplannerv1",
      "name": "gitissueplannerv1-comprehensive",
      "description": "Plans and structures GitHub issue resolution",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/gitissueprogressorv2",
      "name": "gitissueprogressorv2-comprehensive",
      "description": "Advances GitHub issues through workflow states",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/gitissueprogressorv3",
      "name": "gitissueprogressorv3-comprehensive",
      "description": "Advanced GitHub issue workflow management",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/issue-consolidation",
      "name": "issue-consolidation-comprehensive",
      "description": "Consolidates related issues and duplicates",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/issuecrush",
      "name": "issuecrush-comprehensive",
      "description": "Aggressively resolves multiple issues",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/issuemergesamegardener",
      "name": "issuemergesamegardener-comprehensive",
      "description": "Merges and consolidates similar issues",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/pre-commit",
      "name": "pre-commit-comprehensive",
      "description": "Runs pre-commit hooks and validation",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/priority-test-create",
      "name": "priority-test-create-comprehensive",
      "description": "Creates high-priority tests",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/prmergergit",
      "name": "prmergergit-comprehensive",
      "description": "Handles pull request merging workflows",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/refresh-upate-tests",
      "name": "refresh-upate-tests-comprehensive",
      "description": "Refreshes and updates test suites",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/refreshgardener",
      "name": "refreshgardener-comprehensive",
      "description": "Refreshes and updates system components",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/run-demo",
      "name": "run-demo-comprehensive",
      "description": "Runs application demo and showcase",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/run-unit-frontend-tests",
      "name": "run-unit-frontend-tests-comprehensive",
      "description": "Runs frontend unit tests",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/runtests",
      "name": "runtests-comprehensive",
      "description": "Executes various test suites",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/scope-work",
      "name": "scope-work-comprehensive",
      "description": "Defines and scopes development work",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/ssot-regression-check",
      "name": "ssot-regression-check-comprehensive",
      "description": "Checks for SSOT architecture regressions",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/ssotgardener",
      "name": "ssotgardener-comprehensive",
      "description": "Maintains Single Source of Truth architecture",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/stale-resolver-issue-status",
      "name": "stale-resolver-issue-status-comprehensive",
      "description": "Resolves stale issues and updates status",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/tdd",
      "name": "tdd-comprehensive",
      "description": "Test-driven development workflow",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/test-create-integration",
      "name": "test-create-integration-comprehensive",
      "description": "Creates integration tests",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/test-create-unit-coverage",
      "name": "test-create-unit-coverage-comprehensive",
      "description": "Creates unit tests for coverage",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/test-real",
      "name": "test-real-comprehensive",
      "description": "Runs tests with real services",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/test-update-e2e-fix-fakes",
      "name": "test-update-e2e-fix-fakes-comprehensive",
      "description": "Updates E2E tests and fixes mock issues",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/testgardener",
      "name": "testgardener-comprehensive",
      "description": "Maintains and improves test infrastructure",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/ultimate-test-deploy-loop",
      "name": "ultimate-test-deploy-loop-comprehensive",
      "description": "Comprehensive test and deployment cycle",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    },
    {
      "command": "/websocket-test",
      "name": "websocket-test-comprehensive",
      "description": "Tests WebSocket functionality",
      "allowed_tools": ["Task", "Read", "Glob", "Grep", "Write", "Edit", "MultiEdit", "Bash"],
      "permission_mode": "acceptEdits",
      "output_format": "stream-json",
      "session_id": null,
      "clear_history": true,
      "compact_history": false,
      "pre_commands": ["/clear"]
    }
  ]
}