SPEC:chat_ui_ux: UI/UX for Chat

chat_ui_ux:1:0: AMAZING UI/UX experience for Chat.

chat_ui_ux:1:0:0: Conventions:
chat_ui_ux:1:0:0:0 See Schemas and Types that are existing to see what fields and concepts are available.
chat_ui_ux:1:0:0:1: ALL chat components stay in components/chat
chat_ui_ux:1:0:0:2: There is a single MainChat: "drop in" component that has all sub chat components
chat_ui_ux:1:0:0:2: MainChat is the only item imported into the next.js formatted app/chat folder
chat_ui_ux:1:0:1:  The primary header is the SubAgent name 
chat_ui_ux:1:0:1:0 Secondary items are things related to SubAgent status and state etc. e.g. Tools being used
chat_ui_ux:1:0:2: Third is messages
chat_ui_ux:1:0:3: Show relevant concepts as collapsible items inside cards etc.
chat_ui_ux:1:0:4: Show errors if existing
chat_ui_ux:1:0:6: Define with strong types which messages are shown to user by default (not all events we want to show)
chat_ui_ux:1:0:7: User messages display user text and user references
chat_ui_ux:1:0:8: UI/UX feels “alive” while still being subtle
chat_ui_ux:1:0:9: An expandable “Raw” mode that can expand JSON objects at various processing stages (e.g JSON tree view)
chat_ui_ux:1:0:10: A “Stop” processing button
chat_ui_ux:1:0:11:Examples:
chat_ui_ux:1:0:11:Examples:0: Import examplePrompts.ts. Keep examplePrompts.ts exactly as is.
chat_ui_ux:1:0:11:Examples:1: Show examples to user.
chat_ui_ux:1:0:11:Examples:2: Examples are shown as cards with great visual UI/UX style
chat_ui_ux:1:0:11:Examples:3: Clicking an example sends it to chat and collapses examples panel

chat_ui_ux:1:0:12: add tests for chat_ui_ux:1:0:1 through chat_ui_ux:1:0:11 

chat_ui_ux:ENDs