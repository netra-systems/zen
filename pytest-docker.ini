[pytest]
# Docker-optimized pytest configuration for low-memory environments
# CRITICAL: This configuration is designed to prevent Docker container crashes

# Minimize test discovery scope
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Docker-specific memory optimizations  
addopts = 
    -ra
    --strict-markers
    --strict-config
    --timeout=60
    --tb=line
    --maxfail=5
    --disable-warnings
    --quiet
    --no-cov
    --durations=0
    --forked
    --dist=no
    --numprocesses=1
    -p pytest_memory_plugin

# Plugin configuration
plugins = 
    pytest_memory_plugin

# Memory management
minversion = 6.0
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Collection optimization for Docker  
collect_ignore = venv .venv node_modules archive temp logs htmlcov benchmark_results test_data

# Docker-specific markers
markers =
    docker: Tests safe to run in Docker containers
    docker_safe: Low-memory tests for Docker
    docker_skip: Skip in Docker environments
    memory_safe: Tests with controlled memory usage
    quick_docker: Fast Docker tests only
    
    # Core markers from main config
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    health: Health check tests
    
    # Service markers
    backend: Backend service tests
    auth: Auth service tests
    frontend: Frontend tests
    
    # Skip heavy tests in Docker
    slow: Slow running tests (skip in Docker)
    stress: Stress tests (skip in Docker)
    real_services: Tests using real services (skip in Docker)
    real_llm: Tests using real LLM APIs (skip in Docker)
    requires_redis: Tests requiring Redis
    requires_postgres: Tests requiring PostgreSQL
    
    # Docker test types
    smoke: Basic smoke tests for Docker
    critical: Critical system tests