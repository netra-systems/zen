/**
 * Export Utilities - Shared utility functions for export operations
 * Provides common file operations and utility functions
 */

import { ReportData } from './types';

/**
 * Generate filename with timestamp
 */
export function generateFilename(title?: string): string {
  const timestamp = new Date().toISOString()
    .replace(/[:.]/g, '-')
    .slice(0, -5);
  const baseTitle = title 
    ? title.replace(/[^a-z0-9]/gi, '_').toLowerCase() 
    : 'report';
  return `${baseTitle}_${timestamp}`;
}

/**
 * Download blob as file
 */
export function downloadBlob(blob: Blob, filename: string): void {
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
}

/**
 * Create export metadata
 */
export function createExportMetadata(format?: string): Record<string, string> {
  return {
    exportedAt: new Date().toISOString(),
    version: '1.0',
    format: format || 'unknown',
    platform: 'Netra AI Optimization Platform'
  };
}

/**
 * Sanitize text for file operations
 */
export function sanitizeText(text: string): string {
  return text.replace(/[^\w\s-]/g, '').trim();
}

/**
 * Format timestamp for display
 */
export function formatTimestamp(timestamp?: number): string {
  return new Date(timestamp || Date.now()).toLocaleString();
}

/**
 * Validate export data
 */
export function validateExportData(data: ReportData): boolean {
  return !!(data.title || data.sections || data.metrics);
}

/**
 * Get export file extension
 */
export function getFileExtension(format: string): string {
  const extensions: Record<string, string> = {
    pdf: 'pdf',
    json: 'json',
    csv: 'csv',
    markdown: 'md',
    pptx: 'pptx'
  };
  return extensions[format] || 'txt';
}

/**
 * Create footer text
 */
export function createFooterText(): string {
  return 'Generated by Netra AI Optimization Platform';
}