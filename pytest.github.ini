[tool:pytest]
# GitHub Integration Test Configuration
# CRITICAL: This configuration is specifically for GitHub integration tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories for GitHub integration
testpaths = 
    test_framework/tests/unit/github_integration
    test_framework/tests/integration/github_integration
    tests/e2e/github_integration
    tests/mission_critical/github_integration

# Markers for GitHub integration tests
markers =
    github: GitHub integration test marker
    github_integration: GitHub API integration tests
    github_api: Tests that use GitHub API directly
    github_issue: Tests related to GitHub issue management
    github_webhook: Tests for GitHub webhook functionality
    github_auth: Tests for GitHub authentication
    github_rate_limit: Tests for GitHub rate limiting
    github_security: Tests for GitHub security features
    github_performance: Tests for GitHub performance
    github_unit: GitHub unit tests (no API calls)
    github_critical: Mission critical GitHub tests
    requires_github_token: Tests that require valid GitHub token
    requires_github_repo: Tests that require GitHub repository access
    creates_github_issues: Tests that create GitHub issues (need cleanup)
    github_cleanup: Tests that perform cleanup operations

# Minimum version requirements
minversion = 6.0

# Add current directory to Python path
addopts = 
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    -ra
    --timeout=300
    --timeout-method=thread

# Parallel execution settings (for GitHub tests that support it)
# Note: GitHub API rate limiting may require sequential execution for some tests

# Test output configuration
console_output_style = progress
junit_family = xunit2

# GitHub-specific test configuration
filterwarnings =
    ignore::DeprecationWarning:github.*
    ignore::PendingDeprecationWarning:httpx.*
    ignore::urllib3.exceptions.InsecureRequestWarning

# Logging configuration for GitHub tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [GitHub] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging for debugging
log_file = reports/github_tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(filename)s:%(lineno)d - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Custom test report locations
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = call