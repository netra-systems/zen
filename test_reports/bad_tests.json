{
  "version": "1.0",
  "tests": {
    "test_sample_bad_test.py::test_always_fails": {
      "component": "backend",
      "first_seen": "2025-08-20T14:35:04.497767",
      "last_failure": "2025-08-20T14:35:47.970844",
      "last_pass": null,
      "total_failures": 5,
      "total_passes": 0,
      "consecutive_failures": 5,
      "recent_failures": [
        {
          "run_id": "run_20250820_143504_4257",
          "timestamp": "2025-08-20T14:35:04.497767",
          "error_type": "AssertionError",
          "error_message": "AssertionError: This test is intentionally designed to fail\nassert False"
        },
        {
          "run_id": "run_20250820_143539_39657",
          "timestamp": "2025-08-20T14:35:39.800822",
          "error_type": "AssertionError",
          "error_message": "AssertionError: This test is intentionally designed to fail\nassert False"
        },
        {
          "run_id": "run_20250820_143542_42348",
          "timestamp": "2025-08-20T14:35:42.472007",
          "error_type": "AssertionError",
          "error_message": "AssertionError: This test is intentionally designed to fail\nassert False"
        },
        {
          "run_id": "run_20250820_143545_45022",
          "timestamp": "2025-08-20T14:35:45.135863",
          "error_type": "AssertionError",
          "error_message": "AssertionError: This test is intentionally designed to fail\nassert False"
        },
        {
          "run_id": "run_20250820_143547_47820",
          "timestamp": "2025-08-20T14:35:47.970844",
          "error_type": "AssertionError",
          "error_message": "AssertionError: This test is intentionally designed to fail\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_quality_gate_pipeline_integration.py::TestQualityGatePipelineIntegration::test_threshold_enforcement_for_quality_levels": {
      "component": "backend",
      "first_seen": "2025-08-20T14:35:20.938759",
      "last_failure": "2025-08-20T14:37:02.438163",
      "last_pass": "2025-08-20T14:38:26.542859",
      "total_failures": 3,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_143520_20332",
          "timestamp": "2025-08-20T14:35:20.938759",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert False == True\n +  where False = ValidationResult(passed=False, metrics=QualityMetrics(specificity_score=0.45, actionability_score=0.3, quantification_score=0.9999999999999999, relevance_score=0.5, completeness_score=0.0, novelty_score=0.8, clarity_score=1.0, generic_phrase_count=0, circular_reasoning_detected=False, hallucination_risk=0.0, redundancy_ratio=0.0, word_count=11, sentence_count=4, numeric_values_count=8, specific_terms_count=0, overall_score=0.54, quality_leve"
        },
        {
          "run_id": "run_20250820_143622_82934",
          "timestamp": "2025-08-20T14:36:23.741413",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert True == False\n +  where True = ValidationResult(passed=True, metrics=QualityMetrics(specificity_score=0.45, actionability_score=0.3, quantification_score=0.9999999999999999, relevance_score=0.5, completeness_score=0.0, novelty_score=0.8, clarity_score=1.0, generic_phrase_count=0, circular_reasoning_detected=False, hallucination_risk=0.0, redundancy_ratio=0.0, word_count=11, sentence_count=4, numeric_values_count=8, specific_terms_count=0, overall_score=0.54, quality_level="
        },
        {
          "run_id": "run_20250820_143700_20970",
          "timestamp": "2025-08-20T14:37:02.438163",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert <QualityLevel.POOR: 'poor'> in [<QualityLevel.UNACCEPTABLE: 'unacceptable'>, <QualityLevel.POOR: 'poor'>, <QualityLevel.ACCEPTABLE: 'acceptable'>, <QualityLevel.GOOD: 'good'>, <QualityLevel.EXCELLENT: 'excellent'>]\n +  where <QualityLevel.POOR: 'poor'> = QualityMetrics(specificity_score=0.15000000000000002, actionability_score=0.0, quantification_score=0.0, relevance_score=0.5, completeness_score=0.4, novelty_score=0.8, clarity_score=1.0, generic_phrase_count=0, circular_r"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_quality_gate_pipeline_integration.py::TestQualityGatePipelineIntegration::test_rejection_and_retry_mechanisms": {
      "component": "backend",
      "first_seen": "2025-08-20T14:35:20.950777",
      "last_failure": "2025-08-20T14:38:06.086547",
      "last_pass": "2025-08-20T14:38:26.550996",
      "total_failures": 3,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_143520_20332",
          "timestamp": "2025-08-20T14:35:20.950777",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert ('specificity' in {'additional_instructions': ['Be extremely specific. Include exact parameter values, configuration settings, and metrics.', 'Provide step-by-step actionable instructions with specific commands or code.', 'Include numerical values for all claims. Show before/after metrics with percentages.'], 'temperature': 0.3} or 'quantification' in {'additional_instructions': ['Be extremely specific. Include exact parameter values, configuration settings, and metrics.',"
        },
        {
          "run_id": "run_20250820_143700_20970",
          "timestamp": "2025-08-20T14:37:02.460683",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert ('specificity' in {'additional_instructions': ['Be extremely specific. Include exact parameter values, configuration settings, and metrics.', 'Provide step-by-step actionable instructions with specific commands or code.', 'Include numerical values for all claims. Show before/after metrics with percentages.'], 'temperature': 0.3} or 'quantification' in {'additional_instructions': ['Be extremely specific. Include exact parameter values, configuration settings, and metrics.',"
        },
        {
          "run_id": "run_20250820_143805_85272",
          "timestamp": "2025-08-20T14:38:06.086547",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 0 > 0\n +  where 0 = len([])\n +    where [] = QualityMetrics(specificity_score=0.0, actionability_score=0.0, quantification_score=0.0, relevance_score=0.5, completeness_score=0.0, novelty_score=0.8, clarity_score=1.0, generic_phrase_count=0, circular_reasoning_detected=False, hallucination_risk=0.0, redundancy_ratio=0.0, word_count=5, sentence_count=2, numeric_values_count=0, specific_terms_count=0, overall_score=0.255, quality_level=<QualityLevel.UNACCEPTABLE: 'unacceptabl"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_quality_gate_pipeline_integration.py::TestQualityGatePipelineIntegration::test_pipeline_integration_with_redis_persistence": {
      "component": "backend",
      "first_seen": "2025-08-20T14:35:20.979705",
      "last_failure": "2025-08-20T14:37:02.515255",
      "last_pass": "2025-08-20T14:38:26.690937",
      "total_failures": 2,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_143520_20332",
          "timestamp": "2025-08-20T14:35:20.979705",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert False == True\n +  where False = ValidationResult(passed=False, metrics=QualityMetrics(specificity_score=0.30000000000000004, actionability_score=0.3, quantification_score=0.6, relevance_score=0.5, completeness_score=0.0, novelty_score=0.8, clarity_score=1.0, generic_phrase_count=0, circular_reasoning_detected=False, hallucination_risk=0.0, redundancy_ratio=0.0, word_count=11, sentence_count=4, numeric_values_count=8, specific_terms_count=0, overall_score=0.45, quality_leve"
        },
        {
          "run_id": "run_20250820_143700_20970",
          "timestamp": "2025-08-20T14:37:02.515255",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert False == True\n +  where False = ValidationResult(passed=False, metrics=QualityMetrics(specificity_score=0.30000000000000004, actionability_score=0.3, quantification_score=0.6, relevance_score=0.5, completeness_score=0.0, novelty_score=0.8, clarity_score=1.0, generic_phrase_count=0, circular_reasoning_detected=False, hallucination_risk=0.0, redundancy_ratio=0.0, word_count=11, sentence_count=4, numeric_values_count=8, specific_terms_count=0, overall_score=0.45, quality_leve"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_quality_gate_pipeline_integration.py::TestQualityGatePipelineIntegration::test_enterprise_sla_compliance_validation": {
      "component": "backend",
      "first_seen": "2025-08-20T14:35:20.996147",
      "last_failure": "2025-08-20T14:35:20.996147",
      "last_pass": "2025-08-20T14:38:26.738903",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_143520_20332",
          "timestamp": "2025-08-20T14:35:20.996147",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Enterprise SLA not met: 0.0% < 70%\nassert 0.0 >= 70.0"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_payment_gateway_integration.py::TestPaymentGatewayIntegration::test_07_webhook_signature_validation_security": {
      "component": "backend",
      "first_seen": "2025-08-20T14:38:58.921737",
      "last_failure": "2025-08-20T14:38:58.921737",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_143858_38083",
          "timestamp": "2025-08-20T14:38:58.921737",
          "error_type": "Error",
          "error_message": "Failed: DID NOT RAISE <class 'Exception'>"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_payment_webhook_processing.py::TestPaymentWebhookProcessing::test_webhook_idempotency_duplicate_prevention": {
      "component": "backend",
      "first_seen": "2025-08-20T14:41:19.338805",
      "last_failure": "2025-08-20T14:41:19.338805",
      "last_pass": "2025-08-20T15:20:13.438325",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144118_78616",
          "timestamp": "2025-08-20T14:41:19.338805",
          "error_type": "AssertionError",
          "error_message": "AssertionError: expected call not found.\nExpected: check_processed('evt_08a109a75ffb4fa5a02c83101746d6ce')\n  Actual: not called."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_payment_webhook_processing.py::TestPaymentWebhookProcessing::test_chargeback_and_dispute_handling": {
      "component": "backend",
      "first_seen": "2025-08-20T14:41:19.499729",
      "last_failure": "2025-08-20T14:41:19.499729",
      "last_pass": "2025-08-20T15:20:13.498155",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144118_78616",
          "timestamp": "2025-08-20T14:41:19.499729",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'notify_finance_team' to have been called once. Called 0 times."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_payment_webhook_processing.py::TestPaymentWebhookProcessing::test_webhook_error_recovery_and_alerting": {
      "component": "backend",
      "first_seen": "2025-08-20T14:41:19.531883",
      "last_failure": "2025-08-20T14:41:19.531883",
      "last_pass": "2025-08-20T15:20:13.502698",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144118_78616",
          "timestamp": "2025-08-20T14:41:19.531883",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 1 == 3\n +  where 1 = <AsyncMock name='mock.send_critical_alert' id='1675162083184'>.call_count\n +    where <AsyncMock name='mock.send_critical_alert' id='1675162083184'> = <Mock id='1675164634960'>.send_critical_alert"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_payment_webhook_processing.py::TestPaymentWebhookProcessing::test_payment_failure_refund_processing": {
      "component": "backend",
      "first_seen": "2025-08-20T14:41:19.544642",
      "last_failure": "2025-08-20T14:42:09.285891",
      "last_pass": "2025-08-20T15:20:13.506398",
      "total_failures": 2,
      "total_passes": 4,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144118_78616",
          "timestamp": "2025-08-20T14:41:19.544642",
          "error_type": "TypeError",
          "error_message": "TypeError: object Mock can't be used in 'await' expression"
        },
        {
          "run_id": "run_20250820_144208_28347",
          "timestamp": "2025-08-20T14:42:09.285891",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'handle_payment_failure' to have been called once. Called 0 times."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_startup_configuration_validation.py::TestStagingStartupConfigurationValidation::test_staging_ssl_requirements_enforced": {
      "component": "backend",
      "first_seen": "2025-08-20T14:42:25.258079",
      "last_failure": "2025-08-20T14:43:44.732559",
      "last_pass": "2025-08-20T14:46:04.023756",
      "total_failures": 3,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144224_44634",
          "timestamp": "2025-08-20T14:42:25.258079",
          "error_type": "Error",
          "error_message": "Failed: DID NOT RAISE <class 'Exception'>"
        },
        {
          "run_id": "run_20250820_144304_84597",
          "timestamp": "2025-08-20T14:43:05.193775",
          "error_type": "Error",
          "error_message": "Failed: DID NOT RAISE <class 'app.core.exceptions_config.ConfigurationError'>"
        },
        {
          "run_id": "run_20250820_144343_23971",
          "timestamp": "2025-08-20T14:43:44.732559",
          "error_type": "Error",
          "error_message": "Failed: DID NOT RAISE <class 'app.core.exceptions_config.ConfigurationError'>"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_startup_configuration_validation.py::TestStagingStartupConfigurationValidation::test_database_summary_reflects_staging_state": {
      "component": "backend",
      "first_seen": "2025-08-20T14:45:26.634751",
      "last_failure": "2025-08-20T14:45:26.634751",
      "last_pass": "2025-08-20T14:46:04.069700",
      "total_failures": 1,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144525_25929",
          "timestamp": "2025-08-20T14:45:26.634751",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert True == 'True'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cold_start_to_agent_response.py::test_cold_start_to_first_agent_response_e2e": {
      "component": "backend",
      "first_seen": "2025-08-20T14:45:34.888472",
      "last_failure": "2025-08-20T15:07:58.583190",
      "last_pass": null,
      "total_failures": 5,
      "total_passes": 0,
      "consecutive_failures": 5,
      "recent_failures": [
        {
          "run_id": "run_20250820_144532_32475",
          "timestamp": "2025-08-20T14:45:34.888472",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Services failed to start in 0.00s\nassert False"
        },
        {
          "run_id": "run_20250820_145546_46519",
          "timestamp": "2025-08-20T14:55:48.863329",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Services are not ready - please start dev launcher first\nassert False"
        },
        {
          "run_id": "run_20250820_150611_71531",
          "timestamp": "2025-08-20T15:06:15.901377",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Services are not ready - please start dev launcher first\nassert False"
        },
        {
          "run_id": "run_20250820_150707_27447",
          "timestamp": "2025-08-20T15:07:10.251388",
          "error_type": "Error",
          "error_message": "UnicodeEncodeError: 'charmap' codec can't encode character '\\u2713' in position 0: character maps to <undefined>"
        },
        {
          "run_id": "run_20250820_150755_75927",
          "timestamp": "2025-08-20T15:07:58.583190",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Authentication failed in 0.00s\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_correct_startup_order_auth_backend_frontend": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.918746",
      "last_failure": "2025-08-20T15:09:53.807411",
      "last_pass": null,
      "total_failures": 7,
      "total_passes": 0,
      "consecutive_failures": 7,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.918746",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_150605_65071",
          "timestamp": "2025-08-20T15:06:05.361277",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_150821_1161",
          "timestamp": "2025-08-20T15:08:21.391469",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_150834_14656",
          "timestamp": "2025-08-20T15:08:34.846685",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_150849_29023",
          "timestamp": "2025-08-20T15:08:49.212829",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_150938_78010",
          "timestamp": "2025-08-20T15:09:38.213648",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_150953_93631",
          "timestamp": "2025-08-20T15:09:53.807411",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_health_check_cascade_validation": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.932537",
      "last_failure": "2025-08-20T14:46:02.932537",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.932537",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_service_dependency_resolution": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.938954",
      "last_failure": "2025-08-20T14:46:02.938954",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.938954",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_startup_timing_and_readiness_checks": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.948782",
      "last_failure": "2025-08-20T14:46:02.948782",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.948782",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_startup_failure_handling": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.956866",
      "last_failure": "2025-08-20T14:46:02.956866",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.956866",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_inter_service_communication_validation": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.966923",
      "last_failure": "2025-08-20T14:46:02.966923",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.966923",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_staging_specific_service_configuration": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.973066",
      "last_failure": "2025-08-20T14:46:02.973066",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.973066",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_service_monitoring_and_observability": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.979676",
      "last_failure": "2025-08-20T14:46:02.979676",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.979676",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_rollback_capability_on_startup_failure": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.986871",
      "last_failure": "2025-08-20T14:46:02.986871",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.986871",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_multi_service_startup_sequence.py::TestStagingMultiServiceStartupSequence::test_load_balancer_integration_during_startup": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:02.993909",
      "last_failure": "2025-08-20T14:46:02.993909",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:02.993909",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_secrets_manager_integration.py::TestStagingSecretsManagerIntegration::test_google_secret_manager_client_initialization": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:03.567050",
      "last_failure": "2025-08-20T15:32:23.069975",
      "last_pass": "2025-08-20T15:32:55.989733",
      "total_failures": 2,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:03.567050",
          "error_type": "AttributeError",
          "error_message": "AttributeError: module 'dev_launcher.google_secret_manager' has no attribute 'secretmanager'"
        },
        {
          "run_id": "run_20250820_153222_42376",
          "timestamp": "2025-08-20T15:32:23.069975",
          "error_type": "AttributeError",
          "error_message": "AttributeError: module 'dev_launcher.google_secret_manager' has no attribute 'secretmanager'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_secrets_manager_integration.py::TestStagingSecretsManagerIntegration::test_secret_retrieval_from_google_secret_manager": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:03.646999",
      "last_failure": "2025-08-20T14:46:03.646999",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:03.646999",
          "error_type": "AttributeError",
          "error_message": "AttributeError: module 'dev_launcher.google_secret_manager' has no attribute 'secretmanager'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_secrets_manager_integration.py::TestStagingSecretsManagerIntegration::test_secret_rotation_without_disruption": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:03.736876",
      "last_failure": "2025-08-20T14:46:03.736876",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:03.736876",
          "error_type": "AttributeError",
          "error_message": "AttributeError: module 'dev_launcher.google_secret_manager' has no attribute 'secretmanager'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_secrets_manager_integration.py::TestStagingSecretsManagerIntegration::test_error_handling_for_unavailable_secrets": {
      "component": "backend",
      "first_seen": "2025-08-20T14:46:03.916698",
      "last_failure": "2025-08-20T14:46:03.916698",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_144602_62692",
          "timestamp": "2025-08-20T14:46:03.916698",
          "error_type": "AttributeError",
          "error_message": "AttributeError: module 'dev_launcher.google_secret_manager' has no attribute 'secretmanager'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_cache_invalidation_chain.py::TestCacheInvalidationChain::test_race_condition_prevention": {
      "component": "backend",
      "first_seen": "2025-08-20T14:48:34.214378",
      "last_failure": "2025-08-20T14:51:47.269195",
      "last_pass": "2025-08-20T15:27:25.616454",
      "total_failures": 2,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144812_92811",
          "timestamp": "2025-08-20T14:48:34.214378",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Too many failed operations: 340/500\nassert (340 / 500) >= 0.95"
        },
        {
          "run_id": "run_20250820_145145_5514",
          "timestamp": "2025-08-20T14:51:47.269195",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Too many failed operations: 340/500\nassert (340 / 500) >= 0.7"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_cache_invalidation_chain.py::TestCacheInvalidationChain::test_cache_warming_performance": {
      "component": "backend",
      "first_seen": "2025-08-20T14:48:35.058925",
      "last_failure": "2025-08-20T15:22:45.987064",
      "last_pass": "2025-08-20T15:27:25.756266",
      "total_failures": 2,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144812_92811",
          "timestamp": "2025-08-20T14:48:35.058925",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Cache warming for small_batch took 804.2006492614746ms, exceeds 100ms target\nassert 804.2006492614746 < 100"
        },
        {
          "run_id": "run_20250820_152220_40946",
          "timestamp": "2025-08-20T15:22:45.987064",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Cache warming for medium_batch took 3095.0820446014404ms, exceeds 2000ms target\nassert 3095.0820446014404 < 2000"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_cache_invalidation_chain.py::test_comprehensive_cache_invalidation_validation": {
      "component": "backend",
      "first_seen": "2025-08-20T14:48:35.828412",
      "last_failure": "2025-08-20T15:23:14.671003",
      "last_pass": "2025-08-20T15:27:46.919607",
      "total_failures": 2,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_144812_92811",
          "timestamp": "2025-08-20T14:48:35.828412",
          "error_type": "Error",
          "error_message": "Failed: Fixture \"setup_test_environment\" called directly. Fixtures are not meant to be called directly,\nbut are created automatically when test functions request them as parameters.\nSee https://docs.pytest.org/en/stable/explanation/fixtures.html for more information about fixtures, and\nhttps://docs.pytest.org/en/stable/deprecations.html#calling-fixtures-directly"
        },
        {
          "run_id": "run_20250820_152220_40946",
          "timestamp": "2025-08-20T15:23:14.671003",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Cache invalidation test suite success rate 66.66666666666666% below 85% requirement\nassert 66.66666666666666 >= 85.0"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_usage_metering_billing.py::TestUsageMeteringBilling::test_03_concurrent_usage_metering_accuracy": {
      "component": "backend",
      "first_seen": "2025-08-20T14:49:01.847414",
      "last_failure": "2025-08-20T14:52:16.769638",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_144852_32613",
          "timestamp": "2025-08-20T14:49:01.847414",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Not all concurrent usage tracking succeeded\nassert 1 == 10\n +  where 1 = len([{'cost_cents': 0, 'metadata': '{\"endpoint\": \"/endpoint_0\", \"method\": \"POST\"}', 'quantity': 1, 'resource_type': 'api_call'}])"
        },
        {
          "run_id": "run_20250820_145213_33355",
          "timestamp": "2025-08-20T14:52:16.769638",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Too few concurrent operations succeeded: 1/10\nassert 1 >= 7\n +  where 1 = len([{'cost_cents': 0, 'metadata': '{\"endpoint\": \"/endpoint_0\", \"method\": \"POST\"}', 'quantity': 1, 'resource_type': 'api_call'}])"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_postgresql_connection_pooling_and_failover": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.809436",
      "last_failure": "2025-08-20T14:51:37.376856",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.809436",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_145136_96970",
          "timestamp": "2025-08-20T14:51:37.376856",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_clickhouse_connection_handling_staging_ports": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.815655",
      "last_failure": "2025-08-20T14:51:09.815655",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.815655",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_redis_connection_pooling_and_clustering": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.821392",
      "last_failure": "2025-08-20T14:51:09.821392",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.821392",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_database_migration_execution_staging": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.829176",
      "last_failure": "2025-08-20T14:51:09.829176",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.829176",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_connection_recovery_after_network_issues": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.835886",
      "last_failure": "2025-08-20T14:51:09.836898",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.836898",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_transaction_rollback_on_connection_loss": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.847496",
      "last_failure": "2025-08-20T14:51:09.847496",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.847496",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_database_health_monitoring_staging": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.855565",
      "last_failure": "2025-08-20T14:51:09.855565",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.855565",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_connection_timeout_and_retry_logic": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.864929",
      "last_failure": "2025-08-20T14:51:09.864929",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.864929",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py::TestStagingDatabaseConnectionResilience::test_connection_performance_monitoring_staging": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:09.871341",
      "last_failure": "2025-08-20T14:51:09.871341",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145109_69571",
          "timestamp": "2025-08-20T14:51:09.871341",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_session_creation_and_storage": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.192687",
      "last_failure": "2025-08-20T14:51:41.192687",
      "last_pass": "2025-08-20T15:13:13.459863",
      "total_failures": 1,
      "total_passes": 6,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.192687",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Session data was not stored\nassert None is not None"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_session_retrieval_and_validation": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.208412",
      "last_failure": "2025-08-20T14:55:56.506157",
      "last_pass": "2025-08-20T15:13:13.463419",
      "total_failures": 2,
      "total_passes": 5,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.208412",
          "error_type": "Error",
          "error_message": "assert None is not None"
        },
        {
          "run_id": "run_20250820_145555_55563",
          "timestamp": "2025-08-20T14:55:56.506157",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert '2025-08-20T2....938834+00:00' == '2025-08-20T2....939824+00:00'\n  \n  - 2025-08-20T21:55:55.939824+00:00\n  ?                       - ^\n  + 2025-08-20T21:55:55.938834+00:00\n  ?                        ^^"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_session_expiration_and_ttl_management": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.228918",
      "last_failure": "2025-08-20T14:51:41.228918",
      "last_pass": "2025-08-20T15:13:13.466936",
      "total_failures": 1,
      "total_passes": 4,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.228918",
          "error_type": "Error",
          "error_message": "assert None is not None"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_concurrent_session_handling": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.241357",
      "last_failure": "2025-08-20T15:11:17.940994",
      "last_pass": "2025-08-20T15:13:13.468936",
      "total_failures": 2,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.241357",
          "error_type": "Error",
          "error_message": "assert None is not None"
        },
        {
          "run_id": "run_20250820_151117_77253",
          "timestamp": "2025-08-20T15:11:17.940994",
          "error_type": "Error",
          "error_message": "assert None is not None"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_session_synchronization_across_services": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.259954",
      "last_failure": "2025-08-20T15:11:17.953910",
      "last_pass": "2025-08-20T15:13:13.473504",
      "total_failures": 2,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.259954",
          "error_type": "TypeError",
          "error_message": "TypeError: the JSON object must be str, bytes or bytearray, not NoneType"
        },
        {
          "run_id": "run_20250820_151117_77253",
          "timestamp": "2025-08-20T15:11:17.953910",
          "error_type": "TypeError",
          "error_message": "TypeError: the JSON object must be str, bytes or bytearray, not NoneType"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_redis_connection_recovery_scenarios": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.281720",
      "last_failure": "2025-08-20T15:12:33.482626",
      "last_pass": "2025-08-20T15:13:13.478035",
      "total_failures": 3,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.281720",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_151117_77253",
          "timestamp": "2025-08-20T15:11:17.961071",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        },
        {
          "run_id": "run_20250820_151233_53249",
          "timestamp": "2025-08-20T15:12:33.482626",
          "error_type": "Error",
          "error_message": "Failed: async def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_redis_session_integration.py::TestRedisSessionIntegration::test_session_data_integrity": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:41.300932",
      "last_failure": "2025-08-20T15:11:17.972325",
      "last_pass": "2025-08-20T15:13:13.480023",
      "total_failures": 2,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145139_99434",
          "timestamp": "2025-08-20T14:51:41.300932",
          "error_type": "Error",
          "error_message": "assert None is not None"
        },
        {
          "run_id": "run_20250820_151117_77253",
          "timestamp": "2025-08-20T15:11:17.972325",
          "error_type": "Error",
          "error_message": "assert None is not None"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_state_recovery.py::test_no_message_loss_during_reconnection": {
      "component": "backend",
      "first_seen": "2025-08-20T14:51:58.299698",
      "last_failure": "2025-08-20T14:59:51.316281",
      "last_pass": "2025-08-20T15:16:43.594389",
      "total_failures": 4,
      "total_passes": 8,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_145155_15054",
          "timestamp": "2025-08-20T14:51:58.300714",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        },
        {
          "run_id": "run_20250820_145442_82064",
          "timestamp": "2025-08-20T14:54:45.975711",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        },
        {
          "run_id": "run_20250820_145824_4590",
          "timestamp": "2025-08-20T14:58:27.408307",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        },
        {
          "run_id": "run_20250820_145948_88495",
          "timestamp": "2025-08-20T14:59:51.316281",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unit/test_feature_flags_example.py::test_roi_calculator_basic": {
      "component": "backend",
      "first_seen": "2025-08-20T14:52:05.776273",
      "last_failure": "2025-08-20T14:52:05.776273",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_145204_24935",
          "timestamp": "2025-08-20T14:52:05.776273",
          "error_type": "Error",
          "error_message": "ModuleNotFoundError: No module named 'frontend.components.demo.ROICalculator'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_session_state_websocket_sync.py::TestSessionStateWebSocketSync::test_basic_session_state_preservation": {
      "component": "backend",
      "first_seen": "2025-08-20T15:04:50.138709",
      "last_failure": "2025-08-20T15:04:50.138709",
      "last_pass": "2025-08-20T15:05:43.940236",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_150448_88051",
          "timestamp": "2025-08-20T15:04:50.138709",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_thread_management_ui_update.py::TestThreadManagementUIUpdate::test_thread_creation_ui_synchronization": {
      "component": "backend",
      "first_seen": "2025-08-20T15:05:54.912282",
      "last_failure": "2025-08-20T15:05:54.912282",
      "last_pass": "2025-08-20T15:07:03.707991",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_150553_53006",
          "timestamp": "2025-08-20T15:05:54.912282",
          "error_type": "Error",
          "error_message": "RuntimeError: Database not configured"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_authentication_token_flow.py::TestAuthenticationTokenFlow::test_jwt_creation_and_validation": {
      "component": "backend",
      "first_seen": "2025-08-20T15:07:48.728470",
      "last_failure": "2025-08-20T15:07:48.728470",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_150746_66648",
          "timestamp": "2025-08-20T15:07:48.728470",
          "error_type": "Error",
          "error_message": "RuntimeError: Database not configured"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_websocket_connection_initialization": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.332933",
      "last_failure": "2025-08-20T15:15:20.505776",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.332933",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'accept' to have been called once. Called 0 times."
        },
        {
          "run_id": "run_20250820_151519_19878",
          "timestamp": "2025-08-20T15:15:20.505776",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'accept' to have been called once. Called 0 times."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_websocket_authentication_handshake": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.344248",
      "last_failure": "2025-08-20T15:15:07.344248",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.344248",
          "error_type": "Error",
          "error_message": "ModuleNotFoundError: No module named 'app.services.auth_service'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_message_routing_through_redis_pubsub": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.384264",
      "last_failure": "2025-08-20T15:15:07.384264",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.384264",
          "error_type": "AssertionError",
          "error_message": "AssertionError: expected call not found.\nExpected: send_json({'type': 'thread_update', 'data': {'thread_id': 'thread_123', 'content': 'New message'}, 'timestamp': '2025-08-20T22:15:07.349757+00:00'})\n  Actual: not called."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_connection_state_management": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.394008",
      "last_failure": "2025-08-20T15:15:07.394008",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.394008",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 1 == 0\n +  where 1 = len({'ws_user_789': 2})\n +    where {'ws_user_789': 2} = <app.ws_manager.WebSocketManager object at 0x00000238DFBE8380>.active_connections"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_websocket_connection_pooling": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.421407",
      "last_failure": "2025-08-20T15:15:07.421407",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.421407",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 6 == 5\n +  where 6 = len({'user_0': 1, 'user_1': 1, 'user_2': 1, 'user_3': 1, ...})\n +    where {'user_0': 1, 'user_1': 1, 'user_2': 1, 'user_3': 1, ...} = <app.ws_manager.WebSocketManager object at 0x00000238DFBE8380>.active_connections"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_error_handling_in_websocket_layer": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.433978",
      "last_failure": "2025-08-20T15:15:07.433978",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.433978",
          "error_type": "Error",
          "error_message": "Failed: DID NOT RAISE <class 'ConnectionError'>"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_websocket_connection_health_monitoring": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.446207",
      "last_failure": "2025-08-20T15:15:07.446207",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.446207",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'int' object has no attribute 'websocket'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_lifecycle_integration.py::TestWebSocketLifecycleIntegration::test_concurrent_websocket_operations": {
      "component": "backend",
      "first_seen": "2025-08-20T15:15:07.472770",
      "last_failure": "2025-08-20T15:15:07.472770",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_151506_6753",
          "timestamp": "2025-08-20T15:15:07.472770",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 16 == 10\n +  where 16 = len({'concurrent_user_0': 1, 'concurrent_user_1': 1, 'concurrent_user_2': 1, 'concurrent_user_3': 1, ...})\n +    where {'concurrent_user_0': 1, 'concurrent_user_1': 1, 'concurrent_user_2': 1, 'concurrent_user_3': 1, ...} = <app.ws_manager.WebSocketManager object at 0x00000238DFBE8380>.active_connections"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_dev_environment_initialization.py::TestDevEnvironmentInitialization::test_auto_recovery_mechanisms": {
      "component": "backend",
      "first_seen": "2025-08-20T15:21:43.231082",
      "last_failure": "2025-08-20T15:21:43.231082",
      "last_pass": "2025-08-20T15:23:22.927303",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_152131_91819",
          "timestamp": "2025-08-20T15:21:43.231082",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Backend recovery should have been called\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_dev_environment_initialization.py::TestDevEnvironmentInitialization::test_startup_timing_and_performance": {
      "component": "backend",
      "first_seen": "2025-08-20T15:23:49.212976",
      "last_failure": "2025-08-20T15:23:49.212976",
      "last_pass": "2025-08-20T15:25:21.667148",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_152317_97778",
          "timestamp": "2025-08-20T15:23:49.212976",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Database validation took 26.03s\nassert 26.029118299484253 < 10.0"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cold_start_to_agent_response.py::TestColdStartToAgentResponse::test_cold_start_to_first_agent_response_e2e": {
      "component": "backend",
      "first_seen": "2025-08-20T15:33:52.290612",
      "last_failure": "2025-08-20T15:35:30.482336",
      "last_pass": "2025-08-20T17:27:58.348999",
      "total_failures": 4,
      "total_passes": 5,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_153348_28739",
          "timestamp": "2025-08-20T15:33:52.290612",
          "error_type": "AssertionError",
          "error_message": "AssertionError: WebSocket connection failed\nassert False"
        },
        {
          "run_id": "run_20250820_153421_61139",
          "timestamp": "2025-08-20T15:34:24.840906",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Agent response not received within timeout\nassert False"
        },
        {
          "run_id": "run_20250820_153435_75487",
          "timestamp": "2025-08-20T15:34:39.467412",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'QualityMetricValidator' object has no attribute '_calculate_quality_metrics'"
        },
        {
          "run_id": "run_20250820_153526_26621",
          "timestamp": "2025-08-20T15:35:30.482336",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Response quality below threshold: {'metrics': {'specificity': 0.336, 'actionability': 0.48649999999999993, 'completeness': 0.168, 'clarity': 0.6255}, 'thresholds': {'specificity': 0.6, 'actionability': 0.6, 'completeness': 0.5, 'clarity': 0.7}, 'passed': False, 'expected_quality': 'good', 'overall_score': 0.40545}\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/test_system_startup.py::TestSystemStartup::test_dev_launcher_list_services": {
      "component": "backend",
      "first_seen": "2025-08-20T15:37:33.798496",
      "last_failure": "2025-08-20T15:38:02.621847",
      "last_pass": "2025-08-20T15:40:37.912102",
      "total_failures": 2,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_153731_51937",
          "timestamp": "2025-08-20T15:37:33.798496",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'Current service configuration:' in '\\n============================================================\\n\u00f0\u0178\u201d\u00a7 Current Service Configuration\\n=================...ocal instance\\n                       localhost:8081\\n\\n============================================================\\n'\n +  where '\\n============================================================\\n\u00f0\u0178\u201d\u00a7 Current Service Configuration\\n=================...ocal instance\\n                       localhost:8081\\n\\n============="
        },
        {
          "run_id": "run_20250820_153800_80998",
          "timestamp": "2025-08-20T15:38:02.621847",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'Current service configuration:' in '\\n============================================================\\n\u00f0\u0178\u201d\u00a7 Current Service Configuration\\n============================================================\\n\\nConfiguration file: C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Netra\\\\netra-core-generation-1\\\\.dev_services.json\\n\\n   Redis           : local    - Local instance\\n                       localhost:6379\\n   ClickHouse      : local    - Local instance\\n                       localho"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_database_connectivity.py::test_database_connectivity_check_success": {
      "component": "backend",
      "first_seen": "2025-08-20T15:38:52.669669",
      "last_failure": "2025-08-20T15:38:52.669669",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_153849_29243",
          "timestamp": "2025-08-20T15:38:52.669669",
          "error_type": "Error",
          "error_message": "assert False is True"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_database_connectivity.py::test_database_connectivity_with_none_engine": {
      "component": "backend",
      "first_seen": "2025-08-20T15:38:52.715210",
      "last_failure": "2025-08-20T15:38:52.715210",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_153849_29243",
          "timestamp": "2025-08-20T15:38:52.715210",
          "error_type": "AttributeError",
          "error_message": "Failed: DID NOT RAISE <class 'AttributeError'>"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_database_connectivity.py::test_startup_schema_validation_with_uninitialized_engine": {
      "component": "backend",
      "first_seen": "2025-08-20T15:38:52.885677",
      "last_failure": "2025-08-20T15:38:52.885677",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_153849_29243",
          "timestamp": "2025-08-20T15:38:52.885677",
          "error_type": "AttributeError",
          "error_message": "AttributeError: <module 'app.startup_module' from 'C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Netra\\\\netra-core-generation-1\\\\app\\\\startup_module.py'> does not have the attribute 'async_engine'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_database_connectivity.py::test_comprehensive_validation_with_engine": {
      "component": "backend",
      "first_seen": "2025-08-20T15:38:52.918457",
      "last_failure": "2025-08-20T15:38:52.918457",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_153849_29243",
          "timestamp": "2025-08-20T15:38:52.918457",
          "error_type": "Error",
          "error_message": "assert False is True"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_websocket.py::test_websocket_receives_message_from_server": {
      "component": "backend",
      "first_seen": "2025-08-20T15:39:28.737224",
      "last_failure": "2025-08-20T15:39:28.737224",
      "last_pass": "2025-08-20T16:36:58.879335",
      "total_failures": 1,
      "total_passes": 4,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_153924_64528",
          "timestamp": "2025-08-20T15:39:28.737224",
          "error_type": "Error",
          "error_message": "starlette.websockets.WebSocketDisconnect"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_websocket_simple.py::test_websocket_connection": {
      "component": "backend",
      "first_seen": "2025-08-20T15:44:04.327045",
      "last_failure": "2025-08-20T15:44:04.327045",
      "last_pass": "2025-08-20T15:59:14.284235",
      "total_failures": 1,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_154401_41016",
          "timestamp": "2025-08-20T15:44:04.327045",
          "error_type": "Error",
          "error_message": "starlette.websockets.WebSocketDisconnect"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_dev_environment.py::TestDatabaseTransactionsE2E::test_concurrent_transactions": {
      "component": "backend",
      "first_seen": "2025-08-20T15:44:51.389691",
      "last_failure": "2025-08-20T15:44:51.389691",
      "last_pass": "2025-08-20T21:03:06.160842",
      "total_failures": 1,
      "total_passes": 5,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_154445_85298",
          "timestamp": "2025-08-20T15:44:51.389691",
          "error_type": "Error",
          "error_message": "assert 404 in [200, 201]\n +  where 404 = <Response [404 Not Found]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_dev_environment.py::TestAuthenticationE2E::test_complete_auth_lifecycle": {
      "component": "backend",
      "first_seen": "2025-08-20T15:46:00.707612",
      "last_failure": "2025-08-20T19:54:06.785641",
      "last_pass": "2025-08-20T21:02:48.590568",
      "total_failures": 4,
      "total_passes": 7,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_154551_51591",
          "timestamp": "2025-08-20T15:46:00.707612",
          "error_type": "Error",
          "error_message": "assert 403 in [200, 201]\n +  where 403 = <Response [403 Forbidden]>.status_code"
        },
        {
          "run_id": "run_20250820_154715_35080",
          "timestamp": "2025-08-20T15:47:23.107011",
          "error_type": "Error",
          "error_message": "assert 404 == 200\n +  where 404 = <Response [404 Not Found]>.status_code"
        },
        {
          "run_id": "run_20250820_155230_50321",
          "timestamp": "2025-08-20T15:52:40.201156",
          "error_type": "Error",
          "error_message": "assert 404 == 200\n +  where 404 = <Response [404 Not Found]>.status_code"
        },
        {
          "run_id": "run_20250820_195357_37525",
          "timestamp": "2025-08-20T19:54:06.785641",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'client_id' in {'authorized_javascript_origins': ['http://test.local:3000'], 'authorized_redirect_uris': ['http://test.local:8000/api/auth/callback'], 'development_mode': False, 'endpoints': {'callback': 'http://localhost:3000/auth/callback', 'dev_login': None, 'health': None, 'login': 'http://127.0.0.1:8083/auth/login', ...}, ...}"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_error_recovery.py::TestWebSocketPerformanceUnderLoad::test_websocket_performance_under_connection_load": {
      "component": "backend",
      "first_seen": "2025-08-20T15:49:39.686329",
      "last_failure": "2025-08-20T15:49:39.686329",
      "last_pass": "2025-08-20T15:50:35.813179",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_154937_77465",
          "timestamp": "2025-08-20T15:49:39.686329",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_error_recovery.py::TestWebSocketPerformanceUnderLoad::test_message_queue_performance_under_load": {
      "component": "backend",
      "first_seen": "2025-08-20T15:49:39.704231",
      "last_failure": "2025-08-20T15:49:39.704231",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_154937_77465",
          "timestamp": "2025-08-20T15:49:39.704231",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_error_recovery.py::TestWebSocketErrorScenarios::test_recovery_with_corrupted_state_data": {
      "component": "backend",
      "first_seen": "2025-08-20T15:49:39.722050",
      "last_failure": "2025-08-20T15:49:39.722050",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_154937_77465",
          "timestamp": "2025-08-20T15:49:39.722050",
          "error_type": "Error",
          "error_message": "KeyError: 'connections_opened'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_multi_tab_websocket.py::TestMultiTabWebSocket::test_multi_tab_websocket_broadcast": {
      "component": "backend",
      "first_seen": "2025-08-20T15:51:03.583192",
      "last_failure": "2025-08-20T15:54:00.191889",
      "last_pass": "2025-08-20T16:11:09.738210",
      "total_failures": 5,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_155043_43846",
          "timestamp": "2025-08-20T15:51:03.583192",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 3 connections, got 0\nassert 0 == 3\n +  where 0 = len([])"
        },
        {
          "run_id": "run_20250820_155208_28982",
          "timestamp": "2025-08-20T15:52:11.069570",
          "error_type": "TypeError",
          "error_message": "TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'extra_headers'"
        },
        {
          "run_id": "run_20250820_155300_80943",
          "timestamp": "2025-08-20T15:53:05.247120",
          "error_type": "Error",
          "error_message": "UnicodeEncodeError: 'charmap' codec can't encode character '\\u2713' in position 0: character maps to <undefined>"
        },
        {
          "run_id": "run_20250820_155331_11464",
          "timestamp": "2025-08-20T15:53:35.151661",
          "error_type": "Error",
          "error_message": "UnicodeEncodeError: 'charmap' codec can't encode character '\\u2713' in position 0: character maps to <undefined>"
        },
        {
          "run_id": "run_20250820_155351_31450",
          "timestamp": "2025-08-20T15:54:00.191889",
          "error_type": "Error",
          "error_message": "UnicodeEncodeError: 'charmap' codec can't encode character '\\u2713' in position 0: character maps to <undefined>"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_database_consistency.py::TestDatabaseConsistencyE2E::test_cross_service_database_transaction": {
      "component": "backend",
      "first_seen": "2025-08-20T15:56:18.703347",
      "last_failure": "2025-08-20T15:57:17.527305",
      "last_pass": "2025-08-20T16:11:23.971214",
      "total_failures": 2,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_155601_61874",
          "timestamp": "2025-08-20T15:56:18.703347",
          "error_type": "Error",
          "error_message": "KeyError: 'id'"
        },
        {
          "run_id": "run_20250820_155701_21426",
          "timestamp": "2025-08-20T15:57:17.527305",
          "error_type": "Error",
          "error_message": "KeyError: 'id'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "test_e2e_dev_environment.py::TestEndToEndUserJourney::test_complete_optimization_journey": {
      "component": "backend",
      "first_seen": "2025-08-20T16:06:27.943503",
      "last_failure": "2025-08-20T16:06:27.943503",
      "last_pass": "2025-08-20T16:49:58.852076",
      "total_failures": 1,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_160618_78169",
          "timestamp": "2025-08-20T16:06:27.943503",
          "error_type": "Error",
          "error_message": "assert 404 in [200, 201]\n +  where 404 = <Response [404 Not Found]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_service_failure_recovery.py::TestServiceFailureRecovery::test_auth_service_failure_isolation": {
      "component": "backend",
      "first_seen": "2025-08-20T16:06:51.251121",
      "last_failure": "2025-08-20T16:06:51.251121",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_160638_98887",
          "timestamp": "2025-08-20T16:06:51.251121",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Failed to simulate Auth service failure\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_service_failure_recovery.py::TestServiceFailureRecovery::test_cascading_failure_prevention": {
      "component": "backend",
      "first_seen": "2025-08-20T16:08:02.211529",
      "last_failure": "2025-08-20T16:08:02.211529",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_160638_98887",
          "timestamp": "2025-08-20T16:08:02.211529",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Failed to simulate Auth failure\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/routes/test_thread_messaging.py::TestThreadMessaging::test_message_search_within_thread": {
      "component": "backend",
      "first_seen": "2025-08-20T16:08:29.101950",
      "last_failure": "2025-08-20T16:08:29.101950",
      "last_pass": "2025-08-20T16:50:44.963131",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_160828_8516",
          "timestamp": "2025-08-20T16:08:29.101950",
          "error_type": "AttributeError",
          "error_message": "AttributeError: <module 'app.services.thread_service' from 'C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Netra\\\\netra-core-generation-1\\\\app\\\\services\\\\thread_service.py'> does not have the attribute 'search_messages_in_thread'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cross_service_transaction.py::TestCrossServiceTransaction::test_successful_cross_service_transaction": {
      "component": "backend",
      "first_seen": "2025-08-20T16:08:56.047566",
      "last_failure": "2025-08-20T16:08:56.047566",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_160833_13317",
          "timestamp": "2025-08-20T16:08:56.047566",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'NoneType' object has no attribute 'fetchrow'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cross_service_transaction.py::TestCrossServiceTransaction::test_transaction_rollback_on_backend_failure": {
      "component": "backend",
      "first_seen": "2025-08-20T16:09:04.873741",
      "last_failure": "2025-08-20T16:09:04.873741",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_160833_13317",
          "timestamp": "2025-08-20T16:09:04.873741",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'NoneType' object has no attribute 'fetchrow'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cross_service_transaction.py::TestCrossServiceTransaction::test_transaction_rollback_on_clickhouse_failure": {
      "component": "backend",
      "first_seen": "2025-08-20T16:09:13.666773",
      "last_failure": "2025-08-20T16:09:13.666773",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_160833_13317",
          "timestamp": "2025-08-20T16:09:13.666773",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'NoneType' object has no attribute 'fetchrow'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cross_service_transaction.py::TestCrossServiceTransaction::test_partial_transaction_recovery": {
      "component": "backend",
      "first_seen": "2025-08-20T16:09:22.499638",
      "last_failure": "2025-08-20T16:09:22.499638",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_160833_13317",
          "timestamp": "2025-08-20T16:09:22.499638",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'NoneType' object has no attribute 'fetchrow'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_database_consistency.py::TestDatabaseConsistencyE2E::test_transaction_rollback_on_failure": {
      "component": "backend",
      "first_seen": "2025-08-20T16:11:39.110368",
      "last_failure": "2025-08-20T16:11:39.110368",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_161022_22447",
          "timestamp": "2025-08-20T16:11:39.110368",
          "error_type": "TypeError",
          "error_message": "Failed: DID NOT RAISE any of (<class 'ValueError'>, <class 'TypeError'>)"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_dev_environment.py::TestEndToEndUserJourney::test_complete_optimization_journey": {
      "component": "backend",
      "first_seen": "2025-08-20T16:12:15.673877",
      "last_failure": "2025-08-20T16:12:15.673877",
      "last_pass": "2025-08-20T21:03:12.783102",
      "total_failures": 1,
      "total_passes": 4,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_161207_27384",
          "timestamp": "2025-08-20T16:12:15.673877",
          "error_type": "Error",
          "error_message": "assert 403 in [200, 201]\n +  where 403 = <Response [403 Forbidden]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_dev_environment.py::TestAgentOrchestrationE2E::test_multi_agent_coordination": {
      "component": "backend",
      "first_seen": "2025-08-20T16:13:06.501265",
      "last_failure": "2025-08-20T16:13:06.501265",
      "last_pass": "2025-08-20T21:03:02.118077",
      "total_failures": 1,
      "total_passes": 4,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_161253_73494",
          "timestamp": "2025-08-20T16:13:06.501265",
          "error_type": "Error",
          "error_message": "assert 500 in [200, 202, 401, 404]\n +  where 500 = <Response [500 Internal Server Error]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_multi_service.py::TestCrossServiceAuthentication::test_frontend_auth_flow_with_backend": {
      "component": "backend",
      "first_seen": "2025-08-20T16:19:37.773589",
      "last_failure": "2025-08-20T16:19:37.773589",
      "last_pass": "2025-08-20T16:20:25.139870",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_161936_76735",
          "timestamp": "2025-08-20T16:19:37.773589",
          "error_type": "Error",
          "error_message": "Failed: Auth flow failed: EnhancedCRUDService.__init__() missing 1 required positional argument: 'model_class'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_staging_environment.py::TestStagingHealthChecks::test_staging_services_health": {
      "component": "backend",
      "first_seen": "2025-08-20T16:20:23.450981",
      "last_failure": "2025-08-20T16:20:23.450981",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_162009_9704",
          "timestamp": "2025-08-20T16:20:23.450981",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Backend service unhealthy\nassert False\n +  where False = <built-in method get of dict object at 0x000001CEB2B0EB80>('healthy')\n +    where <built-in method get of dict object at 0x000001CEB2B0EB80> = {'error': \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'netra-backend-staging-xyz123.run.app'. (_ssl.c:1000)\", 'healthy': False}.get\n +      where {'error': \"[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Ho"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_dev_environment.py::TestWebSocketE2E::test_websocket_lifecycle": {
      "component": "backend",
      "first_seen": "2025-08-20T16:27:04.054308",
      "last_failure": "2025-08-20T16:27:04.054308",
      "last_pass": "2025-08-20T16:31:01.519618",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_162652_12775",
          "timestamp": "2025-08-20T16:27:04.054308",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'connection_established' in ['pong', 'acknowledgment']\n +  where 'connection_established' = <built-in method get of dict object at 0x000001D74E19F3C0>('type')\n +    where <built-in method get of dict object at 0x000001D74E19F3C0> = {'message': 'Connected to Netra AI Demo WebSocket', 'session_id': 'demo-ws-81157319-6d34-408e-9fd2-6ad541bffde3', 'type': 'connection_established'}.get"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "integration_tests/test_e2e_dev_environment.py::TestWebSocketE2E::test_websocket_real_time_updates": {
      "component": "backend",
      "first_seen": "2025-08-20T16:31:07.012417",
      "last_failure": "2025-08-20T16:32:13.263515",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_163031_31969",
          "timestamp": "2025-08-20T16:31:07.012417",
          "error_type": "Error",
          "error_message": "assert 0 > 0\n +  where 0 = len([])"
        },
        {
          "run_id": "run_20250820_163201_21924",
          "timestamp": "2025-08-20T16:32:13.263515",
          "error_type": "TypeError",
          "error_message": "TypeError: WebSocketTestSession.receive_json() got an unexpected keyword argument 'timeout'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/critical_paths/test_redis_websocket_state_sync.py::TestRedisWebSocketStateSyncL3::test_session_store_websocket_state_recovery": {
      "component": "backend",
      "first_seen": "2025-08-20T16:32:46.612963",
      "last_failure": "2025-08-20T16:32:46.612963",
      "last_pass": "2025-08-20T16:36:21.516813",
      "total_failures": 1,
      "total_passes": 4,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_163244_64027",
          "timestamp": "2025-08-20T16:32:46.612963",
          "error_type": "Error",
          "error_message": "assert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/critical_paths/test_redis_websocket_state_sync.py::TestRedisWebSocketStateSyncL3::test_multiple_websocket_connections_share_redis_session": {
      "component": "backend",
      "first_seen": "2025-08-20T16:33:48.570926",
      "last_failure": "2025-08-20T16:35:54.247153",
      "last_pass": null,
      "total_failures": 3,
      "total_passes": 0,
      "consecutive_failures": 3,
      "recent_failures": [
        {
          "run_id": "run_20250820_163344_24304",
          "timestamp": "2025-08-20T16:33:48.570926",
          "error_type": "Error",
          "error_message": "assert False"
        },
        {
          "run_id": "run_20250820_163501_1221",
          "timestamp": "2025-08-20T16:35:05.363558",
          "error_type": "Error",
          "error_message": "KeyError: 'target_cost_reduction'"
        },
        {
          "run_id": "run_20250820_163550_50987",
          "timestamp": "2025-08-20T16:35:54.247153",
          "error_type": "Error",
          "error_message": "KeyError: 'target_cost_reduction'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/critical_paths/test_redis_websocket_state_sync.py::TestRedisWebSocketStateSyncL3::test_concurrent_session_updates_from_multiple_connections": {
      "component": "backend",
      "first_seen": "2025-08-20T16:33:54.579462",
      "last_failure": "2025-08-20T16:35:59.548911",
      "last_pass": null,
      "total_failures": 3,
      "total_passes": 0,
      "consecutive_failures": 3,
      "recent_failures": [
        {
          "run_id": "run_20250820_163344_24304",
          "timestamp": "2025-08-20T16:33:54.579462",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'connection_0_data' in {'connection_1_data': {'connection_specific': 'data_from_conn_1', 'last_activity': '2025-08-20T23:33:54.539566+00:00'}}"
        },
        {
          "run_id": "run_20250820_163501_1221",
          "timestamp": "2025-08-20T16:35:11.587439",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'connection_0_data' in {'base_session': {'created_at': '2025-08-20T23:35:11.552517+00:00', 'user_id': 'state_sync_user_123'}, 'connection_2_data': {'connection_specific': 'data_from_conn_2', 'last_activity': '2025-08-20T23:35:11.560068+00:00', 'update_sequence': 2}}"
        },
        {
          "run_id": "run_20250820_163550_50987",
          "timestamp": "2025-08-20T16:35:59.548911",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 'connection_0_data' in {'base_session': {'created_at': '2025-08-20T23:35:59.528942+00:00', 'user_id': 'state_sync_user_123'}, 'connection_1_data': {'connection_specific': 'data_from_conn_1', 'last_activity': '2025-08-20T23:35:59.533933+00:00', 'update_sequence': 1}}"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/critical_paths/test_redis_websocket_state_sync.py::TestRedisWebSocketStateSyncL3::test_state_recovery_after_redis_restart": {
      "component": "backend",
      "first_seen": "2025-08-20T16:33:56.076557",
      "last_failure": "2025-08-20T16:33:56.076557",
      "last_pass": "2025-08-20T16:36:27.330378",
      "total_failures": 1,
      "total_passes": 3,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_163344_24304",
          "timestamp": "2025-08-20T16:33:56.076557",
          "error_type": "Error",
          "error_message": "assert 0 > 0"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_workflow_verification_l2.py::TestWorkflowStatusVerifier::test_api_request_http_error": {
      "component": "backend",
      "first_seen": "2025-08-20T16:40:41.171120",
      "last_failure": "2025-08-20T16:40:41.171120",
      "last_pass": "2025-08-20T16:41:19.103680",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_164032_32349",
          "timestamp": "2025-08-20T16:40:41.171120",
          "error_type": "Error",
          "error_message": "tenacity.RetryError: RetryError[<Future at 0x16a2d4ed580 state=finished raised GitHubAPIError>]"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/critical_paths/test_supervisor_subagent_communication.py::TestSupervisorSubAgentCommunication::test_basic_supervisor_delegation": {
      "component": "backend",
      "first_seen": "2025-08-20T16:43:25.689573",
      "last_failure": "2025-08-20T16:43:25.689573",
      "last_pass": "2025-08-20T16:43:48.351377",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_164324_4409",
          "timestamp": "2025-08-20T16:43:25.689573",
          "error_type": "Error",
          "error_message": "assert False is True"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/routes/test_websocket_connection.py::TestWebSocketConnection::test_websocket_authentication_user_not_found": {
      "component": "backend",
      "first_seen": "2025-08-20T16:49:58.872995",
      "last_failure": "2025-08-20T16:49:58.872995",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_164942_82144",
          "timestamp": "2025-08-20T16:49:58.872995",
          "error_type": "AttributeError",
          "error_message": "AttributeError: 'NoneType' object has no attribute 'is_active'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/unified/e2e/test_cold_start_to_agent_response.py::TestColdStartToAgentResponse::test_cold_start_timeout_scenarios": {
      "component": "backend",
      "first_seen": "2025-08-20T17:27:59.006600",
      "last_failure": "2025-08-20T17:27:59.006600",
      "last_pass": "2025-08-20T17:28:30.932767",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_172753_73550",
          "timestamp": "2025-08-20T17:27:59.006600",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Should handle connection timeout gracefully\nassert not True"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_dynamic_ports.py::TestCORSDynamicFrontendPorts::test_cors_hardcoded_localhost_origins_limitation": {
      "component": "backend",
      "first_seen": "2025-08-20T17:50:14.838650",
      "last_failure": "2025-08-20T17:55:09.549901",
      "last_pass": null,
      "total_failures": 5,
      "total_passes": 0,
      "consecutive_failures": 5,
      "recent_failures": [
        {
          "run_id": "run_20250820_175013_13891",
          "timestamp": "2025-08-20T17:50:14.838650",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 3002 NOT in hardcoded list. Origin: http://localhost:3002, Hardcoded localhost origins: ['http://localhost:3000', 'http://localhost:3001']. This shows the fundamental limitation: hardcoded ports 3000/3001 only.\nassert False"
        },
        {
          "run_id": "run_20250820_175337_17260",
          "timestamp": "2025-08-20T17:53:37.631512",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 3002 NOT in hardcoded list. Origin: http://localhost:3002, Hardcoded localhost origins: ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:8000', 'http://localhost:8001', 'http://localhost:8080', 'http://localhost:8081', 'http://127.0.0.1:3000', 'http://127.0.0.1:3001', 'http://127.0.0.1:8000', 'http://127.0.0.1:8001', 'http://127.0.0.1:8080', 'http://127.0.0.1:8081']. This shows the fundamental limitation: hardcoded ports 3000/3001 only.\na"
        },
        {
          "run_id": "run_20250820_175413_53543",
          "timestamp": "2025-08-20T17:54:14.130520",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 3002 NOT in hardcoded list. Origin: http://localhost:3002, Hardcoded localhost origins: ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:8000', 'http://localhost:8001', 'http://localhost:8080', 'http://localhost:8081', 'http://127.0.0.1:3000', 'http://127.0.0.1:3001', 'http://127.0.0.1:8000', 'http://127.0.0.1:8001', 'http://127.0.0.1:8080', 'http://127.0.0.1:8081']. This shows the fundamental limitation: hardcoded ports 3000/3001 only.\na"
        },
        {
          "run_id": "run_20250820_175443_83108",
          "timestamp": "2025-08-20T17:54:43.556819",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 5173 NOT in hardcoded list. Origin: http://localhost:5173, Hardcoded localhost origins: ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002', 'http://localhost:3003', 'http://localhost:4000', 'http://localhost:4001', 'http://localhost:8000', 'http://localhost:8001', 'http://localhost:8002', 'http://localhost:8080', 'http://localhost:8081', 'http://localhost:8082', 'http://127.0.0.1:3000', 'http://127.0.0.1:3001', 'http://127.0.0.1:3002'"
        },
        {
          "run_id": "run_20250820_175509_9075",
          "timestamp": "2025-08-20T17:55:09.549901",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 3333 NOT in hardcoded list. Origin: http://localhost:3333, Hardcoded localhost origins: ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002', 'http://localhost:3003', 'http://localhost:4000', 'http://localhost:4001', 'http://localhost:4200', 'http://localhost:5173', 'http://localhost:5174', 'http://localhost:8000', 'http://localhost:8001', 'http://localhost:8002', 'http://localhost:8080', 'http://localhost:8081', 'http://localhost:8082'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_dynamic_ports.py::TestCORSComprehensiveDynamicPortFailures::test_credentials_with_dynamic_origins_failure": {
      "component": "backend",
      "first_seen": "2025-08-20T17:50:29.552259",
      "last_failure": "2025-08-20T17:55:21.240573",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_175029_29120",
          "timestamp": "2025-08-20T17:50:29.552259",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 4000 at http://localhost:4000 is not explicitly listed in CORS origins: ['http://localhost:3000', 'http://localhost:8000', '*']. This breaks credentialed requests because RFC 6454 prohibits wildcard origins with credentials. Dynamic ports must be explicitly allowed, but the current implementation only hardcodes ports 3000/3001.\nassert False"
        },
        {
          "run_id": "run_20250820_175520_20797",
          "timestamp": "2025-08-20T17:55:21.240573",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Dynamic frontend port 4000 at http://localhost:4000 is not explicitly listed in CORS origins: ['http://localhost:3000', 'http://localhost:8000', '*']. This breaks credentialed requests because RFC 6454 prohibits wildcard origins with credentials. Dynamic ports must be explicitly allowed, but the current implementation only hardcodes ports 3000/3001.\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_message_flow_implementation.py::TestAgentMessageFlowImplementation::test_message_reaches_agent_service": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:09.413082",
      "last_failure": "2025-08-20T20:09:09.413082",
      "last_pass": "2025-08-20T21:01:56.024976",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:09.413082",
          "error_type": "TypeError",
          "error_message": "TypeError: LLMManager.__init__() missing 1 required positional argument: 'settings'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_message_flow_implementation.py::TestAgentMessageFlowImplementation::test_response_flows_back_through_websocket": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:09.435414",
      "last_failure": "2025-08-20T21:02:18.819996",
      "last_pass": null,
      "total_failures": 4,
      "total_passes": 0,
      "consecutive_failures": 4,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:09.435414",
          "error_type": "Error",
          "error_message": "assert False is True"
        },
        {
          "run_id": "run_20250820_210154_14955",
          "timestamp": "2025-08-20T21:01:56.075490",
          "error_type": "Error",
          "error_message": "assert False is True"
        },
        {
          "run_id": "run_20250820_210206_26651",
          "timestamp": "2025-08-20T21:02:07.702724",
          "error_type": "Error",
          "error_message": "assert False is True"
        },
        {
          "run_id": "run_20250820_210217_37703",
          "timestamp": "2025-08-20T21:02:18.819996",
          "error_type": "Error",
          "error_message": "assert False is True"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_message_flow_implementation.py::TestAgentMessageFlowImplementation::test_error_handling_for_invalid_message": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:09.472992",
      "last_failure": "2025-08-20T20:09:09.472992",
      "last_pass": "2025-08-20T21:01:56.081492",
      "total_failures": 1,
      "total_passes": 1,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:09.472992",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'send_json' to have been called."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_message_flow_implementation.py::TestAgentMessageFlowImplementation::test_error_handling_for_agent_processing_failure": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:09.486142",
      "last_failure": "2025-08-20T21:01:56.087395",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:09.486142",
          "error_type": "AttributeError",
          "error_message": "AttributeError: <module 'app.routes.websocket_secure' from 'C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Netra\\\\netra-core-generation-1\\\\app\\\\routes\\\\websocket_secure.py'> does not have the attribute '_create_supervisor_agent'"
        },
        {
          "run_id": "run_20250820_210154_14955",
          "timestamp": "2025-08-20T21:01:56.087395",
          "error_type": "AttributeError",
          "error_message": "AttributeError: <module 'app.routes.websocket_secure' from 'C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Netra\\\\netra-core-generation-1\\\\app\\\\routes\\\\websocket_secure.py'> does not have the attribute '_create_supervisor_agent'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_message_flow_implementation.py::TestAgentMessageFlowImplementation::test_multiple_user_message_routing": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:09.514587",
      "last_failure": "2025-08-20T21:01:56.100928",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:09.514587",
          "error_type": "Error",
          "error_message": "assert False is True"
        },
        {
          "run_id": "run_20250820_210154_14955",
          "timestamp": "2025-08-20T21:01:56.100928",
          "error_type": "Error",
          "error_message": "assert False is True"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_message_flow_implementation.py::TestAgentMessageFlowImplementation::test_connection_limits_enforcement": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:09.554454",
      "last_failure": "2025-08-20T21:01:56.120719",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:09.554454",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'close' to have been called."
        },
        {
          "run_id": "run_20250820_210154_14955",
          "timestamp": "2025-08-20T21:01:56.120719",
          "error_type": "AssertionError",
          "error_message": "AssertionError: assert 1 == 3\n +  where 1 = len(['secure_test-user-limits_1755748916117'])"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_agent_responses_comprehensive_e2e.py::TestAgentResponsesComprehensiveE2E::test_multi_turn_conversation_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T20:09:10.689434",
      "last_failure": "2025-08-20T20:09:10.689434",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_200904_44618",
          "timestamp": "2025-08-20T20:09:10.689434",
          "error_type": "Error",
          "error_message": "assert 4 == (0 + 1)"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_auth_race_conditions_core.py::TestConcurrentTokenRefreshRaceConditions::test_concurrent_token_refresh_race": {
      "component": "backend",
      "first_seen": "2025-08-20T21:02:30.272538",
      "last_failure": "2025-08-20T21:02:30.272538",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_210229_49773",
          "timestamp": "2025-08-20T21:02:30.272538",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Multiple token refreshes succeeded: 10 (expected: 0 or 1 due to token invalidation)\nassert 10 <= 1\n +  where 10 = len([{'access_token': 'new_access_token', 'refresh_token': 'new_refresh_token'}, {'access_token': 'new_access_token', 'ref...'refresh_token': 'new_refresh_token'}, {'access_token': 'new_access_token', 'refresh_token': 'new_refresh_token'}, ...])"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_oauth_token_flow.py::test_oauth_callback_token_exchange": {
      "component": "backend",
      "first_seen": "2025-08-20T21:34:26.648089",
      "last_failure": "2025-08-20T21:34:26.648089",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_213426_66002",
          "timestamp": "2025-08-20T21:34:26.648089",
          "error_type": "AttributeError",
          "error_message": "AttributeError: <module 'auth_service.auth_core.routes.auth_routes' from 'C:\\\\Users\\\\antho\\\\OneDrive\\\\Desktop\\\\Netra\\\\netra-core-generation-1\\\\auth_service\\\\auth_core\\\\routes\\\\auth_routes.py'> does not have the attribute 'auth_db'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_oauth_token_flow.py::test_token_validation_after_storage": {
      "component": "backend",
      "first_seen": "2025-08-20T21:34:26.891261",
      "last_failure": "2025-08-20T21:34:26.891261",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_213426_66002",
          "timestamp": "2025-08-20T21:34:26.891261",
          "error_type": "TypeError",
          "error_message": "TypeError: object MagicMock can't be used in 'await' expression"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_oauth_token_flow.py::test_oauth_error_handling": {
      "component": "backend",
      "first_seen": "2025-08-20T21:34:26.912266",
      "last_failure": "2025-08-20T21:34:26.912266",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_213426_66002",
          "timestamp": "2025-08-20T21:34:26.912266",
          "error_type": "Error",
          "error_message": "assert 500 == 401\n +  where 500 = <Response [500 Internal Server Error]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_basic_login_flow_valid_credentials": {
      "component": "backend",
      "first_seen": "2025-08-20T21:50:38.343100",
      "last_failure": "2025-08-20T21:50:58.252900",
      "last_pass": "2025-08-20T21:52:13.421594",
      "total_failures": 2,
      "total_passes": 2,
      "consecutive_failures": 0,
      "recent_failures": [
        {
          "run_id": "run_20250820_215037_37866",
          "timestamp": "2025-08-20T21:50:38.343100",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        },
        {
          "run_id": "run_20250820_215057_57804",
          "timestamp": "2025-08-20T21:50:58.252900",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_token_validation_full_cycle": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.558914",
      "last_failure": "2025-08-20T21:51:22.558914",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.558914",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_expired_token_detection_and_handling": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.565373",
      "last_failure": "2025-08-20T21:51:22.565373",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.565373",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_token_refresh_complete_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.567449",
      "last_failure": "2025-08-20T21:51:22.567449",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.567449",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_session_persistence_across_multiple_requests": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.612312",
      "last_failure": "2025-08-20T21:51:22.612312",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.612312",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_logout_flow_token_invalidation": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.626232",
      "last_failure": "2025-08-20T21:51:22.626232",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.626232",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_oauth_login_flow_initialization": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.633026",
      "last_failure": "2025-08-20T21:51:22.633026",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.633026",
          "error_type": "TypeError",
          "error_message": "TypeError: argument of type 'NoneType' is not iterable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_oauth_callback_processing": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.635823",
      "last_failure": "2025-08-20T21:51:22.635823",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.635823",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_mfa_authentication_complete_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.639862",
      "last_failure": "2025-08-20T21:51:22.639862",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.639862",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_password_reset_complete_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.643472",
      "last_failure": "2025-08-20T21:51:22.643472",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.643472",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_session_timeout_detection_and_handling": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.647532",
      "last_failure": "2025-08-20T21:51:22.647532",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.647532",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_api_key_authentication_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.689071",
      "last_failure": "2025-08-20T21:51:22.689071",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.689071",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_service_account_authentication": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.693278",
      "last_failure": "2025-08-20T21:51:22.693278",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.693278",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_token_introspection_detailed": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.722577",
      "last_failure": "2025-08-20T21:51:22.722577",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.722577",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_device_code_authentication_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.739324",
      "last_failure": "2025-08-20T21:51:22.739324",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.739324",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_sso_authentication_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.754422",
      "last_failure": "2025-08-20T21:51:22.754422",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.754422",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_biometric_authentication_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.758455",
      "last_failure": "2025-08-20T21:51:22.758455",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.758455",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_guest_authentication_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.765993",
      "last_failure": "2025-08-20T21:51:22.765993",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.765993",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_token_delegation_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.773850",
      "last_failure": "2025-08-20T21:51:22.773850",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.773850",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_emergency_access_bypass_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.802820",
      "last_failure": "2025-08-20T21:51:22.802820",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.802820",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_token_rotation_on_refresh": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.816421",
      "last_failure": "2025-08-20T21:51:22.816421",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.816421",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_auth_login_l3_comprehensive.py::TestAuthLoginL3Integration::test_impersonation_authentication_flow": {
      "component": "backend",
      "first_seen": "2025-08-20T21:51:22.831626",
      "last_failure": "2025-08-20T21:51:22.831626",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215122_82273",
          "timestamp": "2025-08-20T21:51:22.831626",
          "error_type": "TypeError",
          "error_message": "TypeError: 'NoneType' object is not subscriptable"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_websocket_l3_comprehensive.py::TestWebSocketL3Integration::test_websocket_connection_establishment": {
      "component": "backend",
      "first_seen": "2025-08-20T21:52:13.459486",
      "last_failure": "2025-08-20T21:52:13.459486",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250820_215213_33081",
          "timestamp": "2025-08-20T21:52:13.459486",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Expected 'connect' to be called once. Called 0 times."
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSCompleteAuthFlow::test_complete_oauth_login_flow_cors": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:36.724810",
      "last_failure": "2025-08-21T04:46:12.725034",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:36.724810",
          "error_type": "Error",
          "error_message": "assert 405 == 200\n +  where 405 = <Response [405 Method Not Allowed]>.status_code"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:12.725034",
          "error_type": "Error",
          "error_message": "assert 405 == 200\n +  where 405 = <Response [405 Method Not Allowed]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSPREnvironmentValidation::test_pr_environment_dynamic_validation": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:37.278722",
      "last_failure": "2025-08-21T04:46:13.248846",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:37.278722",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Production origin should be rejected in staging: https://netrasystems.ai\nassert not True\n +  where True = <function is_origin_allowed at 0x000002BCBE156980>('https://netrasystems.ai', ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002', 'http://localhost:3003', 'http://localhost:4000', 'http://localhost:4001', ...])"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:13.248846",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Production origin should be rejected in staging: https://netrasystems.ai\nassert not True\n +  where True = <function is_origin_allowed at 0x000002D1551EBB00>('https://netrasystems.ai', ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002', 'http://localhost:3003', 'http://localhost:4000', 'http://localhost:4001', ...])"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSProductionStrictValidation::test_production_strict_origin_enforcement": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:37.315531",
      "last_failure": "2025-08-21T04:46:13.264983",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:37.315531",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Non-production origin should be rejected: http://localhost:3000\nassert not True\n +  where True = <function is_origin_allowed at 0x000002BCBE156980>('http://localhost:3000', ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002', 'http://localhost:3003', 'http://localhost:4000', 'http://localhost:4001', ...])"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:13.264983",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Non-production origin should be rejected: http://localhost:3000\nassert not True\n +  where True = <function is_origin_allowed at 0x000002D1551EBB00>('http://localhost:3000', ['http://localhost:3000', 'http://localhost:3001', 'http://localhost:3002', 'http://localhost:3003', 'http://localhost:4000', 'http://localhost:4001', ...])"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSProductionStrictValidation::test_production_no_wildcard_allowed": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:37.327999",
      "last_failure": "2025-08-21T04:46:13.269167",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:37.327999",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Production should not allow wildcard origins\nassert not True\n +  where True = <function _evaluate_wildcard_environment at 0x000002BCBE156C00>()"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:13.269167",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Production should not allow wildcard origins\nassert not True\n +  where True = <function _evaluate_wildcard_environment at 0x000002D1551EBD80>()"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSCredentialRequestsAcrossServices::test_authorization_header_requests_cors": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:38.081733",
      "last_failure": "2025-08-21T04:46:14.144578",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:38.081733",
          "error_type": "Error",
          "error_message": "assert 404 == 200\n +  where 404 = <Response [404 Not Found]>.status_code"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:14.144578",
          "error_type": "Error",
          "error_message": "assert 404 == 200\n +  where 404 = <Response [404 Not Found]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSCredentialRequestsAcrossServices::test_websocket_auth_with_cors": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:38.148103",
      "last_failure": "2025-08-21T04:46:14.176665",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:38.148103",
          "error_type": "TypeError",
          "error_message": "TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'extra_headers'"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:14.176665",
          "error_type": "TypeError",
          "error_message": "TypeError: BaseEventLoop.create_connection() got an unexpected keyword argument 'extra_headers'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSRegressionComprehensive::test_all_regression_scenarios": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:38.373662",
      "last_failure": "2025-08-21T04:46:14.436108",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:38.373662",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Preflight failed for Frontend to Auth Config\nassert 405 == 200\n +  where 405 = <Response [405 Method Not Allowed]>.status_code"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:14.436108",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Preflight failed for Frontend to Auth Config\nassert 405 == 200\n +  where 405 = <Response [405 Method Not Allowed]>.status_code"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_cors_e2e.py::TestCORSPerformanceAndResilience::test_cors_preflight_caching": {
      "component": "backend",
      "first_seen": "2025-08-21T04:39:39.937977",
      "last_failure": "2025-08-21T04:46:15.447011",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_043935_75378",
          "timestamp": "2025-08-21T04:39:39.937977",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Preflight should include Max-Age header\nassert None is not None"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:15.447011",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Preflight should include Max-Age header\nassert None is not None"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/e2e/test_startup_comprehensive_e2e.py::TestStartupComprehensiveE2E::test_configuration_loading_validation": {
      "component": "backend",
      "first_seen": "2025-08-21T04:43:39.882297",
      "last_failure": "2025-08-21T04:46:27.824901",
      "last_pass": null,
      "total_failures": 2,
      "total_passes": 0,
      "consecutive_failures": 2,
      "recent_failures": [
        {
          "run_id": "run_20250821_044328_8372",
          "timestamp": "2025-08-21T04:43:39.882297",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Configuration not loaded for backend: {'service_name': 'backend', 'config_loaded': False, 'health_data': {'status': 'healthy', 'services': {'quality_gate': 'active', 'monitoring': 'inactive', 'fallback': 'active'}, 'statistics': {'total_validations': 0, 'active_alerts': 0, 'monitored_agents': 0}, 'timestamp': '2025-08-21T11:43:39.393037Z', 'error': None, 'uptime_percentage': None, 'response_time_ms': None}, 'indicators_found': ['status']}\nassert False"
        },
        {
          "run_id": "run_20250821_044610_70884",
          "timestamp": "2025-08-21T04:46:27.824901",
          "error_type": "AssertionError",
          "error_message": "AssertionError: Configuration not loaded for backend: {'service_name': 'backend', 'config_loaded': False, 'health_data': {'status': 'healthy', 'services': {'quality_gate': 'active', 'monitoring': 'inactive', 'fallback': 'active'}, 'statistics': {'total_validations': 0, 'active_alerts': 0, 'monitored_agents': 0}, 'timestamp': '2025-08-21T11:46:27.564930Z', 'error': None, 'uptime_percentage': None, 'response_time_ms': None}, 'indicators_found': ['status']}\nassert False"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    },
    "tests/integration/test_l4_critical_core_integration.py::TestL4CriticalAuthIntegration::test_01_concurrent_login_race_condition": {
      "component": "backend",
      "first_seen": "2025-08-21T04:48:34.476122",
      "last_failure": "2025-08-21T04:48:34.476122",
      "last_pass": null,
      "total_failures": 1,
      "total_passes": 0,
      "consecutive_failures": 1,
      "recent_failures": [
        {
          "run_id": "run_20250821_044833_13045",
          "timestamp": "2025-08-21T04:48:34.476122",
          "error_type": "Error",
          "error_message": "ModuleNotFoundError: No module named 'db'"
        }
      ],
      "marked_as_bad": false,
      "bad_reason": null
    }
  },
  "runs": [
    {
      "run_id": "run_20250820_185727_47006",
      "timestamp": "2025-08-20T18:59:54.118064",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_190056_56240",
      "timestamp": "2025-08-20T19:00:59.090955",
      "total_tests": 370,
      "passed": 369,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_190118_78264",
      "timestamp": "2025-08-20T19:01:18.765472",
      "total_tests": 0,
      "passed": -1,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_190136_96894",
      "timestamp": "2025-08-20T19:01:39.278110",
      "total_tests": 376,
      "passed": 376,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_190152_12195",
      "timestamp": "2025-08-20T19:01:52.630486",
      "total_tests": 7,
      "passed": 6,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_190204_24951",
      "timestamp": "2025-08-20T19:02:05.910903",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191526_26561",
      "timestamp": "2025-08-20T19:15:51.038206",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191646_6227",
      "timestamp": "2025-08-20T19:17:11.780298",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191716_36768",
      "timestamp": "2025-08-20T19:17:29.351567",
      "total_tests": 85,
      "passed": 85,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191731_51590",
      "timestamp": "2025-08-20T19:17:42.986631",
      "total_tests": 85,
      "passed": 85,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191804_84181",
      "timestamp": "2025-08-20T19:18:59.149012",
      "total_tests": 13,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191917_57352",
      "timestamp": "2025-08-20T19:19:28.654587",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_191946_86600",
      "timestamp": "2025-08-20T19:20:14.634709",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_192036_36896",
      "timestamp": "2025-08-20T19:21:02.535654",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_192422_62537",
      "timestamp": "2025-08-20T19:25:20.217108",
      "total_tests": 15,
      "passed": 0,
      "failed": 3,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_192527_27899",
      "timestamp": "2025-08-20T19:26:25.862309",
      "total_tests": 15,
      "passed": 0,
      "failed": 3,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_192643_3366",
      "timestamp": "2025-08-20T19:27:39.456223",
      "total_tests": 15,
      "passed": 0,
      "failed": 3,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_192813_93597",
      "timestamp": "2025-08-20T19:29:02.899833",
      "total_tests": 17,
      "passed": 0,
      "failed": 2,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_192918_58338",
      "timestamp": "2025-08-20T19:30:09.138464",
      "total_tests": 17,
      "passed": 0,
      "failed": 2,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193025_25531",
      "timestamp": "2025-08-20T19:31:14.524627",
      "total_tests": 17,
      "passed": 0,
      "failed": 2,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193216_36808",
      "timestamp": "2025-08-20T19:32:25.651578",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193233_53417",
      "timestamp": "2025-08-20T19:32:39.677799",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193242_62149",
      "timestamp": "2025-08-20T19:32:48.708823",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193517_17319",
      "timestamp": "2025-08-20T19:35:26.608162",
      "total_tests": 85,
      "passed": 85,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193622_82321",
      "timestamp": "2025-08-20T19:37:18.320369",
      "total_tests": 34,
      "passed": 18,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_193906_46415",
      "timestamp": "2025-08-20T19:39:58.574985",
      "total_tests": 20,
      "passed": 0,
      "failed": 2,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_194123_83468",
      "timestamp": "2025-08-20T19:42:11.923716",
      "total_tests": 214,
      "passed": 192,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_194303_83797",
      "timestamp": "2025-08-20T19:43:55.787955",
      "total_tests": 214,
      "passed": 192,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_195357_37525",
      "timestamp": "2025-08-20T19:54:07.080160",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250820_195445_85863",
      "timestamp": "2025-08-20T19:54:54.520557",
      "total_tests": 1,
      "passed": 1,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_195542_42058",
      "timestamp": "2025-08-20T19:56:02.382771",
      "total_tests": 3,
      "passed": 3,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_200327_7184",
      "timestamp": "2025-08-20T20:04:20.822100",
      "total_tests": 214,
      "passed": 192,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_200459_99659",
      "timestamp": "2025-08-20T20:06:09.361392",
      "total_tests": 206,
      "passed": 188,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_200649_9008",
      "timestamp": "2025-08-20T20:07:23.861564",
      "total_tests": 13,
      "passed": 13,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_200737_57326",
      "timestamp": "2025-08-20T20:08:10.893426",
      "total_tests": 73,
      "passed": 64,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_200811_91090",
      "timestamp": "2025-08-20T20:08:38.571603",
      "total_tests": 12,
      "passed": 12,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_200904_44618",
      "timestamp": "2025-08-20T20:09:12.522801",
      "total_tests": 164,
      "passed": 154,
      "failed": 10,
      "bad_tests_count": 7
    },
    {
      "run_id": "run_20250820_200912_52720",
      "timestamp": "2025-08-20T20:10:10.115393",
      "total_tests": 214,
      "passed": 192,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_201047_47183",
      "timestamp": "2025-08-20T20:11:44.623154",
      "total_tests": 214,
      "passed": 192,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_201153_13687",
      "timestamp": "2025-08-20T20:12:19.712571",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_201434_74648",
      "timestamp": "2025-08-20T20:14:35.139684",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_210154_14955",
      "timestamp": "2025-08-20T21:01:56.133533",
      "total_tests": 10,
      "passed": 6,
      "failed": 4,
      "bad_tests_count": 4
    },
    {
      "run_id": "run_20250820_210206_26651",
      "timestamp": "2025-08-20T21:02:07.702724",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250820_210217_37703",
      "timestamp": "2025-08-20T21:02:18.830242",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250820_210229_49773",
      "timestamp": "2025-08-20T21:02:30.272538",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250820_210240_60247",
      "timestamp": "2025-08-20T21:03:13.025797",
      "total_tests": 13,
      "passed": 13,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_210559_59855",
      "timestamp": "2025-08-20T21:06:49.895474",
      "total_tests": 206,
      "passed": 188,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_211400_40773",
      "timestamp": "2025-08-20T21:14:18.637272",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_212411_51297",
      "timestamp": "2025-08-20T21:24:30.557677",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_212551_51536",
      "timestamp": "2025-08-20T21:26:09.657386",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_213426_66002",
      "timestamp": "2025-08-20T21:34:26.926875",
      "total_tests": 6,
      "passed": 3,
      "failed": 3,
      "bad_tests_count": 3
    },
    {
      "run_id": "run_20250820_214836_16140",
      "timestamp": "2025-08-20T21:48:36.783620",
      "total_tests": 0,
      "passed": -1,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_215037_37866",
      "timestamp": "2025-08-20T21:50:38.346283",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250820_215057_57804",
      "timestamp": "2025-08-20T21:50:58.258641",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250820_215122_82273",
      "timestamp": "2025-08-20T21:51:22.839188",
      "total_tests": 30,
      "passed": 9,
      "failed": 21,
      "bad_tests_count": 21
    },
    {
      "run_id": "run_20250820_215158_18133",
      "timestamp": "2025-08-20T21:51:58.586951",
      "total_tests": 120,
      "passed": 120,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250820_215213_33081",
      "timestamp": "2025-08-20T21:52:13.501847",
      "total_tests": 5,
      "passed": 4,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250821_043751_71268",
      "timestamp": "2025-08-21T04:37:55.862368",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_043757_77466",
      "timestamp": "2025-08-21T04:38:11.005198",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_043835_15801",
      "timestamp": "2025-08-21T04:38:37.610803",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_043838_18730",
      "timestamp": "2025-08-21T04:38:40.354791",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_043903_43551",
      "timestamp": "2025-08-21T04:39:18.857595",
      "total_tests": 376,
      "passed": 375,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_043935_75378",
      "timestamp": "2025-08-21T04:39:40.456770",
      "total_tests": 17,
      "passed": 9,
      "failed": 8,
      "bad_tests_count": 8
    },
    {
      "run_id": "run_20250821_044226_46846",
      "timestamp": "2025-08-21T04:42:28.015820",
      "total_tests": 0,
      "passed": -1,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_044316_96070",
      "timestamp": "2025-08-21T04:43:16.696568",
      "total_tests": 1,
      "passed": 1,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_044328_8372",
      "timestamp": "2025-08-21T04:43:43.976325",
      "total_tests": 11,
      "passed": 10,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250821_044415_55112",
      "timestamp": "2025-08-21T04:44:35.662086",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_044610_70884",
      "timestamp": "2025-08-21T04:46:30.993769",
      "total_tests": 28,
      "passed": 19,
      "failed": 9,
      "bad_tests_count": 9
    },
    {
      "run_id": "run_20250821_044636_96889",
      "timestamp": "2025-08-21T04:46:47.765548",
      "total_tests": 85,
      "passed": 85,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_044652_12277",
      "timestamp": "2025-08-21T04:46:54.376273",
      "total_tests": 0,
      "passed": -1,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_044707_27527",
      "timestamp": "2025-08-21T04:47:09.734200",
      "total_tests": 0,
      "passed": -1,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_044833_13045",
      "timestamp": "2025-08-21T04:48:34.478347",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "bad_tests_count": 1
    },
    {
      "run_id": "run_20250821_084823_3107",
      "timestamp": "2025-08-21T08:48:27.597038",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_084852_32814",
      "timestamp": "2025-08-21T08:48:52.842519",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_084914_54621",
      "timestamp": "2025-08-21T08:49:31.491422",
      "total_tests": 4,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085023_23962",
      "timestamp": "2025-08-21T08:50:41.412165",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085122_82940",
      "timestamp": "2025-08-21T08:51:40.622168",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085208_28361",
      "timestamp": "2025-08-21T08:52:27.908477",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085427_67713",
      "timestamp": "2025-08-21T08:54:44.254813",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085524_24157",
      "timestamp": "2025-08-21T08:55:41.757131",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085643_3344",
      "timestamp": "2025-08-21T08:57:00.871392",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085729_49171",
      "timestamp": "2025-08-21T08:57:47.088864",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085821_1692",
      "timestamp": "2025-08-21T08:58:42.195704",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085856_36469",
      "timestamp": "2025-08-21T08:59:15.589568",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_085954_94341",
      "timestamp": "2025-08-21T09:00:13.678614",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_090023_23746",
      "timestamp": "2025-08-21T09:00:23.755232",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_090048_48488",
      "timestamp": "2025-08-21T09:01:07.755594",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_090218_38951",
      "timestamp": "2025-08-21T09:02:38.075832",
      "total_tests": 1,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_090259_79673",
      "timestamp": "2025-08-21T09:03:00.009809",
      "total_tests": 1,
      "passed": 1,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_090309_89560",
      "timestamp": "2025-08-21T09:03:13.121266",
      "total_tests": 0,
      "passed": -1,
      "failed": 1,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_090338_18844",
      "timestamp": "2025-08-21T09:03:45.129577",
      "total_tests": 8,
      "passed": 8,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092739_59821",
      "timestamp": "2025-08-21T09:27:43.360505",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092805_85766",
      "timestamp": "2025-08-21T09:28:08.486024",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092834_14601",
      "timestamp": "2025-08-21T09:28:36.989066",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092839_19304",
      "timestamp": "2025-08-21T09:28:42.472029",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092854_34426",
      "timestamp": "2025-08-21T09:28:57.013758",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092917_57935",
      "timestamp": "2025-08-21T09:29:20.763003",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_092922_62379",
      "timestamp": "2025-08-21T09:29:24.856616",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_093008_8242",
      "timestamp": "2025-08-21T09:30:08.268185",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    },
    {
      "run_id": "run_20250821_093242_62104",
      "timestamp": "2025-08-21T09:32:45.446367",
      "total_tests": 0,
      "passed": 0,
      "failed": 0,
      "bad_tests_count": 0
    }
  ],
  "stats": {
    "total_runs": 401,
    "last_updated": "2025-08-21T09:32:45.446367"
  }
}