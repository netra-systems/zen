{
  "timestamp": "20250822_130734",
  "level": "e2e",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 23.463404655456543,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 3304 items / 1 error\n\n=================================== ERRORS ====================================\n_ ERROR collecting tests/integration/critical_paths/test_business_critical_flows_l2.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_business_critical_flows_l2.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_business_critical_flows_l2.py:37: in <module>\n    from netra_backend.app.services.billing.revenue_calculator import RevenueCalculator\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.billing.revenue_calculator'\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntests\\unified_system\\fixtures.py:111\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\fixtures.py:111: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    connection: websockets.WebSocketServerProtocol\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\ntests\\e2e\\test_websocket_integration_helpers.py:36\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\e2e\\test_websocket_integration_helpers.py:36: PytestCollectionWarning: cannot collect test class 'TestSyntaxFix' because it has a __init__ constructor (from: tests/e2e/test_websocket_integration_helpers.py)\n    class TestSyntaxFix:\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_agent_context_isolation_boundaries.py)\n    class TestcontainerHelper:\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_agent_failure_recovery_cascade.py)\n    class TestcontainerHelper:\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_agent_resource_pool_management.py)\n    class TestcontainerHelper:\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.alerting - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.alerting\n\ntests\\integration\\config.py:5\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\config.py:5: PytestCollectionWarning: cannot collect test class 'TestTier' because it has a __init__ constructor (from: tests/integration/critical_paths/test_api_rate_limiting_first_requests.py)\n    class TestTier(str, Enum):\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_auth_service_health_dependencies.py)\n    class TestcontainerHelper:\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/integration/critical_paths/test_business_critical_flows_l2.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================= 26 warnings, 1 error in 13.06s ========================\n",
      "errors": ""
    },
    "auth": {
      "success": false,
      "duration": 19.978143453598022,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 193 items\n\ntests\\integration\\test_auth_oauth_errors.py ........                     [  4%]\ntests\\integration\\test_auth_oauth_google.py ........                     [  8%]\ntests\\integration\\test_oauth_comprehensive_failures.py .............F\n\n================================== FAILURES ===================================\n_ TestOAuthComprehensiveFailures.test_14_distributed_tracing_context_propagation_failure _\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_transports\\default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_transports\\default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_async\\connection_pool.py:256: in handle_async_request\n    raise exc from None\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_async\\connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_async\\connection.py:101: in handle_async_request\n    raise exc\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_async\\connection.py:78: in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_async\\connection.py:124: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_backends\\auto.py:31: in connect_tcp\n    return await self._backend.connect_tcp(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_backends\\anyio.py:113: in connect_tcp\n    with map_exceptions(exc_map):\nC:\\Users\\antho\\miniconda3\\Lib\\contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmap = {<class 'TimeoutError'>: <class 'httpcore.ConnectTimeout'>, <class 'OSError'>: <class 'httpcore.ConnectError'>, <class 'anyio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpcore\\_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nself = <test_oauth_comprehensive_failures.TestOAuthComprehensiveFailures object at 0x0000023276FDEB40>\nstaging_env_config = {'auth_service_url': 'https://auth-service.staging.netra.ai', 'backend_url': 'https://api.staging.netra.ai', 'frontend_url': 'https://app.staging.netra.ai', 'websocket_url': 'wss://ws.staging.netra.ai'}\n\n    @pytest.mark.asyncio\n    async def test_14_distributed_tracing_context_propagation_failure(self, staging_env_config):\n        \"\"\"Test 14: Distributed tracing context propagation failure across services (L4)\"\"\"\n        # Test OpenTelemetry context propagation\n        trace_id = uuid.uuid4().hex\n        span_id = secrets.token_hex(8)\n    \n        headers = {\n            \"traceparent\": f\"00-{trace_id}-{span_id}-01\",\n            \"tracestate\": \"netra=oauth_flow\"\n        }\n    \n        async with httpx.AsyncClient() as http_client:\n            # Auth service should propagate trace context to backend\n>           auth_response = await http_client.post(\n                f\"{staging_env_config['auth_service_url']}/auth/callback/google\",\n                json={\n                    \"code\": f\"valid_code_{secrets.token_urlsafe(8)}\",\n                    \"state\": secrets.token_urlsafe(32),\n                },\n                headers=headers\n            )\n\ntests\\integration\\test_oauth_comprehensive_failures.py:595: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_client.py:1859: in post\n    return await self.request(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_client.py:1629: in send\n    response = await self._send_handling_auth(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_transports\\default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\nC:\\Users\\antho\\miniconda3\\Lib\\contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\httpx\\_transports\\default.py:118: ConnectError\n============================== warnings summary ===============================\ntests\\integration\\test_oauth_comprehensive_failures.py:991\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:991: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1025\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1025: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_invalid_state_parameter\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\conftest.py:59: DeprecationWarning: There is no current event loop\n    loop = asyncio.get_event_loop()\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_01_successful_oauth_login_basic_flow\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py:938: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    content=response.dict(),\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_05_cross_site_request_forgery_token_binding\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\starlette\\testclient.py:451: DeprecationWarning: Setting per-request cookies=<...> is being deprecated, because the expected behaviour on cookie persistence is ambiguous. Set cookies directly on the client instance instead.\n    return super().request(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_14_distributed_tracing_context_propagation_failure\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================== 1 failed, 29 passed, 5 warnings in 14.99s ==================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 9.337944984436035,
      "output": "",
      "errors": "FAIL All Tests __tests__/startup/type-exports.test.tsx\n  Type Export Validation\n    WebSocket Type Exports\n      \u00d7 should export all required WebSocket payload types (33 ms)\n      \u221a should export all WebSocket utility functions (3 ms)\n    Registry Re-exports\n      \u00d7 should re-export all WebSocket types from registry (47 ms)\n      \u221a should re-export all enum types (2 ms)\n      \u221a should re-export all base types (1 ms)\n    Import Chain Validation\n      \u221a should import WebSocket types through services without errors (39 ms)\n      \u221a should import types through providers without errors (7 ms)\n    Circular Dependency Check\n      \u221a should not have circular dependencies in type modules (6 ms)\n    Type Safety Validation\n      \u221a should have proper TypeScript types for all exports (1 ms)\n      \u00d7 should validate enum values correctly (4 ms)\n  Auth Service Type Validation\n    \u00d7 should have proper auth config types (2 ms)\n    \u221a should handle auth service fetch errors gracefully (1 ms)\n\n  \u25cf Type Export Validation \u203a WebSocket Type Exports \u203a should export all required WebSocket payload types\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 41 |\u001b[39m       \n     \u001b[90m 42 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m exportName \u001b[36mof\u001b[39m requiredExports) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m         expect(websocketModule[exportName])\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 44 |\u001b[39m         expect(websocketModule[exportName])\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\n     \u001b[90m 45 |\u001b[39m       }\n     \u001b[90m 46 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:43:45)\n\n  \u25cf Type Export Validation \u203a Registry Re-exports \u203a should re-export all WebSocket types from registry\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 87 |\u001b[39m       \n     \u001b[90m 88 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m exportName \u001b[36mof\u001b[39m requiredReExports) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m         expect(registryModule[exportName])\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 90 |\u001b[39m         expect(registryModule[exportName])\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\n     \u001b[90m 91 |\u001b[39m       }\n     \u001b[90m 92 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:89:44)\n\n  \u25cf Type Export Validation \u203a Type Safety Validation \u203a should validate enum values correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 185 |\u001b[39m       \n     \u001b[90m 186 |\u001b[39m       \u001b[90m// Valid enum value\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 187 |\u001b[39m       expect(isValidWebSocketMessageType(\u001b[32m'AGENT_STARTED'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 188 |\u001b[39m       \n     \u001b[90m 189 |\u001b[39m       \u001b[90m// Invalid enum value\u001b[39m\n     \u001b[90m 190 |\u001b[39m       expect(isValidWebSocketMessageType(\u001b[32m'INVALID_TYPE'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (__tests__/startup/type-exports.test.tsx:187:60)\n\n  \u25cf Auth Service Type Validation \u203a should have proper auth config types\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 196 |\u001b[39m   it(\u001b[32m'should have proper auth config types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 197 |\u001b[39m     \u001b[36mconst\u001b[39m authModule \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m'@/auth/service'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 198 |\u001b[39m     expect(authModule\u001b[33m.\u001b[39m\u001b[33mAuthService\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 199 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 200 |\u001b[39m   \n     \u001b[90m 201 |\u001b[39m   it(\u001b[32m'should handle auth service fetch errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:198:36)\n\nSummary of all failing tests\nFAIL __tests__/startup/type-exports.test.tsx\n  \u25cf Type Export Validation \u203a WebSocket Type Exports \u203a should export all required WebSocket payload types\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 41 |\u001b[39m       \n     \u001b[90m 42 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m exportName \u001b[36mof\u001b[39m requiredExports) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m         expect(websocketModule[exportName])\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 44 |\u001b[39m         expect(websocketModule[exportName])\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\n     \u001b[90m 45 |\u001b[39m       }\n     \u001b[90m 46 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:43:45)\n\n  \u25cf Type Export Validation \u203a Registry Re-exports \u203a should re-export all WebSocket types from registry\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 87 |\u001b[39m       \n     \u001b[90m 88 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m exportName \u001b[36mof\u001b[39m requiredReExports) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m         expect(registryModule[exportName])\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 90 |\u001b[39m         expect(registryModule[exportName])\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\n     \u001b[90m 91 |\u001b[39m       }\n     \u001b[90m 92 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:89:44)\n\n  \u25cf Type Export Validation \u203a Type Safety Validation \u203a should validate enum values correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 185 |\u001b[39m       \n     \u001b[90m 186 |\u001b[39m       \u001b[90m// Valid enum value\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 187 |\u001b[39m       expect(isValidWebSocketMessageType(\u001b[32m'AGENT_STARTED'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 188 |\u001b[39m       \n     \u001b[90m 189 |\u001b[39m       \u001b[90m// Invalid enum value\u001b[39m\n     \u001b[90m 190 |\u001b[39m       expect(isValidWebSocketMessageType(\u001b[32m'INVALID_TYPE'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (__tests__/startup/type-exports.test.tsx:187:60)\n\n  \u25cf Auth Service Type Validation \u203a should have proper auth config types\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 196 |\u001b[39m   it(\u001b[32m'should have proper auth config types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 197 |\u001b[39m     \u001b[36mconst\u001b[39m authModule \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m'@/auth/service'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 198 |\u001b[39m     expect(authModule\u001b[33m.\u001b[39m\u001b[33mAuthService\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 199 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 200 |\u001b[39m   \n     \u001b[90m 201 |\u001b[39m   it(\u001b[32m'should handle auth service fetch errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:198:36)\n\n\nTest Suites: 1 failed, 1 of 372 total\nTests:       4 failed, 8 passed, 12 total\nSnapshots:   0 total\nTime:        6.023 s, estimated 14 s\nRan all test suites.\n"
    },
    "dev_launcher": {
      "success": false,
      "duration": 32.49629521369934,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ntimeout: 600.0s\ntimeout method: thread\ntimeout func_only: False\ncollected 23 items / 4 deselected / 19 selected\n\ntests\\test_system_startup.py ...                                         [ 15%]\ntests\\e2e\\test_dev_launcher_real_startup.py F\n\n================================== FAILURES ===================================\n_____ TestDevLauncherRealStartup.test_real_dev_launcher_startup_sequence ______\ntests\\e2e\\test_dev_launcher_real_startup.py:182: in test_real_dev_launcher_startup_sequence\n    assert startup_success, \"Dev launcher failed to start services\"\nE   AssertionError: Dev launcher failed to start services\nE   assert False\n----------------------------- Captured log setup ------------------------------\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nINFO     dev_launcher.service_config:service_config.py:351 Configuration loaded from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json\nINFO     dev_launcher.service_config:service_config.py:516 Loaded existing service configuration\n---------------------------- Captured stdout call -----------------------------\n\\n=== STARTING REAL DEV LAUNCHER STARTUP TEST ===\\n\\U0001f50d DISCOVER | POSTGRESQL: sqlite+aiosqlite:///:memory:\\n\\U0001f50d DISCOVER | CLICKHOUSE: clickhouse://default:***@localhost:8123/netra_dev\\n\\U0001f50d DISCOVER | REDIS: redis://localhost:6379/0\\n\\U0001f50d WEBSOCKET | Discovered endpoint: backend_ws -> ws://localhost:8000/ws\\n\\u274c auth service NOT bound to port 8001\\n\\u274c backend service NOT bound to port 8000\\n\\u274c frontend service NOT bound to port 3000\n------------------------------ Captured log call ------------------------------\nINFO     dev_launcher.health_monitor:health_monitor.py:139 HealthMonitor initialized (check_interval: 30s)\nINFO     dev_launcher.health_monitor:health_monitor.py:141 Windows process verification enabled\nINFO     dev_launcher.process_manager:process_manager.py:58 ProcessManager initialized for win32\nINFO     dev_launcher.process_manager:process_manager.py:60 Enhanced Windows process tree management enabled\nINFO     dev_launcher.database_connector:database_connector.py:130 Discovered 3 database connections\nINFO     dev_launcher.websocket_validator:websocket_validator.py:78 Discovered 1 WebSocket endpoints\nINFO     dev_launcher.launcher:launcher.py:165 Signal handlers registered for graceful shutdown\n=========================== short test summary info ===========================\nFAILED tests/e2e/test_dev_launcher_real_startup.py::TestDevLauncherRealStartup::test_real_dev_launcher_startup_sequence\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================= 1 failed, 3 passed, 4 deselected in 24.92s ==================\n",
      "errors": ""
    }
  },
  "overall_success": false,
  "total_duration": 85.27578830718994
}