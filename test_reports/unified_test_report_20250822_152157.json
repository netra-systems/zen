{
  "timestamp": "20250822_152157",
  "level": "unit",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 8.849619388580322,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 3481 items / 1 error\n\n=================================== ERRORS ====================================\n_ ERROR collecting tests/integration/critical_paths/test_cross_service_auth_propagation_complete_l4.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_cross_service_auth_propagation_complete_l4.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_cross_service_auth_propagation_complete_l4.py:29: in <module>\n    from netra_backend.app.services.backend_service import BackendService\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.backend_service'\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntests\\unified_system\\fixtures.py:111\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\fixtures.py:111: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    connection: websockets.WebSocketServerProtocol\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\ntests\\e2e\\test_websocket_integration_helpers.py:36\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\e2e\\test_websocket_integration_helpers.py:36: PytestCollectionWarning: cannot collect test class 'TestSyntaxFix' because it has a __init__ constructor (from: tests/e2e/test_websocket_integration_helpers.py)\n    class TestSyntaxFix:\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_agent_context_isolation_boundaries.py)\n    class TestcontainerHelper:\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_agent_failure_recovery_cascade.py)\n    class TestcontainerHelper:\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_agent_resource_pool_management.py)\n    class TestcontainerHelper:\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.alerting - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.alerting\n\ntests\\integration\\config.py:5\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\config.py:5: PytestCollectionWarning: cannot collect test class 'TestTier' because it has a __init__ constructor (from: tests/integration/critical_paths/test_api_rate_limiting_first_requests.py)\n    class TestTier(str, Enum):\n\n..\\test_framework\\testcontainers_utils.py:7\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\testcontainers_utils.py:7: PytestCollectionWarning: cannot collect test class 'TestcontainerHelper' because it has a __init__ constructor (from: tests/integration/critical_paths/test_auth_service_health_dependencies.py)\n    class TestcontainerHelper:\n\ntests\\integration\\critical_paths\\test_business_critical_flows_l2.py:1062\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_business_critical_flows_l2.py:1062: PytestUnknownMarkWarning: Unknown pytest.mark.l2 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/integration/critical_paths/test_cross_service_auth_propagation_complete_l4.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 27 warnings, 1 error in 4.83s ========================\n",
      "errors": ""
    },
    "auth": {
      "success": false,
      "duration": 17.545755863189697,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 193 items\n\ntests\\integration\\test_auth_oauth_errors.py ........                     [  4%]\ntests\\integration\\test_auth_oauth_google.py ........                     [  8%]\ntests\\integration\\test_oauth_comprehensive_failures.py ................. [ 17%]\n............sss                                                          [ 24%]\ntests\\integration\\test_oauth_flows_auth.py ..                            [ 25%]\ntests\\integration\\test_oauth_flows_core.py ...                           [ 27%]\ntests\\integration\\test_oauth_flows_sync.py ............                  [ 33%]\ntests\\test_auth_token_generation.py ..........                           [ 38%]\ntests\\test_auth_token_security.py ................F\n\n================================== FAILURES ===================================\n___________ TestJWTSecurityBoundaries.test_timing_attack_resistance ___________\n\nself = <auth_service.tests.test_auth_token_security.TestJWTSecurityBoundaries testMethod=test_timing_attack_resistance>\n\n    def test_timing_attack_resistance(self):\n        \"\"\"Test resistance to timing attacks\"\"\"\n        # Create valid and invalid tokens\n        valid_token = self.jwt_handler.create_access_token(self.test_user_id, self.test_email)\n        invalid_tokens = [\n            \"invalid.token.here\",\n            valid_token[:-5] + \"wrong\",  # Wrong signature\n            \"\".join(valid_token.split('.')[:-1]) + \".tampered\"  # Tampered\n        ]\n    \n        # Measure validation times\n        valid_times = []\n        invalid_times = []\n    \n        for _ in range(10):\n            # Time valid token validation\n            start = time.time()\n            self.jwt_handler.validate_token_jwt(valid_token, \"access\")\n            valid_times.append(time.time() - start)\n    \n            # Time invalid token validation\n            for invalid_token in invalid_tokens:\n                start = time.time()\n                self.jwt_handler.validate_token_jwt(invalid_token, \"access\")\n                invalid_times.append(time.time() - start)\n    \n        # Calculate average times\n        avg_valid_time = sum(valid_times) / len(valid_times)\n        avg_invalid_time = sum(invalid_times) / len(invalid_times)\n    \n        # Times should be reasonably similar (within 10x) to prevent timing attacks\n>       time_ratio = max(avg_valid_time, avg_invalid_time) / min(avg_valid_time, avg_invalid_time)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       ZeroDivisionError: float division by zero\n\ntests\\test_auth_token_security.py:419: ZeroDivisionError\n------------------------------ Captured log call ------------------------------\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Invalid header string: 'utf-8' codec can't decode byte 0x8a in position 0: invalid start byte\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:114 Invalid token: Signature verification failed\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:421 JWT security validation error: Not enough segments\nWARNING  auth_service.auth_core.core.jwt_handler:jwt_handler.py:83 Token failed security validation\n============================== warnings summary ===============================\ntests\\integration\\test_oauth_comprehensive_failures.py:1245\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1245: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1288\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1288: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_invalid_state_parameter\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\conftest.py:59: DeprecationWarning: There is no current event loop\n    loop = asyncio.get_event_loop()\n\ntests/integration/test_oauth_comprehensive_failures.py: 21 warnings\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py:938: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    content=response.dict(),\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_05_cross_site_request_forgery_token_binding\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_25_session_fixation_attack\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\starlette\\testclient.py:451: DeprecationWarning: Setting per-request cookies=<...> is being deprecated, because the expected behaviour on cookie persistence is ambiguous. Set cookies directly on the client instance instead.\n    return super().request(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/test_auth_token_security.py::TestJWTSecurityBoundaries::test_timing_attack_resistance\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n============ 1 failed, 88 passed, 3 skipped, 26 warnings in 15.62s ============\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 4.206218004226685,
      "output": "",
      "errors": "FAIL Unit Tests __tests__/components/ChatHistorySection/performance-accessibility.test.tsx\n  \u25cf Test suite failed to run\n\n    ReferenceError: Cannot access 'mockUseThreadStore' before initialization\n\n    \u001b[0m \u001b[90m 29 |\u001b[39m\n     \u001b[90m 30 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'@/store/threadStore'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m ({\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 31 |\u001b[39m   useThreadStore\u001b[33m:\u001b[39m mockUseThreadStore\n     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 32 |\u001b[39m }))\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'@/store/chat'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m ({\u001b[0m\n\n      at mockUseThreadStore (__tests__/components/ChatHistorySection/performance-accessibility.test.tsx:31:19)\n      at Object.<anonymous> (components/ChatHistorySection.tsx:15:22)\n      at Object.<anonymous> (__tests__/components/ChatHistorySection/performance-accessibility.test.tsx:40:29)\n\nFAIL Unit Tests __tests__/store/undo-redo-history.test.ts\n  Undo/Redo History Tests\n    State History Management\n      \u221a should track state changes for undo/redo (26 ms)\n      \u221a should implement circular buffer for history size limits (10 ms)\n      \u00d7 should preserve action context in history (6 ms)\n      \u00d7 should handle bulk operations in history (5 ms)\n    Undo Operations\n      \u00d7 should undo single message addition (3 ms)\n      \u00d7 should undo message updates (3 ms)\n      \u00d7 should undo state transitions (3 ms)\n      \u00d7 should handle multiple consecutive undos (4 ms)\n    Redo Operations\n      \u00d7 should redo undone actions (3 ms)\n      \u00d7 should clear redo stack on new actions (3 ms)\n      \u00d7 should handle multiple consecutive redos (5 ms)\n    Timeline Integrity\n      \u00d7 should maintain action timestamps (3 ms)\n      \u00d7 should preserve state immutability in history (3 ms)\n      \u00d7 should handle concurrent history operations (2 ms)\n      \u00d7 should validate history state consistency (2 ms)\n    Memory Management\n      \u00d7 should limit history memory usage (2 ms)\n      \u00d7 should compress old history entries (1 ms)\n      \u00d7 should clear history on explicit request (2 ms)\n\n  \u25cf Undo/Redo History Tests \u203a State History Management \u203a should preserve action context in history\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 199 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 200 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m       expect(historyManager\u001b[33m.\u001b[39mcanUndo())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 202 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 203 |\u001b[39m\n     \u001b[90m 204 |\u001b[39m     it(\u001b[32m'should handle bulk operations in history'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBe (__tests__/store/undo-redo-history.test.ts:201:40)\n\n  \u25cf Undo/Redo History Tests \u203a State History Management \u203a should handle bulk operations in history\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 5\n    Received length: 0\n    Received array:  []\n\n    \u001b[0m \u001b[90m 218 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 219 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 220 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 221 |\u001b[39m       expect(historyManager\u001b[33m.\u001b[39mcanUndo())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 222 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 223 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (__tests__/store/undo-redo-history.test.ts:220:30)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should undo single message addition\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 238 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m\n     \u001b[90m 241 |\u001b[39m       \u001b[90m// Undo\u001b[39m\n     \u001b[90m 242 |\u001b[39m       \u001b[36mconst\u001b[39m previousState \u001b[33m=\u001b[39m historyManager\u001b[33m.\u001b[39mundo()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (__tests__/store/undo-redo-history.test.ts:239:30)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should undo message updates\n\n    TypeError: Cannot read properties of undefined (reading 'content')\n\n    \u001b[0m \u001b[90m 265 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 266 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 267 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcontent)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Updated'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 268 |\u001b[39m\n     \u001b[90m 269 |\u001b[39m       \u001b[90m// Undo\u001b[39m\n     \u001b[90m 270 |\u001b[39m       \u001b[36mconst\u001b[39m previousState \u001b[33m=\u001b[39m historyManager\u001b[33m.\u001b[39mundo()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.content (__tests__/store/undo-redo-history.test.ts:267:32)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should undo state transitions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 296 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 297 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 298 |\u001b[39m       expect(store\u001b[33m.\u001b[39misProcessing)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 299 |\u001b[39m       expect(store\u001b[33m.\u001b[39msubAgentName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'DataSubAgent'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 300 |\u001b[39m\n     \u001b[90m 301 |\u001b[39m       \u001b[90m// Undo\u001b[39m\u001b[0m\n\n      at Object.toBe (__tests__/store/undo-redo-history.test.ts:298:34)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should handle multiple consecutive undos\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 3\n    Received length: 0\n    Received array:  []\n\n    \u001b[0m \u001b[90m 329 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 330 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 331 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 332 |\u001b[39m\n     \u001b[90m 333 |\u001b[39m       \u001b[90m// Undo twice\u001b[39m\n     \u001b[90m 334 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mlet\u001b[39m i \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m i \u001b[33m<\u001b[39m \u001b[35m2\u001b[39m\u001b[33m;\u001b[39m i\u001b[33m++\u001b[39m) {\u001b[0m\n\n      at Object.toHaveLength (__tests__/store/undo-redo-history.test.ts:331:30)\n\n  \u25cf Undo/Redo History Tests \u203a Redo Operations \u203a should redo undone actions\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 354 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'redo-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 355 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 356 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 357 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 358 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 359 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:356:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:355:10)\n\n  \u25cf Undo/Redo History Tests \u203a Redo Operations \u203a should clear redo stack on new actions\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 388 |\u001b[39m       \u001b[36mconst\u001b[39m msg1 \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'clear-1'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 389 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 390 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg1)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 391 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 392 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 393 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:390:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:389:10)\n\n  \u25cf Undo/Redo History Tests \u203a Redo Operations \u203a should handle multiple consecutive redos\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 422 |\u001b[39m         \u001b[36mconst\u001b[39m msg \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m`multi-${i}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 423 |\u001b[39m         act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 424 |\u001b[39m           result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 425 |\u001b[39m           states\u001b[33m.\u001b[39mpush([\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages])\u001b[33m;\u001b[39m\n     \u001b[90m 426 |\u001b[39m           historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m states[i] })\u001b[33m;\u001b[39m\n     \u001b[90m 427 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:424:26)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:423:12)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should maintain action timestamps\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 462 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'timestamp-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 463 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 465 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 466 |\u001b[39m           messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 467 |\u001b[39m           timestamp\u001b[33m:\u001b[39m \u001b[33mDate\u001b[39m\u001b[33m.\u001b[39mnow()\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:464:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:463:10)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should preserve state immutability in history\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 480 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'immutable-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 481 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 482 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 483 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 484 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 485 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:482:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:481:10)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should handle concurrent history operations\n\n    TypeError: Cannot read properties of undefined (reading 'messages')\n\n    \u001b[0m \u001b[90m 507 |\u001b[39m\n     \u001b[90m 508 |\u001b[39m       \u001b[90m// Initial states\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m       history1\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m result1\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages })\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 510 |\u001b[39m       history2\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m result2\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages })\u001b[33m;\u001b[39m\n     \u001b[90m 511 |\u001b[39m\n     \u001b[90m 512 |\u001b[39m       \u001b[90m// Concurrent operations\u001b[39m\u001b[0m\n\n      at Object.messages (__tests__/store/undo-redo-history.test.ts:509:49)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should validate history state consistency\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 531 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'validate-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 532 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 533 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 534 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 535 |\u001b[39m           messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 536 |\u001b[39m           checksum\u001b[33m:\u001b[39m result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mlength\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:533:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:532:10)\n\n  \u25cf Undo/Redo History Tests \u203a Memory Management \u203a should limit history memory usage\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 551 |\u001b[39m         \u001b[36mconst\u001b[39m msg \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m`memory-${i}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 552 |\u001b[39m         act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 553 |\u001b[39m           result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 554 |\u001b[39m           historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 555 |\u001b[39m             messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 556 |\u001b[39m             index\u001b[33m:\u001b[39m i\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:553:26)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:552:12)\n\n  \u25cf Undo/Redo History Tests \u203a Memory Management \u203a should compress old history entries\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 570 |\u001b[39m         \u001b[36mconst\u001b[39m msg \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m`compress-${i}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 571 |\u001b[39m         act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 572 |\u001b[39m           result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 573 |\u001b[39m           historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 574 |\u001b[39m             messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 575 |\u001b[39m             compressed\u001b[33m:\u001b[39m i \u001b[33m<\u001b[39m \u001b[35m10\u001b[39m \u001b[90m// Simulate compression\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:572:26)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:571:12)\n\n  \u25cf Undo/Redo History Tests \u203a Memory Management \u203a should clear history on explicit request\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 586 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'clear-history-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 587 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 588 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 589 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 590 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 591 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:588:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:587:10)\n\nSummary of all failing tests\nFAIL __tests__/components/ChatHistorySection/performance-accessibility.test.tsx\n  \u25cf Test suite failed to run\n\n    ReferenceError: Cannot access 'mockUseThreadStore' before initialization\n\n    \u001b[0m \u001b[90m 29 |\u001b[39m\n     \u001b[90m 30 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'@/store/threadStore'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m ({\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 31 |\u001b[39m   useThreadStore\u001b[33m:\u001b[39m mockUseThreadStore\n     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 32 |\u001b[39m }))\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m jest\u001b[33m.\u001b[39mmock(\u001b[32m'@/store/chat'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m ({\u001b[0m\n\n      at mockUseThreadStore (__tests__/components/ChatHistorySection/performance-accessibility.test.tsx:31:19)\n      at Object.<anonymous> (components/ChatHistorySection.tsx:15:22)\n      at Object.<anonymous> (__tests__/components/ChatHistorySection/performance-accessibility.test.tsx:40:29)\n\nFAIL __tests__/store/undo-redo-history.test.ts\n  \u25cf Undo/Redo History Tests \u203a State History Management \u203a should preserve action context in history\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 199 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 200 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 201 |\u001b[39m       expect(historyManager\u001b[33m.\u001b[39mcanUndo())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 202 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 203 |\u001b[39m\n     \u001b[90m 204 |\u001b[39m     it(\u001b[32m'should handle bulk operations in history'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBe (__tests__/store/undo-redo-history.test.ts:201:40)\n\n  \u25cf Undo/Redo History Tests \u203a State History Management \u203a should handle bulk operations in history\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 5\n    Received length: 0\n    Received array:  []\n\n    \u001b[0m \u001b[90m 218 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 219 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 220 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 221 |\u001b[39m       expect(historyManager\u001b[33m.\u001b[39mcanUndo())\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 222 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 223 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (__tests__/store/undo-redo-history.test.ts:220:30)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should undo single message addition\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 1\n    Received length: 0\n    Received array:  []\n\n    \u001b[0m \u001b[90m 237 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 238 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 239 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 240 |\u001b[39m\n     \u001b[90m 241 |\u001b[39m       \u001b[90m// Undo\u001b[39m\n     \u001b[90m 242 |\u001b[39m       \u001b[36mconst\u001b[39m previousState \u001b[33m=\u001b[39m historyManager\u001b[33m.\u001b[39mundo()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toHaveLength (__tests__/store/undo-redo-history.test.ts:239:30)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should undo message updates\n\n    TypeError: Cannot read properties of undefined (reading 'content')\n\n    \u001b[0m \u001b[90m 265 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 266 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 267 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mcontent)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Updated'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 268 |\u001b[39m\n     \u001b[90m 269 |\u001b[39m       \u001b[90m// Undo\u001b[39m\n     \u001b[90m 270 |\u001b[39m       \u001b[36mconst\u001b[39m previousState \u001b[33m=\u001b[39m historyManager\u001b[33m.\u001b[39mundo()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.content (__tests__/store/undo-redo-history.test.ts:267:32)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should undo state transitions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 296 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 297 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 298 |\u001b[39m       expect(store\u001b[33m.\u001b[39misProcessing)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 299 |\u001b[39m       expect(store\u001b[33m.\u001b[39msubAgentName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'DataSubAgent'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 300 |\u001b[39m\n     \u001b[90m 301 |\u001b[39m       \u001b[90m// Undo\u001b[39m\u001b[0m\n\n      at Object.toBe (__tests__/store/undo-redo-history.test.ts:298:34)\n\n  \u25cf Undo/Redo History Tests \u203a Undo Operations \u203a should handle multiple consecutive undos\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 3\n    Received length: 0\n    Received array:  []\n\n    \u001b[0m \u001b[90m 329 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 330 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 331 |\u001b[39m       expect(store\u001b[33m.\u001b[39mmessages)\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 332 |\u001b[39m\n     \u001b[90m 333 |\u001b[39m       \u001b[90m// Undo twice\u001b[39m\n     \u001b[90m 334 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mlet\u001b[39m i \u001b[33m=\u001b[39m \u001b[35m0\u001b[39m\u001b[33m;\u001b[39m i \u001b[33m<\u001b[39m \u001b[35m2\u001b[39m\u001b[33m;\u001b[39m i\u001b[33m++\u001b[39m) {\u001b[0m\n\n      at Object.toHaveLength (__tests__/store/undo-redo-history.test.ts:331:30)\n\n  \u25cf Undo/Redo History Tests \u203a Redo Operations \u203a should redo undone actions\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 354 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'redo-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 355 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 356 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 357 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 358 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 359 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:356:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:355:10)\n\n  \u25cf Undo/Redo History Tests \u203a Redo Operations \u203a should clear redo stack on new actions\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 388 |\u001b[39m       \u001b[36mconst\u001b[39m msg1 \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'clear-1'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 389 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 390 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg1)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 391 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 392 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 393 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:390:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:389:10)\n\n  \u25cf Undo/Redo History Tests \u203a Redo Operations \u203a should handle multiple consecutive redos\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 422 |\u001b[39m         \u001b[36mconst\u001b[39m msg \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m`multi-${i}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 423 |\u001b[39m         act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 424 |\u001b[39m           result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 425 |\u001b[39m           states\u001b[33m.\u001b[39mpush([\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages])\u001b[33m;\u001b[39m\n     \u001b[90m 426 |\u001b[39m           historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m states[i] })\u001b[33m;\u001b[39m\n     \u001b[90m 427 |\u001b[39m         })\u001b[33m;\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:424:26)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:423:12)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should maintain action timestamps\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 462 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'timestamp-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 463 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 465 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 466 |\u001b[39m           messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 467 |\u001b[39m           timestamp\u001b[33m:\u001b[39m \u001b[33mDate\u001b[39m\u001b[33m.\u001b[39mnow()\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:464:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:463:10)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should preserve state immutability in history\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 480 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'immutable-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 481 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 482 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 483 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 484 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 485 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:482:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:481:10)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should handle concurrent history operations\n\n    TypeError: Cannot read properties of undefined (reading 'messages')\n\n    \u001b[0m \u001b[90m 507 |\u001b[39m\n     \u001b[90m 508 |\u001b[39m       \u001b[90m// Initial states\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m       history1\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m result1\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages })\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 510 |\u001b[39m       history2\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m result2\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages })\u001b[33m;\u001b[39m\n     \u001b[90m 511 |\u001b[39m\n     \u001b[90m 512 |\u001b[39m       \u001b[90m// Concurrent operations\u001b[39m\u001b[0m\n\n      at Object.messages (__tests__/store/undo-redo-history.test.ts:509:49)\n\n  \u25cf Undo/Redo History Tests \u203a Timeline Integrity \u203a should validate history state consistency\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 531 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'validate-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 532 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 533 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 534 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 535 |\u001b[39m           messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 536 |\u001b[39m           checksum\u001b[33m:\u001b[39m result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages\u001b[33m.\u001b[39mlength\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:533:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:532:10)\n\n  \u25cf Undo/Redo History Tests \u203a Memory Management \u203a should limit history memory usage\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 551 |\u001b[39m         \u001b[36mconst\u001b[39m msg \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m`memory-${i}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 552 |\u001b[39m         act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 553 |\u001b[39m           result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 554 |\u001b[39m           historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 555 |\u001b[39m             messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 556 |\u001b[39m             index\u001b[33m:\u001b[39m i\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:553:26)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:552:12)\n\n  \u25cf Undo/Redo History Tests \u203a Memory Management \u203a should compress old history entries\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 570 |\u001b[39m         \u001b[36mconst\u001b[39m msg \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m`compress-${i}`\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 571 |\u001b[39m         act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 572 |\u001b[39m           result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(msg)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 573 |\u001b[39m           historyManager\u001b[33m.\u001b[39mpush({ \n     \u001b[90m 574 |\u001b[39m             messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages]\u001b[33m,\u001b[39m\n     \u001b[90m 575 |\u001b[39m             compressed\u001b[33m:\u001b[39m i \u001b[33m<\u001b[39m \u001b[35m10\u001b[39m \u001b[90m// Simulate compression\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:572:26)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:571:12)\n\n  \u25cf Undo/Redo History Tests \u203a Memory Management \u203a should clear history on explicit request\n\n    TypeError: Cannot read properties of undefined (reading 'addMessage')\n\n    \u001b[0m \u001b[90m 586 |\u001b[39m       \u001b[36mconst\u001b[39m message \u001b[33m=\u001b[39m \u001b[33mChatStoreTestUtils\u001b[39m\u001b[33m.\u001b[39mcreateMockMessage(\u001b[32m'clear-history-msg'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 587 |\u001b[39m       act(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 588 |\u001b[39m         result\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39maddMessage(message)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 589 |\u001b[39m         historyManager\u001b[33m.\u001b[39mpush({ messages\u001b[33m:\u001b[39m [\u001b[33m...\u001b[39mresult\u001b[33m.\u001b[39mcurrent\u001b[33m.\u001b[39mmessages] })\u001b[33m;\u001b[39m\n     \u001b[90m 590 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 591 |\u001b[39m\u001b[0m\n\n      at addMessage (__tests__/store/undo-redo-history.test.ts:588:24)\n      at node_modules/@testing-library/react/dist/act-compat.js:48:24\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at Object.<anonymous> (__tests__/store/undo-redo-history.test.ts:587:10)\n\n\nTest Suites: 2 failed, 2 of 126 total\nTests:       16 failed, 2 passed, 18 total\nSnapshots:   0 total\nTime:        3.164 s\nRan all test suites.\n"
    },
    "dev_launcher": {
      "success": true,
      "duration": 15.194021940231323,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ncollected 3 items\n\ntests\\test_system_startup.py ...                                         [100%]\n\n============================= 3 passed in 11.86s ==============================\n",
      "errors": ""
    }
  },
  "overall_success": false,
  "total_duration": 45.79561519622803
}