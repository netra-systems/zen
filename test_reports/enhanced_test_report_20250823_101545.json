{
  "timestamp": "20250823_101545",
  "test_level": "unit",
  "environment": "local",
  "enhanced_execution": true,
  "categories": {
    "unit": {
      "success": false,
      "duration": 17.408290147781372,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 2319 items / 1 error\n\n=================================== ERRORS ====================================\n_______ ERROR collecting tests/e2e/test_cost_optimization_workflows.py ________\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\miniconda3\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\e2e\\test_cost_optimization_workflows.py\", line 20\nE       from netra_backend.app.websocket.unified import UnifiedWebSocketManager as WebSocketManager as WSManager\nE                                                                                                   ^^\nE   SyntaxError: invalid syntax\n============================== warnings summary ===============================\napp\\schemas\\Config.py:315\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:315: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntests\\unified_system\\fixtures.py:111\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\fixtures.py:111: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    connection: websockets.WebSocketServerProtocol\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/e2e/test_cost_optimization_workflows.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 18 warnings, 1 error in 4.62s ========================\n\n============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 204 items / 189 deselected / 15 selected\n\ntests\\unit\\test_oauth_models.py ...............                          [100%]\n\n============================== warnings summary ===============================\ntests\\integration\\test_oauth_comprehensive_failures.py:1245\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1245: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1288\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1288: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests/unit/test_oauth_models.py::TestAuthProvider::test_provider_values\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\conftest.py:59: DeprecationWarning: There is no current event loop\n    loop = asyncio.get_event_loop()\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=============== 15 passed, 189 deselected, 3 warnings in 0.94s ================\n\n  console.log\n    \ud83d\udce6 ChatSidebarHooks module mock created\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:43:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1000,\n      threadIds: [\n        'thread-1',  'thread-2',  'thread-3',  'thread-4',  'thread-5',\n        'thread-6',  'thread-7',  'thread-8',  'thread-9',  'thread-10',\n        'thread-11', 'thread-12', 'thread-13', 'thread-14', 'thread-15',\n        'thread-16', 'thread-17', 'thread-18', 'thread-19', 'thread-20',\n        'thread-21', 'thread-22', 'thread-23', 'thread-24', 'thread-25',\n        'thread-26', 'thread-27', 'thread-28', 'thread-29', 'thread-30',\n        'thread-31', 'thread-32', 'thread-33', 'thread-34', 'thread-35',\n        'thread-36', 'thread-37', 'thread-38', 'thread-39', 'thread-40',\n        'thread-41', 'thread-42', 'thread-43', 'thread-44', 'thread-45',\n        'thread-46', 'thread-47', 'thread-48', 'thread-49', 'thread-50',\n        'thread-51', 'thread-52', 'thread-53', 'thread-54', 'thread-55',\n        'thread-56', 'thread-57', 'thread-58', 'thread-59', 'thread-60',\n        'thread-61', 'thread-62', 'thread-63', 'thread-64', 'thread-65',\n        'thread-66', 'thread-67', 'thread-68', 'thread-69', 'thread-70',\n        'thread-71', 'thread-72', 'thread-73', 'thread-74', 'thread-75',\n        'thread-76', 'thread-77', 'thread-78', 'thread-79', 'thread-80',\n        'thread-81', 'thread-82', 'thread-83', 'thread-84', 'thread-85',\n        'thread-86', 'thread-87', 'thread-88', 'thread-89', 'thread-90',\n        'thread-91', 'thread-92', 'thread-93', 'thread-94', 'thread-95',\n        'thread-96', 'thread-97', 'thread-98', 'thread-99', 'thread-100',\n        ... 900 more items\n      ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        totalPages: 20\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 500,\n      threadIds: [\n        'thread-1',  'thread-2',  'thread-3',  'thread-4',  'thread-5',\n        'thread-6',  'thread-7',  'thread-8',  'thread-9',  'thread-10',\n        'thread-11', 'thread-12', 'thread-13', 'thread-14', 'thread-15',\n        'thread-16', 'thread-17', 'thread-18', 'thread-19', 'thread-20',\n        'thread-21', 'thread-22', 'thread-23', 'thread-24', 'thread-25',\n        'thread-26', 'thread-27', 'thread-28', 'thread-29', 'thread-30',\n        'thread-31', 'thread-32', 'thread-33', 'thread-34', 'thread-35',\n        'thread-36', 'thread-37', 'thread-38', 'thread-39', 'thread-40',\n        'thread-41', 'thread-42', 'thread-43', 'thread-44', 'thread-45',\n        'thread-46', 'thread-47', 'thread-48', 'thread-49', 'thread-50',\n        'thread-51', 'thread-52', 'thread-53', 'thread-54', 'thread-55',\n        'thread-56', 'thread-57', 'thread-58', 'thread-59', 'thread-60',\n        'thread-61', 'thread-62', 'thread-63', 'thread-64', 'thread-65',\n        'thread-66', 'thread-67', 'thread-68', 'thread-69', 'thread-70',\n        'thread-71', 'thread-72', 'thread-73', 'thread-74', 'thread-75',\n        'thread-76', 'thread-77', 'thread-78', 'thread-79', 'thread-80',\n        'thread-81', 'thread-82', 'thread-83', 'thread-84', 'thread-85',\n        'thread-86', 'thread-87', 'thread-88', 'thread-89', 'thread-90',\n        'thread-91', 'thread-92', 'thread-93', 'thread-94', 'thread-95',\n        'thread-96', 'thread-97', 'thread-98', 'thread-99', 'thread-100',\n        ... 400 more items\n      ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        totalPages: 10\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: true,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: true,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: { threadsProvided: true, threadsCount: 0, threadIds: [] }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: { sortedThreads: [], paginatedThreads: [], totalPages: 0 }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        },\n        deleteThread: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        },\n        renameThread: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: 'Performance',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: 'Performance',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n",
      "errors": "\n\nFAIL Unit Tests __tests__/components/chat/interface/advanced-chat-features.test.tsx\n  \u25cf Test suite failed to run\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at Object.<anonymous> (components/chat/ChatSidebar.tsx:22:32)\n      at Object.<anonymous> (__tests__/components/chat/interface/advanced-chat-features.test.tsx:19:22)\n\nFAIL Unit Tests __tests__/components/Sidebar/complete.test.tsx\n  Sidebar Complete Test Suite\n    Performance Tests\n      \u00d7 should render 1000+ threads within performance budget (330 ms)\n      \u00d7 should handle thread switching under 200ms (21 ms)\n      \u00d7 should maintain smooth scrolling with large lists (17 ms)\n    Thread State Management\n      \u00d7 should persist active thread highlighting (13 ms)\n      \u00d7 should update unread indicators correctly (21 ms)\n      \u00d7 should handle thread creation state correctly (20 ms)\n    Search and Filter Functionality\n      \u00d7 should filter threads in real-time (16 ms)\n      \u00d7 should handle empty search results gracefully (16 ms)\n      \u00d7 should clear search results properly (30 ms)\n    Thread Operations\n      \u00d7 should handle thread deletion with confirmation (18 ms)\n      \u00d7 should support thread pinning functionality (19 ms)\n      \u00d7 should handle thread rename operations (15 ms)\n    Collapse and Expand Behavior\n      \u00d7 should toggle sidebar collapse state (24 ms)\n      \u00d7 should preserve thread selection when collapsed (16 ms)\n    Keyboard Navigation\n      \u00d7 should support arrow key navigation through threads (21 ms)\n      \u00d7 should handle Enter key to select thread (18 ms)\n    State Persistence\n      \u00d7 should persist sidebar state across page refreshes (17 ms)\n      \u00d7 should restore search query on reload (14 ms)\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should render 1000+ threads within performance budget\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at node_modules/react/cjs/react.development.js:823:21\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should handle thread switching under 200ms\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:77:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should maintain smooth scrolling with large lists\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:94:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should persist active thread highlighting\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:114:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should update unread indicators correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:131:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should handle thread creation state correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:145:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should filter threads in real-time\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:159:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should handle empty search results gracefully\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:176:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should clear search results properly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:190:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread deletion with confirmation\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:215:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should support thread pinning functionality\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:234:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread rename operations\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:252:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should toggle sidebar collapse state\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:270:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should preserve thread selection when collapsed\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:286:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should support arrow key navigation through threads\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:300:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should handle Enter key to select thread\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:317:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should persist sidebar state across page refreshes\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:338:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should restore search query on reload\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:350:25)\n\nSummary of all failing tests\nFAIL __tests__/components/chat/interface/advanced-chat-features.test.tsx\n  \u25cf Test suite failed to run\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at Object.<anonymous> (components/chat/ChatSidebar.tsx:22:32)\n      at Object.<anonymous> (__tests__/components/chat/interface/advanced-chat-features.test.tsx:19:22)\n\nFAIL __tests__/components/Sidebar/complete.test.tsx\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should render 1000+ threads within performance budget\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at node_modules/react/cjs/react.development.js:823:21\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should handle thread switching under 200ms\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:77:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should maintain smooth scrolling with large lists\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:94:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should persist active thread highlighting\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:114:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should update unread indicators correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:131:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should handle thread creation state correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:145:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should filter threads in real-time\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:159:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should handle empty search results gracefully\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:176:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should clear search results properly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:190:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread deletion with confirmation\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:215:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should support thread pinning functionality\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:234:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread rename operations\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:252:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should toggle sidebar collapse state\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:270:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should preserve thread selection when collapsed\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:286:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should support arrow key navigation through threads\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:300:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should handle Enter key to select thread\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:317:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should persist sidebar state across page refreshes\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:338:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should restore search query on reload\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:350:25)\n\n\nTest Suites: 2 failed, 2 of 126 total\nTests:       18 failed, 18 total\nSnapshots:   0 total\nTime:        4.094 s, estimated 323 s\nRan all test suites.\n",
      "service_results": {
        "backend": {
          "success": false,
          "duration": 9.059584140777588,
          "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 2319 items / 1 error\n\n=================================== ERRORS ====================================\n_______ ERROR collecting tests/e2e/test_cost_optimization_workflows.py ________\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\miniconda3\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\e2e\\test_cost_optimization_workflows.py\", line 20\nE       from netra_backend.app.websocket.unified import UnifiedWebSocketManager as WebSocketManager as WSManager\nE                                                                                                   ^^\nE   SyntaxError: invalid syntax\n============================== warnings summary ===============================\napp\\schemas\\Config.py:315\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:315: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntests\\unified_system\\fixtures.py:111\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\fixtures.py:111: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    connection: websockets.WebSocketServerProtocol\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/e2e/test_cost_optimization_workflows.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 18 warnings, 1 error in 4.62s ========================\n",
          "errors": ""
        },
        "auth": {
          "success": true,
          "duration": 3.0377962589263916,
          "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 204 items / 189 deselected / 15 selected\n\ntests\\unit\\test_oauth_models.py ...............                          [100%]\n\n============================== warnings summary ===============================\ntests\\integration\\test_oauth_comprehensive_failures.py:1245\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1245: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1288\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1288: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests/unit/test_oauth_models.py::TestAuthProvider::test_provider_values\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\conftest.py:59: DeprecationWarning: There is no current event loop\n    loop = asyncio.get_event_loop()\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=============== 15 passed, 189 deselected, 3 warnings in 0.94s ================\n",
          "errors": ""
        },
        "frontend": {
          "success": false,
          "duration": 5.310909748077393,
          "output": "  console.log\n    \ud83d\udce6 ChatSidebarHooks module mock created\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:43:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1000,\n      threadIds: [\n        'thread-1',  'thread-2',  'thread-3',  'thread-4',  'thread-5',\n        'thread-6',  'thread-7',  'thread-8',  'thread-9',  'thread-10',\n        'thread-11', 'thread-12', 'thread-13', 'thread-14', 'thread-15',\n        'thread-16', 'thread-17', 'thread-18', 'thread-19', 'thread-20',\n        'thread-21', 'thread-22', 'thread-23', 'thread-24', 'thread-25',\n        'thread-26', 'thread-27', 'thread-28', 'thread-29', 'thread-30',\n        'thread-31', 'thread-32', 'thread-33', 'thread-34', 'thread-35',\n        'thread-36', 'thread-37', 'thread-38', 'thread-39', 'thread-40',\n        'thread-41', 'thread-42', 'thread-43', 'thread-44', 'thread-45',\n        'thread-46', 'thread-47', 'thread-48', 'thread-49', 'thread-50',\n        'thread-51', 'thread-52', 'thread-53', 'thread-54', 'thread-55',\n        'thread-56', 'thread-57', 'thread-58', 'thread-59', 'thread-60',\n        'thread-61', 'thread-62', 'thread-63', 'thread-64', 'thread-65',\n        'thread-66', 'thread-67', 'thread-68', 'thread-69', 'thread-70',\n        'thread-71', 'thread-72', 'thread-73', 'thread-74', 'thread-75',\n        'thread-76', 'thread-77', 'thread-78', 'thread-79', 'thread-80',\n        'thread-81', 'thread-82', 'thread-83', 'thread-84', 'thread-85',\n        'thread-86', 'thread-87', 'thread-88', 'thread-89', 'thread-90',\n        'thread-91', 'thread-92', 'thread-93', 'thread-94', 'thread-95',\n        'thread-96', 'thread-97', 'thread-98', 'thread-99', 'thread-100',\n        ... 900 more items\n      ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        totalPages: 20\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 500,\n      threadIds: [\n        'thread-1',  'thread-2',  'thread-3',  'thread-4',  'thread-5',\n        'thread-6',  'thread-7',  'thread-8',  'thread-9',  'thread-10',\n        'thread-11', 'thread-12', 'thread-13', 'thread-14', 'thread-15',\n        'thread-16', 'thread-17', 'thread-18', 'thread-19', 'thread-20',\n        'thread-21', 'thread-22', 'thread-23', 'thread-24', 'thread-25',\n        'thread-26', 'thread-27', 'thread-28', 'thread-29', 'thread-30',\n        'thread-31', 'thread-32', 'thread-33', 'thread-34', 'thread-35',\n        'thread-36', 'thread-37', 'thread-38', 'thread-39', 'thread-40',\n        'thread-41', 'thread-42', 'thread-43', 'thread-44', 'thread-45',\n        'thread-46', 'thread-47', 'thread-48', 'thread-49', 'thread-50',\n        'thread-51', 'thread-52', 'thread-53', 'thread-54', 'thread-55',\n        'thread-56', 'thread-57', 'thread-58', 'thread-59', 'thread-60',\n        'thread-61', 'thread-62', 'thread-63', 'thread-64', 'thread-65',\n        'thread-66', 'thread-67', 'thread-68', 'thread-69', 'thread-70',\n        'thread-71', 'thread-72', 'thread-73', 'thread-74', 'thread-75',\n        'thread-76', 'thread-77', 'thread-78', 'thread-79', 'thread-80',\n        'thread-81', 'thread-82', 'thread-83', 'thread-84', 'thread-85',\n        'thread-86', 'thread-87', 'thread-88', 'thread-89', 'thread-90',\n        'thread-91', 'thread-92', 'thread-93', 'thread-94', 'thread-95',\n        'thread-96', 'thread-97', 'thread-98', 'thread-99', 'thread-100',\n        ... 400 more items\n      ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        totalPages: 10\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: true,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: true,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: { threadsProvided: true, threadsCount: 0, threadIds: [] }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: { sortedThreads: [], paginatedThreads: [], totalPages: 0 }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        },\n        deleteThread: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        },\n        renameThread: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: 'Performance',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: 'Performance',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n",
          "errors": "FAIL Unit Tests __tests__/components/chat/interface/advanced-chat-features.test.tsx\n  \u25cf Test suite failed to run\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at Object.<anonymous> (components/chat/ChatSidebar.tsx:22:32)\n      at Object.<anonymous> (__tests__/components/chat/interface/advanced-chat-features.test.tsx:19:22)\n\nFAIL Unit Tests __tests__/components/Sidebar/complete.test.tsx\n  Sidebar Complete Test Suite\n    Performance Tests\n      \u00d7 should render 1000+ threads within performance budget (330 ms)\n      \u00d7 should handle thread switching under 200ms (21 ms)\n      \u00d7 should maintain smooth scrolling with large lists (17 ms)\n    Thread State Management\n      \u00d7 should persist active thread highlighting (13 ms)\n      \u00d7 should update unread indicators correctly (21 ms)\n      \u00d7 should handle thread creation state correctly (20 ms)\n    Search and Filter Functionality\n      \u00d7 should filter threads in real-time (16 ms)\n      \u00d7 should handle empty search results gracefully (16 ms)\n      \u00d7 should clear search results properly (30 ms)\n    Thread Operations\n      \u00d7 should handle thread deletion with confirmation (18 ms)\n      \u00d7 should support thread pinning functionality (19 ms)\n      \u00d7 should handle thread rename operations (15 ms)\n    Collapse and Expand Behavior\n      \u00d7 should toggle sidebar collapse state (24 ms)\n      \u00d7 should preserve thread selection when collapsed (16 ms)\n    Keyboard Navigation\n      \u00d7 should support arrow key navigation through threads (21 ms)\n      \u00d7 should handle Enter key to select thread (18 ms)\n    State Persistence\n      \u00d7 should persist sidebar state across page refreshes (17 ms)\n      \u00d7 should restore search query on reload (14 ms)\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should render 1000+ threads within performance budget\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at node_modules/react/cjs/react.development.js:823:21\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should handle thread switching under 200ms\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:77:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should maintain smooth scrolling with large lists\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:94:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should persist active thread highlighting\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:114:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should update unread indicators correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:131:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should handle thread creation state correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:145:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should filter threads in real-time\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:159:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should handle empty search results gracefully\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:176:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should clear search results properly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:190:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread deletion with confirmation\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:215:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should support thread pinning functionality\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:234:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread rename operations\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:252:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should toggle sidebar collapse state\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:270:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should preserve thread selection when collapsed\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:286:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should support arrow key navigation through threads\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:300:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should handle Enter key to select thread\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:317:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should persist sidebar state across page refreshes\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:338:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should restore search query on reload\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:350:25)\n\nSummary of all failing tests\nFAIL __tests__/components/chat/interface/advanced-chat-features.test.tsx\n  \u25cf Test suite failed to run\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at Object.<anonymous> (components/chat/ChatSidebar.tsx:22:32)\n      at Object.<anonymous> (__tests__/components/chat/interface/advanced-chat-features.test.tsx:19:22)\n\nFAIL __tests__/components/Sidebar/complete.test.tsx\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should render 1000+ threads within performance budget\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at node_modules/react/cjs/react.development.js:823:21\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should handle thread switching under 200ms\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:77:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Performance Tests \u203a should maintain smooth scrolling with large lists\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:94:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should persist active thread highlighting\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:114:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should update unread indicators correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:131:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread State Management \u203a should handle thread creation state correctly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:145:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should filter threads in real-time\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:159:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should handle empty search results gracefully\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:176:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Search and Filter Functionality \u203a should clear search results properly\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:190:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread deletion with confirmation\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:215:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should support thread pinning functionality\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:234:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Thread Operations \u203a should handle thread rename operations\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:252:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should toggle sidebar collapse state\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:270:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Collapse and Expand Behavior \u203a should preserve thread selection when collapsed\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:286:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should support arrow key navigation through threads\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:300:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a Keyboard Navigation \u203a should handle Enter key to select thread\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:317:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should persist sidebar state across page refreshes\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:338:25)\n\n  \u25cf Sidebar Complete Test Suite \u203a State Persistence \u203a should restore search query on reload\n\n    ReferenceError: PERFORMANCE_THRESHOLDS is not defined\n\n    \u001b[0m \u001b[90m 223 |\u001b[39m \u001b[90m * Metric thresholds for alerting\u001b[39m\n     \u001b[90m 224 |\u001b[39m \u001b[90m */\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 225 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mMETRICS_THRESHOLDS\u001b[39m \u001b[33m=\u001b[39m {\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 226 |\u001b[39m   \u001b[33m...\u001b[39m\u001b[33mPERFORMANCE_THRESHOLDS\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 227 |\u001b[39m   \u001b[33mMAX_EXECUTION_TIME\u001b[39m\u001b[33m:\u001b[39m \u001b[35m30000\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// 30 seconds\u001b[39m\n     \u001b[90m 228 |\u001b[39m   \u001b[33mMAX_MEMORY_PER_AGENT\u001b[39m\u001b[33m:\u001b[39m \u001b[35m256\u001b[39m\u001b[33m,\u001b[39m   \u001b[90m// MB\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (types/unified/metrics.types.ts:225:35)\n      at Object.<anonymous> (types/unified/index.ts:27:14)\n      at Object.<anonymous> (components/chat/ChatSidebarThreadList.tsx:21:18)\n      at require (__tests__/components/ChatSidebar/setup.tsx:594:46)\n      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProvider (__tests__/components/ChatSidebar/setup.tsx:859:16)\n      at Object.<anonymous> (__tests__/components/Sidebar/complete.test.tsx:350:25)\n\n\nTest Suites: 2 failed, 2 of 126 total\nTests:       18 failed, 18 total\nSnapshots:   0 total\nTime:        4.094 s, estimated 323 s\nRan all test suites.\n"
        }
      }
    }
  },
  "overall_success": false,
  "total_duration": 17.408290147781372,
  "execution_plan": null,
  "category_statistics": {
    "total_categories": 9,
    "by_priority": {
      "CRITICAL": 1,
      "HIGH": 2,
      "MEDIUM": 3,
      "LOW": 3,
      "OPTIONAL": 0
    },
    "by_type": {
      "functional": 3,
      "technical": 2,
      "quality": 1,
      "integration": 1,
      "performance": 1,
      "security": 0,
      "e2e": 1
    },
    "parallel_safe": 7,
    "requires_real_services": 1,
    "requires_real_llm": 0,
    "memory_intensive": 2,
    "cpu_intensive": 1,
    "database_dependent": 1,
    "average_estimated_duration": "0:10:40",
    "categories_with_history": 0,
    "average_success_rate": 0.0
  }
}