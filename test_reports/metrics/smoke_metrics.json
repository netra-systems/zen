{
  "timestamp": "2025-08-14T16:49:37.723172",
  "level": "smoke",
  "metrics": {
    "total_tests": 2,
    "passed": 0,
    "failed": 0,
    "coverage": null
  },
  "results": {
    "backend": {
      "status": "failed",
      "duration": 13.023431777954102,
      "exit_code": 4,
      "output": "Loaded test environment from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.env.test\n================================================================================\nNETRA AI PLATFORM - BACKEND TEST RUNNER\n================================================================================\nTest Configuration:\n  Category: smoke\n  Parallel: disabled\n  Coverage: disabled\n  Fail Fast: enabled\n  Environment: testing\n\nRunning command:\n  pytest app/tests/routes/test_health_route.py app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error app/tests/core/test_config_manager.py::TestConfigManager::test_initialization app/tests/services/test_security_service.py::test_encrypt_and_decrypt tests/test_system_startup.py::TestSystemStartup::test_configuration_loading -v -x --maxfail=1 -m not real_services --tb=short --asyncio-mode=auto --color=yes --strict-markers --disable-warnings -p no:warnings\n================================================================================\n\u001b[1m============================= test session starts =============================\u001b[0m\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0 -- C:\\Users\\antho\\miniconda3\\python.exe\ncachedir: .pytest_cache\nmetadata: {'Python': '3.12.4', 'Platform': 'Windows-11-10.0.26100-SP0', 'Packages': {'pytest': '8.4.1', 'pluggy': '1.6.0'}, 'Plugins': {'anyio': '4.9.0', 'Faker': '37.4.2', 'langsmith': '0.4.10', 'asyncio': '0.21.1', 'cov': '6.2.1', 'html': '4.1.1', 'json-report': '1.5.0', 'metadata': '3.1.1', 'mock': '3.14.1', 'timeout': '2.4.0', 'xdist': '3.8.0', 'typeguard': '4.4.4'}}\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.4.2, langsmith-0.4.10, asyncio-0.21.1, cov-6.2.1, html-4.1.1, json-report-1.5.0, metadata-3.1.1, mock-3.14.1, timeout-2.4.0, xdist-3.8.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO\n\u001b[1mcollecting ... \u001b[0mcollected 0 items / 2 errors\n\n=================================== ERRORS ====================================\n\u001b[31m\u001b[1m___________ ERROR collecting app/tests/core/test_error_handling.py ____________\u001b[0m\n\u001b[31mImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\app\\tests\\core\\test_error_handling.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n..\\..\\..\\..\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\napp\\tests\\core\\test_error_handling.py:27: in <module>\n    from app.core.error_handlers import (\nE   ImportError: cannot import name 'ApiApiErrorHandler' from 'app.core.error_handlers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\app\\core\\error_handlers.py)\u001b[0m\n------------------------------- Captured stdout -------------------------------\nLoaded .env file from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.env\n\u001b[31m\u001b[1m________________________ ERROR collecting test session ________________________\u001b[0m\n\u001b[1m\u001b[31m..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\pluggy\\_hooks.py\u001b[0m:512: in __call__\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._hookexec(\u001b[96mself\u001b[39;49;00m.name, \u001b[96mself\u001b[39;49;00m._hookimpls.copy(), kwargs, firstresult)\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\pluggy\\_manager.py\u001b[0m:120: in _hookexec\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m._inner_hookexec(hook_name, methods, kwargs, firstresult)\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m..\\..\\..\\..\\miniconda3\\Lib\\site-packages\\_pytest\\main.py\u001b[0m:652: in pytest_collectstart\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.Failed(\u001b[96mself\u001b[39;49;00m.shouldfail)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   _pytest.main.Failed: stopping after 1 failures\u001b[0m\n\u001b[36m\u001b[1m=========================== short test summary info ===========================\u001b[0m\n\u001b[31mERROR\u001b[0m app/tests/core/test_error_handling.py\n\u001b[31mERROR\u001b[0m  - _pytest.main.Failed: stopping after 1 failures\n\u001b[31m!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 2 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\u001b[0m\n\u001b[31m============================== \u001b[31m\u001b[1m2 errors\u001b[0m\u001b[31m in 1.35s\u001b[0m\u001b[31m ==============================\u001b[0m\n================================================================================\n[FAIL] TESTS FAILED with exit code 4 after 11.68s\n================================================================================\n\nERROR: found no collectors for C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\app\\tests\\core\\test_error_handling.py::TestNetraExceptions::test_configuration_error\n\n",
      "test_counts": {
        "total": 2,
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "errors": 2,
        "test_files": 5
      },
      "coverage": null,
      "test_details": []
    },
    "frontend": {
      "status": "skipped",
      "duration": 0,
      "exit_code": null,
      "output": "",
      "test_counts": {
        "total": 0,
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "errors": 0
      },
      "coverage": null
    },
    "e2e": {
      "status": "pending",
      "duration": 0,
      "exit_code": null,
      "output": "",
      "test_counts": {
        "total": 0,
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "errors": 0
      },
      "coverage": null
    },
    "overall": {
      "status": "failed",
      "start_time": 1755215364.6932154,
      "end_time": 1755215377.7211647
    }
  }
}