{
  "timestamp": "20250821_221713",
  "level": "integration",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 7.941666603088379,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 45 items / 1 error\n\n=================================== ERRORS ====================================\n__________ ERROR collecting tests/agents/test_data_sub_agent_core.py __________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\agents\\test_data_sub_agent_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\agents\\test_data_sub_agent_core.py:26: in <module>\n    from ..helpers.shared_test_types import (\ntests\\helpers\\__init__.py:4: in <module>\n    from netra_backend.tests.helpers.quality_gate_fixtures import *\ntests\\helpers\\quality_gate_fixtures.py:17: in <module>\n    from netra_backend.tests.quality_gate_helpers import (\nE   ModuleNotFoundError: No module named 'netra_backend.tests.quality_gate_helpers'\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\agents\\base\\monitoring.py:68: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"system_start_time\": datetime.utcnow(),\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/agents/test_data_sub_agent_core.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 5 warnings, 1 error in 0.57s =========================\n",
      "errors": "--- Logging error in Loguru Handler #2 ---\nRecord was: {'elapsed': datetime.timedelta(seconds=5, microseconds=108652), 'exception': None, 'extra': {}, 'file': (name='__init__.py', path='C:\\\\Users\\\\antho\\\\miniconda3\\\\Lib\\\\logging\\\\__init__.py'), 'function': 'handle', 'level': (name='INFO', no=20, icon='\\u2139\\ufe0f'), 'line': 1028, 'message': 'Multiprocessing resources cleaned up', 'module': '__init__', 'name': 'logging', 'process': (id=51096, name='MainProcess'), 'thread': (id=25128, name='MainThread'), 'time': datetime(2025, 8, 21, 22, 16, 23, 499438, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=61200), 'Pacific Daylight Time'))}\nTraceback (most recent call last):\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_handler.py\", line 315, in _queued_writer\n    self._sink.write(message)\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_simple_sinks.py\", line 16, in write\n    self._stream.write(message)\nValueError: I/O operation on closed file.\n--- End of logging error ---\n"
    },
    "auth": {
      "success": false,
      "duration": 20.660180807113647,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 193 items\n\ntests\\integration\\test_auth_oauth_errors.py ........                     [  4%]\ntests\\integration\\test_auth_oauth_google.py ........                     [  8%]\ntests\\integration\\test_oauth_comprehensive_failures.py F\n\n================================== FAILURES ===================================\n__ TestOAuthComprehensiveFailures.test_01_successful_oauth_login_basic_flow ___\n\nself = <test_oauth_comprehensive_failures.TestOAuthComprehensiveFailures object at 0x00000187068C8920>\nreal_db_session = <sqlalchemy.orm.session.Session object at 0x00000187081947D0>\n\n    @pytest.mark.asyncio\n    async def test_01_successful_oauth_login_basic_flow(self, real_db_session):\n        \"\"\"\n        Test 1: Basic successful OAuth login flow - THE DEFAULT CASE\n        This MUST work in production but is designed to initially fail.\n        \"\"\"\n        # Simulate Google OAuth callback with valid token\n        state = secrets.token_urlsafe(32)\n        mock_google_user = {\n            \"id\": \"google_123456\",\n            \"email\": \"testuser@example.com\",\n            \"name\": \"Test User\",\n            \"picture\": \"https://example.com/photo.jpg\",\n            \"verified_email\": True,\n        }\n    \n        with patch(\"httpx.AsyncClient.post\") as mock_post:\n            mock_post.return_value.json.return_value = {\n                \"access_token\": \"valid_google_token\",\n                \"token_type\": \"Bearer\",\n                \"expires_in\": 3600,\n            }\n    \n            with patch(\"httpx.AsyncClient.get\") as mock_get:\n                mock_get.return_value.json.return_value = mock_google_user\n    \n                response = client.post(\n                    \"/auth/callback/google\",\n                    json={\n                        \"code\": \"valid_auth_code\",\n                        \"state\": state,\n                    }\n                )\n    \n        # This SHOULD succeed but will initially fail\n>       assert response.status_code == 200\nE       assert 503 == 200\nE        +  where 503 = <Response [503 Service Unavailable]>.status_code\n\ntests\\integration\\test_oauth_comprehensive_failures.py:132: AssertionError\n------------------------------ Captured log call ------------------------------\nERROR    auth_service.auth_core.security.oauth_security:oauth_security.py:299 HMAC validation error: Incorrect padding\nWARNING  auth_service.auth_core.routes.auth_routes:auth_routes.py:630 Using simple string state (test mode)\nERROR    auth_service.auth_core.database.connection:connection.py:204 Auth database transaction rolled back: (sqlite3.OperationalError) no such table: auth_users\n[SQL: SELECT auth_users.id, auth_users.email, auth_users.full_name, auth_users.hashed_password, auth_users.auth_provider, auth_users.provider_user_id, auth_users.provider_data, auth_users.is_active, auth_users.is_verified, auth_users.created_at, auth_users.updated_at, auth_users.last_login_at, auth_users.failed_login_attempts, auth_users.locked_until \nFROM auth_users \nWHERE auth_users.email = ?]\n[parameters: ('testuser@example.com',)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\nERROR    auth_service.auth_core.routes.auth_routes:auth_routes.py:758 Database connection failed: (sqlite3.OperationalError) no such table: auth_users\n[SQL: SELECT auth_users.id, auth_users.email, auth_users.full_name, auth_users.hashed_password, auth_users.auth_provider, auth_users.provider_user_id, auth_users.provider_data, auth_users.is_active, auth_users.is_verified, auth_users.created_at, auth_users.updated_at, auth_users.last_login_at, auth_users.failed_login_attempts, auth_users.locked_until \nFROM auth_users \nWHERE auth_users.email = ?]\n[parameters: ('testuser@example.com',)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\n============================== warnings summary ===============================\nauth_core\\database\\models.py:11\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\database\\models.py:11: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\ntests\\config\\test_env.py:16\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_env.py:16: PytestCollectionWarning: cannot collect test class 'TestEnvironment' because it has a __init__ constructor (from: tests/base/test_base.py)\n    class TestEnvironment:\n\ntests\\config\\test_settings.py:85\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_settings.py:85: PytestCollectionWarning: cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/base/test_base.py)\n    @dataclass\n\ntests\\config\\test_env.py:16\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_env.py:16: PytestCollectionWarning: cannot collect test class 'TestEnvironment' because it has a __init__ constructor (from: tests/config/test_env.py)\n    class TestEnvironment:\n\ntests\\config\\test_settings.py:85\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_settings.py:85: PytestCollectionWarning: cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/config/test_settings.py)\n    @dataclass\n\ntests\\database\\test_config.py:20\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\database\\test_config.py:20: PytestCollectionWarning: cannot collect test class 'TestDatabaseConfig' because it has a __init__ constructor (from: tests/database/test_config.py)\n    class TestDatabaseConfig:\n\ntests\\integration\\test_oauth_comprehensive_failures.py:858\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:858: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:892\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:892: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_01_successful_oauth_login_basic_flow\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================== 1 failed, 16 passed, 8 warnings in 14.99s ==================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 6.13684868812561,
      "output": "  console.debug\n    [2025-08-22T05:16:50.973Z] DEBUG: Automated cleanup started undefined\n\n      at FrontendLogger.log (lib/logger.ts:139:19)\n\n  console.warn\n    [2025-08-22T05:16:50.966Z] WARN: Received 401, attempting [REDACTED] undefined\n\n    \u001b[0m \u001b[90m 217 |\u001b[39m       \u001b[36mreturn\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 218 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 219 |\u001b[39m     originalWarn\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 220 |\u001b[39m   }\u001b[33m;\u001b[39m\n     \u001b[90m 221 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 222 |\u001b[39m\u001b[0m\n\n      at console.call (jest.setup.js:219:18)\n      at FrontendLogger.log (lib/logger.ts:145:19)\n      at FrontendLogger.warn (lib/logger.ts:211:10)\n      at AuthInterceptor.authenticatedFetch (lib/auth-interceptor.ts:186:16)\n      at performFetch (services/apiClientWrapper.ts:145:24)\n      at ApiClientWrapper.retryRequest (services/apiClientWrapper.ts:83:16)\n      at ApiClientWrapper.request (services/apiClientWrapper.ts:188:16)\n\n  console.info\n    [2025-08-22T05:16:51.046Z] INFO: [REDACTED] successfully undefined\n\n      at FrontendLogger.log (lib/logger.ts:142:19)\n\n  console.info\n    [2025-08-22T05:16:51.047Z] INFO: Retrying request with refreshed token undefined\n\n      at FrontendLogger.log (lib/logger.ts:142:19)\n\n  console.debug\n    [2025-08-22T05:16:51.098Z] DEBUG: Creating secure WebSocket with authentication and compression support { protocols: [ 'jwt-auth', 'jwt.[token]' ] }\n\n      at FrontendLogger.log (lib/logger.ts:139:19)\n\n",
      "errors": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL Integration Tests __tests__/auth/auth-token-refresh-auto.test.tsx\n  Auth Token Refresh Automatic\n    Automatic Token Refresh\n      \u00d7 should refresh token before expiry threshold (17 ms)\n      \u00d7 should update auth store with refreshed token (1 ms)\n      \u00d7 should refresh token on user activity near expiry (1 ms)\n      \u00d7 should not refresh if token has sufficient time remaining (2 ms)\n    Token Refresh on API Calls\n      \u00d7 should refresh token before making authenticated API calls (2 ms)\n      \u00d7 should retry API call with refreshed token (1 ms)\n      \u00d7 should handle 401 responses by triggering token refresh (1 ms)\n      \u00d7 should prevent multiple concurrent refresh attempts (1 ms)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should refresh token before expiry threshold\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should update auth store with refreshed token\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should refresh token on user activity near expiry\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should not refresh if token has sufficient time remaining\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should refresh token before making authenticated API calls\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should retry API call with refreshed token\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should handle 401 responses by triggering token refresh\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should prevent multiple concurrent refresh attempts\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\nSummary of all failing tests\nFAIL __tests__/auth/auth-token-refresh-auto.test.tsx\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should refresh token before expiry threshold\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should update auth store with refreshed token\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should refresh token on user activity near expiry\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Automatic Token Refresh \u203a should not refresh if token has sufficient time remaining\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should refresh token before making authenticated API calls\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should retry API call with refreshed token\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should handle 401 responses by triggering token refresh\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n  \u25cf Auth Token Refresh Automatic \u203a Token Refresh on API Calls \u203a should prevent multiple concurrent refresh attempts\n\n    TypeError: jest.mocked(...).mockResolvedValue is not a function\n\n    \u001b[0m \u001b[90m 63 |\u001b[39m     \n     \u001b[90m 64 |\u001b[39m     \u001b[36mconst\u001b[39m mockConfig \u001b[33m=\u001b[39m createMockAuthConfig()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 65 |\u001b[39m     jest\u001b[33m.\u001b[39mmocked(authService\u001b[33m.\u001b[39mgetAuthConfig)\u001b[33m.\u001b[39mmockResolvedValue(mockConfig)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 67 |\u001b[39m\n     \u001b[90m 68 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/auth/auth-token-refresh-auto.test.tsx:65:44)\n\n\nTest Suites: 1 failed, 1 of 163 total\nTests:       8 failed, 8 total\nSnapshots:   0 total\nTime:        4.137 s, estimated 31 s\nRan all test suites.\n"
    },
    "dev_launcher": {
      "success": false,
      "duration": 21.93852925300598,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ntimeout: 300.0s\ntimeout method: thread\ntimeout func_only: False\ncollected 22 items\n\ntests\\e2e\\test_dev_launcher_real_startup.py sF\n\n================================== FAILURES ===================================\n______ TestDevLauncherRealStartup.test_service_startup_order_validation _______\ntests\\e2e\\test_dev_launcher_real_startup.py:394: in test_service_startup_order_validation\n    assert startup_success, \"Service startup failed\"\nE   AssertionError: Service startup failed\nE   assert False\n----------------------------- Captured log setup ------------------------------\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nINFO     dev_launcher.service_config:service_config.py:350 Configuration loaded from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json\nINFO     dev_launcher.service_config:service_config.py:515 Loaded existing service configuration\n---------------------------- Captured stdout call -----------------------------\n\\n=== TESTING SERVICE STARTUP ORDER ===\\n\\U0001f50d DISCOVER | POSTGRESQL: sqlite+aiosqlite:///:memory:\\n\\U0001f50d DISCOVER | CLICKHOUSE: clickhouse://default:***@localhost:8123/netra_dev\\n\\U0001f50d DISCOVER | REDIS: redis://localhost:6379/0\\n\\U0001f50d WEBSOCKET | Discovered endpoint: backend_ws -> ws://localhost:8000/ws\\n\\u274c auth service NOT bound to port 8001\\n\\u2705 backend service bound to port 8000\\n\\u274c frontend service NOT bound to port 3000\n------------------------------ Captured log call ------------------------------\nINFO     dev_launcher.health_monitor:health_monitor.py:139 HealthMonitor initialized (check_interval: 30s)\nINFO     dev_launcher.health_monitor:health_monitor.py:141 Windows process verification enabled\nINFO     dev_launcher.process_manager:process_manager.py:58 ProcessManager initialized for win32\nINFO     dev_launcher.process_manager:process_manager.py:60 Enhanced Windows process tree management enabled\nINFO     dev_launcher.database_connector:database_connector.py:130 Discovered 3 database connections\nINFO     dev_launcher.websocket_validator:websocket_validator.py:78 Discovered 1 WebSocket endpoints\nINFO     dev_launcher.launcher:launcher.py:165 Signal handlers registered for graceful shutdown\n=========================== short test summary info ===========================\nSKIPPED [1] tests\\e2e\\test_dev_launcher_real_startup.py:208: Port 8000 (backend) is in use and cannot be freed\nFAILED tests/e2e/test_dev_launcher_real_startup.py::TestDevLauncherRealStartup::test_service_startup_order_validation\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 1 failed, 1 skipped in 16.94s ========================\n",
      "errors": "C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\unraisableexception.py:33: RuntimeWarning: coroutine 'DevLauncher.run' was never awaited\n  gc.collect()\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\n"
    }
  },
  "overall_success": false,
  "total_duration": 56.67722535133362
}