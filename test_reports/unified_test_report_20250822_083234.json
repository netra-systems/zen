{
  "timestamp": "20250822_083234",
  "level": "critical",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 9.753645896911621,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 59 items / 1 error\n\n=================================== ERRORS ====================================\n______ ERROR collecting tests/agents/test_data_sub_agent_integration.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\agents\\test_data_sub_agent_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\agents\\test_data_sub_agent_integration.py:19: in <module>\n    from netra_backend.tests.agents.helpers.shared_test_types import (\nE   ImportError: cannot import name 'TestIntegration' from 'netra_backend.tests.agents.helpers.shared_test_types' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\agents\\helpers\\shared_test_types.py)\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\agents\\base\\monitoring.py:68: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"system_start_time\": datetime.utcnow(),\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/agents/test_data_sub_agent_integration.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 5 warnings, 1 error in 0.73s =========================\n",
      "errors": "--- Logging error in Loguru Handler #2 ---\nRecord was: {'elapsed': datetime.timedelta(seconds=6, microseconds=694083), 'exception': None, 'extra': {}, 'file': (name='__init__.py', path='C:\\\\Users\\\\antho\\\\miniconda3\\\\Lib\\\\logging\\\\__init__.py'), 'function': 'handle', 'level': (name='INFO', no=20, icon='\\u2139\\ufe0f'), 'line': 1028, 'message': 'Multiprocessing resources cleaned up', 'module': '__init__', 'name': 'logging', 'process': (id=48216, name='MainProcess'), 'thread': (id=57004, name='MainThread'), 'time': datetime(2025, 8, 22, 8, 31, 45, 664346, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=61200), 'Pacific Daylight Time'))}\nTraceback (most recent call last):\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_handler.py\", line 315, in _queued_writer\n    self._sink.write(message)\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_simple_sinks.py\", line 16, in write\n    self._stream.write(message)\nValueError: I/O operation on closed file.\n--- End of logging error ---\n"
    },
    "auth": {
      "success": false,
      "duration": 13.993422746658325,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 193 items\n\ntests\\integration\\test_auth_oauth_errors.py ........                     [  4%]\ntests\\integration\\test_auth_oauth_google.py ........                     [  8%]\ntests\\integration\\test_oauth_comprehensive_failures.py F\n\n================================== FAILURES ===================================\n__ TestOAuthComprehensiveFailures.test_01_successful_oauth_login_basic_flow ___\n\nself = <test_oauth_comprehensive_failures.TestOAuthComprehensiveFailures object at 0x000002008812F800>\nreal_db_session = <sqlalchemy.orm.session.Session object at 0x00000200893F7D70>\n\n    @pytest.mark.asyncio\n    async def test_01_successful_oauth_login_basic_flow(self, real_db_session):\n        \"\"\"\n        Test 1: Basic successful OAuth login flow - THE DEFAULT CASE\n        This MUST work in production but is designed to initially fail.\n        \"\"\"\n        # Simulate Google OAuth callback with valid token\n        state = secrets.token_urlsafe(32)\n        mock_google_user = {\n            \"id\": \"google_123456\",\n            \"email\": \"testuser@example.com\",\n            \"name\": \"Test User\",\n            \"picture\": \"https://example.com/photo.jpg\",\n            \"verified_email\": True,\n        }\n    \n        with patch(\"httpx.AsyncClient.post\") as mock_post:\n            mock_post.return_value.json.return_value = {\n                \"access_token\": \"valid_google_token\",\n                \"token_type\": \"Bearer\",\n                \"expires_in\": 3600,\n            }\n    \n            with patch(\"httpx.AsyncClient.get\") as mock_get:\n                mock_get.return_value.json.return_value = mock_google_user\n    \n                response = client.post(\n                    \"/auth/callback/google\",\n                    json={\n                        \"code\": \"valid_auth_code\",\n                        \"state\": state,\n                    }\n                )\n    \n        # This SHOULD succeed but will initially fail\n>       assert response.status_code == 200\nE       assert 503 == 200\nE        +  where 503 = <Response [503 Service Unavailable]>.status_code\n\ntests\\integration\\test_oauth_comprehensive_failures.py:132: AssertionError\n------------------------------ Captured log call ------------------------------\nWARNING  auth_service.auth_core.routes.auth_routes:auth_routes.py:629 Using simple string state (test mode)\nERROR    auth_service.auth_core.database.connection:connection.py:216 Auth database transaction rolled back: (sqlite3.OperationalError) no such table: auth_users\n[SQL: SELECT auth_users.id, auth_users.email, auth_users.full_name, auth_users.hashed_password, auth_users.auth_provider, auth_users.provider_user_id, auth_users.provider_data, auth_users.is_active, auth_users.is_verified, auth_users.created_at, auth_users.updated_at, auth_users.last_login_at, auth_users.failed_login_attempts, auth_users.locked_until \nFROM auth_users \nWHERE auth_users.email = ?]\n[parameters: ('testuser@example.com',)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\nERROR    auth_service.auth_core.routes.auth_routes:auth_routes.py:795 Database connection failed: (sqlite3.OperationalError) no such table: auth_users\n[SQL: SELECT auth_users.id, auth_users.email, auth_users.full_name, auth_users.hashed_password, auth_users.auth_provider, auth_users.provider_user_id, auth_users.provider_data, auth_users.is_active, auth_users.is_verified, auth_users.created_at, auth_users.updated_at, auth_users.last_login_at, auth_users.failed_login_attempts, auth_users.locked_until \nFROM auth_users \nWHERE auth_users.email = ?]\n[parameters: ('testuser@example.com',)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\n============================== warnings summary ===============================\nauth_core\\database\\models.py:11\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\database\\models.py:11: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\ntests\\config\\test_env.py:16\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_env.py:16: PytestCollectionWarning: cannot collect test class 'TestEnvironment' because it has a __init__ constructor (from: tests/base/test_base.py)\n    class TestEnvironment:\n\ntests\\config\\test_settings.py:85\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_settings.py:85: PytestCollectionWarning: cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/base/test_base.py)\n    @dataclass\n\ntests\\config\\test_env.py:16\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_env.py:16: PytestCollectionWarning: cannot collect test class 'TestEnvironment' because it has a __init__ constructor (from: tests/config/test_env.py)\n    class TestEnvironment:\n\ntests\\config\\test_settings.py:85\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_settings.py:85: PytestCollectionWarning: cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/config/test_settings.py)\n    @dataclass\n\ntests\\database\\test_config.py:20\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\database\\test_config.py:20: PytestCollectionWarning: cannot collect test class 'TestDatabaseConfig' because it has a __init__ constructor (from: tests/database/test_config.py)\n    class TestDatabaseConfig:\n\ntests\\integration\\test_oauth_comprehensive_failures.py:859\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:859: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:893\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:893: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_01_successful_oauth_login_basic_flow\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================== 1 failed, 16 passed, 8 warnings in 10.87s ==================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 5.803138017654419,
      "output": "",
      "errors": "FAIL Critical Path Tests __tests__/startup/type-exports.test.tsx\n  Type Export Validation\n    WebSocket Type Exports\n      \u00d7 should export all required WebSocket payload types (12 ms)\n      \u221a should export all WebSocket utility functions (3 ms)\n    Registry Re-exports\n      \u00d7 should re-export all WebSocket types from registry (13 ms)\n      \u221a should re-export all enum types (1 ms)\n      \u221a should re-export all base types (1 ms)\n    Import Chain Validation\n      \u221a should import WebSocket types through services without errors (11 ms)\n      \u221a should import types through providers without errors (5 ms)\n    Circular Dependency Check\n      \u221a should not have circular dependencies in type modules (5 ms)\n    Type Safety Validation\n      \u221a should have proper TypeScript types for all exports\n      \u00d7 should validate enum values correctly (4 ms)\n  Auth Service Type Validation\n    \u00d7 should have proper auth config types (2 ms)\n    \u221a should handle auth service fetch errors gracefully (2 ms)\n\n  \u25cf Type Export Validation \u203a WebSocket Type Exports \u203a should export all required WebSocket payload types\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 41 |\u001b[39m       \n     \u001b[90m 42 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m exportName \u001b[36mof\u001b[39m requiredExports) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m         expect(websocketModule[exportName])\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 44 |\u001b[39m         expect(websocketModule[exportName])\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\n     \u001b[90m 45 |\u001b[39m       }\n     \u001b[90m 46 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:43:45)\n\n  \u25cf Type Export Validation \u203a Registry Re-exports \u203a should re-export all WebSocket types from registry\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 87 |\u001b[39m       \n     \u001b[90m 88 |\u001b[39m       \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m exportName \u001b[36mof\u001b[39m requiredReExports) {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 89 |\u001b[39m         expect(registryModule[exportName])\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 90 |\u001b[39m         expect(registryModule[exportName])\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBeNull()\u001b[33m;\u001b[39m\n     \u001b[90m 91 |\u001b[39m       }\n     \u001b[90m 92 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:89:44)\n\n  \u25cf Type Export Validation \u203a Type Safety Validation \u203a should validate enum values correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 185 |\u001b[39m       \n     \u001b[90m 186 |\u001b[39m       \u001b[90m// Valid enum value\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 187 |\u001b[39m       expect(isValidWebSocketMessageType(\u001b[32m'AGENT_STARTED'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 188 |\u001b[39m       \n     \u001b[90m 189 |\u001b[39m       \u001b[90m// Invalid enum value\u001b[39m\n     \u001b[90m 190 |\u001b[39m       expect(isValidWebSocketMessageType(\u001b[32m'INVALID_TYPE'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (__tests__/startup/type-exports.test.tsx:187:60)\n\n  \u25cf Auth Service Type Validation \u203a should have proper auth config types\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 196 |\u001b[39m   it(\u001b[32m'should have proper auth config types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 197 |\u001b[39m     \u001b[36mconst\u001b[39m authModule \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mimport\u001b[39m(\u001b[32m'@/auth/service'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 198 |\u001b[39m     expect(authModule\u001b[33m.\u001b[39m\u001b[33mAuthService\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 199 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 200 |\u001b[39m   \n     \u001b[90m 201 |\u001b[39m   it(\u001b[32m'should handle auth service fetch errors gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBeDefined (__tests__/startup/type-exports.test.tsx:198:36)\n\nTest Suites: 1 failed, 1 of 14 total\nTests:       4 failed, 8 passed, 12 total\nSnapshots:   0 total\nTime:        3.454 s, estimated 32 s\nRan all test suites.\n"
    },
    "dev_launcher": {
      "success": false,
      "duration": 28.2513165473938,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ncollected 23 items / 4 deselected / 19 selected\n\ntests\\test_system_startup.py ...                                         [ 15%]\ntests\\e2e\\test_dev_launcher_real_startup.py F\n\n================================== FAILURES ===================================\n_____ TestDevLauncherRealStartup.test_real_dev_launcher_startup_sequence ______\ntests\\e2e\\test_dev_launcher_real_startup.py:182: in test_real_dev_launcher_startup_sequence\n    assert startup_success, \"Dev launcher failed to start services\"\nE   AssertionError: Dev launcher failed to start services\nE   assert False\n---------------------------- Captured stderr setup ----------------------------\n2025-08-22 08:32:24.315 | INFO     | logging:handle:1028 | Configuration loaded from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json\n2025-08-22 08:32:24.316 | INFO     | logging:handle:1028 | Loaded existing service configuration\n----------------------------- Captured log setup ------------------------------\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nINFO     dev_launcher.service_config:service_config.py:350 Configuration loaded from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json\nINFO     dev_launcher.service_config:service_config.py:515 Loaded existing service configuration\n---------------------------- Captured stdout call -----------------------------\n\\n=== STARTING REAL DEV LAUNCHER STARTUP TEST ===\\n\\U0001f50d DISCOVER | POSTGRESQL: sqlite+aiosqlite:///:memory:\\n\\U0001f50d DISCOVER | CLICKHOUSE: clickhouse://default:***@localhost:8123/netra_dev\\n\\U0001f50d DISCOVER | REDIS: redis://localhost:6379/0\\n\\U0001f50d WEBSOCKET | Discovered endpoint: backend_ws -> ws://localhost:8000/ws\\n\\u274c auth service NOT bound to port 8001\\n\\u274c backend service NOT bound to port 8000\\n\\u274c frontend service NOT bound to port 3000\n---------------------------- Captured stderr call -----------------------------\n2025-08-22 08:32:27.346 | INFO     | logging:handle:1028 | HealthMonitor initialized (check_interval: 30s)\n2025-08-22 08:32:27.347 | INFO     | logging:handle:1028 | Windows process verification enabled\n2025-08-22 08:32:27.347 | INFO     | logging:handle:1028 | ProcessManager initialized for win32\n2025-08-22 08:32:27.347 | INFO     | logging:handle:1028 | Enhanced Windows process tree management enabled\n2025-08-22 08:32:27.350 | INFO     | logging:handle:1028 | Discovered 3 database connections\n2025-08-22 08:32:27.350 | INFO     | logging:handle:1028 | Discovered 1 WebSocket endpoints\n2025-08-22 08:32:27.351 | INFO     | logging:handle:1028 | Signal handlers registered for graceful shutdown\n------------------------------ Captured log call ------------------------------\nINFO     dev_launcher.health_monitor:health_monitor.py:139 HealthMonitor initialized (check_interval: 30s)\nINFO     dev_launcher.health_monitor:health_monitor.py:141 Windows process verification enabled\nINFO     dev_launcher.process_manager:process_manager.py:58 ProcessManager initialized for win32\nINFO     dev_launcher.process_manager:process_manager.py:60 Enhanced Windows process tree management enabled\nINFO     dev_launcher.database_connector:database_connector.py:130 Discovered 3 database connections\nINFO     dev_launcher.websocket_validator:websocket_validator.py:78 Discovered 1 WebSocket endpoints\nINFO     dev_launcher.launcher:launcher.py:165 Signal handlers registered for graceful shutdown\n=========================== short test summary info ===========================\nFAILED tests/e2e/test_dev_launcher_real_startup.py::TestDevLauncherRealStartup::test_real_dev_launcher_startup_sequence\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n============ 1 failed, 3 passed, 4 deselected, 1 warning in 22.44s ============\n",
      "errors": ""
    }
  },
  "overall_success": false,
  "total_duration": 57.801523208618164
}