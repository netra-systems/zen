{
  "timestamp": "20250823_035616",
  "level": "integration",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 28.05890727043152,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\n\n----------------------------- live log collection -----------------------------\nservice_secret not configured, using jwt_secret_key fallback\ncollected 3402 items / 1 error\n\n=================================== ERRORS ====================================\n_ ERROR collecting tests/integration/critical_paths/test_concurrent_session_management_l4.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_concurrent_session_management_l4.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Program Files\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_concurrent_session_management_l4.py:24: in <module>\n    from netra_backend.app.core.resource_manager import ResourceTracker as ResourceManager\napp\\core\\resource_manager.py:23: in <module>\n    import resource\nE   ModuleNotFoundError: No module named 'resource'\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntests\\unified_system\\fixtures.py:111\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\fixtures.py:111: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    connection: websockets.WebSocketServerProtocol\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.alerting - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.alerting\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:49\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:49: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:116\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:116: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:178\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:178: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:221\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:221: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:265\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:265: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:304\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:304: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:347\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:347: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:387\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:387: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:422\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:422: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:468\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_api_request_lifecycle_complete_l4.py:468: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:170\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:170: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:232\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:232: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:292\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:292: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:346\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:346: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:438\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:438: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:525\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:525: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:609\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_audit_trail_integrity_l4.py:609: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:167\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:167: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(180)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:232\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:232: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:296\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:296: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:348\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:348: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:390\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:390: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:436\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:436: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:495\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:495: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(180)\n\ntests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:543\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_failover_scenarios_l4.py:543: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:159\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:159: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:230\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:230: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:324\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:324: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:388\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:388: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:435\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:435: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:503\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:503: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:545\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_middleware_chain_validation.py:545: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:271\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:271: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:344\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:344: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:376\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:376: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:434\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:434: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:470\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:470: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:500\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:500: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:556\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_role_based_access_flow_l4.py:556: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:57\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:57: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:100\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:100: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:175\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:175: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:218\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:218: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:256\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:256: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:309\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:309: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:376\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:376: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:454\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:454: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:500\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_failover_complete_l4.py:500: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:176\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:176: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:244\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:244: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:310\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:310: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:384\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:384: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:456\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_service_recovery_crash.py:456: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:71\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:71: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:102\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:102: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:151\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:151: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:203\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:203: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:239\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:239: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:270\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:270: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:294\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:294: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:334\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:334: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:380\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:380: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:411\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_session_lifecycle_complete_l4.py:411: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(30)\n\ntests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:147\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:147: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(120)\n\ntests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:208\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:208: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(180)\n\ntests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:260\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:260: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(60)\n\ntests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:312\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_auth_token_refresh_high_load.py:312: PytestUnknownMarkWarning: Unknown pytest.mark.timeout - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.timeout(90)\n\ntests\\integration\\critical_paths\\test_business_critical_flows_l2.py:1062\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_business_critical_flows_l2.py:1062: PytestUnknownMarkWarning: Unknown pytest.mark.l2 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/integration/critical_paths/test_concurrent_session_management_l4.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================= 88 warnings, 1 error in 21.91s ========================\n",
      "errors": ""
    },
    "auth": {
      "success": false,
      "duration": 25.568726778030396,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 204 items\n\ntests\\integration\\test_auth_oauth_errors.py ........                     [  3%]\ntests\\integration\\test_auth_oauth_google.py ........                     [  7%]\ntests\\integration\\test_oauth_comprehensive_failures.py ..F\n\n================================== FAILURES ===================================\n______ TestOAuthComprehensiveFailures.test_03_oauth_nonce_replay_attack _______\n\nself = <test_oauth_comprehensive_failures.TestOAuthComprehensiveFailures object at 0x0000024B9914DE20>\nmock_auth_redis = <Mock id='2523738790256'>\n\n    @pytest.mark.asyncio\n    async def test_03_oauth_nonce_replay_attack(self, mock_auth_redis):\n        \"\"\"Test 3: OAuth nonce replay attack prevention (L3 with mock Redis)\"\"\"\n        # Use the existing mock Redis infrastructure from conftest.py\n        redis_client = mock_auth_redis\n    \n        nonce = secrets.token_urlsafe(32)\n        state = base64.urlsafe_b64encode(\n            json.dumps({\"nonce\": nonce, \"timestamp\": int(time.time())}).encode()\n        ).decode()\n    \n        # Store nonce in Redis mock to simulate it's already been used\n        redis_client.exists.return_value = True  # Nonce already exists\n        redis_client.get.return_value = \"used\"\n    \n        # Mock successful OAuth responses to isolate nonce testing\n        with patch(\"httpx.AsyncClient\") as mock_client:\n            # Patch the OAuth security manager to use our mock Redis\n            with patch(\"auth_service.auth_core.routes.auth_routes.oauth_security\") as mock_oauth_security:\n                from auth_service.auth_core.security.oauth_security import OAuthSecurityManager\n    \n                # Create a new OAuth security manager with our mock Redis\n                mock_oauth_security_instance = OAuthSecurityManager(redis_client)\n                mock_oauth_security.check_nonce_replay = mock_oauth_security_instance.check_nonce_replay\n                mock_oauth_security.track_authorization_code = lambda x: True  # Always allow code for this test\n                mock_oauth_security.validate_cors_origin = lambda x: True  # Allow CORS for test\n    \n                mock_async_client = AsyncMock()\n                mock_client.return_value.__aenter__.return_value = mock_async_client\n    \n                # Mock token exchange response\n                mock_token_response = Mock()\n                mock_token_response.status_code = 200\n                mock_token_response.json.return_value = {\n                    \"access_token\": \"mock_access_token\",\n                    \"token_type\": \"Bearer\"\n                }\n                mock_async_client.post.return_value = mock_token_response\n    \n                # Mock user info response\n                mock_user_response = Mock()\n                mock_user_response.status_code = 200\n                mock_user_response.json.return_value = {\n                    \"id\": \"test_user_123\",\n                    \"email\": \"test@example.com\",\n                    \"name\": \"Test User\",\n                    \"verified_email\": True\n                }\n                mock_async_client.get.return_value = mock_user_response\n    \n                # Try to reuse the same nonce (use unique code to avoid code reuse check)\n                unique_code = f\"unique_code_{secrets.token_urlsafe(8)}\"\n                response = client.post(\n                    \"/auth/callback/google\",\n                    json={\n                        \"code\": unique_code,\n                        \"state\": state,\n                    }\n                )\n>               assert response.status_code == 401\nE               assert 200 == 401\nE                +  where 200 = <Response [200 OK]>.status_code\n\ntests\\integration\\test_oauth_comprehensive_failures.py:236: AssertionError\n------------------------------ Captured log call ------------------------------\nWARNING  auth_service.auth_core.security.oauth_security:oauth_security.py:32 Using generated HMAC secret - set OAUTH_HMAC_SECRET for production\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1245\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1245: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1288\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1288: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_invalid_state_parameter\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\conftest.py:59: DeprecationWarning: There is no current event loop\n    loop = asyncio.get_event_loop()\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-152\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-147\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-137\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-132\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-122\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-117\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-107\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-97\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-92\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-87\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-82\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-72\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-67\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_rate_limiting_behavior\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-57\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_token_validation\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-169\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_user_profile_mapping\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-183\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_user_profile_mapping\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-179\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_state_security\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-201\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_state_security\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-197\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_concurrent_requests\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-226\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_concurrent_requests\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-225\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_concurrent_requests\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-224\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_auth_oauth_google.py::TestGoogleOAuthFlow::test_google_oauth_concurrent_requests\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-223\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_01_successful_oauth_login_basic_flow\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_03_oauth_nonce_replay_attack\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py:1009: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    content=response.dict(),\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_01_successful_oauth_login_basic_flow\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\threadexception.py:58: PytestUnhandledThreadExceptionWarning: Exception in thread Thread-233\n  \n  Traceback (most recent call last):\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 113, in run\n      get_loop(future).call_soon_threadsafe(set_result, future, result)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  During handling of the above exception, another exception occurred:\n  \n  Traceback (most recent call last):\n    File \"C:\\Program Files\\Python312\\Lib\\threading.py\", line 1073, in _bootstrap_inner\n      self.run()\n    File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\aiosqlite\\core.py\", line 121, in run\n      get_loop(future).call_soon_threadsafe(set_exception, future, e)\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 840, in call_soon_threadsafe\n      self._check_closed()\n    File \"C:\\Program Files\\Python312\\Lib\\asyncio\\base_events.py\", line 541, in _check_closed\n      raise RuntimeError('Event loop is closed')\n  RuntimeError: Event loop is closed\n  \n  Enable tracemalloc to get traceback where the object was allocated.\n  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.\n    warnings.warn(pytest.PytestUnhandledThreadExceptionWarning(msg))\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_03_oauth_nonce_replay_attack\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================= 1 failed, 18 passed, 31 warnings in 22.77s ==================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 8.277811527252197,
      "output": "  console.warn\n    [2025-08-23T10:55:40.146Z] WARN: Received 401, attempting [REDACTED] undefined\n\n    \u001b[0m \u001b[90m 217 |\u001b[39m       \u001b[36mreturn\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 218 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 219 |\u001b[39m     originalWarn\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 220 |\u001b[39m   }\u001b[33m;\u001b[39m\n     \u001b[90m 221 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 222 |\u001b[39m\u001b[0m\n\n      at console.call (jest.setup.js:219:18)\n      at FrontendLogger.warn [as log] (lib/logger.ts:145:19)\n      at FrontendLogger.log [as warn] (lib/logger.ts:211:10)\n      at AuthInterceptor.warn [as authenticatedFetch] (lib/auth-interceptor.ts:186:16)\n      at performFetch (services/apiClientWrapper.ts:145:24)\n      at ApiClientWrapper.retryRequest (services/apiClientWrapper.ts:83:16)\n      at ApiClientWrapper.request (services/apiClientWrapper.ts:188:16)\n\n  console.info\n    [2025-08-23T10:55:40.605Z] INFO: [REDACTED] successfully undefined\n\n      at FrontendLogger.info [as log] (lib/logger.ts:142:19)\n\n  console.info\n    [2025-08-23T10:55:40.621Z] INFO: Retrying request with refreshed token undefined\n\n      at FrontendLogger.info [as log] (lib/logger.ts:142:19)\n\n  console.log\n    Auth config from context: {\n      development_mode: true,\n      google_client_id: 'mock-google-client-id',\n      endpoints: {\n        login: 'http://localhost:8081/auth/login',\n        logout: 'http://localhost:8081/auth/logout',\n        callback: 'http://localhost:8081/auth/callback',\n        token: 'http://localhost:8081/auth/token',\n        user: 'http://localhost:8081/auth/me',\n        dev_login: 'http://localhost:8081/auth/dev/login'\n      },\n      authorized_javascript_origins: [ 'http://localhost:3000' ],\n      authorized_redirect_uris: [ 'http://localhost:3000/auth/callback' ]\n    }\n\n      at Object.log (__tests__/auth/context.auth-operations.test.tsx:118:13)\n\n  console.log\n    Login function type: function\n\n      at Object.log (__tests__/auth/context.auth-operations.test.tsx:119:13)\n\n  console.log\n    Calling login, authConfig at call time: {\n      development_mode: true,\n      google_client_id: 'mock-google-client-id',\n      endpoints: {\n        login: 'http://localhost:8081/auth/login',\n        logout: 'http://localhost:8081/auth/logout',\n        callback: 'http://localhost:8081/auth/callback',\n        token: 'http://localhost:8081/auth/token',\n        user: 'http://localhost:8081/auth/me',\n        dev_login: 'http://localhost:8081/auth/dev/login'\n      },\n      authorized_javascript_origins: [ 'http://localhost:3000' ],\n      authorized_redirect_uris: [ 'http://localhost:3000/auth/callback' ]\n    }\n\n      at log (__tests__/auth/context.auth-operations.test.tsx:108:15)\n\n  console.warn\n    [2025-08-23T10:55:41.749Z] WARN: Received 401, attempting [REDACTED] undefined\n\n    \u001b[0m \u001b[90m 217 |\u001b[39m       \u001b[36mreturn\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 218 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 219 |\u001b[39m     originalWarn\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 220 |\u001b[39m   }\u001b[33m;\u001b[39m\n     \u001b[90m 221 |\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 222 |\u001b[39m\u001b[0m\n\n      at console.call (jest.setup.js:219:18)\n      at FrontendLogger.warn [as log] (lib/logger.ts:145:19)\n      at FrontendLogger.log [as warn] (lib/logger.ts:211:10)\n      at AuthInterceptor.warn [as authenticatedFetch] (lib/auth-interceptor.ts:186:16)\n      at performFetch (services/apiClientWrapper.ts:145:24)\n      at ApiClientWrapper.retryRequest (services/apiClientWrapper.ts:83:16)\n      at ApiClientWrapper.request (services/apiClientWrapper.ts:188:16)\n      at Object.<anonymous> (__tests__/services/apiClient.test.ts:92:9)\n\n  console.info\n    [2025-08-23T10:55:41.763Z] INFO: [REDACTED] successfully undefined\n\n      at FrontendLogger.info [as log] (lib/logger.ts:142:19)\n\n  console.info\n    [2025-08-23T10:55:41.765Z] INFO: Retrying request with refreshed token undefined\n\n      at FrontendLogger.info [as log] (lib/logger.ts:142:19)\n\n  console.log\n    \ud83d\udce6 ChatSidebarHooks module mock created\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:43:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n",
      "errors": "FAIL Integration Tests __tests__/integration/websocket-complete.test.tsx\n  WebSocket Connection Lifecycle Tests\n    Connection Establishment\n      \u00d7 should handle complete connection lifecycle with real timing (24 ms)\n      \u00d7 should track real connection state transitions with history (4 ms)\n      \u00d7 should measure real connection performance (2 ms)\n    Error Handling\n      \u00d7 should handle real connection errors with proper state transitions (2 ms)\n      \u00d7 should handle network disconnections gracefully (3 ms)\n    Reconnection Scenarios\n      \u00d7 should handle real reconnection with timing simulation (4 ms)\n      \u00d7 should test real WebSocket reconnection strategies (3 ms)\n      \u00d7 should handle multiple reconnection attempts (2 ms)\n    Performance Measurement\n      \u00d7 should measure real connection performance with timing (2 ms)\n      \u00d7 should track connection stability metrics (4 ms)\n  WebSocket Message Processing Tests\n    Message Sending\n      \u00d7 should handle real message sending with queue tracking (4 ms)\n      \u00d7 should queue messages when connection is not ready (3 ms)\n      \u00d7 should handle message serialization correctly (2 ms)\n    Message Receiving\n      \u00d7 should handle real message receiving with event simulation (1 ms)\n      \u00d7 should handle multiple incoming messages in sequence (2 ms)\n      \u00d7 should handle message parsing and validation (3 ms)\n    Message Queuing\n      \u00d7 should handle message queuing with real buffer behavior (1 ms)\n      \u00d7 should respect buffer size limits (1 ms)\n      \u00d7 should handle buffer overflow gracefully (2 ms)\n    Message Failure Handling\n      \u00d7 should handle failed messages with real error conditions (2 ms)\n      \u00d7 should track failed message attempts (1 ms)\n    Message Performance\n      \u00d7 should measure real message round-trip latency (1 ms)\n      \u00d7 should handle concurrent message processing (1 ms)\n      \u00d7 should handle message throughput testing (1 ms)\n  WebSocket Large Message Handling Tests\n    Large Message Sending\n      \u00d7 should handle 1MB messages with real WebSocket behavior (2 ms)\n      \u00d7 should handle 512KB messages efficiently (2 ms)\n      \u00d7 should handle multiple large messages sequentially (2 ms)\n    Large Message Receiving\n      \u00d7 should handle large message receiving with real event processing (1 ms)\n      \u00d7 should handle concurrent large message reception (1 ms)\n    Buffer Management\n      \u00d7 should respect real buffer limits with backpressure (3 ms)\n      \u00d7 should handle large message buffering with memory limits (2 ms)\n      \u00d7 should handle buffer overflow with large messages (1 ms)\n    Message Chunking\n      \u00d7 should handle chunked message reconstruction (2 ms)\n      \u00d7 should handle large message chunking correctly (1 ms)\n    Performance and Memory\n      \u00d7 should measure large message processing performance (2 ms)\n      \u00d7 should handle memory pressure with multiple large messages (2 ms)\n      \u00d7 should track memory usage during large message processing (1 ms)\n  WebSocket Performance and Advanced Tests\n    Performance Monitoring\n      \u00d7 should measure real connection performance with timing (2 ms)\n      \u00d7 should track connection stability over time (1 ms)\n      \u00d7 should measure message throughput performance (2 ms)\n    Connection Pooling\n      \u00d7 should handle real concurrent connections with load testing (1 ms)\n      \u00d7 should test real connection pool management (2 ms)\n      \u00d7 should handle pool failover scenarios (2 ms)\n    Broadcasting\n      \u00d7 should test real multi-connection broadcasting (1 ms)\n      \u00d7 should handle selective broadcasting (1 ms)\n    Benchmarking\n      \u00d7 should benchmark real vs mock WebSocket test performance (2 ms)\n      \u00d7 should benchmark connection establishment times (2 ms)\n      \u00d7 should benchmark message processing latency (2 ms)\n  WebSocket Stress Testing\n    Connection Stress\n      \u00d7 should handle rapid connect/disconnect cycles (2 ms)\n      \u00d7 should handle multiple simultaneous connection attempts (1 ms)\n    Memory Management\n      \u00d7 should handle memory cleanup during stress testing (1 ms)\n      \u00d7 should handle repeated message sending without memory leaks (2 ms)\n    Load Testing\n      \u00d7 should handle high message volume (1 ms)\n      \u00d7 should handle concurrent message bursts (1 ms)\n    Error Recovery Stress\n      \u00d7 should handle repeated error/recovery cycles (2 ms)\n      \u00d7 should maintain message queue integrity during stress (1 ms)\n  WebSocket Complete Integration Tests - Modular\n    \u221a should have all test modules properly organized (4 ms)\n    \u221a should maintain test coverage across all modules (1 ms)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should handle complete connection lifecycle with real timing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should handle complete connection lifecycle with real timing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should track real connection state transitions with history\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should track real connection state transitions with history\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should measure real connection performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should measure real connection performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle real connection errors with proper state transitions\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle real connection errors with proper state transitions\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle network disconnections gracefully\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle network disconnections gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle real reconnection with timing simulation\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle real reconnection with timing simulation\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should test real WebSocket reconnection strategies\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should test real WebSocket reconnection strategies\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle multiple reconnection attempts\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle multiple reconnection attempts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should measure real connection performance with timing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should measure real connection performance with timing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should track connection stability metrics\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should track connection stability metrics\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle real message sending with queue tracking\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle real message sending with queue tracking\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should queue messages when connection is not ready\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should queue messages when connection is not ready\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle message serialization correctly\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle message serialization correctly\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle real message receiving with event simulation\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle real message receiving with event simulation\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle multiple incoming messages in sequence\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle multiple incoming messages in sequence\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle message parsing and validation\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle message parsing and validation\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle message queuing with real buffer behavior\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle message queuing with real buffer behavior\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should respect buffer size limits\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should respect buffer size limits\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle buffer overflow gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle buffer overflow gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should handle failed messages with real error conditions\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should handle failed messages with real error conditions\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should track failed message attempts\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should track failed message attempts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should measure real message round-trip latency\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should measure real message round-trip latency\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle concurrent message processing\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle concurrent message processing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle message throughput testing\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle message throughput testing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 1MB messages with real WebSocket behavior\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 1MB messages with real WebSocket behavior\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 512KB messages efficiently\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 512KB messages efficiently\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle multiple large messages sequentially\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle multiple large messages sequentially\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle large message receiving with real event processing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle large message receiving with real event processing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle concurrent large message reception\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle concurrent large message reception\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should respect real buffer limits with backpressure\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should respect real buffer limits with backpressure\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle large message buffering with memory limits\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle large message buffering with memory limits\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle buffer overflow with large messages\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle buffer overflow with large messages\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle chunked message reconstruction\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle chunked message reconstruction\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle large message chunking correctly\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle large message chunking correctly\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should measure large message processing performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should measure large message processing performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should handle memory pressure with multiple large messages\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should handle memory pressure with multiple large messages\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should track memory usage during large message processing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should track memory usage during large message processing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure real connection performance with timing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure real connection performance with timing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should track connection stability over time\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should track connection stability over time\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure message throughput performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure message throughput performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle real concurrent connections with load testing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle real concurrent connections with load testing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should test real connection pool management\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should test real connection pool management\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle pool failover scenarios\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle pool failover scenarios\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should test real multi-connection broadcasting\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should test real multi-connection broadcasting\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should handle selective broadcasting\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should handle selective broadcasting\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark real vs mock WebSocket test performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark real vs mock WebSocket test performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark connection establishment times\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark connection establishment times\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark message processing latency\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark message processing latency\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle rapid connect/disconnect cycles\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle rapid connect/disconnect cycles\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle multiple simultaneous connection attempts\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle multiple simultaneous connection attempts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle memory cleanup during stress testing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle memory cleanup during stress testing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle repeated message sending without memory leaks\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle repeated message sending without memory leaks\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle high message volume\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle high message volume\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle concurrent message bursts\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle concurrent message bursts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should handle repeated error/recovery cycles\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should handle repeated error/recovery cycles\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should maintain message queue integrity during stress\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should maintain message queue integrity during stress\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\nSummary of all failing tests\nFAIL __tests__/integration/websocket-complete.test.tsx\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should handle complete connection lifecycle with real timing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should handle complete connection lifecycle with real timing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should track real connection state transitions with history\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should track real connection state transitions with history\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should measure real connection performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Connection Establishment \u203a should measure real connection performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle real connection errors with proper state transitions\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle real connection errors with proper state transitions\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle network disconnections gracefully\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Error Handling \u203a should handle network disconnections gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle real reconnection with timing simulation\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle real reconnection with timing simulation\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should test real WebSocket reconnection strategies\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should test real WebSocket reconnection strategies\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle multiple reconnection attempts\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Reconnection Scenarios \u203a should handle multiple reconnection attempts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should measure real connection performance with timing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should measure real connection performance with timing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should track connection stability metrics\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 28 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m     stateManager \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetStateManager()\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-lifecycle.test.tsx:29:38)\n\n  \u25cf WebSocket Connection Lifecycle Tests \u203a Performance Measurement \u203a should track connection stability metrics\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 33 |\u001b[39m\n     \u001b[90m 34 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 35 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 36 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 38 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-lifecycle.test.tsx:35:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle real message sending with queue tracking\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle real message sending with queue tracking\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should queue messages when connection is not ready\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should queue messages when connection is not ready\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle message serialization correctly\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Sending \u203a should handle message serialization correctly\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle real message receiving with event simulation\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle real message receiving with event simulation\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle multiple incoming messages in sequence\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle multiple incoming messages in sequence\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle message parsing and validation\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Receiving \u203a should handle message parsing and validation\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle message queuing with real buffer behavior\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle message queuing with real buffer behavior\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should respect buffer size limits\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should respect buffer size limits\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle buffer overflow gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Queuing \u203a should handle buffer overflow gracefully\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should handle failed messages with real error conditions\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should handle failed messages with real error conditions\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should track failed message attempts\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Failure Handling \u203a should track failed message attempts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should measure real message round-trip latency\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should measure real message round-trip latency\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle concurrent message processing\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle concurrent message processing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle message throughput testing\n\n    TypeError: Cannot read properties of undefined (reading 'createWebSocketManager')\n\n    \u001b[0m \u001b[90m 17 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 18 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 19 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39m\u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 20 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 21 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-messaging.test.tsx:19:59)\n\n  \u25cf WebSocket Message Processing Tests \u203a Message Performance \u203a should handle message throughput testing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 23 |\u001b[39m\n     \u001b[90m 24 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 25 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 26 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-messaging.test.tsx:25:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 1MB messages with real WebSocket behavior\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 1MB messages with real WebSocket behavior\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 512KB messages efficiently\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle 512KB messages efficiently\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle multiple large messages sequentially\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Sending \u203a should handle multiple large messages sequentially\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle large message receiving with real event processing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle large message receiving with real event processing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle concurrent large message reception\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Large Message Receiving \u203a should handle concurrent large message reception\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should respect real buffer limits with backpressure\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should respect real buffer limits with backpressure\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle large message buffering with memory limits\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle large message buffering with memory limits\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle buffer overflow with large messages\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Buffer Management \u203a should handle buffer overflow with large messages\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle chunked message reconstruction\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle chunked message reconstruction\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle large message chunking correctly\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Message Chunking \u203a should handle large message chunking correctly\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should measure large message processing performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should measure large message processing performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should handle memory pressure with multiple large messages\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should handle memory pressure with multiple large messages\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should track memory usage during large message processing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 18 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 19 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 21 |\u001b[39m     messageBuffer \u001b[33m=\u001b[39m wsManager\u001b[33m.\u001b[39mgetMessageBuffer()\u001b[33m;\u001b[39m\n     \u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 23 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-large-messages.test.tsx:20:38)\n\n  \u25cf WebSocket Large Message Handling Tests \u203a Performance and Memory \u203a should track memory usage during large message processing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 24 |\u001b[39m\n     \u001b[90m 25 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 27 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 29 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-large-messages.test.tsx:26:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure real connection performance with timing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure real connection performance with timing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should track connection stability over time\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should track connection stability over time\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure message throughput performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Performance Monitoring \u203a should measure message throughput performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle real concurrent connections with load testing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle real concurrent connections with load testing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should test real connection pool management\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should test real connection pool management\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle pool failover scenarios\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Connection Pooling \u203a should handle pool failover scenarios\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should test real multi-connection broadcasting\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should test real multi-connection broadcasting\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should handle selective broadcasting\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Broadcasting \u203a should handle selective broadcasting\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark real vs mock WebSocket test performance\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark real vs mock WebSocket test performance\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark connection establishment times\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark connection establishment times\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark message processing latency\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 22 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 23 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 25 |\u001b[39m     advancedTester \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mAdvancedWebSocketTester\u001b[39m()\u001b[33m;\u001b[39m\n     \u001b[90m 26 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-performance.test.tsx:24:38)\n\n  \u25cf WebSocket Performance and Advanced Tests \u203a Benchmarking \u203a should benchmark message processing latency\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 28 |\u001b[39m\n     \u001b[90m 29 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 30 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 31 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mcloseAllConnections()\u001b[33m;\u001b[39m\n     \u001b[90m 32 |\u001b[39m     advancedTester\u001b[33m.\u001b[39mclearLog()\u001b[33m;\u001b[39m\n     \u001b[90m 33 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-performance.test.tsx:30:15)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle rapid connect/disconnect cycles\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle rapid connect/disconnect cycles\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle multiple simultaneous connection attempts\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Connection Stress \u203a should handle multiple simultaneous connection attempts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle memory cleanup during stress testing\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle memory cleanup during stress testing\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle repeated message sending without memory leaks\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Memory Management \u203a should handle repeated message sending without memory leaks\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle high message volume\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle high message volume\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle concurrent message bursts\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Load Testing \u203a should handle concurrent message bursts\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should handle repeated error/recovery cycles\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should handle repeated error/recovery cycles\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should maintain message queue integrity during stress\n\n    TypeError: _websockettestmanager.WebSocketTestManager.createWebSocketManager is not a function\n\n    \u001b[0m \u001b[90m 15 |\u001b[39m   beforeEach(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 16 |\u001b[39m     \u001b[90m// Use real WebSocket simulation instead of mocks\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 17 |\u001b[39m     wsManager \u001b[33m=\u001b[39m \u001b[33mWebSocketTestManager\u001b[39m\u001b[33m.\u001b[39mcreateWebSocketManager(undefined\u001b[33m,\u001b[39m \u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 18 |\u001b[39m     wsManager\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\n     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 20 |\u001b[39m\u001b[0m\n\n      at Object.createWebSocketManager (__tests__/integration/websocket-stress.test.tsx:17:38)\n\n  \u25cf WebSocket Stress Testing \u203a Error Recovery Stress \u203a should maintain message queue integrity during stress\n\n    TypeError: Cannot read properties of undefined (reading 'cleanup')\n\n    \u001b[0m \u001b[90m 20 |\u001b[39m\n     \u001b[90m 21 |\u001b[39m   afterEach(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 22 |\u001b[39m     wsManager\u001b[33m.\u001b[39mcleanup()\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 23 |\u001b[39m     jest\u001b[33m.\u001b[39mclearAllMocks()\u001b[33m;\u001b[39m\n     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 25 |\u001b[39m\u001b[0m\n\n      at Object.cleanup (__tests__/integration/websocket-stress.test.tsx:22:15)\n\n\nTest Suites: 1 failed, 1 of 164 total\nTests:       56 failed, 2 passed, 58 total\nSnapshots:   0 total\nTime:        6.967 s, estimated 122 s\nRan all test suites.\n"
    },
    "dev_launcher": {
      "success": false,
      "duration": 32.44128131866455,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ncollected 22 items\n\ntests\\e2e\\test_dev_launcher_real_startup.py F\n\n================================== FAILURES ===================================\n_____ TestDevLauncherRealStartup.test_real_dev_launcher_startup_sequence ______\ntests\\e2e\\test_dev_launcher_real_startup.py:285: in test_real_dev_launcher_startup_sequence\n    assert startup_success, \"Dev launcher failed to start services\"\nE   AssertionError: Dev launcher failed to start services\nE   assert False\n---------------------------- Captured stdout setup ----------------------------\nBacked up original config to C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json.backup\nUsing test config with mock databases\nSet DATABASE_URL=postgresql://mock:mock@localhost:5432/mock\nSet REDIS_URL=redis://localhost:6379/0\nSet CLICKHOUSE_URL=clickhouse://default@localhost:8123/netra_dev\nSet DISABLE_DB_INIT=true\nSet TESTING=true\nSet JWT_SECRET_KEY=test-jwt-secret-key-for-dev-launcher-testing-ec6ffb15084dd93e996c00fa84ff9cb3\nSet FERNET_KEY=BxDzmt6cWbw7_1d9v7zjXfLNkTu2jAhfaobU3mu3wN4=\nSet SKIP_DATABASE_INIT=true\n----------------------------- Captured log setup ------------------------------\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.address`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.address` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.automotive`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.automotive` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.bank`.\nDEBUG    faker.factory:factory.py:88 Specified locale `en_US` is not available for provider `faker.providers.bank`. Locale reset to `en_GB` for this provider.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.barcode`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.barcode` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.color`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.color` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.company`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.company` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.credit_card`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.credit_card` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.currency`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.currency` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.date_time`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.date_time` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.doi` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.emoji` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.file` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.geo`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.geo` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.internet`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.internet` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.isbn`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.isbn` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.job`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.job` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.lorem`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.lorem` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.misc`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.misc` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.passport`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.passport` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.person`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.person` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.phone_number`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.phone_number` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.profile` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.python` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.sbn` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    faker.factory:factory.py:78 Looking for locale `en_US` in provider `faker.providers.ssn`.\nDEBUG    faker.factory:factory.py:97 Provider `faker.providers.ssn` has been localized to `en_US`.\nDEBUG    faker.factory:factory.py:108 Provider `faker.providers.user_agent` does not feature localization. Specified locale `en_US` is not utilized for this provider.\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nINFO     dev_launcher.service_discovery_system:service_discovery_system.py:71 ServiceDiscoverySystem initialized with discovery file: .dev_services_discovery.json\nINFO     dev_launcher.service_discovery_system:service_discovery_system.py:352 No existing discovery file found\nINFO     dev_launcher.service_config:service_config.py:363 Configuration loaded from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json\nINFO     dev_launcher.service_config:service_config.py:549 Loaded existing service configuration\n---------------------------- Captured stdout call -----------------------------\n\n=== STARTING REAL DEV LAUNCHER STARTUP TEST ===\n DISCOVER | POSTGRESQL: postgresql://mock:***@localhost:5432/mock\n DISCOVER | CLICKHOUSE: clickhouse://default:***@localhost:8123/netra_dev\n DISCOVER | REDIS: redis://localhost:6379/0\n[DISCOVER] WEBSOCKET | Discovered endpoint: main_ws -> ws://localhost:8000/ws (required)\n[DISCOVER] WEBSOCKET | Discovered endpoint: mcp_ws -> ws://localhost:8000/api/mcp/ws (optional)\n============================================================\n[LAUNCH] Netra AI Development Environment\n============================================================\n[CONFIG] Configuration:\n[SERVICES] Service Modes:\n  \ufffd Redis       : Local  (localhost:6379)\n  \ufffd ClickHouse  : Local  (localhost:9000)\n  \ufffd PostgreSQL  : Local  (localhost:5433)\n  \ufffd LLM         : Cloud \n\n  \ufffd Dynamic ports: NO\n  \ufffd Backend hot reload: NO\n  \ufffd Frontend hot reload: YES (Next.js native)\n  \ufffd Real-time logging: YES\n  \ufffd Turbopack: NO\n  \ufffd Secret loading: NO\n  \ufffd Verbose output: NO\n\n[ENV] Checking environment...\n[CHECK] Checking environment...\n[OK] Environment check passed\n[DEFAULT] Set BACKEND_PORT=8000\n[DEFAULT] Set FRONTEND_PORT=3000\n[DEFAULT] Set AUTH_PORT=8081\n[DEFAULT] Set WEBSOCKET_PORT=8000\n[DEFAULT] Set CORS_ORIGINS=*\n[TOKEN] Using existing cross-service auth token\n[ENV] Environment check passed\n[SECRETS] Secret loading disabled (--no-secrets flag)\n[STEP 1-2] Checking cache and environment...\n[STEP 3] Loading secrets...\n[STEP 4] Validating database connections...\n DATABASE | Validating 3 database connections...\n CONNECT | main_postgres: Attempt 1/5\n CONNECT | main_clickhouse: Attempt 1/5\n CONNECT | main_redis: Attempt 1/5\n CONNECT | main_redis: Connected successfully\n CONNECT | main_clickhouse: Connected successfully\n CONNECT | main_postgres: Attempt 2/5\n CONNECT | main_postgres: Attempt 3/5\n CONNECT | main_postgres: Attempt 4/5\n CONNECT | main_postgres: Attempt 5/5\n CONNECT | main_postgres: Failed after 5 attempts - Connection test failed\n DATABASE | Database validation failed - check logs for details\n[ERROR] Database validation failed\n[ERROR] Failed to start services\nLauncher exited with code: 1\n------------------------------ Captured log call ------------------------------\nINFO     dev_launcher.health_monitor:health_monitor.py:139 HealthMonitor initialized (check_interval: 30s)\nINFO     dev_launcher.health_monitor:health_monitor.py:141 Windows process verification enabled\nINFO     dev_launcher.process_manager:process_manager.py:58 ProcessManager initialized for win32\nINFO     dev_launcher.process_manager:process_manager.py:60 Enhanced Windows process tree management enabled\nINFO     dev_launcher.database_connector:database_connector.py:130 Discovered 3 database connections\nINFO     dev_launcher.websocket_validator:websocket_validator.py:82 Discovered 2 WebSocket endpoints\nINFO     dev_launcher.launcher:launcher.py:165 Signal handlers registered for graceful shutdown\nDEBUG    dev_launcher.service_discovery:service_discovery.py:95 Cleared all service discovery information\n-------------------------- Captured stdout teardown ---------------------------\nCleaning up launcher instance...\nRestored environment variables\nRemoved test configuration\nRestored original configuration\n=========================== short test summary info ===========================\nFAILED tests/e2e/test_dev_launcher_real_startup.py::TestDevLauncherRealStartup::test_real_dev_launcher_startup_sequence\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n============================= 1 failed in 29.11s ==============================\n",
      "errors": ""
    }
  },
  "overall_success": false,
  "total_duration": 94.34672689437866
}