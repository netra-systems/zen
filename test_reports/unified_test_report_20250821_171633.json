{
  "timestamp": "20250821_171633",
  "level": "integration",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 8.585050344467163,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 144 items / 1 error\n\n=================================== ERRORS ====================================\n_____ ERROR collecting tests/agents/test_example_prompts_parameterized.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\agents\\test_example_prompts_parameterized.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\agents\\test_example_prompts_parameterized.py:34: in <module>\n    from netra_backend.tests.agents.test_example_prompts_runner import TestRunner\nE   ModuleNotFoundError: No module named 'netra_backend.tests.agents.test_example_prompts_runner'\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\agents\\base\\monitoring.py:68: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"system_start_time\": datetime.utcnow(),\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/agents/test_example_prompts_parameterized.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 5 warnings, 1 error in 0.65s =========================\n",
      "errors": ""
    },
    "auth": {
      "success": false,
      "duration": 2.393458127975464,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 0 items / 1 error\n\n=================================== ERRORS ====================================\n__________________ ERROR collecting tests/base/test_base.py ___________________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\base\\test_base.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\base\\__init__.py:6: in <module>\n    from auth_service.tests.test_base import AsyncTestBase, AuthTestBase\nE   ModuleNotFoundError: No module named 'auth_service.tests.test_base'\n=========================== short test summary info ===========================\nERROR tests/base/test_base.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n============================== 1 error in 0.13s ===============================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 11.969907999038696,
      "output": "",
      "errors": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL Integration Tests __tests__/integration/session-management.test.tsx (8.784 s)\n  Session Management Integration\n    Session Persistence\n      \u00d7 should persist session across page reloads (1040 ms)\n      \u00d7 should restore user state from localStorage (14 ms)\n      \u00d7 should handle corrupted session data gracefully (1011 ms)\n    Token Refresh\n      \u00d7 should refresh tokens before expiration (1013 ms)\n      \u00d7 should handle refresh failures (1016 ms)\n      \u00d7 should queue operations during refresh (1064 ms)\n    Multi-Tab Synchronization\n      \u00d7 should sync login across tabs (1014 ms)\n      \u00d7 should sync logout across tabs (1015 ms)\n      \u00d7 should handle conflicting session states (140 ms)\n    Session Timeout\n      \u00d7 should detect session timeout (171 ms)\n      \u221a should provide timeout warnings (93 ms)\n      \u00d7 should handle session extension (94 ms)\n\n  \u25cf Session Management Integration \u203a Session Persistence \u203a should persist session across page reloads\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"jwt_token\"\n\n    Number of calls: 0\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"session-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0munauthenticated\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 317 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m verifySessionRestored() {\n     \u001b[90m 318 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 319 |\u001b[39m       expect(mockLocalStorage\u001b[33m.\u001b[39mgetItem)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'jwt_token'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 320 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 321 |\u001b[39m   }\n     \u001b[90m 322 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:319:40\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Session Persistence \u203a should restore user state from localStorage\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: {\"email\": \"test@example.com\", \"id\": \"test-user-id\", \"name\": \"Test User\", \"sessionId\": \"session-123\"}\n    Received: null\n\n    \u001b[0m \u001b[90m 337 |\u001b[39m\n     \u001b[90m 338 |\u001b[39m   \u001b[36mfunction\u001b[39m expectUserDataRestored() {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 339 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39muser)\u001b[33m.\u001b[39mtoEqual(sessionTestData\u001b[33m.\u001b[39msessionUser)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 340 |\u001b[39m   }\n     \u001b[90m 341 |\u001b[39m\n     \u001b[90m 342 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m seedCorruptedSessionData() {\u001b[0m\n\n      at expectUserDataRestored (__tests__/integration/session-management.test.tsx:339:33)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:125:7)\n\n  \u25cf Session Management Integration \u203a Session Persistence \u203a should handle corrupted session data gracefully\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"session-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0munauthenticated\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 347 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m verifyGracefulDegradation() {\n     \u001b[90m 348 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 349 |\u001b[39m       expect(useAuthStore()\u001b[33m.\u001b[39mlogout)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 350 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 351 |\u001b[39m   }\n     \u001b[90m 352 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:349:37\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Token Refresh \u203a should refresh tokens before expiration\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"jwt_token\", StringContaining \"refreshed\"\n    Received: \"jwt_token\", \"expired.jwt.token.456\"\n\n    Number of calls: 1\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"refresh-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0midle\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 385 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m waitForTokenRefresh() {\n     \u001b[90m 386 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 387 |\u001b[39m       expect(mockLocalStorage\u001b[33m.\u001b[39msetItem)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 388 |\u001b[39m         \u001b[32m'jwt_token'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 389 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'refreshed'\u001b[39m)\n     \u001b[90m 390 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:387:40\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Token Refresh \u203a should handle refresh failures\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"refresh-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0midle\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 407 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m waitForRefreshAttempt() {\n     \u001b[90m 408 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 409 |\u001b[39m       expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 410 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 411 |\u001b[39m   }\n     \u001b[90m 412 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:409:28\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Token Refresh \u203a should queue operations during refresh\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"refreshed.jwt.token.789\"\n    Received: \"expired.jwt.token.456\"\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"operations\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div>\u001b[39m\n              \u001b[0mop1\u001b[0m\n            \u001b[36m</div>\u001b[39m\n            \u001b[36m<div>\u001b[39m\n              \u001b[0mop2\u001b[0m\n            \u001b[36m</div>\u001b[39m\n            \u001b[36m<div>\u001b[39m\n              \u001b[0mop3\u001b[0m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 449 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m waitForRefreshCompletion() {\n     \u001b[90m 450 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 451 |\u001b[39m       expect(mockLocalStorage\u001b[33m.\u001b[39mgetItem(\u001b[32m'jwt_token'\u001b[39m))\u001b[33m.\u001b[39mtoBe(sessionTestData\u001b[33m.\u001b[39mrefreshedToken)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 452 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 453 |\u001b[39m   }\n     \u001b[90m 454 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:451:53\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Multi-Tab Synchronization \u203a should sync login across tabs\n\n    expect(element).toHaveTextContent()\n\n    Expected element to have text content:\n      synced-login\n    Received:\n      ready\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"sync-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mready\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 486 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 487 |\u001b[39m       \u001b[36mconst\u001b[39m syncStatus \u001b[33m=\u001b[39m document\u001b[33m.\u001b[39mquerySelector(\u001b[32m'[data-testid=\"sync-status\"]'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 488 |\u001b[39m       expect(syncStatus)\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[32m'synced-login'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 489 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 490 |\u001b[39m   }\n     \u001b[90m 491 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:488:26\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Multi-Tab Synchronization \u203a should sync logout across tabs\n\n    expect(element).toHaveTextContent()\n\n    Expected element to have text content:\n      synced-logout\n    Received:\n      ready\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"sync-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mready\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 507 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 508 |\u001b[39m       \u001b[36mconst\u001b[39m syncStatus \u001b[33m=\u001b[39m document\u001b[33m.\u001b[39mquerySelector(\u001b[32m'[data-testid=\"sync-status\"]'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m       expect(syncStatus)\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[32m'synced-logout'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 510 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 511 |\u001b[39m   }\n     \u001b[90m 512 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:509:26\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Multi-Tab Synchronization \u203a should handle conflicting session states\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 545 |\u001b[39m   \u001b[36mfunction\u001b[39m expectConsistentFinalState() {\n     \u001b[90m 546 |\u001b[39m     \u001b[90m// Most recent state should win\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39misAuthenticated)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 548 |\u001b[39m   }\n     \u001b[90m 549 |\u001b[39m\n     \u001b[90m 550 |\u001b[39m   \u001b[36mfunction\u001b[39m createTimeoutTestComponent() {\u001b[0m\n\n      at expectConsistentFinalState (__tests__/integration/session-management.test.tsx:547:44)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:202:7)\n\n  \u25cf Session Management Integration \u203a Session Timeout \u203a should detect session timeout\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n    \u001b[0m \u001b[90m 583 |\u001b[39m\n     \u001b[90m 584 |\u001b[39m   \u001b[36mfunction\u001b[39m expectSessionCleanup() {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 585 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39mlogout)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 586 |\u001b[39m   }\n     \u001b[90m 587 |\u001b[39m\n     \u001b[90m 588 |\u001b[39m   \u001b[36mfunction\u001b[39m createTimeoutWarningComponent() {\u001b[0m\n\n      at expectSessionCleanup (__tests__/integration/session-management.test.tsx:585:35)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:215:7)\n\n  \u25cf Session Management Integration \u203a Session Timeout \u203a should handle session extension\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 659 |\u001b[39m\n     \u001b[90m 660 |\u001b[39m   \u001b[36mfunction\u001b[39m expectContinuedSession() {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 661 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39misAuthenticated)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 662 |\u001b[39m   }\n     \u001b[90m 663 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      at expectContinuedSession (__tests__/integration/session-management.test.tsx:661:44)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:237:7)\n\nSummary of all failing tests\nFAIL __tests__/integration/session-management.test.tsx (8.784 s)\n  \u25cf Session Management Integration \u203a Session Persistence \u203a should persist session across page reloads\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"jwt_token\"\n\n    Number of calls: 0\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"session-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0munauthenticated\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 317 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m verifySessionRestored() {\n     \u001b[90m 318 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 319 |\u001b[39m       expect(mockLocalStorage\u001b[33m.\u001b[39mgetItem)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\u001b[32m'jwt_token'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 320 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 321 |\u001b[39m   }\n     \u001b[90m 322 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:319:40\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Session Persistence \u203a should restore user state from localStorage\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: {\"email\": \"test@example.com\", \"id\": \"test-user-id\", \"name\": \"Test User\", \"sessionId\": \"session-123\"}\n    Received: null\n\n    \u001b[0m \u001b[90m 337 |\u001b[39m\n     \u001b[90m 338 |\u001b[39m   \u001b[36mfunction\u001b[39m expectUserDataRestored() {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 339 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39muser)\u001b[33m.\u001b[39mtoEqual(sessionTestData\u001b[33m.\u001b[39msessionUser)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 340 |\u001b[39m   }\n     \u001b[90m 341 |\u001b[39m\n     \u001b[90m 342 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m seedCorruptedSessionData() {\u001b[0m\n\n      at expectUserDataRestored (__tests__/integration/session-management.test.tsx:339:33)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:125:7)\n\n  \u25cf Session Management Integration \u203a Session Persistence \u203a should handle corrupted session data gracefully\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"session-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0munauthenticated\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 347 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m verifyGracefulDegradation() {\n     \u001b[90m 348 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 349 |\u001b[39m       expect(useAuthStore()\u001b[33m.\u001b[39mlogout)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 350 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 351 |\u001b[39m   }\n     \u001b[90m 352 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:349:37\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Token Refresh \u203a should refresh tokens before expiration\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"jwt_token\", StringContaining \"refreshed\"\n    Received: \"jwt_token\", \"expired.jwt.token.456\"\n\n    Number of calls: 1\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"refresh-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0midle\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 385 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m waitForTokenRefresh() {\n     \u001b[90m 386 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 387 |\u001b[39m       expect(mockLocalStorage\u001b[33m.\u001b[39msetItem)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 388 |\u001b[39m         \u001b[32m'jwt_token'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 389 |\u001b[39m         expect\u001b[33m.\u001b[39mstringContaining(\u001b[32m'refreshed'\u001b[39m)\n     \u001b[90m 390 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:387:40\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Token Refresh \u203a should handle refresh failures\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"refresh-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0midle\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 407 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m waitForRefreshAttempt() {\n     \u001b[90m 408 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 409 |\u001b[39m       expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 410 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 411 |\u001b[39m   }\n     \u001b[90m 412 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:409:28\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Token Refresh \u203a should queue operations during refresh\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"refreshed.jwt.token.789\"\n    Received: \"expired.jwt.token.456\"\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"operations\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div>\u001b[39m\n              \u001b[0mop1\u001b[0m\n            \u001b[36m</div>\u001b[39m\n            \u001b[36m<div>\u001b[39m\n              \u001b[0mop2\u001b[0m\n            \u001b[36m</div>\u001b[39m\n            \u001b[36m<div>\u001b[39m\n              \u001b[0mop3\u001b[0m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 449 |\u001b[39m   \u001b[36masync\u001b[39m \u001b[36mfunction\u001b[39m waitForRefreshCompletion() {\n     \u001b[90m 450 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 451 |\u001b[39m       expect(mockLocalStorage\u001b[33m.\u001b[39mgetItem(\u001b[32m'jwt_token'\u001b[39m))\u001b[33m.\u001b[39mtoBe(sessionTestData\u001b[33m.\u001b[39mrefreshedToken)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 452 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 453 |\u001b[39m   }\n     \u001b[90m 454 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:451:53\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Multi-Tab Synchronization \u203a should sync login across tabs\n\n    expect(element).toHaveTextContent()\n\n    Expected element to have text content:\n      synced-login\n    Received:\n      ready\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"sync-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mready\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 486 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 487 |\u001b[39m       \u001b[36mconst\u001b[39m syncStatus \u001b[33m=\u001b[39m document\u001b[33m.\u001b[39mquerySelector(\u001b[32m'[data-testid=\"sync-status\"]'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 488 |\u001b[39m       expect(syncStatus)\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[32m'synced-login'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 489 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 490 |\u001b[39m   }\n     \u001b[90m 491 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:488:26\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Multi-Tab Synchronization \u203a should sync logout across tabs\n\n    expect(element).toHaveTextContent()\n\n    Expected element to have text content:\n      synced-logout\n    Received:\n      ready\n\n    Ignored nodes: comments, script, style\n    \u001b[36m<html>\u001b[39m\n      \u001b[36m<head />\u001b[39m\n      \u001b[36m<body>\u001b[39m\n        \u001b[36m<div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mdata-testid\u001b[39m=\u001b[32m\"sync-status\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mready\u001b[0m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</body>\u001b[39m\n    \u001b[36m</html>\u001b[39m\n\n    \u001b[0m \u001b[90m 507 |\u001b[39m     \u001b[36mawait\u001b[39m waitFor(() \u001b[33m=>\u001b[39m {\n     \u001b[90m 508 |\u001b[39m       \u001b[36mconst\u001b[39m syncStatus \u001b[33m=\u001b[39m document\u001b[33m.\u001b[39mquerySelector(\u001b[32m'[data-testid=\"sync-status\"]'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 509 |\u001b[39m       expect(syncStatus)\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[32m'synced-logout'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 510 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 511 |\u001b[39m   }\n     \u001b[90m 512 |\u001b[39m\u001b[0m\n\n      at __tests__/integration/session-management.test.tsx:509:26\n      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)\n      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)\n      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)\n\n  \u25cf Session Management Integration \u203a Multi-Tab Synchronization \u203a should handle conflicting session states\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 545 |\u001b[39m   \u001b[36mfunction\u001b[39m expectConsistentFinalState() {\n     \u001b[90m 546 |\u001b[39m     \u001b[90m// Most recent state should win\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39misAuthenticated)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 548 |\u001b[39m   }\n     \u001b[90m 549 |\u001b[39m\n     \u001b[90m 550 |\u001b[39m   \u001b[36mfunction\u001b[39m createTimeoutTestComponent() {\u001b[0m\n\n      at expectConsistentFinalState (__tests__/integration/session-management.test.tsx:547:44)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:202:7)\n\n  \u25cf Session Management Integration \u203a Session Timeout \u203a should detect session timeout\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n    \u001b[0m \u001b[90m 583 |\u001b[39m\n     \u001b[90m 584 |\u001b[39m   \u001b[36mfunction\u001b[39m expectSessionCleanup() {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 585 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39mlogout)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 586 |\u001b[39m   }\n     \u001b[90m 587 |\u001b[39m\n     \u001b[90m 588 |\u001b[39m   \u001b[36mfunction\u001b[39m createTimeoutWarningComponent() {\u001b[0m\n\n      at expectSessionCleanup (__tests__/integration/session-management.test.tsx:585:35)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:215:7)\n\n  \u25cf Session Management Integration \u203a Session Timeout \u203a should handle session extension\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 659 |\u001b[39m\n     \u001b[90m 660 |\u001b[39m   \u001b[36mfunction\u001b[39m expectContinuedSession() {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 661 |\u001b[39m     expect(useAuthStore()\u001b[33m.\u001b[39misAuthenticated)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 662 |\u001b[39m   }\n     \u001b[90m 663 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      at expectContinuedSession (__tests__/integration/session-management.test.tsx:661:44)\n      at Object.<anonymous> (__tests__/integration/session-management.test.tsx:237:7)\n\n\nTest Suites: 1 failed, 1 of 163 total\nTests:       11 failed, 1 passed, 12 total\nSnapshots:   0 total\nTime:        10.568 s, estimated 26 s\nRan all test suites.\n"
    }
  },
  "overall_success": false,
  "total_duration": 22.948416471481323
}