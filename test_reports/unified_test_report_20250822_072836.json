{
  "timestamp": "20250822_072836",
  "level": "unit",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 7.842060804367065,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 250 items / 1 error\n\n=================================== ERRORS ====================================\n____ ERROR collecting tests/agents/test_llm_agent_advanced_integration.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\agents\\test_llm_agent_advanced_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\agents\\test_llm_agent_advanced_integration.py:34: in <module>\n    from test_helpers import (\nE   ModuleNotFoundError: No module named 'test_helpers'\n============================== warnings summary ===============================\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\napp\\agents\\base\\monitoring.py:68\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\agents\\base\\monitoring.py:68: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    \"system_start_time\": datetime.utcnow(),\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/agents/test_llm_agent_advanced_integration.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 5 warnings, 1 error in 0.65s =========================\n",
      "errors": "--- Logging error in Loguru Handler #2 ---\nRecord was: {'elapsed': datetime.timedelta(seconds=5, microseconds=181478), 'exception': None, 'extra': {}, 'file': (name='__init__.py', path='C:\\\\Users\\\\antho\\\\miniconda3\\\\Lib\\\\logging\\\\__init__.py'), 'function': 'handle', 'level': (name='INFO', no=20, icon='\\u2139\\ufe0f'), 'line': 1028, 'message': 'Multiprocessing resources cleaned up', 'module': '__init__', 'name': 'logging', 'process': (id=17364, name='MainProcess'), 'thread': (id=8156, name='MainThread'), 'time': datetime(2025, 8, 22, 7, 28, 22, 704517, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=61200), 'Pacific Daylight Time'))}\nTraceback (most recent call last):\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_handler.py\", line 315, in _queued_writer\n    self._sink.write(message)\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_simple_sinks.py\", line 16, in write\n    self._stream.write(message)\nValueError: I/O operation on closed file.\n--- End of logging error ---\n"
    },
    "auth": {
      "success": false,
      "duration": 3.1577038764953613,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 0 items / 1 error\n\n=================================== ERRORS ====================================\n________ ERROR collecting tests/integration/test_auth_oauth_errors.py _________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_auth_oauth_errors.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_auth_oauth_errors.py:38: in <module>\n    from main import app\nE   ModuleNotFoundError: No module named 'main'\n============================== warnings summary ===============================\nauth_core\\database\\models.py:11\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\database\\models.py:11: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n    Base = declarative_base()\n\ntests\\config\\test_env.py:16\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_env.py:16: PytestCollectionWarning: cannot collect test class 'TestEnvironment' because it has a __init__ constructor (from: tests/base/test_base.py)\n    class TestEnvironment:\n\ntests\\config\\test_settings.py:85\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_settings.py:85: PytestCollectionWarning: cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/base/test_base.py)\n    @dataclass\n\ntests\\config\\test_env.py:16\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_env.py:16: PytestCollectionWarning: cannot collect test class 'TestEnvironment' because it has a __init__ constructor (from: tests/config/test_env.py)\n    class TestEnvironment:\n\ntests\\config\\test_settings.py:85\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\config\\test_settings.py:85: PytestCollectionWarning: cannot collect test class 'TestSettings' because it has a __init__ constructor (from: tests/config/test_settings.py)\n    @dataclass\n\ntests\\database\\test_config.py:20\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\database\\test_config.py:20: PytestCollectionWarning: cannot collect test class 'TestDatabaseConfig' because it has a __init__ constructor (from: tests/database/test_config.py)\n    class TestDatabaseConfig:\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/integration/test_auth_oauth_errors.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n======================== 6 warnings, 1 error in 0.91s =========================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 5.911566734313965,
      "output": "  console.log\n    \ud83d\udce6 ChatSidebarHooks module mock created\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:43:11)\n\n  console.log\n    \ud83d\udce6 ChatSidebarHooks module mock created\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:43:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1000,\n      threadIds: [\n        'thread-1',  'thread-2',  'thread-3',  'thread-4',  'thread-5',\n        'thread-6',  'thread-7',  'thread-8',  'thread-9',  'thread-10',\n        'thread-11', 'thread-12', 'thread-13', 'thread-14', 'thread-15',\n        'thread-16', 'thread-17', 'thread-18', 'thread-19', 'thread-20',\n        'thread-21', 'thread-22', 'thread-23', 'thread-24', 'thread-25',\n        'thread-26', 'thread-27', 'thread-28', 'thread-29', 'thread-30',\n        'thread-31', 'thread-32', 'thread-33', 'thread-34', 'thread-35',\n        'thread-36', 'thread-37', 'thread-38', 'thread-39', 'thread-40',\n        'thread-41', 'thread-42', 'thread-43', 'thread-44', 'thread-45',\n        'thread-46', 'thread-47', 'thread-48', 'thread-49', 'thread-50',\n        'thread-51', 'thread-52', 'thread-53', 'thread-54', 'thread-55',\n        'thread-56', 'thread-57', 'thread-58', 'thread-59', 'thread-60',\n        'thread-61', 'thread-62', 'thread-63', 'thread-64', 'thread-65',\n        'thread-66', 'thread-67', 'thread-68', 'thread-69', 'thread-70',\n        'thread-71', 'thread-72', 'thread-73', 'thread-74', 'thread-75',\n        'thread-76', 'thread-77', 'thread-78', 'thread-79', 'thread-80',\n        'thread-81', 'thread-82', 'thread-83', 'thread-84', 'thread-85',\n        'thread-86', 'thread-87', 'thread-88', 'thread-89', 'thread-90',\n        'thread-91', 'thread-92', 'thread-93', 'thread-94', 'thread-95',\n        'thread-96', 'thread-97', 'thread-98', 'thread-99', 'thread-100',\n        ... 900 more items\n      ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        totalPages: 20\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1000,\n      returning: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 900 more items\n        ],\n        totalPages: 20\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1000,\n      paginatedThreadsLength: 1000,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-1, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-4, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-5, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-6, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-7, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-8, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-9, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-10, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-11, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-12, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-13, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-14, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-15, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-16, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-17, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-18, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-19, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-20, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-21, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-22, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-23, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-24, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-25, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-26, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-27, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-28, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-29, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-30, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-31, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-32, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-33, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-34, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-35, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-36, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-37, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-38, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-39, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-40, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-41, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-42, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-43, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-44, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-45, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-46, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-47, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-48, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-49, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-50, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-2, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: { threadsProvided: true, threadsCount: 1, threadIds: [ 'thread-1' ] }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-1, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: { threadsProvided: true, threadsCount: 0, threadIds: [] }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: { sortedThreads: [], paginatedThreads: [], totalPages: 0 }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 0,\n      returning: { sortedThreads: [], paginatedThreads: [], totalPages: 0 }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 0,\n      paginatedThreadsLength: 0,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'incomplete-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread incomplete-thread, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'no-activity-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread no-activity-thread, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'long-title-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread long-title-thread, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-zkfgbdz3e', 'thread-tm43aft35', 'thread-g8nxhruy6' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 500,\n      threadIds: [\n        'thread-1',  'thread-2',  'thread-3',  'thread-4',  'thread-5',\n        'thread-6',  'thread-7',  'thread-8',  'thread-9',  'thread-10',\n        'thread-11', 'thread-12', 'thread-13', 'thread-14', 'thread-15',\n        'thread-16', 'thread-17', 'thread-18', 'thread-19', 'thread-20',\n        'thread-21', 'thread-22', 'thread-23', 'thread-24', 'thread-25',\n        'thread-26', 'thread-27', 'thread-28', 'thread-29', 'thread-30',\n        'thread-31', 'thread-32', 'thread-33', 'thread-34', 'thread-35',\n        'thread-36', 'thread-37', 'thread-38', 'thread-39', 'thread-40',\n        'thread-41', 'thread-42', 'thread-43', 'thread-44', 'thread-45',\n        'thread-46', 'thread-47', 'thread-48', 'thread-49', 'thread-50',\n        'thread-51', 'thread-52', 'thread-53', 'thread-54', 'thread-55',\n        'thread-56', 'thread-57', 'thread-58', 'thread-59', 'thread-60',\n        'thread-61', 'thread-62', 'thread-63', 'thread-64', 'thread-65',\n        'thread-66', 'thread-67', 'thread-68', 'thread-69', 'thread-70',\n        'thread-71', 'thread-72', 'thread-73', 'thread-74', 'thread-75',\n        'thread-76', 'thread-77', 'thread-78', 'thread-79', 'thread-80',\n        'thread-81', 'thread-82', 'thread-83', 'thread-84', 'thread-85',\n        'thread-86', 'thread-87', 'thread-88', 'thread-89', 'thread-90',\n        'thread-91', 'thread-92', 'thread-93', 'thread-94', 'thread-95',\n        'thread-96', 'thread-97', 'thread-98', 'thread-99', 'thread-100',\n        ... 400 more items\n      ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        totalPages: 10\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-zkfgbdz3e, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-tm43aft35, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-g8nxhruy6, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 500,\n      returning: {\n        sortedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        paginatedThreads: [\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object], [Object], [Object],\n          [Object], [Object], [Object], [Object],\n          ... 400 more items\n        ],\n        totalPages: 10\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 500,\n      paginatedThreadsLength: 500,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'participants-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-1, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-4, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-5, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-6, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-7, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-8, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-9, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-10, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-11, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-12, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-13, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread participants-thread, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-14, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-15, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-16, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-17, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-18, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-19, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-20, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-21, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-22, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-23, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-24, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-1, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-25, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-26, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-27, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-28, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-29, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'loading-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-30, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-31, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-32, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-33, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-34, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-35, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-36, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-37, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-38, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread loading-thread, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-39, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-40, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-41, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'error-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-42, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: 'Failed to load messages',\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-43, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-44, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-45, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-46, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: 'Failed to load messages',\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-47, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-48, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: 'Failed to load messages'\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-49, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-50, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread error-thread, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 1,\n      threadIds: [ 'unread-thread' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 1,\n      returning: {\n        sortedThreads: [ [Object] ],\n        paginatedThreads: [ [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 1,\n      paginatedThreadsLength: 1,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread unread-thread, activeThreadId: thread-1, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd25 HOOK RESET: useThreadFiltering { threadsType: 'object', isArray: true, threadsLength: 0 }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:337:17)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 0,\n      paginatedThreadsLength: 0,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-2, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd25 HOOK RESET: useThreadFiltering { threadsType: 'object', isArray: true, threadsLength: 0 }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:337:17)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 0,\n      paginatedThreadsLength: 0,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-2, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd25 HOOK RESET: useThreadFiltering { threadsType: 'object', isArray: true, threadsLength: 0 }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:337:17)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 0,\n      paginatedThreadsLength: 0,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: true,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK RESET: useThreadFiltering { threadsType: 'object', isArray: true, threadsLength: 0 }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:337:17)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-2, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd25 HOOK RESET: useThreadFiltering { threadsType: 'object', isArray: true, threadsLength: 0 }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:337:17)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 0,\n      paginatedThreadsLength: 0,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd25 HOOK RESET: useThreadFiltering { threadsType: 'object', isArray: true, threadsLength: 0 }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:337:17)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 0,\n      paginatedThreadsLength: 0,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-2', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at Object.log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83e\uddea TestChatSidebar rendering with threads: {\n      threadsLength: 3,\n      paginatedThreadsLength: 3,\n      isLoadingThreads: false,\n      loadError: null\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:770:11)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-1, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-2, activeThreadId: thread-2, isActive: true\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83c\udfaf Rendering thread thread-3, activeThreadId: thread-2, isActive: false\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:649:23)\n          at Array.map (<anonymous>)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd0d About to click thread-2...\n\n      at Object.log (__tests__/components/ChatSidebar/interaction.test.tsx:159:15)\n\n  console.log\n    \ud83d\udd0d Clicked thread-2\n\n      at Object.log (__tests__/components/ChatSidebar/interaction.test.tsx:164:15)\n\n  console.log\n    \ud83d\udd0d setActiveThread call count: 1\n\n      at log (__tests__/components/ChatSidebar/interaction.test.tsx:168:17)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'thread-1', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.error\n    React does not recognize the `whileHover` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `whilehover` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\n\n    \u001b[0m \u001b[90m 207 |\u001b[39m       \u001b[36mreturn\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 208 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 209 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 210 |\u001b[39m   }\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m   \n     \u001b[90m 212 |\u001b[39m   console\u001b[33m.\u001b[39mwarn \u001b[33m=\u001b[39m (\u001b[33m...\u001b[39margs) \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at console.call [as error] (jest.setup.js:209:19)\n      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3009:19)\n      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)\n      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)\n      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)\n      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProviders (__tests__/components/chat/MainChat.core.test.tsx:16:16)\n      at Object.renderWithProviders (__tests__/components/chat/MainChat.core.test.tsx:124:7)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.error\n    React does not recognize the `whileTap` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `whiletap` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\n\n    \u001b[0m \u001b[90m 207 |\u001b[39m       \u001b[36mreturn\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 208 |\u001b[39m     }\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 209 |\u001b[39m     originalError\u001b[33m.\u001b[39mcall(console\u001b[33m,\u001b[39m \u001b[33m...\u001b[39margs)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 210 |\u001b[39m   }\u001b[33m;\u001b[39m\n     \u001b[90m 211 |\u001b[39m   \n     \u001b[90m 212 |\u001b[39m   console\u001b[33m.\u001b[39mwarn \u001b[33m=\u001b[39m (\u001b[33m...\u001b[39margs) \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at console.call [as error] (jest.setup.js:209:19)\n      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3009:19)\n      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)\n      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)\n      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)\n      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at renderWithProviders (__tests__/components/chat/MainChat.core.test.tsx:16:16)\n      at Object.renderWithProviders (__tests__/components/chat/MainChat.core.test.tsx:124:7)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: false,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83c\udfaf setActiveThread called with: new-thread-id\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:140:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', 'new-thread-id', [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83c\udfaf setActiveThread called with: thread-1\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:140:13)\n\n  console.log\n    \ud83c\udfaf setActiveThread called with: thread-2\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:140:13)\n\n  console.log\n    \ud83d\udd27 Configuring authentication mocks with: { isAuthenticated: true, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as beforeEach] (__tests__/components/ChatSidebar/setup.tsx:300:13)\n\n  console.log\n    \ud83d\udd27 configureAuthState called with overrides: { isAuthenticated: true, isLoading: false, userTier: 'Early' }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:476:13)\n\n  console.log\n    \ud83c\udfaf Final authStateConfig: {\n      isAuthenticated: true,\n      isLoading: false,\n      user: { id: 'test-user-1', email: 'test@example.com', role: 'user' },\n      userTier: 'Early',\n      error: null,\n      refreshAuth: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      logout: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      clearError: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      hasPermission: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isAdminOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isDeveloperOrHigher: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureAuthState] (__tests__/components/ChatSidebar/setup.tsx:477:13)\n\n  console.log\n    \ud83d\udd27 configureChatSidebarHooks called with: {\n      threadsProvided: true,\n      threadsCount: 3,\n      threadIds: [ 'thread-1', 'thread-2', 'thread-3' ]\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:378:13)\n\n  console.log\n    \ud83c\udfaf Mock configurations: {\n      threadLoaderConfig: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      },\n      threadFilteringConfig: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:416:13)\n\n  console.log\n    \ud83c\udfaf Applied mock configurations using mockImplementation with debugging\n\n      at ChatSidebarTestSetup.log [as configureChatSidebarHooks] (__tests__/components/ChatSidebar/setup.tsx:453:13)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useChatSidebarState (CONFIGURED) {\n      searchQuery: '',\n      setSearchQuery: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      isCreatingThread: false,\n      setIsCreatingThread: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      showAllThreads: false,\n      setShowAllThreads: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      filterType: 'all',\n      setFilterType: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      },\n      currentPage: 1,\n      setCurrentPage: [Function: mockConstructor] {\n        _isMockFunction: true,\n        getMockImplementation: [Function (anonymous)],\n        mock: [Getter/Setter],\n        mockClear: [Function (anonymous)],\n        mockReset: [Function (anonymous)],\n        mockRestore: [Function (anonymous)],\n        mockReturnValueOnce: [Function (anonymous)],\n        mockResolvedValueOnce: [Function (anonymous)],\n        mockRejectedValueOnce: [Function (anonymous)],\n        mockReturnValue: [Function (anonymous)],\n        mockResolvedValue: [Function (anonymous)],\n        mockRejectedValue: [Function (anonymous)],\n        mockImplementationOnce: [Function (anonymous)],\n        withImplementation: [Function: bound withImplementation],\n        mockImplementation: [Function (anonymous)],\n        mockReturnThis: [Function (anonymous)],\n        mockName: [Function (anonymous)],\n        getMockName: [Function (anonymous)],\n        Symbol(Symbol.dispose): [Function (anonymous)]\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:424:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadLoader (CONFIGURED) {\n      args: [ false, 'all', null, [AsyncFunction (anonymous)] ],\n      returning: {\n        threads: [ [Object], [Object], [Object] ],\n        isLoadingThreads: false,\n        loadError: null,\n        loadThreads: [Function: mockConstructor] {\n          _isMockFunction: true,\n          getMockImplementation: [Function (anonymous)],\n          mock: [Getter/Setter],\n          mockClear: [Function (anonymous)],\n          mockReset: [Function (anonymous)],\n          mockRestore: [Function (anonymous)],\n          mockReturnValueOnce: [Function (anonymous)],\n          mockResolvedValueOnce: [Function (anonymous)],\n          mockRejectedValueOnce: [Function (anonymous)],\n          mockReturnValue: [Function (anonymous)],\n          mockResolvedValue: [Function (anonymous)],\n          mockRejectedValue: [Function (anonymous)],\n          mockImplementationOnce: [Function (anonymous)],\n          withImplementation: [Function: bound withImplementation],\n          mockImplementation: [Function (anonymous)],\n          mockReturnThis: [Function (anonymous)],\n          mockName: [Function (anonymous)],\n          getMockName: [Function (anonymous)],\n          Symbol(Symbol.dispose): [Function (anonymous)]\n        }\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:429:15)\n\n  console.log\n    \ud83d\udd25 HOOK CALLED: useThreadFiltering (CONFIGURED) {\n      threadsType: 'object',\n      isArray: true,\n      threadsLength: 3,\n      returning: {\n        sortedThreads: [ [Object], [Object], [Object] ],\n        paginatedThreads: [ [Object], [Object], [Object] ],\n        totalPages: 1\n      }\n    }\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:434:15)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n  console.log\n    \ud83d\udeaa AuthGate MOCK RENDERED - bypassing auth for tests\n\n      at log (__tests__/components/ChatSidebar/setup.tsx:14:13)\n\n",
      "errors": "FAIL Unit Tests __tests__/components/chat/interface/websocket-and-error-handling.test.tsx\n  WebSocket & Error Handling\n    11. WebSocket Message Handling\n      \u00d7 should establish WebSocket connection on component mount (27 ms)\n      \u00d7 should handle incoming message events correctly (3 ms)\n      \u00d7 should handle message streaming events (3 ms)\n      \u00d7 should handle agent status updates via WebSocket (2 ms)\n      \u00d7 should handle tool execution events (2 ms)\n      \u00d7 should handle WebSocket reconnection gracefully (1 ms)\n      \u00d7 should queue messages during disconnection and send on reconnect (1 ms)\n    12. Real-time UI Updates\n      \u00d7 should update message list immediately when new message arrives (2 ms)\n      \u00d7 should update typing indicator when someone is typing (1 ms)\n      \u00d7 should update thread list when new thread is created remotely (1 ms)\n    13. Message Persistence\n      \u00d7 should persist messages to localStorage (2 ms)\n      \u00d7 should restore messages from localStorage on component mount (1 ms)\n      \u00d7 should sync message state across browser tabs (1 ms)\n    14. Error States and Recovery\n      \u00d7 should show error message when WebSocket connection fails (1 ms)\n      \u00d7 should retry connection when retry button is clicked (1 ms)\n      \u00d7 should handle message send failures gracefully (1 ms)\n      \u00d7 should show offline indicator when network is unavailable (2 ms)\n      \u00d7 should recover from errors using ErrorBoundary (2 ms)\n      \u00d7 should handle malformed WebSocket messages gracefully (1 ms)\n      \u00d7 should implement exponential backoff for connection retries (2 ms)\n      \u00d7 should show detailed error information in development mode (1 ms)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should establish WebSocket connection on component mount\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 41 |\u001b[39m   describe(\u001b[32m'11. WebSocket Message Handling'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 42 |\u001b[39m     it(\u001b[32m'should establish WebSocket connection on component mount'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m       render(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 44 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 45 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 46 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:43:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle incoming message events correctly\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 55 |\u001b[39m\n     \u001b[90m 56 |\u001b[39m     it(\u001b[32m'should handle incoming message events correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 57 |\u001b[39m       render(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 58 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 59 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 60 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:57:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle message streaming events\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 82 |\u001b[39m\n     \u001b[90m 83 |\u001b[39m     it(\u001b[32m'should handle message streaming events'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 84 |\u001b[39m       render(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 85 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 86 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 87 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:84:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle agent status updates via WebSocket\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 129 |\u001b[39m\n     \u001b[90m 130 |\u001b[39m     it(\u001b[32m'should handle agent status updates via WebSocket'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 131 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 132 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 133 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 134 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:131:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle tool execution events\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 152 |\u001b[39m\n     \u001b[90m 153 |\u001b[39m     it(\u001b[32m'should handle tool execution events'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 154 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 155 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 156 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 157 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:154:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle WebSocket reconnection gracefully\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 174 |\u001b[39m\n     \u001b[90m 175 |\u001b[39m     it(\u001b[32m'should handle WebSocket reconnection gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 176 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 177 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 178 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 179 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:176:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should queue messages during disconnection and send on reconnect\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 197 |\u001b[39m\n     \u001b[90m 198 |\u001b[39m     it(\u001b[32m'should queue messages during disconnection and send on reconnect'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 199 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 200 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 201 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 202 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:199:13)\n\n  \u25cf WebSocket & Error Handling \u203a 12. Real-time UI Updates \u203a should update message list immediately when new message arrives\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 234 |\u001b[39m       mockStore\u001b[33m.\u001b[39mmessages \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\n     \u001b[90m 235 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 236 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 237 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 238 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 239 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:236:13)\n\n  \u25cf WebSocket & Error Handling \u203a 12. Real-time UI Updates \u203a should update typing indicator when someone is typing\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 259 |\u001b[39m\n     \u001b[90m 260 |\u001b[39m     it(\u001b[32m'should update typing indicator when someone is typing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 261 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 262 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 263 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 264 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:261:13)\n\n  \u25cf WebSocket & Error Handling \u203a 12. Real-time UI Updates \u203a should update thread list when new thread is created remotely\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 287 |\u001b[39m       mockStore\u001b[33m.\u001b[39mthreads \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\n     \u001b[90m 288 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 289 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 290 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 291 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 292 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:289:13)\n\n  \u25cf WebSocket & Error Handling \u203a 13. Message Persistence \u203a should persist messages to localStorage\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 325 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 326 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 327 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 328 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 329 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 330 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:327:13)\n\n  \u25cf WebSocket & Error Handling \u203a 13. Message Persistence \u203a should restore messages from localStorage on component mount\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 367 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 368 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 369 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 370 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 371 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 372 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:369:13)\n\n  \u25cf WebSocket & Error Handling \u203a 13. Message Persistence \u203a should sync message state across browser tabs\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 377 |\u001b[39m\n     \u001b[90m 378 |\u001b[39m     it(\u001b[32m'should sync message state across browser tabs'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 379 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 380 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 381 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 382 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:379:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should show error message when WebSocket connection fails\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 405 |\u001b[39m   describe(\u001b[32m'14. Error States and Recovery'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 406 |\u001b[39m     it(\u001b[32m'should show error message when WebSocket connection fails'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 407 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 408 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 409 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 410 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:407:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should retry connection when retry button is clicked\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 420 |\u001b[39m\n     \u001b[90m 421 |\u001b[39m     it(\u001b[32m'should retry connection when retry button is clicked'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 422 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 423 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 424 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 425 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:422:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should handle message send failures gracefully\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 437 |\u001b[39m\n     \u001b[90m 438 |\u001b[39m     it(\u001b[32m'should handle message send failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 439 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 440 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 441 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 442 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:439:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should show offline indicator when network is unavailable\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 462 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 463 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 465 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 466 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 467 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:464:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should recover from errors using ErrorBoundary\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 481 |\u001b[39m       }\u001b[33m;\u001b[39m\n     \u001b[90m 482 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 483 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 484 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mErrorBoundary\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 485 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mThrowError\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 486 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mErrorBoundary\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8622:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10643:15)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:483:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should handle malformed WebSocket messages gracefully\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 492 |\u001b[39m\n     \u001b[90m 493 |\u001b[39m     it(\u001b[32m'should handle malformed WebSocket messages gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 494 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 495 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 496 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 497 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:494:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should implement exponential backoff for connection retries\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 510 |\u001b[39m       jest\u001b[33m.\u001b[39museFakeTimers()\u001b[33m;\u001b[39m\n     \u001b[90m 511 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 512 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 513 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 514 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 515 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:512:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should show detailed error information in development mode\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 540 |\u001b[39m       process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mNODE_ENV\u001b[39m \u001b[33m=\u001b[39m \u001b[32m'development'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 541 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 543 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 544 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 545 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:542:13)\n\nSummary of all failing tests\nFAIL __tests__/components/chat/interface/websocket-and-error-handling.test.tsx\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should establish WebSocket connection on component mount\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 41 |\u001b[39m   describe(\u001b[32m'11. WebSocket Message Handling'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 42 |\u001b[39m     it(\u001b[32m'should establish WebSocket connection on component mount'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 |\u001b[39m       render(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 44 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 45 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 46 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:43:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle incoming message events correctly\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 55 |\u001b[39m\n     \u001b[90m 56 |\u001b[39m     it(\u001b[32m'should handle incoming message events correctly'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 57 |\u001b[39m       render(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 58 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 59 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 60 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:57:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle message streaming events\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 82 |\u001b[39m\n     \u001b[90m 83 |\u001b[39m     it(\u001b[32m'should handle message streaming events'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 84 |\u001b[39m       render(\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 85 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 86 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 87 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:84:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle agent status updates via WebSocket\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 129 |\u001b[39m\n     \u001b[90m 130 |\u001b[39m     it(\u001b[32m'should handle agent status updates via WebSocket'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 131 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 132 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 133 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 134 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:131:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle tool execution events\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 152 |\u001b[39m\n     \u001b[90m 153 |\u001b[39m     it(\u001b[32m'should handle tool execution events'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 154 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 155 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 156 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 157 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:154:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should handle WebSocket reconnection gracefully\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 174 |\u001b[39m\n     \u001b[90m 175 |\u001b[39m     it(\u001b[32m'should handle WebSocket reconnection gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 176 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 177 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 178 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 179 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:176:13)\n\n  \u25cf WebSocket & Error Handling \u203a 11. WebSocket Message Handling \u203a should queue messages during disconnection and send on reconnect\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 197 |\u001b[39m\n     \u001b[90m 198 |\u001b[39m     it(\u001b[32m'should queue messages during disconnection and send on reconnect'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 199 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 200 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 201 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 202 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:199:13)\n\n  \u25cf WebSocket & Error Handling \u203a 12. Real-time UI Updates \u203a should update message list immediately when new message arrives\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 234 |\u001b[39m       mockStore\u001b[33m.\u001b[39mmessages \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\n     \u001b[90m 235 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 236 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 237 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 238 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 239 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:236:13)\n\n  \u25cf WebSocket & Error Handling \u203a 12. Real-time UI Updates \u203a should update typing indicator when someone is typing\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 259 |\u001b[39m\n     \u001b[90m 260 |\u001b[39m     it(\u001b[32m'should update typing indicator when someone is typing'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 261 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 262 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 263 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 264 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:261:13)\n\n  \u25cf WebSocket & Error Handling \u203a 12. Real-time UI Updates \u203a should update thread list when new thread is created remotely\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 287 |\u001b[39m       mockStore\u001b[33m.\u001b[39mthreads \u001b[33m=\u001b[39m []\u001b[33m;\u001b[39m\n     \u001b[90m 288 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 289 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 290 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 291 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 292 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:289:13)\n\n  \u25cf WebSocket & Error Handling \u203a 13. Message Persistence \u203a should persist messages to localStorage\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 325 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 326 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 327 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 328 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 329 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 330 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:327:13)\n\n  \u25cf WebSocket & Error Handling \u203a 13. Message Persistence \u203a should restore messages from localStorage on component mount\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 367 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 368 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 369 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 370 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 371 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 372 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:369:13)\n\n  \u25cf WebSocket & Error Handling \u203a 13. Message Persistence \u203a should sync message state across browser tabs\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 377 |\u001b[39m\n     \u001b[90m 378 |\u001b[39m     it(\u001b[32m'should sync message state across browser tabs'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 379 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 380 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 381 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 382 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:379:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should show error message when WebSocket connection fails\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 405 |\u001b[39m   describe(\u001b[32m'14. Error States and Recovery'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 406 |\u001b[39m     it(\u001b[32m'should show error message when WebSocket connection fails'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 407 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 408 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 409 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 410 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:407:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should retry connection when retry button is clicked\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 420 |\u001b[39m\n     \u001b[90m 421 |\u001b[39m     it(\u001b[32m'should retry connection when retry button is clicked'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 422 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 423 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 424 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 425 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:422:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should handle message send failures gracefully\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 437 |\u001b[39m\n     \u001b[90m 438 |\u001b[39m     it(\u001b[32m'should handle message send failures gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 439 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 440 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 441 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 442 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:439:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should show offline indicator when network is unavailable\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 462 |\u001b[39m       })\u001b[33m;\u001b[39m\n     \u001b[90m 463 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 464 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 465 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 466 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 467 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:464:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should recover from errors using ErrorBoundary\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 481 |\u001b[39m       }\u001b[33m;\u001b[39m\n     \u001b[90m 482 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 483 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 484 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mErrorBoundary\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 485 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mThrowError\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 486 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mErrorBoundary\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8622:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10643:15)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:483:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should handle malformed WebSocket messages gracefully\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 492 |\u001b[39m\n     \u001b[90m 493 |\u001b[39m     it(\u001b[32m'should handle malformed WebSocket messages gracefully'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 494 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 495 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 496 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 497 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:494:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should implement exponential backoff for connection retries\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 510 |\u001b[39m       jest\u001b[33m.\u001b[39museFakeTimers()\u001b[33m;\u001b[39m\n     \u001b[90m 511 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 512 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 513 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 514 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 515 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:512:13)\n\n  \u25cf WebSocket & Error Handling \u203a 14. Error States and Recovery \u203a should show detailed error information in development mode\n\n    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\n\n    \u001b[0m \u001b[90m 540 |\u001b[39m       process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mNODE_ENV\u001b[39m \u001b[33m=\u001b[39m \u001b[32m'development'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 541 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 542 |\u001b[39m       render(\n     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 543 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 544 |\u001b[39m           \u001b[33m<\u001b[39m\u001b[33mMainChat\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\n     \u001b[90m 545 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mTestProviders\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\n      at createFiberFromTypeAndProps (node_modules/react-dom/cjs/react-dom-client.development.js:4259:28)\n      at createFiberFromElement (node_modules/react-dom/cjs/react-dom-client.development.js:4273:14)\n      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7879:31)\n      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33\n      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)\n      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10915:13)\n      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)\n      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)\n      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)\n      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)\n      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)\n      at node_modules/@testing-library/react/dist/act-compat.js:47:25\n      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)\n      at render (node_modules/@testing-library/react/dist/pure.js:292:10)\n      at Object.<anonymous> (__tests__/components/chat/interface/websocket-and-error-handling.test.tsx:542:13)\n\n\nTest Suites: 1 failed, 1 of 121 total\nTests:       21 failed, 21 total\nSnapshots:   0 total\nTime:        4.473 s, estimated 317 s\nRan all test suites.\n"
    },
    "dev_launcher": {
      "success": false,
      "duration": 4.024425268173218,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ncollected 3 items\n\n============================ no tests ran in 0.06s ============================\n",
      "errors": "ERROR: Wrong expression passed to '-k': *discovery*: at column 1: unexpected character \"*\"\n\n"
    }
  },
  "overall_success": false,
  "total_duration": 20.93575668334961
}