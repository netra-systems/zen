{
  "timestamp": "20250823_203046",
  "environment": "local",
  "categories": {
    "database": {
      "success": false,
      "duration": 51.873870611190796,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\n\n----------------------------- live log collection -----------------------------\nAuthClientUnifiedShim is DEPRECATED. Use netra_backend.app.clients.auth_client_core instead\ndetect_environment via shim is DEPRECATED. Use auth_client_core directly\ncollected 9048 items / 140 errors / 8413 deselected / 1 skipped / 635 selected\n\n=================================== ERRORS ====================================\n_ ERROR collecting tests/integration/critical_paths/test_high_performance_websocket_stress.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_high_performance_websocket_stress.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_high_performance_websocket_stress.py:41: in <module>\n    from netra_backend.app.websocket_core.enhanced_rate_limiter import (\nE   ImportError: cannot import name 'BackpressureManager' from 'netra_backend.app.websocket_core.enhanced_rate_limiter' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\enhanced_rate_limiter.py)\n_ ERROR collecting tests/integration/critical_paths/test_job_queue_priority_processing.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_job_queue_priority_processing.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_job_queue_priority_processing.py:43: in <module>\n    from netra_backend.app.websocket_core.unified.job_queue import JobQueueManager\nE   ModuleNotFoundError: No module named 'netra_backend.app.websocket_core.unified.job_queue'; 'netra_backend.app.websocket_core.unified' is not a package\n_ ERROR collecting tests/integration/critical_paths/test_redis_websocket_state_sync.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_redis_websocket_state_sync.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_redis_websocket_state_sync.py:34: in <module>\n    from netra_backend.app.websocket_core.state_synchronization_manager import (\napp\\websocket_core\\state_synchronization_manager.py:3: in <module>\n    from netra_backend.app.websocket_core.manager import sync_state\nE   ImportError: cannot import name 'sync_state' from 'netra_backend.app.websocket_core.manager' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\manager.py)\n_ ERROR collecting tests/integration/critical_paths/test_websocket_jwt_encoding.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_jwt_encoding.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_websocket_jwt_encoding.py:29: in <module>\n    from netra_backend.app.websocket_core.unified_websocket_manager import UnifiedWebSocketManager\nE   ModuleNotFoundError: No module named 'netra_backend.app.websocket_core.unified_websocket_manager'\n_ ERROR collecting tests/integration/critical_paths/test_websocket_load_balancing_l4.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_load_balancing_l4.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_websocket_load_balancing_l4.py:41: in <module>\n    from netra_backend.app.websocket_core.enhanced_rate_limiter import DistributedRateLimiter\nE   ImportError: cannot import name 'DistributedRateLimiter' from 'netra_backend.app.websocket_core.enhanced_rate_limiter' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\enhanced_rate_limiter.py)\n_ ERROR collecting tests/integration/critical_paths/test_websocket_unified_critical.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_unified_critical.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\critical_paths\\test_websocket_unified_critical.py:45: in <module>\n    from netra_backend.app.dependencies import get_async_db\nE   ImportError: cannot import name 'get_async_db' from 'netra_backend.app.dependencies' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\dependencies.py)\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_cross_database_transaction_consistency.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_cross_database_transaction_consistency.py:40: in <module>\n    from netra_backend.app.clickhouse.clickhouse_manager import ClickHouseManager\nE   ModuleNotFoundError: No module named 'netra_backend.app.clickhouse.clickhouse_manager'\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_database_migration_failure_recovery.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_database_migration_failure_recovery.py:27: in <module>\n    from netra_backend.app.core.database import DatabaseManager\napp\\core\\database.py:3: in <module>\n    from netra_backend.app.db.postgres_async import AsyncDatabase\nE   ImportError: cannot import name 'AsyncDatabase' from 'netra_backend.app.db.postgres_async' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\db\\postgres_async.py)\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_llm_service_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_llm_service_integration.py:37: in <module>\n    from netra_backend.app.llm.client import LLMClient\nE   ImportError: cannot import name 'LLMClient' from 'netra_backend.app.llm.client' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\llm\\client.py)\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_message_persistence_and_retrieval.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_message_persistence_and_retrieval.py:38: in <module>\n    from test_framework.real_services_test_fixtures import create_real_test_user\n..\\test_framework\\real_services_test_fixtures.py:2: in <module>\n    from test_framework.fixtures.real_services import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.real_services'\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_oauth_database_consistency.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_oauth_database_consistency.py:40: in <module>\n    from netra_backend.app.db.models import User, Organization  # Main backend models\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   ImportError: cannot import name 'Organization' from 'netra_backend.app.db.models' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\db\\models.py)\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_service_discovery_failure_cascades.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_service_discovery_failure_cascades.py:24: in <module>\n    from netra_backend.app.core.health_checkers import HealthChecker, ServiceHealthStatus\nE   ImportError: cannot import name 'ServiceHealthStatus' from 'netra_backend.app.core.health_checkers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\health_checkers.py)\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_thread_crud_operations_data_consistency.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_thread_crud_operations_data_consistency.py:19: in <module>\n    from netra_backend.app.core.database import DatabaseManager\napp\\core\\database.py:3: in <module>\n    from netra_backend.app.db.postgres_async import AsyncDatabase\nE   ImportError: cannot import name 'AsyncDatabase' from 'netra_backend.app.db.postgres_async' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\db\\postgres_async.py)\n_ ERROR collecting tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_websocket_authentication_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier1_catastrophic\\test_websocket_authentication_integration.py:25: in <module>\n    from netra_backend.app.websocket_core.ws_auth import WebSocketAuth\nE   ModuleNotFoundError: No module named 'netra_backend.app.websocket_core.ws_auth'\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_background_job_processing.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_background_job_processing.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_background_job_processing.py:35: in <module>\n    from netra_backend.app.services.generation_job_manager import GenerationJobManager\nE   ImportError: cannot import name 'GenerationJobManager' from 'netra_backend.app.services.generation_job_manager' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\services\\generation_job_manager.py)\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_circuit_breaker_state_management.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_circuit_breaker_state_management.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_circuit_breaker_state_management.py:38: in <module>\n    from netra_backend.app.core.reliability_circuit_breaker import ReliabilityCircuitBreaker\nE   ImportError: cannot import name 'ReliabilityCircuitBreaker' from 'netra_backend.app.core.reliability_circuit_breaker' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\reliability_circuit_breaker.py)\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_clickhouse_data_ingestion_pipeline.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_clickhouse_data_ingestion_pipeline.py:34: in <module>\n    from netra_backend.app.services.data_ingestion_service import DataIngestionService\nE   ImportError: cannot import name 'DataIngestionService' from 'netra_backend.app.services.data_ingestion_service' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\services\\data_ingestion_service.py)\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_error_response_consistency.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_error_response_consistency.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_error_response_consistency.py:32: in <module>\n    from netra_backend.app.core.error_response import ErrorResponseBuilder\nE   ImportError: cannot import name 'ErrorResponseBuilder' from 'netra_backend.app.core.error_response' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\error_response.py)\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_file_upload_and_storage.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_file_upload_and_storage.py:39: in <module>\n    from netra_backend.app.services.file_storage_service import FileStorageService\napp\\services\\file_storage_service.py:2: in <module>\n    from netra_backend.app.services.storage import FileStorageService\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.storage'\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_retry_logic_coordination.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_retry_logic_coordination.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_retry_logic_coordination.py:31: in <module>\n    from netra_backend.app.core.retry_strategy_manager import RetryStrategyManager\nE   ImportError: cannot import name 'RetryStrategyManager' from 'netra_backend.app.core.retry_strategy_manager' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\retry_strategy_manager.py)\n_ ERROR collecting tests/integration/red_team/tier2_major_failures/test_transaction_rollback_coordination.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier2_major_failures\\test_transaction_rollback_coordination.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\red_team\\tier2_major_failures\\test_transaction_rollback_coordination.py:37: in <module>\n    from netra_backend.app.core.transaction_core import TransactionCoordinator\nE   ImportError: cannot import name 'TransactionCoordinator' from 'netra_backend.app.core.transaction_core' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\transaction_core.py)\n__ ERROR collecting tests/integration/staging_config/test_cloud_sql_proxy.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_cloud_sql_proxy.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_cloud_sql_proxy.py:21: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_cors_configuration.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_cors_configuration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_cors_configuration.py:18: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_database_migrations.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_database_migrations.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_database_migrations.py:22: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_environment_precedence.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_environment_precedence.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_environment_precedence.py:21: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n___ ERROR collecting tests/integration/staging_config/test_health_checks.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_health_checks.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_health_checks.py:18: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n__ ERROR collecting tests/integration/staging_config/test_llm_integration.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_llm_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_llm_integration.py:19: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_multi_service_secrets.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_multi_service_secrets.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_multi_service_secrets.py:20: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_observability_pipeline.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_observability_pipeline.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_observability_pipeline.py:20: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n__ ERROR collecting tests/integration/staging_config/test_redis_lifecycle.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_redis_lifecycle.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_redis_lifecycle.py:21: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n__ ERROR collecting tests/integration/staging_config/test_resource_limits.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_resource_limits.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_resource_limits.py:21: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_secret_manager_integration.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_secret_manager_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_secret_manager_integration.py:17: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n__ ERROR collecting tests/integration/staging_config/test_staging_startup.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_staging_startup.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_staging_startup.py:18: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/staging_config/test_websocket_load_balancer.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\staging_config\\test_websocket_load_balancer.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\staging_config\\test_websocket_load_balancer.py:20: in <module>\n    from netra_backend.tests.integration.base import StagingConfigTestBase\ntests\\integration\\base.py:3: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n___ ERROR collecting tests/integration/test_background_jobs_redis_queue.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_background_jobs_redis_queue.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_background_jobs_redis_queue.py:24: in <module>\n    from background_jobs.job_manager import JobManager\nE   ModuleNotFoundError: No module named 'background_jobs.job_manager'\n_ ERROR collecting tests/integration/test_circuit_breaker_service_failures.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_circuit_breaker_service_failures.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_circuit_breaker_service_failures.py:23: in <module>\n    from netra_backend.app.services.external_service_client import ExternalServiceClient\napp\\services\\external_service_client.py:2: in <module>\n    from netra_backend.app.services.http_client import ExternalServiceClient\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.http_client'\n____ ERROR collecting tests/integration/test_critical_auth_integration.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_critical_auth_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_critical_auth_integration.py:27: in <module>\n    from netra_backend.tests.integration.integration.helpers.user_flow_helpers import MockAuthService\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n___ ERROR collecting tests/integration/test_database_migration_rollback.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_database_migration_rollback.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_database_migration_rollback.py:22: in <module>\n    from netra_backend.app.database.migration_manager import MigrationManager\nE   ImportError: cannot import name 'MigrationManager' from 'netra_backend.app.database.migration_manager' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\database\\migration_manager.py)\n_____ ERROR collecting tests/integration/test_distributed_tracing_otel.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_distributed_tracing_otel.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_distributed_tracing_otel.py:37: in <module>\n    from tracing.span_processor import CustomSpanProcessor\n..\\tracing\\__init__.py:2: in <module>\n    from netra_backend.app.monitoring.tracing import *\nE   ModuleNotFoundError: No module named 'netra_backend.app.monitoring.tracing'\n____ ERROR collecting tests/integration/test_enterprise_domain_network.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_enterprise_domain_network.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_enterprise_domain_network.py:18: in <module>\n    from netra_backend.tests.integration.deployment_config_fixtures import (\ntests\\integration\\deployment_config_fixtures.py:2: in <module>\n    from test_framework.fixtures.deployment import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.deployment'\n__ ERROR collecting tests/integration/test_enterprise_environment_config.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_enterprise_environment_config.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_enterprise_environment_config.py:18: in <module>\n    from netra_backend.tests.integration.deployment_config_fixtures import (\ntests\\integration\\deployment_config_fixtures.py:2: in <module>\n    from test_framework.fixtures.deployment import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.deployment'\n____ ERROR collecting tests/integration/test_enterprise_resource_health.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_enterprise_resource_health.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_enterprise_resource_health.py:18: in <module>\n    from netra_backend.tests.integration.deployment_config_fixtures import (\ntests\\integration\\deployment_config_fixtures.py:2: in <module>\n    from test_framework.fixtures.deployment import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.deployment'\n____ ERROR collecting tests/integration/test_error_handling_integration.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_error_handling_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_error_handling_integration.py:24: in <module>\n    from netra_backend.tests.integration.helpers.user_flow_helpers import (\nE   ImportError: cannot import name 'AgentTestHelpers' from 'netra_backend.tests.integration.helpers.user_flow_helpers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\helpers\\user_flow_helpers.py)\n___ ERROR collecting tests/integration/test_first_message_error_recovery.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_first_message_error_recovery.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_first_message_error_recovery.py:26: in <module>\n    from netra_backend.app.websocket_core.unified.telemetry_manager import TelemetryManager\nE   ModuleNotFoundError: No module named 'netra_backend.app.websocket_core.unified.telemetry_manager'; 'netra_backend.app.websocket_core.unified' is not a package\n_____ ERROR collecting tests/integration/test_first_time_user_advanced.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_first_time_user_advanced.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_first_time_user_advanced.py:24: in <module>\n    from netra_backend.tests.integration.first_time_user_fixtures import FirstTimeUserFixtures\nE   ImportError: cannot import name 'FirstTimeUserFixtures' from 'netra_backend.tests.integration.first_time_user_fixtures' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\first_time_user_fixtures.py)\n_______ ERROR collecting tests/integration/test_first_time_user_core.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_first_time_user_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_first_time_user_core.py:24: in <module>\n    from netra_backend.tests.integration.first_time_user_fixtures import FirstTimeUserFixtures\nE   ImportError: cannot import name 'FirstTimeUserFixtures' from 'netra_backend.tests.integration.first_time_user_fixtures' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\first_time_user_fixtures.py)\n____ ERROR collecting tests/integration/test_first_time_user_experience.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_first_time_user_experience.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_first_time_user_experience.py:24: in <module>\n    from netra_backend.tests.integration.first_time_user_fixtures import FirstTimeUserFixtures\nE   ImportError: cannot import name 'FirstTimeUserFixtures' from 'netra_backend.tests.integration.first_time_user_fixtures' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\first_time_user_fixtures.py)\n___ ERROR collecting tests/integration/test_first_time_user_integration.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_first_time_user_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_first_time_user_integration.py:22: in <module>\n    from test_unified_first_time_user import FirstTimeUserTester\nE   ModuleNotFoundError: No module named 'test_unified_first_time_user'\n____ ERROR collecting tests/integration/test_first_time_user_onboarding.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_first_time_user_onboarding.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_first_time_user_onboarding.py:27: in <module>\n    from netra_backend.app.models.message import Message\napp\\models\\message.py:2: in <module>\n    from netra_backend.app.models import Message, MessageType\nE   ImportError: cannot import name 'Message' from 'netra_backend.app.models' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\models\\__init__.py)\n____ ERROR collecting tests/integration/test_llm_response_caching_redis.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_llm_response_caching_redis.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_llm_response_caching_redis.py:25: in <module>\n    from caching.cache_strategies import CacheStrategy\nE   ModuleNotFoundError: No module named 'caching.cache_strategies'\n______ ERROR collecting tests/integration/test_message_flow_auth_core.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_auth_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_auth_core.py:20: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n____ ERROR collecting tests/integration/test_message_flow_auth_helpers.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_auth_helpers.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_auth_helpers.py:20: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n_____ ERROR collecting tests/integration/test_message_flow_errors_core.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_errors_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_errors_core.py:24: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n___ ERROR collecting tests/integration/test_message_flow_errors_helpers.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_errors_helpers.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_errors_helpers.py:24: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n__ ERROR collecting tests/integration/test_message_flow_performance_core.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_performance_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_performance_core.py:19: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n_ ERROR collecting tests/integration/test_message_flow_performance_helpers.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_performance_helpers.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_performance_helpers.py:19: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n____ ERROR collecting tests/integration/test_message_flow_routing_core.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_routing_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_routing_core.py:24: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n___ ERROR collecting tests/integration/test_message_flow_routing_helpers.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_message_flow_routing_helpers.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_message_flow_routing_helpers.py:24: in <module>\n    from netra_backend.tests.integration.test_unified_message_flow import MessageFlowTracker\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n___ ERROR collecting tests/integration/test_metrics_pipeline_prometheus.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_metrics_pipeline_prometheus.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_metrics_pipeline_prometheus.py:24: in <module>\n    from netra_backend.app.monitoring.prometheus_exporter import PrometheusExporter\napp\\monitoring\\prometheus_exporter.py:2: in <module>\n    from netra_backend.app.monitoring.metrics_exporter import PrometheusExporter\nE   ModuleNotFoundError: No module named 'netra_backend.app.monitoring.metrics_exporter'\n______ ERROR collecting tests/integration/test_multi_tenant_isolation.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_multi_tenant_isolation.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_multi_tenant_isolation.py:26: in <module>\n    from netra_backend.app.services.tenant_service import TenantService\napp\\services\\tenant_service.py:2: in <module>\n    from netra_backend.app.services.multi_tenant import TenantService\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.multi_tenant'\n_____ ERROR collecting tests/integration/test_payment_gateway_sandbox.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_payment_gateway_sandbox.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_payment_gateway_sandbox.py:25: in <module>\n    from payments.gateway_manager import PaymentGatewayManager\nE   ModuleNotFoundError: No module named 'payments.gateway_manager'\n____ ERROR collecting tests/integration/test_rate_limiting_backpressure.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_rate_limiting_backpressure.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_rate_limiting_backpressure.py:68: in <module>\n    from netra_backend.app.websocket_core.rate_limiter import AdaptiveRateLimiter, RateLimiter\nE   ImportError: cannot import name 'AdaptiveRateLimiter' from 'netra_backend.app.websocket_core.rate_limiter' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\rate_limiter.py)\n_ ERROR collecting tests/integration/test_service_discovery_health_checks.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_service_discovery_health_checks.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_service_discovery_health_checks.py:23: in <module>\n    from discovery.consul_client import ConsulClient\n..\\discovery\\__init__.py:2: in <module>\n    from netra_backend.app.services.discovery import *\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.discovery'\n____ ERROR collecting tests/integration/test_sla_compliance_monitoring.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_sla_compliance_monitoring.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_sla_compliance_monitoring.py:31: in <module>\n    from netra_backend.tests.integration.helpers.user_flow_helpers import (\nE   ImportError: cannot import name 'MonitoringTestHelpers' from 'netra_backend.tests.integration.helpers.user_flow_helpers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\helpers\\user_flow_helpers.py)\n_____ ERROR collecting tests/integration/test_sso_saml_error_scenarios.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_sso_saml_error_scenarios.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_sso_saml_error_scenarios.py:27: in <module>\n    from netra_backend.tests.integration.sso_saml_components import (\ntests\\integration\\sso_saml_components.py:2: in <module>\n    from test_framework.fixtures.auth import SSOTestComponents\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.auth'\n_______ ERROR collecting tests/integration/test_sso_saml_integration.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_sso_saml_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_sso_saml_integration.py:50: in <module>\n    from netra_backend.tests.integration.sso_saml_components import (\ntests\\integration\\sso_saml_components.py:2: in <module>\n    from test_framework.fixtures.auth import SSOTestComponents\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.auth'\n_____ ERROR collecting tests/integration/test_supervisor_observability.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_supervisor_observability.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_supervisor_observability.py:20: in <module>\n    from netra_backend.app.agents.base.execution_context import (\nE   ImportError: cannot import name 'PipelineStep' from 'netra_backend.app.agents.base.execution_context' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\agents\\base\\execution_context.py)\n__ ERROR collecting tests/integration/test_team_collaboration_permissions.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_team_collaboration_permissions.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_team_collaboration_permissions.py:37: in <module>\n    from netra_backend.tests.integration.integration.critical_paths.test_concurrent_editing_performance import (\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_ ERROR collecting tests/integration/test_transaction_coordination_integration.py _\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_transaction_coordination_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_transaction_coordination_integration.py:37: in <module>\n    from netra_backend.tests.integration.helpers.user_flow_helpers import (\nE   ImportError: cannot import name 'DatabaseTestHelpers' from 'netra_backend.tests.integration.helpers.user_flow_helpers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\helpers\\user_flow_helpers.py)\n_______ ERROR collecting tests/integration/test_unified_message_flow.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_unified_message_flow.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_unified_message_flow.py:2: in <module>\n    from test_framework.fixtures.message_flow import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.message_flow'\n____ ERROR collecting tests/integration/test_unified_message_flow_core.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_unified_message_flow_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_unified_message_flow_core.py:24: in <module>\n    from netra_backend.tests.integration.test_ws_connection_mocks import MockWebSocket\ntests\\integration\\test_ws_connection_mocks.py:2: in <module>\n    from test_framework.mocks.websocket import *\nE   ModuleNotFoundError: No module named 'test_framework.mocks.websocket'\n__ ERROR collecting tests/integration/test_unified_message_flow_fixtures.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_unified_message_flow_fixtures.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_unified_message_flow_fixtures.py:24: in <module>\n    from netra_backend.tests.integration.test_ws_connection_mocks import MockWebSocket\ntests\\integration\\test_ws_connection_mocks.py:2: in <module>\n    from test_framework.mocks.websocket import *\nE   ModuleNotFoundError: No module named 'test_framework.mocks.websocket'\n___ ERROR collecting tests/integration/test_unified_message_flow_helpers.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_unified_message_flow_helpers.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_unified_message_flow_helpers.py:24: in <module>\n    from netra_backend.tests.integration.test_ws_connection_mocks import MockWebSocket\ntests\\integration\\test_ws_connection_mocks.py:2: in <module>\n    from test_framework.mocks.websocket import *\nE   ModuleNotFoundError: No module named 'test_framework.mocks.websocket'\n_________ ERROR collecting tests/integration/test_user_flows_main.py __________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_user_flows_main.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_user_flows_main.py:35: in <module>\n    from netra_backend.tests.integration.integration.helpers.user_flow_helpers import (\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_______ ERROR collecting tests/integration/test_user_onboarding_flow.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_user_onboarding_flow.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_user_onboarding_flow.py:28: in <module>\n    from netra_backend.tests.integration.integration.helpers.user_flow_helpers import (\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n______ ERROR collecting tests/integration/test_user_registration_flow.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_user_registration_flow.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_user_registration_flow.py:32: in <module>\n    from netra_backend.tests.integration.integration.helpers.user_flow_helpers import (\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_______ ERROR collecting tests/integration/test_user_tier_management.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_user_tier_management.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_user_tier_management.py:26: in <module>\n    from netra_backend.tests.integration.integration.helpers.user_flow_helpers import (\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n_____ ERROR collecting tests/integration/test_user_websocket_lifecycle.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_user_websocket_lifecycle.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_user_websocket_lifecycle.py:27: in <module>\n    from netra_backend.tests.integration.integration.helpers.user_flow_helpers import (\ntests\\integration\\integration.py:2: in <module>\n    from test_framework.base import BaseIntegrationTest\nE   ImportError: cannot import name 'BaseIntegrationTest' from 'test_framework.base' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\base.py)\n__ ERROR collecting tests/integration/test_websocket_connection_recovery.py ___\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_websocket_connection_recovery.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_websocket_connection_recovery.py:27: in <module>\n    from netra_backend.app.websocket_core.reconnection_types import ReconnectionConfig\napp\\websocket_core\\reconnection_types.py:2: in <module>\n    from netra_backend.app.websocket_core.types import ReconnectionConfig, ReconnectionState\nE   ImportError: cannot import name 'ReconnectionConfig' from 'netra_backend.app.websocket_core.types' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\types.py)\n_____ ERROR collecting tests/integration/test_websocket_error_recovery.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_websocket_error_recovery.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_websocket_error_recovery.py:29: in <module>\n    from netra_backend.tests.integration.websocket_recovery_fixtures import (\ntests\\integration\\websocket_recovery_fixtures.py:22: in <module>\n    from netra_backend.app.websocket_core.reconnection_manager import (\nE   ModuleNotFoundError: No module named 'netra_backend.app.websocket_core.reconnection_manager'\n___ ERROR collecting tests/integration/test_websocket_state_persistence.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_websocket_state_persistence.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_websocket_state_persistence.py:28: in <module>\n    from netra_backend.app.websocket_core.reconnection_types import ReconnectionConfig\napp\\websocket_core\\reconnection_types.py:2: in <module>\n    from netra_backend.app.websocket_core.types import ReconnectionConfig, ReconnectionState\nE   ImportError: cannot import name 'ReconnectionConfig' from 'netra_backend.app.websocket_core.types' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\types.py)\n_______ ERROR collecting tests/integration/test_ws_connection_mocks.py ________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_ws_connection_mocks.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\integration\\test_ws_connection_mocks.py:2: in <module>\n    from test_framework.mocks.websocket import *\nE   ModuleNotFoundError: No module named 'test_framework.mocks.websocket'\n__________ ERROR collecting tests/llm/test_structured_generation.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\llm\\test_structured_generation.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\llm\\test_structured_generation.py:20: in <module>\n    from netra_backend.tests.llm_mocks import MockLLM, MockStructuredLLM\ntests\\llm_mocks.py:2: in <module>\n    from test_framework.mocks.llm import *\nE   ModuleNotFoundError: No module named 'test_framework.mocks.llm'\n_______ ERROR collecting tests/performance/test_performance_batching.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\performance\\test_performance_batching.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\performance\\test_performance_batching.py:20: in <module>\n    from netra_backend.app.websocket_core.batch_message_handler import (\napp\\websocket_core\\batch_message_handler.py:2: in <module>\n    from netra_backend.app.websocket_core.handlers import BatchMessageHandler\nE   ImportError: cannot import name 'BatchMessageHandler' from 'netra_backend.app.websocket_core.handlers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\handlers.py)\n____ ERROR collecting tests/performance/test_performance_optimizations.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\performance\\test_performance_optimizations.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\performance\\test_performance_optimizations.py:14: in <module>\n    from netra_backend.tests.test_performance_batching import (\ntests\\test_performance_batching.py:2: in <module>\n    from test_framework.performance import BatchingTestHelper\nE   ModuleNotFoundError: No module named 'test_framework.performance'\n_____________ ERROR collecting tests/routes/test_admin_routes.py ______________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_admin_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_admin_routes.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_____________ ERROR collecting tests/routes/test_agent_routes.py ______________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_agent_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_agent_routes.py:22: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_____________ ERROR collecting tests/routes/test_cache_routes.py ______________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_cache_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_cache_routes.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_____________ ERROR collecting tests/routes/test_config_routes.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_config_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_config_routes.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_____________ ERROR collecting tests/routes/test_corpus_routes.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_corpus_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_corpus_routes.py:26: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n___________ ERROR collecting tests/routes/test_llm_cache_routes.py ____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_llm_cache_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_llm_cache_routes.py:15: in <module>\n    from netra_backend.tests.test_utilities import base_client\ntests\\test_utilities.py:2: in <module>\n    from test_framework.utils import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n______________ ERROR collecting tests/routes/test_mcp_routes.py _______________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_mcp_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_mcp_routes.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n____________ ERROR collecting tests/routes/test_quality_routes.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_quality_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_quality_routes.py:22: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n___________ ERROR collecting tests/routes/test_supply_management.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_supply_management.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_supply_management.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n____________ ERROR collecting tests/routes/test_supply_research.py ____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_supply_research.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_supply_research.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_____________ ERROR collecting tests/routes/test_supply_routes.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_supply_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_supply_routes.py:15: in <module>\n    from netra_backend.tests.test_utilities import base_client\ntests\\test_utilities.py:2: in <module>\n    from test_framework.utils import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n_______ ERROR collecting tests/routes/test_synthetic_data_generation.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_synthetic_data_generation.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_synthetic_data_generation.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_______ ERROR collecting tests/routes/test_synthetic_data_management.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_synthetic_data_management.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_synthetic_data_management.py:21: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n_________ ERROR collecting tests/routes/test_synthetic_data_routes.py _________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_synthetic_data_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_synthetic_data_routes.py:15: in <module>\n    from netra_backend.tests.test_utilities import base_client\ntests\\test_utilities.py:2: in <module>\n    from test_framework.utils import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n___________ ERROR collecting tests/routes/test_thread_analytics.py ____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_thread_analytics.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_thread_analytics.py:22: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n______________ ERROR collecting tests/routes/test_thread_crud.py ______________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_thread_crud.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_thread_crud.py:22: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n___________ ERROR collecting tests/routes/test_thread_messaging.py ____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_thread_messaging.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_thread_messaging.py:22: in <module>\n    from netra_backend.tests.test_route_fixtures import (\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n____________ ERROR collecting tests/routes/test_threads_routes.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\routes\\test_threads_routes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\routes\\test_threads_routes.py:16: in <module>\n    from netra_backend.tests.test_utilities import base_client\ntests\\test_utilities.py:2: in <module>\n    from test_framework.utils import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n_____________ ERROR collecting tests/startup/test_config_core.py ______________\ntests\\startup\\test_config_core.py:55: in <module>\n    def mock_services_config() -> ServicesConfiguration:\n                                  ^^^^^^^^^^^^^^^^^^^^^\nE   NameError: name 'ServicesConfiguration' is not defined\n____________ ERROR collecting tests/startup/test_config_engine.py _____________\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\miniconda3\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_config_engine.py\", line 20\nE       ConfigDecisionEngine,\nE   IndentationError: unexpected indent\n__________ ERROR collecting tests/startup/test_config_validation.py ___________\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\miniconda3\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_config_validation.py\", line 21\nE       ConfigStatus,\nE   IndentationError: unexpected indent\n___________ ERROR collecting tests/startup/test_config_validator.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_config_validator.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\startup\\test_config_validator.py:14: in <module>\n    from netra_backend.tests.test_config_core import (\ntests\\test_config_core.py:2: in <module>\n    from test_framework.fixtures.config import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.config'\n___________ ERROR collecting tests/startup/test_error_aggregator.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_error_aggregator.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\startup\\test_error_aggregator.py:30: in <module>\n    from netra_backend.app.startup.error_aggregator import ErrorAggregator\napp\\startup\\__init__.py:8: in <module>\n    from netra_backend.app.error_aggregator import ErrorAggregator, error_aggregator\napp\\error_aggregator.py:2: in <module>\n    from netra_backend.app.core.error_handler import ErrorAggregator\nE   ModuleNotFoundError: No module named 'netra_backend.app.core.error_handler'\n__________ ERROR collecting tests/startup/test_migration_tracker.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_migration_tracker.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\startup\\test_migration_tracker.py:23: in <module>\n    from netra_backend.app.startup.migration_tracker import (\napp\\startup\\__init__.py:8: in <module>\n    from netra_backend.app.error_aggregator import ErrorAggregator, error_aggregator\napp\\error_aggregator.py:2: in <module>\n    from netra_backend.app.core.error_handler import ErrorAggregator\nE   ModuleNotFoundError: No module named 'netra_backend.app.core.error_handler'\n_____ ERROR collecting tests/startup/test_staged_health_monitor_index.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_staged_health_monitor_index.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\startup\\test_staged_health_monitor_index.py:14: in <module>\n    from netra_backend.tests.test_health_monitor_adaptive import (\ntests\\test_health_monitor_adaptive.py:2: in <module>\n    from test_framework.fixtures.health import AdaptiveHealthMonitor\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.health'\n________ ERROR collecting tests/startup/test_startup_status_manager.py ________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\startup\\test_startup_status_manager.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\startup\\test_startup_status_manager.py:37: in <module>\n    from netra_backend.app.startup.status_manager import StartupStatusManager\napp\\startup\\__init__.py:8: in <module>\n    from netra_backend.app.error_aggregator import ErrorAggregator, error_aggregator\napp\\error_aggregator.py:2: in <module>\n    from netra_backend.app.core.error_handler import ErrorAggregator\nE   ModuleNotFoundError: No module named 'netra_backend.app.core.error_handler'\n_______________ ERROR collecting tests/test_compression_auth.py _______________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_compression_auth.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_compression_auth.py:2: in <module>\n    from test_framework.fixtures.compression import CompressionAuthTestHelper\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.compression'\n_________________ ERROR collecting tests/test_config_core.py __________________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_config_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_config_core.py:2: in <module>\n    from test_framework.fixtures.config import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.config'\n___________ ERROR collecting tests/test_health_monitor_adaptive.py ____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_health_monitor_adaptive.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_health_monitor_adaptive.py:2: in <module>\n    from test_framework.fixtures.health import AdaptiveHealthMonitor\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.health'\n_____________ ERROR collecting tests/test_mcp_integration_core.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_mcp_integration_core.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_mcp_integration_core.py:13: in <module>\n    from netra_mcp.netra_mcp_server import NetraMCPServer\n..\\netra_mcp\\__init__.py:2: in <module>\n    from netra_backend.app.services.mcp_integration import *\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.mcp_integration'\n___________ ERROR collecting tests/test_mcp_integration_fixtures.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_mcp_integration_fixtures.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_mcp_integration_fixtures.py:13: in <module>\n    from netra_mcp.netra_mcp_server import NetraMCPServer\n..\\netra_mcp\\__init__.py:2: in <module>\n    from netra_backend.app.services.mcp_integration import *\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.mcp_integration'\n___________ ERROR collecting tests/test_mcp_integration_services.py ___________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_mcp_integration_services.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_mcp_integration_services.py:13: in <module>\n    from netra_mcp.netra_mcp_server import NetraMCPServer\n..\\netra_mcp\\__init__.py:2: in <module>\n    from netra_backend.app.services.mcp_integration import *\nE   ModuleNotFoundError: No module named 'netra_backend.app.services.mcp_integration'\n_____________ ERROR collecting tests/test_performance_batching.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_performance_batching.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_performance_batching.py:2: in <module>\n    from test_framework.performance import BatchingTestHelper\nE   ModuleNotFoundError: No module named 'test_framework.performance'\n________________ ERROR collecting tests/test_route_fixtures.py ________________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_route_fixtures.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_route_fixtures.py:3: in <module>\n    from test_framework.fixtures.routes import *\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.routes'\n__________________ ERROR collecting tests/test_utilities.py ___________________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_utilities.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_utilities.py:2: in <module>\n    from test_framework.utils import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n________ ERROR collecting tests/test_websocket_bidirectional_types.py _________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_websocket_bidirectional_types.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_websocket_bidirectional_types.py:2: in <module>\n    from test_framework.fixtures.websocket_types import BidirectionalTypeTest\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.websocket_types'\n________ ERROR collecting tests/test_websocket_production_realistic.py ________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_websocket_production_realistic.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_websocket_production_realistic.py:24: in <module>\n    from netra_backend.tests.test_compression_auth import (\ntests\\test_compression_auth.py:2: in <module>\n    from test_framework.fixtures.compression import CompressionAuthTestHelper\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.compression'\n____________ ERROR collecting tests/test_websocket_type_safety.py _____________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_websocket_type_safety.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_websocket_type_safety.py:14: in <module>\n    from netra_backend.tests.test_websocket_bidirectional_types import (\ntests\\test_websocket_bidirectional_types.py:2: in <module>\n    from test_framework.fixtures.websocket_types import BidirectionalTypeTest\nE   ModuleNotFoundError: No module named 'test_framework.fixtures.websocket_types'\n_______ ERROR collecting tests/unified_system/test_error_propagation.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\test_error_propagation.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\unified_system\\test_error_propagation.py:32: in <module>\n    from netra_backend.app.websocket_core.error_recovery_handler import (\napp\\websocket_core\\error_recovery_handler.py:2: in <module>\n    from netra_backend.app.websocket_core.recovery import ErrorRecoveryHandler\nE   ImportError: cannot import name 'ErrorRecoveryHandler' from 'netra_backend.app.websocket_core.recovery' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\recovery.py)\n______ ERROR collecting tests/unified_system/test_health_coordination.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\test_health_coordination.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\unified_system\\test_health_coordination.py:41: in <module>\n    from netra_backend.tests.mock_services import (\nE   ImportError: cannot import name 'MockHTTPService' from 'netra_backend.tests.mock_services' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\mock_services.py)\n_______ ERROR collecting tests/unified_system/test_service_recovery.py ________\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\miniconda3\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\test_service_recovery.py\", line 46\nE       CrashReport,\nE   IndentationError: unexpected indent\n________ ERROR collecting tests/unified_system/test_websocket_state.py ________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\test_websocket_state.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\unified_system\\test_websocket_state.py:33: in <module>\n    from netra_backend.app.websocket_core.connection_info import ConnectionInfo, ConnectionState\nE   ImportError: cannot import name 'ConnectionState' from 'netra_backend.app.websocket_core.connection_info' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\connection_info.py)\n_______ ERROR collecting tests/utils/test_datetime_string_json_utils.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\utils\\test_datetime_string_json_utils.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\utils\\test_datetime_string_json_utils.py:20: in <module>\n    from netra_backend.tests.datetime_string_test_helpers import (\ntests\\datetime_string_test_helpers.py:2: in <module>\n    from test_framework.utils.datetime import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n______ ERROR collecting tests/utils/test_file_crypto_validation_utils.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\utils\\test_file_crypto_validation_utils.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\utils\\test_file_crypto_validation_utils.py:18: in <module>\n    from netra_backend.tests.json_file_crypto_test_helpers import (\ntests\\json_file_crypto_test_helpers.py:2: in <module>\n    from test_framework.utils.crypto import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n_____ ERROR collecting tests/utils/test_formatting_math_network_utils.py ______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\utils\\test_formatting_math_network_utils.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\utils\\test_formatting_math_network_utils.py:19: in <module>\n    from netra_backend.tests.network_pagination_test_helpers import (\ntests\\network_pagination_test_helpers.py:2: in <module>\n    from test_framework.utils.pagination import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n____ ERROR collecting tests/utils/test_monitoring_debug_migration_utils.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\utils\\test_monitoring_debug_migration_utils.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\utils\\test_monitoring_debug_migration_utils.py:18: in <module>\n    from netra_backend.tests.debug_migration_test_helpers import (\ntests\\debug_migration_test_helpers.py:2: in <module>\n    from test_framework.utils.migration import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n______ ERROR collecting tests/utils/test_pagination_rate_retry_utils.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\utils\\test_pagination_rate_retry_utils.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\utils\\test_pagination_rate_retry_utils.py:17: in <module>\n    from netra_backend.tests.network_pagination_test_helpers import (\ntests\\network_pagination_test_helpers.py:2: in <module>\n    from test_framework.utils.pagination import *\nE   ModuleNotFoundError: No module named 'test_framework.utils'\n___ ERROR collecting tests/validation/test_websocket_message_validation.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\validation\\test_websocket_message_validation.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\validation\\test_websocket_message_validation.py:20: in <module>\n    from netra_backend.app.websocket_core.handlers import (\nE   ImportError: cannot import name 'MessageBuilder' from 'netra_backend.app.websocket_core.handlers' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\handlers.py)\n___ ERROR collecting tests/websocket/test_state_synchronizer_exceptions.py ____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_state_synchronizer_exceptions.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\websocket\\test_state_synchronizer_exceptions.py:19: in <module>\n    from netra_backend.app.websocket_core.state_synchronizer import ConnectionStateSynchronizer\napp\\websocket_core\\state_synchronizer.py:2: in <module>\n    from netra_backend.app.websocket_core.manager import StateSynchronizer\nE   ImportError: cannot import name 'StateSynchronizer' from 'netra_backend.app.websocket_core.manager' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\manager.py)\n______ ERROR collecting tests/websocket/test_websocket_comprehensive.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_websocket_comprehensive.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\websocket\\test_websocket_comprehensive.py:53: in <module>\n    from netra_backend.tests.conftest import create_test_user, get_test_token\nE   ImportError: cannot import name 'create_test_user' from 'netra_backend.tests.conftest' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\conftest.py)\n_______ ERROR collecting tests/websocket/test_websocket_e2e_complete.py _______\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_websocket_e2e_complete.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\websocket\\test_websocket_e2e_complete.py:36: in <module>\n    from netra_backend.app.routes.websocket import connection_manager\nE   ImportError: cannot import name 'connection_manager' from 'netra_backend.app.routes.websocket' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\routes\\websocket.py)\n_ ERROR collecting tests/websocket/test_websocket_integration_performance.py __\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_websocket_integration_performance.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\websocket\\test_websocket_integration_performance.py:18: in <module>\n    from netra_backend.app.websocket_core.compression import WebSocketCompressor\napp\\websocket_core\\compression.py:2: in <module>\n    from netra_backend.app.websocket_core.utils import compress, decompress\nE   ImportError: cannot import name 'compress' from 'netra_backend.app.websocket_core.utils' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket_core\\utils.py)\n__ ERROR collecting tests/websocket/test_websocket_regression_prevention.py ___\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\antho\\miniconda3\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_websocket_regression_prevention.py\", line 333\nE       with patch.object(manager, 'send_to_user', new_callable=AsyncMock) as mock_send:\nE   IndentationError: unexpected indent\n____ ERROR collecting tests/websocket/test_websocket_reliability_fixes.py _____\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_websocket_reliability_fixes.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\websocket\\test_websocket_reliability_fixes.py:32: in <module>\n    from netra_backend.app.routes.websocket import (\nE   ImportError: cannot import name 'DatabaseConnectionPool' from 'netra_backend.app.routes.websocket' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\routes\\websocket.py)\n________ ERROR collecting tests/websocket/test_websocket_resilience.py ________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\websocket\\test_websocket_resilience.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\websocket\\test_websocket_resilience.py:20: in <module>\n    from netra_backend.app.routes.websocket_unified import (\nE   ImportError: cannot import name 'get_unified_websocket_manager' from 'netra_backend.app.routes.websocket_unified' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\routes\\websocket_unified.py)\n============================== warnings summary ===============================\napp\\schemas\\Config.py:314\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:314: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_generate_schema.py:298: PydanticDeprecatedSince20: `json_encoders` is deprecated. See https://docs.pydantic.dev/2.11/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(\n\ntests\\unified_system\\fixtures.py:111\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unified_system\\fixtures.py:111: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    connection: websockets.WebSocketServerProtocol\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\websockets\\legacy\\__init__.py:6: DeprecationWarning: websockets.legacy is deprecated; see https://websockets.readthedocs.io/en/stable/howto/upgrade.html for upgrade instructions\n    warnings.warn(  # deprecated in 14.0 - 2024-11-09\n\napp\\error_handling\\example_message_errors.py:86\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\error_handling\\example_message_errors.py:86: LegacyWebSocketImportWarning: Import from 'netra_backend.app.websocket.unified.manager.get_unified_manager' is deprecated. Use 'from netra_backend.app.websocket_core import get_websocket_manager' instead.\n    self.ws_manager = get_manager()\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_alert_routing_escalation.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_alert_routing_escalation.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.alerting - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.alerting\n\ntests\\integration\\critical_paths\\test_business_critical_flows_l2.py:1062\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_business_critical_flows_l2.py:1062: PytestUnknownMarkWarning: Unknown pytest.mark.l2 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2\n\napp\\core\\resource_manager.py:146\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\resource_manager.py:146: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    self.process_start_time = datetime.utcnow()\n\n<string>:3\n  <string>:3: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n\ntests\\integration\\critical_paths\\test_custom_metrics_registration.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_custom_metrics_registration.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_custom_metrics_registration.py:42\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_custom_metrics_registration.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.custom_metrics - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.custom_metrics\n\ntests\\integration\\critical_paths\\test_dashboard_query_performance.py:43\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dashboard_query_performance.py:43: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_dashboard_query_performance.py:45\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dashboard_query_performance.py:45: PytestUnknownMarkWarning: Unknown pytest.mark.dashboard - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.dashboard\n\ntests\\integration\\critical_paths\\test_data_migration_integrity_l4.py:1340\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_data_migration_integrity_l4.py:1340: PytestUnknownMarkWarning: Unknown pytest.mark.critical_path - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical_path\n\ntests\\integration\\critical_paths\\test_dev_environment_agent_response_flow_l4.py:894\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dev_environment_agent_response_flow_l4.py:894: PytestUnknownMarkWarning: Unknown pytest.mark.level_4 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.level_4\n\ntests\\integration\\critical_paths\\test_dev_environment_auth_login_complete_l4.py:607\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dev_environment_auth_login_complete_l4.py:607: PytestUnknownMarkWarning: Unknown pytest.mark.level_4 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.level_4\n\ntests\\integration\\critical_paths\\test_dev_environment_chat_initialization_l4.py:756\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dev_environment_chat_initialization_l4.py:756: PytestUnknownMarkWarning: Unknown pytest.mark.level_4 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.level_4\n\ntests\\integration\\critical_paths\\test_dev_environment_concurrent_users_l4.py:829\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dev_environment_concurrent_users_l4.py:829: PytestUnknownMarkWarning: Unknown pytest.mark.level_4 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.level_4\n\ntests\\integration\\critical_paths\\test_dev_environment_websocket_connection_l4.py:440\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dev_environment_websocket_connection_l4.py:440: PytestUnknownMarkWarning: Unknown pytest.mark.level_4 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.level_4\n\ntests\\integration\\critical_paths\\test_dev_launcher_critical_errors.py:501\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_dev_launcher_critical_errors.py:501: PytestUnknownMarkWarning: Unknown pytest.mark.critical_paths - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.critical_paths\n\ntests\\integration\\critical_paths\\test_disaster_recovery_failover_l4.py:1146\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_disaster_recovery_failover_l4.py:1146: PytestUnknownMarkWarning: Unknown pytest.mark.critical_path - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical_path\n\ntests\\integration\\critical_paths\\test_disaster_recovery_failover_l4.py:1147\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_disaster_recovery_failover_l4.py:1147: PytestUnknownMarkWarning: Unknown pytest.mark.disaster_recovery - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.disaster_recovery\n\ntests\\integration\\critical_paths\\test_distributed_tracing_propagation.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_distributed_tracing_propagation.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_distributed_tracing_propagation.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_distributed_tracing_propagation.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.tracing - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.tracing\n\ntests\\integration\\critical_paths\\test_enterprise_resource_isolation_l4.py:1398\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_enterprise_resource_isolation_l4.py:1398: PytestUnknownMarkWarning: Unknown pytest.mark.enterprise - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.enterprise\n\ntests\\integration\\critical_paths\\test_enterprise_resource_isolation_l4.py:1425\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_enterprise_resource_isolation_l4.py:1425: PytestUnknownMarkWarning: Unknown pytest.mark.enterprise - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.enterprise\n\ntests\\integration\\critical_paths\\test_enterprise_resource_isolation_l4.py:1448\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_enterprise_resource_isolation_l4.py:1448: PytestUnknownMarkWarning: Unknown pytest.mark.enterprise - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.enterprise\n\ntests\\integration\\critical_paths\\test_health_check_cascade_initialization.py:49\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_health_check_cascade_initialization.py:49: PytestUnknownMarkWarning: Unknown pytest.mark.health_monitoring - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.health_monitoring,\n\ntests\\integration\\critical_paths\\test_health_check_cascade_initialization.py:50\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_health_check_cascade_initialization.py:50: PytestUnknownMarkWarning: Unknown pytest.mark.initialization - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.initialization\n\ntests\\integration\\critical_paths\\test_jwt_token_propagation_l4.py:981\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_jwt_token_propagation_l4.py:981: PytestUnknownMarkWarning: Unknown pytest.mark.critical_path - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical_path\n\ntests\\integration\\critical_paths\\test_llm_agent_orchestration_l4.py:753\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_llm_agent_orchestration_l4.py:753: PytestUnknownMarkWarning: Unknown pytest.mark.llm_integration - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.llm_integration\n\ntests\\integration\\critical_paths\\test_llm_agent_orchestration_l4.py:778\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_llm_agent_orchestration_l4.py:778: PytestUnknownMarkWarning: Unknown pytest.mark.cost_validation - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.cost_validation\n\ntests\\integration\\critical_paths\\test_log_aggregation_pipeline.py:38\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_log_aggregation_pipeline.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_log_aggregation_pipeline.py:39\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_log_aggregation_pipeline.py:39: PytestUnknownMarkWarning: Unknown pytest.mark.logging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.logging\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:631\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:631: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:678\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:678: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:723\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:723: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:788\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:788: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:831\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:831: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:868\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:868: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:917\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:917: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:953\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:953: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:987\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:987: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:1023\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_message_queue_websocket_broadcast.py:1023: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_metrics_cardinality_explosion.py:44\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_metrics_cardinality_explosion.py:44: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_metrics_cardinality_explosion.py:45\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_metrics_cardinality_explosion.py:45: PytestUnknownMarkWarning: Unknown pytest.mark.cardinality - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.cardinality\n\ntests\\integration\\critical_paths\\test_metrics_pipeline_l4.py:46\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_metrics_pipeline_l4.py:46: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_metrics_retention_policy.py:37\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_metrics_retention_policy.py:37: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_metrics_retention_policy.py:38\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_metrics_retention_policy.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.retention - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.retention\n\n..\\test_framework\\unified\\__init__.py:66\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\test_framework\\unified\\__init__.py:66: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    timestamp: datetime = datetime.utcnow()\n\napp\\core\\cache\\__init__.py:26\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\core\\cache\\__init__.py:26: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n    created_at: datetime = datetime.utcnow()\n\napp\\schemas\\tenant.py:70\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:70: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('used')\n\napp\\schemas\\tenant.py:113\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:113: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('log_retention_days', 'metrics_retention_days', 'audit_retention_days')\n\napp\\schemas\\tenant.py:119\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:119: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('max_concurrent_agents', 'max_agent_memory_mb')\n\napp\\schemas\\tenant.py:140\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:140: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('database_schema', 'storage_prefix')\n\napp\\schemas\\tenant.py:180\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:180: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('slug')\n\napp\\schemas\\tenant.py:186\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:186: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('contact_email', 'billing_email')\n\napp\\schemas\\tenant.py:192\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\tenant.py:192: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('subscription_tier', pre=True)\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:933\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:933: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:975\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:975: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1021\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1021: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1073\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1073: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1119\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1119: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1165\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1165: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1223\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1223: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1267\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1267: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1339\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1339: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1391\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_multitab_websocket_sync.py:1391: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:281\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:281: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:296\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:296: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:318\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:318: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:337\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:337: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:360\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:360: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:384\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:384: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:395\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:395: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:414\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:414: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_password_reset_token_flow.py:432\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_password_reset_token_flow.py:432: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_payment_processing_e2e_l4.py:894\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_payment_processing_e2e_l4.py:894: PytestUnknownMarkWarning: Unknown pytest.mark.critical_path - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical_path\n\ntests\\integration\\critical_paths\\test_payment_processing_e2e_l4.py:895\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_payment_processing_e2e_l4.py:895: PytestUnknownMarkWarning: Unknown pytest.mark.payment_processing - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.payment_processing\n\ntests\\integration\\critical_paths\\test_prometheus_metrics_accuracy.py:41\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_prometheus_metrics_accuracy.py:41: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_prometheus_metrics_accuracy.py:42\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_prometheus_metrics_accuracy.py:42: PytestUnknownMarkWarning: Unknown pytest.mark.prometheus - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.prometheus\n\ntests\\integration\\critical_paths\\service_mesh_fixtures.py:30\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\service_mesh_fixtures.py:30: PytestUnknownMarkWarning: Unknown pytest.mark.service_mesh - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.service_mesh,\n\ntests\\integration\\critical_paths\\test_service_mesh_discovery.py:34\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_service_mesh_discovery.py:34: PytestUnknownMarkWarning: Unknown pytest.mark.service_mesh - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.service_mesh,\n\ntests\\integration\\critical_paths\\test_service_mesh_l4.py:50\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_service_mesh_l4.py:50: PytestUnknownMarkWarning: Unknown pytest.mark.service_mesh - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.service_mesh,\n\ntests\\integration\\critical_paths\\test_service_mesh_routing.py:38\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_service_mesh_routing.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.service_mesh - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.service_mesh,\n\n..\\tests\\e2e\\websocket_resilience\\websocket_recovery_fixtures.py:24\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\tests\\e2e\\websocket_resilience\\websocket_recovery_fixtures.py:24: DeprecationWarning: websockets.exceptions.InvalidStatusCode is deprecated\n    from websockets.exceptions import ConnectionClosed, InvalidStatusCode\n\ntests\\integration\\critical_paths\\test_slo_calculation_accuracy.py:38\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_slo_calculation_accuracy.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_slo_calculation_accuracy.py:39\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_slo_calculation_accuracy.py:39: PytestUnknownMarkWarning: Unknown pytest.mark.slo - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.slo\n\ntests\\integration\\critical_paths\\test_supervisor_subagent_communication.py:988\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_supervisor_subagent_communication.py:988: PytestUnknownMarkWarning: Unknown pytest.mark.l2 - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2\n\ntests\\integration\\critical_paths\\test_trace_sampling_accuracy.py:39\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_trace_sampling_accuracy.py:39: PytestUnknownMarkWarning: Unknown pytest.mark.observability - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.observability,\n\ntests\\integration\\critical_paths\\test_trace_sampling_accuracy.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_trace_sampling_accuracy.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.tracing - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    pytest.mark.tracing\n\ntests\\integration\\critical_paths\\test_transaction_atomicity_l4.py:814\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_transaction_atomicity_l4.py:814: PytestUnknownMarkWarning: Unknown pytest.mark.critical_path - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical_path\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:604\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:604: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:633\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:633: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:665\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:665: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:738\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:738: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:780\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:780: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:798\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:798: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:815\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:815: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:875\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:875: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_database_session.py:915\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_database_session.py:915: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:975\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:975: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1011\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1011: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1059\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1059: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1113\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1113: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1159\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1159: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1203\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1203: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1245\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1245: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1307\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1307: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1342\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1342: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1383\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1383: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1429\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_rate_limiting.py:1429: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:766\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:766: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:812\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:812: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:858\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:858: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:908\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:908: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:958\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:958: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:994\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:994: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1046\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1046: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1084\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1084: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1144\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1144: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1189\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_reconnection_state.py:1189: PytestUnknownMarkWarning: Unknown pytest.mark.l2_realism - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.l2_realism\n\ntests\\integration\\critical_paths\\test_websocket_resilience_l4.py:348\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_resilience_l4.py:348: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    async def _send_and_verify_message(self, websocket: websockets.WebSocketServerProtocol,\n\ntests\\integration\\critical_paths\\test_websocket_resilience_l4.py:405\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\critical_paths\\test_websocket_resilience_l4.py:405: DeprecationWarning: websockets.WebSocketServerProtocol is deprecated\n    websocket: websockets.WebSocketServerProtocol) -> Dict[str, Any]:\n\ntests\\integration\\red_team\\tier1_catastrophic\\test_agent_lifecycle_management.py:40\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\red_team\\tier1_catastrophic\\test_agent_lifecycle_management.py:40: PytestCollectionWarning: cannot collect test class 'TestAgentService' because it has a __init__ constructor (from: tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py)\n    class TestAgentService(BaseAgentService):\n\ntests\\integration\\test_auth_edge_cases.py:164\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_auth_edge_cases.py:164: PytestUnknownMarkWarning: Unknown pytest.mark.security - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.security\n\ntests\\integration\\test_cache_database_sync.py:37\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_cache_database_sync.py:37: PytestUnknownMarkWarning: Unknown pytest.mark.cache - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.cache\n\ntests\\integration\\test_cache_edge_cases.py:38\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_cache_edge_cases.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.cache - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.cache\n\ntests\\integration\\test_cache_redis_invalidation.py:39\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_cache_redis_invalidation.py:39: PytestUnknownMarkWarning: Unknown pytest.mark.cache - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.cache\n\ntests\\integration\\test_cache_service_cascade.py:38\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_cache_service_cascade.py:38: PytestUnknownMarkWarning: Unknown pytest.mark.cache - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.cache\n\ntests\\integration\\test_logging_audit_integration_core.py:26\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_logging_audit_integration_core.py:26: PytestCollectionWarning: cannot collect test class 'TestSyntaxFix' because it has a __init__ constructor (from: tests/integration/test_logging_audit_integration_core.py)\n    class TestSyntaxFix:\n\ntests\\integration\\test_logging_audit_integration_helpers.py:26\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\integration\\test_logging_audit_integration_helpers.py:26: PytestCollectionWarning: cannot collect test class 'TestSyntaxFix' because it has a __init__ constructor (from: tests/integration/test_logging_audit_integration_helpers.py)\n    class TestSyntaxFix:\n\ntests\\test_config_helpers.py:202\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_config_helpers.py:202: PytestCollectionWarning: cannot collect test class 'TestConfigValidator' because it has a __init__ constructor (from: tests/test_config_helpers.py)\n    class TestConfigValidator:\n\ntests\\test_database_manager_helpers.py:52\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\test_database_manager_helpers.py:52: PytestCollectionWarning: cannot collect test class 'TestDatabaseManager' because it has a __init__ constructor (from: tests/test_database_manager_helpers.py)\n    class TestDatabaseManager:\n\ntests\\unit\\test_agent_lifecycle.py:28\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\unit\\test_agent_lifecycle.py:28: PytestCollectionWarning: cannot collect test class 'TestAgent' because it has a __init__ constructor (from: tests/unit/test_agent_lifecycle.py)\n    class TestAgent(AgentLifecycleMixin):\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR tests/integration/critical_paths/test_high_performance_websocket_stress.py\nERROR tests/integration/critical_paths/test_job_queue_priority_processing.py\nERROR tests/integration/critical_paths/test_redis_websocket_state_sync.py\nERROR tests/integration/critical_paths/test_websocket_jwt_encoding.py\nERROR tests/integration/critical_paths/test_websocket_load_balancing_l4.py\nERROR tests/integration/critical_paths/test_websocket_unified_critical.py\nERROR tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py\nERROR tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py\nERROR tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py\nERROR tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py\nERROR tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py\nERROR tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py\nERROR tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py\nERROR tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py\nERROR tests/integration/red_team/tier2_major_failures/test_background_job_processing.py\nERROR tests/integration/red_team/tier2_major_failures/test_circuit_breaker_state_management.py\nERROR tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py\nERROR tests/integration/red_team/tier2_major_failures/test_error_response_consistency.py\nERROR tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py\nERROR tests/integration/red_team/tier2_major_failures/test_retry_logic_coordination.py\nERROR tests/integration/red_team/tier2_major_failures/test_transaction_rollback_coordination.py\nERROR tests/integration/staging_config/test_cloud_sql_proxy.py\nERROR tests/integration/staging_config/test_cors_configuration.py\nERROR tests/integration/staging_config/test_database_migrations.py\nERROR tests/integration/staging_config/test_environment_precedence.py\nERROR tests/integration/staging_config/test_health_checks.py\nERROR tests/integration/staging_config/test_llm_integration.py\nERROR tests/integration/staging_config/test_multi_service_secrets.py\nERROR tests/integration/staging_config/test_observability_pipeline.py\nERROR tests/integration/staging_config/test_redis_lifecycle.py\nERROR tests/integration/staging_config/test_resource_limits.py\nERROR tests/integration/staging_config/test_secret_manager_integration.py\nERROR tests/integration/staging_config/test_staging_startup.py\nERROR tests/integration/staging_config/test_websocket_load_balancer.py\nERROR tests/integration/test_background_jobs_redis_queue.py\nERROR tests/integration/test_circuit_breaker_service_failures.py\nERROR tests/integration/test_critical_auth_integration.py\nERROR tests/integration/test_database_migration_rollback.py\nERROR tests/integration/test_distributed_tracing_otel.py\nERROR tests/integration/test_enterprise_domain_network.py\nERROR tests/integration/test_enterprise_environment_config.py\nERROR tests/integration/test_enterprise_resource_health.py\nERROR tests/integration/test_error_handling_integration.py\nERROR tests/integration/test_first_message_error_recovery.py\nERROR tests/integration/test_first_time_user_advanced.py\nERROR tests/integration/test_first_time_user_core.py\nERROR tests/integration/test_first_time_user_experience.py\nERROR tests/integration/test_first_time_user_integration.py\nERROR tests/integration/test_first_time_user_onboarding.py\nERROR tests/integration/test_llm_response_caching_redis.py\nERROR tests/integration/test_message_flow_auth_core.py\nERROR tests/integration/test_message_flow_auth_helpers.py\nERROR tests/integration/test_message_flow_errors_core.py\nERROR tests/integration/test_message_flow_errors_helpers.py\nERROR tests/integration/test_message_flow_performance_core.py\nERROR tests/integration/test_message_flow_performance_helpers.py\nERROR tests/integration/test_message_flow_routing_core.py\nERROR tests/integration/test_message_flow_routing_helpers.py\nERROR tests/integration/test_metrics_pipeline_prometheus.py\nERROR tests/integration/test_multi_tenant_isolation.py\nERROR tests/integration/test_payment_gateway_sandbox.py\nERROR tests/integration/test_rate_limiting_backpressure.py\nERROR tests/integration/test_service_discovery_health_checks.py\nERROR tests/integration/test_sla_compliance_monitoring.py\nERROR tests/integration/test_sso_saml_error_scenarios.py\nERROR tests/integration/test_sso_saml_integration.py\nERROR tests/integration/test_supervisor_observability.py\nERROR tests/integration/test_team_collaboration_permissions.py\nERROR tests/integration/test_transaction_coordination_integration.py\nERROR tests/integration/test_unified_message_flow.py\nERROR tests/integration/test_unified_message_flow_core.py\nERROR tests/integration/test_unified_message_flow_fixtures.py\nERROR tests/integration/test_unified_message_flow_helpers.py\nERROR tests/integration/test_user_flows_main.py\nERROR tests/integration/test_user_onboarding_flow.py\nERROR tests/integration/test_user_registration_flow.py\nERROR tests/integration/test_user_tier_management.py\nERROR tests/integration/test_user_websocket_lifecycle.py\nERROR tests/integration/test_websocket_connection_recovery.py\nERROR tests/integration/test_websocket_error_recovery.py\nERROR tests/integration/test_websocket_state_persistence.py\nERROR tests/integration/test_ws_connection_mocks.py\nERROR tests/llm/test_structured_generation.py\nERROR tests/performance/test_performance_batching.py\nERROR tests/performance/test_performance_optimizations.py\nERROR tests/routes/test_admin_routes.py\nERROR tests/routes/test_agent_routes.py\nERROR tests/routes/test_cache_routes.py\nERROR tests/routes/test_config_routes.py\nERROR tests/routes/test_corpus_routes.py\nERROR tests/routes/test_llm_cache_routes.py\nERROR tests/routes/test_mcp_routes.py\nERROR tests/routes/test_quality_routes.py\nERROR tests/routes/test_supply_management.py\nERROR tests/routes/test_supply_research.py\nERROR tests/routes/test_supply_routes.py\nERROR tests/routes/test_synthetic_data_generation.py\nERROR tests/routes/test_synthetic_data_management.py\nERROR tests/routes/test_synthetic_data_routes.py\nERROR tests/routes/test_thread_analytics.py\nERROR tests/routes/test_thread_crud.py\nERROR tests/routes/test_thread_messaging.py\nERROR tests/routes/test_threads_routes.py\nERROR tests/startup/test_config_core.py - NameError: name 'ServicesConfigurat...\nERROR tests/startup/test_config_engine.py\nERROR tests/startup/test_config_validation.py\nERROR tests/startup/test_config_validator.py\nERROR tests/startup/test_error_aggregator.py\nERROR tests/startup/test_migration_tracker.py\nERROR tests/startup/test_staged_health_monitor_index.py\nERROR tests/startup/test_startup_status_manager.py\nERROR tests/test_compression_auth.py\nERROR tests/test_config_core.py\nERROR tests/test_health_monitor_adaptive.py\nERROR tests/test_mcp_integration_core.py\nERROR tests/test_mcp_integration_fixtures.py\nERROR tests/test_mcp_integration_services.py\nERROR tests/test_performance_batching.py\nERROR tests/test_route_fixtures.py\nERROR tests/test_utilities.py\nERROR tests/test_websocket_bidirectional_types.py\nERROR tests/test_websocket_production_realistic.py\nERROR tests/test_websocket_type_safety.py\nERROR tests/unified_system/test_error_propagation.py\nERROR tests/unified_system/test_health_coordination.py\nERROR tests/unified_system/test_service_recovery.py\nERROR tests/unified_system/test_websocket_state.py\nERROR tests/utils/test_datetime_string_json_utils.py\nERROR tests/utils/test_file_crypto_validation_utils.py\nERROR tests/utils/test_formatting_math_network_utils.py\nERROR tests/utils/test_monitoring_debug_migration_utils.py\nERROR tests/utils/test_pagination_rate_retry_utils.py\nERROR tests/validation/test_websocket_message_validation.py\nERROR tests/websocket/test_state_synchronizer_exceptions.py\nERROR tests/websocket/test_websocket_comprehensive.py\nERROR tests/websocket/test_websocket_e2e_complete.py\nERROR tests/websocket/test_websocket_integration_performance.py\nERROR tests/websocket/test_websocket_regression_prevention.py\nERROR tests/websocket/test_websocket_reliability_fixes.py\nERROR tests/websocket/test_websocket_resilience.py\n!!!!!!!!!!!!!!!!!! Interrupted: 140 errors during collection !!!!!!!!!!!!!!!!!!\n======= 1 skipped, 8413 deselected, 154 warnings, 140 errors in 45.43s ========\n",
      "errors": "--- Logging error in Loguru Handler #2 ---\nRecord was: {'elapsed': datetime.timedelta(seconds=48, microseconds=113243), 'exception': None, 'extra': {'colored_message': '<white>Multiprocessing resources cleaned up</white>'}, 'file': (name='__init__.py', path='C:\\\\Users\\\\antho\\\\miniconda3\\\\Lib\\\\logging\\\\__init__.py'), 'function': 'handle', 'level': (name='INFO', no=20, icon='\\u2139\\ufe0f'), 'line': 1028, 'message': 'Multiprocessing resources cleaned up', 'module': '__init__', 'name': 'logging', 'process': (id=24288, name='MainProcess'), 'thread': (id=32316, name='MainThread'), 'time': datetime(2025, 8, 23, 20, 30, 38, 153369, tzinfo=datetime.timezone(datetime.timedelta(days=-1, seconds=61200), 'Pacific Daylight Time'))}\nTraceback (most recent call last):\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_handler.py\", line 315, in _queued_writer\n    self._sink.write(message)\n  File \"C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\loguru\\_simple_sinks.py\", line 16, in write\n    self._stream.write(message)\nValueError: I/O operation on closed file.\n--- End of logging error ---\n"
    },
    "unit": {
      "success": false,
      "duration": 6.804520845413208,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 0 items\n\n============================== warnings summary ===============================\napp\\schemas\\Config.py:314\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:314: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n============================= 3 warnings in 0.03s =============================\n\n============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 0 items\n\n============================== warnings summary ===============================\n..\\netra_backend\\app\\schemas\\Config.py:314\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:314: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n============================= 3 warnings in 0.01s =============================\n",
      "errors": "2025-08-23 20:30:42.651 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\n2025-08-23 20:30:42.652 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Populated secrets for development</white>\n2025-08-23 20:30:42.651 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\nERROR: file or directory not found: integration\n\n\n2025-08-23 20:30:46.028 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\n2025-08-23 20:30:46.029 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Populated secrets for development</white>\n2025-08-23 20:30:46.028 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\nERROR: file or directory not found: integration\n\n",
      "service_results": {
        "backend": {
          "success": false,
          "duration": 3.4439592361450195,
          "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function\ncollected 0 items\n\n============================== warnings summary ===============================\napp\\schemas\\Config.py:314\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:314: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n============================= 3 warnings in 0.03s =============================\n",
          "errors": "2025-08-23 20:30:42.651 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\n2025-08-23 20:30:42.652 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Populated secrets for development</white>\n2025-08-23 20:30:42.651 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\nERROR: file or directory not found: integration\n\n"
        },
        "auth": {
          "success": false,
          "duration": 3.3605616092681885,
          "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 0 items\n\n============================== warnings summary ===============================\n..\\netra_backend\\app\\schemas\\Config.py:314\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\schemas\\Config.py:314: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('service_secret')\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataSample\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n..\\..\\..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\pydantic\\_internal\\_fields.py:198: UserWarning: Field name \"schema\" in \"DataCatalog\" shadows an attribute in parent \"BaseModel\"\n    warnings.warn(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n============================= 3 warnings in 0.01s =============================\n",
          "errors": "2025-08-23 20:30:46.028 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\n2025-08-23 20:30:46.029 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Populated secrets for development</white>\n2025-08-23 20:30:46.028 | INFO     | netra_backend.app.core.unified_logging:_emit_log:165 | <white>Loading DATABASE_URL: postgresql+asyncpg://***@localhost:5433/netra_dev?</white>\nERROR: file or directory not found: integration\n\n"
        }
      }
    },
    "integration": {
      "success": false,
      "duration": 0,
      "output": "",
      "errors": "Skipped: SkipReason.CATEGORY_FAILED",
      "skipped": true
    }
  },
  "overall_success": false,
  "total_duration": 58.678391456604004,
  "execution_plan": null,
  "category_statistics": {
    "total_categories": 9,
    "by_priority": {
      "CRITICAL": 1,
      "HIGH": 2,
      "MEDIUM": 3,
      "LOW": 3,
      "OPTIONAL": 0
    },
    "by_type": {
      "functional": 3,
      "technical": 2,
      "quality": 1,
      "integration": 1,
      "performance": 1,
      "security": 0,
      "e2e": 1
    },
    "parallel_safe": 7,
    "requires_real_services": 1,
    "requires_real_llm": 0,
    "memory_intensive": 2,
    "cpu_intensive": 1,
    "database_dependent": 1,
    "average_estimated_duration": "0:10:40",
    "categories_with_history": 0,
    "average_success_rate": 0.0
  },
  "progress_tracking": {
    "run_id": "run_1756006188",
    "start_time": "2025-08-23T20:29:48.229040",
    "end_time": "2025-08-23T20:30:46.907945",
    "status": "failed",
    "categories": {
      "integration": {
        "name": "integration",
        "status": "pending",
        "start_time": null,
        "end_time": null,
        "duration": 0.0,
        "total_tests": 0,
        "passed_tests": 0,
        "failed_tests": 0,
        "skipped_tests": 0,
        "error_tests": 0,
        "progress_percentage": 0.0,
        "estimated_remaining": 0.0,
        "output_log": [],
        "error_messages": [],
        "warnings": [],
        "peak_memory_mb": 0.0,
        "cpu_usage_percent": 0.0,
        "retry_count": 0,
        "max_retries": 0,
        "phase": 0,
        "parallel_group": null,
        "worker_id": null,
        "tags": [],
        "success_rate": 0.0,
        "execution_time": 0.0
      }
    },
    "total_categories": 1,
    "completed_categories": 0,
    "current_phase": 0,
    "total_phases": 0,
    "total_tests": 0,
    "passed_tests": 0,
    "failed_tests": 0,
    "skipped_tests": 0,
    "error_tests": 0,
    "overall_progress": 0.0,
    "estimated_total_duration": 0.0,
    "estimated_remaining": 0.0,
    "test_level": "category",
    "service_filter": null,
    "parallel_workers": 4,
    "fail_fast_enabled": false,
    "real_llm_enabled": false,
    "environment": "local",
    "peak_memory_mb": 0.0,
    "average_cpu_percent": 0.0,
    "execution_duration": 58.678905,
    "success_rate": 0.0,
    "completion_percentage": 0.0,
    "resumable": true,
    "checkpoint_data": {}
  }
}