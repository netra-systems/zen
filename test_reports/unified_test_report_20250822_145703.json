{
  "timestamp": "20250822_145703",
  "level": "integration",
  "environment": "local",
  "services": {
    "auth": {
      "success": false,
      "duration": 31.201496601104736,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 193 items\n\ntests\\integration\\test_auth_oauth_errors.py ........                     [  4%]\ntests\\integration\\test_auth_oauth_google.py ........                     [  8%]\ntests\\integration\\test_oauth_comprehensive_failures.py ................. [ 17%]\nF\n\n================================== FAILURES ===================================\n_______ TestOAuthComprehensiveFailures.test_18_session_storage_failure ________\n\nself = <test_oauth_comprehensive_failures.TestOAuthComprehensiveFailures object at 0x0000022C23AECDA0>\nmock_auth_redis = <Mock id='2388611305536'>\n\n    @pytest.mark.asyncio\n    async def test_18_session_storage_failure(self, mock_auth_redis):\n        \"\"\"Test 18: Redis session storage failure\"\"\"\n        with patch(\"redis.Redis.set\") as mock_redis_set:\n            mock_redis_set.side_effect = Exception(\"Redis connection failed\")\n    \n            response = client.post(\n                \"/auth/callback/google\",\n                json={\n                    \"code\": f\"valid_code_{secrets.token_urlsafe(8)}\",\n                    \"state\": secrets.token_urlsafe(32),\n                }\n            )\n    \n>       assert response.status_code == 503\nE       assert 401 == 503\nE        +  where 401 = <Response [401 Unauthorized]>.status_code\n\ntests\\integration\\test_oauth_comprehensive_failures.py:755: AssertionError\n------------------------------ Captured log call ------------------------------\nWARNING  auth_service.auth_core.routes.auth_routes:auth_routes.py:669 Using simple string state (test mode)\nERROR    auth_service.auth_core.routes.auth_routes:auth_routes.py:711 Token exchange failed: 401 - {\n  \"error\": \"invalid_client\",\n  \"error_description\": \"The OAuth client was not found.\"\n}\nERROR    auth_service.auth_core.services.auth_service:auth_service.py:713 Request failed for google_oauth: 401: Failed to exchange authorization code\n============================== warnings summary ===============================\ntests\\integration\\test_oauth_comprehensive_failures.py:1083\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1083: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests\\integration\\test_oauth_comprehensive_failures.py:1117\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\integration\\test_oauth_comprehensive_failures.py:1117: PytestUnknownMarkWarning: Unknown pytest.mark.staging - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.staging\n\ntests/integration/test_auth_oauth_errors.py::TestOAuthErrorHandling::test_oauth_invalid_state_parameter\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\conftest.py:59: DeprecationWarning: There is no current event loop\n    loop = asyncio.get_event_loop()\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_01_successful_oauth_login_basic_flow\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_14_distributed_tracing_context_propagation_failure\n  C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\auth_core\\routes\\auth_routes.py:938: PydanticDeprecatedSince20: The `dict` method is deprecated; use `model_dump` instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    content=response.dict(),\n\ntests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_05_cross_site_request_forgery_token_binding\n  C:\\Users\\antho\\AppData\\Roaming\\Python\\Python312\\site-packages\\starlette\\testclient.py:451: DeprecationWarning: Setting per-request cookies=<...> is being deprecated, because the expected behaviour on cookie persistence is ambiguous. Set cookies directly on the client instance instead.\n    return super().request(\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/integration/test_oauth_comprehensive_failures.py::TestOAuthComprehensiveFailures::test_18_session_storage_failure\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================== 1 failed, 33 passed, 6 warnings in 29.19s ==================\n",
      "errors": ""
    }
  },
  "overall_success": false,
  "total_duration": 31.201496601104736
}