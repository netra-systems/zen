{
  "timestamp": "20250821_174706",
  "level": "smoke",
  "environment": "local",
  "services": {
    "backend": {
      "success": false,
      "duration": 8.820785522460938,
      "output": "",
      "errors": "2025-08-21 17:46:13.748 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Using default database URL for development\n2025-08-21 17:46:13.748 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Populated database config for development\n2025-08-21 17:46:13.749 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Populated service config for development\n2025-08-21 17:46:13.749 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Loading all secrets from configured sources\n2025-08-21 17:46:13.750 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Loaded 0 secrets\n2025-08-21 17:46:13.750 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Populated 0 secrets into configuration\n2025-08-21 17:46:13.747 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Using default database URL for development\n2025-08-21 17:46:13.750 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Populated database config for development\n2025-08-21 17:46:13.751 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Populated service config for development\n2025-08-21 17:46:13.751 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Loading all secrets from configured sources\n2025-08-21 17:46:13.751 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Loaded 0 secrets\n2025-08-21 17:46:13.751 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | Populated 0 secrets into configuration\n2025-08-21 17:46:16.862 | DEBUG    | logging:handle:1028 | Using orjson library for writing JSON byte strings\n2025-08-21 17:46:16.962 | DEBUG    | logging:handle:1028 | Looking up time zone info from registry\n2025-08-21 17:46:17.072 | INFO     | netra_backend.app.core.unified_logging:_emit_log:139 | SyntheticDataService initialized successfully\n2025-08-21 17:46:17.189 | DEBUG    | netra_backend.app.services.metrics.agent_metrics:__init__:29 | Initialized AgentMetricsCollector with buffer size 5000\nImportError while loading conftest 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\tests\\conftest.py'.\ntests\\conftest.py:7: in <module>\n    from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketManager\nE   ImportError: cannot import name 'ConnectionManager' from 'netra_backend.app.websocket.connection_manager' (C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\netra_backend\\app\\websocket\\connection_manager.py)\n"
    },
    "auth": {
      "success": false,
      "duration": 2.7711613178253174,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 0 items / 1 error\n\n=================================== ERRORS ====================================\n__________________ ERROR collecting tests/base/test_base.py ___________________\nImportError while importing test module 'C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\auth_service\\tests\\base\\test_base.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\antho\\miniconda3\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\base\\__init__.py:6: in <module>\n    from auth_service.tests.test_base import AsyncTestBase, AuthTestBase\nE   ModuleNotFoundError: No module named 'auth_service.tests.test_base'\n=========================== short test summary info ===========================\nERROR tests/base/test_base.py\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n============================== 1 error in 0.21s ===============================\n",
      "errors": ""
    },
    "frontend": {
      "success": false,
      "duration": 18.61522078514099,
      "output": "",
      "errors": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL Unit Tests __tests__/components/ui/TextArea.test.tsx (15.47 s)\n  Textarea Component - Comprehensive Tests\n    Basic Rendering\n      \u221a renders textarea element correctly (37 ms)\n      \u221a applies custom className correctly (4 ms)\n      \u221a displays placeholder text (4 ms)\n      \u221a has minimum height styling (3 ms)\n    Multi-line Text Entry\n      \u221a accepts single line text input (305 ms)\n      \u221a handles multi-line text input (360 ms)\n      \u221a preserves line breaks in content (330 ms)\n      \u221a handles tab character input (248 ms)\n    Auto-resize Behavior\n      \u221a maintains minimum height (4 ms)\n      \u221a expands when content exceeds initial height (4275 ms)\n      \u221a handles rapid content changes (591 ms)\n    Text Editing and Navigation\n      \u221a allows text selection and replacement (203 ms)\n      \u221a supports cursor positioning (231 ms)\n      \u221a handles word boundary navigation (141 ms)\n      \u221a supports line navigation (118 ms)\n    Special Characters and Formatting\n      \u221a accepts emoji and Unicode characters (508 ms)\n      \u221a handles code blocks and special formatting (964 ms)\n      \u221a preserves whitespace and indentation (522 ms)\n      \u221a handles HTML entities safely (559 ms)\n    Copy and Paste Operations\n      \u221a supports copy operation (109 ms)\n      \u221a handles paste with line breaks (93 ms)\n      \u221a supports cut operation (125 ms)\n      \u00d7 handles large paste operations (5 ms)\n    Validation and Error States\n      \u221a respects required attribute (1 ms)\n      \u221a shows error state with aria-invalid (1 ms)\n      \u221a supports custom validation attributes (1 ms)\n      \u221a validates content length (641 ms)\n    Max Length Enforcement\n      \u221a prevents exceeding character limit (1515 ms)\n      \u221a counts line breaks in character limit (219 ms)\n      \u221a allows deletion when at max length (123 ms)\n    Auto-focus Functionality\n      \u221a focuses automatically when autoFocus is true (5 ms)\n      \u221a positions cursor at end on auto-focus (3 ms)\n      \u221a can receive focus programmatically (5 ms)\n    Keyboard Shortcuts\n      \u221a supports select all shortcut (139 ms)\n      \u221a handles undo operation (280 ms)\n      \u221a supports keyboard navigation shortcuts (126 ms)\n    Mobile Keyboard Behavior\n      \u221a maintains proper touch target size (3 ms)\n      \u221a handles mobile resize events (295 ms)\n      \u221a supports touch interactions (31 ms)\n    Disabled State\n      \u221a prevents input when disabled (15 ms)\n      \u221a shows disabled styling (2 ms)\n      \u221a cannot receive focus when disabled (2 ms)\n    Event Handling\n      \u221a calls onChange handler on input (121 ms)\n      \u221a calls onFocus handler when focused (19 ms)\n      \u221a calls onBlur handler when blurred (25 ms)\n      \u221a calls onKeyDown handler correctly (111 ms)\n    Accessibility\n      \u221a supports aria-label (1 ms)\n      \u221a supports aria-describedby for help text (1 ms)\n      \u221a has proper element type for screen readers\n      \u221a supports screen reader navigation (1 ms)\n    Form Integration\n      \u221a integrates with form element (2 ms)\n      \u221a supports controlled component pattern (341 ms)\n      \u221a supports uncontrolled component pattern (297 ms)\n      \u221a handles form submission (11 ms)\n    Performance\n      \u00d7 handles large content efficiently (23 ms)\n      \u221a manages multiple rapid changes (324 ms)\n\n  \u25cf Textarea Component - Comprehensive Tests \u203a Copy and Paste Operations \u203a handles large paste operations\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 10\n    Received length: 1\n    Received array:  [\"\"]\n\n    \u001b[0m \u001b[90m 230 |\u001b[39m       \u001b[36mconst\u001b[39m largeText \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m(\u001b[35m10\u001b[39m)\u001b[33m.\u001b[39mfill(\u001b[32m'Large content line'\u001b[39m)\u001b[33m.\u001b[39mjoin(\u001b[32m'\\n'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 231 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mpaste(largeText)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 232 |\u001b[39m       expect(textarea\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39msplit(\u001b[32m'\\n'\u001b[39m))\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 233 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 234 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 235 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (__tests__/components/ui/TextArea.test.tsx:232:42)\n\n  \u25cf Textarea Component - Comprehensive Tests \u203a Performance \u203a handles large content efficiently\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1000\n    Received: 0\n\n    \u001b[0m \u001b[90m 545 |\u001b[39m       \u001b[36mconst\u001b[39m largeContent \u001b[33m=\u001b[39m \u001b[32m'a'\u001b[39m\u001b[33m.\u001b[39mrepeat(\u001b[35m1000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 546 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mpaste(largeContent)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m       expect(textarea\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 548 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 549 |\u001b[39m\n     \u001b[90m 550 |\u001b[39m     it(\u001b[32m'manages multiple rapid changes'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/components/ui/TextArea.test.tsx:547:37)\n\nSummary of all failing tests\nFAIL __tests__/components/ui/TextArea.test.tsx (15.47 s)\n  \u25cf Textarea Component - Comprehensive Tests \u203a Copy and Paste Operations \u203a handles large paste operations\n\n    expect(received).toHaveLength(expected)\n\n    Expected length: 10\n    Received length: 1\n    Received array:  [\"\"]\n\n    \u001b[0m \u001b[90m 230 |\u001b[39m       \u001b[36mconst\u001b[39m largeText \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m(\u001b[35m10\u001b[39m)\u001b[33m.\u001b[39mfill(\u001b[32m'Large content line'\u001b[39m)\u001b[33m.\u001b[39mjoin(\u001b[32m'\\n'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 231 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mpaste(largeText)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 232 |\u001b[39m       expect(textarea\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39msplit(\u001b[32m'\\n'\u001b[39m))\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m10\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 233 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 234 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 235 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (__tests__/components/ui/TextArea.test.tsx:232:42)\n\n  \u25cf Textarea Component - Comprehensive Tests \u203a Performance \u203a handles large content efficiently\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1000\n    Received: 0\n\n    \u001b[0m \u001b[90m 545 |\u001b[39m       \u001b[36mconst\u001b[39m largeContent \u001b[33m=\u001b[39m \u001b[32m'a'\u001b[39m\u001b[33m.\u001b[39mrepeat(\u001b[35m1000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 546 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mpaste(largeContent)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 547 |\u001b[39m       expect(textarea\u001b[33m.\u001b[39mvalue\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 548 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 549 |\u001b[39m\n     \u001b[90m 550 |\u001b[39m     it(\u001b[32m'manages multiple rapid changes'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (__tests__/components/ui/TextArea.test.tsx:547:37)\n\n\nTest Suites: 1 failed, 1 of 120 total\nTests:       2 failed, 54 passed, 56 total\nSnapshots:   0 total\nTime:        16.794 s, estimated 320 s\n"
    },
    "dev_launcher": {
      "success": false,
      "duration": 26.72305703163147,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.4, pytest-8.4.1, pluggy-1.6.0\nrootdir: C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, langsmith-0.4.15, asyncio-1.1.0, cov-6.2.1, mock-3.14.1, xdist-3.8.0, html-4.1.1, json-report-1.5.0, metadata-3.1.1, timeout-2.4.0, typeguard-4.4.4\nasyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function\ncollected 23 items / 4 deselected / 19 selected\n\ntests\\test_system_startup.py ...                                         [ 15%]\ntests\\e2e\\test_dev_launcher_real_startup.py sF\n\n================================== FAILURES ===================================\n______ TestDevLauncherRealStartup.test_service_startup_order_validation _______\ntests\\e2e\\test_dev_launcher_real_startup.py:379: in test_service_startup_order_validation\n    assert startup_success, \"Service startup failed\"\nE   AssertionError: Service startup failed\nE   assert False\n----------------------------- Captured log setup ------------------------------\nDEBUG    asyncio:proactor_events.py:634 Using proactor: IocpProactor\nINFO     dev_launcher.service_config:service_config.py:350 Configuration loaded from C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1\\.dev_services.json\nINFO     dev_launcher.service_config:service_config.py:515 Loaded existing service configuration\n---------------------------- Captured stdout call -----------------------------\n\\n=== TESTING SERVICE STARTUP ORDER ===\\n\\U0001f50d DISCOVER | POSTGRESQL: sqlite+aiosqlite:///:memory:\\n\\U0001f50d DISCOVER | CLICKHOUSE: clickhouse://default:***@localhost:8123/netra_dev\\n\\U0001f50d DISCOVER | REDIS: redis://localhost:6379/0\\n\\U0001f50d WEBSOCKET | Discovered endpoint: backend_ws -> ws://localhost:8000/ws\\n\\u274c auth service NOT bound to port 8001\\n\\u2705 backend service bound to port 8000\\n\\u274c frontend service NOT bound to port 3000\n------------------------------ Captured log call ------------------------------\nINFO     dev_launcher.health_monitor:health_monitor.py:139 HealthMonitor initialized (check_interval: 30s)\nINFO     dev_launcher.health_monitor:health_monitor.py:141 Windows process verification enabled\nINFO     dev_launcher.process_manager:process_manager.py:58 ProcessManager initialized for win32\nINFO     dev_launcher.process_manager:process_manager.py:60 Enhanced Windows process tree management enabled\nINFO     dev_launcher.database_connector:database_connector.py:130 Discovered 3 database connections\nINFO     dev_launcher.websocket_validator:websocket_validator.py:78 Discovered 1 WebSocket endpoints\nINFO     dev_launcher.launcher:launcher.py:165 Signal handlers registered for graceful shutdown\n=========================== short test summary info ===========================\nSKIPPED [1] tests\\e2e\\test_dev_launcher_real_startup.py:208: Port 8000 (backend) is in use and cannot be freed\nFAILED tests/e2e/test_dev_launcher_real_startup.py::TestDevLauncherRealStartup::test_service_startup_order_validation\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n============ 1 failed, 3 passed, 1 skipped, 4 deselected in 23.03s ============\n",
      "errors": ""
    }
  },
  "overall_success": false,
  "total_duration": 56.930224657058716
}