<?xml version="1.0" encoding="UTF-8"?>
<learning>
    <metadata>
        <title>OAuth Secret Naming Standardization and Line Ending Fix</title>
        <category>Authentication</category>
        <date>2025-08-28</date>
        <severity>CRITICAL</severity>
        <business_impact>$75K+ MRR - User authentication failures</business_impact>
    </metadata>
    
    <problem>
        <description>
            Auth service in staging was loading incorrect OAuth client ID due to:
            1. Inconsistent secret naming (google-client-id-staging vs google-oauth-client-id-staging)
            2. Windows line endings (\r\n) in Google Secret Manager values causing validation failures
            3. Service independence violations (auth_service importing from netra_backend)
        </description>
        <root_cause>
            - Legacy secret names without "oauth" prefix were still referenced in deployment scripts
            - Secrets created on Windows included CRLF line endings
            - Database manager attempted to delegate to backend service violating microservice independence
        </root_cause>
        <symptoms>
            - Auth service startup failures with "OAuth client ID has invalid format"
            - Wrong client ID (84056009371-*) instead of correct (701982941522-*)
            - ModuleNotFoundError: No module named 'netra_backend' in auth service
        </symptoms>
    </problem>
    
    <solution>
        <steps>
            1. Standardized all OAuth secret names to include "oauth" prefix:
               - google-client-id-staging → google-oauth-client-id-staging
               - google-client-secret-staging → google-oauth-client-secret-staging
            
            2. Updated all references across the codebase:
               - scripts/deploy_to_gcp.py
               - scripts/audit_staging_oauth_secrets.py
               - scripts/create_staging_secrets*.py
               - scripts/validate_*_deployment.py
            
            3. Fixed Google Secret Manager values to remove line endings:
               echo -n "value" | gcloud secrets versions add secret-name --data-file=-
               
            4. Fixed service independence violations in auth_service/auth_core/database/database_manager.py:
               - Removed all imports from netra_backend
               - Implemented independent database connection logic
        </steps>
    </solution>
    
    <prevention>
        <guidelines>
            1. ALWAYS use echo -n when creating secrets to avoid line endings
            2. ALWAYS validate secret values with xxd to check for hidden characters
            3. ALWAYS use standardized naming: google-oauth-* for OAuth secrets
            4. NEVER import across microservice boundaries (auth_service ↔ netra_backend)
            5. ALWAYS test auth service deployment independently
        </guidelines>
        <validation>
            # Check for hidden characters in secrets
            gcloud secrets versions access latest --secret="secret-name" | xxd | head -5
            
            # Verify no CRLF (0d0a) at end
            # Should only see the value without trailing bytes
        </validation>
    </prevention>
    
    <cross_references>
        <ref>SPEC/independent_services.xml</ref>
        <ref>SPEC/staging_secrets_requirements.xml</ref>
        <ref>SPEC/learnings/auth.xml</ref>
        <ref>scripts/deploy_to_gcp.py</ref>
    </cross_references>
    
    <verified_configuration>
        <client_id>701982941522-in8iru136ovb8r7mv0d6rje2pkatgk8s.apps.googleusercontent.com</client_id>
        <secret_names>
            <secret>google-oauth-client-id-staging</secret>
            <secret>google-oauth-client-secret-staging</secret>
        </secret_names>
        <service_status>healthy</service_status>
        <deployment_timestamp>2025-08-28T16:46:00Z</deployment_timestamp>
    </verified_configuration>
</learning>