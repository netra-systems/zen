<?xml version="1.0" encoding="UTF-8"?>
<learning_document>
    <metadata>
        <title>CRITICAL: VPC Egress All-Traffic Breaks Cloud SQL Unix Sockets</title>
        <date_created>2025-09-16</date_created>
        <severity>CRITICAL</severity>
        <category>Infrastructure/VPC/Database</category>
        <business_impact>GOLDEN_PATH_BLOCKING</business_impact>
        <tags>vpc-egress, cloud-sql, unix-sockets, regression, staging-deployment</tags>
    </metadata>

    <executive_summary>
        <problem>
            VPC egress setting "all-traffic" completely breaks Cloud SQL Unix socket connections, 
            causing 15-second timeouts and preventing auth/backend services from starting.
        </problem>
        
        <root_cause>
            Commit 2acf46c8a (Sept 15, 2025) changed VPC egress from "private-ranges-only" to 
            "all-traffic" to fix ClickHouse connectivity, but this forces ALL traffic through 
            VPC connector, blocking Cloud SQL proxy access.
        </root_cause>
        
        <impact>
            - Auth service: Database connection timeout (15s) → service fails to start
            - Backend service: Import dependency errors due to auth service failure  
            - Golden Path completely broken
            - Zero functional services in staging environment
        </impact>
    </executive_summary>

    <technical_details>
        <regression_timeline>
            <event date="2025-09-15" commit="2acf46c8a">
                <action>Changed VPC egress from private-ranges-only to all-traffic</action>
                <reason>Fix Issue #1086 - ClickHouse connectivity crisis</reason>
                <unintended_consequence>Broke Cloud SQL Unix socket connections</unintended_consequence>
            </event>
            
            <event date="2025-09-16" investigation="current">
                <discovered>VPC all-traffic egress prevents Cloud SQL proxy access</discovered>
                <symptoms>15-second database connection timeouts</symptoms>
                <affected_services>netra-auth-service, netra-backend-staging</affected_services>
            </event>
        </regression_timeline>

        <technical_explanation>
            <cloud_sql_unix_sockets>
                <description>
                    Cloud SQL Unix socket connections use format: 
                    /cloudsql/PROJECT:REGION:INSTANCE
                    
                    These connections require DIRECT access to Cloud SQL proxy service,
                    which runs outside the VPC network.
                </description>
                
                <vpc_egress_impact>
                    <private_ranges_only>
                        - Private traffic (10.x.x.x, 192.168.x.x) → VPC connector
                        - Public traffic (Cloud SQL proxy) → Direct access ✅
                        - Result: Cloud SQL works ✅
                    </private_ranges_only>
                    
                    <all_traffic>
                        - ALL traffic forced through VPC connector
                        - Cloud SQL proxy access blocked/misrouted
                        - Result: 15-second timeout ❌
                    </all_traffic>
                </vpc_egress_impact>
            </cloud_sql_unix_sockets>

            <service_dependency_cascade>
                <step1>Auth service fails to connect to database</step1>
                <step2>Auth service fails to start (15s timeout)</step2>
                <step3>Backend service tries to import from auth_service module</step3>
                <step4>Backend service fails: "No module named 'auth_service'"</step4>
                <step5>Complete staging environment failure</step5>
            </service_dependency_cascade>
        </technical_explanation>

        <conflict_analysis>
            <clickhouse_requirements>
                <description>ClickHouse Cloud is external service requiring all-traffic VPC egress</description>
                <location>External: xedvrr4c3r.us-central1.gcp.clickhouse.cloud:8443</location>
                <access_method>TCP/HTTPS through VPC connector</access_method>
            </clickhouse_requirements>
            
            <cloud_sql_requirements>
                <description>Cloud SQL requires direct proxy access, not through VPC</description>
                <location>Unix socket: /cloudsql/netra-staging:us-central1:staging-shared-postgres</location>
                <access_method>Direct Unix socket, bypasses VPC</access_method>
            </cloud_sql_requirements>
            
            <incompatibility>
                Cannot satisfy both requirements simultaneously with single VPC egress setting.
                all-traffic breaks Cloud SQL, private-ranges-only breaks ClickHouse.
            </incompatibility>
        </conflict_analysis>
    </technical_details>

    <evidence>
        <deployment_configuration>
            <file>scripts/deploy_to_gcp_actual.py</file>
            <line>1088</line>
            <problematic_code>
                "--vpc-egress", "all-traffic"  # Route all traffic through VPC to fix ClickHouse connectivity
            </problematic_code>
        </deployment_configuration>

        <error_logs>
            <auth_service>
                <timestamp>2025-09-16T17:42:52.360702Z</timestamp>
                <error>Database connection validation timeout exceeded (15s)</error>
                <url_generated>postgresql+asyncpg://***@/netra_staging?host=/cloudsql/netra-staging:us-central1:staging-shared-postgres</url_generated>
            </auth_service>
            
            <backend_service>
                <timestamp>2025-09-16T17:43:16.388872Z</timestamp>
                <error>ModuleNotFoundError: No module named 'auth_service'</error>
                <root_cause>Auth service failure prevents backend import dependencies</root_cause>
            </backend_service>
        </error_logs>

        <commit_evidence>
            <commit>2acf46c8a632120f3e6c127ba25910bbdc6c4961</commit>
            <date>Mon Sep 15 04:27:41 2025 -0700</date>
            <message>Fix Issue #1086: Resolve staging connectivity crisis by updating VPC egress configuration</message>
            <change>private-ranges-only → all-traffic</change>
        </commit_evidence>
    </evidence>

    <solutions>
        <option1 recommended="true">
            <name>Switch Cloud SQL to TCP connections</name>
            <approach>Modify DatabaseURLBuilder to use TCP instead of Unix sockets for staging</approach>
            <pros>
                - Maintains ClickHouse connectivity
                - Works with all-traffic VPC egress
                - Cleaner architecture separation
            </pros>
            <cons>
                - Requires code changes
                - Need to test TCP connection reliability
            </cons>
            <implementation_files>
                - shared/database_url_builder.py
                - config/staging.env (add TCP database config)
            </implementation_files>
        </option1>

        <option2>
            <name>Selective VPC routing per service</name>
            <approach>Deploy auth/backend without VPC, other services with VPC</approach>
            <pros>
                - Minimal code changes
                - Preserves existing Unix socket connections
            </pros>
            <cons>
                - Inconsistent service configuration
                - Complex deployment logic
                - May break inter-service communication
            </cons>
        </option2>

        <option3>
            <name>Revert VPC egress and fix ClickHouse differently</name>
            <approach>Change back to private-ranges-only, use different ClickHouse access method</approach>
            <pros>
                - Restores working state immediately
                - Maintains proven Cloud SQL setup
            </pros>
            <cons>
                - Breaks ClickHouse connectivity again
                - Doesn't solve the underlying conflict
            </cons>
        </option3>
    </solutions>

    <prevention_measures>
        <deployment_validation>
            <description>Add health checks that validate both database AND ClickHouse connectivity</description>
            <implementation>Pre-deployment smoke tests for all external dependencies</implementation>
        </deployment_validation>
        
        <configuration_documentation>
            <description>Document VPC egress implications for each external service</description>
            <location>scripts/deploy_to_gcp_actual.py comments</location>
        </configuration_documentation>
        
        <monitoring_alerts>
            <description>Alert on database connection timeouts > 5 seconds</description>
            <threshold>Any connection attempt taking > 5s indicates VPC routing issue</threshold>
        </monitoring_alerts>
    </prevention_measures>

    <external_service_patterns>
        <pattern name="external_api_access_via_nat">
            <description>Universal pattern: ALL external services require Cloud NAT with private-ranges-only VPC egress</description>
            <affected_services>
                <service name="ClickHouse Cloud" url="xedvrr4c3r.us-central1.gcp.clickhouse.cloud:8443" type="analytics"/>
                <service name="OpenAI API" url="api.openai.com" type="llm"/>
                <service name="Anthropic API" url="api.anthropic.com" type="llm"/>
                <service name="Google Gemini API" url="generativelanguage.googleapis.com" type="llm"/>
                <service name="External Monitoring" url="various" type="observability"/>
                <service name="Webhook Endpoints" url="various" type="integration"/>
                <service name="Third-party APIs" url="various" type="integration"/>
                <service name="Package Registries" url="pypi.org, npmjs.com, registry.terraform.io" type="deployment"/>
                <service name="Payment APIs" url="stripe.com, paypal.com" type="business"/>
                <service name="Analytics APIs" url="segment.com, mixpanel.com" type="business"/>
            </affected_services>
            <routing_requirement>Internet access via Cloud NAT gateway</routing_requirement>
            <vpc_egress_requirement>private-ranges-only (NOT all-traffic)</vpc_egress_requirement>
            <cost_analysis>Single Cloud NAT (~$50/month) enables ALL external services</cost_analysis>
            <universal_pattern_reference>docs/infrastructure/vpc-egress-decision-matrix.md</universal_pattern_reference>
        </pattern>
        
        <pattern name="internal_gcp_services_direct">
            <description>Internal GCP services require direct access, NOT through Cloud NAT</description>
            <affected_services>
                <service name="Cloud SQL Unix Sockets" path="/cloudsql/PROJECT:REGION:INSTANCE" type="database"/>
                <service name="Cloud Storage" url="storage.googleapis.com" type="storage"/>
                <service name="Secret Manager" url="secretmanager.googleapis.com" type="security"/>
                <service name="Cloud Logging" url="logging.googleapis.com" type="observability"/>
                <service name="Cloud Monitoring" url="monitoring.googleapis.com" type="observability"/>
                <service name="Cloud Pub/Sub" url="pubsub.googleapis.com" type="messaging"/>
                <service name="Internal Load Balancers" url="internal IPs" type="networking"/>
            </affected_services>
            <routing_requirement>Direct access via private Google network</routing_requirement>
            <vpc_egress_requirement>private-ranges-only (bypasses VPC connector)</vpc_egress_requirement>
        </pattern>
        
        <pattern name="hybrid_external_gcp_services">
            <description>External GCP services that work with both routing methods</description>
            <affected_services>
                <service name="Cloud Storage Public" url="storage.googleapis.com" type="storage"/>
                <service name="BigQuery Public API" url="bigquery.googleapis.com" type="analytics"/>
                <service name="Cloud Translation" url="translate.googleapis.com" type="ai"/>
            </affected_services>
            <routing_requirement>Can use either direct or NAT routing</routing_requirement>
            <vpc_egress_requirement>Works with both private-ranges-only and all-traffic</vpc_egress_requirement>
        </pattern>
    </external_service_patterns>

    <related_issues>
        <github_issue number="1086">
            <title>Staging connectivity crisis</title>
            <resolution>VPC egress changed to all-traffic</resolution>
            <unintended_side_effect>Broke Cloud SQL connections</unintended_side_effect>
        </github_issue>
        
        <github_issue number="1263">
            <title>Database connection configuration for staging deployment</title>
            <related>Database timeout configurations</related>
        </github_issue>
        
        <github_issue number="1278">
            <title>Infrastructure capacity remediation</title>
            <related>Cloud Run configuration changes</related>
        </github_issue>
    </related_issues>

    <cross_references>
        <files>
            <file path="scripts/deploy_to_gcp_actual.py">Line 1088: Problematic VPC egress setting</file>
            <file path="shared/database_url_builder.py">CloudSQL URL construction logic</file>
            <file path="auth_service/auth_core/database/connection.py">Database connection timeout logic</file>
            <file path="config/staging.env">Missing database configuration (no POSTGRES_* vars)</file>
            <file path="deployment/secrets_config.py">Secret injection for database credentials</file>
        </files>
        
        <learning_documents>
            <doc path="SPEC/learnings/database_connectivity_architecture.xml">Database connection patterns</doc>
            <doc path="SPEC/learnings/vpc_networking_architecture.xml">VPC configuration principles</doc>
            <doc path="SPEC/learnings/staging_infrastructure_lessons.xml">Staging environment patterns</doc>
        </learning_documents>
    </cross_references>

    <lessons_learned>
        <architectural>
            <lesson>VPC egress settings have global impact on ALL external connections</lesson>
            <lesson>Cloud SQL Unix sockets cannot work through VPC connectors</lesson>
            <lesson>Infrastructure changes require comprehensive dependency analysis</lesson>
        </architectural>
        
        <operational>
            <lesson>15-second timeouts indicate routing issues, not performance problems</lesson>
            <lesson>External service dependencies create VPC egress conflicts</lesson>
            <lesson>Quick fixes for one service can break others</lesson>
        </operational>
        
        <process>
            <lesson>Infrastructure changes need full regression testing</lesson>
            <lesson>Database connections should be validated post-deployment</lesson>
            <lesson>Commit messages should warn about potential side effects</lesson>
        </process>
    </lessons_learned>

    <action_items>
        <immediate priority="P0">
            <item>Choose and implement solution (recommend Option 1: TCP connections)</item>
            <item>Update deployment script with extensive warning comments</item>
            <item>Test all external dependencies post-fix</item>
        </immediate>
        
        <short_term priority="P1">
            <item>Add deployment validation for database + ClickHouse connectivity</item>
            <item>Document VPC egress decision matrix for future changes</item>
            <item>Create monitoring alerts for connection timeouts</item>
        </short_term>
        
        <long_term priority="P2">
            <item>Design VPC architecture that supports both connection types</item>
            <item>Implement per-service VPC routing if technically feasible</item>
            <item>Consider Cloud SQL TCP-only architecture for consistency</item>
        </long_term>
    </action_items>
</learning_document>