<?xml version="1.0" encoding="UTF-8"?>
<learning>
  <title>JWT Secret Standardization</title>
  <date>2025-08-29</date>
  <category>Security</category>
  <tags>jwt, authentication, secrets, standardization</tags>
  
  <problem>
    <description>
      JWT secret configuration was inconsistent across services, with legacy JWT_SECRET 
      variable alongside JWT_SECRET_KEY, causing confusion and potential security issues.
      Auth service was checking both variables with fallback logic, creating ambiguity.
    </description>
    <symptoms>
      <symptom>ValueError: JWT secret not configured for staging environment</symptom>
      <symptom>Auth service using JWT_SECRET while backend using JWT_SECRET_KEY</symptom>
      <symptom>Multiple environment variables for same purpose</symptom>
    </symptoms>
  </problem>
  
  <solution>
    <description>
      Standardized on JWT_SECRET_KEY as the single source of truth for JWT secrets
      across all services. Removed all legacy JWT_SECRET references and fallback logic.
    </description>
    <implementation>
      <step>Updated auth_service/auth_core/secret_loader.py to only use JWT_SECRET_KEY</step>
      <step>Removed JWT_SECRET fallback logic from auth service</step>
      <step>Updated all test files to use JWT_SECRET_KEY</step>
      <step>Cleaned up all environment files and templates</step>
      <step>Verified docker-compose files use JWT_SECRET_KEY</step>
    </implementation>
  </solution>
  
  <standards>
    <standard>
      <rule>ALWAYS use JWT_SECRET_KEY for JWT token signing secrets</rule>
      <rationale>Single source of truth prevents configuration errors</rationale>
    </standard>
    <standard>
      <rule>NEVER use JWT_SECRET variable (deprecated)</rule>
      <rationale>Legacy variable causes confusion and inconsistency</rationale>
    </standard>
    <standard>
      <rule>Both auth_service and netra_backend MUST use same JWT_SECRET_KEY</rule>
      <rationale>Token validation requires consistent secrets across services</rationale>
    </standard>
    <standard>
      <rule>Environment-specific secrets (JWT_SECRET_STAGING, JWT_SECRET_PRODUCTION) take precedence</rule>
      <rationale>Allows different secrets per environment while maintaining consistency</rationale>
    </standard>
  </standards>
  
  <validation>
    <check>Run: rg "JWT_SECRET[^_]|JWT_SECRET$" to find legacy references</check>
    <check>Verify auth_service/auth_core/secret_loader.py only checks JWT_SECRET_KEY</check>
    <check>Ensure all .env files only define JWT_SECRET_KEY</check>
    <check>Test token generation and validation between services</check>
  </validation>
  
  <references>
    <reference>auth_service/auth_core/secret_loader.py</reference>
    <reference>netra_backend/app/core/configuration/secrets.py</reference>
    <reference>SPEC/unified_environment_management.xml</reference>
  </references>
</learning>