<?xml version="1.0" encoding="UTF-8"?>
<learning>
    <metadata>
        <id>redis-vpc-connector-requirement-2025-08-31</id>
        <title>VPC Connector Required for Redis/Cloud SQL Access in Cloud Run</title>
        <category>Infrastructure/Networking</category>
        <date>2025-08-31</date>
        <severity>CRITICAL</severity>
        <business-impact>Platform Stability</business-impact>
    </metadata>
    
    <problem-statement>
        <title>Cloud Run Services Cannot Connect to Redis Without VPC Connector</title>
        <symptoms>
            <symptom>Backend service startup failure with "Redis ping timeout after 10.0s"</symptom>
            <symptom>Agent services fail to initialize due to Redis dependency</symptom>
            <symptom>WebSocket chat functionality completely broken</symptom>
            <symptom>Health endpoint returns "startup_failed": true</symptom>
        </symptoms>
        
        <root-causes>
            <cause id="missing-vpc-connector">
                <description>Cloud Run services deployed without VPC connector configuration</description>
                <evidence>
                    <finding>Redis instances deployed in private VPC network (staging-vpc)</finding>
                    <finding>Redis IPs are private (10.107.0.3, 10.166.204.83)</finding>
                    <finding>Cloud Run services by default have no access to private VPC</finding>
                    <finding>Deployment script did not include --vpc-connector flag</finding>
                </evidence>
            </cause>
            
            <cause id="redis-url-mismatch">
                <description>Redis URL secret contained incorrect IP address</description>
                <evidence>
                    <finding>Secret had IP 10.128.0.3 (non-existent)</finding>
                    <finding>Actual Redis instance at 10.107.0.3 (staging-shared-redis)</finding>
                    <finding>Secondary instance at 10.166.204.83 (staging-redis-f1adc35c)</finding>
                </evidence>
            </cause>
            
            <cause id="environment-validator-checking-wrong-var">
                <description>Environment validator checking #removed-legacyinstead of POSTGRES_* variables</description>
                <evidence>
                    <finding>Backend constructs #removed-legacyfrom POSTGRES_* environment variables</finding>
                    <finding>Validator incorrectly required #removed-legacyin staging/production</finding>
                    <finding>This could mask configuration issues during deployment</finding>
                </evidence>
            </cause>
        </root-causes>
    </problem-statement>
    
    <solution>
        <title>Configure VPC Connector for All Services Requiring Private Network Access</title>
        
        <architecture>
            <principle>Services requiring Redis/Cloud SQL must use VPC connector</principle>
            <principle>VPC connector provides secure private network access</principle>
            <principle>Configuration must be consistent across deployment methods</principle>
        </architecture>
        
        <implementation>
            <gcp-deployment-fix>
                <file>scripts/deploy_to_gcp.py</file>
                <change>Added VPC connector configuration for backend and auth services</change>
                <code><![CDATA[
# Add VPC connector for services that need Redis/database access
if service.name in ["backend", "auth"]:
    # CRITICAL: VPC connector required for Redis and Cloud SQL connectivity
    cmd.extend(["--vpc-connector", "staging-connector"])
                ]]></code>
            </gcp-deployment-fix>
            
            <redis-url-fix>
                <description>Updated Redis URL secret to use correct IP address</description>
                <command>echo "redis://default:PASSWORD@10.107.0.3:6379/0" | gcloud secrets versions add redis-url-staging --data-file=-</command>
            </redis-url-fix>
            
            <environment-validator-fix>
                <file>netra_backend/app/core/environment_validator.py</file>
                <change>Updated REQUIRED_VARS to check POSTGRES_* instead of DATABASE_URL</change>
                <change>Updated LOCALHOST_SENSITIVE_VARS to check POSTGRES_HOST</change>
            </environment-validator-fix>
            
            <manual-service-update>
                <command>gcloud run services update netra-backend-staging --vpc-connector staging-connector --region us-central1</command>
                <command>gcloud run services update netra-auth-service --vpc-connector staging-connector --region us-central1</command>
            </manual-service-update>
        </implementation>
        
        <verification>
            <health-checks>
                <backend>https://netra-backend-staging-*.run.app/health returns "status": "healthy"</backend>
                <auth>https://netra-auth-service-*.run.app/health returns "database_status": "connected"</auth>
            </health-checks>
            
            <redis-connectivity>
                <log-verification>No "Redis ping timeout" errors in Cloud Run logs</log-verification>
                <startup-success>No "CRITICAL STARTUP FAILURE" messages</startup-success>
            </redis-connectivity>
        </verification>
    </solution>
    
    <terraform-requirements>
        <description>Terraform configuration must include VPC connector setup</description>
        <resource-needed>
            <type>google_vpc_access_connector</type>
            <configuration><![CDATA[
resource "google_vpc_access_connector" "staging_connector" {
  name          = "staging-connector"
  region        = "us-central1"
  network       = google_compute_network.staging_vpc.name
  ip_cidr_range = "10.1.0.0/28"
  min_instances = 2
  max_instances = 10
  machine_type  = "e2-micro"
}
            ]]></configuration>
        </resource-needed>
        
        <cloud-run-service-config><![CDATA[
resource "google_cloud_run_service" "backend" {
  # ... other config ...
  
  template {
    metadata {
      annotations = {
        "run.googleapis.com/vpc-access-connector" = google_vpc_access_connector.staging_connector.name
        "run.googleapis.com/vpc-access-egress"    = "private-ranges-only"
      }
    }
  }
}
        ]]></cloud-run-service-config>
    </terraform-requirements>
    
    <critical-takeaways>
        <takeaway priority="CRITICAL">
            <title>VPC Connector is Mandatory for Private Resource Access</title>
            <description>
                Cloud Run services CANNOT access Redis, Cloud SQL, or other private VPC resources
                without a VPC connector. This is not optional - services will fail at startup.
            </description>
            <implementation>
                Always include --vpc-connector flag when deploying services that need database/cache access
            </implementation>
        </takeaway>
        
        <takeaway priority="HIGH">
            <title>Environment Validation Must Match Actual Configuration</title>
            <description>
                Validators must check the actual environment variables used by the service,
                not legacy or constructed variables. #removed-legacyis constructed from POSTGRES_*
                variables in production configurations.
            </description>
        </takeaway>
        
        <takeaway priority="HIGH">
            <title>Redis URL Must Match Actual Instance IP</title>
            <description>
                Always verify Redis instance IPs before configuring secrets.
                Use `gcloud redis instances list` to get correct IP addresses.
            </description>
        </takeaway>
    </critical-takeaways>
    
    <prevention-measures>
        <measure>
            <title>Pre-Deployment VPC Connector Check</title>
            <description>Verify VPC connector exists before deployment: gcloud compute networks vpc-access connectors list</description>
        </measure>
        
        <measure>
            <title>Deployment Script Validation</title>
            <description>Always include VPC connector configuration in deployment automation</description>
        </measure>
        
        <measure>
            <title>End-to-End Configuration Tests</title>
            <description>Test suite must verify Redis connectivity after deployment</description>
        </measure>
    </prevention-measures>
    
    <cross-references>
        <related>jwt_secret_standardization_hard_requirements.xml - JWT configuration in staging</related>
        <related>staging_secrets_requirements.xml - Complete staging secrets setup</related>
        <related>redis_staging_configuration.xml - Redis instance configuration details</related>
        <related>gcp_deployment.xml - GCP deployment best practices</related>
    </cross-references>
    
    <affected-systems>
        <system>Backend Service (netra-backend-staging)</system>
        <system>Auth Service (netra-auth-service)</system>
        <system>GCP Deployment Script (scripts/deploy_to_gcp.py)</system>
        <system>Environment Validator (netra_backend/app/core/environment_validator.py)</system>
        <system>Redis Instances (staging-shared-redis, staging-redis-f1adc35c)</system>
    </affected-systems>
    
    <business-value>
        <segment>Platform/Internal</segment>
        <business-goal>Platform Stability</business-goal>
        <value-impact>Ensures core chat functionality works - delivers 90% of platform value</value-impact>
        <strategic-impact>Prevents complete service failures that would block all user interactions</strategic-impact>
    </business-value>
</learning>