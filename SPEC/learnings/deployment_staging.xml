<?xml version="1.0" encoding="UTF-8"?>
<spec>
  <meta>
    <title>GCP Staging Deployment Learnings</title>
    <category>deployment</category>
    <created>2025-08-18</created>
    <cross_references>
      <ref>CLAUDE.md#gcp-staging-deployment</ref>
    </cross_references>
  </meta>

  <deployment_learnings>
    <date>2025-08-18</date>
    
    <critical_requirement>
      <title>MANDATORY SERVICE NAMING CONVENTION</title>
      <rule>Cloud Run service names MUST ALWAYS be:</rule>
      <service>netra-backend-staging (NOT netra-backend)</service>
      <service>netra-frontend-staging (NOT netra-frontend)</service>
      <service>netra-auth-service (unchanged)</service>
      <reason>These names must match exactly what is deployed in Cloud Run</reason>
      <enforcement>All deployment scripts have been updated to use these names</enforcement>
    </critical_requirement>
    
    <what_works>
      <service_account_auth>
        <key_file>gcp-staging-sa-key.json</key_file>
        <not_this>staging-deploy-key.json</not_this>
        <project>netra-staging</project>
        <not_this_project>netra-systems</not_this_project>
        <activate_command>gcloud auth activate-service-account --key-file=gcp-staging-sa-key.json</activate_command>
      </service_account_auth>

      <docker_build_commands>
        <backend>docker build -t us-central1-docker.pkg.dev/netra-staging/netra-staging/netra-backend-staging:latest -f Dockerfile.backend .</backend>
        <frontend>docker build -t us-central1-docker.pkg.dev/netra-staging/netra-staging/netra-frontend-staging:latest -f Dockerfile.frontend.staging .</frontend>
        <auth>docker build -t us-central1-docker.pkg.dev/netra-staging/netra-staging/netra-auth-service:latest -f Dockerfile.auth .</auth>
      </docker_build_commands>

      <service_names exact="true" critical="true">
        <!-- CRITICAL: Service names MUST always use -staging suffix -->
        <backend>netra-backend-staging</backend>
        <frontend>netra-frontend-staging</frontend>
        <auth>netra-auth-service</auth>
        <note>ALWAYS use -staging suffix for backend and frontend services</note>
        <note>These names MUST match exactly in Cloud Run</note>
      </service_names>
    </what_works>

    <what_doesnt_work>
      <powershell_issues>
        <script>deploy_staging_reliable.py</script>
        <problem>Has syntax errors (unclosed quotes/brackets)</problem>
        <solution>Manual deployment commands work better than the script</solution>
      </powershell_issues>

      <common_mistakes>
        <mistake>Wrong Dockerfile names (e.g., Dockerfile.frontend vs Dockerfile.frontend.staging)</mistake>
        <mistake>Wrong project ID (netra-systems vs netra-staging)</mistake>
        <mistake>Wrong key file name (staging-deploy-key.json doesn't exist)</mistake>
      </common_mistakes>
    </what_doesnt_work>

    <deployment_sequence>
      <step number="1" name="Authenticate">
        <command>gcloud auth activate-service-account --key-file=gcp-staging-sa-key.json</command>
        <command>gcloud config set project netra-staging</command>
      </step>

      <step number="2" name="Configure Docker">
        <command>gcloud auth configure-docker us-central1-docker.pkg.dev --quiet</command>
      </step>

      <step number="3" name="Build and Push Images">
        <note>Can be done in parallel</note>
        <command>docker build -t [IMAGE_URL] -f [DOCKERFILE] .</command>
        <command>docker push [IMAGE_URL]</command>
      </step>

      <step number="4" name="Deploy to Cloud Run">
        <command>gcloud run deploy [SERVICE_NAME] --image [IMAGE_URL] --region us-central1</command>
      </step>
    </deployment_sequence>

    <primary_deployment_commands>
      <setup_one_time>
        <command>gcloud auth login</command>
        <command>python setup_staging_auth.py</command>
      </setup_one_time>

      <deploy>
        <command>python deploy_staging_reliable.py</command>
      </deploy>

      <deployment_options>
        <command purpose="Skip health checks">python deploy_staging_reliable.py --skip-health-checks</command>
        <command purpose="Build only">python deploy_staging_reliable.py --build-only</command>
        <command purpose="Deploy pre-built images">python deploy_staging_reliable.py --deploy-only</command>
      </deployment_options>

      <auth_issues>
        <command purpose="Regenerate service account key">python setup_staging_auth.py --force-new-key</command>
      </auth_issues>
    </primary_deployment_commands>

    <critical_notes>
      <note>Use ONLY deploy_staging_reliable.py for deployments</note>
      <note>Uses service account (never expires)</note>
      <note>Auto-retries on failures</note>
      <note>Self-heals authentication issues</note>
    </critical_notes>

    <database_ssl_requirements>
      <date>2025-08-21</date>
      <issue>Backend service fails with ConfigurationError: SSL required for staging environment</issue>
      <root_cause>DATABASE_URL secret missing required sslmode parameter for Cloud SQL connections</root_cause>
      <solution>
        <step>Update database-url-staging secret to include sslmode=require parameter</step>
        <command>gcloud secrets versions access latest --secret="database-url-staging" | python -c "import sys; url = sys.stdin.read().strip(); url_with_ssl = url + ('&amp;' if '?' in url else '?') + 'sslmode=require'; print(url_with_ssl)" | gcloud secrets versions add database-url-staging --data-file=-</command>
      </solution>
      <deployment_fix>
        <step>Force new revision with updated secret bindings</step>
        <command>gcloud run deploy netra-backend-staging --image gcr.io/netra-staging/netra-backend:latest --platform managed --region us-central1 --set-secrets="DATABASE_URL=database-url-staging:latest,GEMINI_API_KEY=gemini-api-key-staging:latest,JWT_SECRET_KEY=jwt-secret-staging:latest,FERNET_KEY=fernet-key-staging:latest" --no-traffic --tag=fix-ssl</command>
        <step>Route traffic to working revision</step>
        <command>gcloud run services update-traffic netra-backend-staging --to-latest --platform managed --region us-central1</command>
      </deployment_fix>
      <validation>
        <note>Cloud SQL connections in staging/production MUST have sslmode parameter</note>
        <note>Valid SSL modes: sslmode=require, sslmode=verify-ca, sslmode=verify-full, sslmode=prefer, sslmode=disable</note>
        <note>Unix socket connections (/cloudsql/) do not require SSL mode</note>
      </validation>
      <prevention>
        <note>Always verify DATABASE_URL secrets include sslmode parameter before deployment</note>
        <note>Test new revisions with --no-traffic flag first</note>
        <note>Use tagged revisions for testing before routing traffic</note>
      </prevention>
    </database_ssl_requirements>


    <oauth_staging_configuration>
      <date>2025-08-21</date>
      <issue>OAuth flow configuration in staging environment</issue>
      <architecture>
        <component>Auth service runs separately at auth.staging.netrasystems.ai</component>
        <component>Frontend at app.staging.netrasystems.ai initiates OAuth via auth service</component>
        <component>Backend at api.staging.netrasystems.ai validates tokens from auth service</component>
      </architecture>
      <critical_configuration>
        <setting>USE_OAUTH_PROXY must be set to "true" for backend to use auth service</setting>
        <setting>OAUTH_PROXY_URL should point to auth service (https://auth.staging.netrasystems.ai)</setting>
        <command>gcloud run services update netra-backend-staging --update-env-vars="USE_OAUTH_PROXY=true" --region=us-central1</command>
        <note>Without USE_OAUTH_PROXY=true, backend won't validate tokens through auth service even if OAUTH_PROXY_URL is set</note>
      </critical_configuration>
      <oauth_flow>
        <step>User clicks login â†’ Frontend redirects to auth.staging.netrasystems.ai/auth/login?provider=google</step>
        <step>Auth service redirects to Google OAuth consent page</step>
        <step>Google redirects back to app.staging.netrasystems.ai/auth/callback with auth code</step>
        <step>Frontend exchanges code for JWT token via auth service</step>
        <step>Frontend stores JWT and uses for API requests to backend</step>
      </oauth_flow>
      <configuration_requirements>
        <requirement>Google OAuth callback URL must be https://app.staging.netrasystems.ai/auth/callback</requirement>
        <requirement>Auth service needs GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET secrets</requirement>
        <requirement>Backend needs USE_OAUTH_PROXY=true and OAUTH_PROXY_URL=https://auth.staging.netrasystems.ai</requirement>
        <requirement>CORS must allow app.staging.netrasystems.ai origin on both auth and backend services</requirement>
      </configuration_requirements>
      <troubleshooting>
        <issue>"No token received" error</issue>
        <possible_causes>
          <cause>Auth service not returning token after Google callback</cause>
          <cause>Frontend callback handler not extracting token from URL params correctly</cause>
          <cause>CORS blocking the token exchange request</cause>
        </possible_causes>
        <debugging_steps>
          <step>Check auth service logs: gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=netra-auth-staging" --project=netra-staging --limit=50</step>
          <step>Verify OAuth credentials in Google Cloud Console match callback URL</step>
          <step>Test auth flow directly: curl https://auth.staging.netrasystems.ai/auth/login?provider=google</step>
        </debugging_steps>
      </troubleshooting>
    </oauth_staging_configuration>
  </deployment_learnings>
</spec>