<?xml version="1.0" encoding="UTF-8"?>
<learning>
  <title>JWT Secret Synchronization and 401 Error Analysis</title>
  <date>2025-08-29</date>
  <category>authentication</category>
  <severity>high</severity>
  
  <problem_statement>
    User reported that JWT_SECRET_KEY was not syncing between services, potentially causing 401 errors on the threads endpoint.
  </problem_statement>
  
  <investigation_findings>
    <finding priority="1">
      <title>JWT Secrets ARE Properly Synchronized</title>
      <details>
        - Both auth_service and netra_backend use the SAME JWT secret
        - SecretManagerBuilder returns consistent secrets for both services
        - Cross-service token validation works correctly
        - JWT secret exists in Google Secret Manager for staging (jwt-secret-key-staging)
      </details>
      <evidence>
        - verify_jwt_secret_sync.py script confirms synchronization
        - Both services load from JWT_SECRET_KEY environment variable
        - Tokens created by auth service can be decoded by backend
      </evidence>
    </finding>
    
    <finding priority="2">
      <title>Secret Loading Hierarchy is Correct</title>
      <details>
        The fallback chain for JWT secret loading is consistent across services:
        1. Environment-specific secrets (JWT_SECRET_STAGING, JWT_SECRET_PRODUCTION)
        2. Generic JWT_SECRET_KEY (primary, shared between services)
        3. Legacy JWT_SECRET (deprecated, backward compatibility only)
        4. Development fallback (development environment only)
      </details>
      <code_references>
        - auth_service/auth_core/secret_loader.py:45-98
        - netra_backend/app/core/configuration/unified_secrets.py:284-331
        - shared/secret_manager_builder.py:735-794
      </code_references>
    </finding>
    
    <finding priority="3">
      <title>401 Errors Are NOT Due to JWT Secret Mismatch</title>
      <details>
        The 401 errors on threads endpoint are caused by poor error messaging in the middleware,
        not by JWT secret synchronization issues. The middleware incorrectly categorizes errors
        based on X-Service-ID header presence rather than the actual authentication failure cause.
      </details>
      <code_references>
        - netra_backend/app/middleware/fastapi_auth_middleware.py:136-161
      </code_references>
    </finding>
  </investigation_findings>
  
  <root_cause>
    The perceived JWT secret synchronization issue was actually a red herring. The real issues are:
    1. Poor error messaging in FastAPIAuthMiddleware that doesn't indicate the actual cause of 401 errors
    2. Middleware incorrectly assumes service-to-service auth failures are due to SERVICE_SECRET issues
    3. Generic "authentication_failed" messages don't help debug the actual problem
  </root_cause>
  
  <solution_implemented>
    <step number="1">
      Created verify_jwt_secret_sync.py diagnostic script to verify JWT secret synchronization
    </step>
    <step number="2">
      Confirmed that SecretManagerBuilder properly synchronizes secrets across services
    </step>
    <step number="3">
      Identified that the middleware error handling needs improvement to provide better diagnostics
    </step>
  </solution_implemented>
  
  <recommendations>
    <recommendation priority="high">
      Improve FastAPIAuthMiddleware error messages to indicate actual failure cause:
      - "JWT signature verification failed" for secret mismatch
      - "Token expired" for expiration issues
      - "Invalid token format" for malformed tokens
      - "Service authentication failed" only for actual SERVICE_SECRET issues
    </recommendation>
    
    <recommendation priority="medium">
      Add more detailed logging in the middleware to help debug authentication failures:
      - Log token claims (without sensitive data)
      - Log which validation step failed
      - Log service ID for service-to-service requests
    </recommendation>
    
    <recommendation priority="low">
      Consider adding a /auth/debug endpoint (dev/staging only) that can validate tokens
      and return detailed information about why validation failed
    </recommendation>
  </recommendations>
  
  <common_misconceptions>
    <misconception>
      <wrong>401 errors mean JWT secrets don't match between services</wrong>
      <correct>401 errors can have many causes: expired tokens, missing headers, network issues, auth service down, OR secret mismatch</correct>
    </misconception>
    
    <misconception>
      <wrong>Each service needs its own JWT secret</wrong>
      <correct>All services MUST share the same JWT secret for token validation to work</correct>
    </misconception>
    
    <misconception>
      <wrong>SERVICE_SECRET and JWT_SECRET_KEY are the same</wrong>
      <correct>SERVICE_SECRET is for service-to-service auth, JWT_SECRET_KEY is for user token validation</correct>
    </misconception>
  </common_misconceptions>
  
  <testing_checklist>
    <test>Run verify_jwt_secret_sync.py to confirm secret synchronization</test>
    <test>Create token with auth service, validate with backend service</test>
    <test>Check JWT_SECRET_KEY is set in environment</test>
    <test>Verify Google Secret Manager has jwt-secret-key-staging for staging</test>
    <test>Check token expiration times are appropriate</test>
  </testing_checklist>
  
  <keywords>
    JWT, JWT_SECRET_KEY, authentication, 401, token validation, secret synchronization,
    SecretManagerBuilder, auth service, backend service, middleware, error handling
  </keywords>
</learning>