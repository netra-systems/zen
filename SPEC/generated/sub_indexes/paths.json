{
  "metadata": {
    "version": "3.0.0",
    "category": "paths",
    "generated_at": "2025-08-24T17:28:32.117351",
    "root_directory": "C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1",
    "total_literals": 578
  },
  "literals": {
    "\"\n\n# Default to local build with checks\ncommand = [\n    sys.executable,\n    \"scripts/deploy_to_gcp.py\",\n    \"--project\", \"netra-staging\",\n    \"--build-local\",\n    \"--service-account\", SERVICE_ACCOUNT_KEY\n]\n\n# Add any additional arguments passed to this script\nif len(sys.argv) > 1:\n    command.extend(sys.argv[1:])\nelse:\n    # Default to running checks\n    command.append(\"--run-checks\")\n\n# Execute deployment\nsys.exit(subprocess.call(command))": {
      "value": "\"\n\n# Default to local build with checks\ncommand = [\n    sys.executable,\n    \"scripts/deploy_to_gcp.py\",\n    \"--project\", \"netra-staging\",\n    \"--build-local\",\n    \"--service-account\", SERVICE_ACCOUNT_KEY\n]\n\n# Add any additional arguments passed to this script\nif len(sys.argv) > 1:\n    command.extend(sys.argv[1:])\nelse:\n    # Default to running checks\n    command.append(\"--run-checks\")\n\n# Execute deployment\nsys.exit(subprocess.call(command))",
      "category": "paths",
      "locations": [
        "scripts/setup_gcp_service_account.py:122"
      ]
    },
    "#!/bin/bash\n# AI Agent Metadata Archive Hook\n\necho \"Archiving metadata to audit log...\"\n\n# Archive metadata\npython scripts/metadata_archiver.py --archive\n\necho \"‚úÖ Metadata archived\"\nexit 0": {
      "value": "#!/bin/bash\n# AI Agent Metadata Archive Hook\n\necho \"Archiving metadata to audit log...\"\n\n# Archive metadata\npython scripts/metadata_archiver.py --archive\n\necho \"‚úÖ Metadata archived\"\nexit 0",
      "category": "paths",
      "locations": [
        "scripts/metadata_tracking/git_hooks_manager.py:78",
        "scripts/metadata_tracking/hooks_manager.py:47"
      ]
    },
    "#!/bin/bash\n# AI Agent Metadata Validation Hook\n\necho \"Validating AI agent metadata headers...\"\n\n# Run metadata validator\npython scripts/metadata_validator.py --validate-all\n\nif [ $? -ne 0 ]; then\n    echo \"‚ùå Metadata validation failed. Please fix metadata headers before committing.\"\n    exit 1\nfi\n\necho \"‚úÖ Metadata validation passed\"\nexit 0": {
      "value": "#!/bin/bash\n# AI Agent Metadata Validation Hook\n\necho \"Validating AI agent metadata headers...\"\n\n# Run metadata validator\npython scripts/metadata_validator.py --validate-all\n\nif [ $? -ne 0 ]; then\n    echo \"‚ùå Metadata validation failed. Please fix metadata headers before committing.\"\n    exit 1\nfi\n\necho \"‚úÖ Metadata validation passed\"\nexit 0",
      "category": "paths",
      "locations": [
        "scripts/metadata_tracking/git_hooks_manager.py:59",
        "scripts/metadata_tracking/hooks_manager.py:28"
      ]
    },
    "#!/usr/bin/env python3\n\"\"\"\nWrapper script for deploying to GCP staging with service account authentication.\nAuto-generated by setup_gcp_service_account.py\n\"\"\"\n\nimport os\nimport sys\nimport subprocess\nfrom pathlib import Path\n\n# Service account key path\nSERVICE_ACCOUNT_KEY = r\"": {
      "value": "#!/usr/bin/env python3\n\"\"\"\nWrapper script for deploying to GCP staging with service account authentication.\nAuto-generated by setup_gcp_service_account.py\n\"\"\"\n\nimport os\nimport sys\nimport subprocess\nfrom pathlib import Path\n\n# Service account key path\nSERVICE_ACCOUNT_KEY = r\"",
      "category": "paths",
      "locations": [
        "scripts/setup_gcp_service_account.py:110"
      ]
    },
    "## Next Steps\n\n1. **Run smoke tests** to verify basic functionality\n2. **Test agent workflows** end-to-end\n3. **Monitor WebSocket traffic** in dev tools\n4. **Add e2e tests** for critical event flows\n5. **Document event catalog** in SPEC/websocket_communication.xml": {
      "value": "## Next Steps\n\n1. **Run smoke tests** to verify basic functionality\n2. **Test agent workflows** end-to-end\n3. **Monitor WebSocket traffic** in dev tools\n4. **Add e2e tests** for critical event flows\n5. **Document event catalog** in SPEC/websocket_communication.xml",
      "category": "paths",
      "locations": [
        "scripts/websocket_coherence_review.py:401"
      ]
    },
    "## üõ†Ô∏è Available Tools\n- `python scripts/boundary_enforcer.py --enforce` - Full boundary check\n- `python scripts/auto_split_files.py --scan` - Automated file splitting\n- `python scripts/auto_decompose_functions.py --scan` - Function decomposition\n- `python scripts/emergency_boundary_actions.py --assess` - Emergency assessment\n\n---\n*Generated by Boundary Enforcement System v2.0 | Timestamp:": {
      "value": "## üõ†Ô∏è Available Tools\n- `python scripts/boundary_enforcer.py --enforce` - Full boundary check\n- `python scripts/auto_split_files.py --scan` - Automated file splitting\n- `python scripts/auto_decompose_functions.py --scan` - Function decomposition\n- `python scripts/emergency_boundary_actions.py --assess` - Emergency assessment\n\n---\n*Generated by Boundary Enforcement System v2.0 | Timestamp:",
      "category": "paths",
      "locations": [
        "scripts/boundary_enforcer_report_generator.py:267"
      ]
    },
    "% goal\n\n## Configuration\nTo enable continuous autonomous review, add to CI/CD:\n```bash\npython scripts/test_autonomous_review.py --auto\n```\n\nOr schedule hourly reviews:\n```bash\n0 * * * * cd /path/to/project && python scripts/test_autonomous_review.py --continuous\n```": {
      "value": "% goal\n\n## Configuration\nTo enable continuous autonomous review, add to CI/CD:\n```bash\npython scripts/test_autonomous_review.py --auto\n```\n\nOr schedule hourly reviews:\n```bash\n0 * * * * cd /path/to/project && python scripts/test_autonomous_review.py --continuous\n```",
      "category": "paths",
      "locations": [
        "scripts/autonomous_review/report_generator.py:82"
      ]
    },
    "**/*.json": {
      "value": "**/*.json",
      "category": "paths",
      "locations": [
        "scripts/ci/analyze_failures.py:64",
        "scripts/cleanup_generated_files.py:44"
      ]
    },
    "**/*.py": {
      "value": "**/*.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_collectors.py:154",
        "scripts/aggressive_syntax_fix.py:23",
        "scripts/check_schema_imports.py:265",
        "scripts/compliance/find_top_mocks.py:42",
        "scripts/final_syntax_fix.py:75",
        "scripts/fix_remaining_syntax_errors.py:191",
        "scripts/fix_schema_imports.py:158",
        "scripts/function_complexity_linter.py:137",
        "scripts/status_agent_analyzer.py:166",
        "scripts/status_integration_analyzer.py:97"
      ]
    },
    "**/*.test.ts": {
      "value": "**/*.test.ts",
      "category": "paths",
      "locations": [
        "scripts/fix_frontend_tests.py:139",
        "scripts/status_agent_analyzer.py:193"
      ]
    },
    "**/*.test.tsx": {
      "value": "**/*.test.tsx",
      "category": "paths",
      "locations": [
        "scripts/fix_frontend_tests.py:138",
        "scripts/status_agent_analyzer.py:192"
      ]
    },
    "**/*.ts": {
      "value": "**/*.ts",
      "category": "paths",
      "locations": [
        "scripts/status_integration_analyzer.py:119"
      ]
    },
    "**/*.tsx": {
      "value": "**/*.tsx",
      "category": "paths",
      "locations": [
        "scripts/status_integration_analyzer.py:163"
      ]
    },
    "**/*_test.py": {
      "value": "**/*_test.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/analyze_mocks.py:68",
        "scripts/e2e_import_fixer_comprehensive.py:121"
      ]
    },
    "**/*config.json": {
      "value": "**/*config.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/github_analyzer/config_parser.py:137"
      ]
    },
    "**/*test*.py": {
      "value": "**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_integration_tests_comprehensive.py:35",
        "scripts/fix_unjustified_mocks_comprehensive.py:186"
      ]
    },
    "**/conftest.py": {
      "value": "**/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_unjustified_mocks_comprehensive.py:187"
      ]
    },
    "**/package.json": {
      "value": "**/package.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/github_analyzer/config_parser.py:138"
      ]
    },
    "**/test*.py": {
      "value": "**/test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_integration_tests_comprehensive.py:34"
      ]
    },
    "**/test_*.py": {
      "value": "**/test_*.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_collectors.py:153",
        "scripts/compliance/analyze_mocks.py:67",
        "scripts/e2e_import_fixer_comprehensive.py:120",
        "scripts/fix_unjustified_mocks_comprehensive.py:185"
      ]
    },
    "*/.pytest_cache/*": {
      "value": "*/.pytest_cache/*",
      "category": "paths",
      "locations": [
        "netra_backend/app/main.py:112"
      ]
    },
    "*/content_corpus.json": {
      "value": "*/content_corpus.json",
      "category": "paths",
      "locations": [
        "scripts/cleanup_generated_files.py:30"
      ]
    },
    "*Generated by run_review.py implementing SPEC/review.xml*": {
      "value": "*Generated by run_review.py implementing SPEC/review.xml*",
      "category": "paths",
      "locations": [
        "scripts/code_review_reporter.py:140",
        "scripts/review/report_generator.py:178"
      ]
    },
    "- This issue has occurred before (see SPEC/learnings/auth_service_staging_errors_five_whys.xml)": {
      "value": "- This issue has occurred before (see SPEC/learnings/auth_service_staging_errors_five_whys.xml)",
      "category": "paths",
      "locations": [
        "scripts/fix_staging_database_url.py:97"
      ]
    },
    ".*:\"\nfiles = list(pathlib.Path(\"netra_backend/app\").rglob(\"*.py\"))\nfiles.extend(list(pathlib.Path(\"auth_service\").rglob(\"*.py\")))\nmatches = []\nfor f in files[:100]:  # Limit for speed\n    try:\n        if \"": {
      "value": ".*:\"\nfiles = list(pathlib.Path(\"netra_backend/app\").rglob(\"*.py\"))\nfiles.extend(list(pathlib.Path(\"auth_service\").rglob(\"*.py\")))\nmatches = []\nfor f in files[:100]:  # Limit for speed\n    try:\n        if \"",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:140"
      ]
    },
    ".*_test\\.py$": {
      "value": ".*_test\\.py$",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:41"
      ]
    },
    ".git/netra-audit-config.json": {
      "value": ".git/netra-audit-config.json",
      "category": "paths",
      "locations": [
        "scripts/audit_config.py:123",
        "scripts/audit_config.py:133"
      ]
    },
    ".netra/migration_state.json": {
      "value": ".netra/migration_state.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup/migration_tracker.py:35"
      ]
    },
    ".netra/startup_status.json": {
      "value": ".netra/startup_status.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup/status_manager.py:50"
      ]
    },
    ".pytest_cache/": {
      "value": ".pytest_cache/",
      "category": "paths",
      "locations": [
        "scripts/decompose_functions.py:89"
      ]
    },
    "/**/*.py": {
      "value": "/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:59",
        "scripts/compliance/core.py:64"
      ]
    },
    "/**/*.ts": {
      "value": "/**/*.ts",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:59",
        "scripts/compliance/core.py:71"
      ]
    },
    "/**/*.tsx": {
      "value": "/**/*.tsx",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:59",
        "scripts/compliance/core.py:71"
      ]
    },
    "/**/*_test.py": {
      "value": "/**/*_test.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/mock_justification_checker.py:61"
      ]
    },
    "/**/test_*.py": {
      "value": "/**/test_*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/mock_justification_checker.py:60"
      ]
    },
    "/_next/static/chunks/webpack.js": {
      "value": "/_next/static/chunks/webpack.js",
      "category": "paths",
      "locations": [
        "scripts/gcp_health_diagnostics.py:62"
      ]
    },
    "/api/": {
      "value": "/api/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/api_gateway_coordinator.py:449",
        "netra_backend/app/middleware/security_headers_middleware.py:112",
        "scripts/scan_string_literals.py:115"
      ]
    },
    "/api/admin": {
      "value": "/api/admin",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:165",
        "netra_backend/app/middleware/transaction_middleware.py:32"
      ]
    },
    "/api/admin/": {
      "value": "/api/admin/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:84",
        "netra_backend/app/services/api_gateway/router.py:139"
      ]
    },
    "/api/admin/*": {
      "value": "/api/admin/*",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:142"
      ]
    },
    "/api/agent": {
      "value": "/api/agent",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:15"
      ]
    },
    "/api/agents/": {
      "value": "/api/agents/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:82"
      ]
    },
    "/api/agents/start": {
      "value": "/api/agents/start",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/contract_validators.py:77",
        "netra_backend/app/core/cross_service_validators/performance_validators.py:89"
      ]
    },
    "/api/auth": {
      "value": "/api/auth",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:14"
      ]
    },
    "/api/auth/callback": {
      "value": "/api/auth/callback",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:160",
        "netra_backend/app/routes/auth_routes/config_handler.py:32",
        "netra_backend/app/routes/auth_routes/oauth_validation.py:50",
        "netra_backend/app/routes/auth_routes/oauth_validation.py:52",
        "scripts/audit_oauth_gcp_logs.py:80"
      ]
    },
    "/api/auth/config": {
      "value": "/api/auth/config",
      "category": "paths",
      "locations": [
        "scripts/audit_oauth_gcp_logs.py:81"
      ]
    },
    "/api/auth/dev_login": {
      "value": "/api/auth/dev_login",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/config_handler.py:40"
      ]
    },
    "/api/auth/google/callback": {
      "value": "/api/auth/google/callback",
      "category": "paths",
      "locations": [
        "scripts/verify_oauth_redirect_uris.py:86"
      ]
    },
    "/api/auth/login": {
      "value": "/api/auth/login",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:159",
        "netra_backend/app/routes/auth_routes/config_handler.py:31",
        "scripts/audit_oauth_gcp_logs.py:79"
      ]
    },
    "/api/auth/logout": {
      "value": "/api/auth/logout",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:159",
        "netra_backend/app/routes/auth_routes/config_handler.py:31"
      ]
    },
    "/api/auth/refresh": {
      "value": "/api/auth/refresh",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:160"
      ]
    },
    "/api/auth/token": {
      "value": "/api/auth/token",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:159",
        "netra_backend/app/routes/auth_routes/config_handler.py:32"
      ]
    },
    "/api/corpus": {
      "value": "/api/corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:76",
        "netra_backend/app/middleware/transaction_middleware.py:30"
      ]
    },
    "/api/demo": {
      "value": "/api/demo",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:29"
      ]
    },
    "/api/demo/reports/": {
      "value": "/api/demo/reports/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/demo/report_generator.py:37"
      ]
    },
    "/api/external": {
      "value": "/api/external",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/error_recovery_helpers.py:58"
      ]
    },
    "/api/factory-status": {
      "value": "/api/factory-status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:31",
        "netra_backend/app/routes/factory_status_simple.py:14"
      ]
    },
    "/api/factory-status/compliance": {
      "value": "/api/factory-status/compliance",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:36"
      ]
    },
    "/api/generation": {
      "value": "/api/generation",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:50",
        "netra_backend/app/middleware/transaction_middleware.py:33"
      ]
    },
    "/api/github": {
      "value": "/api/github",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/github_analyzer.py:28"
      ]
    },
    "/api/health": {
      "value": "/api/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/contract_validators.py:88",
        "netra_backend/app/core/cross_service_validators/contract_validators.py:535",
        "netra_backend/app/core/cross_service_validators/performance_validators.py:87",
        "scripts/gcp_health_diagnostics.py:63",
        "scripts/validate_network_constants.py:118"
      ]
    },
    "/api/invoices/": {
      "value": "/api/invoices/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/billing/invoice_generator.py:152"
      ]
    },
    "/api/llm-cache": {
      "value": "/api/llm-cache",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:22"
      ]
    },
    "/api/mcp": {
      "value": "/api/mcp",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:23",
        "netra_backend/app/routes/mcp/config.py:84"
      ]
    },
    "/api/mcp-client": {
      "value": "/api/mcp-client",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:35"
      ]
    },
    "/api/mcp/": {
      "value": "/api/mcp/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:83"
      ]
    },
    "/api/mcp/ws": {
      "value": "/api/mcp/ws",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/config.py:103"
      ]
    },
    "/api/mcp/ws (MCP-specific)": {
      "value": "/api/mcp/ws (MCP-specific)",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:389"
      ]
    },
    "/api/poll": {
      "value": "/api/poll",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/degradation_strategies.py:249"
      ]
    },
    "/api/references": {
      "value": "/api/references",
      "category": "paths",
      "locations": [
        "frontend/components/ui/reference-picker.tsx:19"
      ]
    },
    "/api/supply": {
      "value": "/api/supply",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:49"
      ]
    },
    "/api/supply/compare": {
      "value": "/api/supply/compare",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/supply.py:84"
      ]
    },
    "/api/supply/enrich": {
      "value": "/api/supply/enrich",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/supply.py:71"
      ]
    },
    "/api/supply/research": {
      "value": "/api/supply/research",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/supply.py:62"
      ]
    },
    "/api/synthetic-data": {
      "value": "/api/synthetic-data",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:165",
        "netra_backend/app/middleware/transaction_middleware.py:31"
      ]
    },
    "/api/synthetic/corpus": {
      "value": "/api/synthetic/corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data_corpus.py:19"
      ]
    },
    "/api/test": {
      "value": "/api/test",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:602"
      ]
    },
    "/api/threads": {
      "value": "/api/threads",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/contract_validators.py:83",
        "netra_backend/app/core/cross_service_validators/performance_validators.py:88",
        "netra_backend/app/routes/threads_route.py:32"
      ]
    },
    "/api/tools": {
      "value": "/api/tools",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:102",
        "netra_backend/app/middleware/security_middleware.py:165"
      ]
    },
    "/api/tools/": {
      "value": "/api/tools/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:81"
      ]
    },
    "/api/users": {
      "value": "/api/users",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:21"
      ]
    },
    "/api/users/create": {
      "value": "/api/users/create",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:169"
      ]
    },
    "/api/users/me": {
      "value": "/api/users/me",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/config_handler.py:33"
      ]
    },
    "/api/users/password": {
      "value": "/api/users/password",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:169"
      ]
    },
    "/api/v1": {
      "value": "/api/v1",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:20",
        "auth_service/main.py:474"
      ]
    },
    "/api/agents": {
      "value": "/api/agents",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:132",
        "netra_backend/app/services/api_gateway/router.py:135"
      ]
    },
    "/api/database": {
      "value": "/api/database",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:39"
      ]
    },
    "/api/discovery": {
      "value": "/api/discovery",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/discovery.py:17"
      ]
    },
    "/api/example-messages": {
      "value": "/api/example-messages",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/example_messages.py:25"
      ]
    },
    "/api/status": {
      "value": "/api/status",
      "category": "paths",
      "locations": [
        "scripts/gcp_health_diagnostics.py:54"
      ]
    },
    "/api/threads/": {
      "value": "/api/threads/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:118",
        "netra_backend/app/services/api_gateway/router.py:118"
      ]
    },
    "/api/threads/[0-9a-f-]+": {
      "value": "/api/threads/[0-9a-f-]+",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:121"
      ]
    },
    "/api/users": {
      "value": "/api/users",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:104",
        "netra_backend/app/services/api_gateway/router.py:104",
        "netra_backend/app/services/api_gateway/router.py:111",
        "netra_backend/app/services/api_gateway/router.py:114"
      ]
    },
    "/api/users/*": {
      "value": "/api/users/*",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:107"
      ]
    },
    "/api/v2/agents": {
      "value": "/api/v2/agents",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/api_gateway/router.py:125",
        "netra_backend/app/services/api_gateway/router.py:128"
      ]
    },
    "/api/v2/users/{user_id}/messages": {
      "value": "/api/v2/users/{user_id}/messages",
      "category": "paths",
      "locations": [
        "scripts/demo_enhanced_categorizer.py:119"
      ]
    },
    "/openapi.json": {
      "value": "/openapi.json",
      "category": "paths",
      "locations": [
        "auth_service/main.py:210"
      ]
    },
    "/sandbox/script.py": {
      "value": "/sandbox/script.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/tools/sandboxed_interpreter.py:119"
      ]
    },
    "/tests/**/*.py": {
      "value": "/tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/mock_justification_checker.py:62"
      ]
    },
    "/": {
      "value": "/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:115"
      ]
    },
    "/v2/": {
      "value": "/v2/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:115"
      ]
    },
    "/websocket/": {
      "value": "/websocket/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:115"
      ]
    },
    "/websocket/auth": {
      "value": "/websocket/auth",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:1078"
      ]
    },
    "/websocket/validate": {
      "value": "/websocket/validate",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:1154"
      ]
    },
    "/ws/": {
      "value": "/ws/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:115"
      ]
    },
    "/ws/config": {
      "value": "/ws/config",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:355"
      ]
    },
    "/ws/health": {
      "value": "/ws/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:397"
      ]
    },
    "/ws/stats": {
      "value": "/ws/stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:587"
      ]
    },
    "/ws/test": {
      "value": "/ws/test",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:479"
      ]
    },
    "/ws/{user_id}": {
      "value": "/ws/{user_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/example_messages.py:28"
      ]
    },
    "1. Run: python scripts/dev_launcher.py": {
      "value": "1. Run: python scripts/dev_launcher.py",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:333"
      ]
    },
    "1. Run: python scripts/fix_all_import_issues.py --absolute-only": {
      "value": "1. Run: python scripts/fix_all_import_issues.py --absolute-only",
      "category": "paths",
      "locations": [
        "scripts/check_relative_imports.py:95"
      ]
    },
    "2. Run: python scripts/detect_duplicate_code.py --report-only": {
      "value": "2. Run: python scripts/detect_duplicate_code.py --report-only",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:322"
      ]
    },
    "2. Test with: python scripts/metadata_validator.py --validate-all": {
      "value": "2. Test with: python scripts/metadata_validator.py --validate-all",
      "category": "paths",
      "locations": [
        "scripts/metadata_tracking/metadata_enabler.py:70"
      ]
    },
    "2. Update SPEC/learnings/import_management.xml with new patterns": {
      "value": "2. Update SPEC/learnings/import_management.xml with new patterns",
      "category": "paths",
      "locations": [
        "scripts/import_management.py:244"
      ]
    },
    "2. View: app/tests/examples/test_tdd_workflow_demo.py": {
      "value": "2. View: app/tests/examples/test_tdd_workflow_demo.py",
      "category": "paths",
      "locations": [
        "scripts/demo_feature_flag_system.py:273"
      ]
    },
    "3. **Test Deployment**: Run `python scripts/deploy_to_gcp.py --project netra-staging --build-local --dry-run`": {
      "value": "3. **Test Deployment**: Run `python scripts/deploy_to_gcp.py --project netra-staging --build-local --dry-run`",
      "category": "paths",
      "locations": [
        "scripts/fix_deployment_logging.py:314"
      ]
    },
    "3. Consult SPEC/atomic_change_specification.xml for guidance": {
      "value": "3. Consult SPEC/atomic_change_specification.xml for guidance",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:369"
      ]
    },
    "3. Follow consolidation patterns in SPEC/learnings/websocket_consolidation.xml": {
      "value": "3. Follow consolidation patterns in SPEC/learnings/websocket_consolidation.xml",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:323"
      ]
    },
    "3. Or run: python scripts/setup_gcp_service_account.py": {
      "value": "3. Or run: python scripts/setup_gcp_service_account.py",
      "category": "paths",
      "locations": [
        "scripts/gcp_auth_config.py:110"
      ]
    },
    "4. Explore: test_framework/decorators.py for all options": {
      "value": "4. Explore: test_framework/decorators.py for all options",
      "category": "paths",
      "locations": [
        "scripts/demo_feature_flag_system.py:275"
      ]
    },
    "4. Re-run validation: python scripts/validate_type_deduplication.py": {
      "value": "4. Re-run validation: python scripts/validate_type_deduplication.py",
      "category": "paths",
      "locations": [
        "scripts/validate_type_deduplication.py:319"
      ]
    },
    "4. Run 'python scripts/metadata_validator.py --validate-all' to check existing files": {
      "value": "4. Run 'python scripts/metadata_validator.py --validate-all' to check existing files",
      "category": "paths",
      "locations": [
        "scripts/metadata_tracking/enabler.py:95"
      ]
    },
    ":/sandbox/script.py:ro": {
      "value": ":/sandbox/script.py:ro",
      "category": "paths",
      "locations": [
        "netra_backend/app/tools/sandboxed_interpreter.py:117"
      ]
    },
    "<instruction>Check index.xml for complete category listing and learning IDs</instruction>": {
      "value": "<instruction>Check index.xml for complete category listing and learning IDs</instruction>",
      "category": "paths",
      "locations": [
        "scripts/split_learnings_robust.py:114"
      ]
    },
    "<meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Architecture Health Dashboard - Netra</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>": {
      "value": "<meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Architecture Health Dashboard - Netra</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>",
      "category": "paths",
      "locations": [
        "scripts/architecture_dashboard_html.py:32"
      ]
    },
    "Agent Modification Tracking Helper\n\nThis script helps AI coding agents add or update tracking headers in modified files\naccording to the specification in SPEC/agent_tracking.xml.\n\nUsage:\n    python scripts/agent_tracking_helper.py <file_path> --agent \"Claude Code\" --model \"claude-opus-4-1\" --task-id \"conv_123\" --prompt \"Fix database query\" --changes \"Optimized query performance\"": {
      "value": "Agent Modification Tracking Helper\n\nThis script helps AI coding agents add or update tracking headers in modified files\naccording to the specification in SPEC/agent_tracking.xml.\n\nUsage:\n    python scripts/agent_tracking_helper.py <file_path> --agent \"Claude Code\" --model \"claude-opus-4-1\" --task-id \"conv_123\" --prompt \"Fix database query\" --changes \"Optimized query performance\"",
      "category": "paths",
      "locations": [
        "scripts/agent_tracking_helper.py:2"
      ]
    },
    "Agent Test Validator - Comprehensive test runner and quality validator for critical agent tests.\n\nThis module discovers, executes, and validates all agent test suites with comprehensive metrics.\nMaximum 300 lines, 8 lines per function as per SPEC/conventions.xml.": {
      "value": "Agent Test Validator - Comprehensive test runner and quality validator for critical agent tests.\n\nThis module discovers, executes, and validates all agent test suites with comprehensive metrics.\nMaximum 300 lines, 8 lines per function as per SPEC/conventions.xml.",
      "category": "paths",
      "locations": [
        "scripts/validate_agent_tests.py:2"
      ]
    },
    "Auth Service Configuration\nHandles environment variable loading with staging/production awareness\n\n**UPDATED**: Now uses auth_service's own IsolatedEnvironment for unified environment management.\nFollows SPEC/unified_environment_management.xml and SPEC/independent_services.xml for consistent \nenvironment access while maintaining complete microservice independence.": {
      "value": "Auth Service Configuration\nHandles environment variable loading with staging/production awareness\n\n**UPDATED**: Now uses auth_service's own IsolatedEnvironment for unified environment management.\nFollows SPEC/unified_environment_management.xml and SPEC/independent_services.xml for consistent \nenvironment access while maintaining complete microservice independence.",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/config.py:1"
      ]
    },
    "Code Review System Package\nImplements SPEC/review.xml for automated code quality validation.": {
      "value": "Code Review System Package\nImplements SPEC/review.xml for automated code quality validation.",
      "category": "paths",
      "locations": [
        "scripts/review/__init__.py:2"
      ]
    },
    "Configuration schemas and data models.\n\n**UPDATED**: This file has been migrated to use IsolatedEnvironment\nfor unified environment management. Follows SPEC/unified_environment_management.xml.\n\nFor new code, use:\nfrom netra_backend.app.core.configuration import unified_config_manager": {
      "value": "Configuration schemas and data models.\n\n**UPDATED**: This file has been migrated to use IsolatedEnvironment\nfor unified environment management. Follows SPEC/unified_environment_management.xml.\n\nFor new code, use:\nfrom netra_backend.app.core.configuration import unified_config_manager",
      "category": "paths",
      "locations": [
        "netra_backend/app/schemas/Config.py:1"
      ]
    },
    "Debug script for reproducing uvicorn recursion errors.\n\nThis script was moved from tests/ to scripts/ to prevent pytest from\ndiscovering it during test collection, which was causing port binding conflicts.\n\nUsage: python scripts/debug_uvicorn_recursion.py": {
      "value": "Debug script for reproducing uvicorn recursion errors.\n\nThis script was moved from tests/ to scripts/ to prevent pytest from\ndiscovering it during test collection, which was causing port binding conflicts.\n\nUsage: python scripts/debug_uvicorn_recursion.py",
      "category": "paths",
      "locations": [
        "scripts/debug_uvicorn_recursion.py:2"
      ]
    },
    "Dependency Validation Module\nValidates Python/Node.js versions and required dependencies.": {
      "value": "Dependency Validation Module\nValidates Python/Node.js versions and required dependencies.",
      "category": "paths",
      "locations": [
        "scripts/environment_validator_dependencies.py:1"
      ]
    },
    "Deploy with: python scripts/deploy_to_gcp.py --project": {
      "value": "Deploy with: python scripts/deploy_to_gcp.py --project",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:174"
      ]
    },
    "Disable: python scripts/manage_precommit.py disable --reason 'Your reason'": {
      "value": "Disable: python scripts/manage_precommit.py disable --reason 'Your reason'",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:104"
      ]
    },
    "Duplicate Code Detection Script\nPrevents regression of duplicate code patterns identified in WebSocket consolidation\n\nUsage:\n    python scripts/detect_duplicate_code.py [--threshold 0.8] [--report-only]\n    \nThis script detects:\n- Duplicate class names across files\n- Similar function implementations\n- Multiple wrappers for same functionality\n- Parallel implementations of same feature": {
      "value": "Duplicate Code Detection Script\nPrevents regression of duplicate code patterns identified in WebSocket consolidation\n\nUsage:\n    python scripts/detect_duplicate_code.py [--threshold 0.8] [--report-only]\n    \nThis script detects:\n- Duplicate class names across files\n- Similar function implementations\n- Multiple wrappers for same functionality\n- Parallel implementations of same feature",
      "category": "paths",
      "locations": [
        "scripts/detect_duplicate_code.py:2"
      ]
    },
    "Enable:  python scripts/manage_precommit.py enable": {
      "value": "Enable:  python scripts/manage_precommit.py enable",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:103"
      ]
    },
    "Enhanced staging deployment script with comprehensive validation.\n\nThis script combines the existing deploy_to_gcp.py functionality with \nadditional staging-specific validation and fixes.\n\nUsage:\n    python scripts/deploy_staging_with_validation.py [--fix-issues] [--skip-build]": {
      "value": "Enhanced staging deployment script with comprehensive validation.\n\nThis script combines the existing deploy_to_gcp.py functionality with \nadditional staging-specific validation and fixes.\n\nUsage:\n    python scripts/deploy_staging_with_validation.py [--fix-issues] [--skip-build]",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_validation.py:2"
      ]
    },
    "Example: python scripts/deploy_to_gcp.py --project {} --build-local": {
      "value": "Example: python scripts/deploy_to_gcp.py --project {} --build-local",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1002"
      ]
    },
    "Examples:\n  # Scan with default settings\n  python scripts/scan_string_literals.py\n  \n  # Scan specific directories\n  python scripts/scan_string_literals.py --dirs netra_backend/app auth_service\n  \n  # Include test files in main index\n  python scripts/scan_string_literals.py --include-tests\n  \n  # Custom output location\n  python scripts/scan_string_literals.py --output custom_index.json": {
      "value": "Examples:\n  # Scan with default settings\n  python scripts/scan_string_literals.py\n  \n  # Scan specific directories\n  python scripts/scan_string_literals.py --dirs netra_backend/app auth_service\n  \n  # Include test files in main index\n  python scripts/scan_string_literals.py --include-tests\n  \n  # Custom output location\n  python scripts/scan_string_literals.py --output custom_index.json",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:420"
      ]
    },
    "Examples:\n  Default deployment (fast, no checks):\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n    \n  With pre-deployment checks:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local --run-checks\n    \n  Cloud Build (slower):\n    python scripts/deploy_to_gcp.py --project netra-staging\n    \nSee SPEC/gcp_deployment.xml for detailed guidelines.": {
      "value": "Examples:\n  Default deployment (fast, no checks):\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n    \n  With pre-deployment checks:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local --run-checks\n    \n  Cloud Build (slower):\n    python scripts/deploy_to_gcp.py --project netra-staging\n    \nSee SPEC/gcp_deployment.xml for detailed guidelines.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:970"
      ]
    },
    "Examples:\n  Default deployment (with checks):\n    python scripts/deploy_staging_with_sa.py\n    \n  Quick deployment (no checks):\n    python scripts/deploy_staging_with_sa.py --no-checks\n    \n  Specify service account key:\n    python scripts/deploy_staging_with_sa.py --key path/to/key.json": {
      "value": "Examples:\n  Default deployment (with checks):\n    python scripts/deploy_staging_with_sa.py\n    \n  Quick deployment (no checks):\n    python scripts/deploy_staging_with_sa.py --no-checks\n    \n  Specify service account key:\n    python scripts/deploy_staging_with_sa.py --key path/to/key.json",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_sa.py:59"
      ]
    },
    "Examples:\n  python scripts/import_management.py check       # Check for import issues\n  python scripts/import_management.py fix         # Fix import issues\n  python scripts/import_management.py verify      # Verify critical imports\n  python scripts/import_management.py all         # Run complete workflow\n  python scripts/import_management.py fix --dry-run  # Preview fixes": {
      "value": "Examples:\n  python scripts/import_management.py check       # Check for import issues\n  python scripts/import_management.py fix         # Fix import issues\n  python scripts/import_management.py verify      # Verify critical imports\n  python scripts/import_management.py all         # Run complete workflow\n  python scripts/import_management.py fix --dry-run  # Preview fixes",
      "category": "paths",
      "locations": [
        "scripts/import_management.py:300"
      ]
    },
    "Examples:\n  python scripts/team_updates.py                    # Last 24 hours\n  python scripts/team_updates.py --time-frame=last_hour\n  python scripts/team_updates.py --time-frame=last_week --output=report.md\n  \nTime frames:\n  last_hour     - Changes in the last hour\n  last_5_hours  - Changes in the last 5 hours  \n  last_day      - Changes in the last 24 hours (default)\n  last_week     - Changes in the last week\n  last_month    - Changes in the last month": {
      "value": "Examples:\n  python scripts/team_updates.py                    # Last 24 hours\n  python scripts/team_updates.py --time-frame=last_hour\n  python scripts/team_updates.py --time-frame=last_week --output=report.md\n  \nTime frames:\n  last_hour     - Changes in the last hour\n  last_5_hours  - Changes in the last 5 hours  \n  last_day      - Changes in the last 24 hours (default)\n  last_week     - Changes in the last week\n  last_month    - Changes in the last month",
      "category": "paths",
      "locations": [
        "scripts/team_updates.py:20"
      ]
    },
    "Examples:\n  python scripts/unified_import_manager.py check        # Check compliance only\n  python scripts/unified_import_manager.py fix         # Fix issues automatically  \n  python scripts/unified_import_manager.py report      # Generate detailed report\n  python scripts/unified_import_manager.py all         # Check, fix, and report\n  python scripts/unified_import_manager.py precommit   # Pre-commit hook mode": {
      "value": "Examples:\n  python scripts/unified_import_manager.py check        # Check compliance only\n  python scripts/unified_import_manager.py fix         # Fix issues automatically  \n  python scripts/unified_import_manager.py report      # Generate detailed report\n  python scripts/unified_import_manager.py all         # Check, fix, and report\n  python scripts/unified_import_manager.py precommit   # Pre-commit hook mode",
      "category": "paths",
      "locations": [
        "scripts/unified_import_manager.py:589"
      ]
    },
    "Examples:\n  python scripts/validate_staging_deployment.py\n  python scripts/validate_staging_deployment.py --verbose\n  python scripts/validate_staging_deployment.py --json\n  python scripts/validate_staging_deployment.py --no-comprehensive\n  python scripts/validate_staging_deployment.py --project netra-staging --verbose": {
      "value": "Examples:\n  python scripts/validate_staging_deployment.py\n  python scripts/validate_staging_deployment.py --verbose\n  python scripts/validate_staging_deployment.py --json\n  python scripts/validate_staging_deployment.py --no-comprehensive\n  python scripts/validate_staging_deployment.py --project netra-staging --verbose",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:546"
      ]
    },
    "For more information, see SPEC/testing.xml Mock-Real Spectrum section.": {
      "value": "For more information, see SPEC/testing.xml Mock-Real Spectrum section.",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_real_spectrum_compliance.py:283"
      ]
    },
    "GCP Deployment Script for Netra Apex Platform\nDeploys all three services (backend, auth, frontend) to Google Cloud Run\n\nIMPORTANT: This is the OFFICIAL deployment script. Do NOT create new deployment scripts.\nUse this script with appropriate flags for all GCP staging deployments.\n\nQuick Start:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n\nSee SPEC/gcp_deployment.xml for comprehensive deployment guidelines.": {
      "value": "GCP Deployment Script for Netra Apex Platform\nDeploys all three services (backend, auth, frontend) to Google Cloud Run\n\nIMPORTANT: This is the OFFICIAL deployment script. Do NOT create new deployment scripts.\nUse this script with appropriate flags for all GCP staging deployments.\n\nQuick Start:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n\nSee SPEC/gcp_deployment.xml for comprehensive deployment guidelines.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:2"
      ]
    },
    "Generate OpenAPI/Swagger specification from FastAPI app and sync to ReadMe.\n\nThis script:\n1. Loads the FastAPI application\n2. Extracts the OpenAPI specification\n3. Saves it to a JSON file\n4. Optionally syncs it to ReadMe documentation platform\n\nUsage:\n    python generate_openapi_spec.py [--sync-readme] [--readme-api-key KEY] [--readme-version VERSION]": {
      "value": "Generate OpenAPI/Swagger specification from FastAPI app and sync to ReadMe.\n\nThis script:\n1. Loads the FastAPI application\n2. Extracts the OpenAPI specification\n3. Saves it to a JSON file\n4. Optionally syncs it to ReadMe documentation platform\n\nUsage:\n    python generate_openapi_spec.py [--sync-readme] [--readme-api-key KEY] [--readme-version VERSION]",
      "category": "paths",
      "locations": [
        "scripts/generate_openapi_spec.py:2"
      ]
    },
    "High number of import errors. Run 'python scripts/import_management.py fix-all'": {
      "value": "High number of import errors. Run 'python scripts/import_management.py fix-all'",
      "category": "paths",
      "locations": [
        "scripts/import_management.py:202"
      ]
    },
    "JWT Secret Consistency Validation Script\n\nThis script validates that both the auth service and backend service\nuse the same JWT secret for token validation consistency.\n\nUsage:\n    python scripts/validate_jwt_consistency.py": {
      "value": "JWT Secret Consistency Validation Script\n\nThis script validates that both the auth service and backend service\nuse the same JWT secret for token validation consistency.\n\nUsage:\n    python scripts/validate_jwt_consistency.py",
      "category": "paths",
      "locations": [
        "scripts/validate_jwt_consistency.py:2"
      ]
    },
    "Main FastAPI application module.\nEntry point for the Netra AI Optimization Platform.\n\nüî¥ CRITICAL AUTH ARCHITECTURE:\n- This is the MAIN BACKEND service, NOT the auth service\n- Auth service runs SEPARATELY on port 8001 (see app/auth/auth_service.py)\n- This backend ONLY uses auth_integration to connect to auth service\n- NEVER implement authentication logic here\n- All auth operations go through auth_client\n\nSee: app/auth_integration/CRITICAL_AUTH_ARCHITECTURE.md": {
      "value": "Main FastAPI application module.\nEntry point for the Netra AI Optimization Platform.\n\nüî¥ CRITICAL AUTH ARCHITECTURE:\n- This is the MAIN BACKEND service, NOT the auth service\n- Auth service runs SEPARATELY on port 8001 (see app/auth/auth_service.py)\n- This backend ONLY uses auth_integration to connect to auth service\n- NEVER implement authentication logic here\n- All auth operations go through auth_client\n\nSee: app/auth_integration/CRITICAL_AUTH_ARCHITECTURE.md",
      "category": "paths",
      "locations": [
        "netra_backend/app/main.py:1"
      ]
    },
    "Migrate staging PostgreSQL secrets from URL format to individual variables.\n\nThis script creates/updates individual PostgreSQL secrets in GCP Secret Manager\nfor staging environment to use individual variables instead of DATABASE_URL.\n\nUsage:\n    python scripts/migrate_staging_postgres_secrets.py": {
      "value": "Migrate staging PostgreSQL secrets from URL format to individual variables.\n\nThis script creates/updates individual PostgreSQL secrets in GCP Secret Manager\nfor staging environment to use individual variables instead of DATABASE_URL.\n\nUsage:\n    python scripts/migrate_staging_postgres_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_staging_postgres_secrets.py:2"
      ]
    },
    "Network Constants Validation Script\n\nValidates the new centralized network configuration module.\nBusiness Value: Platform/Internal - Configuration Validation - Ensures consistent network\nconfiguration across all environments and services.\n\nUsage:\n    python scripts/validate_network_constants.py\n    python scripts/validate_network_constants.py --environment production": {
      "value": "Network Constants Validation Script\n\nValidates the new centralized network configuration module.\nBusiness Value: Platform/Internal - Configuration Validation - Ensures consistent network\nconfiguration across all environments and services.\n\nUsage:\n    python scripts/validate_network_constants.py\n    python scripts/validate_network_constants.py --environment production",
      "category": "paths",
      "locations": [
        "scripts/validate_network_constants.py:2"
      ]
    },
    "Node.js not found. Please install Node.js 18+ from https://nodejs.org/": {
      "value": "Node.js not found. Please install Node.js 18+ from https://nodejs.org/",
      "category": "paths",
      "locations": [
        "scripts/env_checker.py:116"
      ]
    },
    "Output file path (default: SPEC/generated/string_literals.json)": {
      "value": "Output file path (default: SPEC/generated/string_literals.json)",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:444"
      ]
    },
    "Path to service account JSON key file (default: config/netra-staging-7a1059b7cf26.json)": {
      "value": "Path to service account JSON key file (default: config/netra-staging-7a1059b7cf26.json)",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:995"
      ]
    },
    "Pre-commit hook for duplicate code detection.\nIntegrates with existing detect_duplicate_code.py for fast incremental checks.\n\nUsage:\n    python scripts/precommit_duplicate_detector.py [files...]\n    \nThis script:\n1. Performs fast duplicate detection on changed files\n2. Checks against known duplicate patterns\n3. Integrates with existing architecture compliance": {
      "value": "Pre-commit hook for duplicate code detection.\nIntegrates with existing detect_duplicate_code.py for fast incremental checks.\n\nUsage:\n    python scripts/precommit_duplicate_detector.py [files...]\n    \nThis script:\n1. Performs fast duplicate detection on changed files\n2. Checks against known duplicate patterns\n3. Integrates with existing architecture compliance",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:2"
      ]
    },
    "Pre-commit hook script to prevent numbered file naming patterns.\n\nThis script prevents files with non-semantic numbered suffixes like:\n- _1.py, _2.py, _3.py (arbitrary splits)\n- _11_20.py (range patterns)\n- _core_1.py, _utilities_2.py (numbered variants)\n\nUsage:\n    python scripts/prevent_numbered_files.py [files...]\n    \nReturns:\n    0 if all files pass validation\n    1 if any files have problematic naming patterns": {
      "value": "Pre-commit hook script to prevent numbered file naming patterns.\n\nThis script prevents files with non-semantic numbered suffixes like:\n- _1.py, _2.py, _3.py (arbitrary splits)\n- _11_20.py (range patterns)\n- _core_1.py, _utilities_2.py (numbered variants)\n\nUsage:\n    python scripts/prevent_numbered_files.py [files...]\n    \nReturns:\n    0 if all files pass validation\n    1 if any files have problematic naming patterns",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:2"
      ]
    },
    "Review SPEC/learnings/websocket_consolidation.xml for consolidation strategy.": {
      "value": "Review SPEC/learnings/websocket_consolidation.xml for consolidation strategy.",
      "category": "paths",
      "locations": [
        "scripts/detect_duplicate_code.py:255"
      ]
    },
    "Run 'python scripts/check_e2e_imports.py' to verify": {
      "value": "Run 'python scripts/check_e2e_imports.py' to verify",
      "category": "paths",
      "locations": [
        "scripts/fix_e2e_imports.py:424"
      ]
    },
    "Run 'python scripts/fix_netra_backend_imports.py' to automatically fix these issues": {
      "value": "Run 'python scripts/fix_netra_backend_imports.py' to automatically fix these issues",
      "category": "paths",
      "locations": [
        "scripts/check_netra_backend_imports.py:347"
      ]
    },
    "Run 'python scripts/import_management.py fix' to fix them": {
      "value": "Run 'python scripts/import_management.py fix' to fix them",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:100"
      ]
    },
    "Run 'python scripts/scan_string_literals.py' first to generate the index.": {
      "value": "Run 'python scripts/scan_string_literals.py' first to generate the index.",
      "category": "paths",
      "locations": [
        "scripts/query_string_literals.py:26"
      ]
    },
    "Run 'python scripts/unified_import_manager.py fix' to automatically fix import issues": {
      "value": "Run 'python scripts/unified_import_manager.py fix' to automatically fix import issues",
      "category": "paths",
      "locations": [
        "scripts/unified_import_manager.py:465"
      ]
    },
    "Run: python scripts/fix_all_import_issues.py --absolute-only": {
      "value": "Run: python scripts/fix_all_import_issues.py --absolute-only",
      "category": "paths",
      "locations": [
        "scripts/check_relative_imports.py:79"
      ]
    },
    "Run: python scripts/fix_frontend_test_imports.py": {
      "value": "Run: python scripts/fix_frontend_test_imports.py",
      "category": "paths",
      "locations": [
        "scripts/validate_frontend_tests.py:213"
      ]
    },
    "Run: python scripts/fix_websocket_imports.py": {
      "value": "Run: python scripts/fix_websocket_imports.py",
      "category": "paths",
      "locations": [
        "scripts/detect_duplicate_code.py:251"
      ]
    },
    "SPEC/*.xml": {
      "value": "SPEC/*.xml",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:132",
        "scripts/unified_import_manager.py:400"
      ]
    },
    "SPEC/gcp_deployment.xml": {
      "value": "SPEC/gcp_deployment.xml",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:320"
      ]
    },
    "SPEC/generated/string_literals.json": {
      "value": "SPEC/generated/string_literals.json",
      "category": "paths",
      "locations": [
        "scripts/demo_enhanced_categorizer.py:33",
        "scripts/query_string_literals.py:17",
        "scripts/query_string_literals.py:134",
        "scripts/scan_string_literals.py:443"
      ]
    },
    "SPEC/staging_environment.xml": {
      "value": "SPEC/staging_environment.xml",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:319"
      ]
    },
    "Secret loader for auth service.\nHandles loading secrets from environment variables and Google Secret Manager.\nEnsures consistency with main backend service.\n\n**UPDATED**: Now uses auth_service's own IsolatedEnvironment for unified environment management.\nFollows SPEC/unified_environment_management.xml and SPEC/independent_services.xml for consistent \nenvironment access while maintaining complete microservice independence.": {
      "value": "Secret loader for auth service.\nHandles loading secrets from environment variables and Google Secret Manager.\nEnsures consistency with main backend service.\n\n**UPDATED**: Now uses auth_service's own IsolatedEnvironment for unified environment management.\nFollows SPEC/unified_environment_management.xml and SPEC/independent_services.xml for consistent \nenvironment access while maintaining complete microservice independence.",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/secret_loader.py:1"
      ]
    },
    "See SPEC/gcp_deployment.xml for deployment guidelines.": {
      "value": "See SPEC/gcp_deployment.xml for deployment guidelines.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:269"
      ]
    },
    "Status:  python scripts/manage_precommit.py status": {
      "value": "Status:  python scripts/manage_precommit.py status",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:105"
      ]
    },
    "To re-enable: python scripts/manage_precommit.py enable": {
      "value": "To re-enable: python scripts/manage_precommit.py enable",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:72"
      ]
    },
    "Update staging secrets for GCP deployment.\nThis script updates critical secrets in GCP Secret Manager for staging environment.\n\nUsage:\n    python scripts/update_staging_secrets.py --check  # Check current values\n    python scripts/update_staging_secrets.py --update # Update secrets": {
      "value": "Update staging secrets for GCP deployment.\nThis script updates critical secrets in GCP Secret Manager for staging environment.\n\nUsage:\n    python scripts/update_staging_secrets.py --check  # Check current values\n    python scripts/update_staging_secrets.py --update # Update secrets",
      "category": "paths",
      "locations": [
        "scripts/update_staging_secrets.py:2"
      ]
    },
    "Usage: python scripts/deduplicate_types.py [--dry-run|--migrate|--validate|--clean]": {
      "value": "Usage: python scripts/deduplicate_types.py [--dry-run|--migrate|--validate|--clean]",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:386",
        "scripts/deduplicate_types.py:439"
      ]
    },
    "Usage: python scripts/precommit_duplicate_detector.py [files...]": {
      "value": "Usage: python scripts/precommit_duplicate_detector.py [files...]",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:335"
      ]
    },
    "Validation script for Mock-Real Spectrum compliance.\n\nThis script validates that database tests comply with testing.xml Mock-Real Spectrum\nrequirements, ensuring proper use of L3 real containers vs justified L1 mocks.\n\nUsage:\n    python scripts/validate_mock_real_spectrum_compliance.py": {
      "value": "Validation script for Mock-Real Spectrum compliance.\n\nThis script validates that database tests comply with testing.xml Mock-Real Spectrum\nrequirements, ensuring proper use of L3 real containers vs justified L1 mocks.\n\nUsage:\n    python scripts/validate_mock_real_spectrum_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_real_spectrum_compliance.py:1"
      ]
    },
    "[bold green]Setup Complete![/bold green]\n\nNext steps:\n1. Edit .act.secrets with your secrets\n2. Run: python scripts/act_wrapper.py list\n3. Test: python scripts/act_wrapper.py run test-smoke\n\nDocumentation: docs/ACT_LOCAL_TESTING_GUIDE.md": {
      "value": "[bold green]Setup Complete![/bold green]\n\nNext steps:\n1. Edit .act.secrets with your secrets\n2. Run: python scripts/act_wrapper.py list\n3. Test: python scripts/act_wrapper.py run test-smoke\n\nDocumentation: docs/ACT_LOCAL_TESTING_GUIDE.md",
      "category": "paths",
      "locations": [
        "scripts/setup_act.py:201"
      ]
    },
    "[green]‚úì[/green] Configuration exported to oauth_redirect_uris.json": {
      "value": "[green]‚úì[/green] Configuration exported to oauth_redirect_uris.json",
      "category": "paths",
      "locations": [
        "scripts/verify_oauth_redirect_uris.py:144"
      ]
    },
    "[yellow]Please ensure service account key is at: config/netra-staging-7a1059b7cf26.json[/yellow]": {
      "value": "[yellow]Please ensure service account key is at: config/netra-staging-7a1059b7cf26.json[/yellow]",
      "category": "paths",
      "locations": [
        "scripts/audit_oauth_gcp_logs.py:53"
      ]
    },
    "\\.json$": {
      "value": "\\.json$",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/git_diff_analyzer.py:196"
      ]
    },
    "_(core|utilities|helpers|fixtures|services|managers)_\\d+\\.py$": {
      "value": "_(core|utilities|helpers|fixtures|services|managers)_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:106"
      ]
    },
    "_\\d+\\.py$": {
      "value": "_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:26",
        "scripts/prevent_numbered_files.py:101",
        "scripts/prevent_numbered_files.py:102"
      ]
    },
    "_\\d+\\.py$|_v\\d+\\.py$": {
      "value": "_\\d+\\.py$|_v\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:96"
      ]
    },
    "_\\d+_\\d+\\.py$": {
      "value": "_\\d+_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:27"
      ]
    },
    "_backup\\.py$": {
      "value": "_backup\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:39"
      ]
    },
    "_backup\\.xml$": {
      "value": "_backup\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:17"
      ]
    },
    "_batch_\\d+\\.py$": {
      "value": "_batch_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:35",
        "scripts/prevent_numbered_files.py:110"
      ]
    },
    "_core_\\d+\\.py$": {
      "value": "_core_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:29"
      ]
    },
    "_deprecated\\.xml$": {
      "value": "_deprecated\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:18"
      ]
    },
    "_enhanced\\.py$": {
      "value": "_enhanced\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:37"
      ]
    },
    "_fixed\\.py$": {
      "value": "_fixed\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:38"
      ]
    },
    "_fixtures_\\d+\\.py$": {
      "value": "_fixtures_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:32"
      ]
    },
    "_helpers_\\d+\\.py$": {
      "value": "_helpers_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:31"
      ]
    },
    "_legacy\\.xml$": {
      "value": "_legacy\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:19"
      ]
    },
    "_managers_\\d+\\.py$": {
      "value": "_managers_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:34"
      ]
    },
    "_new\\.py$": {
      "value": "_new\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:41"
      ]
    },
    "_old\\.py$": {
      "value": "_old\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:40"
      ]
    },
    "_old\\.xml$": {
      "value": "_old\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:16"
      ]
    },
    "_services_\\d+\\.py$": {
      "value": "_services_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:33"
      ]
    },
    "_temp\\.py$": {
      "value": "_temp\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:42"
      ]
    },
    "_tmp\\.py$": {
      "value": "_tmp\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:43"
      ]
    },
    "_utilities_\\d+\\.py$": {
      "value": "_utilities_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:30"
      ]
    },
    "_v\\d+\\.py$": {
      "value": "_v\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:50"
      ]
    },
    "app/**/*.py": {
      "value": "app/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_metrics.py:243",
        "scripts/architecture_scanner.py:74",
        "scripts/architecture_scanner.py:117",
        "scripts/architecture_scanner.py:181",
        "scripts/architecture_scanner_helpers.py:152",
        "scripts/architecture_scanner_quality.py:26",
        "scripts/architecture_scanner_quality.py:71",
        "scripts/architecture_scanner_quality.py:114",
        "scripts/auto_decompose_functions.py:372"
      ]
    },
    "app/agents/*.py": {
      "value": "app/agents/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:154"
      ]
    },
    "app/agents/state.py": {
      "value": "app/agents/state.py",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:64"
      ]
    },
    "app/agents/synthetic_data_progress_tracker.py": {
      "value": "app/agents/synthetic_data_progress_tracker.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:41"
      ]
    },
    "app/chat/page.tsx": {
      "value": "app/chat/page.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:287"
      ]
    },
    "app/core/*.py": {
      "value": "app/core/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:155"
      ]
    },
    "app/core/degradation_strategies.py": {
      "value": "app/core/degradation_strategies.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:40"
      ]
    },
    "app/db/*.py": {
      "value": "app/db/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:153"
      ]
    },
    "app/main.py": {
      "value": "app/main.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_collectors.py:124"
      ]
    },
    "app/monitoring/alert_manager_core.py": {
      "value": "app/monitoring/alert_manager_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_monitoring_violations.py:13"
      ]
    },
    "app/monitoring/alert_notifications.py": {
      "value": "app/monitoring/alert_notifications.py",
      "category": "paths",
      "locations": [
        "scripts/fix_monitoring_violations.py:75"
      ]
    },
    "app/page.tsx": {
      "value": "app/page.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:286"
      ]
    },
    "app/routes/utils/thread_title_generator.py": {
      "value": "app/routes/utils/thread_title_generator.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:39"
      ]
    },
    "app/routes/websockets.py": {
      "value": "app/routes/websockets.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:114",
        "scripts/review/spec_checker.py:45"
      ]
    },
    "app/schemas.py": {
      "value": "app/schemas.py",
      "category": "paths",
      "locations": [
        "scripts/generate-types.py:7"
      ]
    },
    "app/schemas/WebSocket.py": {
      "value": "app/schemas/WebSocket.py",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:66"
      ]
    },
    "app/schemas/websocket_types.py": {
      "value": "app/schemas/websocket_types.py",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:65"
      ]
    },
    "app/services/admin.py": {
      "value": "app/services/admin.py",
      "category": "paths",
      "locations": [
        "scripts/claude_audit_analyzer.py:400"
      ]
    },
    "app/services/agent_service.py": {
      "value": "app/services/agent_service.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:115",
        "scripts/fix_missing_functions.py:12",
        "scripts/review/spec_checker.py:46"
      ]
    },
    "app/services/security_service.py": {
      "value": "app/services/security_service.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:117",
        "scripts/review/spec_checker.py:48"
      ]
    },
    "app/services/user.py": {
      "value": "app/services/user.py",
      "category": "paths",
      "locations": [
        "scripts/claude_audit_analyzer.py:399"
      ]
    },
    "app/tests/**/*test*.py": {
      "value": "app/tests/**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:129",
        "scripts/fix_import_issues.py:137",
        "scripts/fix_import_issues.py:144"
      ]
    },
    "app/tests/agents/test_supervisor_consolidated_comprehensive.py": {
      "value": "app/tests/agents/test_supervisor_consolidated_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:203"
      ]
    },
    "app/tests/core/test_async_utils.py": {
      "value": "app/tests/core/test_async_utils.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:206"
      ]
    },
    "app/tests/core/test_error_handling.py": {
      "value": "app/tests/core/test_error_handling.py",
      "category": "paths",
      "locations": [
        "scripts/benchmark_optimization.py:75"
      ]
    },
    "app/tests/core/test_missing_tests_11_30.py": {
      "value": "app/tests/core/test_missing_tests_11_30.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:206"
      ]
    },
    "app/tests/performance/test_agent_load_stress.py": {
      "value": "app/tests/performance/test_agent_load_stress.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:35"
      ]
    },
    "app/tests/performance/test_benchmark_metrics.py": {
      "value": "app/tests/performance/test_benchmark_metrics.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:24"
      ]
    },
    "app/tests/performance/test_concurrent_processing.py": {
      "value": "app/tests/performance/test_concurrent_processing.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:26"
      ]
    },
    "app/tests/performance/test_corpus_generation_perf.py": {
      "value": "app/tests/performance/test_corpus_generation_perf.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:33"
      ]
    },
    "app/tests/performance/test_database_performance.py": {
      "value": "app/tests/performance/test_database_performance.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:25"
      ]
    },
    "app/tests/performance/test_large_scale_generation.py": {
      "value": "app/tests/performance/test_large_scale_generation.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:34"
      ]
    },
    "app/tests/routes/test_health_route.py": {
      "value": "app/tests/routes/test_health_route.py",
      "category": "paths",
      "locations": [
        "scripts/benchmark_optimization.py:74"
      ]
    },
    "app/tests/services/test_quality_gate_service_comprehensive.py": {
      "value": "app/tests/services/test_quality_gate_service_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:205"
      ]
    },
    "app/tests/services/test_tool_permission_service_comprehensive.py": {
      "value": "app/tests/services/test_tool_permission_service_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:204"
      ]
    },
    "app/utils/helpers.py": {
      "value": "app/utils/helpers.py",
      "category": "paths",
      "locations": [
        "scripts/claude_audit_analyzer.py:413"
      ]
    },
    "app/websocket/*.py": {
      "value": "app/websocket/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:152"
      ]
    },
    "app/ws_manager.py": {
      "value": "app/ws_manager.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:114",
        "scripts/review/spec_checker.py:45",
        "scripts/websocket_coherence_review.py:16"
      ]
    },
    "auth_service/tests/**/*.py": {
      "value": "auth_service/tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:172"
      ]
    },
    "auth_service/tests/**/*test*.py": {
      "value": "auth_service/tests/**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:131"
      ]
    },
    "background_jobs/__init__.py": {
      "value": "background_jobs/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:224"
      ]
    },
    "caching/__init__.py": {
      "value": "caching/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:229"
      ]
    },
    "cat SPEC/learnings/import_management.xml": {
      "value": "cat SPEC/learnings/import_management.xml",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:166"
      ]
    },
    "components/chat/MainChat.tsx": {
      "value": "components/chat/MainChat.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:288"
      ]
    },
    "config/audit.json": {
      "value": "config/audit.json",
      "category": "paths",
      "locations": [
        "scripts/audit_config.py:124"
      ]
    },
    "config\\.json": {
      "value": "config\\.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:30"
      ]
    },
    "dev_launcher/secret_loader.py": {
      "value": "dev_launcher/secret_loader.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:250"
      ]
    },
    "discovery/__init__.py": {
      "value": "discovery/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:239"
      ]
    },
    "frontend/**/*.test.py": {
      "value": "frontend/**/*.test.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:173"
      ]
    },
    "frontend/**/*.ts": {
      "value": "frontend/**/*.ts",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_scanner.py:140",
        "scripts/architecture_scanner_helpers.py:154",
        "scripts/auto_split_files.py:300",
        "scripts/boundary_enforcer_core_types.py:61",
        "scripts/boundary_enforcer_type_checks.py:74",
        "scripts/create_enforcement_tools.py:98",
        "scripts/validate_type_deduplication.py:133"
      ]
    },
    "frontend/**/*.tsx": {
      "value": "frontend/**/*.tsx",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_scanner.py:140",
        "scripts/architecture_scanner_helpers.py:153",
        "scripts/auto_split_files.py:300",
        "scripts/boundary_enforcer_core_types.py:60",
        "scripts/boundary_enforcer_type_checks.py:74",
        "scripts/create_enforcement_tools.py:98"
      ]
    },
    "frontend/__tests__/utils/test-helpers.tsx": {
      "value": "frontend/__tests__/utils/test-helpers.tsx",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:29",
        "scripts/consolidate_types.py:30",
        "scripts/consolidate_types.py:31",
        "scripts/consolidate_types.py:32",
        "scripts/consolidate_types.py:33",
        "scripts/consolidate_types.py:34",
        "scripts/consolidate_types.py:35",
        "scripts/consolidate_types.py:36",
        "scripts/consolidate_types.py:37",
        "scripts/consolidate_types.py:38"
      ]
    },
    "frontend/package.json": {
      "value": "frontend/package.json",
      "category": "paths",
      "locations": [
        "scripts/dependency_scanner.py:111",
        "scripts/diagnostic_helpers.py:129",
        "scripts/startup_diagnostics.py:93"
      ]
    },
    "frontend/types/agent.ts": {
      "value": "frontend/types/agent.ts",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:67"
      ]
    },
    "frontend/types/backend_schema_auto_generated.ts": {
      "value": "frontend/types/backend_schema_auto_generated.ts",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/schema_sync/utils.py:116",
        "scripts/generate_frontend_types.py:30",
        "scripts/schema_sync.py:147"
      ]
    },
    "frontend/types/chat.ts": {
      "value": "frontend/types/chat.ts",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:68"
      ]
    },
    "frontend/types/domains/agents.ts": {
      "value": "frontend/types/domains/agents.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:58"
      ]
    },
    "frontend/types/domains/messages.ts": {
      "value": "frontend/types/domains/messages.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:59"
      ]
    },
    "frontend/types/domains/threads.ts": {
      "value": "frontend/types/domains/threads.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:55",
        "scripts/consolidate_types.py:56",
        "scripts/consolidate_types.py:57"
      ]
    },
    "frontend/types/domains/websocket.ts": {
      "value": "frontend/types/domains/websocket.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:43",
        "scripts/consolidate_types.py:44",
        "scripts/consolidate_types.py:45"
      ]
    },
    "frontend/types/shared/base.ts": {
      "value": "frontend/types/shared/base.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:48",
        "scripts/consolidate_types.py:49",
        "scripts/consolidate_types.py:50",
        "scripts/consolidate_types.py:51",
        "scripts/consolidate_types.py:52"
      ]
    },
    "frontend/types/store-types.ts": {
      "value": "frontend/types/store-types.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:62",
        "scripts/consolidate_types.py:63",
        "scripts/consolidate_types.py:64",
        "scripts/consolidate_types.py:65",
        "scripts/consolidate_types.py:66"
      ]
    },
    "grep -r --include='*.py' '^def .*):$' app/ | head -20": {
      "value": "grep -r --include='*.py' '^def .*):$' app/ | head -20",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:88"
      ]
    },
    "grep -r --include='*.py' 'except:' app/ | head -10": {
      "value": "grep -r --include='*.py' 'except:' app/ | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:104"
      ]
    },
    "grep -r --include='*.py' 'f\".*SELECT\\|f\".*INSERT\\|f\".*UPDATE\\|f\".*DELETE' app/ | head -5": {
      "value": "grep -r --include='*.py' 'f\".*SELECT\\|f\".*INSERT\\|f\".*UPDATE\\|f\".*DELETE' app/ | head -5",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:210",
        "scripts/review/security_checker.py:63"
      ]
    },
    "grep -r --include='*.py' 'for .* in .*:' app/ | grep -A 2 'db\\|query\\|select' | head -10": {
      "value": "grep -r --include='*.py' 'for .* in .*:' app/ | grep -A 2 'db\\|query\\|select' | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:161",
        "scripts/review/performance_checker.py:27"
      ]
    },
    "grep -r --include='*.py' --include='*.ts' --include='*.tsx' 'TODO\\|FIXME' . | head -20": {
      "value": "grep -r --include='*.py' --include='*.ts' --include='*.tsx' 'TODO\\|FIXME' . | head -20",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:124",
        "scripts/review/ai_detector.py:131"
      ]
    },
    "grep -r --include='*.ts' --include='*.tsx' ': any' frontend/types/ | head -10": {
      "value": "grep -r --include='*.ts' --include='*.tsx' ': any' frontend/types/ | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:79"
      ]
    },
    "grep -r --include='*.ts' --include='*.tsx' '\\.then(' frontend/ | grep -v '\\.catch(' | head -10": {
      "value": "grep -r --include='*.ts' --include='*.tsx' '\\.then(' frontend/ | grep -v '\\.catch(' | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:113",
        "scripts/review/ai_detector.py:117"
      ]
    },
    "grep -r --include='*.ts' --include='*.tsx' 'console\\.log' frontend/ | head -10": {
      "value": "grep -r --include='*.ts' --include='*.tsx' 'console\\.log' frontend/ | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:133"
      ]
    },
    "logs/emergency_report.json": {
      "value": "logs/emergency_report.json",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:196"
      ]
    },
    "logs/urgent_violations.json": {
      "value": "logs/urgent_violations.json",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:229"
      ]
    },
    "logs/warning_report.json": {
      "value": "logs/warning_report.json",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:262"
      ]
    },
    "modules/__init__.py": {
      "value": "modules/__init__.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:19"
      ]
    },
    "modules/netra_mcp_core.py": {
      "value": "modules/netra_mcp_core.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:20"
      ]
    },
    "modules/netra_mcp_models.py": {
      "value": "modules/netra_mcp_models.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:21"
      ]
    },
    "modules/netra_mcp_prompts.py": {
      "value": "modules/netra_mcp_prompts.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:24"
      ]
    },
    "modules/netra_mcp_resources.py": {
      "value": "modules/netra_mcp_resources.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:23"
      ]
    },
    "modules/netra_mcp_tools.py": {
      "value": "modules/netra_mcp_tools.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:22"
      ]
    },
    "netra_backend/**/*.py": {
      "value": "netra_backend/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/unified_import_manager.py:347",
        "scripts/unified_import_manager.py:400",
        "scripts/unified_import_manager.py:407",
        "scripts/unified_import_manager.py:414"
      ]
    },
    "netra_backend/app/agents/chat_orchestrator/model_cascade.py": {
      "value": "netra_backend/app/agents/chat_orchestrator/model_cascade.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:68"
      ]
    },
    "netra_backend/app/agents/chat_orchestrator_main.py": {
      "value": "netra_backend/app/agents/chat_orchestrator_main.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:78"
      ]
    },
    "netra_backend/app/agents/supervisor_admin_init.py": {
      "value": "netra_backend/app/agents/supervisor_admin_init.py",
      "category": "paths",
      "locations": [
        "scripts/fix_comprehensive_imports.py:275"
      ]
    },
    "netra_backend/app/auth_integration/auth.py": {
      "value": "netra_backend/app/auth_integration/auth.py",
      "category": "paths",
      "locations": [
        "scripts/run_auth_compliance_demo.py:95"
      ]
    },
    "netra_backend/app/clickhouse/__init__.py": {
      "value": "netra_backend/app/clickhouse/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:15"
      ]
    },
    "netra_backend/app/core/configuration/database.py": {
      "value": "netra_backend/app/core/configuration/database.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:66"
      ]
    },
    "netra_backend/app/core/configuration/environment.py": {
      "value": "netra_backend/app/core/configuration/environment.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:67"
      ]
    },
    "netra_backend/app/core/configuration/environment_detector.py": {
      "value": "netra_backend/app/core/configuration/environment_detector.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:65"
      ]
    },
    "netra_backend/app/core/configuration/secrets.py": {
      "value": "netra_backend/app/core/configuration/secrets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:64"
      ]
    },
    "netra_backend/app/core/configuration/services.py": {
      "value": "netra_backend/app/core/configuration/services.py",
      "category": "paths",
      "locations": [
        "scripts/fast_import_checker.py:64"
      ]
    },
    "netra_backend/app/core/configuration/unified_secrets.py": {
      "value": "netra_backend/app/core/configuration/unified_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:63"
      ]
    },
    "netra_backend/app/core/database.py": {
      "value": "netra_backend/app/core/database.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:20"
      ]
    },
    "netra_backend/app/core/health_configuration.py": {
      "value": "netra_backend/app/core/health_configuration.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:77"
      ]
    },
    "netra_backend/app/core/startup_config.py": {
      "value": "netra_backend/app/core/startup_config.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:76"
      ]
    },
    "netra_backend/app/core/transaction_core.py": {
      "value": "netra_backend/app/core/transaction_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:31"
      ]
    },
    "netra_backend/app/database/migration_manager.py": {
      "value": "netra_backend/app/database/migration_manager.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:36"
      ]
    },
    "netra_backend/app/db/database_initializer.py": {
      "value": "netra_backend/app/db/database_initializer.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:75"
      ]
    },
    "netra_backend/app/db/models.py": {
      "value": "netra_backend/app/db/models.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:26"
      ]
    },
    "netra_backend/app/db/postgres_core.py": {
      "value": "netra_backend/app/db/postgres_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:74"
      ]
    },
    "netra_backend/app/dependencies.py": {
      "value": "netra_backend/app/dependencies.py",
      "category": "paths",
      "locations": [
        "scripts/fast_import_checker.py:201"
      ]
    },
    "netra_backend/app/error_aggregator.py": {
      "value": "netra_backend/app/error_aggregator.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:119"
      ]
    },
    "netra_backend/app/guardrails/input_filters.py": {
      "value": "netra_backend/app/guardrails/input_filters.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:73"
      ]
    },
    "netra_backend/app/main.py": {
      "value": "netra_backend/app/main.py",
      "category": "paths",
      "locations": [
        "scripts/run_auth_compliance_demo.py:93"
      ]
    },
    "netra_backend/app/models/message.py": {
      "value": "netra_backend/app/models/message.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:213"
      ]
    },
    "netra_backend/app/monitoring/prometheus_exporter.py": {
      "value": "netra_backend/app/monitoring/prometheus_exporter.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:58"
      ]
    },
    "netra_backend/app/routes/websocket_secure.py": {
      "value": "netra_backend/app/routes/websocket_secure.py",
      "category": "paths",
      "locations": [
        "scripts/run_auth_compliance_demo.py:94"
      ]
    },
    "netra_backend/app/routes/websocket_unified.py": {
      "value": "netra_backend/app/routes/websocket_unified.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:61"
      ]
    },
    "netra_backend/app/services/apex_optimizer_agent/models.py": {
      "value": "netra_backend/app/services/apex_optimizer_agent/models.py",
      "category": "paths",
      "locations": [
        "scripts/fast_import_checker.py:110"
      ]
    },
    "netra_backend/app/services/cache/semantic_cache.py": {
      "value": "netra_backend/app/services/cache/semantic_cache.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:62"
      ]
    },
    "netra_backend/app/services/external_service_client.py": {
      "value": "netra_backend/app/services/external_service_client.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:47"
      ]
    },
    "netra_backend/app/services/file_storage_service.py": {
      "value": "netra_backend/app/services/file_storage_service.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:42"
      ]
    },
    "netra_backend/app/services/llm/cost_optimizer.py": {
      "value": "netra_backend/app/services/llm/cost_optimizer.py",
      "category": "paths",
      "locations": [
        "scripts/fast_import_checker.py:151"
      ]
    },
    "netra_backend/app/services/startup_fixes_integration.py": {
      "value": "netra_backend/app/services/startup_fixes_integration.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:72"
      ]
    },
    "netra_backend/app/services/supply_research_scheduler.py": {
      "value": "netra_backend/app/services/supply_research_scheduler.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:51"
      ]
    },
    "netra_backend/app/services/tenant_service.py": {
      "value": "netra_backend/app/services/tenant_service.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:52"
      ]
    },
    "netra_backend/app/services/unified_health_service.py": {
      "value": "netra_backend/app/services/unified_health_service.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:71"
      ]
    },
    "netra_backend/app/services/user_auth_service.py": {
      "value": "netra_backend/app/services/user_auth_service.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:67"
      ]
    },
    "netra_backend/app/startup_module.py": {
      "value": "netra_backend/app/startup_module.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:79"
      ]
    },
    "netra_backend/app/tools/deep_research_api.py": {
      "value": "netra_backend/app/tools/deep_research_api.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:69"
      ]
    },
    "netra_backend/app/tools/sandboxed_interpreter.py": {
      "value": "netra_backend/app/tools/sandboxed_interpreter.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:70"
      ]
    },
    "netra_backend/app/websocket/__init__.py": {
      "value": "netra_backend/app/websocket/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:80"
      ]
    },
    "netra_backend/app/websocket_core/batch_message_core.py": {
      "value": "netra_backend/app/websocket_core/batch_message_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:24"
      ]
    },
    "netra_backend/app/websocket_core/batch_message_handler.py": {
      "value": "netra_backend/app/websocket_core/batch_message_handler.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:69"
      ]
    },
    "netra_backend/app/websocket_core/broadcast.py": {
      "value": "netra_backend/app/websocket_core/broadcast.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:114"
      ]
    },
    "netra_backend/app/websocket_core/broadcast_core.py": {
      "value": "netra_backend/app/websocket_core/broadcast_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:94"
      ]
    },
    "netra_backend/app/websocket_core/compression.py": {
      "value": "netra_backend/app/websocket_core/compression.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:109"
      ]
    },
    "netra_backend/app/websocket_core/connection_executor.py": {
      "value": "netra_backend/app/websocket_core/connection_executor.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:84"
      ]
    },
    "netra_backend/app/websocket_core/connection_info.py": {
      "value": "netra_backend/app/websocket_core/connection_info.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:74"
      ]
    },
    "netra_backend/app/websocket_core/enhanced_rate_limiter.py": {
      "value": "netra_backend/app/websocket_core/enhanced_rate_limiter.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:45"
      ]
    },
    "netra_backend/app/websocket_core/error_recovery_handler.py": {
      "value": "netra_backend/app/websocket_core/error_recovery_handler.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:79"
      ]
    },
    "netra_backend/app/websocket_core/performance_monitor_core.py": {
      "value": "netra_backend/app/websocket_core/performance_monitor_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:104"
      ]
    },
    "netra_backend/app/websocket_core/rate_limiter.py": {
      "value": "netra_backend/app/websocket_core/rate_limiter.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:36"
      ]
    },
    "netra_backend/app/websocket_core/reconnection_types.py": {
      "value": "netra_backend/app/websocket_core/reconnection_types.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:64"
      ]
    },
    "netra_backend/app/websocket_core/state_synchronization_manager.py": {
      "value": "netra_backend/app/websocket_core/state_synchronization_manager.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:53"
      ]
    },
    "netra_backend/app/websocket_core/state_synchronizer.py": {
      "value": "netra_backend/app/websocket_core/state_synchronizer.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:99"
      ]
    },
    "netra_backend/app/websocket_core/unified.py": {
      "value": "netra_backend/app/websocket_core/unified.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:16"
      ]
    },
    "netra_backend/app/websocket_core_info.py": {
      "value": "netra_backend/app/websocket_core_info.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:89"
      ]
    },
    "netra_backend/tests/**/*.py": {
      "value": "netra_backend/tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:171"
      ]
    },
    "netra_backend/tests/agents/test_data_sub_agent_consolidated.py": {
      "value": "netra_backend/tests/agents/test_data_sub_agent_consolidated.py",
      "category": "paths",
      "locations": [
        "scripts/fix_comprehensive_imports.py:276"
      ]
    },
    "netra_backend/tests/agents/test_supply_researcher_scheduler.py": {
      "value": "netra_backend/tests/agents/test_supply_researcher_scheduler.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:47"
      ]
    },
    "netra_backend/tests/clickhouse/metrics_aggregation_tests.py": {
      "value": "netra_backend/tests/clickhouse/metrics_aggregation_tests.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:105"
      ]
    },
    "netra_backend/tests/clickhouse/test_performance_metrics_extraction.py": {
      "value": "netra_backend/tests/clickhouse/test_performance_metrics_extraction.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:107"
      ]
    },
    "netra_backend/tests/clickhouse/test_query_correctness.py": {
      "value": "netra_backend/tests/clickhouse/test_query_correctness.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:106"
      ]
    },
    "netra_backend/tests/datetime_string_test_helpers.py": {
      "value": "netra_backend/tests/datetime_string_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:181"
      ]
    },
    "netra_backend/tests/debug_migration_test_helpers.py": {
      "value": "netra_backend/tests/debug_migration_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:196"
      ]
    },
    "netra_backend/tests/e2e/conftest.py": {
      "value": "netra_backend/tests/e2e/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:61"
      ]
    },
    "netra_backend/tests/e2e/test_complete_real_pipeline_e2e.py": {
      "value": "netra_backend/tests/e2e/test_complete_real_pipeline_e2e.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:108"
      ]
    },
    "netra_backend/tests/helpers/staging_base.py": {
      "value": "netra_backend/tests/helpers/staging_base.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:60"
      ]
    },
    "netra_backend/tests/integration/base.py": {
      "value": "netra_backend/tests/integration/base.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:90"
      ]
    },
    "netra_backend/tests/integration/critical_missing/shared_infrastructure/containerized_services.py": {
      "value": "netra_backend/tests/integration/critical_missing/shared_infrastructure/containerized_services.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:56"
      ]
    },
    "netra_backend/tests/integration/critical_paths/l4_staging_critical_base.py": {
      "value": "netra_backend/tests/integration/critical_paths/l4_staging_critical_base.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:58"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_billing_accuracy_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_billing_accuracy_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:109"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_dashboard_query_performance.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_dashboard_query_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:117"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_enterprise_auth_integration_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_enterprise_auth_integration_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:51"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_multi_tenant_data_isolation_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_multi_tenant_data_isolation_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:48"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_performance_scalability_l2.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_performance_scalability_l2.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:122"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_production_deployment_e2e_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_production_deployment_e2e_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:49"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_production_deployment_validation_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_production_deployment_validation_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:50"
      ]
    },
    "netra_backend/tests/integration/deployment_config_fixtures.py": {
      "value": "netra_backend/tests/integration/deployment_config_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:131"
      ]
    },
    "netra_backend/tests/integration/integration.py": {
      "value": "netra_backend/tests/integration/integration.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:125"
      ]
    },
    "netra_backend/tests/integration/sso_saml_components.py": {
      "value": "netra_backend/tests/integration/sso_saml_components.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:136"
      ]
    },
    "netra_backend/tests/integration/staging_config/base.py": {
      "value": "netra_backend/tests/integration/staging_config/base.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:57"
      ]
    },
    "netra_backend/tests/integration/test_auth_edge_cases_l3.py": {
      "value": "netra_backend/tests/integration/test_auth_edge_cases_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:53"
      ]
    },
    "netra_backend/tests/integration/test_dev_launcher_startup.py": {
      "value": "netra_backend/tests/integration/test_dev_launcher_startup.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:59"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:105"
      ]
    },
    "netra_backend/tests/integration/test_user_login_flows_l3.py": {
      "value": "netra_backend/tests/integration/test_user_login_flows_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:55"
      ]
    },
    "netra_backend/tests/integration/test_websocket_auth_cold_start_extended_l3.py": {
      "value": "netra_backend/tests/integration/test_websocket_auth_cold_start_extended_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:52"
      ]
    },
    "netra_backend/tests/integration/test_websocket_auth_cold_start_l3.py": {
      "value": "netra_backend/tests/integration/test_websocket_auth_cold_start_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:54"
      ]
    },
    "netra_backend/tests/integration/test_ws_connection_mocks.py": {
      "value": "netra_backend/tests/integration/test_ws_connection_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:141"
      ]
    },
    "netra_backend/tests/json_file_crypto_test_helpers.py": {
      "value": "netra_backend/tests/json_file_crypto_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:186"
      ]
    },
    "netra_backend/tests/llm_mocks.py": {
      "value": "netra_backend/tests/llm_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:146"
      ]
    },
    "netra_backend/tests/network_pagination_test_helpers.py": {
      "value": "netra_backend/tests/network_pagination_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:191"
      ]
    },
    "netra_backend/tests/performance/performance_baseline_config.py": {
      "value": "netra_backend/tests/performance/performance_baseline_config.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:110"
      ]
    },
    "netra_backend/tests/performance/test_agent_load_stress.py": {
      "value": "netra_backend/tests/performance/test_agent_load_stress.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:111"
      ]
    },
    "netra_backend/tests/performance/test_comprehensive_backend_performance.py": {
      "value": "netra_backend/tests/performance/test_comprehensive_backend_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:112"
      ]
    },
    "netra_backend/tests/performance/test_performance_monitoring.py": {
      "value": "netra_backend/tests/performance/test_performance_monitoring.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:116"
      ]
    },
    "netra_backend/tests/performance/test_sla_compliance.py": {
      "value": "netra_backend/tests/performance/test_sla_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:114"
      ]
    },
    "netra_backend/tests/services/test_scheduler_jobs_core.py": {
      "value": "netra_backend/tests/services/test_scheduler_jobs_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:50"
      ]
    },
    "netra_backend/tests/services/test_scheduler_retry_logic.py": {
      "value": "netra_backend/tests/services/test_scheduler_retry_logic.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:49"
      ]
    },
    "netra_backend/tests/services/test_supply_research_scheduler_jobs.py": {
      "value": "netra_backend/tests/services/test_supply_research_scheduler_jobs.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:48"
      ]
    },
    "netra_backend/tests/test_compression_auth.py": {
      "value": "netra_backend/tests/test_compression_auth.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:171"
      ]
    },
    "netra_backend/tests/test_config_core.py": {
      "value": "netra_backend/tests/test_config_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:161"
      ]
    },
    "netra_backend/tests/test_health_monitor_adaptive.py": {
      "value": "netra_backend/tests/test_health_monitor_adaptive.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:166"
      ]
    },
    "netra_backend/tests/test_performance_batching.py": {
      "value": "netra_backend/tests/test_performance_batching.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:151"
      ]
    },
    "netra_backend/tests/test_route_fixtures.py": {
      "value": "netra_backend/tests/test_route_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:99"
      ]
    },
    "netra_backend/tests/test_utilities.py": {
      "value": "netra_backend/tests/test_utilities.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:156"
      ]
    },
    "netra_backend/tests/test_websocket_bidirectional_types.py": {
      "value": "netra_backend/tests/test_websocket_bidirectional_types.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:176"
      ]
    },
    "netra_backend/tests/unified_system/test_dev_launcher_startup.py": {
      "value": "netra_backend/tests/unified_system/test_dev_launcher_startup.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:104"
      ]
    },
    "netra_backend/tests/unified_system/test_service_recovery.py": {
      "value": "netra_backend/tests/unified_system/test_service_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:102"
      ]
    },
    "netra_backend/tests/unit/test_metrics_collector_core.py": {
      "value": "netra_backend/tests/unit/test_metrics_collector_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:101"
      ]
    },
    "netra_backend/tests/websocket/test_websocket_integration_performance.py": {
      "value": "netra_backend/tests/websocket/test_websocket_integration_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:100"
      ]
    },
    "netra_mcp/__init__.py": {
      "value": "netra_mcp/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:219"
      ]
    },
    "payments/__init__.py": {
      "value": "payments/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:234"
      ]
    },
    "providers/WebSocketProvider.tsx": {
      "value": "providers/WebSocketProvider.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:289"
      ]
    },
    "python scripts/boundary_enforcer.py": {
      "value": "python scripts/boundary_enforcer.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:264"
      ]
    },
    "python scripts/boundary_enforcer.py --check": {
      "value": "python scripts/boundary_enforcer.py --check",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:255"
      ]
    },
    "python scripts/check_architecture_compliance.py": {
      "value": "python scripts/check_architecture_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:247"
      ]
    },
    "python scripts/check_architecture_compliance.py --ci-mode": {
      "value": "python scripts/check_architecture_compliance.py --ci-mode",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:238"
      ]
    },
    "python scripts/check_e2e_imports.py --report": {
      "value": "python scripts/check_e2e_imports.py --report",
      "category": "paths",
      "locations": [
        "scripts/comprehensive_e2e_import_fixer.py:369"
      ]
    },
    "python scripts/cleanup_duplicate_tests.py": {
      "value": "python scripts/cleanup_duplicate_tests.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:188"
      ]
    },
    "python scripts/code_audit_orchestrator.py": {
      "value": "python scripts/code_audit_orchestrator.py",
      "category": "paths",
      "locations": [
        "scripts/permissive_hooks/audit_duplicates_hook.py:81"
      ]
    },
    "python scripts/compliance/stub_checker.py": {
      "value": "python scripts/compliance/stub_checker.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:166",
        "scripts/validate_atomic_change.py:175"
      ]
    },
    "python scripts/comprehensive_import_scanner.py": {
      "value": "python scripts/comprehensive_import_scanner.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:158"
      ]
    },
    "python scripts/comprehensive_import_scanner.py --json-output": {
      "value": "python scripts/comprehensive_import_scanner.py --json-output",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:140",
        "scripts/validate_atomic_change.py:149"
      ]
    },
    "python scripts/deploy_staging.py": {
      "value": "python scripts/deploy_staging.py",
      "category": "paths",
      "locations": [
        "scripts/setup_gcp_service_account.py:193"
      ]
    },
    "python scripts/deploy_to_gcp.py --project": {
      "value": "python scripts/deploy_to_gcp.py --project",
      "category": "paths",
      "locations": [
        "scripts/create_staging_secrets_complete.py:37",
        "scripts/fix_staging_database_url.py:85",
        "scripts/setup_gcp_service_account.py:195"
      ]
    },
    "python scripts/duplicate_detector.py": {
      "value": "python scripts/duplicate_detector.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:225"
      ]
    },
    "python scripts/duplicate_detector.py --severity high --max-results 5": {
      "value": "python scripts/duplicate_detector.py --severity high --max-results 5",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:216"
      ]
    },
    "python scripts/fix_all_import_issues.py --absolute-only": {
      "value": "python scripts/fix_all_import_issues.py --absolute-only",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:146"
      ]
    },
    "python scripts/fix_netra_backend_imports.py": {
      "value": "python scripts/fix_netra_backend_imports.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_backend_imports.py:222"
      ]
    },
    "python scripts/import_management.py all": {
      "value": "python scripts/import_management.py all",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:164"
      ]
    },
    "python scripts/import_management.py check": {
      "value": "python scripts/import_management.py check",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:162"
      ]
    },
    "python scripts/import_management.py fix": {
      "value": "python scripts/import_management.py fix",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:160"
      ]
    },
    "python scripts/prevent_numbered_files.py --check": {
      "value": "python scripts/prevent_numbered_files.py --check",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:193",
        "scripts/validate_atomic_change.py:200",
        "scripts/validate_atomic_change.py:209"
      ]
    },
    "python scripts/prevent_numbered_files.py --fix": {
      "value": "python scripts/prevent_numbered_files.py --fix",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:198"
      ]
    },
    "python scripts/scan_string_literals.py": {
      "value": "python scripts/scan_string_literals.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:84",
        "scripts/validate_atomic_change.py:303"
      ]
    },
    "python scripts/setup_gcp_service_account.py": {
      "value": "python scripts/setup_gcp_service_account.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_sa.py:97"
      ]
    },
    "python scripts/team_updates_sync.py last_day": {
      "value": "python scripts/team_updates_sync.py last_day",
      "category": "paths",
      "locations": [
        "scripts/team_updates_sync.py:138"
      ]
    },
    "python scripts/unified_import_manager.py fix": {
      "value": "python scripts/unified_import_manager.py fix",
      "category": "paths",
      "locations": [
        "scripts/unified_import_manager.py:577"
      ]
    },
    "quality_gate/__init__.py": {
      "value": "quality_gate/__init__.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:24"
      ]
    },
    "quality_gate/quality_gate_core.py": {
      "value": "quality_gate/quality_gate_core.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:25"
      ]
    },
    "quality_gate/quality_gate_metrics.py": {
      "value": "quality_gate/quality_gate_metrics.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:28"
      ]
    },
    "quality_gate/quality_gate_models.py": {
      "value": "quality_gate/quality_gate_models.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:26"
      ]
    },
    "quality_gate/quality_gate_patterns.py": {
      "value": "quality_gate/quality_gate_patterns.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:27"
      ]
    },
    "quality_gate/quality_gate_validators.py": {
      "value": "quality_gate/quality_gate_validators.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:29"
      ]
    },
    "reports/cleanup_log.json": {
      "value": "reports/cleanup_log.json",
      "category": "paths",
      "locations": [
        "scripts/cleanup_generated_files.py:291"
      ]
    },
    "reports/coverage/coverage.json": {
      "value": "reports/coverage/coverage.json",
      "category": "paths",
      "locations": [
        "scripts/analyze_coverage.py:4"
      ]
    },
    "scripts/**/*.py": {
      "value": "scripts/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_scanner_helpers.py:155",
        "scripts/auto_decompose_functions.py:372",
        "scripts/auto_split_files.py:300",
        "scripts/boundary_enforcer_core_types.py:62",
        "scripts/boundary_enforcer_function_checks.py:30",
        "scripts/create_enforcement_tools.py:99"
      ]
    },
    "scripts/auto_split_files.py": {
      "value": "scripts/auto_split_files.py",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:355"
      ]
    },
    "scripts/boundary_enforcer.py": {
      "value": "scripts/boundary_enforcer.py",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:77"
      ]
    },
    "scripts/business_value_test_index.py": {
      "value": "scripts/business_value_test_index.py",
      "category": "paths",
      "locations": [
        "scripts/generate_wip_report.py:175"
      ]
    },
    "scripts/check_architecture_compliance.py": {
      "value": "scripts/check_architecture_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:225",
        "scripts/team_updates_sync.py:86"
      ]
    },
    "scripts/code_audit_orchestrator.py": {
      "value": "scripts/code_audit_orchestrator.py",
      "category": "paths",
      "locations": [
        "scripts/configure_audit.py:230"
      ]
    },
    "scripts/deploy_to_gcp.py": {
      "value": "scripts/deploy_to_gcp.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_sa.py:105",
        "scripts/deploy_staging_with_validation.py:42"
      ]
    },
    "scripts/detect_duplicate_code.py": {
      "value": "scripts/detect_duplicate_code.py",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:255"
      ]
    },
    "scripts/fix_e2e_imports.py": {
      "value": "scripts/fix_e2e_imports.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:56",
        "scripts/fix_performance_monitor_imports.py:103"
      ]
    },
    "scripts/fix_staging_deployment.py": {
      "value": "scripts/fix_staging_deployment.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_validation.py:25"
      ]
    },
    "scripts/scan_string_literals.py": {
      "value": "scripts/scan_string_literals.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:230"
      ]
    },
    "scripts/validate_staging_config.py": {
      "value": "scripts/validate_staging_config.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_validation.py:69"
      ]
    },
    "scripts/workflow_validator.py": {
      "value": "scripts/workflow_validator.py",
      "category": "paths",
      "locations": [
        "scripts/setup_act.py:137"
      ]
    },
    "secrets\\.json": {
      "value": "secrets\\.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:31"
      ]
    },
    "shared/schemas.json": {
      "value": "shared/schemas.json",
      "category": "paths",
      "locations": [
        "scripts/generate-json-schema.py:23"
      ]
    },
    "shared/types.ts": {
      "value": "shared/types.ts",
      "category": "paths",
      "locations": [
        "scripts/generate-types.py:8"
      ]
    },
    "test_.*\\.py$": {
      "value": "test_.*\\.py$",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:40"
      ]
    },
    "test_framework/**/*.py": {
      "value": "test_framework/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/boundary_enforcer_core_types.py:63",
        "scripts/check_environment_isolation.py:174",
        "scripts/compliance/analyze_mocks.py:66",
        "scripts/compliance/mock_justification_checker.py:65",
        "scripts/unified_import_manager.py:347",
        "scripts/unified_import_manager.py:400",
        "scripts/unified_import_manager.py:407",
        "scripts/unified_import_manager.py:414"
      ]
    },
    "test_framework/comprehensive_reporter.py": {
      "value": "test_framework/comprehensive_reporter.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:150"
      ]
    },
    "test_framework/real_services_test_fixtures.py": {
      "value": "test_framework/real_services_test_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:202"
      ]
    },
    "test_framework/runner.py": {
      "value": "test_framework/runner.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:149"
      ]
    },
    "test_framework/test_discovery.py": {
      "value": "test_framework/test_discovery.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:148"
      ]
    },
    "test_reports/test_report_20250824_090437.json": {
      "value": "test_reports/test_report_20250824_090437.json",
      "category": "paths",
      "locations": [
        "scripts/analyze_errors.py:3"
      ]
    },
    "tests/**/*.py": {
      "value": "tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:170",
        "scripts/compliance/analyze_mocks.py:65",
        "scripts/compliance/mock_justification_checker.py:64",
        "scripts/create_enforcement_tools.py:99"
      ]
    },
    "tests/**/*test*.py": {
      "value": "tests/**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:130",
        "scripts/fix_import_issues.py:138",
        "scripts/fix_import_issues.py:145"
      ]
    },
    "tests/conftest.py": {
      "value": "tests/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:139"
      ]
    },
    "tests/critical/test_websocket_agent_startup.py": {
      "value": "tests/critical/test_websocket_agent_startup.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:43"
      ]
    },
    "tests/critical/test_websocket_circular_import_regression.py": {
      "value": "tests/critical/test_websocket_circular_import_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:18"
      ]
    },
    "tests/critical/test_websocket_message_regression.py": {
      "value": "tests/critical/test_websocket_message_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:36"
      ]
    },
    "tests/e2e/agent_isolation/test_file_system_isolation.py": {
      "value": "tests/e2e/agent_isolation/test_file_system_isolation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:84"
      ]
    },
    "tests/e2e/agent_isolation/test_memory_isolation.py": {
      "value": "tests/e2e/agent_isolation/test_memory_isolation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:85"
      ]
    },
    "tests/e2e/agent_startup_performance_measurer.py": {
      "value": "tests/e2e/agent_startup_performance_measurer.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:113"
      ]
    },
    "tests/e2e/conftest.py": {
      "value": "tests/e2e/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:37"
      ]
    },
    "tests/e2e/first_time_user/real_critical_auth_helpers.py": {
      "value": "tests/e2e/first_time_user/real_critical_auth_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:38"
      ]
    },
    "tests/e2e/fixtures/__init__.py": {
      "value": "tests/e2e/fixtures/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:86"
      ]
    },
    "tests/e2e/integration/test_agent_orchestration_real_llm.py": {
      "value": "tests/e2e/integration/test_agent_orchestration_real_llm.py",
      "category": "paths",
      "locations": [
        "scripts/fix_all_e2e_imports.py:123"
      ]
    },
    "tests/e2e/integration/test_auth_jwt_refresh.py": {
      "value": "tests/e2e/integration/test_auth_jwt_refresh.py",
      "category": "paths",
      "locations": [
        "scripts/fix_all_e2e_imports.py:124"
      ]
    },
    "tests/e2e/integration/test_auth_jwt_security.py": {
      "value": "tests/e2e/integration/test_auth_jwt_security.py",
      "category": "paths",
      "locations": [
        "scripts/fix_all_e2e_imports.py:125"
      ]
    },
    "tests/e2e/performance/test_performance_sla_validation.py": {
      "value": "tests/e2e/performance/test_performance_sla_validation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:119"
      ]
    },
    "tests/e2e/resource_isolation/infrastructure/__init__.py": {
      "value": "tests/e2e/resource_isolation/infrastructure/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:89"
      ]
    },
    "tests/e2e/resource_isolation/suite/test_suite_core.py": {
      "value": "tests/e2e/resource_isolation/suite/test_suite_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:90"
      ]
    },
    "tests/e2e/resource_isolation/test_infrastructure.py": {
      "value": "tests/e2e/resource_isolation/test_infrastructure.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:76",
        "scripts/fix_remaining_imports.py:80",
        "scripts/fix_simple_import_errors.py:87"
      ]
    },
    "tests/e2e/resource_isolation/test_suite.py": {
      "value": "tests/e2e/resource_isolation/test_suite.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:88"
      ]
    },
    "tests/e2e/service_failure_tester.py": {
      "value": "tests/e2e/service_failure_tester.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:118"
      ]
    },
    "tests/e2e/test_concurrent_agent_startup_core.py": {
      "value": "tests/e2e/test_concurrent_agent_startup_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:120",
        "scripts/fix_syntax_errors.py:54"
      ]
    },
    "tests/e2e/test_concurrent_agent_startup_performance.py": {
      "value": "tests/e2e/test_concurrent_agent_startup_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:121"
      ]
    },
    "tests/e2e/test_cors_dynamic_ports.py": {
      "value": "tests/e2e/test_cors_dynamic_ports.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:13",
        "scripts/simple_syntax_fix.py:33"
      ]
    },
    "tests/e2e/test_data_factory.py": {
      "value": "tests/e2e/test_data_factory.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_e2e_imports.py:118"
      ]
    },
    "tests/e2e/test_helpers.py": {
      "value": "tests/e2e/test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_e2e_imports.py:97"
      ]
    },
    "tests/e2e/test_helpers/__init__.py": {
      "value": "tests/e2e/test_helpers/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:92"
      ]
    },
    "tests/e2e/test_helpers/throughput_helpers.py": {
      "value": "tests/e2e/test_helpers/throughput_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:67",
        "scripts/fix_remaining_imports.py:78",
        "scripts/fix_simple_import_errors.py:91"
      ]
    },
    "tests/e2e/test_performance_targets.py": {
      "value": "tests/e2e/test_performance_targets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:14",
        "scripts/simple_syntax_fix.py:34"
      ]
    },
    "tests/e2e/test_rapid_message_succession_agent.py": {
      "value": "tests/e2e/test_rapid_message_succession_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:15",
        "scripts/simple_syntax_fix.py:35"
      ]
    },
    "tests/e2e/test_rapid_message_succession_api.py": {
      "value": "tests/e2e/test_rapid_message_succession_api.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:16",
        "scripts/simple_syntax_fix.py:36"
      ]
    },
    "tests/e2e/test_rapid_message_succession_core.py": {
      "value": "tests/e2e/test_rapid_message_succession_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:17",
        "scripts/simple_syntax_fix.py:37"
      ]
    },
    "tests/e2e/test_resource_limits.py": {
      "value": "tests/e2e/test_resource_limits.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:18",
        "scripts/simple_syntax_fix.py:38"
      ]
    },
    "tests/e2e/test_response_quality.py": {
      "value": "tests/e2e/test_response_quality.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:19",
        "scripts/simple_syntax_fix.py:39"
      ]
    },
    "tests/e2e/test_soak_testing.py": {
      "value": "tests/e2e/test_soak_testing.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:115"
      ]
    },
    "tests/e2e/test_spike_recovery_core.py": {
      "value": "tests/e2e/test_spike_recovery_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:20",
        "scripts/simple_syntax_fix.py:40"
      ]
    },
    "tests/e2e/test_spike_recovery_performance.py": {
      "value": "tests/e2e/test_spike_recovery_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:21",
        "scripts/simple_syntax_fix.py:41"
      ]
    },
    "tests/e2e/test_startup_initialization.py": {
      "value": "tests/e2e/test_startup_initialization.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:52"
      ]
    },
    "tests/e2e/websocket_resilience/test_2_midstream_disconnection_recovery_websocket.py": {
      "value": "tests/e2e/websocket_resilience/test_2_midstream_disconnection_recovery_websocket.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:93"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_connection_concurrent.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_connection_concurrent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:71",
        "scripts/fix_remaining_imports.py:79",
        "scripts/fix_simple_import_errors.py:94"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_security_attacks.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_security_attacks.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:62",
        "scripts/fix_remaining_imports.py:76",
        "scripts/fix_simple_import_errors.py:95"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_security_audit.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_security_audit.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:57",
        "scripts/fix_remaining_imports.py:74",
        "scripts/fix_simple_import_errors.py:96"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_token_refresh_advanced.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_token_refresh_advanced.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:58",
        "scripts/fix_remaining_imports.py:75",
        "scripts/fix_simple_import_errors.py:97"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_token_refresh_flow.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_token_refresh_flow.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:65",
        "scripts/fix_remaining_imports.py:77",
        "scripts/fix_simple_import_errors.py:98"
      ]
    },
    "tests/factories.py": {
      "value": "tests/factories.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_e2e_imports.py:157"
      ]
    },
    "tests/integration/critical_paths/test_websocket_binary_message_handling.py": {
      "value": "tests/integration/critical_paths/test_websocket_binary_message_handling.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:33"
      ]
    },
    "tests/integration/critical_paths/test_websocket_broadcast_performance.py": {
      "value": "tests/integration/critical_paths/test_websocket_broadcast_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:34"
      ]
    },
    "tests/integration/critical_paths/test_websocket_circuit_breaker.py": {
      "value": "tests/integration/critical_paths/test_websocket_circuit_breaker.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:32"
      ]
    },
    "tests/integration/critical_paths/test_websocket_connection_draining.py": {
      "value": "tests/integration/critical_paths/test_websocket_connection_draining.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:30"
      ]
    },
    "tests/integration/critical_paths/test_websocket_connection_pooling.py": {
      "value": "tests/integration/critical_paths/test_websocket_connection_pooling.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:31"
      ]
    },
    "tests/integration/critical_paths/test_websocket_health_check.py": {
      "value": "tests/integration/critical_paths/test_websocket_health_check.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:28"
      ]
    },
    "tests/integration/critical_paths/test_websocket_heartbeat_monitoring.py": {
      "value": "tests/integration/critical_paths/test_websocket_heartbeat_monitoring.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:29"
      ]
    },
    "tests/integration/critical_paths/test_websocket_message_compression.py": {
      "value": "tests/integration/critical_paths/test_websocket_message_compression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:26"
      ]
    },
    "tests/integration/critical_paths/test_websocket_message_delivery_guarantee.py": {
      "value": "tests/integration/critical_paths/test_websocket_message_delivery_guarantee.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:27"
      ]
    },
    "tests/integration/critical_paths/test_websocket_rate_limiting_per_client.py": {
      "value": "tests/integration/critical_paths/test_websocket_rate_limiting_per_client.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:24"
      ]
    },
    "tests/integration/critical_paths/test_websocket_reconnection_state_recovery.py": {
      "value": "tests/integration/critical_paths/test_websocket_reconnection_state_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:25"
      ]
    },
    "tests/integration/test_websocket_agent_integration.py": {
      "value": "tests/integration/test_websocket_agent_integration.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:42"
      ]
    },
    "tests/integration/test_websocket_redis_pubsub.py": {
      "value": "tests/integration/test_websocket_redis_pubsub.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:35"
      ]
    },
    "tests/services/test_ws_connection_basic.py": {
      "value": "tests/services/test_ws_connection_basic.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:22"
      ]
    },
    "tests/services/test_ws_connection_mocks.py": {
      "value": "tests/services/test_ws_connection_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:23"
      ]
    },
    "tests/services/test_ws_connection_performance.py": {
      "value": "tests/services/test_ws_connection_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:21"
      ]
    },
    "tests/unified/e2e/concurrent_user_simulators.py": {
      "value": "tests/unified/e2e/concurrent_user_simulators.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:67"
      ]
    },
    "tests/unified/e2e/file_upload_pipeline_test_suite.py": {
      "value": "tests/unified/e2e/file_upload_pipeline_test_suite.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:50"
      ]
    },
    "tests/unified/e2e/helpers/error_propagation/__init__.py": {
      "value": "tests/unified/e2e/helpers/error_propagation/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:72"
      ]
    },
    "tests/unified/e2e/helpers/service_independence/__init__.py": {
      "value": "tests/unified/e2e/helpers/service_independence/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:73"
      ]
    },
    "tests/unified/e2e/helpers/service_independence_helpers.py": {
      "value": "tests/unified/e2e/helpers/service_independence_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:71"
      ]
    },
    "tests/unified/e2e/onboarding_flow_executor.py": {
      "value": "tests/unified/e2e/onboarding_flow_executor.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:68"
      ]
    },
    "tests/unified/e2e/session_persistence_manager.py": {
      "value": "tests/unified/e2e/session_persistence_manager.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:69"
      ]
    },
    "tests/unified/e2e/test_agent_billing_flow.py": {
      "value": "tests/unified/e2e/test_agent_billing_flow.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:61"
      ]
    },
    "tests/unified/e2e/test_agent_collaboration_real.py": {
      "value": "tests/unified/e2e/test_agent_collaboration_real.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:60"
      ]
    },
    "tests/unified/e2e/test_agent_failure_websocket_recovery.py": {
      "value": "tests/unified/e2e/test_agent_failure_websocket_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:73"
      ]
    },
    "tests/unified/e2e/test_agent_orchestration_real_llm.py": {
      "value": "tests/unified/e2e/test_agent_orchestration_real_llm.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:58"
      ]
    },
    "tests/unified/e2e/test_ai_supply_chain_failover.py": {
      "value": "tests/unified/e2e/test_ai_supply_chain_failover.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:64"
      ]
    },
    "tests/unified/e2e/test_auth_token_expiry.py": {
      "value": "tests/unified/e2e/test_auth_token_expiry.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:77"
      ]
    },
    "tests/unified/e2e/test_auth_websocket_connection.py": {
      "value": "tests/unified/e2e/test_auth_websocket_connection.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:48"
      ]
    },
    "tests/unified/e2e/test_auth_websocket_performance.py": {
      "value": "tests/unified/e2e/test_auth_websocket_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:56"
      ]
    },
    "tests/unified/e2e/test_auth_websocket_recovery.py": {
      "value": "tests/unified/e2e/test_auth_websocket_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:74"
      ]
    },
    "tests/unified/e2e/test_cost_tracking_accuracy.py": {
      "value": "tests/unified/e2e/test_cost_tracking_accuracy.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:54"
      ]
    },
    "tests/unified/e2e/test_cross_service_transaction.py": {
      "value": "tests/unified/e2e/test_cross_service_transaction.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:72"
      ]
    },
    "tests/unified/e2e/test_data_crud_unified.py": {
      "value": "tests/unified/e2e/test_data_crud_unified.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:55"
      ]
    },
    "tests/unified/e2e/test_database_consistency.py": {
      "value": "tests/unified/e2e/test_database_consistency.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:47"
      ]
    },
    "tests/unified/e2e/test_disaster_recovery.py": {
      "value": "tests/unified/e2e/test_disaster_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:75"
      ]
    },
    "tests/unified/e2e/test_error_cascade_prevention.py": {
      "value": "tests/unified/e2e/test_error_cascade_prevention.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:53"
      ]
    },
    "tests/unified/e2e/test_export_pipeline.py": {
      "value": "tests/unified/e2e/test_export_pipeline.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:49"
      ]
    },
    "tests/unified/e2e/test_health_monitoring_recovery.py": {
      "value": "tests/unified/e2e/test_health_monitoring_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:69"
      ]
    },
    "tests/unified/e2e/test_memory_leak_detection.py": {
      "value": "tests/unified/e2e/test_memory_leak_detection.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:56"
      ]
    },
    "tests/unified/e2e/test_quota_management.py": {
      "value": "tests/unified/e2e/test_quota_management.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:45"
      ]
    },
    "tests/unified/e2e/test_real_rate_limiting.py": {
      "value": "tests/unified/e2e/test_real_rate_limiting.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:57"
      ]
    },
    "tests/unified/e2e/test_service_failure_recovery.py": {
      "value": "tests/unified/e2e/test_service_failure_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:46"
      ]
    },
    "tests/unified/e2e/test_session_persistence.py": {
      "value": "tests/unified/e2e/test_session_persistence.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:63"
      ]
    },
    "tests/unified/e2e/test_session_state_synchronization.py": {
      "value": "tests/unified/e2e/test_session_state_synchronization.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:59"
      ]
    },
    "tests/unified/e2e/test_thread_management_websocket.py": {
      "value": "tests/unified/e2e/test_thread_management_websocket.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:59"
      ]
    },
    "tests/unified/e2e/test_token_expiry_refresh.py": {
      "value": "tests/unified/e2e/test_token_expiry_refresh.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:55"
      ]
    },
    "tests/unified/e2e/test_token_lifecycle.py": {
      "value": "tests/unified/e2e/test_token_lifecycle.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:61"
      ]
    },
    "tests/unified/e2e/test_websocket_event_completeness.py": {
      "value": "tests/unified/e2e/test_websocket_event_completeness.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:68"
      ]
    },
    "tests/unified/e2e/test_websocket_guarantees.py": {
      "value": "tests/unified/e2e/test_websocket_guarantees.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:62"
      ]
    },
    "tests/unified/e2e/test_websocket_message_format_validation.py": {
      "value": "tests/unified/e2e/test_websocket_message_format_validation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:66"
      ]
    },
    "tests/unified/e2e/test_websocket_message_guarantees.py": {
      "value": "tests/unified/e2e/test_websocket_message_guarantees.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:52"
      ]
    },
    "tests/unified/e2e/test_websocket_resilience.py": {
      "value": "tests/unified/e2e/test_websocket_resilience.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:63"
      ]
    },
    "tests/unified/e2e/test_workspace_isolation.py": {
      "value": "tests/unified/e2e/test_workspace_isolation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:60"
      ]
    },
    "tests/unified/e2e/websocket_message_guarantee_helpers.py": {
      "value": "tests/unified/e2e/websocket_message_guarantee_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:70"
      ]
    },
    "tests/unified/health_service_checker.py": {
      "value": "tests/unified/health_service_checker.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:65"
      ]
    },
    "tests/unified/oauth_flow_manager.py": {
      "value": "tests/unified/oauth_flow_manager.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:66"
      ]
    },
    "tests/unified/test_load_performance.py": {
      "value": "tests/unified/test_load_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:51"
      ]
    },
    "tests/unified/test_oauth_flow.py": {
      "value": "tests/unified/test_oauth_flow.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:64"
      ]
    },
    "tests/unified/test_transaction_consistency.py": {
      "value": "tests/unified/test_transaction_consistency.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:70"
      ]
    },
    "tests/unit/test_websocket_connection_paradox_regression.py": {
      "value": "tests/unit/test_websocket_connection_paradox_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:20"
      ]
    },
    "tests/websocket/test_websocket_regression_prevention.py": {
      "value": "tests/websocket/test_websocket_regression_prevention.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:19"
      ]
    },
    "tracing/__init__.py": {
      "value": "tracing/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:244"
      ]
    },
    "unified_tool_registry/__init__.py": {
      "value": "unified_tool_registry/__init__.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:23"
      ]
    },
    "unified_tool_registry/data_management_handlers.py": {
      "value": "unified_tool_registry/data_management_handlers.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:28"
      ]
    },
    "unified_tool_registry/execution_engine.py": {
      "value": "unified_tool_registry/execution_engine.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:31"
      ]
    },
    "unified_tool_registry/models.py": {
      "value": "unified_tool_registry/models.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:24"
      ]
    },
    "unified_tool_registry/optimization_handlers.py": {
      "value": "unified_tool_registry/optimization_handlers.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:29"
      ]
    },
    "unified_tool_registry/registry.py": {
      "value": "unified_tool_registry/registry.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:25"
      ]
    },
    "unified_tool_registry/system_handlers.py": {
      "value": "unified_tool_registry/system_handlers.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:30"
      ]
    },
    "unified_tool_registry/tool_handlers.py": {
      "value": "unified_tool_registry/tool_handlers.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:27"
      ]
    },
    "unified_tool_registry/tool_registrations.py": {
      "value": "unified_tool_registry/tool_registrations.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/unified_tool_registry.py:26"
      ]
    },
    "| **Methodology:** [SPEC/master_wip_index.xml](SPEC/master_wip_index.xml)\n> \n> **Quick Navigation:** [Executive Summary](#executive-summary) | [Compliance Breakdown](#compliance-breakdown) | [Testing Metrics](#testing-metrics) | [Action Items](#action-items)\n\n---\n\n## Executive Summary\n\n### Overall System Health Score: **": {
      "value": "| **Methodology:** [SPEC/master_wip_index.xml](SPEC/master_wip_index.xml)\n> \n> **Quick Navigation:** [Executive Summary](#executive-summary) | [Compliance Breakdown](#compliance-breakdown) | [Testing Metrics](#testing-metrics) | [Action Items](#action-items)\n\n---\n\n## Executive Summary\n\n### Overall System Health Score: **",
      "category": "paths",
      "locations": [
        "scripts/generate_wip_report.py:282"
      ]
    },
    "~/.config/gcloud/application_default_credentials.json": {
      "value": "~/.config/gcloud/application_default_credentials.json",
      "category": "paths",
      "locations": [
        "scripts/audit_oauth_gcp_logs.py:548"
      ]
    },
    "üìã Index created at: SPEC/learnings/index.xml": {
      "value": "üìã Index created at: SPEC/learnings/index.xml",
      "category": "paths",
      "locations": [
        "scripts/split_learnings_robust.py:164"
      ]
    }
  }
}