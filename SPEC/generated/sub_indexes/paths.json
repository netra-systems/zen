{
  "metadata": {
    "version": "3.0.0",
    "category": "paths",
    "generated_at": "2025-09-05T08:33:41.106287",
    "root_directory": "C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1",
    "total_literals": 1236
  },
  "literals": {
    "\"\n\n# Default to local build with checks\ncommand = [\n    sys.executable,\n    \"scripts/deploy_to_gcp.py\",\n    \"--project\", \"netra-staging\",\n    \"--build-local\",\n    \"--service-account\", SERVICE_ACCOUNT_KEY\n]\n\n# Add any additional arguments passed to this script\nif len(sys.argv) > 1:\n    command.extend(sys.argv[1:])\nelse:\n    # Default to running checks\n    command.append(\"--run-checks\")\n\n# Execute deployment\nsys.exit(subprocess.call(command))": {
      "value": "\"\n\n# Default to local build with checks\ncommand = [\n    sys.executable,\n    \"scripts/deploy_to_gcp.py\",\n    \"--project\", \"netra-staging\",\n    \"--build-local\",\n    \"--service-account\", SERVICE_ACCOUNT_KEY\n]\n\n# Add any additional arguments passed to this script\nif len(sys.argv) > 1:\n    command.extend(sys.argv[1:])\nelse:\n    # Default to running checks\n    command.append(\"--run-checks\")\n\n# Execute deployment\nsys.exit(subprocess.call(command))",
      "category": "paths",
      "locations": [
        "scripts/setup_gcp_service_account.py:122"
      ]
    },
    "#!/usr/bin/env python3\n\"\"\"\nWrapper script for deploying to GCP staging with service account authentication.\nAuto-generated by setup_gcp_service_account.py\n\"\"\"\n\nimport os\nimport sys\nimport subprocess\nfrom pathlib import Path\n\n# Service account key path\nSERVICE_ACCOUNT_KEY = r\"": {
      "value": "#!/usr/bin/env python3\n\"\"\"\nWrapper script for deploying to GCP staging with service account authentication.\nAuto-generated by setup_gcp_service_account.py\n\"\"\"\n\nimport os\nimport sys\nimport subprocess\nfrom pathlib import Path\n\n# Service account key path\nSERVICE_ACCOUNT_KEY = r\"",
      "category": "paths",
      "locations": [
        "scripts/setup_gcp_service_account.py:110"
      ]
    },
    "## Next Steps\n\n1. **Run smoke tests** to verify basic functionality\n2. **Test agent workflows** end-to-end\n3. **Monitor WebSocket traffic** in dev tools\n4. **Add e2e tests** for critical event flows\n5. **Document event catalog** in SPEC/websocket_communication.xml": {
      "value": "## Next Steps\n\n1. **Run smoke tests** to verify basic functionality\n2. **Test agent workflows** end-to-end\n3. **Monitor WebSocket traffic** in dev tools\n4. **Add e2e tests** for critical event flows\n5. **Document event catalog** in SPEC/websocket_communication.xml",
      "category": "paths",
      "locations": [
        "scripts/websocket_coherence_review.py:401"
      ]
    },
    "## üõ†Ô∏è Available Tools\n- `python scripts/boundary_enforcer.py --enforce` - Full boundary check\n- `python scripts/auto_split_files.py --scan` - Automated file splitting\n- `python scripts/auto_decompose_functions.py --scan` - Function decomposition\n- `python scripts/emergency_boundary_actions.py --assess` - Emergency assessment\n\n---\n*Generated by Boundary Enforcement System v2.0 | Timestamp:": {
      "value": "## üõ†Ô∏è Available Tools\n- `python scripts/boundary_enforcer.py --enforce` - Full boundary check\n- `python scripts/auto_split_files.py --scan` - Automated file splitting\n- `python scripts/auto_decompose_functions.py --scan` - Function decomposition\n- `python scripts/emergency_boundary_actions.py --assess` - Emergency assessment\n\n---\n*Generated by Boundary Enforcement System v2.0 | Timestamp:",
      "category": "paths",
      "locations": [
        "scripts/boundary_enforcer_report_generator.py:267"
      ]
    },
    "% goal\n\n## Configuration\nTo enable continuous autonomous review, add to CI/CD:\n```bash\npython scripts/test_autonomous_review.py --auto\n```\n\nOr schedule hourly reviews:\n```bash\n0 * * * * cd /path/to/project && python scripts/test_autonomous_review.py --continuous\n```": {
      "value": "% goal\n\n## Configuration\nTo enable continuous autonomous review, add to CI/CD:\n```bash\npython scripts/test_autonomous_review.py --auto\n```\n\nOr schedule hourly reviews:\n```bash\n0 * * * * cd /path/to/project && python scripts/test_autonomous_review.py --continuous\n```",
      "category": "paths",
      "locations": [
        "scripts/autonomous_review/report_generator.py:82"
      ]
    },
    "(ReferenceError|SyntaxError|TypeError).*at.*\\(.*\\.js": {
      "value": "(ReferenceError|SyntaxError|TypeError).*at.*\\(.*\\.js",
      "category": "paths",
      "locations": [
        "scripts/docker_compose_log_introspector.py:223"
      ]
    },
    "**/*.json": {
      "value": "**/*.json",
      "category": "paths",
      "locations": [
        "scripts/ci/analyze_failures.py:64",
        "scripts/cleanup_generated_files.py:44"
      ]
    },
    "**/*.py": {
      "value": "**/*.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_collectors.py:154",
        "scripts/aggressive_syntax_fix.py:23",
        "scripts/check_schema_imports.py:265",
        "scripts/compliance/find_top_mocks.py:42",
        "scripts/final_syntax_fix.py:75",
        "scripts/find_ssot_violations.py:185",
        "scripts/find_ssot_violations.py:202",
        "scripts/fix_remaining_syntax_errors.py:192",
        "scripts/fix_route_trailing_slashes.py:91",
        "scripts/fix_route_trailing_slashes.py:105"
      ]
    },
    "**/*.test.ts": {
      "value": "**/*.test.ts",
      "category": "paths",
      "locations": [
        "scripts/fix_frontend_tests.py:139",
        "scripts/status_agent_analyzer.py:193"
      ]
    },
    "**/*.test.tsx": {
      "value": "**/*.test.tsx",
      "category": "paths",
      "locations": [
        "scripts/fix_frontend_tests.py:138",
        "scripts/status_agent_analyzer.py:192"
      ]
    },
    "**/*.ts": {
      "value": "**/*.ts",
      "category": "paths",
      "locations": [
        "scripts/status_integration_analyzer.py:119"
      ]
    },
    "**/*.tsx": {
      "value": "**/*.tsx",
      "category": "paths",
      "locations": [
        "scripts/status_integration_analyzer.py:163"
      ]
    },
    "**/*_test.py": {
      "value": "**/*_test.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/analyze_mocks.py:68",
        "scripts/e2e_import_fixer_comprehensive.py:121"
      ]
    },
    "**/*config.json": {
      "value": "**/*config.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/github_analyzer/config_parser.py:137"
      ]
    },
    "**/*test*.py": {
      "value": "**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_integration_tests_comprehensive.py:36",
        "scripts/fix_unjustified_mocks_comprehensive.py:186"
      ]
    },
    "**/conftest.py": {
      "value": "**/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_unjustified_mocks_comprehensive.py:187"
      ]
    },
    "**/package.json": {
      "value": "**/package.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/github_analyzer/config_parser.py:138"
      ]
    },
    "**/test*.py": {
      "value": "**/test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_integration_tests_comprehensive.py:35"
      ]
    },
    "**/test_*.py": {
      "value": "**/test_*.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_collectors.py:153",
        "scripts/compliance/analyze_mocks.py:67",
        "scripts/e2e_import_fixer_comprehensive.py:120",
        "scripts/fix_unjustified_mocks_comprehensive.py:185"
      ]
    },
    "*/.pytest_cache/*": {
      "value": "*/.pytest_cache/*",
      "category": "paths",
      "locations": [
        "netra_backend/app/main.py:128"
      ]
    },
    "*/content_corpus.json": {
      "value": "*/content_corpus.json",
      "category": "paths",
      "locations": [
        "scripts/cleanup_generated_files.py:30"
      ]
    },
    "*Generated by run_review.py implementing SPEC/review.xml*": {
      "value": "*Generated by run_review.py implementing SPEC/review.xml*",
      "category": "paths",
      "locations": [
        "scripts/code_review_reporter.py:140",
        "scripts/review/report_generator.py:178"
      ]
    },
    "- Monitor resources: python scripts/check_resource_limits.py": {
      "value": "- Monitor resources: python scripts/check_resource_limits.py",
      "category": "paths",
      "locations": [
        "scripts/start_dev_staged.py:200"
      ]
    },
    "- Run tests to verify: python tests/mission_critical/test_unified_websocket_events.py": {
      "value": "- Run tests to verify: python tests/mission_critical/test_unified_websocket_events.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:392"
      ]
    },
    "- Run: pytest tests/mission_critical/test_staging_websocket_agent_events.py -v": {
      "value": "- Run: pytest tests/mission_critical/test_staging_websocket_agent_events.py -v",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_staging_setup.py:117"
      ]
    },
    "- Run: python scripts/test_staging_websocket_comprehensive.py --quick": {
      "value": "- Run: python scripts/test_staging_websocket_comprehensive.py --quick",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_staging_setup.py:118"
      ]
    },
    "- This issue has occurred before (see SPEC/learnings/auth_service_staging_errors_five_whys.xml)": {
      "value": "- This issue has occurred before (see SPEC/learnings/auth_service_staging_errors_five_whys.xml)",
      "category": "paths",
      "locations": [
        "scripts/fix_staging_database_url.py:143"
      ]
    },
    "- [ ] Rebuild containers: `docker compose build --no-cache`\n- [ ] Check package.json/requirements.txt\n- [ ] Verify volume mounts\n- [ ] Clear Docker cache if needed": {
      "value": "- [ ] Rebuild containers: `docker compose build --no-cache`\n- [ ] Check package.json/requirements.txt\n- [ ] Verify volume mounts\n- [ ] Clear Docker cache if needed",
      "category": "paths",
      "locations": [
        "scripts/docker_log_issue_creator.py:372"
      ]
    },
    "- python scripts/test_staging_websocket_comprehensive.py --debug": {
      "value": "- python scripts/test_staging_websocket_comprehensive.py --debug",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_staging_setup.py:136"
      ]
    },
    "- python test_framework/robust_websocket_test_helper.py": {
      "value": "- python test_framework/robust_websocket_test_helper.py",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_staging_setup.py:135"
      ]
    },
    "--data-file=/tmp/rollback_config.json": {
      "value": "--data-file=/tmp/rollback_config.json",
      "category": "paths",
      "locations": [
        "scripts/deploy_token_optimization_production.py:636"
      ]
    },
    ".*:\"\nfiles = list(pathlib.Path(\"netra_backend/app\").rglob(\"*.py\"))\nfiles.extend(list(pathlib.Path(\"auth_service\").rglob(\"*.py\")))\nmatches = []\nfor f in files[:100]:  # Limit for speed\n    try:\n        if \"": {
      "value": ".*:\"\nfiles = list(pathlib.Path(\"netra_backend/app\").rglob(\"*.py\"))\nfiles.extend(list(pathlib.Path(\"auth_service\").rglob(\"*.py\")))\nmatches = []\nfor f in files[:100]:  # Limit for speed\n    try:\n        if \"",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:140"
      ]
    },
    ".*_test\\.py$": {
      "value": ".*_test\\.py$",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:41"
      ]
    },
    "../secrets/netra-staging-sa-key.json": {
      "value": "../secrets/netra-staging-sa-key.json",
      "category": "paths",
      "locations": [
        "scripts/find_gtm_account_id.py:32",
        "scripts/run_gtm_setup.py:52"
      ]
    },
    ".config/gcloud/application_default_credentials.json": {
      "value": ".config/gcloud/application_default_credentials.json",
      "category": "paths",
      "locations": [
        "scripts/cleanup_clickhouse_secrets_sdk.py:30"
      ]
    },
    ".git/netra-audit-config.json": {
      "value": ".git/netra-audit-config.json",
      "category": "paths",
      "locations": [
        "scripts/audit_config.py:124",
        "scripts/audit_config.py:134"
      ]
    },
    ".netra/migration_state.json": {
      "value": ".netra/migration_state.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup/migration_tracker.py:36"
      ]
    },
    ".pytest_cache/": {
      "value": ".pytest_cache/",
      "category": "paths",
      "locations": [
        "scripts/decompose_functions.py:89"
      ]
    },
    "/* Generated by Netra QueryBuilder */": {
      "value": "/* Generated by Netra QueryBuilder */",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/_legacy_backup/data_sub_agent_backup_20250904/llm_query_detector.py:85",
        "netra_backend/app/agents/_legacy_backup/data_sub_agent_backup_20250904/query_builder.py:41",
        "netra_backend/app/agents/_legacy_backup/data_sub_agent_backup_20250904/query_operations.py:11",
        "netra_backend/app/services/query_builder.py:48"
      ]
    },
    "/* Generated by Netra QueryBuilder */\n        SELECT": {
      "value": "/* Generated by Netra QueryBuilder */\n        SELECT",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/query_builder.py:282"
      ]
    },
    "/* Generated by Netra QueryBuilder */\n        SELECT \n            corr(": {
      "value": "/* Generated by Netra QueryBuilder */\n        SELECT \n            corr(",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/query_builder.py:339"
      ]
    },
    "/* Generated by Netra QueryBuilder */\n        SELECT \n            toDate(timestamp) as date,\n            count() as daily_requests,\n            uniq(session_id) as unique_sessions,\n            avg(latency_ms) as avg_latency\n        FROM metrics_table\n        WHERE user_id =": {
      "value": "/* Generated by Netra QueryBuilder */\n        SELECT \n            toDate(timestamp) as date,\n            count() as daily_requests,\n            uniq(session_id) as unique_sessions,\n            avg(latency_ms) as avg_latency\n        FROM metrics_table\n        WHERE user_id =",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/query_builder.py:358"
      ]
    },
    "/* Generated by Netra QueryBuilder */\n        WITH stats AS (\n            SELECT \n                avg(": {
      "value": "/* Generated by Netra QueryBuilder */\n        WITH stats AS (\n            SELECT \n                avg(",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/query_builder.py:307"
      ]
    },
    "/* LLM-Generated Query */": {
      "value": "/* LLM-Generated Query */",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/_legacy_backup/data_sub_agent_backup_20250904/llm_query_detector.py:17"
      ]
    },
    "/* eslint-disable */": {
      "value": "/* eslint-disable */",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/schema_sync/generator.py:129"
      ]
    },
    "/* tslint:disable */": {
      "value": "/* tslint:disable */",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/schema_sync/generator.py:128"
      ]
    },
    "/**/*.py": {
      "value": "/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:59",
        "scripts/compliance/core.py:64"
      ]
    },
    "/**/*.ts": {
      "value": "/**/*.ts",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:59",
        "scripts/compliance/core.py:71"
      ]
    },
    "/**/*.tsx": {
      "value": "/**/*.tsx",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:59",
        "scripts/compliance/core.py:71"
      ]
    },
    "/**/*_test.py": {
      "value": "/**/*_test.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/mock_justification_checker.py:61"
      ]
    },
    "/**/test_*.py": {
      "value": "/**/test_*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/mock_justification_checker.py:60"
      ]
    },
    "/.dockerenv": {
      "value": "/.dockerenv",
      "category": "paths",
      "locations": [
        "scripts/verify_websocket_regression_tests.py:276",
        "shared/database_url_builder.py:72",
        "shared/port_discovery.py:210"
      ]
    },
    "/.venv/": {
      "value": "/.venv/",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:72"
      ]
    },
    "/.well-known/openid_configuration": {
      "value": "/.well-known/openid_configuration",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_e2e.py:439"
      ]
    },
    "// Mock fetch for config\n    global.fetch = jest.fn().mockResolvedValue({\n      json: jest.fn().mockResolvedValue({\n        ws_url: 'ws://localhost:8000/ws'\n      })\n    });": {
      "value": "// Mock fetch for config\n    global.fetch = jest.fn().mockResolvedValue({\n      json: jest.fn().mockResolvedValue({\n        ws_url: 'ws://localhost:8000/ws'\n      })\n    });",
      "category": "paths",
      "locations": [
        "scripts/fix_frontend_tests.py:94"
      ]
    },
    "// Save auth data to localStorage\nlocalStorage.setItem('jwt_token', '": {
      "value": "// Save auth data to localStorage\nlocalStorage.setItem('jwt_token', '",
      "category": "paths",
      "locations": [
        "scripts/fix_frontend_auth.py:75"
      ]
    },
    "/10": {
      "value": "/10",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/report_builder.py:646",
        "netra_backend/app/services/factory_status/report_builder.py:647"
      ]
    },
    "/10 maximum": {
      "value": "/10 maximum",
      "category": "paths",
      "locations": [
        "scripts/test/verify_docker_optimization.py:19"
      ]
    },
    "/100": {
      "value": "/100",
      "category": "paths",
      "locations": [
        "netra_backend/app/formatters/example_response_formatter.py:286",
        "netra_backend/app/formatters/example_response_formatter.py:320",
        "scripts/autonomous_review/main.py:109",
        "scripts/autonomous_review/main.py:128",
        "scripts/benchmark_optimization.py:369",
        "scripts/pre_deployment_audit.py:539",
        "scripts/status_renderer.py:57",
        "scripts/validate_deployment_performance.py:389"
      ]
    },
    "/100\n- **Recommendation**: **": {
      "value": "/100\n- **Recommendation**: **",
      "category": "paths",
      "locations": [
        "scripts/pre_deployment_audit.py:418"
      ]
    },
    "/100\n- **Technical Debt**:": {
      "value": "/100\n- **Technical Debt**:",
      "category": "paths",
      "locations": [
        "scripts/autonomous_review/report_generator.py:49"
      ]
    },
    "/100 (": {
      "value": "/100 (",
      "category": "paths",
      "locations": [
        "scripts/fast_100_iterations.py:67",
        "scripts/fast_100_iterations.py:68"
      ]
    },
    "/100 -": {
      "value": "/100 -",
      "category": "paths",
      "locations": [
        "scripts/business_health_check.py:273"
      ]
    },
    "/100 ---": {
      "value": "/100 ---",
      "category": "paths",
      "locations": [
        "scripts/fast_100_iterations.py:57"
      ]
    },
    "/100:": {
      "value": "/100:",
      "category": "paths",
      "locations": [
        "scripts/fast_100_iterations.py:51",
        "scripts/fast_100_iterations.py:53"
      ]
    },
    "/12": {
      "value": "/12",
      "category": "paths",
      "locations": [
        "scripts/check_docker_services.py:138"
      ]
    },
    "/1k tokens)": {
      "value": "/1k tokens)",
      "category": "paths",
      "locations": [
        "scripts/demo_real_llm_testing.py:117"
      ]
    },
    "/3 service configurations": {
      "value": "/3 service configurations",
      "category": "paths",
      "locations": [
        "scripts/validate_gcp_deployment.py:447"
      ]
    },
    "/3)": {
      "value": "/3)",
      "category": "paths",
      "locations": [
        "scripts/intelligent_docker_remediation.py:1359"
      ]
    },
    "/5": {
      "value": "/5",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/startup_fixes_validator.py:182"
      ]
    },
    "/5 fixes": {
      "value": "/5 fixes",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup_module.py:1302"
      ]
    },
    "/5 fixes applied": {
      "value": "/5 fixes applied",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/startup_fixes_integration.py:836"
      ]
    },
    "/5 startup fixes applied - some functionality may be degraded": {
      "value": "/5 startup fixes applied - some functionality may be degraded",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1345"
      ]
    },
    "/5 startup fixes applied with": {
      "value": "/5 startup fixes applied with",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1343"
      ]
    },
    "/5 successful": {
      "value": "/5 successful",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/startup_fixes_validator.py:234"
      ]
    },
    "/5 successful,": {
      "value": "/5 successful,",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1294"
      ]
    },
    "/60 seconds)": {
      "value": "/60 seconds)",
      "category": "paths",
      "locations": [
        "scripts/intelligent_docker_remediation.py:477"
      ]
    },
    "/7": {
      "value": "/7",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1581"
      ]
    },
    "/FI": {
      "value": "/FI",
      "category": "paths",
      "locations": [
        "scripts/service_discovery.py:106"
      ]
    },
    "/Users/": {
      "value": "/Users/",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_logging_enhanced.py:505",
        "netra_backend/app/services/agent_websocket_bridge.py:2211",
        "netra_backend/app/services/websocket_bridge_factory.py:765"
      ]
    },
    "/Users/anthony/Documents/GitHub/netra-apex": {
      "value": "/Users/anthony/Documents/GitHub/netra-apex",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:12",
        "scripts/comprehensive_mock_cleanup.py:185"
      ]
    },
    "/[\\w\\-./]+\\.\\w+": {
      "value": "/[\\w\\-./]+\\.\\w+",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate/metrics_core.py:171"
      ]
    },
    "/[\\w\\-./]+\\.\\w+|[A-Z]:\\\\[\\w\\\\\\-.]+\\.\\w+": {
      "value": "/[\\w\\-./]+\\.\\w+|[A-Z]:\\\\[\\w\\\\\\-.]+\\.\\w+",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate/quality_gate_patterns.py:85"
      ]
    },
    "/_next/static/": {
      "value": "/_next/static/",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_e2e.py:383"
      ]
    },
    "/_next/static/chunks/webpack.js": {
      "value": "/_next/static/chunks/webpack.js",
      "category": "paths",
      "locations": [
        "scripts/gcp_health_diagnostics.py:62"
      ]
    },
    "/account": {
      "value": "/account",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:370"
      ]
    },
    "/actions/artifacts": {
      "value": "/actions/artifacts",
      "category": "paths",
      "locations": [
        "scripts/cleanup_workflow_runs.py:93"
      ]
    },
    "/actions/artifacts/": {
      "value": "/actions/artifacts/",
      "category": "paths",
      "locations": [
        "scripts/cleanup_workflow_runs.py:123"
      ]
    },
    "/actions/runs": {
      "value": "/actions/runs",
      "category": "paths",
      "locations": [
        "scripts/cleanup_workflow_runs.py:52",
        "scripts/force_cancel_workflow.py:13"
      ]
    },
    "/actions/runs/": {
      "value": "/actions/runs/",
      "category": "paths",
      "locations": [
        "scripts/cleanup_workflow_runs.py:84",
        "scripts/force_cancel_workflow.py:30"
      ]
    },
    "/actions/workflows/": {
      "value": "/actions/workflows/",
      "category": "paths",
      "locations": [
        "scripts/cleanup_workflow_runs.py:54"
      ]
    },
    "/agents": {
      "value": "/agents",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:601",
        "scripts/staging_validation_part2_user_flows.py:643",
        "scripts/staging_validation_part2_user_flows.py:917"
      ]
    },
    "/agents/metrics": {
      "value": "/agents/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:638"
      ]
    },
    "/agents/status": {
      "value": "/agents/status",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:716"
      ]
    },
    "/agents/{agent_name}": {
      "value": "/agents/{agent_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:683"
      ]
    },
    "/agents/{agent_name}/report": {
      "value": "/agents/{agent_name}/report",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/quality.py:64"
      ]
    },
    "/alerts": {
      "value": "/alerts",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:96",
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:334",
        "netra_backend/app/routes/circuit_breaker_health.py:97",
        "netra_backend/app/routes/database_monitoring/router.py:121",
        "netra_backend/app/routes/health.py:713",
        "netra_backend/app/routes/monitoring.py:257",
        "netra_backend/app/routes/quality.py:70",
        "scripts/validate_isolation_monitoring_alerts.py:647"
      ]
    },
    "/alerts/acknowledge": {
      "value": "/alerts/acknowledge",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/quality.py:76"
      ]
    },
    "/alerts/history": {
      "value": "/alerts/history",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:130"
      ]
    },
    "/analyses": {
      "value": "/analyses",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/github_analyzer.py:258"
      ]
    },
    "/analysis/{analysis_id}": {
      "value": "/analysis/{analysis_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/github_analyzer.py:280"
      ]
    },
    "/analysis/{analysis_id}/results": {
      "value": "/analysis/{analysis_id}/results",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/github_analyzer.py:134"
      ]
    },
    "/analysis/{analysis_id}/status": {
      "value": "/analysis/{analysis_id}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/github_analyzer.py:99"
      ]
    },
    "/analytics": {
      "value": "/analytics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/threads_route.py:137"
      ]
    },
    "/analytics/dashboard": {
      "value": "/analytics/dashboard",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/threads_route.py:129"
      ]
    },
    "/analytics/summary": {
      "value": "/analytics/summary",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:131"
      ]
    },
    "/analytics_service/": {
      "value": "/analytics_service/",
      "category": "paths",
      "locations": [
        "scripts/check_violations.py:150",
        "scripts/remediate_os_environ_violations.py:97"
      ]
    },
    "/analyze": {
      "value": "/analyze",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:67",
        "netra_backend/app/routes/github_analyzer.py:71",
        "netra_backend/app/routes/synthetic_data.py:258"
      ]
    },
    "/api": {
      "value": "/api",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:70",
        "netra_backend/app/core/app_factory_route_configs.py:71",
        "netra_backend/app/core/app_factory_route_configs.py:90",
        "netra_backend/app/core/app_factory_route_configs.py:91",
        "netra_backend/app/core/app_factory_route_configs.py:112",
        "netra_backend/app/core/network_constants.py:229"
      ]
    },
    "/api-keys": {
      "value": "/api-keys",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:206",
        "netra_backend/app/routes/users.py:221"
      ]
    },
    "/api-keys/{key_id}": {
      "value": "/api-keys/{key_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:235"
      ]
    },
    "/api-specification": {
      "value": "/api-specification",
      "category": "paths",
      "locations": [
        "scripts/generate_openapi_spec.py:185"
      ]
    },
    "/api/": {
      "value": "/api/",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_config.py:96",
        "netra_backend/app/core/unified_error_handler.py:1009",
        "netra_backend/app/middleware/api_gateway_coordinator.py:449",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:204",
        "netra_backend/app/middleware/security_headers_middleware.py:158",
        "netra_backend/app/middleware/security_response_middleware.py:79",
        "scripts/scan_string_literals.py:170"
      ]
    },
    "/api/admin": {
      "value": "/api/admin",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:165",
        "netra_backend/app/middleware/transaction_middleware.py:32"
      ]
    },
    "/api/admin/": {
      "value": "/api/admin/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:84"
      ]
    },
    "/api/agent": {
      "value": "/api/agent",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:21"
      ]
    },
    "/api/agents": {
      "value": "/api/agents",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:24"
      ]
    },
    "/api/agents/": {
      "value": "/api/agents/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:82"
      ]
    },
    "/api/agents/execute": {
      "value": "/api/agents/execute",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_adapter.py:555"
      ]
    },
    "/api/agents/run_agent_v2": {
      "value": "/api/agents/run_agent_v2",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1516"
      ]
    },
    "/api/agents/start": {
      "value": "/api/agents/start",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/contract_validators.py:77",
        "netra_backend/app/core/cross_service_validators/performance_validators.py:89"
      ]
    },
    "/api/agents/status": {
      "value": "/api/agents/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_adapter.py:556"
      ]
    },
    "/api/agents/v2/thread/{thread_id}/runs": {
      "value": "/api/agents/v2/thread/{thread_id}/runs",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1519"
      ]
    },
    "/api/agents/v2/{run_id}/state": {
      "value": "/api/agents/v2/{run_id}/state",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1518"
      ]
    },
    "/api/agents/v2/{run_id}/status": {
      "value": "/api/agents/v2/{run_id}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/smd.py:1517"
      ]
    },
    "/api/corpus": {
      "value": "/api/corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:92",
        "netra_backend/app/middleware/transaction_middleware.py:30"
      ]
    },
    "/api/database": {
      "value": "/api/database",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:39"
      ]
    },
    "/api/demo": {
      "value": "/api/demo",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:30"
      ]
    },
    "/api/demo/reports/": {
      "value": "/api/demo/reports/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/demo/report_generator.py:37"
      ]
    },
    "/api/discovery": {
      "value": "/api/discovery",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/discovery.py:18"
      ]
    },
    "/api/errors": {
      "value": "/api/errors",
      "category": "paths",
      "locations": [
        "frontend/components/chat/ChatErrorBoundary.tsx:148",
        "frontend/components/chat/ChatErrorBoundary.tsx:201",
        "frontend/components/uvs/UVSErrorBoundary.tsx:145"
      ]
    },
    "/api/example-messages": {
      "value": "/api/example-messages",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/example_messages.py:25"
      ]
    },
    "/api/factory-status": {
      "value": "/api/factory-status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:31",
        "netra_backend/app/routes/factory_status_simple.py:14"
      ]
    },
    "/api/factory-status/compliance": {
      "value": "/api/factory-status/compliance",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:36"
      ]
    },
    "/api/generation": {
      "value": "/api/generation",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:65",
        "netra_backend/app/middleware/transaction_middleware.py:33"
      ]
    },
    "/api/github": {
      "value": "/api/github",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/github_analyzer.py:28"
      ]
    },
    "/api/health": {
      "value": "/api/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:26",
        "netra_backend/app/core/app_factory_route_configs.py:84",
        "netra_backend/app/core/cross_service_validators/contract_validators.py:88",
        "netra_backend/app/core/cross_service_validators/contract_validators.py:535",
        "netra_backend/app/core/cross_service_validators/performance_validators.py:87",
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:104",
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:214",
        "scripts/gcp_health_diagnostics.py:63",
        "scripts/validate_network_constants.py:119"
      ]
    },
    "/api/health/live": {
      "value": "/api/health/live",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:105"
      ]
    },
    "/api/health/ready": {
      "value": "/api/health/ready",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:106"
      ]
    },
    "/api/invoices/": {
      "value": "/api/invoices/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/billing/invoice_generator.py:152"
      ]
    },
    "/api/llm-cache": {
      "value": "/api/llm-cache",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:36"
      ]
    },
    "/api/mcp": {
      "value": "/api/mcp",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:37",
        "netra_backend/app/routes/mcp/config.py:88",
        "netra_backend/app/routes/mcp/config.py:131"
      ]
    },
    "/api/mcp/": {
      "value": "/api/mcp/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:83"
      ]
    },
    "/api/mcp/ws": {
      "value": "/api/mcp/ws",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/config.py:109",
        "netra_backend/app/routes/mcp/config.py:112"
      ]
    },
    "/api/mcp/ws (MCP-specific)": {
      "value": "/api/mcp/ws (MCP-specific)",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:732"
      ]
    },
    "/api/metrics": {
      "value": "/api/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:25"
      ]
    },
    "/api/poll": {
      "value": "/api/poll",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/degradation_strategies.py:249"
      ]
    },
    "/api/references": {
      "value": "/api/references",
      "category": "paths",
      "locations": [
        "frontend/components/ui/reference-picker.tsx:19"
      ]
    },
    "/api/shutdown/status": {
      "value": "/api/shutdown/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:75"
      ]
    },
    "/api/slo": {
      "value": "/api/slo",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:16"
      ]
    },
    "/api/status": {
      "value": "/api/status",
      "category": "paths",
      "locations": [
        "scripts/gcp_health_diagnostics.py:54"
      ]
    },
    "/api/supply": {
      "value": "/api/supply",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:64"
      ]
    },
    "/api/supply/compare": {
      "value": "/api/supply/compare",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/supply.py:84"
      ]
    },
    "/api/supply/enrich": {
      "value": "/api/supply/enrich",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/supply.py:71"
      ]
    },
    "/api/supply/research": {
      "value": "/api/supply/research",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/supply.py:62"
      ]
    },
    "/api/synthetic-data": {
      "value": "/api/synthetic-data",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:165",
        "netra_backend/app/middleware/transaction_middleware.py:31"
      ]
    },
    "/api/synthetic/corpus": {
      "value": "/api/synthetic/corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data_corpus.py:19"
      ]
    },
    "/api/system": {
      "value": "/api/system",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:27"
      ]
    },
    "/api/threads": {
      "value": "/api/threads",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/contract_validators.py:83",
        "netra_backend/app/core/cross_service_validators/performance_validators.py:88",
        "netra_backend/app/routes/threads_route.py:32",
        "scripts/audit_staging_auth_issues.py:188",
        "scripts/audit_staging_auth_issues.py:248"
      ]
    },
    "/api/tools": {
      "value": "/api/tools",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:118",
        "netra_backend/app/middleware/security_middleware.py:165"
      ]
    },
    "/api/tools/": {
      "value": "/api/tools/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:81"
      ]
    },
    "/api/users": {
      "value": "/api/users",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:21"
      ]
    },
    "/api/users/create": {
      "value": "/api/users/create",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:169"
      ]
    },
    "/api/users/me": {
      "value": "/api/users/me",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/config_handler.py:33"
      ]
    },
    "/api/users/password": {
      "value": "/api/users/password",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:169"
      ]
    },
    "/api/v1/auth": {
      "value": "/api/v1/auth",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:119",
        "netra_backend/app/core/unified_error_handler.py:1029",
        "netra_backend/app/middleware/security_response_middleware.py:97",
        "netra_backend/app/routes/auth_proxy.py:16"
      ]
    },
    "/api/v1/monitoring/database": {
      "value": "/api/v1/monitoring/database",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring.py:30"
      ]
    },
    "/api/v2/users/{user_id}/messages": {
      "value": "/api/v2/users/{user_id}/messages",
      "category": "paths",
      "locations": [
        "scripts/demo_enhanced_categorizer.py:119"
      ]
    },
    "/app": {
      "value": "/app",
      "category": "paths",
      "locations": [
        "scripts/fetch_secrets_to_env.py:128"
      ]
    },
    "/app/": {
      "value": "/app/",
      "category": "paths",
      "locations": [
        "scripts/compliance/type_checker.py:156"
      ]
    },
    "/app/alembic.ini": {
      "value": "/app/alembic.ini",
      "category": "paths",
      "locations": [
        "netra_backend/app/db/migration_utils.py:24"
      ]
    },
    "/app/config/alembic.ini": {
      "value": "/app/config/alembic.ini",
      "category": "paths",
      "locations": [
        "netra_backend/app/db/migration_utils.py:23"
      ]
    },
    "/app/public": {
      "value": "/app/public",
      "category": "paths",
      "locations": [
        "scripts/test/verify_docker_optimization.py:110"
      ]
    },
    "/auth": {
      "value": "/auth",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:19",
        "netra_backend/app/routes/auth_proxy.py:173",
        "scripts/debug_frontend_auth.py:55"
      ]
    },
    "/auth/agents/": {
      "value": "/auth/agents/",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1134"
      ]
    },
    "/auth/api-call": {
      "value": "/auth/api-call",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1079"
      ]
    },
    "/auth/callback": {
      "value": "/auth/callback",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/auth_constants.py:177",
        "netra_backend/app/core/network_constants.py:231",
        "netra_backend/app/middleware/security_middleware.py:160",
        "netra_backend/app/routes/auth_routes/callback_processor.py:29",
        "netra_backend/app/routes/auth_routes/config_handler.py:32",
        "netra_backend/app/routes/auth_routes/config_handler.py:88",
        "netra_backend/app/routes/auth_routes/config_handler.py:127",
        "netra_backend/app/routes/auth_routes/config_handler.py:138",
        "netra_backend/app/routes/auth_routes/oauth_validation.py:50",
        "netra_backend/app/routes/auth_routes/oauth_validation.py:52"
      ]
    },
    "/auth/callback/google": {
      "value": "/auth/callback/google",
      "category": "paths",
      "locations": [
        "scripts/validate_oauth_configuration.py:231"
      ]
    },
    "/auth/callback?": {
      "value": "/auth/callback?",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:657"
      ]
    },
    "/auth/callback?token=": {
      "value": "/auth/callback?token=",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/token_management.py:58"
      ]
    },
    "/auth/check-authorization": {
      "value": "/auth/check-authorization",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1004"
      ]
    },
    "/auth/check-blacklist": {
      "value": "/auth/check-blacklist",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:604"
      ]
    },
    "/auth/check-permission": {
      "value": "/auth/check-permission",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1045"
      ]
    },
    "/auth/config": {
      "value": "/auth/config",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/contract_validators.py:121",
        "auth_service/auth_core/routes/auth_routes.py:47",
        "scripts/audit_oauth_gcp_logs.py:82",
        "scripts/audit_staging_auth_issues.py:85",
        "scripts/audit_staging_auth_issues.py:243",
        "scripts/monitor_oauth_flow.py:46",
        "scripts/verify_auth_config.py:28"
      ]
    },
    "/auth/create-agent": {
      "value": "/auth/create-agent",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1107"
      ]
    },
    "/auth/create-token": {
      "value": "/auth/create-token",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:749",
        "auth_service/auth_core/routes/auth_routes.py:529"
      ]
    },
    "/auth/dev/login": {
      "value": "/auth/dev/login",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/dev_login.py:43",
        "auth_service/auth_core/routes/auth_routes.py:82",
        "auth_service/auth_core/routes/auth_routes.py:386"
      ]
    },
    "/auth/dev_login": {
      "value": "/auth/dev_login",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/config_handler.py:40",
        "netra_backend/app/routes/auth_routes/config_handler.py:81"
      ]
    },
    "/auth/error?": {
      "value": "/auth/error?",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:586"
      ]
    },
    "/auth/error?message=": {
      "value": "/auth/error?message=",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/oauth_validation.py:24",
        "netra_backend/app/routes/auth_routes/token_management.py:42",
        "netra_backend/app/routes/auth_routes/token_management.py:65"
      ]
    },
    "/auth/error?message=redirect_uri_mismatch": {
      "value": "/auth/error?message=redirect_uri_mismatch",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/oauth_validation.py:68"
      ]
    },
    "/auth/google": {
      "value": "/auth/google",
      "category": "paths",
      "locations": [
        "scripts/audit_staging_auth_issues.py:111",
        "scripts/audit_staging_auth_issues.py:244"
      ]
    },
    "/auth/google/callback": {
      "value": "/auth/google/callback",
      "category": "paths",
      "locations": [
        "scripts/verify_oauth_redirect_uris.py:84",
        "scripts/verify_oauth_redirect_uris.py:86"
      ]
    },
    "/auth/hash-password": {
      "value": "/auth/hash-password",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:714",
        "auth_service/auth_core/routes/auth_routes.py:502"
      ]
    },
    "/auth/health": {
      "value": "/auth/health",
      "category": "paths",
      "locations": [
        "scripts/gcp_health_diagnostics.py:40",
        "scripts/gcp_health_monitor.py:107",
        "scripts/monitor_oauth_flow.py:26"
      ]
    },
    "/auth/impersonate": {
      "value": "/auth/impersonate",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1261"
      ]
    },
    "/auth/login": {
      "value": "/auth/login",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:443",
        "netra_backend/app/clients/auth_client_core.py:447",
        "netra_backend/app/core/auth_constants.py:178",
        "netra_backend/app/core/cross_service_validators/contract_validators.py:133",
        "netra_backend/app/core/network_constants.py:230",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:287",
        "netra_backend/app/middleware/security_middleware.py:159",
        "netra_backend/app/routes/auth_routes/config_handler.py:31",
        "netra_backend/app/routes/auth_routes/config_handler.py:87",
        "netra_backend/app/routes/auth_routes/config_handler.py:126"
      ]
    },
    "/auth/login/google": {
      "value": "/auth/login/google",
      "category": "paths",
      "locations": [
        "scripts/validate_oauth_configuration.py:232",
        "scripts/validate_oauth_configuration.py:274"
      ]
    },
    "/auth/login?provider=": {
      "value": "/auth/login?provider=",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/login_flow.py:50"
      ]
    },
    "/auth/logout": {
      "value": "/auth/logout",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:583",
        "netra_backend/app/core/auth_constants.py:179",
        "netra_backend/app/core/network_constants.py:232",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:289",
        "netra_backend/app/middleware/security_middleware.py:159",
        "netra_backend/app/routes/auth_routes/config_handler.py:31",
        "netra_backend/app/routes/auth_routes/config_handler.py:87",
        "netra_backend/app/routes/auth_routes/config_handler.py:126",
        "auth_service/auth_core/routes/auth_routes.py:78",
        "auth_service/auth_core/routes/auth_routes.py:304"
      ]
    },
    "/auth/me": {
      "value": "/auth/me",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/config_handler.py:89",
        "netra_backend/app/routes/auth_routes/config_handler.py:128",
        "auth_service/auth_core/routes/auth_routes.py:81",
        "scripts/verify_auth_config.py:33"
      ]
    },
    "/auth/oauth/callback": {
      "value": "/auth/oauth/callback",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:562"
      ]
    },
    "/auth/refresh": {
      "value": "/auth/refresh",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:647",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:291",
        "netra_backend/app/middleware/security_middleware.py:160",
        "auth_service/auth_core/routes/auth_routes.py:94",
        "scripts/audit_staging_auth_issues.py:161",
        "scripts/audit_staging_auth_issues.py:246"
      ]
    },
    "/auth/register": {
      "value": "/auth/register",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:328"
      ]
    },
    "/auth/service-token": {
      "value": "/auth/service-token",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:686",
        "netra_backend/app/routes/auth_routes/debug_helpers.py:123",
        "auth_service/auth_core/routes/auth_routes.py:433",
        "scripts/fix_authentication_system.py:308"
      ]
    },
    "/auth/status": {
      "value": "/auth/status",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:37"
      ]
    },
    "/auth/token": {
      "value": "/auth/token",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_middleware.py:159",
        "netra_backend/app/routes/auth_routes/config_handler.py:32",
        "netra_backend/app/routes/auth_routes/config_handler.py:88",
        "netra_backend/app/routes/auth_routes/config_handler.py:127",
        "auth_service/auth_core/routes/auth_routes.py:80",
        "scripts/audit_oauth_gcp_logs.py:78",
        "scripts/verify_auth_config.py:32"
      ]
    },
    "/auth/users/": {
      "value": "/auth/users/",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1192",
        "netra_backend/app/clients/auth_client_core.py:1223",
        "netra_backend/app/clients/auth_client_core.py:1307",
        "netra_backend/app/clients/auth_client_core.py:1323"
      ]
    },
    "/auth/validate": {
      "value": "/auth/validate",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:371",
        "netra_backend/app/core/cross_service_validators/contract_validators.py:127",
        "scripts/audit_oauth_gcp_logs.py:79",
        "scripts/audit_staging_auth_issues.py:247",
        "scripts/gcp_health_diagnostics.py:42"
      ]
    },
    "/auth/validate-service-token": {
      "value": "/auth/validate-service-token",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1155"
      ]
    },
    "/auth/verify-password": {
      "value": "/auth/verify-password",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:730",
        "auth_service/auth_core/routes/auth_routes.py:474"
      ]
    },
    "/auth_service/": {
      "value": "/auth_service/",
      "category": "paths",
      "locations": [
        "scripts/check_violations.py:148",
        "scripts/remediate_os_environ_violations.py:95"
      ]
    },
    "/auto-refresh": {
      "value": "/auto-refresh",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:359"
      ]
    },
    "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"": {
      "value": "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"",
      "category": "paths",
      "locations": [
        "scripts/dependency_services.py:67"
      ]
    },
    "/bulk": {
      "value": "/bulk",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:228",
        "netra_backend/app/routes/threads_route.py:145"
      ]
    },
    "/c": {
      "value": "/c",
      "category": "paths",
      "locations": [
        "scripts/claude_log_analyzer.py:123",
        "scripts/intelligent_remediation_orchestrator.py:244"
      ]
    },
    "/c/Users/antho/OneDrive/Desktop/Netra/netra-core-generation-1": {
      "value": "/c/Users/antho/OneDrive/Desktop/Netra/netra-core-generation-1",
      "category": "paths",
      "locations": [
        "scripts/fix_monitoring_violations.py:117"
      ]
    },
    "/cache": {
      "value": "/cache",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:359"
      ]
    },
    "/cache/clear": {
      "value": "/cache/clear",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:97",
        "netra_backend/app/routes/mcp_client.py:468"
      ]
    },
    "/cache/invalidate/pattern": {
      "value": "/cache/invalidate/pattern",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:88"
      ]
    },
    "/cache/invalidate/tag": {
      "value": "/cache/invalidate/tag",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:79"
      ]
    },
    "/cache/metrics": {
      "value": "/cache/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:71"
      ]
    },
    "/callback": {
      "value": "/callback",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/router.py:73",
        "scripts/validate_oauth_configuration.py:412"
      ]
    },
    "/callback/google": {
      "value": "/callback/google",
      "category": "paths",
      "locations": [
        "scripts/validate_oauth_configuration.py:412"
      ]
    },
    "/cancel/{job_id}": {
      "value": "/cancel/{job_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:170"
      ]
    },
    "/categories": {
      "value": "/categories",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/unified_tools/router.py:108"
      ]
    },
    "/change-password": {
      "value": "/change-password",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:347"
      ]
    },
    "/chat": {
      "value": "/chat",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/cross_service_validators/data_consistency_validators.py:311",
        "netra_backend/app/routes/demo.py:63",
        "frontend/components/chat/ChatFallbackUI.tsx:113",
        "frontend/components/ChatHistorySection.tsx:89",
        "frontend/components/ChatHistorySection.tsx:90",
        "frontend/components/demo/DemoCompletion.tsx:16",
        "frontend/components/NavLinks.tsx:16"
      ]
    },
    "/circuit-breakers": {
      "value": "/circuit-breakers",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:48"
      ]
    },
    "/circuit_breakers": {
      "value": "/circuit_breakers",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/metrics_api.py:20"
      ]
    },
    "/claude-review": {
      "value": "/claude-review",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:115"
      ]
    },
    "/cleanup": {
      "value": "/cleanup",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:275",
        "netra_backend/app/routes/threads_route.py:171"
      ]
    },
    "/clear": {
      "value": "/clear",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/llm_cache.py:65"
      ]
    },
    "/clickhouse_tables": {
      "value": "/clickhouse_tables",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/generation.py:197"
      ]
    },
    "/clients": {
      "value": "/clients",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:118"
      ]
    },
    "/cloudsql/": {
      "value": "/cloudsql/",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/configuration/staging_validator.py:205",
        "netra_backend/app/core/configuration/staging_validator.py:209",
        "netra_backend/app/core/configuration/validator_database.py:98",
        "netra_backend/app/core/network_constants.py:148",
        "netra_backend/app/core/network_constants.py:370",
        "auth_service/auth_core/database/staging_validation.py:66",
        "auth_service/auth_core/database/staging_validation.py:331",
        "auth_service/auth_core/validation/pre_deployment_validator.py:192",
        "scripts/create_staging_secrets_complete.py:82",
        "scripts/fix_staging_database_url.py:61"
      ]
    },
    "/cloudsql/([^:]+):([^:]+):([^&/?]+)": {
      "value": "/cloudsql/([^:]+):([^:]+):([^&/?]+)",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/database/staging_validation.py:99"
      ]
    },
    "/cloudsql/[^/]+": {
      "value": "/cloudsql/[^/]+",
      "category": "paths",
      "locations": [
        "shared/database_url_builder.py:156"
      ]
    },
    "/cloudsql/[^/]+/(.+)": {
      "value": "/cloudsql/[^/]+/(.+)",
      "category": "paths",
      "locations": [
        "shared/database_url_builder.py:160"
      ]
    },
    "/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1212",
        "scripts/migrate_staging_postgres_secrets.py:64",
        "scripts/migrate_staging_postgres_secrets_auto.py:64"
      ]
    },
    "/comments": {
      "value": "/comments",
      "category": "paths",
      "locations": [
        "scripts/cleanup_staging_environments.py:291"
      ]
    },
    "/compare": {
      "value": "/compare",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:317"
      ]
    },
    "/config": {
      "value": "/config",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/supervisor_admin_init.py:244",
        "netra_backend/app/routes/auth_proxy.py:375",
        "netra_backend/app/routes/auth_proxy.py:371",
        "netra_backend/app/routes/auth_proxy.py:385",
        "netra_backend/app/routes/auth_routes/router.py:58",
        "netra_backend/app/routes/config.py:50",
        "netra_backend/app/routes/config.py:62",
        "netra_backend/app/routes/mcp/main.py:235",
        "frontend/components/chat/constants.tsx:27",
        "scripts/staging_validation_part2_user_flows.py:786"
      ]
    },
    "/config/public": {
      "value": "/config/public",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/config.py:39"
      ]
    },
    "/config/update": {
      "value": "/config/update",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/config.py:83"
      ]
    },
    "/config/user": {
      "value": "/config/user",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:787",
        "scripts/staging_validation_part2_user_flows.py:918"
      ]
    },
    "/config/validate": {
      "value": "/config/validate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/health.py:107",
        "netra_backend/app/routes/system_info.py:115"
      ]
    },
    "/config/websocket": {
      "value": "/config/websocket",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/config.py:19"
      ]
    },
    "/connection-pool/metrics": {
      "value": "/connection-pool/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring.py:83"
      ]
    },
    "/connections": {
      "value": "/connections",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:508"
      ]
    },
    "/connections/refresh": {
      "value": "/connections/refresh",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:522"
      ]
    },
    "/connections/status": {
      "value": "/connections/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:63"
      ]
    },
    "/containers/": {
      "value": "/containers/",
      "category": "paths",
      "locations": [
        "scripts/gtm_api_setup.py:220"
      ]
    },
    "/content": {
      "value": "/content",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/generation.py:29"
      ]
    },
    "/content_corpus": {
      "value": "/content_corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/generation.py:45"
      ]
    },
    "/convert": {
      "value": "/convert",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:296"
      ]
    },
    "/corpus": {
      "value": "/corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/supervisor_admin_init.py:241",
        "frontend/components/chat/constants.tsx:6"
      ]
    },
    "/cors/test": {
      "value": "/cors/test",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health_extended.py:83",
        "auth_service/main.py:603",
        "auth_service/main.py:604"
      ]
    },
    "/create": {
      "value": "/create",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data_corpus.py:32"
      ]
    },
    "/dashboard": {
      "value": "/dashboard",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:51",
        "netra_backend/app/routes/database_monitoring/router.py:42",
        "netra_backend/app/routes/factory_compliance.py:146",
        "netra_backend/app/routes/quality.py:52",
        "scripts/audit_staging_auth_issues.py:112",
        "scripts/validate_isolation_monitoring_alerts.py:646"
      ]
    },
    "/dashboard/summary": {
      "value": "/dashboard/summary",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:90"
      ]
    },
    "/dashboard/{dashboard_id}": {
      "value": "/dashboard/{dashboard_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:354"
      ]
    },
    "/data": {
      "value": "/data",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agents_execute.py:182"
      ]
    },
    "/data/corpus": {
      "value": "/data/corpus",
      "category": "paths",
      "locations": [
        "netra_backend/app/admin/corpus/unified_corpus_admin.py:166",
        "netra_backend/app/admin/corpus/unified_corpus_admin.py:264"
      ]
    },
    "/dataRetentionSettings": {
      "value": "/dataRetentionSettings",
      "category": "paths",
      "locations": [
        "scripts/ga4_automation.py:418"
      ]
    },
    "/database": {
      "value": "/database",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health_extended.py:37"
      ]
    },
    "/database-env": {
      "value": "/database-env",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:500"
      ]
    },
    "/day, $": {
      "value": "/day, $",
      "category": "paths",
      "locations": [
        "scripts/validate_workflow_config.py:201"
      ]
    },
    "/debug/async_tasks": {
      "value": "/debug/async_tasks",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/system_info.py:367"
      ]
    },
    "/debug/routes": {
      "value": "/debug/routes",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/system_info.py:343"
      ]
    },
    "/definitions": {
      "value": "/definitions",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:194"
      ]
    },
    "/demo": {
      "value": "/demo",
      "category": "paths",
      "locations": [
        "scripts/compliance/severity_tiers.py:265"
      ]
    },
    "/dependencies/status": {
      "value": "/dependencies/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/system_info.py:192"
      ]
    },
    "/dev/login": {
      "value": "/dev/login",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:120",
        "netra_backend/app/routes/auth_proxy.py:341"
      ]
    },
    "/dev/null": {
      "value": "/dev/null",
      "category": "paths",
      "locations": [
        "scripts/comprehensive_staging_analysis.py:63",
        "scripts/fix_frontend_auth.py:48"
      ]
    },
    "/dev_launcher/": {
      "value": "/dev_launcher/",
      "category": "paths",
      "locations": [
        "scripts/check_violations.py:156",
        "scripts/remediate_os_environ_violations.py:99"
      ]
    },
    "/dev_login": {
      "value": "/dev_login",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:336",
        "netra_backend/app/routes/auth_routes/router.py:89"
      ]
    },
    "/docs": {
      "value": "/docs",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:117",
        "netra_backend/app/core/unified_error_handler.py:1027",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:65",
        "netra_backend/app/middleware/security_headers_middleware.py:91",
        "netra_backend/app/middleware/security_headers_middleware.py:156",
        "netra_backend/app/middleware/security_response_middleware.py:95",
        "netra_backend/app/middleware/telemetry_middleware.py:58",
        "auth_service/main.py:393",
        "scripts/fix_authentication_system.py:267",
        "scripts/gcp_health_diagnostics.py:41"
      ]
    },
    "/document": {
      "value": "/document",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:173"
      ]
    },
    "/does-not-exist": {
      "value": "/does-not-exist",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:866"
      ]
    },
    "/download?format=": {
      "value": "/download?format=",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/billing/invoice_generator.py:152"
      ]
    },
    "/emergency/alert": {
      "value": "/emergency/alert",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:372"
      ]
    },
    "/emergency/health-check": {
      "value": "/emergency/health-check",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:392"
      ]
    },
    "/errors": {
      "value": "/errors",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/gcp_monitoring.py:77"
      ]
    },
    "/errors/{error_id}": {
      "value": "/errors/{error_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/gcp_monitoring.py:110"
      ]
    },
    "/errors/{error_id}/resolve": {
      "value": "/errors/{error_id}/resolve",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/gcp_monitoring.py:154"
      ]
    },
    "/etc/": {
      "value": "/etc/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:22"
      ]
    },
    "/etc/passwd": {
      "value": "/etc/passwd",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/validation_rules.py:93",
        "netra_backend/app/middleware/security_validation_helpers.py:65"
      ]
    },
    "/etc/secrets/netra-staging-sa-key.json": {
      "value": "/etc/secrets/netra-staging-sa-key.json",
      "category": "paths",
      "locations": [
        "scripts/run_gtm_setup.py:54"
      ]
    },
    "/etc/shadow": {
      "value": "/etc/shadow",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/validation_rules.py:94"
      ]
    },
    "/events": {
      "value": "/events",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:88"
      ]
    },
    "/example": {
      "value": "/example",
      "category": "paths",
      "locations": [
        "scripts/compliance/severity_tiers.py:265"
      ]
    },
    "/execute": {
      "value": "/execute",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agents_execute.py:67",
        "netra_backend/app/routes/unified_tools/router.py:96"
      ]
    },
    "/export": {
      "value": "/export",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:241"
      ]
    },
    "/export/report": {
      "value": "/export/report",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:102"
      ]
    },
    "/exports/": {
      "value": "/exports/",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/production_tool_corpus.py:298"
      ]
    },
    "/extract": {
      "value": "/extract",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:233"
      ]
    },
    "/factory/health": {
      "value": "/factory/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_factory.py:480"
      ]
    },
    "/factory/status": {
      "value": "/factory/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_factory.py:444"
      ]
    },
    "/factory/{user_id}": {
      "value": "/factory/{user_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_factory.py:47"
      ]
    },
    "/favicon.ico": {
      "value": "/favicon.ico",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/telemetry_middleware.py:60",
        "scripts/gcp_health_diagnostics.py:64",
        "scripts/staging_validation_e2e.py:381"
      ]
    },
    "/force-cancel": {
      "value": "/force-cancel",
      "category": "paths",
      "locations": [
        "scripts/force_cancel_workflow.py:30"
      ]
    },
    "/frontend/": {
      "value": "/frontend/",
      "category": "paths",
      "locations": [
        "scripts/check_violations.py:154"
      ]
    },
    "/generate": {
      "value": "/generate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:62",
        "netra_backend/app/routes/synthetic_data.py:113"
      ]
    },
    "/generate-simple": {
      "value": "/generate-simple",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status_simple.py:87"
      ]
    },
    "/groups/": {
      "value": "/groups/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/monitoring/gcp_error_service.py:156"
      ]
    },
    "/health": {
      "value": "/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_config.py:101",
        "netra_backend/app/core/app_factory_route_configs.py:83",
        "netra_backend/app/core/circuit_breaker_health_checkers.py:41",
        "netra_backend/app/core/cross_service_validators/contract_validators.py:535",
        "netra_backend/app/core/health/unified_health_checker.py:65",
        "netra_backend/app/core/health_checkers.py:811",
        "netra_backend/app/core/middleware_setup.py:117",
        "netra_backend/app/core/network_constants.py:228",
        "netra_backend/app/core/unified_error_handler.py:1027",
        "netra_backend/app/llm/gemini_config.py:218"
      ]
    },
    "/health,/metrics,/docs,/openapi.json": {
      "value": "/health,/metrics,/docs,/openapi.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/telemetry_config.py:64",
        "netra_backend/app/core/telemetry_config.py:136"
      ]
    },
    "/health-score": {
      "value": "/health-score",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:228"
      ]
    },
    "/health/": {
      "value": "/health/",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_e2e.py:260"
      ]
    },
    "/health/clickhouse": {
      "value": "/health/clickhouse",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/health_clickhouse.py:25"
      ]
    },
    "/health/clickhouse/analytics": {
      "value": "/health/clickhouse/analytics",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/health_clickhouse.py:348"
      ]
    },
    "/health/clickhouse/connection": {
      "value": "/health/clickhouse/connection",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/health_clickhouse.py:137"
      ]
    },
    "/health/clickhouse/dependencies": {
      "value": "/health/clickhouse/dependencies",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/health_clickhouse.py:292"
      ]
    },
    "/health/clickhouse/metrics": {
      "value": "/health/clickhouse/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/health_clickhouse.py:230"
      ]
    },
    "/health/clickhouse/reconnect": {
      "value": "/health/clickhouse/reconnect",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/health_clickhouse.py:179"
      ]
    },
    "/health/component/{component_name}": {
      "value": "/health/component/{component_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/unified_health.py:187",
        "netra_backend/app/routes/unified_health.py:188",
        "netra_backend/app/routes/unified_health.py:189"
      ]
    },
    "/health/database": {
      "value": "/health/database",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:160",
        "netra_backend/app/routes/circuit_breaker_health.py:161",
        "netra_backend/app/routes/circuit_breaker_health.py:162",
        "scripts/gcp_health_diagnostics.py:51",
        "scripts/gcp_health_monitor.py:117"
      ]
    },
    "/health/external-apis": {
      "value": "/health/external-apis",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:182",
        "netra_backend/app/routes/circuit_breaker_health.py:183",
        "netra_backend/app/routes/circuit_breaker_health.py:184"
      ]
    },
    "/health/live": {
      "value": "/health/live",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:102",
        "netra_backend/app/middleware/security_response_middleware.py:48",
        "netra_backend/app/routes/unified_health.py:104",
        "netra_backend/app/routes/unified_health.py:105",
        "netra_backend/app/routes/unified_health.py:106"
      ]
    },
    "/health/llm": {
      "value": "/health/llm",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:138",
        "netra_backend/app/routes/circuit_breaker_health.py:139",
        "netra_backend/app/routes/circuit_breaker_health.py:140"
      ]
    },
    "/health/ready": {
      "value": "/health/ready",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/health/unified_health_checker.py:66",
        "netra_backend/app/middleware/api_gateway_coordinator.py:121",
        "netra_backend/app/middleware/graceful_shutdown_middleware.py:103",
        "netra_backend/app/middleware/security_response_middleware.py:48",
        "netra_backend/app/routes/unified_health.py:144",
        "netra_backend/app/routes/unified_health.py:145",
        "netra_backend/app/routes/unified_health.py:146",
        "auth_service/auth_core/validation/pre_deployment_validator.py:570",
        "auth_service/main.py:546",
        "auth_service/main.py:547"
      ]
    },
    "/health/startup": {
      "value": "/health/startup",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/health/unified_health_checker.py:67"
      ]
    },
    "/health/summary": {
      "value": "/health/summary",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:206",
        "netra_backend/app/routes/circuit_breaker_health.py:207",
        "netra_backend/app/routes/circuit_breaker_health.py:208"
      ]
    },
    "/health/system": {
      "value": "/health/system",
      "category": "paths",
      "locations": [
        "scripts/gcp_health_diagnostics.py:52",
        "scripts/gcp_health_monitor.py:118"
      ]
    },
    "/help": {
      "value": "/help",
      "category": "paths",
      "locations": [
        "frontend/components/chat/ChatFallbackUI.tsx:179"
      ]
    },
    "/history": {
      "value": "/history",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:42"
      ]
    },
    "/home/": {
      "value": "/home/",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/agent_websocket_bridge.py:2211",
        "netra_backend/app/services/agent_websocket_bridge.py:2211",
        "netra_backend/app/services/websocket_bridge_factory.py:765",
        "netra_backend/app/services/websocket_bridge_factory.py:765"
      ]
    },
    "/industry/{industry}/templates": {
      "value": "/industry/{industry}/templates",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:73"
      ]
    },
    "/info": {
      "value": "/info",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:37",
        "netra_backend/app/routes/system_info.py:70"
      ]
    },
    "/ingest_data": {
      "value": "/ingest_data",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/generation.py:54"
      ]
    },
    "/initiate?pr_number=": {
      "value": "/initiate?pr_number=",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/oauth_validation.py:33"
      ]
    },
    "/invalid": {
      "value": "/invalid",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:296"
      ]
    },
    "/invalid/path": {
      "value": "/invalid/path",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:865"
      ]
    },
    "/isolation/alerts": {
      "value": "/isolation/alerts",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:542"
      ]
    },
    "/isolation/dashboard": {
      "value": "/isolation/dashboard",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:482"
      ]
    },
    "/isolation/dashboard/config": {
      "value": "/isolation/dashboard/config",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:585"
      ]
    },
    "/isolation/health": {
      "value": "/isolation/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:304"
      ]
    },
    "/isolation/health-check": {
      "value": "/isolation/health-check",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:441"
      ]
    },
    "/isolation/metrics": {
      "value": "/isolation/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:346"
      ]
    },
    "/isolation/violations": {
      "value": "/isolation/violations",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:384"
      ]
    },
    "/issues/": {
      "value": "/issues/",
      "category": "paths",
      "locations": [
        "scripts/cleanup_staging_environments.py:291"
      ]
    },
    "/jobs/{job_id}": {
      "value": "/jobs/{job_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/generation.py:71"
      ]
    },
    "/k": {
      "value": "/k",
      "category": "paths",
      "locations": [
        "scripts/claude_log_analyzer.py:125",
        "scripts/intelligent_remediation_orchestrator.py:246"
      ]
    },
    "/latest": {
      "value": "/latest",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:36"
      ]
    },
    "/live": {
      "value": "/live",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:191",
        "netra_backend/app/routes/health.py:192",
        "netra_backend/app/routes/health.py:193",
        "netra_backend/app/routes/health_check.py:113",
        "netra_backend/app/routes/health_check.py:114",
        "netra_backend/app/routes/health_check.py:115"
      ]
    },
    "/login": {
      "value": "/login",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:59",
        "netra_backend/app/routes/auth_proxy.py:327",
        "netra_backend/app/routes/auth_proxy.py:322",
        "netra_backend/app/routes/auth_proxy.py:391",
        "netra_backend/app/routes/auth_routes/router.py:67",
        "frontend/components/AuthGuard.tsx:24",
        "frontend/components/NavLinks.tsx:51",
        "scripts/audit_staging_auth_issues.py:52",
        "scripts/audit_staging_auth_issues.py:289",
        "scripts/debug_frontend_auth.py:55"
      ]
    },
    "/login route returns 404 - Next.js routing issue": {
      "value": "/login route returns 404 - Next.js routing issue",
      "category": "paths",
      "locations": [
        "scripts/audit_staging_auth_issues.py:56"
      ]
    },
    "/login...": {
      "value": "/login...",
      "category": "paths",
      "locations": [
        "scripts/audit_staging_auth_issues.py:51"
      ]
    },
    "/logout": {
      "value": "/logout",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:126",
        "netra_backend/app/routes/auth_proxy.py:361",
        "netra_backend/app/routes/auth_proxy.py:350",
        "netra_backend/app/routes/auth_routes/router.py:83"
      ]
    },
    "/logs": {
      "value": "/logs",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/supervisor_admin_init.py:245",
        "netra_backend/app/routes/generation.py:37",
        "frontend/components/chat/constants.tsx:34"
      ]
    },
    "/mcp": {
      "value": "/mcp",
      "category": "paths",
      "locations": [
        "netra_backend/app/mcp_client/transports/http_client.py:190"
      ]
    },
    "/mcp/call": {
      "value": "/mcp/call",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/tool_permission_middleware.py:145"
      ]
    },
    "/mcp/events": {
      "value": "/mcp/events",
      "category": "paths",
      "locations": [
        "netra_backend/app/mcp_client/transports/http_client.py:228"
      ]
    },
    "/me": {
      "value": "/me",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/router.py:29"
      ]
    },
    "/message": {
      "value": "/message",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:299",
        "scripts/staging_validation_part2_corrected.py:507"
      ]
    },
    "/metricDescriptors/run.googleapis.com/request_count": {
      "value": "/metricDescriptors/run.googleapis.com/request_count",
      "category": "paths",
      "locations": [
        "scripts/cleanup_staging_environments.py:156"
      ]
    },
    "/metrics": {
      "value": "/metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:117",
        "netra_backend/app/core/unified_error_handler.py:1027",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:65",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:285",
        "netra_backend/app/middleware/security_response_middleware.py:95",
        "netra_backend/app/middleware/telemetry_middleware.py:57",
        "netra_backend/app/monitoring/websocket_dashboard.py:640",
        "netra_backend/app/routes/circuit_breaker_health.py:106",
        "netra_backend/app/routes/llm_cache.py:110",
        "netra_backend/app/routes/threads_route.py:163"
      ]
    },
    "/metrics-history": {
      "value": "/metrics-history",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:178"
      ]
    },
    "/metrics/business-value/objectives": {
      "value": "/metrics/business-value/objectives",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:76"
      ]
    },
    "/metrics/current": {
      "value": "/metrics/current",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:48"
      ]
    },
    "/metrics/history": {
      "value": "/metrics/history",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:54"
      ]
    },
    "/metrics/prometheus": {
      "value": "/metrics/prometheus",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_dashboard.py:654"
      ]
    },
    "/metrics/quality/compliance": {
      "value": "/metrics/quality/compliance",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:84"
      ]
    },
    "/metrics/synthetic": {
      "value": "/metrics/synthetic",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:91"
      ]
    },
    "/metrics/users": {
      "value": "/metrics/users",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:317"
      ]
    },
    "/metrics/velocity/trend": {
      "value": "/metrics/velocity/trend",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:68"
      ]
    },
    "/metrics/{circuit_name}": {
      "value": "/metrics/{circuit_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:115"
      ]
    },
    "/metrics/{metric_name}": {
      "value": "/metrics/{metric_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:53"
      ]
    },
    "/migrate-legacy": {
      "value": "/migrate-legacy",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/unified_tools/router.py:165"
      ]
    },
    "/min": {
      "value": "/min",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_isolated.py:85"
      ]
    },
    "/mock": {
      "value": "/mock",
      "category": "paths",
      "locations": [
        "scripts/compliance/severity_tiers.py:253"
      ]
    },
    "/mock$": {
      "value": "/mock$",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup_module.py:376"
      ]
    },
    "/mock?": {
      "value": "/mock?",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup_module.py:375"
      ]
    },
    "/models": {
      "value": "/models",
      "category": "paths",
      "locations": [
        "netra_backend/app/llm/gemini_config.py:219"
      ]
    },
    "/module/{module_name}/details": {
      "value": "/module/{module_name}/details",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:136"
      ]
    },
    "/monitoring": {
      "value": "/monitoring",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/fastapi_auth_middleware.py:285",
        "netra_backend/app/routes/gcp_monitoring.py:36",
        "netra_backend/app/routes/monitoring.py:39"
      ]
    },
    "/monitoring/isolation": {
      "value": "/monitoring/isolation",
      "category": "paths",
      "locations": [
        "scripts/validate_isolation_monitoring_alerts.py:88"
      ]
    },
    "/monitoring/start": {
      "value": "/monitoring/start",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:230",
        "netra_backend/app/routes/database_monitoring/router.py:139",
        "netra_backend/app/routes/quality.py:94"
      ]
    },
    "/monitoring/stop": {
      "value": "/monitoring/stop",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:244",
        "netra_backend/app/routes/database_monitoring/router.py:147",
        "netra_backend/app/routes/quality.py:100"
      ]
    },
    "/monitoring/websocket": {
      "value": "/monitoring/websocket",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_dashboard.py:60",
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:292"
      ]
    },
    "/month": {
      "value": "/month",
      "category": "paths",
      "locations": [
        "netra_backend/app/formatters/example_response_formatter.py:580",
        "scripts/validate_workflow_config.py:202"
      ]
    },
    "/netra-": {
      "value": "/netra-",
      "category": "paths",
      "locations": [
        "scripts/deploy_token_optimization_production.py:368"
      ]
    },
    "/netra-apex/": {
      "value": "/netra-apex/",
      "category": "paths",
      "locations": [
        "scripts/check_violations.py:238"
      ]
    },
    "/netra_backend/": {
      "value": "/netra_backend/",
      "category": "paths",
      "locations": [
        "scripts/check_violations.py:152",
        "scripts/remediate_os_environ_violations.py:93"
      ]
    },
    "/netra_backend/app/db/clickhouse.py": {
      "value": "/netra_backend/app/db/clickhouse.py",
      "category": "paths",
      "locations": [
        "scripts/verify_clickhouse_ssot.py:180"
      ]
    },
    "/node_modules/": {
      "value": "/node_modules/",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:72"
      ]
    },
    "/nonexistent": {
      "value": "/nonexistent",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:864"
      ]
    },
    "/nonexistent-endpoint": {
      "value": "/nonexistent-endpoint",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_corrected.py:684"
      ]
    },
    "/notifications/settings": {
      "value": "/notifications/settings",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:277",
        "netra_backend/app/routes/users.py:296"
      ]
    },
    "/oauth/google/config": {
      "value": "/oauth/google/config",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_e2e.py:438"
      ]
    },
    "/oauth/providers": {
      "value": "/oauth/providers",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/routes/auth_routes.py:670"
      ]
    },
    "/oauth/status": {
      "value": "/oauth/status",
      "category": "paths",
      "locations": [
        "auth_service/main.py:618",
        "auth_service/main.py:619"
      ]
    },
    "/openapi.json": {
      "value": "/openapi.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:117",
        "netra_backend/app/core/unified_error_handler.py:1027",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:65",
        "netra_backend/app/middleware/security_headers_middleware.py:91",
        "netra_backend/app/middleware/security_headers_middleware.py:156",
        "netra_backend/app/middleware/security_response_middleware.py:95",
        "netra_backend/app/middleware/telemetry_middleware.py:59",
        "auth_service/main.py:395"
      ]
    },
    "/optimization": {
      "value": "/optimization",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agents_execute.py:192"
      ]
    },
    "/orchestration-alignment": {
      "value": "/orchestration-alignment",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:106"
      ]
    },
    "/pattern/{pattern}": {
      "value": "/pattern/{pattern}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/llm_cache.py:157"
      ]
    },
    "/performance": {
      "value": "/performance",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/llm_cache.py:115"
      ]
    },
    "/performance/summary": {
      "value": "/performance/summary",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:131"
      ]
    },
    "/permissions": {
      "value": "/permissions",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1307"
      ]
    },
    "/permissions/{tool_name}": {
      "value": "/permissions/{tool_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/unified_tools/router.py:126"
      ]
    },
    "/ping": {
      "value": "/ping",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/clickhouse_port_discovery.py:376",
        "netra_backend/app/core/network_constants.py:316",
        "netra_backend/app/routes/monitoring.py:290",
        "scripts/docker_health_check.py:23",
        "scripts/wait_for_db.py:103"
      ]
    },
    "/pool-metrics": {
      "value": "/pool-metrics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health_extended.py:77"
      ]
    },
    "/pool-status": {
      "value": "/pool-status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:143"
      ]
    },
    "/preferences": {
      "value": "/preferences",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:312",
        "netra_backend/app/routes/users.py:331"
      ]
    },
    "/preview": {
      "value": "/preview",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:198"
      ]
    },
    "/proc/": {
      "value": "/proc/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:24"
      ]
    },
    "/proc/self/cgroup": {
      "value": "/proc/self/cgroup",
      "category": "paths",
      "locations": [
        "shared/database_url_builder.py:77",
        "shared/database_url_builder.py:78",
        "shared/port_discovery.py:211",
        "shared/port_discovery.py:212"
      ]
    },
    "/profile": {
      "value": "/profile",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/users.py:74",
        "netra_backend/app/routes/users.py:129"
      ]
    },
    "/prompts": {
      "value": "/prompts",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:215"
      ]
    },
    "/prompts/get": {
      "value": "/prompts/get",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:225"
      ]
    },
    "/protected": {
      "value": "/protected",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:288"
      ]
    },
    "/public": {
      "value": "/public",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_corrected.py:604"
      ]
    },
    "/pulls/": {
      "value": "/pulls/",
      "category": "paths",
      "locations": [
        "scripts/cleanup_staging_environments.py:101"
      ]
    },
    "/q": {
      "value": "/q",
      "category": "paths",
      "locations": [
        "scripts/dependency_installer.py:162"
      ]
    },
    "/raw": {
      "value": "/raw",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/metrics_api.py:79"
      ]
    },
    "/readiness": {
      "value": "/readiness",
      "category": "paths",
      "locations": [
        "auth_service/health_check.py:73",
        "auth_service/main.py:596",
        "auth_service/main.py:597"
      ]
    },
    "/ready": {
      "value": "/ready",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:410",
        "netra_backend/app/routes/health.py:411",
        "netra_backend/app/routes/health.py:412",
        "netra_backend/app/routes/health_check.py:37",
        "netra_backend/app/routes/health_check.py:38",
        "netra_backend/app/routes/health_check.py:39"
      ]
    },
    "/record/{slo_name}": {
      "value": "/record/{slo_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:166"
      ]
    },
    "/redoc": {
      "value": "/redoc",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:117",
        "netra_backend/app/core/unified_error_handler.py:1027",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:65",
        "netra_backend/app/middleware/security_headers_middleware.py:91",
        "netra_backend/app/middleware/security_headers_middleware.py:156",
        "netra_backend/app/middleware/security_response_middleware.py:95",
        "auth_service/main.py:394"
      ]
    },
    "/references": {
      "value": "/references",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/references.py:31",
        "netra_backend/app/routes/references.py:61"
      ]
    },
    "/references/search": {
      "value": "/references/search",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/references.py:40"
      ]
    },
    "/references/{reference_id}": {
      "value": "/references/{reference_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/references.py:52",
        "netra_backend/app/routes/references.py:84",
        "netra_backend/app/routes/references.py:102",
        "netra_backend/app/routes/references.py:111"
      ]
    },
    "/register": {
      "value": "/register",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_proxy.py:53",
        "netra_backend/app/routes/auth_proxy.py:313",
        "netra_backend/app/routes/auth_proxy.py:302",
        "netra_backend/app/routes/auth_proxy.py:397"
      ]
    },
    "/remediation/{module_name}": {
      "value": "/remediation/{module_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:87"
      ]
    },
    "/report": {
      "value": "/report",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:126"
      ]
    },
    "/reports/generate": {
      "value": "/reports/generate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/quality.py:82"
      ]
    },
    "/requirements.txt": {
      "value": "/requirements.txt",
      "category": "paths",
      "locations": [
        "scripts/fix_deployment_logging.py:210"
      ]
    },
    "/resources": {
      "value": "/resources",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:196",
        "netra_backend/app/routes/mcp_client.py:438"
      ]
    },
    "/resources/fetch": {
      "value": "/resources/fetch",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:453"
      ]
    },
    "/resources/read": {
      "value": "/resources/read",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:205",
        "netra_backend/app/routes/mcp_client.py:200"
      ]
    },
    "/revoke-sessions": {
      "value": "/revoke-sessions",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1323"
      ]
    },
    "/robots.txt": {
      "value": "/robots.txt",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_e2e.py:382"
      ]
    },
    "/roi/calculate": {
      "value": "/roi/calculate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:81"
      ]
    },
    "/role": {
      "value": "/role",
      "category": "paths",
      "locations": [
        "netra_backend/app/clients/auth_client_core.py:1192"
      ]
    },
    "/run_agent": {
      "value": "/run_agent",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:130",
        "scripts/staging_validation_part2_corrected.py:506"
      ]
    },
    "/run_agent_v2": {
      "value": "/run_agent_v2",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:158"
      ]
    },
    "/runs": {
      "value": "/runs",
      "category": "paths",
      "locations": [
        "scripts/cleanup_workflow_runs.py:54"
      ]
    },
    "/s": {
      "value": "/s",
      "category": "paths",
      "locations": [
        "scripts/dependency_installer.py:162"
      ]
    },
    "/sample": {
      "value": "/sample",
      "category": "paths",
      "locations": [
        "scripts/compliance/severity_tiers.py:265"
      ]
    },
    "/sandbox": {
      "value": "/sandbox",
      "category": "paths",
      "locations": [
        "netra_backend/app/tools/sandboxed_interpreter.py:36"
      ]
    },
    "/sandbox/script.py": {
      "value": "/sandbox/script.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/tools/sandboxed_interpreter.py:119"
      ]
    },
    "/schema-validation": {
      "value": "/schema-validation",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:533"
      ]
    },
    "/score": {
      "value": "/score",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:58"
      ]
    },
    "/scripts/": {
      "value": "/scripts/",
      "category": "paths",
      "locations": [
        "scripts/remediate_os_environ_violations.py:101"
      ]
    },
    "/search": {
      "value": "/search",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:198",
        "netra_backend/app/routes/corpus.py:211",
        "netra_backend/app/tools/deep_research_api.py:56"
      ]
    },
    "/sec": {
      "value": "/sec",
      "category": "paths",
      "locations": [
        "scripts/docker_validation_benchmark.py:323"
      ]
    },
    "/secrets/": {
      "value": "/secrets/",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/secret_loader.py:72",
        "scripts/cleanup_clickhouse_secrets_sdk.py:129",
        "scripts/fetch_secrets_to_env.py:18",
        "scripts/update_postgres_password_sdk.py:22",
        "scripts/update_staging_clickhouse_secrets.py:57",
        "scripts/update_staging_clickhouse_secrets.py:166",
        "scripts/validate_oauth_deployment.py:134"
      ]
    },
    "/security": {
      "value": "/security",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/metrics_api.py:226"
      ]
    },
    "/sentiment": {
      "value": "/sentiment",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/threads_route.py:155"
      ]
    },
    "/servers": {
      "value": "/servers",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:55",
        "netra_backend/app/routes/mcp_client.py:66",
        "netra_backend/app/routes/mcp_client.py:92"
      ]
    },
    "/servers/{server_name}/connect": {
      "value": "/servers/{server_name}/connect",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:116"
      ]
    },
    "/servers/{server_name}/disconnect": {
      "value": "/servers/{server_name}/disconnect",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:392"
      ]
    },
    "/servers/{server_name}/health": {
      "value": "/servers/{server_name}/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:491",
        "netra_backend/app/routes/mcp_client.py:492",
        "netra_backend/app/routes/mcp_client.py:493"
      ]
    },
    "/servers/{server_name}/resources": {
      "value": "/servers/{server_name}/resources",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:176"
      ]
    },
    "/servers/{server_name}/status": {
      "value": "/servers/{server_name}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:86",
        "netra_backend/app/routes/mcp_client.py:370"
      ]
    },
    "/servers/{server_name}/tools": {
      "value": "/servers/{server_name}/tools",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:134"
      ]
    },
    "/services": {
      "value": "/services",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/discovery.py:147"
      ]
    },
    "/services/{service_name}": {
      "value": "/services/{service_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/discovery.py:201"
      ]
    },
    "/session/{session_id}/feedback": {
      "value": "/session/{session_id}/feedback",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:121"
      ]
    },
    "/session/{session_id}/status": {
      "value": "/session/{session_id}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/demo.py:113"
      ]
    },
    "/sessions": {
      "value": "/sessions",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:129",
        "netra_backend/app/routes/users.py:249"
      ]
    },
    "/sessions/{session_id}": {
      "value": "/sessions/{session_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:139",
        "netra_backend/app/routes/mcp/main.py:149",
        "netra_backend/app/routes/users.py:263"
      ]
    },
    "/settings": {
      "value": "/settings",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/admin.py:38",
        "netra_backend/app/routes/users.py:166",
        "netra_backend/app/routes/users.py:186",
        "scripts/staging_validation_part2_user_flows.py:788"
      ]
    },
    "/settings/default_log_table": {
      "value": "/settings/default_log_table",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/admin.py:134",
        "netra_backend/app/routes/admin.py:153"
      ]
    },
    "/settings/log_table": {
      "value": "/settings/log_table",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/admin.py:61"
      ]
    },
    "/settings/log_tables": {
      "value": "/settings/log_tables",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/admin.py:80",
        "netra_backend/app/routes/admin.py:101"
      ]
    },
    "/settings/time_period": {
      "value": "/settings/time_period",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/admin.py:120"
      ]
    },
    "/shared/": {
      "value": "/shared/",
      "category": "paths",
      "locations": [
        "scripts/remediate_os_environ_violations.py:103"
      ]
    },
    "/site-packages/": {
      "value": "/site-packages/",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:72"
      ]
    },
    "/spec": {
      "value": "/spec",
      "category": "paths",
      "locations": [
        "scripts/compliance/severity_tiers.py:253",
        "scripts/compliance/severity_tiers.py:259"
      ]
    },
    "/staging/backend:pr-": {
      "value": "/staging/backend:pr-",
      "category": "paths",
      "locations": [
        "scripts/cleanup_staging_environments.py:238"
      ]
    },
    "/staging/frontend:pr-": {
      "value": "/staging/frontend:pr-",
      "category": "paths",
      "locations": [
        "scripts/cleanup_staging_environments.py:246"
      ]
    },
    "/startup": {
      "value": "/startup",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health_check.py:186",
        "netra_backend/app/routes/health_check.py:187",
        "netra_backend/app/routes/health_check.py:188"
      ]
    },
    "/statistics": {
      "value": "/statistics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/quality.py:88",
        "netra_backend/app/routes/threads_route.py:119"
      ]
    },
    "/stats": {
      "value": "/stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/example_messages.py:105",
        "netra_backend/app/routes/llm_cache.py:23",
        "netra_backend/app/routes/llm_cache.py:47"
      ]
    },
    "/status": {
      "value": "/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:46",
        "netra_backend/app/middleware/fastapi_auth_middleware.py:283",
        "netra_backend/app/routes/circuit_breaker_health.py:59",
        "netra_backend/app/routes/database_monitoring/router.py:155",
        "netra_backend/app/routes/example_messages.py:146",
        "netra_backend/app/routes/mcp/main.py:46",
        "frontend/components/chat/ChatFallbackUI.tsx:219"
      ]
    },
    "/status/{circuit_name}": {
      "value": "/status/{circuit_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/circuit_breaker_health.py:82"
      ]
    },
    "/status/{job_id}": {
      "value": "/status/{job_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:140"
      ]
    },
    "/status/{slo_name}": {
      "value": "/status/{slo_name}",
      "category": "paths",
      "locations": [
        "netra_backend/app/api/slo_endpoints.py:63"
      ]
    },
    "/stream": {
      "value": "/stream",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:344",
        "scripts/staging_validation_part2_corrected.py:508"
      ]
    },
    "/summary-stats": {
      "value": "/summary-stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:196"
      ]
    },
    "/support": {
      "value": "/support",
      "category": "paths",
      "locations": [
        "frontend/components/chat/ChatFallbackUI.tsx:324"
      ]
    },
    "/symbols/find-references": {
      "value": "/symbols/find-references",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:389"
      ]
    },
    "/symbols/go-to-definition": {
      "value": "/symbols/go-to-definition",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:357"
      ]
    },
    "/symbols/hierarchy/{file_path:path}": {
      "value": "/symbols/hierarchy/{file_path:path}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:415"
      ]
    },
    "/symbols/index/rebuild": {
      "value": "/symbols/index/rebuild",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:465"
      ]
    },
    "/symbols/index/stats": {
      "value": "/symbols/index/stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:533"
      ]
    },
    "/symbols/index/update-file": {
      "value": "/symbols/index/update-file",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:499"
      ]
    },
    "/symbols/navigate": {
      "value": "/symbols/navigate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:432"
      ]
    },
    "/symbols/search": {
      "value": "/symbols/search",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:254",
        "netra_backend/app/routes/corpus.py:289"
      ]
    },
    "/synthetic": {
      "value": "/synthetic",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/supervisor_admin_init.py:242",
        "frontend/components/chat/constants.tsx:13"
      ]
    },
    "/synthetic_data": {
      "value": "/synthetic_data",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/generation.py:63"
      ]
    },
    "/sys/": {
      "value": "/sys/",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:25"
      ]
    },
    "/system": {
      "value": "/system",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health_extended.py:51"
      ]
    },
    "/system/comprehensive": {
      "value": "/system/comprehensive",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/health.py:736"
      ]
    },
    "/system/status": {
      "value": "/system/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/monitoring/websocket_monitoring_integration.py:404"
      ]
    },
    "/tables": {
      "value": "/tables",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:32"
      ]
    },
    "/templates": {
      "value": "/templates",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:220"
      ]
    },
    "/test": {
      "value": "/test",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status/router.py:96",
        "scripts/compliance/core.py:207",
        "scripts/compliance/severity_tiers.py:253",
        "scripts/compliance/severity_tiers.py:259",
        "scripts/generate_wip_report.py:90",
        "scripts/remediate_os_environ_violations.py:89",
        "scripts/scan_os_environ_violations.py:143"
      ]
    },
    "/test-connection": {
      "value": "/test-connection",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/monitoring.py:222"
      ]
    },
    "/test-simple": {
      "value": "/test-simple",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_status_simple.py:94"
      ]
    },
    "/test/": {
      "value": "/test/",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:99",
        "scripts/compliance/relaxed_violation_counter.py:129"
      ]
    },
    "/test/concurrent-load": {
      "value": "/test/concurrent-load",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring.py:124"
      ]
    },
    "/tests": {
      "value": "/tests",
      "category": "paths",
      "locations": [
        "scripts/compliance/core.py:207",
        "scripts/compliance/severity_tiers.py:253",
        "scripts/compliance/severity_tiers.py:259",
        "scripts/generate_wip_report.py:90"
      ]
    },
    "/tests/": {
      "value": "/tests/",
      "category": "paths",
      "locations": [
        "scripts/boundary_enforcer_type_checks.py:172",
        "scripts/check_repository_compliance.py:284",
        "scripts/compliance/core.py:99",
        "scripts/compliance/relaxed_violation_counter.py:128",
        "scripts/compliance/stub_checker.py:52",
        "scripts/find_large_app_files.py:24",
        "scripts/scan_string_literals.py:45",
        "scripts/validate_type_deduplication.py:114"
      ]
    },
    "/tests/**/*.py": {
      "value": "/tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/mock_justification_checker.py:62"
      ]
    },
    "/thread/{thread_id}/runs": {
      "value": "/thread/{thread_id}/runs",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:262"
      ]
    },
    "/threads": {
      "value": "/threads",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:404",
        "scripts/staging_validation_part2_user_flows.py:479",
        "scripts/staging_validation_part2_user_flows.py:916"
      ]
    },
    "/threads/": {
      "value": "/threads/",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:137",
        "scripts/staging_validation_part2_user_flows.py:568"
      ]
    },
    "/tmp/act-artifacts/": {
      "value": "/tmp/act-artifacts/",
      "category": "paths",
      "locations": [
        "scripts/setup_act.py:102"
      ]
    },
    "/tmp/rollback_config.json": {
      "value": "/tmp/rollback_config.json",
      "category": "paths",
      "locations": [
        "scripts/deploy_token_optimization_production.py:631"
      ]
    },
    "/toggle": {
      "value": "/toggle",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/llm_cache.py:75"
      ]
    },
    "/token": {
      "value": "/token",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/auth_routes/router.py:41"
      ]
    },
    "/tools": {
      "value": "/tools",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:159",
        "netra_backend/app/routes/mcp_client.py:407"
      ]
    },
    "/tools/call": {
      "value": "/tools/call",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:185"
      ]
    },
    "/tools/discover": {
      "value": "/tools/discover",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp/main.py:169"
      ]
    },
    "/tools/execute": {
      "value": "/tools/execute",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:158"
      ]
    },
    "/tools/{server_name}/{tool_name}/schema": {
      "value": "/tools/{server_name}/{tool_name}/schema",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/mcp_client.py:422"
      ]
    },
    "/transactions/active": {
      "value": "/transactions/active",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:113"
      ]
    },
    "/transactions/stats": {
      "value": "/transactions/stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/database_monitoring/router.py:105"
      ]
    },
    "/trends": {
      "value": "/trends",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:97"
      ]
    },
    "/triage": {
      "value": "/triage",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agents_execute.py:172"
      ]
    },
    "/ttl": {
      "value": "/ttl",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/llm_cache.py:93"
      ]
    },
    "/tutorial": {
      "value": "/tutorial",
      "category": "paths",
      "locations": [
        "scripts/compliance/severity_tiers.py:265"
      ]
    },
    "/types/Message": {
      "value": "/types/Message",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:193"
      ]
    },
    "/types/agent": {
      "value": "/types/agent",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:193"
      ]
    },
    "/types/chat": {
      "value": "/types/chat",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:193"
      ]
    },
    "/usage": {
      "value": "/usage",
      "category": "paths",
      "locations": [
        "netra_backend/app/llm/gemini_config.py:220"
      ]
    },
    "/user/plan": {
      "value": "/user/plan",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/unified_tools/router.py:154"
      ]
    },
    "/users": {
      "value": "/users",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/supervisor_admin_init.py:243",
        "frontend/components/chat/constants.tsx:20"
      ]
    },
    "/usr/src/app/alembic.ini": {
      "value": "/usr/src/app/alembic.ini",
      "category": "paths",
      "locations": [
        "netra_backend/app/db/migration_utils.py:26"
      ]
    },
    "/usr/src/app/config/alembic.ini": {
      "value": "/usr/src/app/config/alembic.ini",
      "category": "paths",
      "locations": [
        "netra_backend/app/db/migration_utils.py:25"
      ]
    },
    "/v2/": {
      "value": "/v2/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:170"
      ]
    },
    "/v2/thread/{thread_id}/runs": {
      "value": "/v2/thread/{thread_id}/runs",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:280"
      ]
    },
    "/v2/{run_id}/state": {
      "value": "/v2/{run_id}/state",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:243"
      ]
    },
    "/v2/{run_id}/status": {
      "value": "/v2/{run_id}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:206"
      ]
    },
    "/validate": {
      "value": "/validate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/quality.py:58"
      ]
    },
    "/var/lib/postgresql/data": {
      "value": "/var/lib/postgresql/data",
      "category": "paths",
      "locations": [
        "scripts/graceful_postgres_shutdown.py:131"
      ]
    },
    "/venv/": {
      "value": "/venv/",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:72"
      ]
    },
    "/version": {
      "value": "/version",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data.py:338",
        "scripts/generate_openapi_spec.py:166"
      ]
    },
    "/version/": {
      "value": "/version/",
      "category": "paths",
      "locations": [
        "scripts/generate_openapi_spec.py:158"
      ]
    },
    "/versions/": {
      "value": "/versions/",
      "category": "paths",
      "locations": [
        "scripts/fetch_secrets_to_env.py:18",
        "scripts/gtm_api_setup.py:1090"
      ]
    },
    "/versions/latest": {
      "value": "/versions/latest",
      "category": "paths",
      "locations": [
        "auth_service/auth_core/secret_loader.py:72",
        "scripts/update_staging_clickhouse_secrets.py:166",
        "scripts/validate_oauth_deployment.py:134"
      ]
    },
    "/violations": {
      "value": "/violations",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/factory_compliance.py:77",
        "scripts/validate_isolation_monitoring_alerts.py:645"
      ]
    },
    "/websocket": {
      "value": "/websocket",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:118",
        "netra_backend/app/core/unified_error_handler.py:1028",
        "netra_backend/app/middleware/security_response_middleware.py:96",
        "netra_backend/app/routes/websocket.py:824",
        "scripts/staging_validation_part2_corrected.py:603"
      ]
    },
    "/websocket/": {
      "value": "/websocket/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:170"
      ]
    },
    "/windows/system32": {
      "value": "/windows/system32",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_validation_helpers.py:66"
      ]
    },
    "/ws": {
      "value": "/ws",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/configuration/environment.py:391",
        "netra_backend/app/core/middleware_setup.py:118",
        "netra_backend/app/core/network_constants.py:233",
        "netra_backend/app/core/unified_error_handler.py:1028",
        "netra_backend/app/middleware/security_headers_middleware.py:160",
        "netra_backend/app/middleware/security_response_middleware.py:96",
        "netra_backend/app/monitoring/websocket_dashboard.py:633",
        "netra_backend/app/routes/mcp/main.py:243",
        "netra_backend/app/routes/websocket.py:292",
        "netra_backend/app/routes/websocket.py:129"
      ]
    },
    "/ws (legacy insecure)": {
      "value": "/ws (legacy insecure)",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:731"
      ]
    },
    "/ws/": {
      "value": "/ws/",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:170"
      ]
    },
    "/ws/beacon": {
      "value": "/ws/beacon",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket.py:978",
        "netra_backend/app/routes/websocket.py:979",
        "netra_backend/app/routes/websocket.py:980"
      ]
    },
    "/ws/config": {
      "value": "/ws/config",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:118",
        "netra_backend/app/core/unified_error_handler.py:1028",
        "netra_backend/app/middleware/security_response_middleware.py:96",
        "netra_backend/app/routes/websocket.py:698",
        "scripts/staging_validation_part2_corrected.py:285",
        "scripts/staging_validation_part2_corrected.py:299",
        "scripts/staging_validation_part2_user_flows.py:328",
        "scripts/staging_validation_part2_user_flows.py:342",
        "scripts/staging_validation_part2_user_flows.py:357"
      ]
    },
    "/ws/factory": {
      "value": "/ws/factory",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_factory.py:122"
      ]
    },
    "/ws/health": {
      "value": "/ws/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:118",
        "netra_backend/app/core/unified_error_handler.py:1028",
        "netra_backend/app/middleware/security_response_middleware.py:96",
        "netra_backend/app/routes/websocket.py:740",
        "netra_backend/app/routes/websocket.py:741",
        "netra_backend/app/routes/websocket.py:742",
        "scripts/staging_validation_part2_corrected.py:213",
        "scripts/staging_validation_part2_corrected.py:227",
        "scripts/staging_validation_part2_user_flows.py:240",
        "scripts/staging_validation_part2_user_flows.py:253"
      ]
    },
    "/ws/isolated": {
      "value": "/ws/isolated",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_isolated.py:90"
      ]
    },
    "/ws/isolated/config": {
      "value": "/ws/isolated/config",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_isolated.py:376"
      ]
    },
    "/ws/isolated/health": {
      "value": "/ws/isolated/health",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_isolated.py:320"
      ]
    },
    "/ws/isolated/stats": {
      "value": "/ws/isolated/stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/websocket_isolated.py:345"
      ]
    },
    "/ws/stats": {
      "value": "/ws/stats",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:118",
        "netra_backend/app/core/unified_error_handler.py:1028",
        "netra_backend/app/middleware/security_response_middleware.py:96",
        "netra_backend/app/routes/websocket.py:996"
      ]
    },
    "/ws/test": {
      "value": "/ws/test",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/middleware_setup.py:118",
        "netra_backend/app/core/unified_error_handler.py:1028",
        "netra_backend/app/middleware/security_response_middleware.py:96",
        "netra_backend/app/routes/websocket.py:837"
      ]
    },
    "/ws/{user_id}": {
      "value": "/ws/{user_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/example_messages.py:28"
      ]
    },
    "/ws[^\"]*": {
      "value": "/ws[^\"]*",
      "category": "paths",
      "locations": [
        "scripts/validate_gcp_deployment.py:418",
        "scripts/validate_load_balancer_config.py:127",
        "scripts/validate_load_balancer_config_simple.py:127"
      ]
    },
    "/{agent_name}/circuit_breaker/status": {
      "value": "/{agent_name}/circuit_breaker/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agents_execute.py:220"
      ]
    },
    "/{corpus_id}": {
      "value": "/{corpus_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:83",
        "netra_backend/app/routes/corpus.py:99",
        "netra_backend/app/routes/corpus.py:116",
        "netra_backend/app/routes/synthetic_data_corpus.py:83"
      ]
    },
    "/{corpus_id}/clone": {
      "value": "/{corpus_id}/clone",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data_corpus.py:97"
      ]
    },
    "/{corpus_id}/content": {
      "value": "/{corpus_id}/content",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:163",
        "netra_backend/app/routes/synthetic_data_corpus.py:55"
      ]
    },
    "/{corpus_id}/document/{document_id}/symbols": {
      "value": "/{corpus_id}/document/{document_id}/symbols",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:323"
      ]
    },
    "/{corpus_id}/generate": {
      "value": "/{corpus_id}/generate",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:126"
      ]
    },
    "/{corpus_id}/statistics": {
      "value": "/{corpus_id}/statistics",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data_corpus.py:69"
      ]
    },
    "/{corpus_id}/status": {
      "value": "/{corpus_id}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/corpus.py:145"
      ]
    },
    "/{corpus_id}/upload": {
      "value": "/{corpus_id}/upload",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/synthetic_data_corpus.py:43"
      ]
    },
    "/{run_id}/state": {
      "value": "/{run_id}/state",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:225"
      ]
    },
    "/{run_id}/status": {
      "value": "/{run_id}/status",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/agent_route.py:188"
      ]
    },
    "/{thread_id}": {
      "value": "/{thread_id}",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/threads_route.py:74",
        "netra_backend/app/routes/threads_route.py:83",
        "netra_backend/app/routes/threads_route.py:92"
      ]
    },
    "/{thread_id}/auto-rename": {
      "value": "/{thread_id}/auto-rename",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/threads_route.py:110"
      ]
    },
    "/{thread_id}/messages": {
      "value": "/{thread_id}/messages",
      "category": "paths",
      "locations": [
        "netra_backend/app/routes/threads_route.py:101"
      ]
    },
    "1. Deploy the updated services: python scripts/deploy_to_gcp.py --project netra-staging --build-local": {
      "value": "1. Deploy the updated services: python scripts/deploy_to_gcp.py --project netra-staging --build-local",
      "category": "paths",
      "locations": [
        "scripts/migrate_staging_postgres_secrets_auto.py:99"
      ]
    },
    "1. Monitor resources: python scripts/monitor_docker_resources.py": {
      "value": "1. Monitor resources: python scripts/monitor_docker_resources.py",
      "category": "paths",
      "locations": [
        "scripts/start_with_resource_limits.py:227"
      ]
    },
    "1. Run tests with Podman:\n   python tests/unified_test_runner.py --real-services\n\n2. Start services manually:\n   podman-compose up -d\n\n3. View running containers:\n   podman ps\n\n4. Stop services:\n   podman-compose down\n\n5. For more information:\n   See docs/PODMAN_TESTING_GUIDE.md": {
      "value": "1. Run tests with Podman:\n   python tests/unified_test_runner.py --real-services\n\n2. Start services manually:\n   podman-compose up -d\n\n3. View running containers:\n   podman ps\n\n4. Stop services:\n   podman-compose down\n\n5. For more information:\n   See docs/PODMAN_TESTING_GUIDE.md",
      "category": "paths",
      "locations": [
        "scripts/podman_quick_start.py:231"
      ]
    },
    "1. Run: python scripts/dev_launcher.py": {
      "value": "1. Run: python scripts/dev_launcher.py",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:334",
        "scripts/verify_oauth_config.py:135"
      ]
    },
    "1. Run: python scripts/fix_all_import_issues.py --absolute-only": {
      "value": "1. Run: python scripts/fix_all_import_issues.py --absolute-only",
      "category": "paths",
      "locations": [
        "scripts/check_relative_imports.py:95"
      ]
    },
    "1. Run: python scripts/migrate_llm_models.py": {
      "value": "1. Run: python scripts/migrate_llm_models.py",
      "category": "paths",
      "locations": [
        "scripts/llm_compliance_report.py:230"
      ]
    },
    "1. Run: python scripts/scan_os_environ_violations.py": {
      "value": "1. Run: python scripts/scan_os_environ_violations.py",
      "category": "paths",
      "locations": [
        "scripts/validate_environment_compliance.py:242"
      ]
    },
    "1. Run: python scripts/update_staging_clickhouse_secrets.py": {
      "value": "1. Run: python scripts/update_staging_clickhouse_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/cleanup_clickhouse_secrets_sdk.py:174",
        "scripts/cleanup_staging_clickhouse_secrets.py:174"
      ]
    },
    "1. Updating websocket_core/__init__.py...": {
      "value": "1. Updating websocket_core/__init__.py...",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:346"
      ]
    },
    "2. Deploy using: python scripts/deploy_to_gcp.py --project netra-staging --service backend": {
      "value": "2. Deploy using: python scripts/deploy_to_gcp.py --project netra-staging --service backend",
      "category": "paths",
      "locations": [
        "scripts/verify_clickhouse_fix.py:164"
      ]
    },
    "2. Run E2E tests: python tests/unified_test_runner.py --category e2e --env staging": {
      "value": "2. Run E2E tests: python tests/unified_test_runner.py --category e2e --env staging",
      "category": "paths",
      "locations": [
        "scripts/fix_staging_websocket_timeouts.py:219"
      ]
    },
    "2. Run: python scripts/detect_duplicate_code.py --report-only": {
      "value": "2. Run: python scripts/detect_duplicate_code.py --report-only",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:322"
      ]
    },
    "2. Test ClickHouse connectivity with: python scripts/test_staging_clickhouse.py": {
      "value": "2. Test ClickHouse connectivity with: python scripts/test_staging_clickhouse.py",
      "category": "paths",
      "locations": [
        "scripts/update_staging_clickhouse_secrets.py:208"
      ]
    },
    "2. Test with: python scripts/metadata_validator.py --validate-all": {
      "value": "2. Test with: python scripts/metadata_validator.py --validate-all",
      "category": "paths",
      "locations": [
        "scripts/metadata_tracking/metadata_enabler.py:70"
      ]
    },
    "2. Update SPEC/learnings/import_management.xml with new patterns": {
      "value": "2. Update SPEC/learnings/import_management.xml with new patterns",
      "category": "paths",
      "locations": [
        "scripts/import_management.py:244"
      ]
    },
    "2. Verify _is_test_context() logic in configuration/base.py": {
      "value": "2. Verify _is_test_context() logic in configuration/base.py",
      "category": "paths",
      "locations": [
        "scripts/monitor_configuration_loops.py:250"
      ]
    },
    "2. Verify connectivity: python scripts/validate_staging_db_connection.py": {
      "value": "2. Verify connectivity: python scripts/validate_staging_db_connection.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_staging_postgres_secrets_auto.py:100"
      ]
    },
    "2. View: app/tests/examples/test_tdd_workflow_demo.py": {
      "value": "2. View: app/tests/examples/test_tdd_workflow_demo.py",
      "category": "paths",
      "locations": [
        "scripts/demo_feature_flag_system.py:274"
      ]
    },
    "3. **Test Deployment**: Run `python scripts/deploy_to_gcp.py --project netra-staging --build-local --dry-run`": {
      "value": "3. **Test Deployment**: Run `python scripts/deploy_to_gcp.py --project netra-staging --build-local --dry-run`",
      "category": "paths",
      "locations": [
        "scripts/fix_deployment_logging.py:314"
      ]
    },
    "3. Consult SPEC/atomic_change_specification.xml for guidance": {
      "value": "3. Consult SPEC/atomic_change_specification.xml for guidance",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:369"
      ]
    },
    "3. Follow consolidation patterns in SPEC/learnings/websocket_consolidation.xml": {
      "value": "3. Follow consolidation patterns in SPEC/learnings/websocket_consolidation.xml",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:323"
      ]
    },
    "3. Or run: python scripts/setup_gcp_service_account.py": {
      "value": "3. Or run: python scripts/setup_gcp_service_account.py",
      "category": "paths",
      "locations": [
        "scripts/gcp_auth_config.py:111"
      ]
    },
    "3. Run: python scripts/validate_llm_test_models.py": {
      "value": "3. Run: python scripts/validate_llm_test_models.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_llm_models.py:335"
      ]
    },
    "4. Explore: test_framework/decorators.py for all options": {
      "value": "4. Explore: test_framework/decorators.py for all options",
      "category": "paths",
      "locations": [
        "scripts/demo_feature_flag_system.py:276"
      ]
    },
    "4. Re-run validation: python scripts/validate_type_deduplication.py": {
      "value": "4. Re-run validation: python scripts/validate_type_deduplication.py",
      "category": "paths",
      "locations": [
        "scripts/validate_type_deduplication.py:319"
      ]
    },
    "4. Run 'python scripts/metadata_validator.py --validate-all' to check existing files": {
      "value": "4. Run 'python scripts/metadata_validator.py --validate-all' to check existing files",
      "category": "paths",
      "locations": [
        "scripts/metadata_tracking/enabler.py:95"
      ]
    },
    "4. Run: python netra_backend/tests/core/test_configuration_regression.py": {
      "value": "4. Run: python netra_backend/tests/core/test_configuration_regression.py",
      "category": "paths",
      "locations": [
        "scripts/monitor_configuration_loops.py:252"
      ]
    },
    "4. See SPEC/independent_services.xml for details": {
      "value": "4. See SPEC/independent_services.xml for details",
      "category": "paths",
      "locations": [
        "scripts/check_service_independence.py:114"
      ]
    },
    "4. Use a different port: python scripts/dev_launcher.py --backend-port 8001": {
      "value": "4. Use a different port: python scripts/dev_launcher.py --backend-port 8001",
      "category": "paths",
      "locations": [
        "scripts/fix_port_8000_windows.py:395"
      ]
    },
    "5. Check deployment configuration in scripts/deploy_to_gcp.py": {
      "value": "5. Check deployment configuration in scripts/deploy_to_gcp.py",
      "category": "paths",
      "locations": [
        "scripts/diagnose_secret_manager.py:235"
      ]
    },
    ":/sandbox/script.py:ro": {
      "value": ":/sandbox/script.py:ro",
      "category": "paths",
      "locations": [
        "netra_backend/app/tools/sandboxed_interpreter.py:117"
      ]
    },
    "<instruction>Check index.xml for complete category listing and learning IDs</instruction>": {
      "value": "<instruction>Check index.xml for complete category listing and learning IDs</instruction>",
      "category": "paths",
      "locations": [
        "scripts/split_learnings_robust.py:114"
      ]
    },
    "<meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Architecture Health Dashboard - Netra</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>": {
      "value": "<meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Architecture Health Dashboard - Netra</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>",
      "category": "paths",
      "locations": [
        "scripts/architecture_dashboard_html.py:32"
      ]
    },
    "Agent Modification Tracking Helper\n\nThis script helps AI coding agents add or update tracking headers in modified files\naccording to the specification in SPEC/agent_tracking.xml.\n\nUsage:\n    python scripts/agent_tracking_helper.py <file_path> --agent \"Claude Code\" --model \"claude-opus-4-1\" --task-id \"conv_123\" --prompt \"Fix database query\" --changes \"Optimized query performance\"": {
      "value": "Agent Modification Tracking Helper\n\nThis script helps AI coding agents add or update tracking headers in modified files\naccording to the specification in SPEC/agent_tracking.xml.\n\nUsage:\n    python scripts/agent_tracking_helper.py <file_path> --agent \"Claude Code\" --model \"claude-opus-4-1\" --task-id \"conv_123\" --prompt \"Fix database query\" --changes \"Optimized query performance\"",
      "category": "paths",
      "locations": [
        "scripts/agent_tracking_helper.py:2"
      ]
    },
    "Agent Test Validator - Comprehensive test runner and quality validator for critical agent tests.\n\nThis module discovers, executes, and validates all agent test suites with comprehensive metrics.\nMaximum 300 lines, 8 lines per function as per SPEC/conventions.xml.": {
      "value": "Agent Test Validator - Comprehensive test runner and quality validator for critical agent tests.\n\nThis module discovers, executes, and validates all agent test suites with comprehensive metrics.\nMaximum 300 lines, 8 lines per function as per SPEC/conventions.xml.",
      "category": "paths",
      "locations": [
        "scripts/validate_agent_tests.py:2"
      ]
    },
    "Automatically migrate staging PostgreSQL secrets from URL format to individual variables.\n\nThis script creates/updates individual PostgreSQL secrets in GCP Secret Manager\nfor staging environment to use individual variables instead of DATABASE_URL.\n\nUsage:\n    python scripts/migrate_staging_postgres_secrets_auto.py": {
      "value": "Automatically migrate staging PostgreSQL secrets from URL format to individual variables.\n\nThis script creates/updates individual PostgreSQL secrets in GCP Secret Manager\nfor staging environment to use individual variables instead of DATABASE_URL.\n\nUsage:\n    python scripts/migrate_staging_postgres_secrets_auto.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_staging_postgres_secrets_auto.py:2"
      ]
    },
    "Circular Dependency Checker for Frontend Modules\n\nThis script analyzes the frontend codebase to detect circular dependencies\nthat could cause initialization failures and white screen issues.\n\nUsage:\n    python scripts/check_circular_dependencies.py [--fix]\n    \nOptions:\n    --fix    Attempt to automatically fix simple circular dependencies": {
      "value": "Circular Dependency Checker for Frontend Modules\n\nThis script analyzes the frontend codebase to detect circular dependencies\nthat could cause initialization failures and white screen issues.\n\nUsage:\n    python scripts/check_circular_dependencies.py [--fix]\n    \nOptions:\n    --fix    Attempt to automatically fix simple circular dependencies",
      "category": "paths",
      "locations": [
        "scripts/check_circular_dependencies.py:2"
      ]
    },
    "Code Review System Package\nImplements SPEC/review.xml for automated code quality validation.": {
      "value": "Code Review System Package\nImplements SPEC/review.xml for automated code quality validation.",
      "category": "paths",
      "locations": [
        "scripts/review/__init__.py:2"
      ]
    },
    "Configuration file saved at: scripts/ga4_config.json": {
      "value": "Configuration file saved at: scripts/ga4_config.json",
      "category": "paths",
      "locations": [
        "scripts/ga4_setup_simple.py:127"
      ]
    },
    "Configuration schemas and data models.\n\n**UPDATED**: This file has been migrated to use IsolatedEnvironment\nfor unified environment management. Follows SPEC/unified_environment_management.xml.\n\nFor new code, use:\nfrom netra_backend.app.core.configuration import unified_config_manager": {
      "value": "Configuration schemas and data models.\n\n**UPDATED**: This file has been migrated to use IsolatedEnvironment\nfor unified environment management. Follows SPEC/unified_environment_management.xml.\n\nFor new code, use:\nfrom netra_backend.app.core.configuration import unified_config_manager",
      "category": "paths",
      "locations": [
        "netra_backend/app/schemas/config.py:1"
      ]
    },
    "Could not find scripts/deploy_to_gcp.py": {
      "value": "Could not find scripts/deploy_to_gcp.py",
      "category": "paths",
      "locations": [
        "scripts/validate_secrets.py:302"
      ]
    },
    "DEPRECATED: Local Docker Build Script\nThis script is deprecated. It incorrectly refers to Docker Compose as \"staging\".\n\nFor actual staging deployment, use:\n  python scripts/deploy_to_gcp.py --project netra-staging\n\nFor local testing with Docker Compose, use:\n  docker-compose --profile dev up  # or --profile test": {
      "value": "DEPRECATED: Local Docker Build Script\nThis script is deprecated. It incorrectly refers to Docker Compose as \"staging\".\n\nFor actual staging deployment, use:\n  python scripts/deploy_to_gcp.py --project netra-staging\n\nFor local testing with Docker Compose, use:\n  docker-compose --profile dev up  # or --profile test",
      "category": "paths",
      "locations": [
        "scripts/build_staging.py:2"
      ]
    },
    "Debug script for reproducing uvicorn recursion errors.\n\nThis script was moved from tests/ to scripts/ to prevent pytest from\ndiscovering it during test collection, which was causing port binding conflicts.\n\nUsage: python scripts/debug_uvicorn_recursion.py": {
      "value": "Debug script for reproducing uvicorn recursion errors.\n\nThis script was moved from tests/ to scripts/ to prevent pytest from\ndiscovering it during test collection, which was causing port binding conflicts.\n\nUsage: python scripts/debug_uvicorn_recursion.py",
      "category": "paths",
      "locations": [
        "scripts/debug_uvicorn_recursion.py:3"
      ]
    },
    "Dependency Validation Module\nValidates Python/Node.js versions and required dependencies.": {
      "value": "Dependency Validation Module\nValidates Python/Node.js versions and required dependencies.",
      "category": "paths",
      "locations": [
        "scripts/environment_validator_dependencies.py:1"
      ]
    },
    "Deploy with: python scripts/deploy_to_gcp.py --project": {
      "value": "Deploy with: python scripts/deploy_to_gcp.py --project",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:175"
      ]
    },
    "Deployment Performance Validation Script\n\nValidates deployment performance against optimal settings and benchmarks.\nCreated for Iteration 3 audit follow-up - ensures deployment health and performance.\n\nUsage:\n    python scripts/validate_deployment_performance.py --environment staging\n    python scripts/validate_deployment_performance.py --environment local --detailed": {
      "value": "Deployment Performance Validation Script\n\nValidates deployment performance against optimal settings and benchmarks.\nCreated for Iteration 3 audit follow-up - ensures deployment health and performance.\n\nUsage:\n    python scripts/validate_deployment_performance.py --environment staging\n    python scripts/validate_deployment_performance.py --environment local --detailed",
      "category": "paths",
      "locations": [
        "scripts/validate_deployment_performance.py:2"
      ]
    },
    "Disable: python scripts/manage_precommit.py disable --reason 'Your reason'": {
      "value": "Disable: python scripts/manage_precommit.py disable --reason 'Your reason'",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:105"
      ]
    },
    "Docker File Organization Compliance Checker\n\nValidates that Docker files are properly organized according to SPEC/docker_file_organization.xml": {
      "value": "Docker File Organization Compliance Checker\n\nValidates that Docker files are properly organized according to SPEC/docker_file_organization.xml",
      "category": "paths",
      "locations": [
        "scripts/check_docker_files.py:2"
      ]
    },
    "Docker Resource Monitoring Script\nBased on DOCKER_CRASH_DEEP_10_WHYS_ANALYSIS.md recommendations\n\nThis script monitors actual resource usage of running containers and provides\nrecommendations to prevent resource exhaustion crashes.\n\nUsage:\n    python scripts/monitor_docker_resources.py              # One-time check\n    python scripts/monitor_docker_resources.py --continuous # Continuous monitoring\n    python scripts/monitor_docker_resources.py --analyze    # Deep analysis with recommendations": {
      "value": "Docker Resource Monitoring Script\nBased on DOCKER_CRASH_DEEP_10_WHYS_ANALYSIS.md recommendations\n\nThis script monitors actual resource usage of running containers and provides\nrecommendations to prevent resource exhaustion crashes.\n\nUsage:\n    python scripts/monitor_docker_resources.py              # One-time check\n    python scripts/monitor_docker_resources.py --continuous # Continuous monitoring\n    python scripts/monitor_docker_resources.py --analyze    # Deep analysis with recommendations",
      "category": "paths",
      "locations": [
        "scripts/monitor_docker_resources.py:2"
      ]
    },
    "Duplicate Code Detection Script\nPrevents regression of duplicate code patterns identified in WebSocket consolidation\n\nUsage:\n    python scripts/detect_duplicate_code.py [--threshold 0.8] [--report-only]\n    \nThis script detects:\n- Duplicate class names across files\n- Similar function implementations\n- Multiple wrappers for same functionality\n- Parallel implementations of same feature": {
      "value": "Duplicate Code Detection Script\nPrevents regression of duplicate code patterns identified in WebSocket consolidation\n\nUsage:\n    python scripts/detect_duplicate_code.py [--threshold 0.8] [--report-only]\n    \nThis script detects:\n- Duplicate class names across files\n- Similar function implementations\n- Multiple wrappers for same functionality\n- Parallel implementations of same feature",
      "category": "paths",
      "locations": [
        "scripts/detect_duplicate_code.py:2"
      ]
    },
    "EXAMPLES:\n  python scripts/docker_dev_launcher.py              # Start with defaults\n  python scripts/docker_dev_launcher.py --build      # Rebuild images\n  python scripts/docker_dev_launcher.py --verbose    # Show all logs\n  python scripts/docker_dev_launcher.py --cleanup    # Stop and clean up": {
      "value": "EXAMPLES:\n  python scripts/docker_dev_launcher.py              # Start with defaults\n  python scripts/docker_dev_launcher.py --build      # Rebuild images\n  python scripts/docker_dev_launcher.py --verbose    # Show all logs\n  python scripts/docker_dev_launcher.py --cleanup    # Stop and clean up",
      "category": "paths",
      "locations": [
        "scripts/docker_dev_launcher.py:418"
      ]
    },
    "Enable:  python scripts/manage_precommit.py enable": {
      "value": "Enable:  python scripts/manage_precommit.py enable",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:104"
      ]
    },
    "Enhanced process cleanup utilities with comprehensive Windows support.\n\nThis module provides robust process cleanup functionality for Windows,\nwith special handling for Node.js, npm, and related development processes.\n\nBusiness Value: Platform/Internal - Development Velocity\nPrevents developer time loss due to hanging processes and port conflicts.": {
      "value": "Enhanced process cleanup utilities with comprehensive Windows support.\n\nThis module provides robust process cleanup functionality for Windows,\nwith special handling for Node.js, npm, and related development processes.\n\nBusiness Value: Platform/Internal - Development Velocity\nPrevents developer time loss due to hanging processes and port conflicts.",
      "category": "paths",
      "locations": [
        "shared/enhanced_process_cleanup.py:1"
      ]
    },
    "Enhanced staging deployment script with comprehensive validation.\n\nThis script combines the existing deploy_to_gcp.py functionality with \nadditional staging-specific validation and fixes.\n\nUsage:\n    python scripts/deploy_staging_with_validation.py [--fix-issues] [--skip-build]": {
      "value": "Enhanced staging deployment script with comprehensive validation.\n\nThis script combines the existing deploy_to_gcp.py functionality with \nadditional staging-specific validation and fixes.\n\nUsage:\n    python scripts/deploy_staging_with_validation.py [--fix-issues] [--skip-build]",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_validation.py:2"
      ]
    },
    "Example: python scripts/deploy_to_gcp.py --project {} --build-local": {
      "value": "Example: python scripts/deploy_to_gcp.py --project {} --build-local",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1635"
      ]
    },
    "Examples:\n    python scripts/staging_validation_e2e.py --all\n    python scripts/staging_validation_e2e.py --health-only\n    python scripts/staging_validation_e2e.py --auth-flow --websocket-test\n    python scripts/staging_validation_e2e.py --export results.json": {
      "value": "Examples:\n    python scripts/staging_validation_e2e.py --all\n    python scripts/staging_validation_e2e.py --health-only\n    python scripts/staging_validation_e2e.py --auth-flow --websocket-test\n    python scripts/staging_validation_e2e.py --export results.json",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_e2e.py:863"
      ]
    },
    "Examples:\n    python scripts/staging_validation_part2_corrected.py --all\n    python scripts/staging_validation_part2_corrected.py --websocket-flows\n    python scripts/staging_validation_part2_corrected.py --thread-management --agent-features\n    python scripts/staging_validation_part2_corrected.py --export results.json": {
      "value": "Examples:\n    python scripts/staging_validation_part2_corrected.py --all\n    python scripts/staging_validation_part2_corrected.py --websocket-flows\n    python scripts/staging_validation_part2_corrected.py --thread-management --agent-features\n    python scripts/staging_validation_part2_corrected.py --export results.json",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_corrected.py:914"
      ]
    },
    "Examples:\n    python scripts/staging_validation_part2_user_flows.py --all\n    python scripts/staging_validation_part2_user_flows.py --websocket-flows\n    python scripts/staging_validation_part2_user_flows.py --thread-management --agent-features\n    python scripts/staging_validation_part2_user_flows.py --export results.json": {
      "value": "Examples:\n    python scripts/staging_validation_part2_user_flows.py --all\n    python scripts/staging_validation_part2_user_flows.py --websocket-flows\n    python scripts/staging_validation_part2_user_flows.py --thread-management --agent-features\n    python scripts/staging_validation_part2_user_flows.py --export results.json",
      "category": "paths",
      "locations": [
        "scripts/staging_validation_part2_user_flows.py:1198"
      ]
    },
    "Examples:\n  # Run all staging E2E tests\n  python run_staging_tests.py\n  \n  # Run specific test file\n  python run_staging_tests.py --test tests/e2e/test_staging_e2e_comprehensive.py\n  \n  # Run mission critical tests\n  python run_staging_tests.py --mission-critical\n  \n  # Run with unified test runner\n  python run_staging_tests.py --unified\n  \n  # Check service health only\n  python run_staging_tests.py --health-check": {
      "value": "Examples:\n  # Run all staging E2E tests\n  python run_staging_tests.py\n  \n  # Run specific test file\n  python run_staging_tests.py --test tests/e2e/test_staging_e2e_comprehensive.py\n  \n  # Run mission critical tests\n  python run_staging_tests.py --mission-critical\n  \n  # Run with unified test runner\n  python run_staging_tests.py --unified\n  \n  # Check service health only\n  python run_staging_tests.py --health-check",
      "category": "paths",
      "locations": [
        "scripts/test/run_staging_tests.py:231"
      ]
    },
    "Examples:\n  # Scan with default settings\n  python scripts/scan_string_literals.py\n  \n  # Scan specific directories\n  python scripts/scan_string_literals.py --dirs netra_backend/app auth_service\n  \n  # Include test files in main index\n  python scripts/scan_string_literals.py --include-tests\n  \n  # Custom output location\n  python scripts/scan_string_literals.py --output custom_index.json": {
      "value": "Examples:\n  # Scan with default settings\n  python scripts/scan_string_literals.py\n  \n  # Scan specific directories\n  python scripts/scan_string_literals.py --dirs netra_backend/app auth_service\n  \n  # Include test files in main index\n  python scripts/scan_string_literals.py --include-tests\n  \n  # Custom output location\n  python scripts/scan_string_literals.py --output custom_index.json",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:534"
      ]
    },
    "Examples:\n  # Start real-time monitoring\n  python scripts/production_monitoring.py start --stage canary\n  \n  # Check current metrics\n  python scripts/production_monitoring.py metrics --detailed\n  \n  # Generate daily report\n  python scripts/production_monitoring.py daily-report --email-recipients team@netra.ai": {
      "value": "Examples:\n  # Start real-time monitoring\n  python scripts/production_monitoring.py start --stage canary\n  \n  # Check current metrics\n  python scripts/production_monitoring.py metrics --detailed\n  \n  # Generate daily report\n  python scripts/production_monitoring.py daily-report --email-recipients team@netra.ai",
      "category": "paths",
      "locations": [
        "scripts/production_monitoring.py:849"
      ]
    },
    "Examples:\n  Default deployment (fast, no checks):\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n    \n  With pre-deployment checks:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local --run-checks\n    \n  Cloud Build (slower):\n    python scripts/deploy_to_gcp.py --project netra-staging\n    \nSee SPEC/gcp_deployment.xml for detailed guidelines.": {
      "value": "Examples:\n  Default deployment (fast, no checks):\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n    \n  With pre-deployment checks:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local --run-checks\n    \n  Cloud Build (slower):\n    python scripts/deploy_to_gcp.py --project netra-staging\n    \nSee SPEC/gcp_deployment.xml for detailed guidelines.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1597"
      ]
    },
    "Examples:\n  Default deployment (with checks):\n    python scripts/deploy_staging_with_sa.py\n    \n  Quick deployment (no checks):\n    python scripts/deploy_staging_with_sa.py --no-checks\n    \n  Specify service account key:\n    python scripts/deploy_staging_with_sa.py --key path/to/key.json": {
      "value": "Examples:\n  Default deployment (with checks):\n    python scripts/deploy_staging_with_sa.py\n    \n  Quick deployment (no checks):\n    python scripts/deploy_staging_with_sa.py --no-checks\n    \n  Specify service account key:\n    python scripts/deploy_staging_with_sa.py --key path/to/key.json",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_sa.py:60"
      ]
    },
    "Examples:\n  Local validation:\n    python scripts/validate_deployment_performance.py --environment local\n    \n  Staging validation with details:\n    python scripts/validate_deployment_performance.py --environment staging --detailed\n    \n  Save results to file:\n    python scripts/validate_deployment_performance.py --environment staging --output results.json": {
      "value": "Examples:\n  Local validation:\n    python scripts/validate_deployment_performance.py --environment local\n    \n  Staging validation with details:\n    python scripts/validate_deployment_performance.py --environment staging --detailed\n    \n  Save results to file:\n    python scripts/validate_deployment_performance.py --environment staging --output results.json",
      "category": "paths",
      "locations": [
        "scripts/validate_deployment_performance.py:422"
      ]
    },
    "Examples:\n  python scripts/fix_port_8000_windows.py                    # Check only\n  python scripts/fix_port_8000_windows.py --kill-processes   # Kill processes using port\n  python scripts/fix_port_8000_windows.py --check-firewall   # Check firewall rules  \n  python scripts/fix_port_8000_windows.py --force            # Force kill processes and fix firewall": {
      "value": "Examples:\n  python scripts/fix_port_8000_windows.py                    # Check only\n  python scripts/fix_port_8000_windows.py --kill-processes   # Kill processes using port\n  python scripts/fix_port_8000_windows.py --check-firewall   # Check firewall rules  \n  python scripts/fix_port_8000_windows.py --force            # Force kill processes and fix firewall",
      "category": "paths",
      "locations": [
        "scripts/fix_port_8000_windows.py:314"
      ]
    },
    "Examples:\n  python scripts/import_management.py check       # Check for import issues\n  python scripts/import_management.py fix         # Fix import issues\n  python scripts/import_management.py verify      # Verify critical imports\n  python scripts/import_management.py all         # Run complete workflow\n  python scripts/import_management.py fix --dry-run  # Preview fixes": {
      "value": "Examples:\n  python scripts/import_management.py check       # Check for import issues\n  python scripts/import_management.py fix         # Fix import issues\n  python scripts/import_management.py verify      # Verify critical imports\n  python scripts/import_management.py all         # Run complete workflow\n  python scripts/import_management.py fix --dry-run  # Preview fixes",
      "category": "paths",
      "locations": [
        "scripts/import_management.py:300"
      ]
    },
    "Examples:\n  python scripts/team_updates.py                    # Last 24 hours\n  python scripts/team_updates.py --time-frame=last_hour\n  python scripts/team_updates.py --time-frame=last_week --output=report.md\n  \nTime frames:\n  last_hour     - Changes in the last hour\n  last_5_hours  - Changes in the last 5 hours  \n  last_day      - Changes in the last 24 hours (default)\n  last_week     - Changes in the last week\n  last_month    - Changes in the last month": {
      "value": "Examples:\n  python scripts/team_updates.py                    # Last 24 hours\n  python scripts/team_updates.py --time-frame=last_hour\n  python scripts/team_updates.py --time-frame=last_week --output=report.md\n  \nTime frames:\n  last_hour     - Changes in the last hour\n  last_5_hours  - Changes in the last 5 hours  \n  last_day      - Changes in the last 24 hours (default)\n  last_week     - Changes in the last week\n  last_month    - Changes in the last month",
      "category": "paths",
      "locations": [
        "scripts/team_updates.py:20"
      ]
    },
    "Examples:\n  python scripts/validate_staging_deployment.py\n  python scripts/validate_staging_deployment.py --verbose\n  python scripts/validate_staging_deployment.py --json\n  python scripts/validate_staging_deployment.py --no-comprehensive\n  python scripts/validate_staging_deployment.py --project netra-staging --verbose": {
      "value": "Examples:\n  python scripts/validate_staging_deployment.py\n  python scripts/validate_staging_deployment.py --verbose\n  python scripts/validate_staging_deployment.py --json\n  python scripts/validate_staging_deployment.py --no-comprehensive\n  python scripts/validate_staging_deployment.py --project netra-staging --verbose",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:547"
      ]
    },
    "Fix WebSocket timeout configuration issues in GCP staging.\nThis script validates and updates the staging deployment configuration.\n\nRun: python scripts/fix_staging_websocket_timeouts.py": {
      "value": "Fix WebSocket timeout configuration issues in GCP staging.\nThis script validates and updates the staging deployment configuration.\n\nRun: python scripts/fix_staging_websocket_timeouts.py",
      "category": "paths",
      "locations": [
        "scripts/fix_staging_websocket_timeouts.py:2"
      ]
    },
    "For more information, see SPEC/testing.xml Mock-Real Spectrum section.": {
      "value": "For more information, see SPEC/testing.xml Mock-Real Spectrum section.",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_real_spectrum_compliance.py:283"
      ]
    },
    "GCP Deployment Script for Netra Apex Platform\nDeploys all three services (backend, auth, frontend) to Google Cloud Run\n\nIMPORTANT: This is the OFFICIAL deployment script. Do NOT create new deployment scripts.\nUse this script with appropriate flags for all GCP staging deployments.\n\nQuick Start:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n\nSee SPEC/gcp_deployment.xml for comprehensive deployment guidelines.": {
      "value": "GCP Deployment Script for Netra Apex Platform\nDeploys all three services (backend, auth, frontend) to Google Cloud Run\n\nIMPORTANT: This is the OFFICIAL deployment script. Do NOT create new deployment scripts.\nUse this script with appropriate flags for all GCP staging deployments.\n\nQuick Start:\n    python scripts/deploy_to_gcp.py --project netra-staging --build-local\n\nSee SPEC/gcp_deployment.xml for comprehensive deployment guidelines.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:2"
      ]
    },
    "GCP Load Balancer Configuration Validator\nValidates that all 6 critical requirements are properly configured in Terraform files.\n\nUsage:\n    python scripts/validate_load_balancer_config.py": {
      "value": "GCP Load Balancer Configuration Validator\nValidates that all 6 critical requirements are properly configured in Terraform files.\n\nUsage:\n    python scripts/validate_load_balancer_config.py",
      "category": "paths",
      "locations": [
        "scripts/validate_load_balancer_config.py:2"
      ]
    },
    "GCP Load Balancer Configuration Validator\nValidates that all 6 critical requirements are properly configured in Terraform files.\n\nUsage:\n    python scripts/validate_load_balancer_config_simple.py": {
      "value": "GCP Load Balancer Configuration Validator\nValidates that all 6 critical requirements are properly configured in Terraform files.\n\nUsage:\n    python scripts/validate_load_balancer_config_simple.py",
      "category": "paths",
      "locations": [
        "scripts/validate_load_balancer_config_simple.py:2"
      ]
    },
    "Generate OpenAPI/Swagger specification from FastAPI app and sync to ReadMe.\n\nThis script:\n1. Loads the FastAPI application\n2. Extracts the OpenAPI specification\n3. Saves it to a JSON file\n4. Optionally syncs it to ReadMe documentation platform\n\nUsage:\n    python generate_openapi_spec.py [--sync-readme] [--readme-api-key KEY] [--readme-version VERSION]": {
      "value": "Generate OpenAPI/Swagger specification from FastAPI app and sync to ReadMe.\n\nThis script:\n1. Loads the FastAPI application\n2. Extracts the OpenAPI specification\n3. Saves it to a JSON file\n4. Optionally syncs it to ReadMe documentation platform\n\nUsage:\n    python generate_openapi_spec.py [--sync-readme] [--readme-api-key KEY] [--readme-version VERSION]",
      "category": "paths",
      "locations": [
        "scripts/generate_openapi_spec.py:3"
      ]
    },
    "High number of import errors. Run 'python scripts/import_management.py fix-all'": {
      "value": "High number of import errors. Run 'python scripts/import_management.py fix-all'",
      "category": "paths",
      "locations": [
        "scripts/import_management.py:202"
      ]
    },
    "Intelligent Remediation Orchestrator - Multi-Agent Team Coordination\n\nThis orchestrator implements the two operational modes defined in \nSPEC/intelligent_remediation_architecture.xml:\n\n1. Tool Mode: LLM agents as information providers to Claude\n2. Orchestrator Mode: Spawning autonomous Claude instances\n\nV1 Critical Implementation - Focused on core orchestration capabilities": {
      "value": "Intelligent Remediation Orchestrator - Multi-Agent Team Coordination\n\nThis orchestrator implements the two operational modes defined in \nSPEC/intelligent_remediation_architecture.xml:\n\n1. Tool Mode: LLM agents as information providers to Claude\n2. Orchestrator Mode: Spawning autonomous Claude instances\n\nV1 Critical Implementation - Focused on core orchestration capabilities",
      "category": "paths",
      "locations": [
        "scripts/intelligent_remediation_orchestrator.py:2"
      ]
    },
    "JWT Secret Consistency Validation Script\n\nThis script validates that both the auth service and backend service\nuse the same JWT secret for token validation consistency.\n\nUsage:\n    python scripts/validate_jwt_consistency.py": {
      "value": "JWT Secret Consistency Validation Script\n\nThis script validates that both the auth service and backend service\nuse the same JWT secret for token validation consistency.\n\nUsage:\n    python scripts/validate_jwt_consistency.py",
      "category": "paths",
      "locations": [
        "scripts/validate_jwt_consistency.py:3"
      ]
    },
    "MCP Service Realistic Test Validation Script\n==========================================\n\nThis script validates that the new realistic MCP service integration tests\ncan be discovered, imported, and executed successfully.\n\nUsage:\n    python scripts/validate_mcp_realistic_tests.py\n\nWhat it does:\n1. Validates test file structure and imports\n2. Runs test collection to verify pytest compatibility  \n3. Executes a subset of tests to verify functionality\n4. Provides detailed feedback on test health": {
      "value": "MCP Service Realistic Test Validation Script\n==========================================\n\nThis script validates that the new realistic MCP service integration tests\ncan be discovered, imported, and executed successfully.\n\nUsage:\n    python scripts/validate_mcp_realistic_tests.py\n\nWhat it does:\n1. Validates test file structure and imports\n2. Runs test collection to verify pytest compatibility  \n3. Executes a subset of tests to verify functionality\n4. Provides detailed feedback on test health",
      "category": "paths",
      "locations": [
        "scripts/validate_mcp_realistic_tests.py:2"
      ]
    },
    "Main FastAPI application module.\nEntry point for the Netra AI Optimization Platform.\n\nüî¥ CRITICAL AUTH ARCHITECTURE:\n- This is the MAIN BACKEND service, NOT the auth service\n- Auth service runs SEPARATELY on port 8001 (see app/auth/auth_service.py)\n- This backend ONLY uses auth_integration to connect to auth service\n- NEVER implement authentication logic here\n- All auth operations go through auth_client\n\nSee: app/auth_integration/CRITICAL_AUTH_ARCHITECTURE.md": {
      "value": "Main FastAPI application module.\nEntry point for the Netra AI Optimization Platform.\n\nüî¥ CRITICAL AUTH ARCHITECTURE:\n- This is the MAIN BACKEND service, NOT the auth service\n- Auth service runs SEPARATELY on port 8001 (see app/auth/auth_service.py)\n- This backend ONLY uses auth_integration to connect to auth service\n- NEVER implement authentication logic here\n- All auth operations go through auth_client\n\nSee: app/auth_integration/CRITICAL_AUTH_ARCHITECTURE.md",
      "category": "paths",
      "locations": [
        "netra_backend/app/main.py:1"
      ]
    },
    "Manual ClickHouse table creation for production/staging.\nRun this directly to create required tables in ClickHouse Cloud.\n\nUsage:\n    python scripts/create_clickhouse_tables.py --env staging\n    python scripts/create_clickhouse_tables.py --env production": {
      "value": "Manual ClickHouse table creation for production/staging.\nRun this directly to create required tables in ClickHouse Cloud.\n\nUsage:\n    python scripts/create_clickhouse_tables.py --env staging\n    python scripts/create_clickhouse_tables.py --env production",
      "category": "paths",
      "locations": [
        "scripts/create_clickhouse_tables.py:2"
      ]
    },
    "Migrate staging PostgreSQL secrets from URL format to individual variables.\n\nThis script creates/updates individual PostgreSQL secrets in GCP Secret Manager\nfor staging environment to use individual variables instead of DATABASE_URL.\n\nUsage:\n    python scripts/migrate_staging_postgres_secrets.py": {
      "value": "Migrate staging PostgreSQL secrets from URL format to individual variables.\n\nThis script creates/updates individual PostgreSQL secrets in GCP Secret Manager\nfor staging environment to use individual variables instead of DATABASE_URL.\n\nUsage:\n    python scripts/migrate_staging_postgres_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_staging_postgres_secrets.py:2"
      ]
    },
    "Move functionality to netra_backend/app/db/clickhouse.py": {
      "value": "Move functionality to netra_backend/app/db/clickhouse.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:257"
      ]
    },
    "Network Constants Validation Script\n\nValidates the new centralized network configuration module.\nBusiness Value: Platform/Internal - Configuration Validation - Ensures consistent network\nconfiguration across all environments and services.\n\nUsage:\n    python scripts/validate_network_constants.py\n    python scripts/validate_network_constants.py --environment production": {
      "value": "Network Constants Validation Script\n\nValidates the new centralized network configuration module.\nBusiness Value: Platform/Internal - Configuration Validation - Ensures consistent network\nconfiguration across all environments and services.\n\nUsage:\n    python scripts/validate_network_constants.py\n    python scripts/validate_network_constants.py --environment production",
      "category": "paths",
      "locations": [
        "scripts/validate_network_constants.py:3"
      ]
    },
    "Node.js not found. Please install Node.js 18+ from https://nodejs.org/": {
      "value": "Node.js not found. Please install Node.js 18+ from https://nodejs.org/",
      "category": "paths",
      "locations": [
        "scripts/env_checker.py:116"
      ]
    },
    "OAuth Health Monitor for Cloud Armor\n\nContinuously monitors OAuth callback health and alerts on issues.\nCan be run as a cron job or continuous monitoring service.\n\nUsage:\n    python scripts/monitor_oauth_health.py --once          # Single check\n    python scripts/monitor_oauth_health.py --continuous    # Run continuously\n    python scripts/monitor_oauth_health.py --alert-webhook <URL>  # Send alerts": {
      "value": "OAuth Health Monitor for Cloud Armor\n\nContinuously monitors OAuth callback health and alerts on issues.\nCan be run as a cron job or continuous monitoring service.\n\nUsage:\n    python scripts/monitor_oauth_health.py --once          # Single check\n    python scripts/monitor_oauth_health.py --continuous    # Run continuously\n    python scripts/monitor_oauth_health.py --alert-webhook <URL>  # Send alerts",
      "category": "paths",
      "locations": [
        "scripts/monitor_oauth_health.py:2"
      ]
    },
    "OAuth SSOT Configuration Validation Script\n\nThis script validates that the new SSOT OAuth configuration system works correctly\nfor all environments (development, test, staging, production).\n\nUsage:\n    python scripts/validate_oauth_ssot_configuration.py": {
      "value": "OAuth SSOT Configuration Validation Script\n\nThis script validates that the new SSOT OAuth configuration system works correctly\nfor all environments (development, test, staging, production).\n\nUsage:\n    python scripts/validate_oauth_ssot_configuration.py",
      "category": "paths",
      "locations": [
        "scripts/validate_oauth_ssot_configuration.py:2"
      ]
    },
    "OR run: python scripts/docker_manual.py start": {
      "value": "OR run: python scripts/docker_manual.py start",
      "category": "paths",
      "locations": [
        "scripts/business_health_check.py:323"
      ]
    },
    "Or use: python scripts/docker_manual.py start": {
      "value": "Or use: python scripts/docker_manual.py start",
      "category": "paths",
      "locations": [
        "netra_backend/app/startup_module.py:652"
      ]
    },
    "Output file path (default: SPEC/generated/string_literals.json)": {
      "value": "Output file path (default: SPEC/generated/string_literals.json)",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:558"
      ]
    },
    "Path to service account JSON key file (default: config/netra-staging-7a1059b7cf26.json)": {
      "value": "Path to service account JSON key file (default: config/netra-staging-7a1059b7cf26.json)",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1622"
      ]
    },
    "Please run directly: python scripts/docker_manual.py start --environment dev": {
      "value": "Please run directly: python scripts/docker_manual.py start --environment dev",
      "category": "paths",
      "locations": [
        "scripts/launch_dev_env.py:45"
      ]
    },
    "Podman Quick Start Script\n\nAutomated setup and configuration for using Podman with Netra tests.\n\nUsage:\n    python scripts/podman_quick_start.py [--install] [--start] [--test]": {
      "value": "Podman Quick Start Script\n\nAutomated setup and configuration for using Podman with Netra tests.\n\nUsage:\n    python scripts/podman_quick_start.py [--install] [--start] [--test]",
      "category": "paths",
      "locations": [
        "scripts/podman_quick_start.py:2"
      ]
    },
    "Pre-Deployment Audit Script\nImplements SPEC/pre_deployment_audit.xml to catch LLM coding errors before deployment\nFocuses on RECENT changes and NEW issues, not pre-existing violations": {
      "value": "Pre-Deployment Audit Script\nImplements SPEC/pre_deployment_audit.xml to catch LLM coding errors before deployment\nFocuses on RECENT changes and NEW issues, not pre-existing violations",
      "category": "paths",
      "locations": [
        "scripts/pre_deployment_audit.py:2"
      ]
    },
    "Pre-commit hook for duplicate code detection.\nIntegrates with existing detect_duplicate_code.py for fast incremental checks.\n\nUsage:\n    python scripts/precommit_duplicate_detector.py [files...]\n    \nThis script:\n1. Performs fast duplicate detection on changed files\n2. Checks against known duplicate patterns\n3. Integrates with existing architecture compliance": {
      "value": "Pre-commit hook for duplicate code detection.\nIntegrates with existing detect_duplicate_code.py for fast incremental checks.\n\nUsage:\n    python scripts/precommit_duplicate_detector.py [files...]\n    \nThis script:\n1. Performs fast duplicate detection on changed files\n2. Checks against known duplicate patterns\n3. Integrates with existing architecture compliance",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:2"
      ]
    },
    "Pre-commit hook script to prevent numbered file naming patterns.\n\nThis script prevents files with non-semantic numbered suffixes like:\n- _1.py, _2.py, _3.py (arbitrary splits)\n- _11_20.py (range patterns)\n- _core_1.py, _utilities_2.py (numbered variants)\n\nUsage:\n    python scripts/prevent_numbered_files.py [files...]\n    \nReturns:\n    0 if all files pass validation\n    1 if any files have problematic naming patterns": {
      "value": "Pre-commit hook script to prevent numbered file naming patterns.\n\nThis script prevents files with non-semantic numbered suffixes like:\n- _1.py, _2.py, _3.py (arbitrary splits)\n- _11_20.py (range patterns)\n- _core_1.py, _utilities_2.py (numbered variants)\n\nUsage:\n    python scripts/prevent_numbered_files.py [files...]\n    \nReturns:\n    0 if all files pass validation\n    1 if any files have problematic naming patterns",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:2"
      ]
    },
    "Production Deployment Script for Token Optimization System\nExecutes the 5-phase deployment strategy with comprehensive monitoring\n\nCRITICAL: This script implements the approved production deployment strategy\nwith zero-downtime deployment and full business value realization.\n\nUsage:\n    python scripts/deploy_token_optimization_production.py --execute\n    python scripts/deploy_token_optimization_production.py --validate-only\n    python scripts/deploy_token_optimization_production.py --rollback": {
      "value": "Production Deployment Script for Token Optimization System\nExecutes the 5-phase deployment strategy with comprehensive monitoring\n\nCRITICAL: This script implements the approved production deployment strategy\nwith zero-downtime deployment and full business value realization.\n\nUsage:\n    python scripts/deploy_token_optimization_production.py --execute\n    python scripts/deploy_token_optimization_production.py --validate-only\n    python scripts/deploy_token_optimization_production.py --rollback",
      "category": "paths",
      "locations": [
        "scripts/deploy_token_optimization_production.py:2"
      ]
    },
    "Remove this file and use get_clickhouse_client() from netra_backend/app/db/clickhouse.py": {
      "value": "Remove this file and use get_clickhouse_client() from netra_backend/app/db/clickhouse.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:218"
      ]
    },
    "Review SPEC/learnings/websocket_consolidation.xml for consolidation strategy.": {
      "value": "Review SPEC/learnings/websocket_consolidation.xml for consolidation strategy.",
      "category": "paths",
      "locations": [
        "scripts/detect_duplicate_code.py:255"
      ]
    },
    "Route configuration utilities for FastAPI application factory.\n\nCRITICAL: All route prefixes MUST be managed here centrally.\nIndividual routers should NOT define their own prefixes in APIRouter() initialization.\nSee SPEC/learnings/router_double_prefix_pattern.xml for details.": {
      "value": "Route configuration utilities for FastAPI application factory.\n\nCRITICAL: All route prefixes MUST be managed here centrally.\nIndividual routers should NOT define their own prefixes in APIRouter() initialization.\nSee SPEC/learnings/router_double_prefix_pattern.xml for details.",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/app_factory_route_configs.py:1"
      ]
    },
    "Run 'python scripts/check_e2e_imports.py' to verify": {
      "value": "Run 'python scripts/check_e2e_imports.py' to verify",
      "category": "paths",
      "locations": [
        "scripts/fix_e2e_imports.py:425"
      ]
    },
    "Run 'python scripts/fix_netra_backend_imports.py' to automatically fix these issues": {
      "value": "Run 'python scripts/fix_netra_backend_imports.py' to automatically fix these issues",
      "category": "paths",
      "locations": [
        "scripts/check_netra_backend_imports.py:347"
      ]
    },
    "Run 'python scripts/import_management.py fix' to fix them": {
      "value": "Run 'python scripts/import_management.py fix' to fix them",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:100"
      ]
    },
    "Run 'python scripts/scan_string_literals.py' first to generate the index.": {
      "value": "Run 'python scripts/scan_string_literals.py' first to generate the index.",
      "category": "paths",
      "locations": [
        "scripts/query_string_literals.py:32"
      ]
    },
    "Run tests with: python -m pytest netra_backend/tests/integration/test_gemini_optimization.py": {
      "value": "Run tests with: python -m pytest netra_backend/tests/integration/test_gemini_optimization.py",
      "category": "paths",
      "locations": [
        "scripts/demo_gemini_optimization.py:215"
      ]
    },
    "Run: python scripts/fix_all_import_issues.py --absolute-only": {
      "value": "Run: python scripts/fix_all_import_issues.py --absolute-only",
      "category": "paths",
      "locations": [
        "scripts/check_relative_imports.py:79"
      ]
    },
    "Run: python scripts/fix_frontend_test_imports.py": {
      "value": "Run: python scripts/fix_frontend_test_imports.py",
      "category": "paths",
      "locations": [
        "scripts/validate_frontend_tests.py:213"
      ]
    },
    "Run: python scripts/fix_websocket_imports.py": {
      "value": "Run: python scripts/fix_websocket_imports.py",
      "category": "paths",
      "locations": [
        "scripts/detect_duplicate_code.py:251"
      ]
    },
    "Run: python scripts/validate_secrets.py --environment staging --project": {
      "value": "Run: python scripts/validate_secrets.py --environment staging --project",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1347"
      ]
    },
    "Run: python scripts/validate_staging_urls.py --environment staging --fix": {
      "value": "Run: python scripts/validate_staging_urls.py --environment staging --fix",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:378"
      ]
    },
    "SPEC/*.xml": {
      "value": "SPEC/*.xml",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:132"
      ]
    },
    "SPEC/MISSION_CRITICAL_NAMED_VALUES_INDEX.xml": {
      "value": "SPEC/MISSION_CRITICAL_NAMED_VALUES_INDEX.xml",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:378"
      ]
    },
    "SPEC/clickhouse_client_architecture.xml": {
      "value": "SPEC/clickhouse_client_architecture.xml",
      "category": "paths",
      "locations": [
        "scripts/verify_clickhouse_ssot.py:78"
      ]
    },
    "SPEC/gcp_deployment.xml": {
      "value": "SPEC/gcp_deployment.xml",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:321"
      ]
    },
    "SPEC/generated/string_literals.json": {
      "value": "SPEC/generated/string_literals.json",
      "category": "paths",
      "locations": [
        "scripts/demo_enhanced_categorizer.py:33",
        "scripts/query_string_literals.py:17",
        "scripts/query_string_literals.py:219",
        "scripts/scan_string_literals.py:557"
      ]
    },
    "SPEC/learnings/clickhouse_ssot_violation_remediation.xml": {
      "value": "SPEC/learnings/clickhouse_ssot_violation_remediation.xml",
      "category": "paths",
      "locations": [
        "scripts/verify_clickhouse_ssot.py:73"
      ]
    },
    "SPEC/learnings/docker_remediation.xml": {
      "value": "SPEC/learnings/docker_remediation.xml",
      "category": "paths",
      "locations": [
        "scripts/automated_error_remediation.py:25"
      ]
    },
    "SPEC/staging_environment.xml": {
      "value": "SPEC/staging_environment.xml",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_deployment.py:320"
      ]
    },
    "Script to fix invalid secrets in Google Secret Manager for staging environment.\n\nThis script addresses critical issues found in the staging secrets audit:\n1. Invalid Redis URL with placeholder password\n2. Duplicate/orphaned secrets\n3. Missing mappings\n\nRun with: python scripts/fix_staging_secrets.py": {
      "value": "Script to fix invalid secrets in Google Secret Manager for staging environment.\n\nThis script addresses critical issues found in the staging secrets audit:\n1. Invalid Redis URL with placeholder password\n2. Duplicate/orphaned secrets\n3. Missing mappings\n\nRun with: python scripts/fix_staging_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_staging_secrets.py:2"
      ]
    },
    "Script to migrate all IsolatedEnvironment imports to the unified shared implementation.\n\nThis script systematically updates all import statements across the codebase to use\nshared.isolated_environment instead of service-specific implementations.\n\nCRITICAL: This migration enforces SSOT compliance per SPEC/unified_environment_management.xml": {
      "value": "Script to migrate all IsolatedEnvironment imports to the unified shared implementation.\n\nThis script systematically updates all import statements across the codebase to use\nshared.isolated_environment instead of service-specific implementations.\n\nCRITICAL: This migration enforces SSOT compliance per SPEC/unified_environment_management.xml",
      "category": "paths",
      "locations": [
        "scripts/migrate_isolated_environment_imports.py:2"
      ]
    },
    "See SPEC/gcp_deployment.xml for deployment guidelines.": {
      "value": "See SPEC/gcp_deployment.xml for deployment guidelines.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:470"
      ]
    },
    "See SPEC/learnings/websocket_agent_integration_critical.xml for fix details.": {
      "value": "See SPEC/learnings/websocket_agent_integration_critical.xml for fix details.",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:465"
      ]
    },
    "See: SPEC/frontend_deployment_critical.xml for documentation": {
      "value": "See: SPEC/frontend_deployment_critical.xml for documentation",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:319"
      ]
    },
    "Setup E2E Bypass Key for Staging Environment\n\nThis script helps set up the E2E authentication bypass key in Google Secrets Manager\nfor the staging environment. It generates a secure key and stores it properly.\n\nUsage:\n    python scripts/setup_E2E_OAUTH_SIMULATION_KEY.py [--project PROJECT_ID]": {
      "value": "Setup E2E Bypass Key for Staging Environment\n\nThis script helps set up the E2E authentication bypass key in Google Secrets Manager\nfor the staging environment. It generates a secure key and stores it properly.\n\nUsage:\n    python scripts/setup_E2E_OAUTH_SIMULATION_KEY.py [--project PROJECT_ID]",
      "category": "paths",
      "locations": [
        "scripts/setup_e2e_bypass_key.py:2"
      ]
    },
    "Staging URL Validation Script\nPrevents localhost URLs from being used in staging/production environments.\n\nThis script validates that:\n1. No localhost references exist in staging/production environment variables\n2. All URLs use appropriate protocols (https/wss for staging/production)\n3. Domain names match expected patterns for each environment\n\nUsage:\n    python scripts/validate_staging_urls.py --environment staging\n    python scripts/validate_staging_urls.py --environment production --fix": {
      "value": "Staging URL Validation Script\nPrevents localhost URLs from being used in staging/production environments.\n\nThis script validates that:\n1. No localhost references exist in staging/production environment variables\n2. All URLs use appropriate protocols (https/wss for staging/production)\n3. Domain names match expected patterns for each environment\n\nUsage:\n    python scripts/validate_staging_urls.py --environment staging\n    python scripts/validate_staging_urls.py --environment production --fix",
      "category": "paths",
      "locations": [
        "scripts/validate_staging_urls.py:3"
      ]
    },
    "Status:  python scripts/manage_precommit.py status": {
      "value": "Status:  python scripts/manage_precommit.py status",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:106"
      ]
    },
    "To re-enable: python scripts/manage_precommit.py enable": {
      "value": "To re-enable: python scripts/manage_precommit.py enable",
      "category": "paths",
      "locations": [
        "scripts/manage_precommit.py:73"
      ]
    },
    "Unified tool execution engine - SSOT for all tool execution.\n\nThis module consolidates all tool execution functionality into a single SSOT,\nmerging the best features from:\n- unified_tool_execution.py (WebSocket notifications)\n- tool_dispatcher_execution.py (core delegation pattern)\n- core/interfaces_tools.py (permission checks and validation)\n\nBusiness Value: Single coherent tool execution system with real-time notifications.": {
      "value": "Unified tool execution engine - SSOT for all tool execution.\n\nThis module consolidates all tool execution functionality into a single SSOT,\nmerging the best features from:\n- unified_tool_execution.py (WebSocket notifications)\n- tool_dispatcher_execution.py (core delegation pattern)\n- core/interfaces_tools.py (permission checks and validation)\n\nBusiness Value: Single coherent tool execution system with real-time notifications.",
      "category": "paths",
      "locations": [
        "netra_backend/app/agents/unified_tool_execution.py:1"
      ]
    },
    "Update placeholder secrets in Google Secret Manager for staging deployment.\n\nThis script helps you update the placeholder secrets that are blocking deployment.\nYou need to provide your actual API keys for the services.\n\nUsage:\n    python scripts/update_placeholder_secrets.py": {
      "value": "Update placeholder secrets in Google Secret Manager for staging deployment.\n\nThis script helps you update the placeholder secrets that are blocking deployment.\nYou need to provide your actual API keys for the services.\n\nUsage:\n    python scripts/update_placeholder_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/update_placeholder_secrets.py:2"
      ]
    },
    "Usage: python scripts/deduplicate_types.py [--dry-run|--migrate|--validate|--clean]": {
      "value": "Usage: python scripts/deduplicate_types.py [--dry-run|--migrate|--validate|--clean]",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:386",
        "scripts/deduplicate_types.py:439"
      ]
    },
    "Usage: python scripts/precommit_duplicate_detector.py [files...]": {
      "value": "Usage: python scripts/precommit_duplicate_detector.py [files...]",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:335"
      ]
    },
    "Validate Secrets Before Deployment\nEnsures all required secrets exist and have non-placeholder values.\n\nThis script MUST be run before deploying to staging or production.\nIt implements the canonical secrets management process defined in SPEC/canonical_secrets_management.xml\n\nBusiness Impact: Prevents deployment failures that cost $5K+ per incident in engineering time.": {
      "value": "Validate Secrets Before Deployment\nEnsures all required secrets exist and have non-placeholder values.\n\nThis script MUST be run before deploying to staging or production.\nIt implements the canonical secrets management process defined in SPEC/canonical_secrets_management.xml\n\nBusiness Impact: Prevents deployment failures that cost $5K+ per incident in engineering time.",
      "category": "paths",
      "locations": [
        "scripts/validate_secrets.py:2"
      ]
    },
    "Validation script for Mock-Real Spectrum compliance.\n\nThis script validates that database tests comply with testing.xml Mock-Real Spectrum\nrequirements, ensuring proper use of L3 real containers vs justified L1 mocks.\n\nUsage:\n    python scripts/validate_mock_real_spectrum_compliance.py": {
      "value": "Validation script for Mock-Real Spectrum compliance.\n\nThis script validates that database tests comply with testing.xml Mock-Real Spectrum\nrequirements, ensuring proper use of L3 real containers vs justified L1 mocks.\n\nUsage:\n    python scripts/validate_mock_real_spectrum_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_real_spectrum_compliance.py:1"
      ]
    },
    "Verify Docker Configuration Compliance with SPEC/docker_volume_optimization.xml": {
      "value": "Verify Docker Configuration Compliance with SPEC/docker_volume_optimization.xml",
      "category": "paths",
      "locations": [
        "scripts/test/verify_docker_optimization.py:2"
      ]
    },
    "Verify that WebSocket regression tests properly catch the bugs.\n\nThis script temporarily breaks the WebSocket implementation to verify\nthat our regression tests would fail without the fixes, then restores\nthe correct implementation.\n\nUsage:\n    python scripts/verify_websocket_regression_tests.py": {
      "value": "Verify that WebSocket regression tests properly catch the bugs.\n\nThis script temporarily breaks the WebSocket implementation to verify\nthat our regression tests would fail without the fixes, then restores\nthe correct implementation.\n\nUsage:\n    python scripts/verify_websocket_regression_tests.py",
      "category": "paths",
      "locations": [
        "scripts/verify_websocket_regression_tests.py:2"
      ]
    },
    "WebSocket Event Compliance Validator\n\nValidates that the WebSocket implementation follows the specification from \nSPEC/learnings/websocket_agent_integration_critical.xml": {
      "value": "WebSocket Event Compliance Validator\n\nValidates that the WebSocket implementation follows the specification from \nSPEC/learnings/websocket_agent_integration_critical.xml",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_compliance.py:2"
      ]
    },
    "When deploying with: python scripts/deploy_to_gcp.py --project netra-staging": {
      "value": "When deploying with: python scripts/deploy_to_gcp.py --project netra-staging",
      "category": "paths",
      "locations": [
        "scripts/verify_deployment_env_vars.py:172"
      ]
    },
    "Windows Port 8000 Permission Error Fix\n\nThis script resolves the Windows socket permission error [WinError 10013] that prevents\nthe backend service from binding to port 8000.\n\nCommon causes addressed:\n1. Process already using port 8000\n2. Windows firewall blocking port access\n3. Orphaned processes from previous dev launcher runs\n4. System-reserved ports (Windows dynamic port range)\n\nUsage:\n    python scripts/fix_port_8000_windows.py [--kill-processes] [--check-firewall] [--force]": {
      "value": "Windows Port 8000 Permission Error Fix\n\nThis script resolves the Windows socket permission error [WinError 10013] that prevents\nthe backend service from binding to port 8000.\n\nCommon causes addressed:\n1. Process already using port 8000\n2. Windows firewall blocking port access\n3. Orphaned processes from previous dev launcher runs\n4. System-reserved ports (Windows dynamic port range)\n\nUsage:\n    python scripts/fix_port_8000_windows.py [--kill-processes] [--check-firewall] [--force]",
      "category": "paths",
      "locations": [
        "scripts/fix_port_8000_windows.py:2"
      ]
    },
    "Windows-specific process cleanup utilities.\n\nThis module provides robust process cleanup functionality for Windows,\nparticularly for Node.js processes that tend to hang after tests or dev launcher.\n\nBusiness Value: Platform/Internal - Development Velocity\nPrevents developer time loss due to hanging processes and port conflicts.": {
      "value": "Windows-specific process cleanup utilities.\n\nThis module provides robust process cleanup functionality for Windows,\nparticularly for Node.js processes that tend to hang after tests or dev launcher.\n\nBusiness Value: Platform/Internal - Development Velocity\nPrevents developer time loss due to hanging processes and port conflicts.",
      "category": "paths",
      "locations": [
        "shared/windows_process_cleanup.py:1"
      ]
    },
    "You can now run: python scripts/run_gtm_setup.py": {
      "value": "You can now run: python scripts/run_gtm_setup.py",
      "category": "paths",
      "locations": [
        "scripts/find_gtm_account_id.py:160"
      ]
    },
    "[bold green]Setup Complete![/bold green]\n\nNext steps:\n1. Edit .act.secrets with your secrets\n2. Run: python scripts/act_wrapper.py list\n3. Test: python scripts/act_wrapper.py run test-smoke\n\nDocumentation: docs/ACT_LOCAL_TESTING_GUIDE.md": {
      "value": "[bold green]Setup Complete![/bold green]\n\nNext steps:\n1. Edit .act.secrets with your secrets\n2. Run: python scripts/act_wrapper.py list\n3. Test: python scripts/act_wrapper.py run test-smoke\n\nDocumentation: docs/ACT_LOCAL_TESTING_GUIDE.md",
      "category": "paths",
      "locations": [
        "scripts/setup_act.py:201"
      ]
    },
    "[green]‚úì[/green] Configuration exported to oauth_redirect_uris.json": {
      "value": "[green]‚úì[/green] Configuration exported to oauth_redirect_uris.json",
      "category": "paths",
      "locations": [
        "scripts/verify_oauth_redirect_uris.py:144"
      ]
    },
    "[yellow]Please ensure service account key is at: config/netra-staging-7a1059b7cf26.json[/yellow]": {
      "value": "[yellow]Please ensure service account key is at: config/netra-staging-7a1059b7cf26.json[/yellow]",
      "category": "paths",
      "locations": [
        "scripts/audit_oauth_gcp_logs.py:54"
      ]
    },
    "\\.json$": {
      "value": "\\.json$",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/git_diff_analyzer.py:196"
      ]
    },
    "_(core|utilities|helpers|fixtures|services|managers)_\\d+\\.py$": {
      "value": "_(core|utilities|helpers|fixtures|services|managers)_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:106"
      ]
    },
    "_\\d+\\.py$": {
      "value": "_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:26",
        "scripts/prevent_numbered_files.py:101",
        "scripts/prevent_numbered_files.py:102"
      ]
    },
    "_\\d+\\.py$|_v\\d+\\.py$": {
      "value": "_\\d+\\.py$|_v\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:96"
      ]
    },
    "_\\d+_\\d+\\.py$": {
      "value": "_\\d+_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:27"
      ]
    },
    "_backup\\.py$": {
      "value": "_backup\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:39"
      ]
    },
    "_backup\\.xml$": {
      "value": "_backup\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:17"
      ]
    },
    "_batch_\\d+\\.py$": {
      "value": "_batch_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:35",
        "scripts/prevent_numbered_files.py:110"
      ]
    },
    "_core_\\d+\\.py$": {
      "value": "_core_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:29"
      ]
    },
    "_deprecated\\.xml$": {
      "value": "_deprecated\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:18"
      ]
    },
    "_enhanced\\.py$": {
      "value": "_enhanced\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:37"
      ]
    },
    "_fixed\\.py$": {
      "value": "_fixed\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:38"
      ]
    },
    "_fixtures_\\d+\\.py$": {
      "value": "_fixtures_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:32"
      ]
    },
    "_helpers_\\d+\\.py$": {
      "value": "_helpers_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:31"
      ]
    },
    "_legacy\\.xml$": {
      "value": "_legacy\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:19"
      ]
    },
    "_managers_\\d+\\.py$": {
      "value": "_managers_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:34"
      ]
    },
    "_new\\.py$": {
      "value": "_new\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:41"
      ]
    },
    "_old\\.py$": {
      "value": "_old\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:40"
      ]
    },
    "_old\\.xml$": {
      "value": "_old\\.xml$",
      "category": "paths",
      "locations": [
        "scripts/update_spec_timestamps.py:16"
      ]
    },
    "_services_\\d+\\.py$": {
      "value": "_services_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:33"
      ]
    },
    "_temp\\.py$": {
      "value": "_temp\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:42"
      ]
    },
    "_tmp\\.py$": {
      "value": "_tmp\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:43"
      ]
    },
    "_utilities_\\d+\\.py$": {
      "value": "_utilities_\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:30"
      ]
    },
    "_v\\d+\\.py$": {
      "value": "_v\\d+\\.py$",
      "category": "paths",
      "locations": [
        "scripts/prevent_numbered_files.py:50"
      ]
    },
    "analytics_service/**/*.py": {
      "value": "analytics_service/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_modern_websockets_deprecation.py:182"
      ]
    },
    "analytics_service/analytics_core/isolated_environment.py": {
      "value": "analytics_service/analytics_core/isolated_environment.py",
      "category": "paths",
      "locations": [
        "scripts/scan_os_environ_violations.py:41",
        "scripts/validate_environment_compliance.py:108"
      ]
    },
    "app/**/*.py": {
      "value": "app/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_metrics.py:243",
        "scripts/architecture_scanner.py:74",
        "scripts/architecture_scanner.py:117",
        "scripts/architecture_scanner.py:181",
        "scripts/architecture_scanner_helpers.py:152",
        "scripts/architecture_scanner_quality.py:26",
        "scripts/architecture_scanner_quality.py:71",
        "scripts/architecture_scanner_quality.py:114",
        "scripts/auto_decompose_functions.py:372"
      ]
    },
    "app/agents/*.py": {
      "value": "app/agents/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:154"
      ]
    },
    "app/agents/state.py": {
      "value": "app/agents/state.py",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:64"
      ]
    },
    "app/agents/synthetic_data_progress_tracker.py": {
      "value": "app/agents/synthetic_data_progress_tracker.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:41"
      ]
    },
    "app/chat/page.tsx": {
      "value": "app/chat/page.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:288"
      ]
    },
    "app/core/*.py": {
      "value": "app/core/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:155"
      ]
    },
    "app/core/degradation_strategies.py": {
      "value": "app/core/degradation_strategies.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:40"
      ]
    },
    "app/db/*.py": {
      "value": "app/db/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:153"
      ]
    },
    "app/main.py": {
      "value": "app/main.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_collectors.py:124"
      ]
    },
    "app/monitoring/alert_manager_core.py": {
      "value": "app/monitoring/alert_manager_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_monitoring_violations.py:13"
      ]
    },
    "app/monitoring/alert_notifications.py": {
      "value": "app/monitoring/alert_notifications.py",
      "category": "paths",
      "locations": [
        "scripts/fix_monitoring_violations.py:75"
      ]
    },
    "app/page.tsx": {
      "value": "app/page.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:287"
      ]
    },
    "app/routes/utils/thread_title_generator.py": {
      "value": "app/routes/utils/thread_title_generator.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:39"
      ]
    },
    "app/routes/websockets.py": {
      "value": "app/routes/websockets.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:114",
        "scripts/review/spec_checker.py:45"
      ]
    },
    "app/schemas.py": {
      "value": "app/schemas.py",
      "category": "paths",
      "locations": [
        "scripts/generate-types.py:7"
      ]
    },
    "app/schemas/WebSocket.py": {
      "value": "app/schemas/WebSocket.py",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:66"
      ]
    },
    "app/schemas/websocket_types.py": {
      "value": "app/schemas/websocket_types.py",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:65"
      ]
    },
    "app/services/admin.py": {
      "value": "app/services/admin.py",
      "category": "paths",
      "locations": [
        "scripts/claude_audit_analyzer.py:400"
      ]
    },
    "app/services/agent_service.py": {
      "value": "app/services/agent_service.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:115",
        "scripts/fix_missing_functions.py:12",
        "scripts/review/spec_checker.py:46"
      ]
    },
    "app/services/security_service.py": {
      "value": "app/services/security_service.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:117",
        "scripts/review/spec_checker.py:48"
      ]
    },
    "app/services/user.py": {
      "value": "app/services/user.py",
      "category": "paths",
      "locations": [
        "scripts/claude_audit_analyzer.py:399"
      ]
    },
    "app/tests/**/*test*.py": {
      "value": "app/tests/**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:129",
        "scripts/fix_import_issues.py:137",
        "scripts/fix_import_issues.py:144"
      ]
    },
    "app/tests/agents/test_supervisor_consolidated_comprehensive.py": {
      "value": "app/tests/agents/test_supervisor_consolidated_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:203"
      ]
    },
    "app/tests/core/test_async_utils.py": {
      "value": "app/tests/core/test_async_utils.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:206"
      ]
    },
    "app/tests/core/test_error_handling.py": {
      "value": "app/tests/core/test_error_handling.py",
      "category": "paths",
      "locations": [
        "scripts/benchmark_optimization.py:75"
      ]
    },
    "app/tests/core/test_missing_tests_11_30.py": {
      "value": "app/tests/core/test_missing_tests_11_30.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:206"
      ]
    },
    "app/tests/performance/test_agent_load_stress.py": {
      "value": "app/tests/performance/test_agent_load_stress.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:36"
      ]
    },
    "app/tests/performance/test_benchmark_metrics.py": {
      "value": "app/tests/performance/test_benchmark_metrics.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:25"
      ]
    },
    "app/tests/performance/test_concurrent_processing.py": {
      "value": "app/tests/performance/test_concurrent_processing.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:27"
      ]
    },
    "app/tests/performance/test_corpus_generation_perf.py": {
      "value": "app/tests/performance/test_corpus_generation_perf.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:34"
      ]
    },
    "app/tests/performance/test_database_performance.py": {
      "value": "app/tests/performance/test_database_performance.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:26"
      ]
    },
    "app/tests/performance/test_large_scale_generation.py": {
      "value": "app/tests/performance/test_large_scale_generation.py",
      "category": "paths",
      "locations": [
        "scripts/simple_perf_runner.py:35"
      ]
    },
    "app/tests/routes/test_health_route.py": {
      "value": "app/tests/routes/test_health_route.py",
      "category": "paths",
      "locations": [
        "scripts/benchmark_optimization.py:74"
      ]
    },
    "app/tests/services/test_quality_gate_service_comprehensive.py": {
      "value": "app/tests/services/test_quality_gate_service_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:205"
      ]
    },
    "app/tests/services/test_tool_permission_service_comprehensive.py": {
      "value": "app/tests/services/test_tool_permission_service_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/split_large_files.py:204"
      ]
    },
    "app/utils/helpers.py": {
      "value": "app/utils/helpers.py",
      "category": "paths",
      "locations": [
        "scripts/claude_audit_analyzer.py:413"
      ]
    },
    "app/websocket/*.py": {
      "value": "app/websocket/*.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:152"
      ]
    },
    "app/ws_manager.py": {
      "value": "app/ws_manager.py",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:114",
        "scripts/review/spec_checker.py:45",
        "scripts/websocket_coherence_review.py:16"
      ]
    },
    "auth/context.tsx": {
      "value": "auth/context.tsx",
      "category": "paths",
      "locations": [
        "scripts/check_circular_dependencies.py:178"
      ]
    },
    "auth_service/**/*.py": {
      "value": "auth_service/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_modern_websockets_deprecation.py:180",
        "scripts/fix_websockets_legacy_to_modern.py:105"
      ]
    },
    "auth_service/auth_core/isolated_environment.py": {
      "value": "auth_service/auth_core/isolated_environment.py",
      "category": "paths",
      "locations": [
        "scripts/scan_os_environ_violations.py:40",
        "scripts/validate_environment_compliance.py:107"
      ]
    },
    "auth_service/tests/**/*.py": {
      "value": "auth_service/tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:172"
      ]
    },
    "auth_service/tests/**/*test*.py": {
      "value": "auth_service/tests/**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:131"
      ]
    },
    "auth_service/tests/test_auth_comprehensive.py": {
      "value": "auth_service/tests/test_auth_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/consolidate_auth_tests.py:197"
      ]
    },
    "background_jobs/__init__.py": {
      "value": "background_jobs/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:224"
      ]
    },
    "caching/__init__.py": {
      "value": "caching/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:229"
      ]
    },
    "cat SPEC/learnings/import_management.xml": {
      "value": "cat SPEC/learnings/import_management.xml",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:166"
      ]
    },
    "components/chat/MainChat.tsx": {
      "value": "components/chat/MainChat.tsx",
      "category": "paths",
      "locations": [
        "scripts/validate_cold_start.py:289"
      ]
    },
    "config/audit.json": {
      "value": "config/audit.json",
      "category": "paths",
      "locations": [
        "scripts/audit_config.py:125"
      ]
    },
    "config/default.json": {
      "value": "config/default.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/managers/unified_configuration_manager.py:388"
      ]
    },
    "config\\.json": {
      "value": "config\\.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:30"
      ]
    },
    "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self' data: https://cdn.jsdelivr.net; img-src 'self' data: https://cdn.jsdelivr.net https://fastapi.tiangolo.com; connect-src 'self'": {
      "value": "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; font-src 'self' data: https://cdn.jsdelivr.net; img-src 'self' data: https://cdn.jsdelivr.net https://fastapi.tiangolo.com; connect-src 'self'",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/security_headers_middleware.py:187"
      ]
    },
    "del netra_backend\\app\\agents\\supervisor_agent.py": {
      "value": "del netra_backend\\app\\agents\\supervisor_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_supervisor_ssot_violation.py:137"
      ]
    },
    "del netra_backend\\app\\agents\\supervisor_agent_modern.py": {
      "value": "del netra_backend\\app\\agents\\supervisor_agent_modern.py",
      "category": "paths",
      "locations": [
        "scripts/fix_supervisor_ssot_violation.py:138"
      ]
    },
    "dev_launcher/**/*.py": {
      "value": "dev_launcher/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_modern_websockets_deprecation.py:183"
      ]
    },
    "dev_launcher/isolated_environment.py": {
      "value": "dev_launcher/isolated_environment.py",
      "category": "paths",
      "locations": [
        "scripts/scan_os_environ_violations.py:42",
        "scripts/validate_environment_compliance.py:109"
      ]
    },
    "dev_launcher/secret_loader.py": {
      "value": "dev_launcher/secret_loader.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:250"
      ]
    },
    "discovery/__init__.py": {
      "value": "discovery/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:239"
      ]
    },
    "frontend/**/*.test.py": {
      "value": "frontend/**/*.test.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:173"
      ]
    },
    "frontend/**/*.ts": {
      "value": "frontend/**/*.ts",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_scanner.py:140",
        "scripts/architecture_scanner_helpers.py:154",
        "scripts/auto_split_files.py:300",
        "scripts/boundary_enforcer_core_types.py:61",
        "scripts/boundary_enforcer_type_checks.py:74",
        "scripts/create_enforcement_tools.py:98",
        "scripts/validate_type_deduplication.py:133"
      ]
    },
    "frontend/**/*.tsx": {
      "value": "frontend/**/*.tsx",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_scanner.py:140",
        "scripts/architecture_scanner_helpers.py:153",
        "scripts/auto_split_files.py:300",
        "scripts/boundary_enforcer_core_types.py:60",
        "scripts/boundary_enforcer_type_checks.py:74",
        "scripts/create_enforcement_tools.py:98"
      ]
    },
    "frontend/__tests__/integration/critical/backend-authentication-system-failure.test.tsx": {
      "value": "frontend/__tests__/integration/critical/backend-authentication-system-failure.test.tsx",
      "category": "paths",
      "locations": [
        "scripts/fix_authentication_system.py:338"
      ]
    },
    "frontend/__tests__/utils/test-helpers.tsx": {
      "value": "frontend/__tests__/utils/test-helpers.tsx",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:29",
        "scripts/consolidate_types.py:30",
        "scripts/consolidate_types.py:31",
        "scripts/consolidate_types.py:32",
        "scripts/consolidate_types.py:33",
        "scripts/consolidate_types.py:34",
        "scripts/consolidate_types.py:35",
        "scripts/consolidate_types.py:36",
        "scripts/consolidate_types.py:37",
        "scripts/consolidate_types.py:38"
      ]
    },
    "frontend/package.json": {
      "value": "frontend/package.json",
      "category": "paths",
      "locations": [
        "scripts/dependency_scanner.py:111",
        "scripts/diagnostic_helpers.py:130"
      ]
    },
    "frontend/src/services/websocket.js": {
      "value": "frontend/src/services/websocket.js",
      "category": "paths",
      "locations": [
        "scripts/audit_unused_code.py:172",
        "scripts/audit_unused_code.py:187"
      ]
    },
    "frontend/types/agent.ts": {
      "value": "frontend/types/agent.ts",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:67"
      ]
    },
    "frontend/types/backend_schema_auto_generated.ts": {
      "value": "frontend/types/backend_schema_auto_generated.ts",
      "category": "paths",
      "locations": [
        "netra_backend/app/core/schema_sync/utils.py:116",
        "scripts/generate_frontend_types.py:31",
        "scripts/schema_sync.py:147"
      ]
    },
    "frontend/types/chat.ts": {
      "value": "frontend/types/chat.ts",
      "category": "paths",
      "locations": [
        "scripts/deduplicate_types.py:68"
      ]
    },
    "frontend/types/domains/agents.ts": {
      "value": "frontend/types/domains/agents.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:58"
      ]
    },
    "frontend/types/domains/messages.ts": {
      "value": "frontend/types/domains/messages.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:59"
      ]
    },
    "frontend/types/domains/threads.ts": {
      "value": "frontend/types/domains/threads.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:55",
        "scripts/consolidate_types.py:56",
        "scripts/consolidate_types.py:57"
      ]
    },
    "frontend/types/domains/websocket.ts": {
      "value": "frontend/types/domains/websocket.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:43",
        "scripts/consolidate_types.py:44",
        "scripts/consolidate_types.py:45"
      ]
    },
    "frontend/types/shared/base.ts": {
      "value": "frontend/types/shared/base.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:48",
        "scripts/consolidate_types.py:49",
        "scripts/consolidate_types.py:50",
        "scripts/consolidate_types.py:51",
        "scripts/consolidate_types.py:52"
      ]
    },
    "frontend/types/store-types.ts": {
      "value": "frontend/types/store-types.ts",
      "category": "paths",
      "locations": [
        "scripts/consolidate_types.py:62",
        "scripts/consolidate_types.py:63",
        "scripts/consolidate_types.py:64",
        "scripts/consolidate_types.py:65",
        "scripts/consolidate_types.py:66"
      ]
    },
    "grep -r --include='*.py' '^def .*):$' app/ | head -20": {
      "value": "grep -r --include='*.py' '^def .*):$' app/ | head -20",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:88"
      ]
    },
    "grep -r --include='*.py' 'except:' app/ | head -10": {
      "value": "grep -r --include='*.py' 'except:' app/ | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:104"
      ]
    },
    "grep -r --include='*.py' 'f\".*SELECT\\|f\".*INSERT\\|f\".*UPDATE\\|f\".*DELETE' app/ | head -5": {
      "value": "grep -r --include='*.py' 'f\".*SELECT\\|f\".*INSERT\\|f\".*UPDATE\\|f\".*DELETE' app/ | head -5",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:210",
        "scripts/review/security_checker.py:63"
      ]
    },
    "grep -r --include='*.py' 'for .* in .*:' app/ | grep -A 2 'db\\|query\\|select' | head -10": {
      "value": "grep -r --include='*.py' 'for .* in .*:' app/ | grep -A 2 'db\\|query\\|select' | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_analysis.py:161",
        "scripts/review/performance_checker.py:27"
      ]
    },
    "grep -r --include='*.py' --include='*.ts' --include='*.tsx' 'TODO\\|FIXME' . | head -20": {
      "value": "grep -r --include='*.py' --include='*.ts' --include='*.tsx' 'TODO\\|FIXME' . | head -20",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:124",
        "scripts/review/ai_detector.py:131"
      ]
    },
    "grep -r --include='*.ts' --include='*.tsx' ': any' frontend/types/ | head -10": {
      "value": "grep -r --include='*.ts' --include='*.tsx' ': any' frontend/types/ | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:79"
      ]
    },
    "grep -r --include='*.ts' --include='*.tsx' '\\.then(' frontend/ | grep -v '\\.catch(' | head -10": {
      "value": "grep -r --include='*.ts' --include='*.tsx' '\\.then(' frontend/ | grep -v '\\.catch(' | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:113",
        "scripts/review/ai_detector.py:117"
      ]
    },
    "grep -r --include='*.ts' --include='*.tsx' 'console\\.log' frontend/ | head -10": {
      "value": "grep -r --include='*.ts' --include='*.tsx' 'console\\.log' frontend/ | head -10",
      "category": "paths",
      "locations": [
        "scripts/code_review_ai_detector.py:133"
      ]
    },
    "lib/logger.ts": {
      "value": "lib/logger.ts",
      "category": "paths",
      "locations": [
        "scripts/check_circular_dependencies.py:176"
      ]
    },
    "lib/unified-api-config.ts": {
      "value": "lib/unified-api-config.ts",
      "category": "paths",
      "locations": [
        "scripts/check_circular_dependencies.py:177",
        "scripts/check_circular_dependencies.py:284"
      ]
    },
    "logs/emergency_report.json": {
      "value": "logs/emergency_report.json",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:196"
      ]
    },
    "logs/urgent_violations.json": {
      "value": "logs/urgent_violations.json",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:229"
      ]
    },
    "logs/warning_report.json": {
      "value": "logs/warning_report.json",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:262"
      ]
    },
    "modules/__init__.py": {
      "value": "modules/__init__.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:19"
      ]
    },
    "modules/netra_mcp_core.py": {
      "value": "modules/netra_mcp_core.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:20"
      ]
    },
    "modules/netra_mcp_models.py": {
      "value": "modules/netra_mcp_models.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:21"
      ]
    },
    "modules/netra_mcp_prompts.py": {
      "value": "modules/netra_mcp_prompts.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:24"
      ]
    },
    "modules/netra_mcp_resources.py": {
      "value": "modules/netra_mcp_resources.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:23"
      ]
    },
    "modules/netra_mcp_tools.py": {
      "value": "modules/netra_mcp_tools.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/netra_mcp/netra_mcp_server.py:22"
      ]
    },
    "netra_backend/**/*.py": {
      "value": "netra_backend/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:224",
        "scripts/compliance/ssot_checker.py:320",
        "scripts/fix_modern_websockets_deprecation.py:179",
        "scripts/fix_websockets_deprecation.py:67",
        "scripts/fix_websockets_legacy_to_modern.py:104"
      ]
    },
    "netra_backend/app/agents/actions_agent_execution.py": {
      "value": "netra_backend/app/agents/actions_agent_execution.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:39"
      ]
    },
    "netra_backend/app/agents/actions_to_meet_goals_sub_agent.py": {
      "value": "netra_backend/app/agents/actions_to_meet_goals_sub_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:40"
      ]
    },
    "netra_backend/app/agents/admin_tool_dispatcher/tool_handlers_core.py": {
      "value": "netra_backend/app/agents/admin_tool_dispatcher/tool_handlers_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:38"
      ]
    },
    "netra_backend/app/agents/admin_tool_dispatcher/validation.py": {
      "value": "netra_backend/app/agents/admin_tool_dispatcher/validation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:37"
      ]
    },
    "netra_backend/app/agents/chat_orchestrator/model_cascade.py": {
      "value": "netra_backend/app/agents/chat_orchestrator/model_cascade.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:68"
      ]
    },
    "netra_backend/app/agents/chat_orchestrator_main.py": {
      "value": "netra_backend/app/agents/chat_orchestrator_main.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:78"
      ]
    },
    "netra_backend/app/agents/corpus_admin/agent.py": {
      "value": "netra_backend/app/agents/corpus_admin/agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:36"
      ]
    },
    "netra_backend/app/agents/corpus_admin_sub_agent.py": {
      "value": "netra_backend/app/agents/corpus_admin_sub_agent.py",
      "category": "paths",
      "locations": [
        "scripts/generate_corpus_admin_mro_report.py:272"
      ]
    },
    "netra_backend/app/agents/data_sub_agent/analysis_engine.py": {
      "value": "netra_backend/app/agents/data_sub_agent/analysis_engine.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:35"
      ]
    },
    "netra_backend/app/agents/data_sub_agent/anomaly_detector.py": {
      "value": "netra_backend/app/agents/data_sub_agent/anomaly_detector.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:34"
      ]
    },
    "netra_backend/app/agents/data_sub_agent/clickhouse_client.py": {
      "value": "netra_backend/app/agents/data_sub_agent/clickhouse_client.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:207",
        "scripts/verify_clickhouse_ssot.py:28"
      ]
    },
    "netra_backend/app/agents/data_sub_agent/execution_core.py": {
      "value": "netra_backend/app/agents/data_sub_agent/execution_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:33"
      ]
    },
    "netra_backend/app/agents/data_sub_agent/execution_engine.py": {
      "value": "netra_backend/app/agents/data_sub_agent/execution_engine.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:32"
      ]
    },
    "netra_backend/app/agents/demo_service/optimization.py": {
      "value": "netra_backend/app/agents/demo_service/optimization.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:31"
      ]
    },
    "netra_backend/app/agents/mcp_integration/context_manager.py": {
      "value": "netra_backend/app/agents/mcp_integration/context_manager.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:30"
      ]
    },
    "netra_backend/app/agents/mcp_integration/mcp_intent_detector.py": {
      "value": "netra_backend/app/agents/mcp_integration/mcp_intent_detector.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:29"
      ]
    },
    "netra_backend/app/agents/optimizations_core_sub_agent.py": {
      "value": "netra_backend/app/agents/optimizations_core_sub_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:28"
      ]
    },
    "netra_backend/app/agents/reporting_sub_agent.py": {
      "value": "netra_backend/app/agents/reporting_sub_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:27"
      ]
    },
    "netra_backend/app/agents/supervisor_admin_init.py": {
      "value": "netra_backend/app/agents/supervisor_admin_init.py",
      "category": "paths",
      "locations": [
        "scripts/fix_comprehensive_imports.py:275"
      ]
    },
    "netra_backend/app/agents/supervisor_agent.py": {
      "value": "netra_backend/app/agents/supervisor_agent.py",
      "category": "paths",
      "locations": [
        "scripts/test/SSOT_FIX_VERIFICATION.py:21"
      ]
    },
    "netra_backend/app/agents/supervisor_agent_modern.py": {
      "value": "netra_backend/app/agents/supervisor_agent_modern.py",
      "category": "paths",
      "locations": [
        "scripts/test/SSOT_FIX_VERIFICATION.py:22"
      ]
    },
    "netra_backend/app/agents/supervisor_consolidated.py": {
      "value": "netra_backend/app/agents/supervisor_consolidated.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:26",
        "scripts/test/SSOT_FIX_VERIFICATION.py:34"
      ]
    },
    "netra_backend/app/agents/synthetic_data/core.py": {
      "value": "netra_backend/app/agents/synthetic_data/core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:25"
      ]
    },
    "netra_backend/app/agents/triage_sub_agent.py": {
      "value": "netra_backend/app/agents/triage_sub_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:22"
      ]
    },
    "netra_backend/app/agents/triage_sub_agent/executor.py": {
      "value": "netra_backend/app/agents/triage_sub_agent/executor.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:24"
      ]
    },
    "netra_backend/app/agents/triage_sub_agent/processing.py": {
      "value": "netra_backend/app/agents/triage_sub_agent/processing.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:23"
      ]
    },
    "netra_backend/app/auth_integration/auth.py": {
      "value": "netra_backend/app/auth_integration/auth.py",
      "category": "paths",
      "locations": [
        "scripts/run_auth_compliance_demo.py:95"
      ]
    },
    "netra_backend/app/clickhouse/__init__.py": {
      "value": "netra_backend/app/clickhouse/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:15"
      ]
    },
    "netra_backend/app/core/configuration/database.py": {
      "value": "netra_backend/app/core/configuration/database.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:66",
        "scripts/verify_clickhouse_fix.py:48"
      ]
    },
    "netra_backend/app/core/configuration/environment.py": {
      "value": "netra_backend/app/core/configuration/environment.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:67"
      ]
    },
    "netra_backend/app/core/configuration/environment_detector.py": {
      "value": "netra_backend/app/core/configuration/environment_detector.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:65"
      ]
    },
    "netra_backend/app/core/configuration/secrets.py": {
      "value": "netra_backend/app/core/configuration/secrets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:64"
      ]
    },
    "netra_backend/app/core/configuration/unified_secrets.py": {
      "value": "netra_backend/app/core/configuration/unified_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:63"
      ]
    },
    "netra_backend/app/core/database.py": {
      "value": "netra_backend/app/core/database.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:20"
      ]
    },
    "netra_backend/app/core/health_configuration.py": {
      "value": "netra_backend/app/core/health_configuration.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:77"
      ]
    },
    "netra_backend/app/core/isolated_environment.py": {
      "value": "netra_backend/app/core/isolated_environment.py",
      "category": "paths",
      "locations": [
        "scripts/scan_os_environ_violations.py:39",
        "scripts/validate_environment_compliance.py:106"
      ]
    },
    "netra_backend/app/core/startup_config.py": {
      "value": "netra_backend/app/core/startup_config.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:76"
      ]
    },
    "netra_backend/app/core/transaction_core.py": {
      "value": "netra_backend/app/core/transaction_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:31"
      ]
    },
    "netra_backend/app/database/migration_manager.py": {
      "value": "netra_backend/app/database/migration_manager.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:36"
      ]
    },
    "netra_backend/app/db/clickhouse.py": {
      "value": "netra_backend/app/db/clickhouse.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:232",
        "scripts/compliance/ssot_checker.py:294",
        "scripts/verify_clickhouse_ssot.py:42"
      ]
    },
    "netra_backend/app/db/clickhouse_client.py": {
      "value": "netra_backend/app/db/clickhouse_client.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:205",
        "scripts/verify_clickhouse_ssot.py:25"
      ]
    },
    "netra_backend/app/db/clickhouse_reliable_manager.py": {
      "value": "netra_backend/app/db/clickhouse_reliable_manager.py",
      "category": "paths",
      "locations": [
        "scripts/verify_clickhouse_ssot.py:27"
      ]
    },
    "netra_backend/app/db/client_clickhouse.py": {
      "value": "netra_backend/app/db/client_clickhouse.py",
      "category": "paths",
      "locations": [
        "scripts/compliance/ssot_checker.py:206",
        "scripts/verify_clickhouse_ssot.py:26"
      ]
    },
    "netra_backend/app/db/database_initializer.py": {
      "value": "netra_backend/app/db/database_initializer.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:75"
      ]
    },
    "netra_backend/app/db/models.py": {
      "value": "netra_backend/app/db/models.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:26"
      ]
    },
    "netra_backend/app/db/postgres_core.py": {
      "value": "netra_backend/app/db/postgres_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:74"
      ]
    },
    "netra_backend/app/error_aggregator.py": {
      "value": "netra_backend/app/error_aggregator.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:119"
      ]
    },
    "netra_backend/app/guardrails/input_filters.py": {
      "value": "netra_backend/app/guardrails/input_filters.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:73"
      ]
    },
    "netra_backend/app/main.py": {
      "value": "netra_backend/app/main.py",
      "category": "paths",
      "locations": [
        "scripts/run_auth_compliance_demo.py:93"
      ]
    },
    "netra_backend/app/models/message.py": {
      "value": "netra_backend/app/models/message.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:213"
      ]
    },
    "netra_backend/app/monitoring/prometheus_exporter.py": {
      "value": "netra_backend/app/monitoring/prometheus_exporter.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:58"
      ]
    },
    "netra_backend/app/routes/websocket_secure.py": {
      "value": "netra_backend/app/routes/websocket_secure.py",
      "category": "paths",
      "locations": [
        "scripts/run_auth_compliance_demo.py:94"
      ]
    },
    "netra_backend/app/routes/websocket_unified.py": {
      "value": "netra_backend/app/routes/websocket_unified.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:61"
      ]
    },
    "netra_backend/app/services/cache/semantic_cache.py": {
      "value": "netra_backend/app/services/cache/semantic_cache.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:62"
      ]
    },
    "netra_backend/app/services/external_service_client.py": {
      "value": "netra_backend/app/services/external_service_client.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:47"
      ]
    },
    "netra_backend/app/services/file_storage_service.py": {
      "value": "netra_backend/app/services/file_storage_service.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:42"
      ]
    },
    "netra_backend/app/services/startup_fixes_integration.py": {
      "value": "netra_backend/app/services/startup_fixes_integration.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:72"
      ]
    },
    "netra_backend/app/services/supply_research_scheduler.py": {
      "value": "netra_backend/app/services/supply_research_scheduler.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:51"
      ]
    },
    "netra_backend/app/services/tenant_service.py": {
      "value": "netra_backend/app/services/tenant_service.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:52"
      ]
    },
    "netra_backend/app/services/unified_health_service.py": {
      "value": "netra_backend/app/services/unified_health_service.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:71"
      ]
    },
    "netra_backend/app/services/user_auth_service.py": {
      "value": "netra_backend/app/services/user_auth_service.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:67"
      ]
    },
    "netra_backend/app/services/user_websocket_emitter.py": {
      "value": "netra_backend/app/services/user_websocket_emitter.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:65"
      ]
    },
    "netra_backend/app/services/websocket_bridge_factory.py": {
      "value": "netra_backend/app/services/websocket_bridge_factory.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:66"
      ]
    },
    "netra_backend/app/services/websocket_emitter_pool.py": {
      "value": "netra_backend/app/services/websocket_emitter_pool.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:64"
      ]
    },
    "netra_backend/app/services/websocket_event_emitter.py": {
      "value": "netra_backend/app/services/websocket_event_emitter.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:63"
      ]
    },
    "netra_backend/app/services/websocket_manager.py": {
      "value": "netra_backend/app/services/websocket_manager.py",
      "category": "paths",
      "locations": [
        "scripts/audit_unused_code.py:128",
        "scripts/audit_unused_code.py:154"
      ]
    },
    "netra_backend/app/startup_module.py": {
      "value": "netra_backend/app/startup_module.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:79"
      ]
    },
    "netra_backend/app/tools/deep_research_api.py": {
      "value": "netra_backend/app/tools/deep_research_api.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:69"
      ]
    },
    "netra_backend/app/tools/sandboxed_interpreter.py": {
      "value": "netra_backend/app/tools/sandboxed_interpreter.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:70"
      ]
    },
    "netra_backend/app/websocket/__init__.py": {
      "value": "netra_backend/app/websocket/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:80",
        "scripts/migrate_websocket_to_unified.py:72"
      ]
    },
    "netra_backend/app/websocket/manager.py": {
      "value": "netra_backend/app/websocket/manager.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:58"
      ]
    },
    "netra_backend/app/websocket_core/__init__.py": {
      "value": "netra_backend/app/websocket_core/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:71",
        "scripts/migrate_websocket_to_unified.py:118"
      ]
    },
    "netra_backend/app/websocket_core/batch_message_core.py": {
      "value": "netra_backend/app/websocket_core/batch_message_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:24"
      ]
    },
    "netra_backend/app/websocket_core/batch_message_handler.py": {
      "value": "netra_backend/app/websocket_core/batch_message_handler.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:69"
      ]
    },
    "netra_backend/app/websocket_core/broadcast.py": {
      "value": "netra_backend/app/websocket_core/broadcast.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:114"
      ]
    },
    "netra_backend/app/websocket_core/broadcast_core.py": {
      "value": "netra_backend/app/websocket_core/broadcast_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:94"
      ]
    },
    "netra_backend/app/websocket_core/compression.py": {
      "value": "netra_backend/app/websocket_core/compression.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:109"
      ]
    },
    "netra_backend/app/websocket_core/connection_executor.py": {
      "value": "netra_backend/app/websocket_core/connection_executor.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:84"
      ]
    },
    "netra_backend/app/websocket_core/connection_info.py": {
      "value": "netra_backend/app/websocket_core/connection_info.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:74"
      ]
    },
    "netra_backend/app/websocket_core/enhanced_rate_limiter.py": {
      "value": "netra_backend/app/websocket_core/enhanced_rate_limiter.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:45"
      ]
    },
    "netra_backend/app/websocket_core/error_recovery_handler.py": {
      "value": "netra_backend/app/websocket_core/error_recovery_handler.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:79"
      ]
    },
    "netra_backend/app/websocket_core/isolated_event_emitter.py": {
      "value": "netra_backend/app/websocket_core/isolated_event_emitter.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:62"
      ]
    },
    "netra_backend/app/websocket_core/manager.py": {
      "value": "netra_backend/app/websocket_core/manager.py",
      "category": "paths",
      "locations": [
        "scripts/migrate_websocket_to_unified.py:59"
      ]
    },
    "netra_backend/app/websocket_core/performance_monitor_core.py": {
      "value": "netra_backend/app/websocket_core/performance_monitor_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:104"
      ]
    },
    "netra_backend/app/websocket_core/rate_limiter.py": {
      "value": "netra_backend/app/websocket_core/rate_limiter.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:36"
      ]
    },
    "netra_backend/app/websocket_core/reconnection_types.py": {
      "value": "netra_backend/app/websocket_core/reconnection_types.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:64"
      ]
    },
    "netra_backend/app/websocket_core/state_synchronization_manager.py": {
      "value": "netra_backend/app/websocket_core/state_synchronization_manager.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:53"
      ]
    },
    "netra_backend/app/websocket_core/state_synchronizer.py": {
      "value": "netra_backend/app/websocket_core/state_synchronizer.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:99"
      ]
    },
    "netra_backend/app/websocket_core/unified.py": {
      "value": "netra_backend/app/websocket_core/unified.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:16"
      ]
    },
    "netra_backend/app/websocket_core_info.py": {
      "value": "netra_backend/app/websocket_core_info.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:89"
      ]
    },
    "netra_backend/tests/**/*.py": {
      "value": "netra_backend/tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:171"
      ]
    },
    "netra_backend/tests/agents/test_data_sub_agent_consolidated.py": {
      "value": "netra_backend/tests/agents/test_data_sub_agent_consolidated.py",
      "category": "paths",
      "locations": [
        "scripts/fix_comprehensive_imports.py:276"
      ]
    },
    "netra_backend/tests/agents/test_data_sub_agent_core.py": {
      "value": "netra_backend/tests/agents/test_data_sub_agent_core.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:38"
      ]
    },
    "netra_backend/tests/agents/test_supervisor_bulletproof.py": {
      "value": "netra_backend/tests/agents/test_supervisor_bulletproof.py",
      "category": "paths",
      "locations": [
        "scripts/test/run_supervisor_tests.py:19"
      ]
    },
    "netra_backend/tests/agents/test_supply_researcher_scheduler.py": {
      "value": "netra_backend/tests/agents/test_supply_researcher_scheduler.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:47"
      ]
    },
    "netra_backend/tests/clickhouse/metrics_aggregation_tests.py": {
      "value": "netra_backend/tests/clickhouse/metrics_aggregation_tests.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:105"
      ]
    },
    "netra_backend/tests/clickhouse/test_performance_metrics_extraction.py": {
      "value": "netra_backend/tests/clickhouse/test_performance_metrics_extraction.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:107"
      ]
    },
    "netra_backend/tests/clickhouse/test_query_correctness.py": {
      "value": "netra_backend/tests/clickhouse/test_query_correctness.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:106"
      ]
    },
    "netra_backend/tests/config/test_unified_config_integration.py": {
      "value": "netra_backend/tests/config/test_unified_config_integration.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:34"
      ]
    },
    "netra_backend/tests/core/test_core_comprehensive.py": {
      "value": "netra_backend/tests/core/test_core_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/consolidate_core_tests.py:186"
      ]
    },
    "netra_backend/tests/critical/test_execution_context_hashable_regression.py": {
      "value": "netra_backend/tests/critical/test_execution_context_hashable_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_execution_error_handler_calls.py:21"
      ]
    },
    "netra_backend/tests/datetime_string_test_helpers.py": {
      "value": "netra_backend/tests/datetime_string_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:181"
      ]
    },
    "netra_backend/tests/debug_migration_test_helpers.py": {
      "value": "netra_backend/tests/debug_migration_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:196"
      ]
    },
    "netra_backend/tests/e2e/conftest.py": {
      "value": "netra_backend/tests/e2e/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:61"
      ]
    },
    "netra_backend/tests/e2e/test_complete_real_pipeline_e2e.py": {
      "value": "netra_backend/tests/e2e/test_complete_real_pipeline_e2e.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:108"
      ]
    },
    "netra_backend/tests/e2e/test_websocket_integration_core.py": {
      "value": "netra_backend/tests/e2e/test_websocket_integration_core.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:39"
      ]
    },
    "netra_backend/tests/e2e/test_websocket_integration_fixtures.py": {
      "value": "netra_backend/tests/e2e/test_websocket_integration_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:40"
      ]
    },
    "netra_backend/tests/helpers/staging_base.py": {
      "value": "netra_backend/tests/helpers/staging_base.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:60"
      ]
    },
    "netra_backend/tests/helpers/websocket_test_helpers.py": {
      "value": "netra_backend/tests/helpers/websocket_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:41"
      ]
    },
    "netra_backend/tests/integration/agent_pipeline_mocks.py": {
      "value": "netra_backend/tests/integration/agent_pipeline_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:36"
      ]
    },
    "netra_backend/tests/integration/backend-authentication-integration-failures.py": {
      "value": "netra_backend/tests/integration/backend-authentication-integration-failures.py",
      "category": "paths",
      "locations": [
        "scripts/fix_authentication_system.py:343"
      ]
    },
    "netra_backend/tests/integration/base.py": {
      "value": "netra_backend/tests/integration/base.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:90"
      ]
    },
    "netra_backend/tests/integration/critical_missing/shared_infrastructure/containerized_services.py": {
      "value": "netra_backend/tests/integration/critical_missing/shared_infrastructure/containerized_services.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:56"
      ]
    },
    "netra_backend/tests/integration/critical_paths/l4_staging_critical_base.py": {
      "value": "netra_backend/tests/integration/critical_paths/l4_staging_critical_base.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:58"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_billing_accuracy_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_billing_accuracy_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:109"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_dashboard_query_performance.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_dashboard_query_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:117"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_enterprise_auth_integration_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_enterprise_auth_integration_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:51"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_high_performance_websocket_stress.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_high_performance_websocket_stress.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:47"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_multi_tenant_data_isolation_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_multi_tenant_data_isolation_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:48"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_performance_scalability_l2.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_performance_scalability_l2.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:122"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_production_deployment_e2e_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_production_deployment_e2e_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:49"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_production_deployment_validation_l4.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_production_deployment_validation_l4.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:50"
      ]
    },
    "netra_backend/tests/integration/critical_paths/test_websocket_jwt_encoding.py": {
      "value": "netra_backend/tests/integration/critical_paths/test_websocket_jwt_encoding.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:46"
      ]
    },
    "netra_backend/tests/integration/deployment_config_fixtures.py": {
      "value": "netra_backend/tests/integration/deployment_config_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:131"
      ]
    },
    "netra_backend/tests/integration/integration.py": {
      "value": "netra_backend/tests/integration/integration.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:125"
      ]
    },
    "netra_backend/tests/integration/sso_saml_components.py": {
      "value": "netra_backend/tests/integration/sso_saml_components.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:136"
      ]
    },
    "netra_backend/tests/integration/staging_config/base.py": {
      "value": "netra_backend/tests/integration/staging_config/base.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:57"
      ]
    },
    "netra_backend/tests/integration/test_auth_edge_cases_l3.py": {
      "value": "netra_backend/tests/integration/test_auth_edge_cases_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:53"
      ]
    },
    "netra_backend/tests/integration/test_dev_launcher_startup.py": {
      "value": "netra_backend/tests/integration/test_dev_launcher_startup.py",
      "category": "paths",
      "locations": [
        "scripts/fix_duplicate_try_blocks.py:59"
      ]
    },
    "netra_backend/tests/integration/test_free_to_paid_conversion.py": {
      "value": "netra_backend/tests/integration/test_free_to_paid_conversion.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:37"
      ]
    },
    "netra_backend/tests/integration/test_mcp_service_realistic.py": {
      "value": "netra_backend/tests/integration/test_mcp_service_realistic.py",
      "category": "paths",
      "locations": [
        "scripts/validate_mcp_realistic_tests.py:24",
        "scripts/validate_mcp_realistic_tests.py:147"
      ]
    },
    "netra_backend/tests/integration/test_supervisor_agent_coordination.py": {
      "value": "netra_backend/tests/integration/test_supervisor_agent_coordination.py",
      "category": "paths",
      "locations": [
        "scripts/test/run_supervisor_tests.py:20"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:105"
      ]
    },
    "netra_backend/tests/integration/test_user_login_flows_l3.py": {
      "value": "netra_backend/tests/integration/test_user_login_flows_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:55"
      ]
    },
    "netra_backend/tests/integration/test_websocket_auth_cold_start_extended_l3.py": {
      "value": "netra_backend/tests/integration/test_websocket_auth_cold_start_extended_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:52"
      ]
    },
    "netra_backend/tests/integration/test_websocket_auth_cold_start_l3.py": {
      "value": "netra_backend/tests/integration/test_websocket_auth_cold_start_l3.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:54"
      ]
    },
    "netra_backend/tests/integration/test_websocket_subprotocol_negotiation_regression.py": {
      "value": "netra_backend/tests/integration/test_websocket_subprotocol_negotiation_regression.py",
      "category": "paths",
      "locations": [
        "scripts/verify_websocket_regression_tests.py:40"
      ]
    },
    "netra_backend/tests/integration/test_ws_connection_mocks.py": {
      "value": "netra_backend/tests/integration/test_ws_connection_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:141"
      ]
    },
    "netra_backend/tests/integration/websocket_recovery_fixtures.py": {
      "value": "netra_backend/tests/integration/websocket_recovery_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:35"
      ]
    },
    "netra_backend/tests/json_file_crypto_test_helpers.py": {
      "value": "netra_backend/tests/json_file_crypto_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:186"
      ]
    },
    "netra_backend/tests/llm_mocks.py": {
      "value": "netra_backend/tests/llm_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:146"
      ]
    },
    "netra_backend/tests/network_pagination_test_helpers.py": {
      "value": "netra_backend/tests/network_pagination_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:191"
      ]
    },
    "netra_backend/tests/performance/performance_baseline_config.py": {
      "value": "netra_backend/tests/performance/performance_baseline_config.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:110"
      ]
    },
    "netra_backend/tests/performance/test_agent_load_stress.py": {
      "value": "netra_backend/tests/performance/test_agent_load_stress.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:111"
      ]
    },
    "netra_backend/tests/performance/test_comprehensive_backend_performance.py": {
      "value": "netra_backend/tests/performance/test_comprehensive_backend_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:112"
      ]
    },
    "netra_backend/tests/performance/test_performance_monitoring.py": {
      "value": "netra_backend/tests/performance/test_performance_monitoring.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:116"
      ]
    },
    "netra_backend/tests/performance/test_sla_compliance.py": {
      "value": "netra_backend/tests/performance/test_sla_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:114"
      ]
    },
    "netra_backend/tests/services/test_generation_service_comprehensive.py": {
      "value": "netra_backend/tests/services/test_generation_service_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:43"
      ]
    },
    "netra_backend/tests/services/test_scheduler_jobs_core.py": {
      "value": "netra_backend/tests/services/test_scheduler_jobs_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:50"
      ]
    },
    "netra_backend/tests/services/test_scheduler_retry_logic.py": {
      "value": "netra_backend/tests/services/test_scheduler_retry_logic.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:49"
      ]
    },
    "netra_backend/tests/services/test_supply_research_scheduler_jobs.py": {
      "value": "netra_backend/tests/services/test_supply_research_scheduler_jobs.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:48"
      ]
    },
    "netra_backend/tests/services/test_ws_connection_mocks.py": {
      "value": "netra_backend/tests/services/test_ws_connection_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:42"
      ]
    },
    "netra_backend/tests/test_compression_auth.py": {
      "value": "netra_backend/tests/test_compression_auth.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:171"
      ]
    },
    "netra_backend/tests/test_config_core.py": {
      "value": "netra_backend/tests/test_config_core.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:161"
      ]
    },
    "netra_backend/tests/test_health_monitor_adaptive.py": {
      "value": "netra_backend/tests/test_health_monitor_adaptive.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:166"
      ]
    },
    "netra_backend/tests/test_performance_batching.py": {
      "value": "netra_backend/tests/test_performance_batching.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:151"
      ]
    },
    "netra_backend/tests/test_route_fixtures.py": {
      "value": "netra_backend/tests/test_route_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/create_import_shims.py:99"
      ]
    },
    "netra_backend/tests/test_utilities.py": {
      "value": "netra_backend/tests/test_utilities.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:156"
      ]
    },
    "netra_backend/tests/test_websocket_bidirectional_types.py": {
      "value": "netra_backend/tests/test_websocket_bidirectional_types.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:176"
      ]
    },
    "netra_backend/tests/unified_system/test_dev_launcher_startup.py": {
      "value": "netra_backend/tests/unified_system/test_dev_launcher_startup.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:104"
      ]
    },
    "netra_backend/tests/unified_system/test_service_recovery.py": {
      "value": "netra_backend/tests/unified_system/test_service_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:102"
      ]
    },
    "netra_backend/tests/unified_system/test_websocket_state.py": {
      "value": "netra_backend/tests/unified_system/test_websocket_state.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:29"
      ]
    },
    "netra_backend/tests/unit/agents/data_sub_agent/test_clickhouse_client.py": {
      "value": "netra_backend/tests/unit/agents/data_sub_agent/test_clickhouse_client.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:45"
      ]
    },
    "netra_backend/tests/unit/db/test_database_manager.py": {
      "value": "netra_backend/tests/unit/db/test_database_manager.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:44"
      ]
    },
    "netra_backend/tests/unit/test_health_checkers_core.py": {
      "value": "netra_backend/tests/unit/test_health_checkers_core.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:30"
      ]
    },
    "netra_backend/tests/unit/test_mcp_service_core.py": {
      "value": "netra_backend/tests/unit/test_mcp_service_core.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:33",
        "scripts/validate_mcp_realistic_tests.py:146"
      ]
    },
    "netra_backend/tests/unit/test_metrics_collector_core.py": {
      "value": "netra_backend/tests/unit/test_metrics_collector_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:101"
      ]
    },
    "netra_backend/tests/unit/test_subagent_logging.py": {
      "value": "netra_backend/tests/unit/test_subagent_logging.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:31"
      ]
    },
    "netra_backend/tests/unit/test_websocket_memory_leaks.py": {
      "value": "netra_backend/tests/unit/test_websocket_memory_leaks.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:32"
      ]
    },
    "netra_backend/tests/unit/test_websocket_state_checking_regression.py": {
      "value": "netra_backend/tests/unit/test_websocket_state_checking_regression.py",
      "category": "paths",
      "locations": [
        "scripts/verify_websocket_regression_tests.py:39"
      ]
    },
    "netra_backend/tests/websocket/test_connection_manager.py": {
      "value": "netra_backend/tests/websocket/test_connection_manager.py",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_elimination_phase1.py:140"
      ]
    },
    "netra_backend/tests/websocket/test_message_handler.py": {
      "value": "netra_backend/tests/websocket/test_message_handler.py",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_elimination_phase1.py:141"
      ]
    },
    "netra_backend/tests/websocket/test_websocket_integration_performance.py": {
      "value": "netra_backend/tests/websocket/test_websocket_integration_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:100"
      ]
    },
    "netra_mcp/__init__.py": {
      "value": "netra_mcp/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:219"
      ]
    },
    "payments/__init__.py": {
      "value": "payments/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:234"
      ]
    },
    "providers/WebSocketProvider.tsx": {
      "value": "providers/WebSocketProvider.tsx",
      "category": "paths",
      "locations": [
        "scripts/check_circular_dependencies.py:179",
        "scripts/validate_cold_start.py:290"
      ]
    },
    "python -m pytest netra_backend/tests/integration/test_mcp_service_realistic.py -v": {
      "value": "python -m pytest netra_backend/tests/integration/test_mcp_service_realistic.py -v",
      "category": "paths",
      "locations": [
        "scripts/validate_mcp_realistic_tests.py:252"
      ]
    },
    "python netra_backend/app/alembic/run_migrations.py": {
      "value": "python netra_backend/app/alembic/run_migrations.py",
      "category": "paths",
      "locations": [
        "scripts/check_database_schema.py:113"
      ]
    },
    "python scripts/audit_staging_oauth_secrets.py --update \\": {
      "value": "python scripts/audit_staging_oauth_secrets.py --update \\",
      "category": "paths",
      "locations": [
        "scripts/audit_staging_oauth_secrets.py:279"
      ]
    },
    "python scripts/boundary_enforcer.py": {
      "value": "python scripts/boundary_enforcer.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:264"
      ]
    },
    "python scripts/boundary_enforcer.py --check": {
      "value": "python scripts/boundary_enforcer.py --check",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:255"
      ]
    },
    "python scripts/check_architecture_compliance.py": {
      "value": "python scripts/check_architecture_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:247"
      ]
    },
    "python scripts/check_architecture_compliance.py --ci-mode": {
      "value": "python scripts/check_architecture_compliance.py --ci-mode",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:238"
      ]
    },
    "python scripts/check_e2e_imports.py --report": {
      "value": "python scripts/check_e2e_imports.py --report",
      "category": "paths",
      "locations": [
        "scripts/comprehensive_e2e_import_fixer.py:369"
      ]
    },
    "python scripts/cleanup_duplicate_tests.py": {
      "value": "python scripts/cleanup_duplicate_tests.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:188"
      ]
    },
    "python scripts/code_audit_orchestrator.py": {
      "value": "python scripts/code_audit_orchestrator.py",
      "category": "paths",
      "locations": [
        "scripts/permissive_hooks/audit_duplicates_hook.py:81"
      ]
    },
    "python scripts/compliance/stub_checker.py": {
      "value": "python scripts/compliance/stub_checker.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:166",
        "scripts/validate_atomic_change.py:175"
      ]
    },
    "python scripts/comprehensive_import_scanner.py": {
      "value": "python scripts/comprehensive_import_scanner.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:158"
      ]
    },
    "python scripts/comprehensive_import_scanner.py --json-output": {
      "value": "python scripts/comprehensive_import_scanner.py --json-output",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:140",
        "scripts/validate_atomic_change.py:149"
      ]
    },
    "python scripts/deploy_staging.py": {
      "value": "python scripts/deploy_staging.py",
      "category": "paths",
      "locations": [
        "scripts/setup_gcp_service_account.py:193"
      ]
    },
    "python scripts/deploy_to_gcp.py --project": {
      "value": "python scripts/deploy_to_gcp.py --project",
      "category": "paths",
      "locations": [
        "scripts/create_staging_secrets_complete.py:45",
        "scripts/fix_staging_database_url.py:131",
        "scripts/setup_gcp_service_account.py:195"
      ]
    },
    "python scripts/deploy_to_gcp.py --project netra-staging --build-local": {
      "value": "python scripts/deploy_to_gcp.py --project netra-staging --build-local",
      "category": "paths",
      "locations": [
        "scripts/update_placeholder_secrets.py:113",
        "scripts/validate_websocket_staging_setup.py:132"
      ]
    },
    "python scripts/deploy_to_gcp.py --service auth --build-local": {
      "value": "python scripts/deploy_to_gcp.py --service auth --build-local",
      "category": "paths",
      "locations": [
        "scripts/audit_staging_oauth_secrets.py:283"
      ]
    },
    "python scripts/dev_launcher.py": {
      "value": "python scripts/dev_launcher.py",
      "category": "paths",
      "locations": [
        "scripts/fix_port_8000_windows.py:386",
        "scripts/setup_dev_oauth.py:96"
      ]
    },
    "python scripts/diagnose_migration_state.py --recover": {
      "value": "python scripts/diagnose_migration_state.py --recover",
      "category": "paths",
      "locations": [
        "scripts/diagnose_migration_state.py:131",
        "scripts/diagnose_migration_state.py:135"
      ]
    },
    "python scripts/docker_compose_log_introspector.py analyze": {
      "value": "python scripts/docker_compose_log_introspector.py analyze",
      "category": "paths",
      "locations": [
        "scripts/docker_log_issue_creator.py:313"
      ]
    },
    "python scripts/docker_env_manager.py start": {
      "value": "python scripts/docker_env_manager.py start",
      "category": "paths",
      "locations": [
        "scripts/docker_log_monitor.py:434"
      ]
    },
    "python scripts/docker_env_manager.py stop all": {
      "value": "python scripts/docker_env_manager.py stop all",
      "category": "paths",
      "locations": [
        "scripts/docker_log_monitor.py:433"
      ]
    },
    "python scripts/docker_manual.py start --environment dev": {
      "value": "python scripts/docker_manual.py start --environment dev",
      "category": "paths",
      "locations": [
        "scripts/launch_dev_env.py:28"
      ]
    },
    "python scripts/docker_manual.py status": {
      "value": "python scripts/docker_manual.py status",
      "category": "paths",
      "locations": [
        "scripts/business_health_check.py:327",
        "scripts/launch_dev_env.py:30"
      ]
    },
    "python scripts/docker_manual.py stop --environment dev": {
      "value": "python scripts/docker_manual.py stop --environment dev",
      "category": "paths",
      "locations": [
        "scripts/launch_dev_env.py:29"
      ]
    },
    "python scripts/duplicate_detector.py": {
      "value": "python scripts/duplicate_detector.py",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:225"
      ]
    },
    "python scripts/duplicate_detector.py --severity high --max-results 5": {
      "value": "python scripts/duplicate_detector.py --severity high --max-results 5",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:216"
      ]
    },
    "python scripts/fix_all_import_issues.py --absolute-only": {
      "value": "python scripts/fix_all_import_issues.py --absolute-only",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:146"
      ]
    },
    "python scripts/fix_netra_backend_imports.py": {
      "value": "python scripts/fix_netra_backend_imports.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_backend_imports.py:222"
      ]
    },
    "python scripts/import_management.py all": {
      "value": "python scripts/import_management.py all",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:164"
      ]
    },
    "python scripts/import_management.py check": {
      "value": "python scripts/import_management.py check",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:162"
      ]
    },
    "python scripts/import_management.py fix": {
      "value": "python scripts/import_management.py fix",
      "category": "paths",
      "locations": [
        "scripts/setup_import_hooks.py:160"
      ]
    },
    "python scripts/prevent_numbered_files.py --check": {
      "value": "python scripts/prevent_numbered_files.py --check",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:193",
        "scripts/validate_atomic_change.py:200",
        "scripts/validate_atomic_change.py:209"
      ]
    },
    "python scripts/prevent_numbered_files.py --fix": {
      "value": "python scripts/prevent_numbered_files.py --fix",
      "category": "paths",
      "locations": [
        "scripts/validate_atomic_change.py:198"
      ]
    },
    "python scripts/scan_string_literals.py": {
      "value": "python scripts/scan_string_literals.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:84",
        "scripts/validate_atomic_change.py:303"
      ]
    },
    "python scripts/setup_gcp_service_account.py": {
      "value": "python scripts/setup_gcp_service_account.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_sa.py:98"
      ]
    },
    "python scripts/team_updates_sync.py last_day": {
      "value": "python scripts/team_updates_sync.py last_day",
      "category": "paths",
      "locations": [
        "scripts/team_updates_sync.py:138"
      ]
    },
    "python scripts/unified_test_runner.py --category integration --pattern 'mcp_service_realistic'": {
      "value": "python scripts/unified_test_runner.py --category integration --pattern 'mcp_service_realistic'",
      "category": "paths",
      "locations": [
        "scripts/validate_mcp_realistic_tests.py:251"
      ]
    },
    "python scripts/validate_layer_config.py": {
      "value": "python scripts/validate_layer_config.py",
      "category": "paths",
      "locations": [
        "scripts/demo_layer_system.py:121"
      ]
    },
    "python tests/e2e/staging_auth_bypass.py": {
      "value": "python tests/e2e/staging_auth_bypass.py",
      "category": "paths",
      "locations": [
        "scripts/setup_e2e_bypass_key.py:234"
      ]
    },
    "python tests/post_deployment/test_auth_integration.py --environment": {
      "value": "python tests/post_deployment/test_auth_integration.py --environment",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1485"
      ]
    },
    "quality_gate/__init__.py": {
      "value": "quality_gate/__init__.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:24"
      ]
    },
    "quality_gate/quality_gate_core.py": {
      "value": "quality_gate/quality_gate_core.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:25"
      ]
    },
    "quality_gate/quality_gate_metrics.py": {
      "value": "quality_gate/quality_gate_metrics.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:28"
      ]
    },
    "quality_gate/quality_gate_models.py": {
      "value": "quality_gate/quality_gate_models.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:26"
      ]
    },
    "quality_gate/quality_gate_patterns.py": {
      "value": "quality_gate/quality_gate_patterns.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:27"
      ]
    },
    "quality_gate/quality_gate_validators.py": {
      "value": "quality_gate/quality_gate_validators.py",
      "category": "paths",
      "locations": [
        "netra_backend/app/services/quality_gate_service.py:29"
      ]
    },
    "reports/cleanup_log.json": {
      "value": "reports/cleanup_log.json",
      "category": "paths",
      "locations": [
        "scripts/cleanup_generated_files.py:291"
      ]
    },
    "reports/coverage/coverage.json": {
      "value": "reports/coverage/coverage.json",
      "category": "paths",
      "locations": [
        "scripts/analyze_coverage.py:4"
      ]
    },
    "scripts/**/*.py": {
      "value": "scripts/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/architecture_metrics.py:225",
        "scripts/architecture_scanner_helpers.py:155",
        "scripts/auto_decompose_functions.py:372",
        "scripts/auto_split_files.py:300",
        "scripts/boundary_enforcer_core_types.py:62",
        "scripts/boundary_enforcer_function_checks.py:30",
        "scripts/create_enforcement_tools.py:99",
        "scripts/fix_modern_websockets_deprecation.py:181"
      ]
    },
    "scripts/*.py": {
      "value": "scripts/*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_websockets_deprecation.py:68",
        "scripts/fix_websockets_legacy_to_modern.py:106"
      ]
    },
    "scripts/allocate_test_ports.py": {
      "value": "scripts/allocate_test_ports.py",
      "category": "paths",
      "locations": [
        "scripts/docker_validation_benchmark.py:225"
      ]
    },
    "scripts/auto_split_files.py": {
      "value": "scripts/auto_split_files.py",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:355"
      ]
    },
    "scripts/boundary_enforcer.py": {
      "value": "scripts/boundary_enforcer.py",
      "category": "paths",
      "locations": [
        "scripts/emergency_boundary_actions.py:77"
      ]
    },
    "scripts/business_value_test_index.py": {
      "value": "scripts/business_value_test_index.py",
      "category": "paths",
      "locations": [
        "scripts/generate_wip_report.py:175"
      ]
    },
    "scripts/check_architecture_compliance.py": {
      "value": "scripts/check_architecture_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:407",
        "scripts/team_updates_sync.py:86"
      ]
    },
    "scripts/code_audit_orchestrator.py": {
      "value": "scripts/code_audit_orchestrator.py",
      "category": "paths",
      "locations": [
        "scripts/configure_audit.py:230"
      ]
    },
    "scripts/compliance/mock_justification_checker.py": {
      "value": "scripts/compliance/mock_justification_checker.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:48"
      ]
    },
    "scripts/deploy_to_gcp.py": {
      "value": "scripts/deploy_to_gcp.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_sa.py:106",
        "scripts/deploy_staging_with_validation.py:42",
        "scripts/deploy_token_optimization_production.py:181",
        "scripts/validate_secrets.py:267",
        "scripts/verify_clickhouse_fix.py:25"
      ]
    },
    "scripts/detect_duplicate_code.py": {
      "value": "scripts/detect_duplicate_code.py",
      "category": "paths",
      "locations": [
        "scripts/precommit_duplicate_detector.py:255"
      ]
    },
    "scripts/docker_log_introspection.py": {
      "value": "scripts/docker_log_introspection.py",
      "category": "paths",
      "locations": [
        "scripts/automated_docker_remediation.py:28",
        "scripts/automated_error_remediation.py:43"
      ]
    },
    "scripts/enforce_isolated_environment_compliance.py": {
      "value": "scripts/enforce_isolated_environment_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/enforce_isolated_environment_compliance.py:135"
      ]
    },
    "scripts/fix_e2e_imports.py": {
      "value": "scripts/fix_e2e_imports.py",
      "category": "paths",
      "locations": [
        "scripts/fix_netra_domain.py:56",
        "scripts/fix_performance_monitor_imports.py:103"
      ]
    },
    "scripts/fix_staging_deployment.py": {
      "value": "scripts/fix_staging_deployment.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_validation.py:25"
      ]
    },
    "scripts/netra-staging-sa-key.json": {
      "value": "scripts/netra-staging-sa-key.json",
      "category": "paths",
      "locations": [
        "scripts/run_ga4_setup.py:48"
      ]
    },
    "scripts/scan_string_literals.py": {
      "value": "scripts/scan_string_literals.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:412"
      ]
    },
    "scripts/validate_secrets.py": {
      "value": "scripts/validate_secrets.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1168"
      ]
    },
    "scripts/validate_staging_config.py": {
      "value": "scripts/validate_staging_config.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_staging_with_validation.py:69"
      ]
    },
    "scripts/workflow_validator.py": {
      "value": "scripts/workflow_validator.py",
      "category": "paths",
      "locations": [
        "scripts/setup_act.py:137"
      ]
    },
    "secrets/netra-staging-sa-key.json": {
      "value": "secrets/netra-staging-sa-key.json",
      "category": "paths",
      "locations": [
        "scripts/find_gtm_account_id.py:31",
        "scripts/run_gtm_setup.py:51"
      ]
    },
    "secrets\\.json": {
      "value": "secrets\\.json",
      "category": "paths",
      "locations": [
        "netra_backend/app/middleware/path_traversal_protection.py:31"
      ]
    },
    "shared/isolated_environment.py": {
      "value": "shared/isolated_environment.py",
      "category": "paths",
      "locations": [
        "scripts/enforce_isolated_environment_compliance.py:120",
        "scripts/enforce_isolated_environment_compliance.py:134"
      ]
    },
    "shared/schemas.json": {
      "value": "shared/schemas.json",
      "category": "paths",
      "locations": [
        "scripts/generate-json-schema.py:23"
      ]
    },
    "shared/types.ts": {
      "value": "shared/types.ts",
      "category": "paths",
      "locations": [
        "scripts/generate-types.py:8"
      ]
    },
    "test_.*\\.py$": {
      "value": "test_.*\\.py$",
      "category": "paths",
      "locations": [
        "scripts/scan_string_literals.py:40"
      ]
    },
    "test_framework/**/*.py": {
      "value": "test_framework/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/boundary_enforcer_core_types.py:63",
        "scripts/check_environment_isolation.py:174",
        "scripts/compliance/analyze_mocks.py:66",
        "scripts/compliance/mock_justification_checker.py:65",
        "scripts/fix_modern_websockets_deprecation.py:178",
        "scripts/fix_websockets_deprecation.py:66",
        "scripts/fix_websockets_legacy_to_modern.py:103"
      ]
    },
    "test_framework/comprehensive_reporter.py": {
      "value": "test_framework/comprehensive_reporter.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:150"
      ]
    },
    "test_framework/decorators.py": {
      "value": "test_framework/decorators.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:18"
      ]
    },
    "test_framework/mocks/websocket_mocks.py": {
      "value": "test_framework/mocks/websocket_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:49"
      ]
    },
    "test_framework/real_services_test_fixtures.py": {
      "value": "test_framework/real_services_test_fixtures.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:202"
      ]
    },
    "test_framework/robust_websocket_test_helper.py": {
      "value": "test_framework/robust_websocket_test_helper.py",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_staging_setup.py:172"
      ]
    },
    "test_framework/runner.py": {
      "value": "test_framework/runner.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:149"
      ]
    },
    "test_framework/staging_websocket_test_helper.py": {
      "value": "test_framework/staging_websocket_test_helper.py",
      "category": "paths",
      "locations": [
        "scripts/validate_websocket_staging_setup.py:163"
      ]
    },
    "test_framework/test_discovery.py": {
      "value": "test_framework/test_discovery.py",
      "category": "paths",
      "locations": [
        "scripts/function_complexity_analyzer.py:148"
      ]
    },
    "test_framework/websocket_helpers.py": {
      "value": "test_framework/websocket_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:17"
      ]
    },
    "test_reports/test_report_20250824_090437.json": {
      "value": "test_reports/test_report_20250824_090437.json",
      "category": "paths",
      "locations": [
        "scripts/analyze_errors.py:3"
      ]
    },
    "tests/**/*.py": {
      "value": "tests/**/*.py",
      "category": "paths",
      "locations": [
        "scripts/check_environment_isolation.py:170",
        "scripts/compliance/analyze_mocks.py:65",
        "scripts/compliance/mock_justification_checker.py:64",
        "scripts/create_enforcement_tools.py:99",
        "scripts/fix_modern_websockets_deprecation.py:177",
        "scripts/fix_websockets_deprecation.py:65",
        "scripts/fix_websockets_legacy_to_modern.py:102",
        "scripts/test/identify_syntax_errors.py:28"
      ]
    },
    "tests/**/*test*.py": {
      "value": "tests/**/*test*.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:130",
        "scripts/fix_import_issues.py:138",
        "scripts/fix_import_issues.py:145"
      ]
    },
    "tests/conftest.py": {
      "value": "tests/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_issues.py:139"
      ]
    },
    "tests/critical/test_websocket_agent_startup.py": {
      "value": "tests/critical/test_websocket_agent_startup.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:43"
      ]
    },
    "tests/critical/test_websocket_circular_import_regression.py": {
      "value": "tests/critical/test_websocket_circular_import_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:18"
      ]
    },
    "tests/critical/test_websocket_message_regression.py": {
      "value": "tests/critical/test_websocket_message_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:36"
      ]
    },
    "tests/e2e/agent_isolation/test_file_system_isolation.py": {
      "value": "tests/e2e/agent_isolation/test_file_system_isolation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:84"
      ]
    },
    "tests/e2e/agent_isolation/test_memory_isolation.py": {
      "value": "tests/e2e/agent_isolation/test_memory_isolation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:85"
      ]
    },
    "tests/e2e/agent_startup_performance_measurer.py": {
      "value": "tests/e2e/agent_startup_performance_measurer.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:113"
      ]
    },
    "tests/e2e/conftest.py": {
      "value": "tests/e2e/conftest.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:37"
      ]
    },
    "tests/e2e/first_time_user/real_critical_auth_helpers.py": {
      "value": "tests/e2e/first_time_user/real_critical_auth_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:38"
      ]
    },
    "tests/e2e/fixtures/__init__.py": {
      "value": "tests/e2e/fixtures/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:86"
      ]
    },
    "tests/e2e/integration/test_agent_orchestration_real_llm.py": {
      "value": "tests/e2e/integration/test_agent_orchestration_real_llm.py",
      "category": "paths",
      "locations": [
        "scripts/fix_all_e2e_imports.py:123"
      ]
    },
    "tests/e2e/integration/test_auth_jwt_refresh.py": {
      "value": "tests/e2e/integration/test_auth_jwt_refresh.py",
      "category": "paths",
      "locations": [
        "scripts/fix_all_e2e_imports.py:124"
      ]
    },
    "tests/e2e/integration/test_auth_jwt_security.py": {
      "value": "tests/e2e/integration/test_auth_jwt_security.py",
      "category": "paths",
      "locations": [
        "scripts/fix_all_e2e_imports.py:125"
      ]
    },
    "tests/e2e/performance/test_performance_sla_validation.py": {
      "value": "tests/e2e/performance/test_performance_sla_validation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:119"
      ]
    },
    "tests/e2e/real_services_manager.py": {
      "value": "tests/e2e/real_services_manager.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:23"
      ]
    },
    "tests/e2e/reconnection_test_helpers.py": {
      "value": "tests/e2e/reconnection_test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:24"
      ]
    },
    "tests/e2e/resilience/test_response_persistence_recovery.py": {
      "value": "tests/e2e/resilience/test_response_persistence_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:28"
      ]
    },
    "tests/e2e/resource_isolation/infrastructure/__init__.py": {
      "value": "tests/e2e/resource_isolation/infrastructure/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:89"
      ]
    },
    "tests/e2e/resource_isolation/suite/test_suite_core.py": {
      "value": "tests/e2e/resource_isolation/suite/test_suite_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:90"
      ]
    },
    "tests/e2e/resource_isolation/test_infrastructure.py": {
      "value": "tests/e2e/resource_isolation/test_infrastructure.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:76",
        "scripts/fix_remaining_imports.py:80",
        "scripts/fix_simple_import_errors.py:87"
      ]
    },
    "tests/e2e/resource_isolation/test_suite.py": {
      "value": "tests/e2e/resource_isolation/test_suite.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:88"
      ]
    },
    "tests/e2e/service-to-service-authentication-failures.py": {
      "value": "tests/e2e/service-to-service-authentication-failures.py",
      "category": "paths",
      "locations": [
        "scripts/fix_authentication_system.py:348"
      ]
    },
    "tests/e2e/service_failure_tester.py": {
      "value": "tests/e2e/service_failure_tester.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:118"
      ]
    },
    "tests/e2e/test_agent_orchestration_e2e_comprehensive.py": {
      "value": "tests/e2e/test_agent_orchestration_e2e_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/run_comprehensive_orchestration_tests.py:37"
      ]
    },
    "tests/e2e/test_concurrent_agent_startup_core.py": {
      "value": "tests/e2e/test_concurrent_agent_startup_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:120",
        "scripts/fix_syntax_errors.py:54"
      ]
    },
    "tests/e2e/test_concurrent_agent_startup_performance.py": {
      "value": "tests/e2e/test_concurrent_agent_startup_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:121"
      ]
    },
    "tests/e2e/test_cors_dynamic_ports.py": {
      "value": "tests/e2e/test_cors_dynamic_ports.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:13",
        "scripts/simple_syntax_fix.py:33"
      ]
    },
    "tests/e2e/test_data_factory.py": {
      "value": "tests/e2e/test_data_factory.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_e2e_imports.py:118"
      ]
    },
    "tests/e2e/test_helpers.py": {
      "value": "tests/e2e/test_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_e2e_imports.py:97"
      ]
    },
    "tests/e2e/test_helpers/__init__.py": {
      "value": "tests/e2e/test_helpers/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:92"
      ]
    },
    "tests/e2e/test_helpers/throughput_helpers.py": {
      "value": "tests/e2e/test_helpers/throughput_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:67",
        "scripts/fix_remaining_imports.py:78",
        "scripts/fix_simple_import_errors.py:91"
      ]
    },
    "tests/e2e/test_multi_agent_collaboration_response.py": {
      "value": "tests/e2e/test_multi_agent_collaboration_response.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:26"
      ]
    },
    "tests/e2e/test_performance_targets.py": {
      "value": "tests/e2e/test_performance_targets.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:14",
        "scripts/simple_syntax_fix.py:34"
      ]
    },
    "tests/e2e/test_quality_gate_response_validation.py": {
      "value": "tests/e2e/test_quality_gate_response_validation.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:25"
      ]
    },
    "tests/e2e/test_rapid_message_succession_agent.py": {
      "value": "tests/e2e/test_rapid_message_succession_agent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:15",
        "scripts/simple_syntax_fix.py:35"
      ]
    },
    "tests/e2e/test_rapid_message_succession_api.py": {
      "value": "tests/e2e/test_rapid_message_succession_api.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:16",
        "scripts/simple_syntax_fix.py:36"
      ]
    },
    "tests/e2e/test_rapid_message_succession_core.py": {
      "value": "tests/e2e/test_rapid_message_succession_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:17",
        "scripts/simple_syntax_fix.py:37"
      ]
    },
    "tests/e2e/test_resource_limits.py": {
      "value": "tests/e2e/test_resource_limits.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:18",
        "scripts/simple_syntax_fix.py:38"
      ]
    },
    "tests/e2e/test_response_quality.py": {
      "value": "tests/e2e/test_response_quality.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:19",
        "scripts/simple_syntax_fix.py:39"
      ]
    },
    "tests/e2e/test_soak_testing.py": {
      "value": "tests/e2e/test_soak_testing.py",
      "category": "paths",
      "locations": [
        "scripts/fix_performance_monitor_imports.py:115"
      ]
    },
    "tests/e2e/test_spike_recovery_core.py": {
      "value": "tests/e2e/test_spike_recovery_core.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:20",
        "scripts/simple_syntax_fix.py:40"
      ]
    },
    "tests/e2e/test_spike_recovery_performance.py": {
      "value": "tests/e2e/test_spike_recovery_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_syntax.py:21",
        "scripts/simple_syntax_fix.py:41"
      ]
    },
    "tests/e2e/test_staging_e2e_comprehensive.py": {
      "value": "tests/e2e/test_staging_e2e_comprehensive.py",
      "category": "paths",
      "locations": [
        "scripts/test/validate_staging_tests.py:33"
      ]
    },
    "tests/e2e/test_startup_initialization.py": {
      "value": "tests/e2e/test_startup_initialization.py",
      "category": "paths",
      "locations": [
        "scripts/fix_background_imports.py:52"
      ]
    },
    "tests/e2e/test_websocket_immediate_disconnect_regression.py": {
      "value": "tests/e2e/test_websocket_immediate_disconnect_regression.py",
      "category": "paths",
      "locations": [
        "scripts/verify_websocket_regression_tests.py:41"
      ]
    },
    "tests/e2e/websocket_resilience/test_2_midstream_disconnection_recovery_websocket.py": {
      "value": "tests/e2e/websocket_resilience/test_2_midstream_disconnection_recovery_websocket.py",
      "category": "paths",
      "locations": [
        "scripts/fix_simple_import_errors.py:93"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_connection_concurrent.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_connection_concurrent.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:71",
        "scripts/fix_remaining_imports.py:79",
        "scripts/fix_simple_import_errors.py:94"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_security_attacks.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_security_attacks.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:62",
        "scripts/fix_remaining_imports.py:76",
        "scripts/fix_simple_import_errors.py:95"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_security_audit.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_security_audit.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:57",
        "scripts/fix_remaining_imports.py:74",
        "scripts/fix_simple_import_errors.py:96"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_token_refresh_advanced.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_token_refresh_advanced.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:58",
        "scripts/fix_remaining_imports.py:75",
        "scripts/fix_simple_import_errors.py:97"
      ]
    },
    "tests/e2e/websocket_resilience/test_websocket_token_refresh_flow.py": {
      "value": "tests/e2e/websocket_resilience/test_websocket_token_refresh_flow.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:65",
        "scripts/fix_remaining_imports.py:77",
        "scripts/fix_simple_import_errors.py:98"
      ]
    },
    "tests/factories.py": {
      "value": "tests/factories.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_e2e_imports.py:157"
      ]
    },
    "tests/integration/critical_paths/test_websocket_binary_message_handling.py": {
      "value": "tests/integration/critical_paths/test_websocket_binary_message_handling.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:33"
      ]
    },
    "tests/integration/critical_paths/test_websocket_broadcast_performance.py": {
      "value": "tests/integration/critical_paths/test_websocket_broadcast_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:34"
      ]
    },
    "tests/integration/critical_paths/test_websocket_circuit_breaker.py": {
      "value": "tests/integration/critical_paths/test_websocket_circuit_breaker.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:32"
      ]
    },
    "tests/integration/critical_paths/test_websocket_connection_draining.py": {
      "value": "tests/integration/critical_paths/test_websocket_connection_draining.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:30"
      ]
    },
    "tests/integration/critical_paths/test_websocket_connection_pooling.py": {
      "value": "tests/integration/critical_paths/test_websocket_connection_pooling.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:31"
      ]
    },
    "tests/integration/critical_paths/test_websocket_health_check.py": {
      "value": "tests/integration/critical_paths/test_websocket_health_check.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:28"
      ]
    },
    "tests/integration/critical_paths/test_websocket_heartbeat_monitoring.py": {
      "value": "tests/integration/critical_paths/test_websocket_heartbeat_monitoring.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:29"
      ]
    },
    "tests/integration/critical_paths/test_websocket_message_compression.py": {
      "value": "tests/integration/critical_paths/test_websocket_message_compression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:26"
      ]
    },
    "tests/integration/critical_paths/test_websocket_message_delivery_guarantee.py": {
      "value": "tests/integration/critical_paths/test_websocket_message_delivery_guarantee.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:27"
      ]
    },
    "tests/integration/critical_paths/test_websocket_rate_limiting_per_client.py": {
      "value": "tests/integration/critical_paths/test_websocket_rate_limiting_per_client.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:24"
      ]
    },
    "tests/integration/critical_paths/test_websocket_reconnection_state_recovery.py": {
      "value": "tests/integration/critical_paths/test_websocket_reconnection_state_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:25"
      ]
    },
    "tests/integration/test_websocket_agent_integration.py": {
      "value": "tests/integration/test_websocket_agent_integration.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:42"
      ]
    },
    "tests/integration/test_websocket_redis_pubsub.py": {
      "value": "tests/integration/test_websocket_redis_pubsub.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:35"
      ]
    },
    "tests/mission_critical/test_final_validation.py": {
      "value": "tests/mission_critical/test_final_validation.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:395"
      ]
    },
    "tests/mission_critical/test_token_optimization_compliance.py": {
      "value": "tests/mission_critical/test_token_optimization_compliance.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_token_optimization_production.py:220"
      ]
    },
    "tests/mission_critical/test_websocket_agent_events_suite.py": {
      "value": "tests/mission_critical/test_websocket_agent_events_suite.py",
      "category": "paths",
      "locations": [
        "scripts/validate_mock_elimination_phase1.py:139",
        "scripts/validate_websocket_staging_setup.py:154"
      ]
    },
    "tests/mission_critical/test_websocket_agent_events_suite.py::TestRegressionPrevention": {
      "value": "tests/mission_critical/test_websocket_agent_events_suite.py::TestRegressionPrevention",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:401"
      ]
    },
    "tests/mission_critical/test_websocket_basic_events.py": {
      "value": "tests/mission_critical/test_websocket_basic_events.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:21"
      ]
    },
    "tests/mission_critical/test_websocket_reliability_focused.py": {
      "value": "tests/mission_critical/test_websocket_reliability_focused.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:20"
      ]
    },
    "tests/mission_critical/test_websocket_subagent_events.py": {
      "value": "tests/mission_critical/test_websocket_subagent_events.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:22"
      ]
    },
    "tests/run_staging_tests.py": {
      "value": "tests/run_staging_tests.py",
      "category": "paths",
      "locations": [
        "scripts/test/run_staging_tests_wrapper.py:14"
      ]
    },
    "tests/services/test_ws_connection_basic.py": {
      "value": "tests/services/test_ws_connection_basic.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:22"
      ]
    },
    "tests/services/test_ws_connection_mocks.py": {
      "value": "tests/services/test_ws_connection_mocks.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:23"
      ]
    },
    "tests/services/test_ws_connection_performance.py": {
      "value": "tests/services/test_ws_connection_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:21"
      ]
    },
    "tests/unified/e2e/concurrent_user_simulators.py": {
      "value": "tests/unified/e2e/concurrent_user_simulators.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:67"
      ]
    },
    "tests/unified/e2e/file_upload_pipeline_test_suite.py": {
      "value": "tests/unified/e2e/file_upload_pipeline_test_suite.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:50"
      ]
    },
    "tests/unified/e2e/helpers/error_propagation/__init__.py": {
      "value": "tests/unified/e2e/helpers/error_propagation/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:72"
      ]
    },
    "tests/unified/e2e/helpers/service_independence/__init__.py": {
      "value": "tests/unified/e2e/helpers/service_independence/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:73"
      ]
    },
    "tests/unified/e2e/helpers/service_independence_helpers.py": {
      "value": "tests/unified/e2e/helpers/service_independence_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:71"
      ]
    },
    "tests/unified/e2e/onboarding_flow_executor.py": {
      "value": "tests/unified/e2e/onboarding_flow_executor.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:68"
      ]
    },
    "tests/unified/e2e/session_persistence_manager.py": {
      "value": "tests/unified/e2e/session_persistence_manager.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:69"
      ]
    },
    "tests/unified/e2e/test_agent_billing_flow.py": {
      "value": "tests/unified/e2e/test_agent_billing_flow.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:61"
      ]
    },
    "tests/unified/e2e/test_agent_collaboration_real.py": {
      "value": "tests/unified/e2e/test_agent_collaboration_real.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:60"
      ]
    },
    "tests/unified/e2e/test_agent_failure_websocket_recovery.py": {
      "value": "tests/unified/e2e/test_agent_failure_websocket_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:73"
      ]
    },
    "tests/unified/e2e/test_agent_orchestration_real_llm.py": {
      "value": "tests/unified/e2e/test_agent_orchestration_real_llm.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:58"
      ]
    },
    "tests/unified/e2e/test_ai_supply_chain_failover.py": {
      "value": "tests/unified/e2e/test_ai_supply_chain_failover.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:64"
      ]
    },
    "tests/unified/e2e/test_auth_token_expiry.py": {
      "value": "tests/unified/e2e/test_auth_token_expiry.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:77"
      ]
    },
    "tests/unified/e2e/test_auth_websocket_connection.py": {
      "value": "tests/unified/e2e/test_auth_websocket_connection.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:48"
      ]
    },
    "tests/unified/e2e/test_auth_websocket_performance.py": {
      "value": "tests/unified/e2e/test_auth_websocket_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:56"
      ]
    },
    "tests/unified/e2e/test_auth_websocket_recovery.py": {
      "value": "tests/unified/e2e/test_auth_websocket_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:74"
      ]
    },
    "tests/unified/e2e/test_cost_tracking_accuracy.py": {
      "value": "tests/unified/e2e/test_cost_tracking_accuracy.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:54"
      ]
    },
    "tests/unified/e2e/test_cross_service_transaction.py": {
      "value": "tests/unified/e2e/test_cross_service_transaction.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:72"
      ]
    },
    "tests/unified/e2e/test_data_crud_unified.py": {
      "value": "tests/unified/e2e/test_data_crud_unified.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:55"
      ]
    },
    "tests/unified/e2e/test_database_consistency.py": {
      "value": "tests/unified/e2e/test_database_consistency.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:47"
      ]
    },
    "tests/unified/e2e/test_disaster_recovery.py": {
      "value": "tests/unified/e2e/test_disaster_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:75"
      ]
    },
    "tests/unified/e2e/test_error_cascade_prevention.py": {
      "value": "tests/unified/e2e/test_error_cascade_prevention.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:53"
      ]
    },
    "tests/unified/e2e/test_export_pipeline.py": {
      "value": "tests/unified/e2e/test_export_pipeline.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:49"
      ]
    },
    "tests/unified/e2e/test_health_monitoring_recovery.py": {
      "value": "tests/unified/e2e/test_health_monitoring_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:69"
      ]
    },
    "tests/unified/e2e/test_memory_leak_detection.py": {
      "value": "tests/unified/e2e/test_memory_leak_detection.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:56"
      ]
    },
    "tests/unified/e2e/test_quota_management.py": {
      "value": "tests/unified/e2e/test_quota_management.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:45"
      ]
    },
    "tests/unified/e2e/test_real_rate_limiting.py": {
      "value": "tests/unified/e2e/test_real_rate_limiting.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:57"
      ]
    },
    "tests/unified/e2e/test_service_failure_recovery.py": {
      "value": "tests/unified/e2e/test_service_failure_recovery.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:46"
      ]
    },
    "tests/unified/e2e/test_session_persistence.py": {
      "value": "tests/unified/e2e/test_session_persistence.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:63"
      ]
    },
    "tests/unified/e2e/test_session_state_synchronization.py": {
      "value": "tests/unified/e2e/test_session_state_synchronization.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:59"
      ]
    },
    "tests/unified/e2e/test_thread_management_websocket.py": {
      "value": "tests/unified/e2e/test_thread_management_websocket.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:59"
      ]
    },
    "tests/unified/e2e/test_token_expiry_refresh.py": {
      "value": "tests/unified/e2e/test_token_expiry_refresh.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:55"
      ]
    },
    "tests/unified/e2e/test_token_lifecycle.py": {
      "value": "tests/unified/e2e/test_token_lifecycle.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:61"
      ]
    },
    "tests/unified/e2e/test_websocket_event_completeness.py": {
      "value": "tests/unified/e2e/test_websocket_event_completeness.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:68"
      ]
    },
    "tests/unified/e2e/test_websocket_guarantees.py": {
      "value": "tests/unified/e2e/test_websocket_guarantees.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:62"
      ]
    },
    "tests/unified/e2e/test_websocket_message_format_validation.py": {
      "value": "tests/unified/e2e/test_websocket_message_format_validation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:66"
      ]
    },
    "tests/unified/e2e/test_websocket_message_guarantees.py": {
      "value": "tests/unified/e2e/test_websocket_message_guarantees.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:52"
      ]
    },
    "tests/unified/e2e/test_websocket_resilience.py": {
      "value": "tests/unified/e2e/test_websocket_resilience.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:63"
      ]
    },
    "tests/unified/e2e/test_workspace_isolation.py": {
      "value": "tests/unified/e2e/test_workspace_isolation.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:60"
      ]
    },
    "tests/unified/e2e/websocket_message_guarantee_helpers.py": {
      "value": "tests/unified/e2e/websocket_message_guarantee_helpers.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:70"
      ]
    },
    "tests/unified/health_service_checker.py": {
      "value": "tests/unified/health_service_checker.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:65"
      ]
    },
    "tests/unified/oauth_flow_manager.py": {
      "value": "tests/unified/oauth_flow_manager.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:66"
      ]
    },
    "tests/unified/test_load_performance.py": {
      "value": "tests/unified/test_load_performance.py",
      "category": "paths",
      "locations": [
        "scripts/fix_remaining_imports.py:51"
      ]
    },
    "tests/unified/test_oauth_flow.py": {
      "value": "tests/unified/test_oauth_flow.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:64"
      ]
    },
    "tests/unified/test_transaction_consistency.py": {
      "value": "tests/unified/test_transaction_consistency.py",
      "category": "paths",
      "locations": [
        "scripts/fix_import_indents.py:70"
      ]
    },
    "tests/unified_test_runner.py": {
      "value": "tests/unified_test_runner.py",
      "category": "paths",
      "locations": [
        "scripts/deploy_token_optimization_production.py:104",
        "scripts/deploy_token_optimization_production.py:221",
        "scripts/deploy_token_optimization_production.py:222"
      ]
    },
    "tests/unit/scripts/test_deploy_to_gcp.py": {
      "value": "tests/unit/scripts/test_deploy_to_gcp.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:27",
        "scripts/test/fix_indentation_errors.py:43"
      ]
    },
    "tests/unit/test_websocket_connection_paradox_regression.py": {
      "value": "tests/unit/test_websocket_connection_paradox_regression.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:20"
      ]
    },
    "tests/websocket/test_secure_websocket.py": {
      "value": "tests/websocket/test_secure_websocket.py",
      "category": "paths",
      "locations": [
        "scripts/complete_remaining_mock_cleanup.py:19"
      ]
    },
    "tests/websocket/test_websocket_regression_prevention.py": {
      "value": "tests/websocket/test_websocket_regression_prevention.py",
      "category": "paths",
      "locations": [
        "scripts/fix_ws_manager_imports.py:19"
      ]
    },
    "tracing/__init__.py": {
      "value": "tracing/__init__.py",
      "category": "paths",
      "locations": [
        "scripts/create_additional_shims.py:244"
      ]
    },
    "| **Methodology:** [SPEC/master_wip_index.xml](SPEC/master_wip_index.xml)\n> \n> **Quick Navigation:** [Executive Summary](#executive-summary) | [Compliance Breakdown](#compliance-breakdown) | [Testing Metrics](#testing-metrics) | [Action Items](#action-items)\n\n---\n\n## Executive Summary\n\n### Overall System Health Score: **": {
      "value": "| **Methodology:** [SPEC/master_wip_index.xml](SPEC/master_wip_index.xml)\n> \n> **Quick Navigation:** [Executive Summary](#executive-summary) | [Compliance Breakdown](#compliance-breakdown) | [Testing Metrics](#testing-metrics) | [Action Items](#action-items)\n\n---\n\n## Executive Summary\n\n### Overall System Health Score: **",
      "category": "paths",
      "locations": [
        "scripts/generate_wip_report.py:282"
      ]
    },
    "~/.config/gcloud/application_default_credentials.json": {
      "value": "~/.config/gcloud/application_default_credentials.json",
      "category": "paths",
      "locations": [
        "scripts/audit_oauth_gcp_logs.py:549"
      ]
    },
    "~/Library/Group Containers/group.com.docker/settings.json": {
      "value": "~/Library/Group Containers/group.com.docker/settings.json",
      "category": "paths",
      "locations": [
        "scripts/docker_stability_monitor.py:57"
      ]
    },
    "‚ö†Ô∏è Secret validation script not found (scripts/validate_secrets.py)": {
      "value": "‚ö†Ô∏è Secret validation script not found (scripts/validate_secrets.py)",
      "category": "paths",
      "locations": [
        "scripts/deploy_to_gcp.py:1189"
      ]
    },
    "üìã Index created at: SPEC/learnings/index.xml": {
      "value": "üìã Index created at: SPEC/learnings/index.xml",
      "category": "paths",
      "locations": [
        "scripts/split_learnings_robust.py:164"
      ]
    },
    "üîß Run: python scripts/diagnose_migration_state.py --recover": {
      "value": "üîß Run: python scripts/diagnose_migration_state.py --recover",
      "category": "paths",
      "locations": [
        "scripts/diagnose_migration_state.py:126"
      ]
    }
  }
}