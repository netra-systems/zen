{
  "metadata": {
    "version": "3.0.0",
    "category": "test_literals",
    "generated_at": "2025-09-02T19:49:02.491604",
    "root_directory": "C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1",
    "total_literals": 13213
  },
  "literals": {
    "\u001b[0m": {
      "value": "\u001b[0m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71",
        "scripts/test_discovery_report.py:126",
        "scripts/test_discovery_report.py:127",
        "scripts/test_discovery_report.py:128"
      ]
    },
    "\u001b[0m -": {
      "value": "\u001b[0m -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:93"
      ]
    },
    "\u001b[91m": {
      "value": "\u001b[91m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71",
        "scripts/test_discovery_report.py:93",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:126",
        "scripts/test_discovery_report.py:127",
        "scripts/test_discovery_report.py:128"
      ]
    },
    "\u001b[91mReal E2E Tests:": {
      "value": "\u001b[91mReal E2E Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:118"
      ]
    },
    "!": {
      "value": "!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:57",
        "auth_service/test_auth_direct.py:60",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:62",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:63",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:64"
      ]
    },
    "! This suggests configuration is not properly set for": {
      "value": "! This suggests configuration is not properly set for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:381"
      ]
    },
    "! URL:": {
      "value": "! URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:200"
      ]
    },
    "!!! DANGEROUS MODE ENABLED !!!": {
      "value": "!!! DANGEROUS MODE ENABLED !!!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:949"
      ]
    },
    "!= URL port": {
      "value": "!= URL port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:291"
      ]
    },
    "!@#$%^&*()_+-=[]{}|;:,.<>?": {
      "value": "!@#$%^&*()_+-=[]{}|;:,.<>?",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:86"
      ]
    },
    "\"": {
      "value": "\"",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:379",
        "scripts/align_test_imports.py:380",
        "scripts/fix_authentication_test_tokens.py:74",
        "scripts/fix_authentication_test_tokens.py:74",
        "scripts/fix_authentication_test_tokens.py:79",
        "scripts/fix_authentication_test_tokens.py:79",
        "scripts/fix_authentication_test_tokens.py:84",
        "scripts/fix_authentication_test_tokens.py:84",
        "scripts/fix_authentication_test_tokens.py:88",
        "scripts/fix_authentication_test_tokens.py:88"
      ]
    },
    "\"\n    )\n    \n    success = analyzer.analyze()\n    sys.exit(0 if success else 1)\n\nif __name__ == \"__main__\":\n    main()": {
      "value": "\"\n    )\n    \n    success = analyzer.analyze()\n    sys.exit(0 if success else 1)\n\nif __name__ == \"__main__\":\n    main()",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:144"
      ]
    },
    "\" https://api.staging.netrasystems.ai/health": {
      "value": "\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:317"
      ]
    },
    "\"\"\"": {
      "value": "\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:72",
        "scripts/add_pytest_markers.py:73",
        "scripts/auto_fix_test_sizes.py:156",
        "scripts/auto_fix_test_sizes.py:381",
        "scripts/auto_fix_test_sizes.py:384",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/auto_fix_test_violations.py:517",
        "scripts/auto_fix_test_violations.py:520",
        "scripts/auto_fix_test_violations.py:546"
      ]
    },
    "\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nimport sys\nfrom pathlib import Path\n\n# Add parent directory to path\n\nfrom": {
      "value": "\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nimport sys\nfrom pathlib import Path\n\n# Add parent directory to path\n\nfrom",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:103"
      ]
    },
    "\"\"\"\n\nimport sys\nimport os\nfrom pathlib import Path\n\n# Add parent directory to Python path\nsys.path.insert(0, str(Path(__file__).parent.parent))\n\nfrom scripts.test_failure_analyzer import TestFailureAnalyzer\n\ndef main():\n    analyzer = TestFailureAnalyzer(\n        test_name=\"": {
      "value": "\"\"\"\n\nimport sys\nimport os\nfrom pathlib import Path\n\n# Add parent directory to Python path\nsys.path.insert(0, str(Path(__file__).parent.parent))\n\nfrom scripts.test_failure_analyzer import TestFailureAnalyzer\n\ndef main():\n    analyzer = TestFailureAnalyzer(\n        test_name=\"",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:129"
      ]
    },
    "\"\"\"\n    \n    @pytest.fixture(autouse=True)\n    def setup(self):\n        \"\"\"Set up test fixtures\"\"\"\n        self.mock_data = {\"test\": \"data\"}\n        yield\n        # Cleanup if needed": {
      "value": "\"\"\"\n    \n    @pytest.fixture(autouse=True)\n    def setup(self):\n        \"\"\"Set up test fixtures\"\"\"\n        self.mock_data = {\"test\": \"data\"}\n        yield\n        # Cleanup if needed",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:122"
      ]
    },
    "\"\"\"\n        # Critical function - test error scenarios\n        with pytest.raises(Exception):\n            pass  # TODO: Add actual error test": {
      "value": "\"\"\"\n        # Critical function - test error scenarios\n        with pytest.raises(Exception):\n            pass  # TODO: Add actual error test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:176"
      ]
    },
    "\"\"\"\n        # High complexity function - test boundary conditions\n        pass": {
      "value": "\"\"\"\n        # High complexity function - test boundary conditions\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:166"
      ]
    },
    "\"\"\"\n        # TODO: Implement based on function signature\n        # Function args:": {
      "value": "\"\"\"\n        # TODO: Implement based on function signature\n        # Function args:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:153"
      ]
    },
    "\"\"\"\nAPI tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nfrom fastapi.testclient import TestClient\nfrom netra_backend.app.main import app\n\n@pytest.mark.api\nclass Test{main_class}API:\n    \"\"\"API test suite for {endpoint_name}\"\"\"\n    \n    @pytest.fixture\n    def client(self):\n        \"\"\"Create test client\"\"\"\n        return TestClient(app)\n    \n    def test_get_endpoint(self, client):\n        \"\"\"Test GET request\"\"\"\n        response = client.get(\"/api/v1/{endpoint_path}\")\n        assert response.status_code == 200\n        assert \"data\" in response.json()\n    \n    def test_post_endpoint(self, client):\n        \"\"\"Test POST request\"\"\"\n        payload = {{\"test\": \"data\"}}\n        response = client.post(\"/api/v1/{endpoint_path}\", json=payload)\n        assert response.status_code == 201\n    \n    def test_error_responses(self, client):\n        \"\"\"Test error handling\"\"\"\n        response = client.get(\"/api/v1/{endpoint_path}/invalid\")\n        assert response.status_code == 404\n    \n    def test_authentication(self, client):\n        \"\"\"Test auth requirements\"\"\"\n        response = client.get(\"/api/v1/{endpoint_path}/protected\")\n        assert response.status_code == 401": {
      "value": "\"\"\"\nAPI tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nfrom fastapi.testclient import TestClient\nfrom netra_backend.app.main import app\n\n@pytest.mark.api\nclass Test{main_class}API:\n    \"\"\"API test suite for {endpoint_name}\"\"\"\n    \n    @pytest.fixture\n    def client(self):\n        \"\"\"Create test client\"\"\"\n        return TestClient(app)\n    \n    def test_get_endpoint(self, client):\n        \"\"\"Test GET request\"\"\"\n        response = client.get(\"/api/v1/{endpoint_path}\")\n        assert response.status_code == 200\n        assert \"data\" in response.json()\n    \n    def test_post_endpoint(self, client):\n        \"\"\"Test POST request\"\"\"\n        payload = {{\"test\": \"data\"}}\n        response = client.post(\"/api/v1/{endpoint_path}\", json=payload)\n        assert response.status_code == 201\n    \n    def test_error_responses(self, client):\n        \"\"\"Test error handling\"\"\"\n        response = client.get(\"/api/v1/{endpoint_path}/invalid\")\n        assert response.status_code == 404\n    \n    def test_authentication(self, client):\n        \"\"\"Test auth requirements\"\"\"\n        response = client.get(\"/api/v1/{endpoint_path}/protected\")\n        assert response.status_code == 401",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:269"
      ]
    },
    "\"\"\"\nAsync tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom netra_backend.{module_path} import {class_names}\n\n@pytest.mark.asyncio\nclass Test{main_class}Async:\n    \"\"\"Async test suite for {main_class}\"\"\"\n    \n    async def test_websocket_connection(self):\n        \"\"\"Test WebSocket connection\"\"\"\n        manager = {main_class}()\n        connection = await manager.connect(\"test_client\")\n        assert connection is not None\n        await manager.disconnect(\"test_client\")\n    \n    async def test_message_handling(self):\n        \"\"\"Test message processing\"\"\"\n        handler = {main_class}()\n        result = await handler.process_message({{\"type\": \"test\"}})\n        assert result[\"status\"] == \"processed\"\n    \n    async def test_event_broadcasting(self):\n        \"\"\"Test event distribution\"\"\"\n        dispatcher = {main_class}()\n        await dispatcher.broadcast(\"test_event\", {{\"data\": \"test\"}})\n    \n    async def test_concurrent_connections(self):\n        \"\"\"Test multiple connections\"\"\"\n        manager = {main_class}()\n        tasks = []\n        for i in range(50):\n            tasks.append(manager.connect(f\"client_{{i}}\"))\n        connections = await asyncio.gather(*tasks)\n        assert len(connections) == 50": {
      "value": "\"\"\"\nAsync tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom netra_backend.{module_path} import {class_names}\n\n@pytest.mark.asyncio\nclass Test{main_class}Async:\n    \"\"\"Async test suite for {main_class}\"\"\"\n    \n    async def test_websocket_connection(self):\n        \"\"\"Test WebSocket connection\"\"\"\n        manager = {main_class}()\n        connection = await manager.connect(\"test_client\")\n        assert connection is not None\n        await manager.disconnect(\"test_client\")\n    \n    async def test_message_handling(self):\n        \"\"\"Test message processing\"\"\"\n        handler = {main_class}()\n        result = await handler.process_message({{\"type\": \"test\"}})\n        assert result[\"status\"] == \"processed\"\n    \n    async def test_event_broadcasting(self):\n        \"\"\"Test event distribution\"\"\"\n        dispatcher = {main_class}()\n        await dispatcher.broadcast(\"test_event\", {{\"data\": \"test\"}})\n    \n    async def test_concurrent_connections(self):\n        \"\"\"Test multiple connections\"\"\"\n        manager = {main_class}()\n        tasks = []\n        for i in range(50):\n            tasks.append(manager.connect(f\"client_{{i}}\"))\n        connections = await asyncio.gather(*tasks)\n        assert len(connections) == 50",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:312"
      ]
    },
    "\"\"\"\nHOT_RELOAD_TEST =": {
      "value": "\"\"\"\nHOT_RELOAD_TEST =",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:70",
        "scripts/test_docker_hot_reload.py:108"
      ]
    },
    "\"\"\"\nIntegration tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom netra_backend.{module_path} import {class_names}\nfrom netra_backend.app.database import get_db_session\n\n@pytest.mark.integration\nclass Test{main_class}Integration:\n    \"\"\"Integration test suite for {main_class}\"\"\"\n    \n    @pytest.fixture\n    async def db_session(self):\n        \"\"\"Get test database session\"\"\"\n        async with get_db_session() as session:\n            yield session\n    \n    async def test_database_operations(self, db_session):\n        \"\"\"Test real database interactions\"\"\"\n        instance = {main_class}(db_session)\n        result = await instance.create_record()\n        assert result.id is not None\n    \n    async def test_transaction_management(self, db_session):\n        \"\"\"Test transaction handling\"\"\"\n        instance = {main_class}(db_session)\n        async with db_session.begin():\n            await instance.bulk_operation()\n    \n    async def test_concurrent_operations(self, db_session):\n        \"\"\"Test concurrent execution\"\"\"\n        tasks = []\n        for _ in range(10):\n            tasks.append(instance.process_async())\n        results = await asyncio.gather(*tasks)\n        assert len(results) == 10": {
      "value": "\"\"\"\nIntegration tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom netra_backend.{module_path} import {class_names}\nfrom netra_backend.app.database import get_db_session\n\n@pytest.mark.integration\nclass Test{main_class}Integration:\n    \"\"\"Integration test suite for {main_class}\"\"\"\n    \n    @pytest.fixture\n    async def db_session(self):\n        \"\"\"Get test database session\"\"\"\n        async with get_db_session() as session:\n            yield session\n    \n    async def test_database_operations(self, db_session):\n        \"\"\"Test real database interactions\"\"\"\n        instance = {main_class}(db_session)\n        result = await instance.create_record()\n        assert result.id is not None\n    \n    async def test_transaction_management(self, db_session):\n        \"\"\"Test transaction handling\"\"\"\n        instance = {main_class}(db_session)\n        async with db_session.begin():\n            await instance.bulk_operation()\n    \n    async def test_concurrent_operations(self, db_session):\n        \"\"\"Test concurrent execution\"\"\"\n        tasks = []\n        for _ in range(10):\n            tasks.append(instance.process_async())\n        results = await asyncio.gather(*tasks)\n        assert len(results) == 10",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:226"
      ]
    },
    "\"\"\"\nTests for": {
      "value": "\"\"\"\nTests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:100"
      ]
    },
    "\"\"\"\nUnit tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nfrom netra_backend.{module_path} import {class_names}\n\nclass Test{main_class}:\n    \"\"\"Test suite for {main_class}\"\"\"\n    \n    @pytest.fixture\n    def instance(self):\n        \"\"\"Create test instance\"\"\"\n        return {main_class}()\n    \n    def test_initialization(self, instance):\n        \"\"\"Test proper initialization\"\"\"\n        assert instance is not None\n        # Add initialization assertions\n    \n    def test_core_functionality(self, instance):\n        \"\"\"Test core business logic\"\"\"\n        # Test happy path\n        result = instance.process()\n        assert result is not None\n    \n    def test_error_handling(self, instance):\n        \"\"\"Test error scenarios\"\"\"\n        with pytest.raises(Exception):\n            instance.process_invalid()\n    \n    def test_edge_cases(self, instance):\n        \"\"\"Test boundary conditions\"\"\"\n        # Test with None, empty, extreme values\n        pass\n    \n    def test_validation(self, instance):\n        \"\"\"Test input validation\"\"\"\n        # Test validation logic\n        pass": {
      "value": "\"\"\"\nUnit tests for {module_name}\nCoverage Target: {coverage_target}%\nBusiness Value: {business_value}\n\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nfrom netra_backend.{module_path} import {class_names}\n\nclass Test{main_class}:\n    \"\"\"Test suite for {main_class}\"\"\"\n    \n    @pytest.fixture\n    def instance(self):\n        \"\"\"Create test instance\"\"\"\n        return {main_class}()\n    \n    def test_initialization(self, instance):\n        \"\"\"Test proper initialization\"\"\"\n        assert instance is not None\n        # Add initialization assertions\n    \n    def test_core_functionality(self, instance):\n        \"\"\"Test core business logic\"\"\"\n        # Test happy path\n        result = instance.process()\n        assert result is not None\n    \n    def test_error_handling(self, instance):\n        \"\"\"Test error scenarios\"\"\"\n        with pytest.raises(Exception):\n            instance.process_invalid()\n    \n    def test_edge_cases(self, instance):\n        \"\"\"Test boundary conditions\"\"\"\n        # Test with None, empty, extreme values\n        pass\n    \n    def test_validation(self, instance):\n        \"\"\"Test input validation\"\"\"\n        # Test validation logic\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:180"
      ]
    },
    "\"\"\".*for testing.*\"\"\"": {
      "value": "\"\"\".*for testing.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:50"
      ]
    },
    "\"\"\".*mock implementation.*\"\"\"": {
      "value": "\"\"\".*mock implementation.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:48"
      ]
    },
    "\"\"\".*test implementation.*\"\"\"": {
      "value": "\"\"\".*test implementation.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:49"
      ]
    },
    "\"\"\"Split from": {
      "value": "\"\"\"Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:575"
      ]
    },
    "\"\"\"Split test module - imports all parts.\"\"\"": {
      "value": "\"\"\"Split test module - imports all parts.\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:196"
      ]
    },
    "\"\"\"Test class for orphaned methods\"\"\"": {
      "value": "\"\"\"Test class for orphaned methods\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:95"
      ]
    },
    "\"\"\"Test file for hot reload verification.\"\"\"\n\nTEST_VALUE = \"initial\"\n\ndef get_test_value():\n    \"\"\"Return test value.\"\"\"\n    return TEST_VALUE": {
      "value": "\"\"\"Test file for hot reload verification.\"\"\"\n\nTEST_VALUE = \"initial\"\n\ndef get_test_value():\n    \"\"\"Return test value.\"\"\"\n    return TEST_VALUE",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:39"
      ]
    },
    "\"\"\"Test file for hot reload verification.\"\"\"\n\nTEST_VALUE = \"modified\"\n\ndef get_test_value():\n    \"\"\"Return test value.\"\"\"\n    return TEST_VALUE": {
      "value": "\"\"\"Test file for hot reload verification.\"\"\"\n\nTEST_VALUE = \"modified\"\n\ndef get_test_value():\n    \"\"\"Return test value.\"\"\"\n    return TEST_VALUE",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:57"
      ]
    },
    "\"\"\"Test hot reload marker -": {
      "value": "\"\"\"Test hot reload marker -",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:70",
        "scripts/test_docker_hot_reload.py:108"
      ]
    },
    "\"\"\"Test module.\"\"\"": {
      "value": "\"\"\"Test module.\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:67"
      ]
    },
    "\"%": {
      "value": "\"%",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:468",
        "scripts/test_execution_tracker.py:549"
      ]
    },
    "\")\n            sys.exit(1)\n    else:\n        print(f\"ERROR: Wrong error:": {
      "value": "\")\n            sys.exit(1)\n    else:\n        print(f\"ERROR: Wrong error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:223"
      ]
    },
    "\")\n        sys.exit(1)": {
      "value": "\")\n        sys.exit(1)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:226"
      ]
    },
    "\")\n        sys.exit(1)\nexcept Exception as e:\n    print(f\"ERROR: Failed to load config:": {
      "value": "\")\n        sys.exit(1)\nexcept Exception as e:\n    print(f\"ERROR: Failed to load config:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:165"
      ]
    },
    "\")\n        sys.exit(1)\nexcept Exception as e:\n    print(f\"ERROR: Unexpected error:": {
      "value": "\")\n        sys.exit(1)\nexcept Exception as e:\n    print(f\"ERROR: Unexpected error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:68",
        "auth_service/tests/test_environment_loading.py:115"
      ]
    },
    "\")\n    sys.exit(1)": {
      "value": "\")\n    sys.exit(1)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:71",
        "auth_service/tests/test_environment_loading.py:118",
        "auth_service/tests/test_environment_loading.py:168",
        "auth_service/tests/test_environment_loading.py:271",
        "auth_service/tests/test_environment_loading.py:316"
      ]
    },
    "\")\n    sys.exit(1)\nexcept ValueError as e:\n    if \"SERVICE_ID must be set\" in str(e) and \"no mock fallbacks\" in str(e):\n        print(\"SUCCESS: Correctly rejected missing SERVICE_ID\")\n        sys.exit(0)\n    else:\n        print(f\"ERROR: Wrong error message:": {
      "value": "\")\n    sys.exit(1)\nexcept ValueError as e:\n    if \"SERVICE_ID must be set\" in str(e) and \"no mock fallbacks\" in str(e):\n        print(\"SUCCESS: Correctly rejected missing SERVICE_ID\")\n        sys.exit(0)\n    else:\n        print(f\"ERROR: Wrong error message:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:108"
      ]
    },
    "\")\n    sys.exit(1)\nexcept ValueError as e:\n    if \"SERVICE_SECRET must be set\" in str(e) and \"no mock fallbacks\" in str(e):\n        print(\"SUCCESS: Correctly rejected missing SERVICE_SECRET\")\n        sys.exit(0)\n    else:\n        print(f\"ERROR: Wrong error message:": {
      "value": "\")\n    sys.exit(1)\nexcept ValueError as e:\n    if \"SERVICE_SECRET must be set\" in str(e) and \"no mock fallbacks\" in str(e):\n        print(\"SUCCESS: Correctly rejected missing SERVICE_SECRET\")\n        sys.exit(0)\n    else:\n        print(f\"ERROR: Wrong error message:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:61"
      ]
    },
    "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Clear SERVICE_SECRET to simulate missing variable\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.delete(\"SERVICE_SECRET\", \"test_script\")\nenv.set(\"ENVIRONMENT\", \"development\", \"test_script\")\n\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    # Try to get service secret - should fail\n    secret = AuthConfig.get_service_secret()\n    print(f\"ERROR: Should have failed but got:": {
      "value": "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Clear SERVICE_SECRET to simulate missing variable\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.delete(\"SERVICE_SECRET\", \"test_script\")\nenv.set(\"ENVIRONMENT\", \"development\", \"test_script\")\n\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    # Try to get service secret - should fail\n    secret = AuthConfig.get_service_secret()\n    print(f\"ERROR: Should have failed but got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:48"
      ]
    },
    "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Set SERVICE_SECRET but clear SERVICE_ID\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.set(\"SERVICE_SECRET\", \"test-secret-32-characters-or-more\", \"test_script\")\nenv.delete(\"SERVICE_ID\", \"test_script\")\nenv.set(\"ENVIRONMENT\", \"development\", \"test_script\")\n\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    # Try to get service ID - should fail\n    service_id = AuthConfig.get_service_id()\n    print(f\"ERROR: Should have failed but got:": {
      "value": "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Set SERVICE_SECRET but clear SERVICE_ID\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.set(\"SERVICE_SECRET\", \"test-secret-32-characters-or-more\", \"test_script\")\nenv.delete(\"SERVICE_ID\", \"test_script\")\nenv.set(\"ENVIRONMENT\", \"development\", \"test_script\")\n\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    # Try to get service ID - should fail\n    service_id = AuthConfig.get_service_id()\n    print(f\"ERROR: Should have failed but got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:94"
      ]
    },
    "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Set variables but with wrong SERVICE_ID\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.set(\"SERVICE_SECRET\", \"test-secret-32-characters-or-more\", \"test_script\")\nenv.set(\"SERVICE_ID\", \"netra-backend\", \"test_script\")  # WRONG!\nenv.set(\"ENVIRONMENT\", \"test\", \"test_script\")\n\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    service_id = AuthConfig.get_service_id()\n    \n    # This test documents that auth service should have its own SERVICE_ID\n    if service_id == \"netra-backend\":\n        print(\"WARNING: SERVICE_ID is 'netra-backend' but should be 'auth-service' for auth service\")\n        print(\"Each microservice should have its own SERVICE_ID\")\n        sys.exit(0)  # Pass with warning to document the issue\n    else:\n        print(f\"INFO: SERVICE_ID is '": {
      "value": "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Set variables but with wrong SERVICE_ID\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.set(\"SERVICE_SECRET\", \"test-secret-32-characters-or-more\", \"test_script\")\nenv.set(\"SERVICE_ID\", \"netra-backend\", \"test_script\")  # WRONG!\nenv.set(\"ENVIRONMENT\", \"test\", \"test_script\")\n\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    service_id = AuthConfig.get_service_id()\n    \n    # This test documents that auth service should have its own SERVICE_ID\n    if service_id == \"netra-backend\":\n        print(\"WARNING: SERVICE_ID is 'netra-backend' but should be 'auth-service' for auth service\")\n        print(\"Each microservice should have its own SERVICE_ID\")\n        sys.exit(0)  # Pass with warning to document the issue\n    else:\n        print(f\"INFO: SERVICE_ID is '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:248"
      ]
    },
    "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Set variables using IsolatedEnvironment\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.set(\"SERVICE_SECRET\", \"test-secret-32-characters-or-more\", \"test_script\")\nenv.set(\"SERVICE_ID\", \"auth-service\", \"test_script\")\nenv.set(\"TEST_VAR\", \"test-value\", \"test_script\")\n\n# Import isolated environment\nfrom shared.isolated_environment import get_env\n\nenv = get_env()\n\n# Test that it reads from os.environ\ntest_var = env.get(\"TEST_VAR\")\nservice_secret = env.get(\"SERVICE_SECRET\")\nservice_id = env.get(\"SERVICE_ID\")\n\nif test_var == \"test-value\" and service_secret and service_id == \"auth-service\":\n    print(\"SUCCESS: IsolatedEnvironment correctly reads from os.environ\")\n    sys.exit(0)\nelse:\n    print(f\"ERROR: Got test_var=": {
      "value": "\")\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Set variables using IsolatedEnvironment\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.set(\"SERVICE_SECRET\", \"test-secret-32-characters-or-more\", \"test_script\")\nenv.set(\"SERVICE_ID\", \"auth-service\", \"test_script\")\nenv.set(\"TEST_VAR\", \"test-value\", \"test_script\")\n\n# Import isolated environment\nfrom shared.isolated_environment import get_env\n\nenv = get_env()\n\n# Test that it reads from os.environ\ntest_var = env.get(\"TEST_VAR\")\nservice_secret = env.get(\"SERVICE_SECRET\")\nservice_id = env.get(\"SERVICE_ID\")\n\nif test_var == \"test-value\" and service_secret and service_id == \"auth-service\":\n    print(\"SUCCESS: IsolatedEnvironment correctly reads from os.environ\")\n    sys.exit(0)\nelse:\n    print(f\"ERROR: Got test_var=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:292"
      ]
    },
    "\",": {
      "value": "\",",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:297",
        "scripts/test_ga4_connection.py:89"
      ]
    },
    "\",\n        failure_info=": {
      "value": "\",\n        failure_info=",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:142"
      ]
    },
    "\", override=True)\n\n# Now import auth config - should work\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    \n    # Get service secret and ID\n    secret = AuthConfig.get_service_secret()\n    service_id = AuthConfig.get_service_id()\n    \n    if secret and service_id == \"auth-service-test\":\n        print(\"SUCCESS: Environment variables loaded correctly\")\n        sys.exit(0)\n    else:\n        print(f\"ERROR: Got secret=": {
      "value": "\", override=True)\n\n# Now import auth config - should work\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    \n    # Get service secret and ID\n    secret = AuthConfig.get_service_secret()\n    service_id = AuthConfig.get_service_id()\n    \n    if secret and service_id == \"auth-service-test\":\n        print(\"SUCCESS: Environment variables loaded correctly\")\n        sys.exit(0)\n    else:\n        print(f\"ERROR: Got secret=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:151"
      ]
    },
    "\", override=True)\n        # Reimport and it should work now\n        import importlib\n        import auth_service.auth_core.config\n        importlib.reload(auth_service.auth_core.config)\n        from auth_service.auth_core.config import AuthConfig as ReloadedConfig\n        try:\n            secret = ReloadedConfig.get_service_secret()\n            if secret:\n                print(\"SUCCESS: Works after loading .env and reloading module\")\n                sys.exit(0)\n        except Exception as e2:\n            print(f\"ERROR: Still failed after reload:": {
      "value": "\", override=True)\n        # Reimport and it should work now\n        import importlib\n        import auth_service.auth_core.config\n        importlib.reload(auth_service.auth_core.config)\n        from auth_service.auth_core.config import AuthConfig as ReloadedConfig\n        try:\n            secret = ReloadedConfig.get_service_secret()\n            if secret:\n                print(\"SUCCESS: Works after loading .env and reloading module\")\n                sys.exit(0)\n        except Exception as e2:\n            print(f\"ERROR: Still failed after reload:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:211"
      ]
    },
    "\",\"": {
      "value": "\",\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:298",
        "scripts/remove_test_stubs.py:298",
        "scripts/remove_test_stubs.py:299"
      ]
    },
    "\">": {
      "value": "\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:322"
      ]
    },
    "\"Authorization\": \"Bearer": {
      "value": "\"Authorization\": \"Bearer",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:93",
        "scripts/fix_authentication_test_tokens.py:97"
      ]
    },
    "\"Authorization\": \"Bearer service-account-token\"": {
      "value": "\"Authorization\": \"Bearer service-account-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:92"
      ]
    },
    "\"Authorization\": \"Bearer valid-token\"": {
      "value": "\"Authorization\": \"Bearer valid-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:96"
      ]
    },
    "\"ENVIRONMENT\": \"staging\"": {
      "value": "\"ENVIRONMENT\": \"staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:68"
      ]
    },
    "\"JWT_ALGORITHM\": \"HS256\"": {
      "value": "\"JWT_ALGORITHM\": \"HS256\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:69"
      ]
    },
    "\"KEY\" in os.environ checks": {
      "value": "\"KEY\" in os.environ checks",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:78"
      ]
    },
    "\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9\\.frontend-token-payload\\.signature\"": {
      "value": "\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9\\.frontend-token-payload\\.signature\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:73"
      ]
    },
    "\"oauth-hmac-secret-staging\"": {
      "value": "\"oauth-hmac-secret-staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:70"
      ]
    },
    "\"property_id\": \"": {
      "value": "\"property_id\": \"",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:89"
      ]
    },
    "\"retry-token\"": {
      "value": "\"retry-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:87"
      ]
    },
    "\"service-account-token\"": {
      "value": "\"service-account-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:78"
      ]
    },
    "\"test-token\"": {
      "value": "\"test-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:83"
      ]
    },
    "\"}": {
      "value": "\"}",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:240",
        "scripts/test_service_monitor.py:241"
      ]
    },
    "#": {
      "value": "#",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:163",
        "scripts/apply_fast_test_decorators.py:69",
        "scripts/auto_fix_test_sizes.py:491",
        "scripts/auto_fix_test_sizes.py:496",
        "scripts/auto_fix_test_violations.py:260",
        "scripts/compliance/project_test_validator.py:226",
        "scripts/compliance/real_test_requirements_enforcer.py:308",
        "scripts/compliance/real_test_validator.py:193",
        "scripts/compliance/test_fixer.py:193",
        "scripts/compliance/test_fixer.py:278"
      ]
    },
    "# ACT Secrets for local testing\nGITHUB_TOKEN=mock_github_token\nGCP_CREDENTIALS={\"type\":\"service_account\"}\nGCP_PROJECT_ID=mock-project\nDOCKER_REGISTRY=localhost:5000\nSTAGING_SSH_KEY=mock_ssh_key\nSTAGING_HOST=localhost\nSTAGING_USER=testuser\nSLACK_WEBHOOK_URL=https://mock.webhook.url": {
      "value": "# ACT Secrets for local testing\nGITHUB_TOKEN=mock_github_token\nGCP_CREDENTIALS={\"type\":\"service_account\"}\nGCP_PROJECT_ID=mock-project\nDOCKER_REGISTRY=localhost:5000\nSTAGING_SSH_KEY=mock_ssh_key\nSTAGING_HOST=localhost\nSTAGING_USER=testuser\nSLACK_WEBHOOK_URL=https://mock.webhook.url",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:80"
      ]
    },
    "# ACT environment detection - ACT sets this automatically": {
      "value": "# ACT environment detection - ACT sets this automatically",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:257"
      ]
    },
    "# ACT will override": {
      "value": "# ACT will override",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:237"
      ]
    },
    "# Add project root to path": {
      "value": "# Add project root to path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:176",
        "scripts/fix_test_import_order.py:73"
      ]
    },
    "# Agent models - creating mocks for tests\nfrom unittest.mock import Mock\nAgent = Mock\nAgentRun = Mock": {
      "value": "# Agent models - creating mocks for tests\nfrom unittest.mock import Mock\nAgent = Mock\nAgentRun = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:133"
      ]
    },
    "# AgentRun model - creating mock for tests\nfrom unittest.mock import Mock\nAgentRun = Mock": {
      "value": "# AgentRun model - creating mock for tests\nfrom unittest.mock import Mock\nAgentRun = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:128"
      ]
    },
    "# ClickHouseManager - creating mock for tests\nfrom unittest.mock import Mock\nClickHouseManager = Mock": {
      "value": "# ClickHouseManager - creating mock for tests\nfrom unittest.mock import Mock\nClickHouseManager = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:79"
      ]
    },
    "# Complexity:": {
      "value": "# Complexity:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:156"
      ]
    },
    "# ConversionEvent model - creating mock for tests\nfrom unittest.mock import Mock\nConversionEvent = Mock": {
      "value": "# ConversionEvent model - creating mock for tests\nfrom unittest.mock import Mock\nConversionEvent = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:86"
      ]
    },
    "# Critical Path Tests\nclass TestCriticalPaths:\n    \"\"\"Tests for critical execution paths\"\"\"": {
      "value": "# Critical Path Tests\nclass TestCriticalPaths:\n    \"\"\"Tests for critical execution paths\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:227"
      ]
    },
    "# CustomCORSMiddleware removed": {
      "value": "# CustomCORSMiddleware removed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:181"
      ]
    },
    "# Database test fixtures - using mocks\nfrom unittest.mock import Mock, AsyncMock\nDatabaseErrorSimulator = Mock\nMockConnectionPool = Mock\nasync_session_mock = AsyncMock\nconnection_pool = Mock\ntransaction_session_mock = AsyncMock": {
      "value": "# Database test fixtures - using mocks\nfrom unittest.mock import Mock, AsyncMock\nDatabaseErrorSimulator = Mock\nMockConnectionPool = Mock\nasync_session_mock = AsyncMock\nconnection_pool = Mock\ntransaction_session_mock = AsyncMock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:98"
      ]
    },
    "# E2E Agent Test Failure Report\nGenerated:": {
      "value": "# E2E Agent Test Failure Report\nGenerated:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:297"
      ]
    },
    "# E2E Test Scan Report": {
      "value": "# E2E Test Scan Report",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:232"
      ]
    },
    "# FIXME:": {
      "value": "# FIXME:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:47",
        "scripts/fix_all_test_issues.py:60"
      ]
    },
    "# Final 100-Iteration Test Remediation Report\n\n## Executive Summary\n\nThe Netra Apex test remediation initiative (iterations 81-100) successfully transformed \na critically flawed test architecture into a production-ready, maintainable system.\n\n### Critical Problem Solved\n**Before**: 4,133+ test files with 61,872+ functions, 14,484 SSOT violations, 0% compliance\n**After**: ~10 comprehensive files with ~500 focused tests, <100 violations, 95%+ compliance\n\nThis represents a **99.8% file reduction** while maintaining 100% critical functionality coverage.\n\n## Iteration Summary\n\n### Iterations 81-85: Critical Consolidation\n- **81**: Auth Service - 89 files → 1 comprehensive suite\n- **82**: Backend Core - 60 files → 1 comprehensive suite  \n- **83**: Agent System - 87 files → 1 comprehensive suite\n- **84-85**: WebSocket & Database consolidation (documented)\n\n### Iterations 86-90: Coverage Verification\n- **86**: Core path coverage audit - 100% maintained\n- **87**: Agent functionality coverage - Complete\n- **88**: API endpoint coverage - Verified  \n- **89**: Error handling coverage - Comprehensive\n- **90**: Environment-specific testing - Compliant\n\n### Iterations 91-95: Documentation Creation\n- **91**: Test architecture documentation - Complete\n- **92**: Test execution guidelines - Complete\n- **93**: Test writing standards - Complete\n- **94**: Test maintenance procedures - Complete\n- **95**: Test performance guidelines - Complete\n\n### Iterations 96-100: Final Reporting\n- **96**: Test health metrics system - Established\n- **97**: SSOT compliance verification - 95%+ achieved\n- **98**: Performance benchmarking - Targets met\n- **99**: Integration testing - Verified\n- **100**: Final comprehensive report - Complete\n\n## Business Impact\n\n### Immediate Benefits\n- **Developer Productivity**: 90%+ faster test execution\n- **Maintenance Burden**: 99%+ reduction in test files to maintain\n- **System Stability**: SSOT violations eliminated\n- **Code Quality**: Clear, focused test architecture\n\n### Strategic Value\n- **Deployment Readiness**: System now deployable (was blocked)\n- **Technical Debt**: Severe technical debt resolved\n- **Team Velocity**: Faster development cycles\n- **Quality Assurance**: Comprehensive coverage without duplication\n\n## Key Achievements\n\n### 1. SSOT Compliance Restored\n- Eliminated 14,484+ violations\n- Single source of truth for all test concepts\n- Clear service boundaries established\n\n### 2. Massive Efficiency Gains\n- 99.8% reduction in test files\n- 99.2% reduction in test functions\n- 90%+ improvement in execution speed\n- 100% elimination of stub tests\n\n### 3. Comprehensive Documentation\n- Complete test architecture documentation\n- Clear execution and maintenance guidelines  \n- Performance optimization strategies\n- Ongoing health monitoring procedures\n\n### 4. Production Readiness\n- System moved from \"DO NOT DEPLOY\" to production-ready\n- Critical path coverage maintained\n- Environment-aware testing established\n- Automated compliance monitoring\n\n## Recommendations\n\n### Immediate Actions\n1. **Deploy Updated Test Suite**: Begin using consolidated test files\n2. **Archive Legacy Tests**: Complete archival of old test files\n3. **Update CI/CD**: Configure pipelines for new test structure\n4. **Team Training**: Brief team on new test architecture\n\n### Ongoing Maintenance\n1. **Monitor SSOT Compliance**: Prevent regression to duplicate state\n2. **Performance Tracking**: Maintain fast execution times\n3. **Regular Audits**: Monthly architecture compliance checks\n4. **Documentation Updates**: Keep test docs current with system changes\n\n## Conclusion\n\nThis 100-iteration remediation successfully transformed the Netra Apex test suite from \na critically flawed, unmaintainable system into a production-ready architecture that \nsupports rapid development while maintaining comprehensive coverage.\n\n**The system is now ready for production deployment.**\n\n---\n**Report Generated**:": {
      "value": "# Final 100-Iteration Test Remediation Report\n\n## Executive Summary\n\nThe Netra Apex test remediation initiative (iterations 81-100) successfully transformed \na critically flawed test architecture into a production-ready, maintainable system.\n\n### Critical Problem Solved\n**Before**: 4,133+ test files with 61,872+ functions, 14,484 SSOT violations, 0% compliance\n**After**: ~10 comprehensive files with ~500 focused tests, <100 violations, 95%+ compliance\n\nThis represents a **99.8% file reduction** while maintaining 100% critical functionality coverage.\n\n## Iteration Summary\n\n### Iterations 81-85: Critical Consolidation\n- **81**: Auth Service - 89 files → 1 comprehensive suite\n- **82**: Backend Core - 60 files → 1 comprehensive suite  \n- **83**: Agent System - 87 files → 1 comprehensive suite\n- **84-85**: WebSocket & Database consolidation (documented)\n\n### Iterations 86-90: Coverage Verification\n- **86**: Core path coverage audit - 100% maintained\n- **87**: Agent functionality coverage - Complete\n- **88**: API endpoint coverage - Verified  \n- **89**: Error handling coverage - Comprehensive\n- **90**: Environment-specific testing - Compliant\n\n### Iterations 91-95: Documentation Creation\n- **91**: Test architecture documentation - Complete\n- **92**: Test execution guidelines - Complete\n- **93**: Test writing standards - Complete\n- **94**: Test maintenance procedures - Complete\n- **95**: Test performance guidelines - Complete\n\n### Iterations 96-100: Final Reporting\n- **96**: Test health metrics system - Established\n- **97**: SSOT compliance verification - 95%+ achieved\n- **98**: Performance benchmarking - Targets met\n- **99**: Integration testing - Verified\n- **100**: Final comprehensive report - Complete\n\n## Business Impact\n\n### Immediate Benefits\n- **Developer Productivity**: 90%+ faster test execution\n- **Maintenance Burden**: 99%+ reduction in test files to maintain\n- **System Stability**: SSOT violations eliminated\n- **Code Quality**: Clear, focused test architecture\n\n### Strategic Value\n- **Deployment Readiness**: System now deployable (was blocked)\n- **Technical Debt**: Severe technical debt resolved\n- **Team Velocity**: Faster development cycles\n- **Quality Assurance**: Comprehensive coverage without duplication\n\n## Key Achievements\n\n### 1. SSOT Compliance Restored\n- Eliminated 14,484+ violations\n- Single source of truth for all test concepts\n- Clear service boundaries established\n\n### 2. Massive Efficiency Gains\n- 99.8% reduction in test files\n- 99.2% reduction in test functions\n- 90%+ improvement in execution speed\n- 100% elimination of stub tests\n\n### 3. Comprehensive Documentation\n- Complete test architecture documentation\n- Clear execution and maintenance guidelines  \n- Performance optimization strategies\n- Ongoing health monitoring procedures\n\n### 4. Production Readiness\n- System moved from \"DO NOT DEPLOY\" to production-ready\n- Critical path coverage maintained\n- Environment-aware testing established\n- Automated compliance monitoring\n\n## Recommendations\n\n### Immediate Actions\n1. **Deploy Updated Test Suite**: Begin using consolidated test files\n2. **Archive Legacy Tests**: Complete archival of old test files\n3. **Update CI/CD**: Configure pipelines for new test structure\n4. **Team Training**: Brief team on new test architecture\n\n### Ongoing Maintenance\n1. **Monitor SSOT Compliance**: Prevent regression to duplicate state\n2. **Performance Tracking**: Maintain fast execution times\n3. **Regular Audits**: Monthly architecture compliance checks\n4. **Documentation Updates**: Keep test docs current with system changes\n\n## Conclusion\n\nThis 100-iteration remediation successfully transformed the Netra Apex test suite from \na critically flawed, unmaintainable system into a production-ready architecture that \nsupports rapid development while maintaining comprehensive coverage.\n\n**The system is now ready for production deployment.**\n\n---\n**Report Generated**:",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:380"
      ]
    },
    "# Generated from": {
      "value": "# Generated from",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:603"
      ]
    },
    "# Has return:": {
      "value": "# Has return:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:155"
      ]
    },
    "# Incomplete import statement": {
      "value": "# Incomplete import statement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:114"
      ]
    },
    "# Justified:": {
      "value": "# Justified:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "# Legacy": {
      "value": "# Legacy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:181"
      ]
    },
    "# Message model - creating mock for tests\nfrom unittest.mock import Mock\nMessage = Mock": {
      "value": "# Message model - creating mock for tests\nfrom unittest.mock import Mock\nMessage = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:115"
      ]
    },
    "# Migrated from patch.dict(os.environ,": {
      "value": "# Migrated from patch.dict(os.environ,",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:200",
        "scripts/migrate_test_environment_access.py:208"
      ]
    },
    "# Mock implementation": {
      "value": "# Mock implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:51"
      ]
    },
    "# Mock justified": {
      "value": "# Mock justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "# Project Real Test Requirements Violations": {
      "value": "# Project Real Test Requirements Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:322"
      ]
    },
    "# REDUNDANT TEST - Marked for removal by Autonomous Test Reviewer\\n# Reason: Duplicate coverage or obsolete functionality\\n# Review and remove if confirmed redundant\\n\\n": {
      "value": "# REDUNDANT TEST - Marked for removal by Autonomous Test Reviewer\\n# Reason: Duplicate coverage or obsolete functionality\\n# Review and remove if confirmed redundant\\n\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:68"
      ]
    },
    "# Real Service Test Report": {
      "value": "# Real Service Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:123"
      ]
    },
    "# Real Test Requirements Fix Plan": {
      "value": "# Real Test Requirements Fix Plan",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:191"
      ]
    },
    "# Real Test Requirements Violations Report": {
      "value": "# Real Test Requirements Violations Report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:484",
        "scripts/compliance/real_test_validator.py:278"
      ]
    },
    "# Real component behavior: \\1 handles \\2": {
      "value": "# Real component behavior: \\1 handles \\2",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:326"
      ]
    },
    "# Real component setup: \\1 configured for \\2": {
      "value": "# Real component setup: \\1 configured for \\2",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:325"
      ]
    },
    "# Run with coverage\n  python unified_test_runner.py --service backend --coverage --min-coverage 80\n  \n  # Run specific test file\n  python unified_test_runner.py --service backend netra_backend/tests/test_main.py\n  \n  # Run tests matching keyword\n  python unified_test_runner.py --service backend -k \"test_login\"\n  \n  # Quick smoke test\n  python unified_test_runner.py --service backend --category smoke --fail-fast\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service backend --coverage --html-output --json-output --parallel auto": {
      "value": "# Run with coverage\n  python unified_test_runner.py --service backend --coverage --min-coverage 80\n  \n  # Run specific test file\n  python unified_test_runner.py --service backend netra_backend/tests/test_main.py\n  \n  # Run tests matching keyword\n  python unified_test_runner.py --service backend -k \"test_login\"\n  \n  # Quick smoke test\n  python unified_test_runner.py --service backend --category smoke --fail-fast\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service backend --coverage --html-output --json-output --parallel auto",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:463"
      ]
    },
    "# SSOT Compliance Verification Report\n\n## Pre-Remediation State\n- **Total SSOT Violations**: 14,484\n- **Duplicate Type Definitions**: 93\n- **Multiple Database Managers**: 7+\n- **Multiple Auth Implementations**: 5+\n- **Overall Compliance**: 0% (System failure state)\n\n## Post-Remediation State  \n- **Total SSOT Violations**: <100 (estimated)\n- **Duplicate Type Definitions**: 0 (eliminated)\n- **Multiple Database Managers**: 1 per service (compliant)\n- **Multiple Auth Implementations**: 1 (consolidated)\n- **Overall Compliance**: 95%+ (Production ready)\n\n## Key Achievements\n1. **Test Consolidation**: Eliminated massive test duplication\n2. **Clear Boundaries**: Each service has single test suite\n3. **Functional Organization**: Tests grouped by purpose, not arbitrary splits\n4. **Zero Stubs**: No placeholder or empty tests remain\n\n## Remaining Work\n- Complete consolidation of remaining test files\n- Finalize cross-service test organization\n- Establish automated SSOT monitoring\n- Document architectural decisions\n\n## Compliance Monitoring\n```bash\n# Check for test duplication\npython scripts/check_test_duplication.py\n\n# Verify SSOT compliance  \npython scripts/check_architecture_compliance.py\n\n# Monitor test health\npython scripts/generate_test_health_report.py\n```": {
      "value": "# SSOT Compliance Verification Report\n\n## Pre-Remediation State\n- **Total SSOT Violations**: 14,484\n- **Duplicate Type Definitions**: 93\n- **Multiple Database Managers**: 7+\n- **Multiple Auth Implementations**: 5+\n- **Overall Compliance**: 0% (System failure state)\n\n## Post-Remediation State  \n- **Total SSOT Violations**: <100 (estimated)\n- **Duplicate Type Definitions**: 0 (eliminated)\n- **Multiple Database Managers**: 1 per service (compliant)\n- **Multiple Auth Implementations**: 1 (consolidated)\n- **Overall Compliance**: 95%+ (Production ready)\n\n## Key Achievements\n1. **Test Consolidation**: Eliminated massive test duplication\n2. **Clear Boundaries**: Each service has single test suite\n3. **Functional Organization**: Tests grouped by purpose, not arbitrary splits\n4. **Zero Stubs**: No placeholder or empty tests remain\n\n## Remaining Work\n- Complete consolidation of remaining test files\n- Finalize cross-service test organization\n- Establish automated SSOT monitoring\n- Document architectural decisions\n\n## Compliance Monitoring\n```bash\n# Check for test duplication\npython scripts/check_test_duplication.py\n\n# Verify SSOT compliance  \npython scripts/check_architecture_compliance.py\n\n# Monitor test health\npython scripts/generate_test_health_report.py\n```",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:336"
      ]
    },
    "# Setup test path\\n(?=\\n)": {
      "value": "# Setup test path\\n(?=\\n)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:38"
      ]
    },
    "# TODO: Implement split test logic": {
      "value": "# TODO: Implement split test logic",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:578"
      ]
    },
    "# Team model - creating mock for tests\nfrom unittest.mock import Mock\nTeam = Mock": {
      "value": "# Team model - creating mock for tests\nfrom unittest.mock import Mock\nTeam = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:91"
      ]
    },
    "# Test Architecture Documentation\n\n## Overview\nThe Netra Apex test suite has been consolidated from 4,133+ files with 61,872+ functions \ninto a streamlined, comprehensive architecture with zero duplication.\n\n## Consolidated Test Structure\n\n### Service-Specific Tests\n- `auth_service/tests/test_auth_comprehensive.py` - Complete auth service testing\n- `netra_backend/tests/core/test_core_comprehensive.py` - Core backend functionality  \n- `netra_backend/tests/agents/test_agents_comprehensive.py` - Agent system testing\n\n### Test Categories\n1. **Unit Tests**: Individual component testing\n2. **Integration Tests**: Service interaction testing  \n3. **E2E Tests**: Complete workflow testing\n4. **Performance Tests**: Load and performance validation\n\n### Key Principles\n- **SSOT Compliance**: Each concept tested once and only once\n- **Environment Awareness**: Tests marked for dev/staging/prod\n- **Real Over Mock**: Prefer real services over mocks where possible\n- **Fast Feedback**: Optimized for developer productivity\n\n## Test Execution\n- Default: `python unified_test_runner.py --category integration --no-coverage --fast-fail`\n- Full Suite: `python unified_test_runner.py --categories smoke unit integration api`\n- Environment-Specific: `python unified_test_runner.py --env staging`": {
      "value": "# Test Architecture Documentation\n\n## Overview\nThe Netra Apex test suite has been consolidated from 4,133+ files with 61,872+ functions \ninto a streamlined, comprehensive architecture with zero duplication.\n\n## Consolidated Test Structure\n\n### Service-Specific Tests\n- `auth_service/tests/test_auth_comprehensive.py` - Complete auth service testing\n- `netra_backend/tests/core/test_core_comprehensive.py` - Core backend functionality  \n- `netra_backend/tests/agents/test_agents_comprehensive.py` - Agent system testing\n\n### Test Categories\n1. **Unit Tests**: Individual component testing\n2. **Integration Tests**: Service interaction testing  \n3. **E2E Tests**: Complete workflow testing\n4. **Performance Tests**: Load and performance validation\n\n### Key Principles\n- **SSOT Compliance**: Each concept tested once and only once\n- **Environment Awareness**: Tests marked for dev/staging/prod\n- **Real Over Mock**: Prefer real services over mocks where possible\n- **Fast Feedback**: Optimized for developer productivity\n\n## Test Execution\n- Default: `python unified_test_runner.py --category integration --no-coverage --fast-fail`\n- Full Suite: `python unified_test_runner.py --categories smoke unit integration api`\n- Environment-Specific: `python unified_test_runner.py --env staging`",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:47"
      ]
    },
    "# Test Coverage Remediation Report\n\n## Summary\n- **Total Files Targeted**:": {
      "value": "# Test Coverage Remediation Report\n\n## Summary\n- **Total Files Targeted**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:484"
      ]
    },
    "# Test Execution Guide\n\n## Quick Start\n```bash\n# Fast feedback loop (recommended for development)\npython unified_test_runner.py --category integration --no-coverage --fast-fail\n\n# Full test suite\npython unified_test_runner.py --categories smoke unit integration api --real-llm\n\n# Environment-specific testing\npython unified_test_runner.py --env staging\npython unified_test_runner.py --env prod --allow-prod\n```\n\n## Test Categories\n- **smoke**: Critical path verification\n- **unit**: Individual component tests\n- **integration**: Service interaction tests\n- **api**: HTTP endpoint tests\n- **agent**: AI agent functionality tests\n\n## Environment Markers\n- `@env(\"staging\")`: Staging environment only\n- `@env(\"prod\")`: Production environment (requires --allow-prod)\n- `@dev_and_staging`: Development and staging environments\n\n## Performance Options\n- `--fast-fail`: Stop on first failure (faster feedback)\n- `--no-coverage`: Skip coverage calculation (faster execution)\n- `--parallel`: Run tests in parallel (when supported)": {
      "value": "# Test Execution Guide\n\n## Quick Start\n```bash\n# Fast feedback loop (recommended for development)\npython unified_test_runner.py --category integration --no-coverage --fast-fail\n\n# Full test suite\npython unified_test_runner.py --categories smoke unit integration api --real-llm\n\n# Environment-specific testing\npython unified_test_runner.py --env staging\npython unified_test_runner.py --env prod --allow-prod\n```\n\n## Test Categories\n- **smoke**: Critical path verification\n- **unit**: Individual component tests\n- **integration**: Service interaction tests\n- **api**: HTTP endpoint tests\n- **agent**: AI agent functionality tests\n\n## Environment Markers\n- `@env(\"staging\")`: Staging environment only\n- `@env(\"prod\")`: Production environment (requires --allow-prod)\n- `@dev_and_staging`: Development and staging environments\n\n## Performance Options\n- `--fast-fail`: Stop on first failure (faster feedback)\n- `--no-coverage`: Skip coverage calculation (faster execution)\n- `--parallel`: Run tests in parallel (when supported)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:81"
      ]
    },
    "# Test Health Metrics Dashboard\n\n## Current Status (Post-100 Iterations)\n\n### Consolidation Results\n- **Files Reduced**: 4,133+ → ~10 comprehensive files (99.8% reduction)\n- **Functions Optimized**: 61,872+ → ~500 focused tests (99.2% reduction)  \n- **Stub Tests Eliminated**: 1,765+ stubs completely removed\n- **SSOT Compliance**: 0% → 95%+ (Critical improvement)\n- **Execution Time**: Estimated 90%+ faster\n\n### Service-Specific Health\n| Service | Before | After | Improvement |\n|---------|--------|-------|-------------|\n| Auth Service | 89 files, 463 functions | 1 file, ~50 functions | 98.9% reduction |\n| Backend Core | 60 files, 484 functions | 1 file, ~60 functions | 98.3% reduction |\n| Agent System | 87 files, ~400 functions | 1 file, ~40 functions | 98.8% reduction |\n\n### Quality Metrics\n- **Coverage**: Maintained >90% critical path coverage\n- **Execution Speed**: <5 minutes for full suite (target achieved)\n- **Maintainability**: Single files vs hundreds per domain\n- **Clarity**: Organized by functional area, not arbitrary splits\n\n## Ongoing Monitoring\n\n### Daily Metrics\n- Test execution time\n- Pass/fail rates\n- Coverage percentages\n\n### Weekly Reviews\n- New test additions (prevent duplication)\n- Performance trend analysis\n- SSOT compliance monitoring\n\n### Monthly Audits\n- Comprehensive architecture review\n- Test effectiveness analysis\n- Documentation updates": {
      "value": "# Test Health Metrics Dashboard\n\n## Current Status (Post-100 Iterations)\n\n### Consolidation Results\n- **Files Reduced**: 4,133+ → ~10 comprehensive files (99.8% reduction)\n- **Functions Optimized**: 61,872+ → ~500 focused tests (99.2% reduction)  \n- **Stub Tests Eliminated**: 1,765+ stubs completely removed\n- **SSOT Compliance**: 0% → 95%+ (Critical improvement)\n- **Execution Time**: Estimated 90%+ faster\n\n### Service-Specific Health\n| Service | Before | After | Improvement |\n|---------|--------|-------|-------------|\n| Auth Service | 89 files, 463 functions | 1 file, ~50 functions | 98.9% reduction |\n| Backend Core | 60 files, 484 functions | 1 file, ~60 functions | 98.3% reduction |\n| Agent System | 87 files, ~400 functions | 1 file, ~40 functions | 98.8% reduction |\n\n### Quality Metrics\n- **Coverage**: Maintained >90% critical path coverage\n- **Execution Speed**: <5 minutes for full suite (target achieved)\n- **Maintainability**: Single files vs hundreds per domain\n- **Clarity**: Organized by functional area, not arbitrary splits\n\n## Ongoing Monitoring\n\n### Daily Metrics\n- Test execution time\n- Pass/fail rates\n- Coverage percentages\n\n### Weekly Reviews\n- New test additions (prevent duplication)\n- Performance trend analysis\n- SSOT compliance monitoring\n\n### Monthly Audits\n- Comprehensive architecture review\n- Test effectiveness analysis\n- Documentation updates",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:291"
      ]
    },
    "# Test Maintenance Procedures\n\n## Regular Maintenance Tasks\n\n### Weekly\n- Run full test suite across all environments\n- Review test execution times for performance regressions\n- Check test coverage reports for gaps\n\n### Monthly  \n- Review and update environment-specific tests\n- Audit test categorization accuracy\n- Update test documentation for new features\n\n### Quarterly\n- Comprehensive test architecture review\n- Performance optimization review\n- Test infrastructure upgrades\n\n## Health Monitoring\n\n### Key Metrics to Track\n- Test execution time trends\n- Test failure rates by category\n- Coverage percentage by service\n- SSOT compliance score\n\n### Warning Signs\n- 🔴 Duplicate test functionality appearing\n- 🔴 Test execution time increasing significantly  \n- 🔴 Coverage decreasing without justification\n- 🔴 Stub tests being added\n\n## Remediation Procedures\n\n### When Adding New Tests\n1. Check if functionality already tested\n2. Add to appropriate comprehensive test file\n3. Use proper categorization and environment markers\n4. Justify any new mocks with comments\n\n### When Tests Fail\n1. Identify if it's a test issue or system issue\n2. Fix root cause, not just the test\n3. Update test if requirements changed\n4. Document learning in SPEC/learnings/\n\n### When Refactoring\n1. Ensure tests still cover all scenarios\n2. Update test descriptions if behavior changed\n3. Maintain test organization and clarity\n4. Run full test suite to verify": {
      "value": "# Test Maintenance Procedures\n\n## Regular Maintenance Tasks\n\n### Weekly\n- Run full test suite across all environments\n- Review test execution times for performance regressions\n- Check test coverage reports for gaps\n\n### Monthly  \n- Review and update environment-specific tests\n- Audit test categorization accuracy\n- Update test documentation for new features\n\n### Quarterly\n- Comprehensive test architecture review\n- Performance optimization review\n- Test infrastructure upgrades\n\n## Health Monitoring\n\n### Key Metrics to Track\n- Test execution time trends\n- Test failure rates by category\n- Coverage percentage by service\n- SSOT compliance score\n\n### Warning Signs\n- 🔴 Duplicate test functionality appearing\n- 🔴 Test execution time increasing significantly  \n- 🔴 Coverage decreasing without justification\n- 🔴 Stub tests being added\n\n## Remediation Procedures\n\n### When Adding New Tests\n1. Check if functionality already tested\n2. Add to appropriate comprehensive test file\n3. Use proper categorization and environment markers\n4. Justify any new mocks with comments\n\n### When Tests Fail\n1. Identify if it's a test issue or system issue\n2. Fix root cause, not just the test\n3. Update test if requirements changed\n4. Document learning in SPEC/learnings/\n\n### When Refactoring\n1. Ensure tests still cover all scenarios\n2. Update test descriptions if behavior changed\n3. Maintain test organization and clarity\n4. Run full test suite to verify",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:167"
      ]
    },
    "# Test Organization Audit Report\n\n## Executive Summary\n\nThe Netra codebase test organization analysis reveals opportunities for improvement in test structure and maintenance.\n\n## Current State Analysis\n\n### 1. Test File Distribution\n- **": {
      "value": "# Test Organization Audit Report\n\n## Executive Summary\n\nThe Netra codebase test organization analysis reveals opportunities for improvement in test structure and maintenance.\n\n## Current State Analysis\n\n### 1. Test File Distribution\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:149"
      ]
    },
    "# Test Overlap Analysis Report": {
      "value": "# Test Overlap Analysis Report",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:518"
      ]
    },
    "# Test Performance Guidelines\n\n## Performance Targets\n- **Unit tests**: <1ms per test average\n- **Integration tests**: <100ms per test average  \n- **E2E tests**: <5s per test average\n- **Full suite**: <5 minutes total\n\n## Optimization Strategies\n\n### Test Structure\n- Group related tests in classes\n- Use appropriate fixtures for setup/teardown\n- Minimize test file count (comprehensive files)\n- Cache expensive setup operations\n\n### Mock Strategy\n- Mock external services (APIs, databases) in unit tests\n- Use real services in integration tests where possible\n- Cache mock responses for repeated calls\n- Avoid excessive mock verification\n\n### Environment Optimization\n- Use test-specific configurations\n- Minimize database transactions\n- Use in-memory databases for unit tests\n- Parallel execution where safe\n\n## Monitoring Performance\n\n### Metrics to Track\n```bash\n# Test execution time breakdown\npython unified_test_runner.py --profile\n\n# Slowest tests identification\npython unified_test_runner.py --slowest 10\n\n# Parallel execution analysis\npython unified_test_runner.py --parallel --profile\n```\n\n### Performance Regression Detection\n- Baseline test execution times\n- Alert on >20% execution time increase\n- Weekly performance trend analysis\n- Automated performance regression prevention\n\n## Common Performance Issues\n- 🔴 **Database setup/teardown**: Use transactions, not full recreate\n- 🔴 **Network calls**: Mock external services in unit tests\n- 🔴 **File I/O**: Use in-memory alternatives where possible\n- 🔴 **Excessive fixtures**: Only use fixtures that provide value\n- 🔴 **Unoptimized queries**: Profile database interactions": {
      "value": "# Test Performance Guidelines\n\n## Performance Targets\n- **Unit tests**: <1ms per test average\n- **Integration tests**: <100ms per test average  \n- **E2E tests**: <5s per test average\n- **Full suite**: <5 minutes total\n\n## Optimization Strategies\n\n### Test Structure\n- Group related tests in classes\n- Use appropriate fixtures for setup/teardown\n- Minimize test file count (comprehensive files)\n- Cache expensive setup operations\n\n### Mock Strategy\n- Mock external services (APIs, databases) in unit tests\n- Use real services in integration tests where possible\n- Cache mock responses for repeated calls\n- Avoid excessive mock verification\n\n### Environment Optimization\n- Use test-specific configurations\n- Minimize database transactions\n- Use in-memory databases for unit tests\n- Parallel execution where safe\n\n## Monitoring Performance\n\n### Metrics to Track\n```bash\n# Test execution time breakdown\npython unified_test_runner.py --profile\n\n# Slowest tests identification\npython unified_test_runner.py --slowest 10\n\n# Parallel execution analysis\npython unified_test_runner.py --parallel --profile\n```\n\n### Performance Regression Detection\n- Baseline test execution times\n- Alert on >20% execution time increase\n- Weekly performance trend analysis\n- Automated performance regression prevention\n\n## Common Performance Issues\n- 🔴 **Database setup/teardown**: Use transactions, not full recreate\n- 🔴 **Network calls**: Mock external services in unit tests\n- 🔴 **File I/O**: Use in-memory alternatives where possible\n- 🔴 **Excessive fixtures**: Only use fixtures that provide value\n- 🔴 **Unoptimized queries**: Profile database interactions",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:224"
      ]
    },
    "# Test Size Compliance Report": {
      "value": "# Test Size Compliance Report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:453"
      ]
    },
    "# Test Size Violations Report": {
      "value": "# Test Size Violations Report",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:853"
      ]
    },
    "# Test Suite Performance Analysis Report": {
      "value": "# Test Suite Performance Analysis Report",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:271"
      ]
    },
    "# Test Writing Standards\n\n## File Organization\n- One comprehensive test file per service/domain\n- Tests grouped by functional area within files\n- Clear class-based organization for related tests\n\n## Naming Conventions\n- Test files: `test_{domain}_comprehensive.py`\n- Test classes: `Test{FunctionalArea}`\n- Test methods: `test_{specific_behavior}`\n\n## Code Quality Requirements\n- **Absolute imports only**: No relative imports (.) allowed\n- **Proper categorization**: Use @pytest.mark.{category}\n- **Environment awareness**: Use environment markers appropriately\n- **Clear assertions**: Descriptive assertion messages\n- **Mock justification**: Comment why mocks are necessary\n\n## Example Test Structure\n```python\nclass TestAuthenticationFlow:\n    \"\"\"Test authentication workflows.\"\"\"\n    \n    def test_successful_login_flow(self):\n        \"\"\"Test complete successful login workflow.\"\"\"\n        # Test implementation\n        \n    @pytest.mark.integration\n    def test_oauth_integration(self):\n        \"\"\"Test OAuth integration with real provider.\"\"\"\n        # Integration test implementation\n        \n    @env(\"staging\")\n    def test_staging_specific_behavior(self):\n        \"\"\"Test behavior specific to staging environment.\"\"\"\n        # Staging-specific test\n```\n\n## Anti-Patterns to Avoid\n- ❌ Stub tests with just `pass`\n- ❌ Duplicate test functionality\n- ❌ Relative imports\n- ❌ Tests without proper categorization\n- ❌ Mocks without justification comments": {
      "value": "# Test Writing Standards\n\n## File Organization\n- One comprehensive test file per service/domain\n- Tests grouped by functional area within files\n- Clear class-based organization for related tests\n\n## Naming Conventions\n- Test files: `test_{domain}_comprehensive.py`\n- Test classes: `Test{FunctionalArea}`\n- Test methods: `test_{specific_behavior}`\n\n## Code Quality Requirements\n- **Absolute imports only**: No relative imports (.) allowed\n- **Proper categorization**: Use @pytest.mark.{category}\n- **Environment awareness**: Use environment markers appropriately\n- **Clear assertions**: Descriptive assertion messages\n- **Mock justification**: Comment why mocks are necessary\n\n## Example Test Structure\n```python\nclass TestAuthenticationFlow:\n    \"\"\"Test authentication workflows.\"\"\"\n    \n    def test_successful_login_flow(self):\n        \"\"\"Test complete successful login workflow.\"\"\"\n        # Test implementation\n        \n    @pytest.mark.integration\n    def test_oauth_integration(self):\n        \"\"\"Test OAuth integration with real provider.\"\"\"\n        # Integration test implementation\n        \n    @env(\"staging\")\n    def test_staging_specific_behavior(self):\n        \"\"\"Test behavior specific to staging environment.\"\"\"\n        # Staging-specific test\n```\n\n## Anti-Patterns to Avoid\n- ❌ Stub tests with just `pass`\n- ❌ Duplicate test functionality\n- ❌ Relative imports\n- ❌ Tests without proper categorization\n- ❌ Mocks without justification comments",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:117"
      ]
    },
    "# Test implementation": {
      "value": "# Test implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:53"
      ]
    },
    "# Test stub": {
      "value": "# Test stub",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:52"
      ]
    },
    "# Thread model - creating mock for tests\nfrom unittest.mock import Mock\nThread = Mock": {
      "value": "# Thread model - creating mock for tests\nfrom unittest.mock import Mock\nThread = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:110"
      ]
    },
    "# User journey data - creating mocks\nfrom unittest.mock import Mock\nUserTestData = Mock()\nUserJourneyScenarios = Mock()": {
      "value": "# User journey data - creating mocks\nfrom unittest.mock import Mock\nUserTestData = Mock()\nUserJourneyScenarios = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:121"
      ]
    },
    "# UserFlowTestBase - using unittest.TestCase\nimport unittest\nfrom unittest.mock import Mock\nUserFlowTestBase = unittest.TestCase\nassert_successful_registration = Mock\nassert_plan_compliance = Mock": {
      "value": "# UserFlowTestBase - using unittest.TestCase\nimport unittest\nfrom unittest.mock import Mock\nUserFlowTestBase = unittest.TestCase\nassert_successful_registration = Mock\nassert_plan_compliance = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:103"
      ]
    },
    "# Workflow Status Verification Results\n\n## Script Functionality Verification\n\nThe verify_workflow_status.py script has been thoroughly tested and verified to work correctly.\n\n### Key Findings:\n\n1. **Argument Validation**: ✅ WORKING\n   - Properly validates required arguments\n   - Correctly handles invalid argument combinations\n   - Provides clear error messages\n\n2. **Authentication Handling**: ✅ WORKING\n   - Properly checks for GitHub token\n   - Handles missing tokens gracefully\n   - Attempts API calls and handles authentication failures\n\n3. **Error Handling**: ✅ WORKING\n   - Gracefully handles API errors\n   - Provides meaningful error messages\n   - Uses proper exit codes\n\n4. **Output Formatting**: ✅ WORKING\n   - Accepts both table and JSON output formats\n   - Processes arguments correctly\n\n5. **Help System**: ✅ WORKING\n   - Displays comprehensive help text\n   - Shows usage examples\n\n### Test Results:": {
      "value": "# Workflow Status Verification Results\n\n## Script Functionality Verification\n\nThe verify_workflow_status.py script has been thoroughly tested and verified to work correctly.\n\n### Key Findings:\n\n1. **Argument Validation**: ✅ WORKING\n   - Properly validates required arguments\n   - Correctly handles invalid argument combinations\n   - Provides clear error messages\n\n2. **Authentication Handling**: ✅ WORKING\n   - Properly checks for GitHub token\n   - Handles missing tokens gracefully\n   - Attempts API calls and handles authentication failures\n\n3. **Error Handling**: ✅ WORKING\n   - Gracefully handles API errors\n   - Provides meaningful error messages\n   - Uses proper exit codes\n\n4. **Output Formatting**: ✅ WORKING\n   - Accepts both table and JSON output formats\n   - Processes arguments correctly\n\n5. **Help System**: ✅ WORKING\n   - Displays comprehensive help text\n   - Shows usage examples\n\n### Test Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:214"
      ]
    },
    "# Workflow Status Verification Test Report\n\n## Summary\n- **Total Tests**:": {
      "value": "# Workflow Status Verification Test Report\n\n## Summary\n- **Total Tests**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:164"
      ]
    },
    "# time.sleep({}) # Optimized: use @fast_test decorator": {
      "value": "# time.sleep({}) # Optimized: use @fast_test decorator",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:178"
      ]
    },
    "#!/usr/bin/env python3\n\"\"\"Auto-generated analysis agent for test:": {
      "value": "#!/usr/bin/env python3\n\"\"\"Auto-generated analysis agent for test:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:128"
      ]
    },
    "##": {
      "value": "##",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:344"
      ]
    },
    "## Business Value Delivered\n- **Critical (Revenue)**:": {
      "value": "## Business Value Delivered\n- **Critical (Revenue)**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:496"
      ]
    },
    "## Cache Performance": {
      "value": "## Cache Performance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:172"
      ]
    },
    "## Category Analysis": {
      "value": "## Category Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:546"
      ]
    },
    "## Coverage by Category": {
      "value": "## Coverage by Category",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:493"
      ]
    },
    "## Coverage by Priority": {
      "value": "## Coverage by Priority",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:490"
      ]
    },
    "## Critical Optimization Recommendations": {
      "value": "## Critical Optimization Recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:290"
      ]
    },
    "## Current Status\n\n### Active Analysis Agents (": {
      "value": "## Current Status\n\n### Active Analysis Agents (",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:305"
      ]
    },
    "## Database Performance": {
      "value": "## Database Performance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "## Errors": {
      "value": "## Errors",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:207"
      ]
    },
    "## Exact Duplicates ⚠️": {
      "value": "## Exact Duplicates ⚠️",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:584"
      ]
    },
    "## Executive Summary": {
      "value": "## Executive Summary",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:521"
      ]
    },
    "## File Splits Required": {
      "value": "## File Splits Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:200"
      ]
    },
    "## Fix Report:": {
      "value": "## Fix Report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:383"
      ]
    },
    "## Fixes Applied": {
      "value": "## Fixes Applied",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:258"
      ]
    },
    "## Function Refactoring Required": {
      "value": "## Function Refactoring Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:207"
      ]
    },
    "## Highly Similar Tests": {
      "value": "## Highly Similar Tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:599"
      ]
    },
    "## Identified Issues\n\n### 1. Configuration Sprawl": {
      "value": "## Identified Issues\n\n### 1. Configuration Sprawl",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:201"
      ]
    },
    "## Immediate Fixes (Can be automated)": {
      "value": "## Immediate Fixes (Can be automated)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:194"
      ]
    },
    "## Impact Analysis": {
      "value": "## Impact Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:498"
      ]
    },
    "## Issues Found": {
      "value": "## Issues Found",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:246"
      ]
    },
    "## LLM API Usage": {
      "value": "## LLM API Usage",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "## Mock Reduction Required": {
      "value": "## Mock Reduction Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:216"
      ]
    },
    "## Most Problematic Files": {
      "value": "## Most Problematic Files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:316"
      ]
    },
    "## Performance Pattern Analysis": {
      "value": "## Performance Pattern Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:297"
      ]
    },
    "## Potentially Flaky Tests": {
      "value": "## Potentially Flaky Tests",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:309"
      ]
    },
    "## Quality Gate Scores": {
      "value": "## Quality Gate Scores",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:184"
      ]
    },
    "## Recommendations": {
      "value": "## Recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:534"
      ]
    },
    "## Recommendations\n\n### Immediate Actions (Priority 1)\n1. **Consolidate Configuration**: Reduce conftest.py files to service-level only\n2. **Standardize Naming**: Use consistent `test_*.py` pattern\n3. **Archive Legacy Tests**: Move or remove legacy test directories\n\n### Short-term Improvements (Priority 2)\n1. **Simplify Test Framework**: Reduce test_framework to essential components\n2. **Unify Test Runners**: Single test runner with clear options\n3. **Clear Test Levels**: Define and document 3-5 clear test levels\n\n### Long-term Goals (Priority 3)\n1. **Test Organization**: Group tests by domain/service\n2. **Performance Optimization**: Implement proper parallel execution\n3. **Documentation**: Single source of truth for test guidelines\n\n## Business Impact\n\n- **Development Velocity**: Test complexity impacts productivity\n- **Maintenance Burden**: Complex structure requires more maintenance\n- **Quality Assurance**: Disorganized tests reduce confidence\n\n## Next Steps\n\n1. Run this audit regularly to track improvements\n2. Prioritize fixes based on development impact\n3. Document decisions in SPEC/learnings/testing.xml": {
      "value": "## Recommendations\n\n### Immediate Actions (Priority 1)\n1. **Consolidate Configuration**: Reduce conftest.py files to service-level only\n2. **Standardize Naming**: Use consistent `test_*.py` pattern\n3. **Archive Legacy Tests**: Move or remove legacy test directories\n\n### Short-term Improvements (Priority 2)\n1. **Simplify Test Framework**: Reduce test_framework to essential components\n2. **Unify Test Runners**: Single test runner with clear options\n3. **Clear Test Levels**: Define and document 3-5 clear test levels\n\n### Long-term Goals (Priority 3)\n1. **Test Organization**: Group tests by domain/service\n2. **Performance Optimization**: Implement proper parallel execution\n3. **Documentation**: Single source of truth for test guidelines\n\n## Business Impact\n\n- **Development Velocity**: Test complexity impacts productivity\n- **Maintenance Burden**: Complex structure requires more maintenance\n- **Quality Assurance**: Disorganized tests reduce confidence\n\n## Next Steps\n\n1. Run this audit regularly to track improvements\n2. Prioritize fixes based on development impact\n3. Document decisions in SPEC/learnings/testing.xml",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:230"
      ]
    },
    "## Recommended Actions": {
      "value": "## Recommended Actions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:325"
      ]
    },
    "## Remaining Issues": {
      "value": "## Remaining Issues",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:269"
      ]
    },
    "## Splitting Suggestions": {
      "value": "## Splitting Suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:492"
      ]
    },
    "## Summary": {
      "value": "## Summary",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:457",
        "scripts/e2e_test_fixer.py:240",
        "scripts/optimize_test_performance.py:282"
      ]
    },
    "## Summary\n- Total unique failures found:": {
      "value": "## Summary\n- Total unique failures found:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:299"
      ]
    },
    "## Test Details by Category": {
      "value": "## Test Details by Category",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:193"
      ]
    },
    "## Test Results Summary": {
      "value": "## Test Results Summary",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:135"
      ]
    },
    "## Test Validation Status": {
      "value": "## Test Validation Status",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:898"
      ]
    },
    "## Tools Available": {
      "value": "## Tools Available",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:332"
      ]
    },
    "## Top 20 Worst Violators": {
      "value": "## Top 20 Worst Violators",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:876"
      ]
    },
    "## Violations": {
      "value": "## Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:466"
      ]
    },
    "## Violations by Type": {
      "value": "## Violations by Type",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:295"
      ]
    },
    "## Warnings": {
      "value": "## Warnings",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:217"
      ]
    },
    "## ⚠️ WARNING": {
      "value": "## ⚠️ WARNING",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:856"
      ]
    },
    "## 🎯 Priority Fix List": {
      "value": "## 🎯 Priority Fix List",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:546"
      ]
    },
    "## 📋 Violations by Category": {
      "value": "## 📋 Violations by Category",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:513"
      ]
    },
    "## 🛠️ Recommended Actions": {
      "value": "## 🛠️ Recommended Actions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:562"
      ]
    },
    "###": {
      "value": "###",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:559",
        "scripts/compliance/project_test_validator.py:355",
        "scripts/compliance/real_test_requirements_enforcer.py:521",
        "scripts/compliance/real_test_validator.py:298",
        "scripts/compliance/test_size_validator.py:496",
        "scripts/e2e_test_fixer.py:261",
        "scripts/optimize_test_performance.py:302",
        "scripts/optimize_test_performance.py:318",
        "scripts/real_service_test_metrics.py:198",
        "scripts/test_verify_workflow_status.py:179"
      ]
    },
    "### 2. Test Locations\n\nTop test directories by file count:": {
      "value": "### 2. Test Locations\n\nTop test directories by file count:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:167"
      ]
    },
    "### 2. Test Organization": {
      "value": "### 2. Test Organization",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:216"
      ]
    },
    "### 3. Organizational Patterns\n\n#### 3.1 Test Naming Conventions": {
      "value": "### 3. Organizational Patterns\n\n#### 3.1 Test Naming Conventions",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:178"
      ]
    },
    "### 4. Key Test Directories": {
      "value": "### 4. Key Test Directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:191"
      ]
    },
    "### Analysis": {
      "value": "### Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:388"
      ]
    },
    "### Completed Analyses (": {
      "value": "### Completed Analyses (",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:315"
      ]
    },
    "### Error": {
      "value": "### Error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:401"
      ]
    },
    "### File Size Violations": {
      "value": "### File Size Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:474"
      ]
    },
    "### Fix Log": {
      "value": "### Fix Log",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:404"
      ]
    },
    "### Function Size Violations": {
      "value": "### Function Size Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:483"
      ]
    },
    "### Known Failed Tests (": {
      "value": "### Known Failed Tests (",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:319"
      ]
    },
    "### Similarity Breakdown": {
      "value": "### Similarity Breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:527"
      ]
    },
    "### Strategy": {
      "value": "### Strategy",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:394"
      ]
    },
    "### Testing Dev-Minimal Configuration ###": {
      "value": "### Testing Dev-Minimal Configuration ###",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:152"
      ]
    },
    "### Testing Windows Configuration ###": {
      "value": "### Testing Windows Configuration ###",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:121"
      ]
    },
    "####": {
      "value": "####",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:322"
      ]
    },
    "#### 3.2 Test Structure\n- Test directories:": {
      "value": "#### 3.2 Test Structure\n- Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:187"
      ]
    },
    "$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdCmUiGD.9K.9qS": {
      "value": "$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdCmUiGD.9K.9qS",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:118",
        "scripts/test_seed_data.py:125",
        "scripts/test_seed_data.py:132"
      ]
    },
    "$500K+ ARR AT RISK": {
      "value": "$500K+ ARR AT RISK",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:645"
      ]
    },
    "$500K+ ARR PROTECTED": {
      "value": "$500K+ ARR PROTECTED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:645"
      ]
    },
    "%": {
      "value": "%",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:143",
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/business_value_test_index.py:747",
        "scripts/business_value_test_index.py:748",
        "scripts/business_value_test_index.py:749",
        "scripts/check_test_compliance.py:161",
        "scripts/compliance/test_violations_reporter.py:53",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/final_test_status_check.py:102"
      ]
    },
    "%\n\n## Test Results": {
      "value": "%\n\n## Test Results",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:171"
      ]
    },
    "%\n   \n📈 Coverage Summary:\n   Overall Coverage:": {
      "value": "%\n   \n📈 Coverage Summary:\n   Overall Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:292"
      ]
    },
    "%\n   HTML Report: htmlcov_supervisor/index.html\n   \n⏱️  Execution Time:": {
      "value": "%\n   HTML Report: htmlcov_supervisor/index.html\n   \n⏱️  Execution Time:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:295"
      ]
    },
    "%\n   • Monthly deployment overhead:": {
      "value": "%\n   • Monthly deployment overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:662"
      ]
    },
    "% (": {
      "value": "% (",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:207",
        "scripts/pytest_resource_monitor.py:216"
      ]
    },
    "% failure rate": {
      "value": "% failure rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:104",
        "scripts/test_dashboard.py:394",
        "scripts/test_execution_tracker.py:801"
      ]
    },
    "% goal": {
      "value": "% goal",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "% success rate)": {
      "value": "% success rate)",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:514",
        "scripts/staging_comprehensive_test.py:517",
        "scripts/staging_comprehensive_test.py:520"
      ]
    },
    "% to reach": {
      "value": "% to reach",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "% to target 85%": {
      "value": "% to target 85%",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:694"
      ]
    },
    "% today vs": {
      "value": "% today vs",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:74"
      ]
    },
    "% yesterday)": {
      "value": "% yesterday)",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:74"
      ]
    },
    "%\"": {
      "value": "%\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:468",
        "scripts/test_execution_tracker.py:549"
      ]
    },
    "%(asctime)s - %(levelname)s - %(message)s": {
      "value": "%(asctime)s - %(levelname)s - %(message)s",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:19",
        "scripts/auto_fix_test_sizes.py:29",
        "scripts/auto_fix_test_violations.py:43",
        "scripts/fix_test_utils_imports.py:19",
        "scripts/frontend_iterative_test_runner.py:44",
        "scripts/pytest_resource_monitor.py:23",
        "scripts/test_cold_start_e2e.py:38",
        "scripts/test_service_health_simple.py:20",
        "scripts/test_websocket_middleware.py:14"
      ]
    },
    "%(asctime)s - %(name)s - %(levelname)s - %(message)s": {
      "value": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:21",
        "auth_service/test_staging_db_connection.py:26",
        "auth_service/test_url_construction.py:22",
        "scripts/migrate_test_environment_access.py:34",
        "scripts/test_backend_optimized.py:47",
        "scripts/test_clickhouse_startup_fix.py:406",
        "scripts/test_coordination_fixes.py:25",
        "scripts/test_service_health.py:20",
        "scripts/test_service_orchestration.py:33",
        "scripts/test_staging_websocket_comprehensive.py:37"
      ]
    },
    "%(levelname)s: %(message)s": {
      "value": "%(levelname)s: %(message)s",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:19"
      ]
    },
    "%)": {
      "value": "%)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:751",
        "scripts/staging_comprehensive_test.py:471",
        "scripts/test_example_message_flow.py:341",
        "scripts/test_execution_tracker.py:731"
      ]
    },
    "%)\n\n### Conclusion:\nThe script is **PRODUCTION READY** and properly handles:\n- GitHub API connectivity (when valid token provided)\n- Argument validation and error handling\n- Multiple output formats\n- Workflow status verification\n\nAll \"failures\" in testing are **expected behaviors** when using invalid tokens or non-existent repositories.\nThe script correctly identifies these scenarios and reports appropriate errors.": {
      "value": "%)\n\n### Conclusion:\nThe script is **PRODUCTION READY** and properly handles:\n- GitHub API connectivity (when valid token provided)\n- Argument validation and error handling\n- Multiple output formats\n- Workflow status verification\n\nAll \"failures\" in testing are **expected behaviors** when using invalid tokens or non-existent repositories.\nThe script correctly identifies these scenarios and reports appropriate errors.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:246"
      ]
    },
    "%, CPU": {
      "value": "%, CPU",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:339"
      ]
    },
    "%, target: 75%)": {
      "value": "%, target: 75%)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:701"
      ]
    },
    "%</div>\n                <div class=\"metric-label\">Avg Failure Rate</div>\n            </div>\n            <div class=\"metric\">\n                <div class=\"metric-value\">": {
      "value": "%</div>\n                <div class=\"metric-label\">Avg Failure Rate</div>\n            </div>\n            <div class=\"metric\">\n                <div class=\"metric-value\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:291"
      ]
    },
    "%</td>\n                <td>": {
      "value": "%</td>\n                <td>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:322",
        "scripts/test_dashboard.py:323"
      ]
    },
    "%H:%M:%S": {
      "value": "%H:%M:%S",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:72",
        "scripts/test_failure_analyzer.py:369"
      ]
    },
    "%Y%m%d_%H%M%S": {
      "value": "%Y%m%d_%H%M%S",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:753",
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:372",
        "scripts/pytest_resource_monitor.py:288",
        "scripts/run_all_test_categories.py:120",
        "scripts/test_comprehensive_scanner.py:202",
        "scripts/test_failure_tracker.py:21",
        "scripts/test_staging_deployment.py:224"
      ]
    },
    "%Y-%m-%d %H:%M": {
      "value": "%Y-%m-%d %H:%M",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:249"
      ]
    },
    "%Y-%m-%d %H:%M:%S": {
      "value": "%Y-%m-%d %H:%M:%S",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:854",
        "scripts/autonomous_review/test_generator.py:99",
        "scripts/optimize_test_performance.py:272",
        "scripts/test_chat_errors.py:9",
        "scripts/test_cors.py:264",
        "scripts/test_cors_implementation.py:205",
        "scripts/test_cors_implementation.py:238",
        "scripts/test_dashboard.py:269",
        "scripts/test_execution_tracker.py:709"
      ]
    },
    "'": {
      "value": "'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:143",
        "auth_service/tests/utils/assertion_helpers.py:170",
        "auth_service/tests/utils/assertion_helpers.py:264",
        "auth_service/tests/utils/assertion_helpers.py:271",
        "scripts/align_test_imports.py:381",
        "scripts/align_test_imports.py:382",
        "scripts/setup_test_environment.py:218",
        "scripts/standardize_l3_test_names.py:64",
        "scripts/standardize_l3_test_names.py:64",
        "scripts/standardize_l3_test_names.py:66"
      ]
    },
    "' != auth_service='": {
      "value": "' != auth_service='",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:394"
      ]
    },
    "' (compatibility field)": {
      "value": "' (compatibility field)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:87"
      ]
    },
    "' (correct field)": {
      "value": "' (correct field)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:86"
      ]
    },
    "' (current:": {
      "value": "' (current:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711"
      ]
    },
    "' crashed:": {
      "value": "' crashed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:358"
      ]
    },
    "' defined in test file": {
      "value": "' defined in test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:175",
        "scripts/compliance/project_test_validator.py:187",
        "scripts/compliance/real_test_requirements_enforcer.py:248",
        "scripts/compliance/real_test_requirements_enforcer.py:265",
        "scripts/compliance/real_test_validator.py:128",
        "scripts/compliance/real_test_validator.py:139"
      ]
    },
    "' does not exist": {
      "value": "' does not exist",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:241"
      ]
    },
    "' exceeds": {
      "value": "' exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "' exposed in error message": {
      "value": "' exposed in error message",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:371"
      ]
    },
    "' failed with exception:": {
      "value": "' failed with exception:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:234"
      ]
    },
    "' failed:": {
      "value": "' failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:330"
      ]
    },
    "' has": {
      "value": "' has",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459",
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:249",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_validator.py:213",
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    "' has high average complexity (": {
      "value": "' has high average complexity (",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465"
      ]
    },
    "' in URL:": {
      "value": "' in URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:182"
      ]
    },
    "' into smaller, focused test functions": {
      "value": "' into smaller, focused test functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:331"
      ]
    },
    "' not found in test system.": {
      "value": "' not found in test system.",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:158"
      ]
    },
    "' or '*', got '": {
      "value": "' or '*', got '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:83",
        "scripts/test_cors_implementation.py:128"
      ]
    },
    "' should be rejected": {
      "value": "' should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:183"
      ]
    },
    "' should be valid": {
      "value": "' should be valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:155"
      ]
    },
    "' spans": {
      "value": "' spans",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:448"
      ]
    },
    "' timed out after": {
      "value": "' timed out after",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:42"
      ]
    },
    "' to a shared fixture or use real components": {
      "value": "' to a shared fixture or use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:267"
      ]
    },
    "' to a shared test utility module or use real components": {
      "value": "' to a shared test utility module or use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:250"
      ]
    },
    "' using": {
      "value": "' using",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:366"
      ]
    },
    "'\")\n        sys.exit(0)\nexcept Exception as e:\n    print(f\"ERROR:": {
      "value": "'\")\n        sys.exit(0)\nexcept Exception as e:\n    print(f\"ERROR:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:268"
      ]
    },
    "'''": {
      "value": "'''",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:156",
        "scripts/compliance/project_test_validator.py:235",
        "scripts/compliance/project_test_validator.py:236",
        "scripts/compliance/real_test_requirements_enforcer.py:312",
        "scripts/compliance/real_test_validator.py:197",
        "scripts/compliance/test_fixer.py:176",
        "scripts/fix_all_test_issues.py:142",
        "scripts/fix_test_syntax_errors.py:84",
        "scripts/fix_test_syntax_errors.py:88"
      ]
    },
    "', got '": {
      "value": "', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:170",
        "auth_service/tests/utils/assertion_helpers.py:264",
        "auth_service/tests/utils/assertion_helpers.py:271",
        "scripts/test_data_pipeline_simple.py:87"
      ]
    },
    "':": {
      "value": "':",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:48",
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "'; DROP TABLE users; --": {
      "value": "'; DROP TABLE users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:336"
      ]
    },
    "'; SELECT * FROM users; --": {
      "value": "'; SELECT * FROM users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:339"
      ]
    },
    "(": {
      "value": "(",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:385",
        "scripts/auto_fix_test_sizes.py:259",
        "scripts/auto_fix_test_sizes.py:445",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/auto_fix_test_violations.py:622",
        "scripts/auto_fix_test_violations.py:806",
        "scripts/business_value_test_index.py:750",
        "scripts/compliance/fake_test_scanner.py:285",
        "scripts/compliance/project_test_validator.py:355",
        "scripts/compliance/real_test_requirements_enforcer.py:521"
      ]
    },
    "()": {
      "value": "()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:291"
      ]
    },
    "() -": {
      "value": "() -",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:123"
      ]
    },
    "():": {
      "value": "():",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:570",
        "scripts/auto_fix_test_sizes.py:572"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Create item - test stub implementation.\"\"\"\n    return {\"status\": \"created\", \"id\": \"new_id\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Create item - test stub implementation.\"\"\"\n    return {\"status\": \"created\", \"id\": \"new_id\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:120"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Delete item - test stub implementation.\"\"\"\n    return {\"status\": \"deleted\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Delete item - test stub implementation.\"\"\"\n    return {\"status\": \"deleted\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:129"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Get all items - test stub implementation.\"\"\"\n    return []": {
      "value": "(*args, **kwargs):\n    \"\"\"Get all items - test stub implementation.\"\"\"\n    return []",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:102"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Process data - test stub implementation.\"\"\"\n    return {\"status\": \"processed\", \"result\": \"success\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Process data - test stub implementation.\"\"\"\n    return {\"status\": \"processed\", \"result\": \"success\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:147"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Stream data - test stub implementation.\"\"\"\n    for i in range(3):\n        yield f\"Chunk {i+1}\"": {
      "value": "(*args, **kwargs):\n    \"\"\"Stream data - test stub implementation.\"\"\"\n    for i in range(3):\n        yield f\"Chunk {i+1}\"",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:154"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Test stub implementation for": {
      "value": "(*args, **kwargs):\n    \"\"\"Test stub implementation for",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:164"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Update item - test stub implementation.\"\"\"\n    return {\"status\": \"updated\", \"id\": kwargs.get('id', '1')}": {
      "value": "(*args, **kwargs):\n    \"\"\"Update item - test stub implementation.\"\"\"\n    return {\"status\": \"updated\", \"id\": kwargs.get('id', '1')}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:111"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Verify/validate - test stub implementation.\"\"\"\n    return True": {
      "value": "(*args, **kwargs):\n    \"\"\"Verify/validate - test stub implementation.\"\"\"\n    return True",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:138"
      ]
    },
    "(?:# Add project root to path\\n)?import sys\\nfrom pathlib import Path\\nPROJECT_ROOT = Path\\(__file__\\)\\.parent\\.parent\\.parent\\nif str\\(PROJECT_ROOT\\) not in sys\\.path:\\n    sys\\.path\\.insert\\(0, str\\(PROJECT_ROOT\\)\\)\\n\\n?\\n?": {
      "value": "(?:# Add project root to path\\n)?import sys\\nfrom pathlib import Path\\nPROJECT_ROOT = Path\\(__file__\\)\\.parent\\.parent\\.parent\\nif str\\(PROJECT_ROOT\\) not in sys\\.path:\\n    sys\\.path\\.insert\\(0, str\\(PROJECT_ROOT\\)\\)\\n\\n?\\n?",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:19"
      ]
    },
    "(?:async )?def (test_\\w+)": {
      "value": "(?:async )?def (test_\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:156"
      ]
    },
    "(?:test|it|describe)\\s*\\(\\s*['\\\"`]([^'\\\"`]+)['\\\"`]": {
      "value": "(?:test|it|describe)\\s*\\(\\s*['\\\"`]([^'\\\"`]+)['\\\"`]",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:318"
      ]
    },
    "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(async def)": {
      "value": "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(async def)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:59",
        "scripts/batch_fix_and_test.py:29",
        "scripts/simple_test_fix_loop.py:53"
      ]
    },
    "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(def)": {
      "value": "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(def)",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:35"
      ]
    },
    "(@pytest\\.mark\\.real_llm.*?\\n)(class |def |async def )": {
      "value": "(@pytest\\.mark\\.real_llm.*?\\n)(class |def |async def )",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:187"
      ]
    },
    "(Address when convenient)": {
      "value": "(Address when convenient)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:496"
      ]
    },
    "(JS/TS)": {
      "value": "(JS/TS)",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:56"
      ]
    },
    "(Must fix immediately)": {
      "value": "(Must fix immediately)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:494"
      ]
    },
    "(OAuth, LLM APIs, monitoring, etc.)": {
      "value": "(OAuth, LLM APIs, monitoring, etc.)",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:104"
      ]
    },
    "(PID:": {
      "value": "(PID:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:117"
      ]
    },
    "(Priority:": {
      "value": "(Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:179"
      ]
    },
    "(Score:": {
      "value": "(Score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:755"
      ]
    },
    "(Should fix soon)": {
      "value": "(Should fix soon)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:495"
      ]
    },
    "([\"\\'])[^\"\\']+([\"\\'])": {
      "value": "([\"\\'])[^\"\\']+([\"\\'])",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:110"
      ]
    },
    "([0-9.]+)\\s*([A-Za-z]*)": {
      "value": "([0-9.]+)\\s*([A-Za-z]*)",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:176"
      ]
    },
    "([\\'\"][^\\'\\\"]+[\\'\"])\\s+in\\s+os\\.environ": {
      "value": "([\\'\"][^\\'\\\"]+[\\'\"])\\s+in\\s+os\\.environ",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:76"
      ]
    },
    "([\\w/\\\\\\.]+::\\S+)": {
      "value": "([\\w/\\\\\\.]+::\\S+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:143"
      ]
    },
    "([\\w/\\\\\\.]+::\\S+)\\s+ERROR": {
      "value": "([\\w/\\\\\\.]+::\\S+)\\s+ERROR",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:49"
      ]
    },
    "([\\w/\\\\\\.]+::\\S+)\\s+FAILED": {
      "value": "([\\w/\\\\\\.]+::\\S+)\\s+FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:41"
      ]
    },
    "([^\\s]+\\.py)": {
      "value": "([^\\s]+\\.py)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:37"
      ]
    },
    "(\\d+) failed.*(\\d+) passed": {
      "value": "(\\d+) failed.*(\\d+) passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:150"
      ]
    },
    "(\\d+)\\s+(failed|passed|total)": {
      "value": "(\\d+)\\s+(failed|passed|total)",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:235"
      ]
    },
    "(\\d+)\\s+passed.*?(\\d+)\\s+total": {
      "value": "(\\d+)\\s+passed.*?(\\d+)\\s+total",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:107"
      ]
    },
    "(\\s+)# Migrated from patch\\.dict\\(os\\.environ[^:]+:\\n(\\s+env = get_env\\(\\)[^:]+:)": {
      "value": "(\\s+)# Migrated from patch\\.dict\\(os\\.environ[^:]+:\\n(\\s+env = get_env\\(\\)[^:]+:)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:227"
      ]
    },
    "(\\s+)def __init__\\(self\\):\\s*\\n(\\s+)super\\(\\).__init__\\(\\)\\s*\\n": {
      "value": "(\\s+)def __init__\\(self\\):\\s*\\n(\\s+)super\\(\\).__init__\\(\\)\\s*\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:22"
      ]
    },
    "(\\w+):\\d+ refused": {
      "value": "(\\w+):\\d+ refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:149"
      ]
    },
    "(\\w+)\\.return_value = (.+)": {
      "value": "(\\w+)\\.return_value = (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:325"
      ]
    },
    "(\\w+)\\.side_effect = (.+)": {
      "value": "(\\w+)\\.side_effect = (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:326"
      ]
    },
    "(\\w+)\\s*\\(": {
      "value": "(\\w+)\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:220"
      ]
    },
    "(^|\\n)(async def": {
      "value": "(^|\\n)(async def",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:102"
      ]
    },
    "(^|\\n)(class": {
      "value": "(^|\\n)(class",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:65"
      ]
    },
    "(__tests__.*?\\.test\\.tsx)": {
      "value": "(__tests__.*?\\.test\\.tsx)",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:597"
      ]
    },
    "(async\\s+)?def\\s+(test_\\w+)\\s*\\([^)]*\\):": {
      "value": "(async\\s+)?def\\s+(test_\\w+)\\s*\\([^)]*\\):",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:20"
      ]
    },
    "(class TestSyntaxFix.*?\\n)(.*?)(?=\\nclass |\\Z)": {
      "value": "(class TestSyntaxFix.*?\\n)(.*?)(?=\\nclass |\\Z)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:15"
      ]
    },
    "(currently": {
      "value": "(currently",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:362"
      ]
    },
    "(end-to-end tests)": {
      "value": "(end-to-end tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:372"
      ]
    },
    "(exception)": {
      "value": "(exception)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:259"
      ]
    },
    "(excluding dependencies)": {
      "value": "(excluding dependencies)",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:277"
      ]
    },
    "(expected": {
      "value": "(expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:101"
      ]
    },
    "(expected 'default')": {
      "value": "(expected 'default')",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:125",
        "scripts/test_staging_clickhouse.py:132"
      ]
    },
    "(expected 8443 for HTTPS)": {
      "value": "(expected 8443 for HTTPS)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:118"
      ]
    },
    "(expected format: resource:action)": {
      "value": "(expected format: resource:action)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:217"
      ]
    },
    "(expected xedvrr4c3r.us-central1.gcp.clickhouse.cloud)": {
      "value": "(expected xedvrr4c3r.us-central1.gcp.clickhouse.cloud)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:111"
      ]
    },
    "(expected:": {
      "value": "(expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:47",
        "scripts/test/verify_test_ports.py:51",
        "scripts/test/verify_test_ports.py:60",
        "scripts/test_docker_websocket_fix.py:266",
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "(global\\.mockStore\\s*=\\s*{[^}]*)": {
      "value": "(global\\.mockStore\\s*=\\s*{[^}]*)",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:628"
      ]
    },
    "(hidden)": {
      "value": "(hidden)",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:95"
      ]
    },
    "(in progress)": {
      "value": "(in progress)",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:313"
      ]
    },
    "(integration tests)": {
      "value": "(integration tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:201",
        "scripts/compliance/test_size_validator.py:371"
      ]
    },
    "(length:": {
      "value": "(length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:159",
        "scripts/test_staging_auth.py:175",
        "scripts/test_staging_auth.py:189"
      ]
    },
    "(matched:": {
      "value": "(matched:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:40"
      ]
    },
    "(mockStore.exportConversation as jest.Mock).mock.calls": {
      "value": "(mockStore.exportConversation as jest.Mock).mock.calls",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:622"
      ]
    },
    "(self):": {
      "value": "(self):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:285"
      ]
    },
    "(self):\n        \"\"\"Test": {
      "value": "(self):\n        \"\"\"Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:215"
      ]
    },
    "(shared utilities)": {
      "value": "(shared utilities)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:202"
      ]
    },
    "(similarity:": {
      "value": "(similarity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608"
      ]
    },
    "(test_\\w+\\.py(::\\w+)*)": {
      "value": "(test_\\w+\\.py(::\\w+)*)",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:269"
      ]
    },
    "(this may be expected in test)": {
      "value": "(this may be expected in test)",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:121"
      ]
    },
    "(timeout=": {
      "value": "(timeout=",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:169",
        "scripts/test_websocket_chat_simple.py:273"
      ]
    },
    "(timestamp:": {
      "value": "(timestamp:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:75",
        "scripts/test_staging_auth.py:76",
        "scripts/test_staging_auth.py:77"
      ]
    },
    "(too large)": {
      "value": "(too large)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:172"
      ]
    },
    "(under 300 line limit)": {
      "value": "(under 300 line limit)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:152"
      ]
    },
    "(unit tests)": {
      "value": "(unit tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:200",
        "scripts/compliance/test_size_validator.py:370"
      ]
    },
    "(~": {
      "value": "(~",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    ")": {
      "value": ")",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:102",
        "scripts/align_test_imports.py:386",
        "scripts/align_test_imports.py:388",
        "scripts/analyze_test_mocks.py:172",
        "scripts/analyze_test_mocks.py:179",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608",
        "scripts/auto_fix_test_violations.py:806",
        "scripts/automated_test_fix_loop.py:113"
      ]
    },
    ")\n        env = get_env()\n        env.enable_isolation()\n        original_state = env.get_all()\n        env.update(": {
      "value": ")\n        env = get_env()\n        env.enable_isolation()\n        original_state = env.get_all()\n        env.update(",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:208"
      ]
    },
    ") -": {
      "value": ") -",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:71",
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    ") - Indicators:": {
      "value": ") - Indicators:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:321"
      ]
    },
    ") - consider wildcards or dynamic validation": {
      "value": ") - consider wildcards or dynamic validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:336"
      ]
    },
    ") and AUTH_PORT (": {
      "value": ") and AUTH_PORT (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:66"
      ]
    },
    ") and URL port (": {
      "value": ") and URL port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:104"
      ]
    },
    ") does not match binding port (": {
      "value": ") does not match binding port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:171",
        "auth_service/tests/test_auth_port_configuration.py:236"
      ]
    },
    ") does not match expected port (": {
      "value": ") does not match expected port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:97"
      ]
    },
    ") in": {
      "value": ") in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:366"
      ]
    },
    ") indicates no circuit breaker": {
      "value": ") indicates no circuit breaker",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:302"
      ]
    },
    ") indicates poor overload handling": {
      "value": ") indicates poor overload handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:303"
      ]
    },
    ") must be consistent": {
      "value": ") must be consistent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:66"
      ]
    },
    ") must match": {
      "value": ") must match",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:104"
      ]
    },
    ") should match PORT env var (": {
      "value": ") should match PORT env var (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:365"
      ]
    },
    ") without complete success": {
      "value": ") without complete success",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:892"
      ]
    },
    "), waiting to spawn agent for": {
      "value": "), waiting to spawn agent for",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:99"
      ]
    },
    "). Consider breaking down complex tests into simpler units.": {
      "value": "). Consider breaking down complex tests into simpler units.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465"
      ]
    },
    "). Generated URL:": {
      "value": "). Generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:171"
      ]
    },
    "). This inconsistency prevents startup completion.": {
      "value": "). This inconsistency prevents startup completion.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:97"
      ]
    },
    "). This prevents successful service communication. URL:": {
      "value": "). This prevents successful service communication. URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:236"
      ]
    },
    ")...": {
      "value": ")...",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    "):": {
      "value": "):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:322",
        "scripts/frontend_iterative_test_runner.py:771",
        "scripts/setup_test_environment.py:289",
        "scripts/setup_test_environment.py:296",
        "scripts/setup_test_environment.py:303",
        "scripts/staging_comprehensive_test.py:480",
        "scripts/test_secret_manager_builder_critical.py:221",
        "scripts/test_secret_manager_builder_critical.py:224",
        "scripts/test_secret_manager_builder_critical.py:227",
        "scripts/test_workflows_with_act.py:338"
      ]
    },
    "): Creates confusion": {
      "value": "): Creates confusion",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:211"
      ]
    },
    "): Overlapping functionality": {
      "value": "): Overlapping functionality",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:214"
      ]
    },
    "): Should be consolidated": {
      "value": "): Should be consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:208"
      ]
    },
    ")[/red]": {
      "value": ")[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:114",
        "scripts/test_oauth_local.py:129"
      ]
    },
    "*": {
      "value": "*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:112",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:123",
        "scripts/apply_fast_test_decorators.py:161",
        "scripts/check_test_compliance.py:177",
        "scripts/compliance/real_test_linter.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:530",
        "scripts/remove_test_stubs.py:113",
        "scripts/test_backend_optimized.py:367",
        "scripts/test_backend_ORIGINAL.py:484",
        "scripts/test_cors.py:214"
      ]
    },
    "* netra_pr-* (PR databases)": {
      "value": "* netra_pr-* (PR databases)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:101"
      ]
    },
    "* netra_pr_branch_* (PR databases)": {
      "value": "* netra_pr_branch_* (PR databases)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:100"
      ]
    },
    "* postgres (system database)": {
      "value": "* postgres (system database)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:99"
      ]
    },
    "**": {
      "value": "**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:358",
        "scripts/compliance/real_test_requirements_enforcer.py:526",
        "scripts/compliance/real_test_requirements_enforcer.py:526",
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:302"
      ]
    },
    "** (": {
      "value": "** (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:318"
      ]
    },
    "** -": {
      "value": "** -",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:302"
      ]
    },
    "***": {
      "value": "***",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:131",
        "scripts/test_config_loading.py:52",
        "scripts/test_oauth_local.py:79",
        "scripts/test_secret_manager_builder_critical.py:546",
        "scripts/test_staging_auth.py:158",
        "scripts/test_staging_auth.py:174",
        "scripts/test_staging_auth.py:188",
        "scripts/test_staging_clickhouse.py:76"
      ]
    },
    "*** ALL WEBSOCKET TESTS PASSED! ***": {
      "value": "*** ALL WEBSOCKET TESTS PASSED! ***",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:310"
      ]
    },
    "**/": {
      "value": "**/",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:112",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:123",
        "scripts/test_frontend_ORIGINAL.py:178",
        "scripts/test_frontend_ORIGINAL.py:180",
        "scripts/test_frontend_ORIGINAL.py:182"
      ]
    },
    "**/*.cy.ts": {
      "value": "**/*.cy.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:184"
      ]
    },
    "**/*.py": {
      "value": "**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:168",
        "scripts/business_value_test_index.py:181",
        "scripts/fix_e2e_test_imports.py:128",
        "scripts/fix_test_import_errors.py:146",
        "scripts/fix_test_syntax_errors.py:234",
        "scripts/standardize_l3_test_names.py:74"
      ]
    },
    "**/*.test.js": {
      "value": "**/*.test.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:105"
      ]
    },
    "**/*.test.jsx": {
      "value": "**/*.test.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:106"
      ]
    },
    "**/*.test.ts": {
      "value": "**/*.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:107"
      ]
    },
    "**/*.test.ts*": {
      "value": "**/*.test.ts*",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:195"
      ]
    },
    "**/*.test.tsx": {
      "value": "**/*.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:108"
      ]
    },
    "**/*_l3.py": {
      "value": "**/*_l3.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:22"
      ]
    },
    "**/*_test.py": {
      "value": "**/*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:73",
        "scripts/compliance/real_test_requirements_enforcer.py:98",
        "scripts/compliance/real_test_validator.py:46",
        "scripts/compliance/test_limits_checker.py:58"
      ]
    },
    "**/__tests__/**/*.js": {
      "value": "**/__tests__/**/*.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:109"
      ]
    },
    "**/__tests__/**/*.jsx": {
      "value": "**/__tests__/**/*.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:110"
      ]
    },
    "**/__tests__/**/*.ts": {
      "value": "**/__tests__/**/*.ts",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:111"
      ]
    },
    "**/__tests__/**/*.tsx": {
      "value": "**/__tests__/**/*.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:112"
      ]
    },
    "**/__tests__/@(components|hooks|store|services|lib|utils)/**/*.test.[jt]s?(x)": {
      "value": "**/__tests__/@(components|hooks|store|services|lib|utils)/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:190",
        "scripts/test_frontend_simple.py:37"
      ]
    },
    "**/__tests__/integration/**/*.test.[jt]s?(x)": {
      "value": "**/__tests__/integration/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "**/__tests__/integration/critical-integration.test.tsx": {
      "value": "**/__tests__/integration/critical-integration.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "**/__tests__/system/startup.test.tsx": {
      "value": "**/__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:36"
      ]
    },
    "**/conftest.py": {
      "value": "**/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:100"
      ]
    },
    "**/e2e/**": {
      "value": "**/e2e/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:255"
      ]
    },
    "**/integration/**": {
      "value": "**/integration/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:250"
      ]
    },
    "**/jest.setup.js": {
      "value": "**/jest.setup.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:113"
      ]
    },
    "**/performance/**": {
      "value": "**/performance/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:260"
      ]
    },
    "**/security/**": {
      "value": "**/security/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:265"
      ]
    },
    "**/setupTests.js": {
      "value": "**/setupTests.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:114"
      ]
    },
    "**/test*.py": {
      "value": "**/test*.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:84"
      ]
    },
    "**/test_*.py": {
      "value": "**/test_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:72",
        "scripts/compliance/fake_test_scanner.py:110",
        "scripts/compliance/project_test_validator.py:73",
        "scripts/compliance/real_test_requirements_enforcer.py:97",
        "scripts/compliance/real_test_validator.py:45",
        "scripts/compliance/test_limits_checker.py:57"
      ]
    },
    "**/tests/**/*.py": {
      "value": "**/tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:99",
        "scripts/compliance/real_test_validator.py:47"
      ]
    },
    "**/unit/**": {
      "value": "**/unit/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:245"
      ]
    },
    "**:": {
      "value": "**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:293"
      ]
    },
    "**Description**:": {
      "value": "**Description**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:180"
      ]
    },
    "**Duration:**": {
      "value": "**Duration:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:125"
      ]
    },
    "**Error**:\n```": {
      "value": "**Error**:\n```",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:190"
      ]
    },
    "**Exit Code**:": {
      "value": "**Exit Code**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:181"
      ]
    },
    "**Generated:**": {
      "value": "**Generated:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:124"
      ]
    },
    "**IMPORTANT:** Manual refactoring is strongly recommended over automatic fixes.": {
      "value": "**IMPORTANT:** Manual refactoring is strongly recommended over automatic fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:858"
      ]
    },
    "**Initiative**: Netra Apex Test Remediation (Iterations 81-100)\n**Status**: ✅ COMPLETE - Production Ready": {
      "value": "**Initiative**: Netra Apex Test Remediation (Iterations 81-100)\n**Status**: ✅ COMPLETE - Production Ready",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:484"
      ]
    },
    "**Output**:\n```": {
      "value": "**Output**:\n```",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:187"
      ]
    },
    "**Top Overlaps:**": {
      "value": "**Top Overlaps:**",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:575"
      ]
    },
    "**Total LLM Cost:** $": {
      "value": "**Total LLM Cost:** $",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    "**Total Violations:**": {
      "value": "**Total Violations:**",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:866",
        "scripts/compliance/project_test_validator.py:331",
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/compliance/real_test_validator.py:287"
      ]
    },
    "**⚠️ WARNING:** Some tests are already failing. Fix these before refactoring!": {
      "value": "**⚠️ WARNING:** Some tests are already failing. Fix these before refactoring!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:906"
      ]
    },
    "*.js": {
      "value": "*.js",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.json": {
      "value": "*.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:178"
      ]
    },
    "*.jsx": {
      "value": "*.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.py": {
      "value": "*.py",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "auth_service/tests/test_all_imports.py:30",
        "scripts/autonomous_review/test_reviewer.py:74",
        "scripts/autonomous_review/test_reviewer.py:187",
        "scripts/batch_fix_and_test.py:41",
        "scripts/batch_fix_and_test.py:42",
        "scripts/batch_fix_and_test.py:43",
        "scripts/compliance/demo_test_size_enforcement.py:74",
        "scripts/compliance/project_test_validator.py:84"
      ]
    },
    "*.spec.*": {
      "value": "*.spec.*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*.spec.ts": {
      "value": "*.spec.ts",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.spec.tsx": {
      "value": "*.spec.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.*": {
      "value": "*.test.*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*.test.js": {
      "value": "*.test.js",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.jsx": {
      "value": "*.test.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.ts": {
      "value": "*.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.ts*": {
      "value": "*.test.ts*",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:141"
      ]
    },
    "*.test.tsx": {
      "value": "*.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.ts": {
      "value": "*.ts",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.tsx": {
      "value": "*.tsx",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/autonomous_review/test_reviewer.py:188",
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.yml": {
      "value": "*.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:99",
        "scripts/test_workflows_with_act.py:103"
      ]
    },
    "*/test_*_unit.py": {
      "value": "*/test_*_unit.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:87"
      ]
    },
    "*/test_*perf*.py": {
      "value": "*/test_*perf*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:122"
      ]
    },
    "*/test_*security*.py": {
      "value": "*/test_*security*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:127"
      ]
    },
    "*/test_*websocket*.py": {
      "value": "*/test_*websocket*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:117"
      ]
    },
    "*/test_api_*.py": {
      "value": "*/test_api_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:112"
      ]
    },
    "*/tests/integration": {
      "value": "*/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:92"
      ]
    },
    "*/tests/smoke": {
      "value": "*/tests/smoke",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:107"
      ]
    },
    "*/tests/unit": {
      "value": "*/tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:87"
      ]
    },
    "*_test.py": {
      "value": "*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:71",
        "scripts/autonomous_review/test_reviewer.py:140"
      ]
    },
    "*test*.py": {
      "value": "*test*.py",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*test*.ts": {
      "value": "*test*.ts",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*test.py": {
      "value": "*test.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:46"
      ]
    },
    "+": {
      "value": "+",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:175",
        "scripts/test_auth_database_sessions.py:50"
      ]
    },
    "+ All core functionality available": {
      "value": "+ All core functionality available",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:106"
      ]
    },
    "+ All critical services are at least available": {
      "value": "+ All critical services are at least available",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:70"
      ]
    },
    "+ Blocking Errors:": {
      "value": "+ Blocking Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:189"
      ]
    },
    "+ Cloud SQL SSL parameters handled correctly": {
      "value": "+ Cloud SQL SSL parameters handled correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:263"
      ]
    },
    "+ Engine created successfully": {
      "value": "+ Engine created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:141"
      ]
    },
    "+ Engine created with connection pool": {
      "value": "+ Engine created with connection pool",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:318"
      ]
    },
    "+ Engine creation configuration valid": {
      "value": "+ Engine creation configuration valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:277"
      ]
    },
    "+ Engine disposed successfully": {
      "value": "+ Engine disposed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:146",
        "scripts/test_auth_database_sessions.py:327"
      ]
    },
    "+ Health endpoint checking with fallbacks is functional": {
      "value": "+ Health endpoint checking with fallbacks is functional",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:71"
      ]
    },
    "+ LLM API Key:": {
      "value": "+ LLM API Key:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:148"
      ]
    },
    "+ Monitoring:": {
      "value": "+ Monitoring:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:157"
      ]
    },
    "+ Multiple URL fallback mechanism is working": {
      "value": "+ Multiple URL fallback mechanism is working",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:72"
      ]
    },
    "+ OAuth Config:": {
      "value": "+ OAuth Config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:140"
      ]
    },
    "+ Optional Variables Missing:": {
      "value": "+ Optional Variables Missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:190"
      ]
    },
    "+ Services CAN START:": {
      "value": "+ Services CAN START:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:188"
      ]
    },
    "+ Services would start successfully": {
      "value": "+ Services would start successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:101"
      ]
    },
    "+ Some features may have reduced functionality": {
      "value": "+ Some features may have reduced functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:103"
      ]
    },
    "+ URL conversion successful": {
      "value": "+ URL conversion successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:102"
      ]
    },
    "+ URL format valid": {
      "value": "+ URL format valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:252"
      ]
    },
    "+ Warnings Improvement Possible:": {
      "value": "+ Warnings Improvement Possible:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:191"
      ]
    },
    "+00:00": {
      "value": "+00:00",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:127",
        "auth_service/tests/utils/assertion_helpers.py:129"
      ]
    },
    ",": {
      "value": ",",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:221",
        "scripts/analyze_test_overlap.py:478",
        "scripts/apply_fast_test_decorators.py:124",
        "scripts/auto_fix_test_violations.py:579",
        "scripts/automated_test_fix_loop.py:70",
        "scripts/automated_test_fix_loop.py:78",
        "scripts/batch_test_generator.py:412",
        "scripts/compliance/fake_test_scanner.py:287",
        "scripts/fix_all_test_issues.py:49",
        "scripts/fix_all_test_issues.py:51"
      ]
    },
    ",\n        report_path=\"": {
      "value": ",\n        report_path=\"",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:143"
      ]
    },
    ", \"test_patch\")": {
      "value": ", \"test_patch\")",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:105"
      ]
    },
    ", \"test_patch\")\n        try:": {
      "value": ", \"test_patch\")\n        try:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:212"
      ]
    },
    ", \"test_patch_clear\")\n        try:": {
      "value": ", \"test_patch_clear\")\n        try:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:204"
      ]
    },
    ", AUTH_PORT=": {
      "value": ", AUTH_PORT=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:139"
      ]
    },
    ", Database:": {
      "value": ", Database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:159"
      ]
    },
    ", Error:": {
      "value": ", Error:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:105"
      ]
    },
    ", Errors:": {
      "value": ", Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:473"
      ]
    },
    ", Got:": {
      "value": ", Got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:452",
        "scripts/test_websocket_cors_comprehensive.py:135"
      ]
    },
    ", Improvement:": {
      "value": ", Improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    ", Modified:": {
      "value": ", Modified:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:190"
      ]
    },
    ", Optimization:": {
      "value": ", Optimization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:126"
      ]
    },
    ", Run:": {
      "value": ", Run:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:110"
      ]
    },
    ", SPEC/testing.xml)": {
      "value": ", SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    ", URL port:": {
      "value": ", URL port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:334"
      ]
    },
    ", clear=True)\n        env = get_env()\n        env.enable_isolation()\n        env.clear()\n        env.update(": {
      "value": ", clear=True)\n        env = get_env()\n        env.enable_isolation()\n        env.clear()\n        env.update(",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:200"
      ]
    },
    ", first import at line": {
      "value": ", first import at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:58"
      ]
    },
    ", got": {
      "value": ", got",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:69",
        "auth_service/test_auth_direct.py:72",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:213",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:235",
        "auth_service/tests/utils/assertion_helpers.py:166",
        "auth_service/tests/utils/assertion_helpers.py:186",
        "auth_service/tests/utils/assertion_helpers.py:202",
        "auth_service/tests/utils/assertion_helpers.py:267",
        "scripts/test_cors.py:218",
        "scripts/test_oauth_dev_config.py:90"
      ]
    },
    ", id=": {
      "value": ", id=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:316"
      ]
    },
    ", interrupting gracefully...": {
      "value": ", interrupting gracefully...",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:128"
      ]
    },
    ", jest.mock:": {
      "value": ", jest.mock:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:401"
      ]
    },
    ", max_files=": {
      "value": ", max_files=",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    ", password=": {
      "value": ", password=",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:66",
        "scripts/test/verify_test_ports.py:67"
      ]
    },
    ", reason=": {
      "value": ", reason=",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:161"
      ]
    },
    ", secret=": {
      "value": ", secret=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:316"
      ]
    },
    ", service2=": {
      "value": ", service2=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:173"
      ]
    },
    ", service_id=": {
      "value": ", service_id=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:165"
      ]
    },
    ", skipping": {
      "value": ", skipping",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:822"
      ]
    },
    ", type:": {
      "value": ", type:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    ", using 'unit'": {
      "value": ", using 'unit'",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:296"
      ]
    },
    ", using simple line counting:": {
      "value": ", using simple line counting:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:221"
      ]
    },
    ",\"": {
      "value": ",\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:297"
      ]
    },
    ",line=": {
      "value": ",line=",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:100"
      ]
    },
    "-": {
      "value": "-",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:169",
        "auth_service/test_staging_db_connection.py:265",
        "auth_service/tests/test_all_imports.py:122",
        "auth_service/tests/test_all_imports.py:164",
        "auth_service/tests/test_all_imports.py:207",
        "auth_service/tests/test_auth_comprehensive_audit.py:378",
        "auth_service/tests/test_auth_comprehensive_audit.py:381",
        "scripts/add_pytest_markers.py:183",
        "scripts/align_test_imports.py:435",
        "scripts/align_test_imports.py:442"
      ]
    },
    "- $200K/year in prevented incidents if fixed": {
      "value": "- $200K/year in prevented incidents if fixed",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:226"
      ]
    },
    "- **": {
      "value": "- **",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:358",
        "scripts/compliance/real_test_validator.py:318",
        "scripts/generate_test_audit.py:165"
      ]
    },
    "- **Average Score:**": {
      "value": "- **Average Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:185"
      ]
    },
    "- **Critical:**": {
      "value": "- **Critical:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:494"
      ]
    },
    "- **Errors**:": {
      "value": "- **Errors**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:489"
      ]
    },
    "- **Exact Duplicates**:": {
      "value": "- **Exact Duplicates**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "- **Exact Duplicates**: 0 ✅": {
      "value": "- **Exact Duplicates**: 0 ✅",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "- **Excessive conftest files** (": {
      "value": "- **Excessive conftest files** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:208"
      ]
    },
    "- **Failed**:": {
      "value": "- **Failed**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:169"
      ]
    },
    "- **Failed:**": {
      "value": "- **Failed:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:138"
      ]
    },
    "- **Files Affected**:": {
      "value": "- **Files Affected**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:304"
      ]
    },
    "- **Files Analyzed**:": {
      "value": "- **Files Analyzed**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:283"
      ]
    },
    "- **Files exceeding": {
      "value": "- **Files exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:460"
      ]
    },
    "- **Functions exceeding": {
      "value": "- **Functions exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "- **Highly Similar**:": {
      "value": "- **Highly Similar**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:530"
      ]
    },
    "- **Hit Rate:**": {
      "value": "- **Hit Rate:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    "- **Hits:**": {
      "value": "- **Hits:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "- **Inconsistent L3 pattern** used in": {
      "value": "- **Inconsistent L3 pattern** used in",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:221"
      ]
    },
    "- **Legacy test directories** found:": {
      "value": "- **Legacy test directories** found:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:228"
      ]
    },
    "- **Major:**": {
      "value": "- **Major:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:495"
      ]
    },
    "- **Max Score:**": {
      "value": "- **Max Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:187"
      ]
    },
    "- **Min Score:**": {
      "value": "- **Min Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:186"
      ]
    },
    "- **Minor:**": {
      "value": "- **Minor:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:496"
      ]
    },
    "- **Misses:**": {
      "value": "- **Misses:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:174"
      ]
    },
    "- **Multiple test configurations** (": {
      "value": "- **Multiple test configurations** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:211"
      ]
    },
    "- **Multiple test runners** (": {
      "value": "- **Multiple test runners** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:214"
      ]
    },
    "- **Non-standard naming** in": {
      "value": "- **Non-standard naming** in",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:224"
      ]
    },
    "- **Occurrences**:": {
      "value": "- **Occurrences**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:303"
      ]
    },
    "- **Pass Rate:**": {
      "value": "- **Pass Rate:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:139"
      ]
    },
    "- **Passed**:": {
      "value": "- **Passed**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:168"
      ]
    },
    "- **Passed:**": {
      "value": "- **Passed:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:137"
      ]
    },
    "- **Performance Issues Found**:": {
      "value": "- **Performance Issues Found**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:284"
      ]
    },
    "- **Potentially Flaky Tests**:": {
      "value": "- **Potentially Flaky Tests**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:285"
      ]
    },
    "- **Related**:": {
      "value": "- **Related**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:532"
      ]
    },
    "- **Similar**:": {
      "value": "- **Similar**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:531"
      ]
    },
    "- **Success Rate**:": {
      "value": "- **Success Rate**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:170"
      ]
    },
    "- **Suggestion:** Extract helper methods or use fixtures": {
      "value": "- **Suggestion:** Extract helper methods or use fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:893"
      ]
    },
    "- **Suggestion:** Split into multiple focused test modules": {
      "value": "- **Suggestion:** Split into multiple focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:891"
      ]
    },
    "- **Tests Generated**:": {
      "value": "- **Tests Generated**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:488"
      ]
    },
    "- **Total Similarity Pairs**:": {
      "value": "- **Total Similarity Pairs**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:525"
      ]
    },
    "- **Total Test Files**:": {
      "value": "- **Total Test Files**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:523"
      ]
    },
    "- **Total Test Functions**:": {
      "value": "- **Total Test Functions**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:524"
      ]
    },
    "- **Total Tests:**": {
      "value": "- **Total Tests:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:136"
      ]
    },
    "- **Total Validations:**": {
      "value": "- **Total Validations:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:188"
      ]
    },
    "- **Total test files scanned:**": {
      "value": "- **Total test files scanned:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:459"
      ]
    },
    "- **Total violations:**": {
      "value": "- **Total violations:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:462"
      ]
    },
    "- + Basic functionality available": {
      "value": "- + Basic functionality available",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:202"
      ]
    },
    "- + Core services will start": {
      "value": "- + Core services will start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:201"
      ]
    },
    "- + No service failures from missing optional vars": {
      "value": "- + No service failures from missing optional vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:204"
      ]
    },
    "- + OAuth/LLM features configurable later": {
      "value": "- + OAuth/LLM features configurable later",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:203"
      ]
    },
    "- ... and": {
      "value": "- ... and",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:361",
        "scripts/e2e_test_fixer.py:265"
      ]
    },
    "- 40% development velocity improvement": {
      "value": "- 40% development velocity improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:227"
      ]
    },
    "- 85% cache hit rate restoration": {
      "value": "- 85% cache hit rate restoration",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:228"
      ]
    },
    "- 90% reduction in Redis-related failures": {
      "value": "- 90% reduction in Redis-related failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:229"
      ]
    },
    "- @pytest.mark.": {
      "value": "- @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:338"
      ]
    },
    "- API:": {
      "value": "- API:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:47"
      ]
    },
    "- Actions taken:": {
      "value": "- Actions taken:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:396"
      ]
    },
    "- Add caching for frequently serialized objects": {
      "value": "- Add caching for frequently serialized objects",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:369"
      ]
    },
    "- Added connection resurrection capability": {
      "value": "- Added connection resurrection capability",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:88"
      ]
    },
    "- Added thread-safe operations with async locks": {
      "value": "- Added thread-safe operations with async locks",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:85"
      ]
    },
    "- All secrets come from Google Secret Manager": {
      "value": "- All secrets come from Google Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:121"
      ]
    },
    "- All services correctly default to STAGING (not production)": {
      "value": "- All services correctly default to STAGING (not production)",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:172"
      ]
    },
    "- Allow dev login:": {
      "value": "- Allow dev login:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:145"
      ]
    },
    "- Allow mock auth:": {
      "value": "- Allow mock auth:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:146"
      ]
    },
    "- Allows token validation to work in staging environment": {
      "value": "- Allows token validation to work in staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:99"
      ]
    },
    "- Analyses completed:": {
      "value": "- Analyses completed:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:304"
      ]
    },
    "- Analysis agents spawned:": {
      "value": "- Analysis agents spawned:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:303"
      ]
    },
    "- App:": {
      "value": "- App:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:46"
      ]
    },
    "- Approach:": {
      "value": "- Approach:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:395"
      ]
    },
    "- Apps skip .env loading when ENVIRONMENT=staging": {
      "value": "- Apps skip .env loading when ENVIRONMENT=staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:123"
      ]
    },
    "- Auth Service: SERVICE_ID=auth-service": {
      "value": "- Auth Service: SERVICE_ID=auth-service",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:91",
        "scripts/test_auth_service_integration_fix.py:169"
      ]
    },
    "- Auth Service: http://localhost:8082": {
      "value": "- Auth Service: http://localhost:8082",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:114"
      ]
    },
    "- Auth middleware processes ALL non-excluded paths": {
      "value": "- Auth middleware processes ALL non-excluded paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:145"
      ]
    },
    "- Auth service trying to connect to 'postgres' database": {
      "value": "- Auth service trying to connect to 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:109"
      ]
    },
    "- Auth:": {
      "value": "- Auth:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:48"
      ]
    },
    "- Available databases on instance:": {
      "value": "- Available databases on instance:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:98"
      ]
    },
    "- Avg Complexity:": {
      "value": "- Avg Complexity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:563"
      ]
    },
    "- Backend API: http://localhost:8001": {
      "value": "- Backend API: http://localhost:8001",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:113"
      ]
    },
    "- Backend: AUTH_SERVICE_ENABLED=true": {
      "value": "- Backend: AUTH_SERVICE_ENABLED=true",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:172"
      ]
    },
    "- Backend: SERVICE_ID=netra-backend": {
      "value": "- Backend: SERVICE_ID=netra-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:90",
        "scripts/test_auth_service_integration_fix.py:168"
      ]
    },
    "- Better cleanup and memory management": {
      "value": "- Better cleanup and memory management",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:89"
      ]
    },
    "- Blocking errors:": {
      "value": "- Blocking errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:180"
      ]
    },
    "- Both services: AUTH_SERVICE_URL=https://auth.staging.netrasystems.ai": {
      "value": "- Both services: AUTH_SERVICE_URL=https://auth.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:175"
      ]
    },
    "- But application schema might not exist in 'postgres' database": {
      "value": "- But application schema might not exist in 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:110"
      ]
    },
    "- But code was expecting 'netra_staging'": {
      "value": "- But code was expecting 'netra_staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:97"
      ]
    },
    "- CLAUDE.md (development standards)": {
      "value": "- CLAUDE.md (development standards)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:316"
      ]
    },
    "- CRITICAL:": {
      "value": "- CRITICAL:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:288"
      ]
    },
    "- Can services start?": {
      "value": "- Can services start?",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:179"
      ]
    },
    "- Categories:": {
      "value": "- Categories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:187"
      ]
    },
    "- Categorized missing variables for better understanding": {
      "value": "- Categorized missing variables for better understanding",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:172"
      ]
    },
    "- Check E2E_OAUTH_SIMULATION_KEY environment variable": {
      "value": "- Check E2E_OAUTH_SIMULATION_KEY environment variable",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:361"
      ]
    },
    "- Check SSL certificate chain for staging domain": {
      "value": "- Check SSL certificate chain for staging domain",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:374"
      ]
    },
    "- Check for Upgrade: websocket header before adding security headers": {
      "value": "- Check for Upgrade: websocket header before adding security headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:198"
      ]
    },
    "- Check if 'postgres' DB has auth tables": {
      "value": "- Check if 'postgres' DB has auth tables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:122"
      ]
    },
    "- Check staging auth service is deployed and healthy": {
      "value": "- Check staging auth service is deployed and healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:365"
      ]
    },
    "- Check staging backend WebSocket endpoint is accessible": {
      "value": "- Check staging backend WebSocket endpoint is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:369"
      ]
    },
    "- Check that staging backend is deployed and healthy": {
      "value": "- Check that staging backend is deployed and healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:371"
      ]
    },
    "- Clear distinction between errors, warnings, and optional": {
      "value": "- Clear distinction between errors, warnings, and optional",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:173"
      ]
    },
    "- ClickHouse: localhost:8124": {
      "value": "- ClickHouse: localhost:8124",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:112"
      ]
    },
    "- Clock skew handling": {
      "value": "- Clock skew handling",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:91"
      ]
    },
    "- Cloud SQL Unix socket connection (secure)": {
      "value": "- Cloud SQL Unix socket connection (secure)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:262"
      ]
    },
    "- Commands are DRY RUN only (no actual migration)": {
      "value": "- Commands are DRY RUN only (no actual migration)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:259"
      ]
    },
    "- Complex object serialization needs thread pool offloading": {
      "value": "- Complex object serialization needs thread pool offloading",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:367"
      ]
    },
    "- Comprehensive statistics tracking": {
      "value": "- Comprehensive statistics tracking",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:90"
      ]
    },
    "- Configuration files:": {
      "value": "- Configuration files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:189"
      ]
    },
    "- Confirm session management": {
      "value": "- Confirm session management",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:139"
      ]
    },
    "- Conftest files:": {
      "value": "- Conftest files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:281"
      ]
    },
    "- Consider implementing streaming serialization for large objects": {
      "value": "- Consider implementing streaming serialization for large objects",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:368"
      ]
    },
    "- Consider using ASGI middleware mounting instead of wrapping": {
      "value": "- Consider using ASGI middleware mounting instead of wrapping",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:195"
      ]
    },
    "- Cross-Category Overlaps:": {
      "value": "- Cross-Category Overlaps:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:565"
      ]
    },
    "- Current implementation appears adequate for most use cases": {
      "value": "- Current implementation appears adequate for most use cases",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:371"
      ]
    },
    "- Current setup: Auth middleware doesn't explicitly exclude WebSocket paths": {
      "value": "- Current setup: Auth middleware doesn't explicitly exclude WebSocket paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:127"
      ]
    },
    "- Current setup: Proper separation of HTTP and WebSocket CORS": {
      "value": "- Current setup: Proper separation of HTTP and WebSocket CORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:134"
      ]
    },
    "- DEV_AUTH_BYPASS:": {
      "value": "- DEV_AUTH_BYPASS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:275"
      ]
    },
    "- Deploy with corrected credentials": {
      "value": "- Deploy with corrected credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:133"
      ]
    },
    "- Deployment would be blocked": {
      "value": "- Deployment would be blocked",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:109"
      ]
    },
    "- Details:": {
      "value": "- Details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:390"
      ]
    },
    "- Duplicates:": {
      "value": "- Duplicates:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:566"
      ]
    },
    "- Duration:": {
      "value": "- Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:169"
      ]
    },
    "- Eliminates 'Auth service is required for token validation' errors": {
      "value": "- Eliminates 'Auth service is required for token validation' errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:97"
      ]
    },
    "- Enables proper service-to-service authentication": {
      "value": "- Enables proper service-to-service authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:98"
      ]
    },
    "- Enhanced error handling and validation": {
      "value": "- Enhanced error handling and validation",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:86"
      ]
    },
    "- Ensure auth service tables exist in target database": {
      "value": "- Ensure auth service tables exist in target database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:129"
      ]
    },
    "- Ensures AI quality meets expectations": {
      "value": "- Ensures AI quality meets expectations",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:505"
      ]
    },
    "- Environment detection logic works as expected": {
      "value": "- Environment detection logic works as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:173"
      ]
    },
    "- Environment-specific validation (dev vs staging)": {
      "value": "- Environment-specific validation (dev vs staging)",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:171"
      ]
    },
    "- Environment:": {
      "value": "- Environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:274"
      ]
    },
    "- Errors in": {
      "value": "- Errors in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:110"
      ]
    },
    "- Events:": {
      "value": "- Events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:170"
      ]
    },
    "- Failed:": {
      "value": "- Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:199"
      ]
    },
    "- Failing:": {
      "value": "- Failing:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:903"
      ]
    },
    "- FastAPI middleware chain may not include the wrapped WebSocket handler": {
      "value": "- FastAPI middleware chain may not include the wrapped WebSocket handler",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:151"
      ]
    },
    "- File size violations:": {
      "value": "- File size violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:867"
      ]
    },
    "- Files with issues:": {
      "value": "- Files with issues:",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:241"
      ]
    },
    "- Files without test functions:": {
      "value": "- Files without test functions:",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:278"
      ]
    },
    "- First seen:": {
      "value": "- First seen:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:323"
      ]
    },
    "- Fixed": {
      "value": "- Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:108"
      ]
    },
    "- Focus:": {
      "value": "- Focus:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:784"
      ]
    },
    "- Frontend:": {
      "value": "- Frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:49"
      ]
    },
    "- Frontend: http://localhost:3001": {
      "value": "- Frontend: http://localhost:3001",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:115"
      ]
    },
    "- Full customer journey validation": {
      "value": "- Full customer journey validation",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:503"
      ]
    },
    "- Function size violations:": {
      "value": "- Function size violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:868"
      ]
    },
    "- Functionality warnings:": {
      "value": "- Functionality warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:181"
      ]
    },
    "- Graceful failure recovery": {
      "value": "- Graceful failure recovery",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:92"
      ]
    },
    "- Highly Similar:": {
      "value": "- Highly Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:567"
      ]
    },
    "- If reload isn't working on Mac/Windows, check docker-compose.override.yml": {
      "value": "- If reload isn't working on Mac/Windows, check docker-compose.override.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:100"
      ]
    },
    "- Improved heartbeat timeout detection": {
      "value": "- Improved heartbeat timeout detection",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:87"
      ]
    },
    "- Integration tests with mocks defeat the purpose of integration testing": {
      "value": "- Integration tests with mocks defeat the purpose of integration testing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:507"
      ]
    },
    "- Intelligent startup readiness analysis": {
      "value": "- Intelligent startup readiness analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:174"
      ]
    },
    "- Internal Overlaps:": {
      "value": "- Internal Overlaps:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:564"
      ]
    },
    "- Issue: Auth middleware may interfere with WebSocket upgrade requests": {
      "value": "- Issue: Auth middleware may interfere with WebSocket upgrade requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:128"
      ]
    },
    "- Issue: WebSocket wrapping may not be effective due to FastAPI limitations": {
      "value": "- Issue: WebSocket wrapping may not be effective due to FastAPI limitations",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:140"
      ]
    },
    "- Known failed tests:": {
      "value": "- Known failed tests:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:302"
      ]
    },
    "- MAJOR:": {
      "value": "- MAJOR:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:289"
      ]
    },
    "- MINOR:": {
      "value": "- MINOR:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:290"
      ]
    },
    "- Makes real HTTP calls for JWT token generation": {
      "value": "- Makes real HTTP calls for JWT token generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:29"
      ]
    },
    "- Max violation:": {
      "value": "- Max violation:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:886"
      ]
    },
    "- May interfere with WebSocket upgrade process": {
      "value": "- May interfere with WebSocket upgrade process",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:155"
      ]
    },
    "- Mock component implementations in test files violate real test requirements": {
      "value": "- Mock component implementations in test files violate real test requirements",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:506"
      ]
    },
    "- Monitor logs for connection success": {
      "value": "- Monitor logs for connection success",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:134"
      ]
    },
    "- Monitor logs in real-time: docker logs -f netra-backend": {
      "value": "- Monitor logs in real-time: docker logs -f netra-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:99"
      ]
    },
    "- Monitor production performance for edge cases": {
      "value": "- Monitor production performance for edge cases",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:372"
      ]
    },
    "- No 'Unknown category' errors": {
      "value": "- No 'Unknown category' errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:198"
      ]
    },
    "- No .env.staging file (deleted)": {
      "value": "- No .env.staging file (deleted)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:120"
      ]
    },
    "- Non-secret config in deployment script as env vars": {
      "value": "- Non-secret config in deployment script as env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:122"
      ]
    },
    "- OAuth configuration appropriate for each environment": {
      "value": "- OAuth configuration appropriate for each environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:174"
      ]
    },
    "- OR 'postgres' database doesn't have the required tables/schema": {
      "value": "- OR 'postgres' database doesn't have the required tables/schema",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:111"
      ]
    },
    "- OR create 'netra_staging' database for staging": {
      "value": "- OR create 'netra_staging' database for staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:123"
      ]
    },
    "- Optional missing:": {
      "value": "- Optional missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:182"
      ]
    },
    "- Optional variables don't block startup": {
      "value": "- Optional variables don't block startup",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:196"
      ]
    },
    "- Optional variables no longer block service startup": {
      "value": "- Optional variables no longer block service startup",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:170"
      ]
    },
    "- Or handle CORS directly in WebSocket endpoint": {
      "value": "- Or handle CORS directly in WebSocket endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:196"
      ]
    },
    "- Passed:": {
      "value": "- Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:199"
      ]
    },
    "- Passing:": {
      "value": "- Passing:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:902"
      ]
    },
    "- Port": {
      "value": "- Port",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:71"
      ]
    },
    "- PostgreSQL: localhost:5433": {
      "value": "- PostgreSQL: localhost:5433",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:110"
      ]
    },
    "- Redis: localhost:6380": {
      "value": "- Redis: localhost:6380",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:111"
      ]
    },
    "- Risk of false positive test results hiding real bugs": {
      "value": "- Risk of false positive test results hiding real bugs",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:508"
      ]
    },
    "- Run Alembic migrations if needed": {
      "value": "- Run Alembic migrations if needed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:130"
      ]
    },
    "- SERVICE_SECRET is loaded from service-secret-staging secret": {
      "value": "- SERVICE_SECRET is loaded from service-secret-staging secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:178"
      ]
    },
    "- SPEC/testing.xml (comprehensive testing standards)": {
      "value": "- SPEC/testing.xml (comprehensive testing standards)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:314"
      ]
    },
    "- SSL parameters handled automatically": {
      "value": "- SSL parameters handled automatically",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:261"
      ]
    },
    "- Secret Manager postgres-db-staging = 'postgres'": {
      "value": "- Secret Manager postgres-db-staging = 'postgres'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:96"
      ]
    },
    "- Security headers middleware adds headers to /ws paths": {
      "value": "- Security headers middleware adds headers to /ws paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:154"
      ]
    },
    "- Security middleware → Request middleware → Security response middleware": {
      "value": "- Security middleware → Request middleware → Security response middleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:138"
      ]
    },
    "- See docs/docker-hot-reload-guide.md for troubleshooting": {
      "value": "- See docs/docker-hot-reload-guide.md for troubleshooting",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:101"
      ]
    },
    "- Services can start with minimal critical variables": {
      "value": "- Services can start with minimal critical variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:195"
      ]
    },
    "- Services would fail to start": {
      "value": "- Services would fail to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:108"
      ]
    },
    "- Skipped": {
      "value": "- Skipped",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:109"
      ]
    },
    "- Starts real auth service on port 8081": {
      "value": "- Starts real auth service on port 8081",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:27"
      ]
    },
    "- Starts real backend service on port 8200": {
      "value": "- Starts real backend service on port 8200",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:28"
      ]
    },
    "- Success rate:": {
      "value": "- Success rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:236"
      ]
    },
    "- Suggested fixes:": {
      "value": "- Suggested fixes:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:391"
      ]
    },
    "- Test directories:": {
      "value": "- Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:282"
      ]
    },
    "- Test locations:": {
      "value": "- Test locations:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:278"
      ]
    },
    "- Test login flow": {
      "value": "- Test login flow",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:137"
      ]
    },
    "- Test runners found:": {
      "value": "- Test runners found:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:190"
      ]
    },
    "- Tests real WebSocket authentication": {
      "value": "- Tests real WebSocket authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:31"
      ]
    },
    "- Tests real token validation across services": {
      "value": "- Tests real token validation across services",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:30"
      ]
    },
    "- Tests validated:": {
      "value": "- Tests validated:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:901"
      ]
    },
    "- Tests:": {
      "value": "- Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:561",
        "scripts/real_service_test_metrics.py:198"
      ]
    },
    "- This causes auth middleware to interfere with WebSocket upgrade": {
      "value": "- This causes auth middleware to interfere with WebSocket upgrade",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:147"
      ]
    },
    "- Throughput:": {
      "value": "- Throughput:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:237"
      ]
    },
    "- Total Lines:": {
      "value": "- Total Lines:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:562"
      ]
    },
    "- Total fixes applied:": {
      "value": "- Total fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:243"
      ]
    },
    "- Total issues found:": {
      "value": "- Total issues found:",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:242"
      ]
    },
    "- Total optional variables:": {
      "value": "- Total optional variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:186"
      ]
    },
    "- Total test files:": {
      "value": "- Total test files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:277"
      ]
    },
    "- Total violations:": {
      "value": "- Total violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:887"
      ]
    },
    "- Type:": {
      "value": "- Type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:389"
      ]
    },
    "- Using psycopg2 driver for Alembic compatibility": {
      "value": "- Using psycopg2 driver for Alembic compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:260"
      ]
    },
    "- Validates SLA compliance": {
      "value": "- Validates SLA compliance",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:507"
      ]
    },
    "- Verify E2E_OAUTH_SIMULATION_KEY matches staging deployment": {
      "value": "- Verify E2E_OAUTH_SIMULATION_KEY matches staging deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:366"
      ]
    },
    "- Verify JWT token generation": {
      "value": "- Verify JWT token generation",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:138"
      ]
    },
    "- Verify SSL/TLS certificates are valid": {
      "value": "- Verify SSL/TLS certificates are valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:370"
      ]
    },
    "- Verify TLS configuration is correct": {
      "value": "- Verify TLS configuration is correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:375"
      ]
    },
    "- Verify staging URLs are correct": {
      "value": "- Verify staging URLs are correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:362"
      ]
    },
    "- Version": {
      "value": "- Version",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:31"
      ]
    },
    "- WEBSOCKET_BYPASS:": {
      "value": "- WEBSOCKET_BYPASS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:276"
      ]
    },
    "- Warnings guide incremental improvement": {
      "value": "- Warnings guide incremental improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:197"
      ]
    },
    "- WebSocket CORS wrapping happens in setup_request_middleware": {
      "value": "- WebSocket CORS wrapping happens in setup_request_middleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:139"
      ]
    },
    "- WebSocket paths (/ws, /websocket) are NOT in excluded_paths": {
      "value": "- WebSocket paths (/ws, /websocket) are NOT in excluded_paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:146"
      ]
    },
    "- WebSocket paths (/ws, /websocket) should be excluded from auth middleware": {
      "value": "- WebSocket paths (/ws, /websocket) should be excluded from auth middleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:126"
      ]
    },
    "- WebSocketAwareCORSMiddleware skips WebSocket upgrades": {
      "value": "- WebSocketAwareCORSMiddleware skips WebSocket upgrades",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:132"
      ]
    },
    "- WebSocketCORSMiddleware handles WebSocket CORS separately": {
      "value": "- WebSocketCORSMiddleware handles WebSocket CORS separately",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:133"
      ]
    },
    "- [": {
      "value": "- [",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:152"
      ]
    },
    "- [ ]": {
      "value": "- [ ]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:196",
        "scripts/compliance/real_test_linter.py:203",
        "scripts/compliance/real_test_linter.py:210",
        "scripts/compliance/real_test_linter.py:219"
      ]
    },
    "- [CRITICAL]:": {
      "value": "- [CRITICAL]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:332"
      ]
    },
    "- [MAJOR]:": {
      "value": "- [MAJOR]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:333"
      ]
    },
    "- [MINOR]:": {
      "value": "- [MINOR]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:334"
      ]
    },
    "- `": {
      "value": "- `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:606",
        "scripts/generate_test_audit.py:176",
        "scripts/generate_test_audit.py:199",
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "- `test_framework.performance_helpers.FlakynessReducer` - Stable wait conditions": {
      "value": "- `test_framework.performance_helpers.FlakynessReducer` - Stable wait conditions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:336"
      ]
    },
    "- `test_framework.performance_helpers.fast_test` - Mock sleep functions": {
      "value": "- `test_framework.performance_helpers.fast_test` - Mock sleep functions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:333"
      ]
    },
    "- `test_framework.performance_helpers.mock_external_dependencies` - Mock external calls": {
      "value": "- `test_framework.performance_helpers.mock_external_dependencies` - Mock external calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:335"
      ]
    },
    "- `test_framework.performance_helpers.timeout_override` - Reduce timeouts": {
      "value": "- `test_framework.performance_helpers.timeout_override` - Reduce timeouts",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:334"
      ]
    },
    "- app/tests/examples/test_real_functionality_examples.py (patterns)": {
      "value": "- app/tests/examples/test_real_functionality_examples.py (patterns)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:315"
      ]
    },
    "- configure_websocket_cors() wraps the app but doesn't reassign": {
      "value": "- configure_websocket_cors() wraps the app but doesn't reassign",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:150"
      ]
    },
    "- queue full": {
      "value": "- queue full",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:293"
      ]
    },
    "- refreshToken (camelCase) - Frontend format": {
      "value": "- refreshToken (camelCase) - Frontend format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:151"
      ]
    },
    "- refresh_token (snake_case) - Original backend format": {
      "value": "- refresh_token (snake_case) - Original backend format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:150"
      ]
    },
    "- remove for security": {
      "value": "- remove for security",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:348"
      ]
    },
    "- security risk": {
      "value": "- security risk",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:342"
      ]
    },
    "- tests are already failing": {
      "value": "- tests are already failing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:815"
      ]
    },
    "- token (simple) - Alternative format": {
      "value": "- token (simple) - Alternative format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:152"
      ]
    },
    "- ✅ Allows token validation to work in staging environment": {
      "value": "- ✅ Allows token validation to work in staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:183"
      ]
    },
    "- ✅ Eliminates 'Auth service is required for token validation' errors": {
      "value": "- ✅ Eliminates 'Auth service is required for token validation' errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:181"
      ]
    },
    "- ✅ Enables proper service-to-service authentication": {
      "value": "- ✅ Enables proper service-to-service authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:182"
      ]
    },
    "- ✅ Prevents fallback to local validation in production": {
      "value": "- ✅ Prevents fallback to local validation in production",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:184"
      ]
    },
    "--": {
      "value": "--",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/test_collection_audit.py:154",
        "scripts/test_frontend_ORIGINAL.py:122",
        "scripts/test_frontend_ORIGINAL.py:123",
        "scripts/test_frontend_ORIGINAL.py:229",
        "scripts/test_frontend_ORIGINAL.py:231",
        "scripts/test_frontend_ORIGINAL.py:319",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "---": {
      "value": "---",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:161",
        "auth_service/test_actual_staging_credentials.py:161",
        "auth_service/test_url_construction.py:227",
        "auth_service/test_url_construction.py:227",
        "scripts/test_docker_config.py:24"
      ]
    },
    "--- Checking": {
      "value": "--- Checking",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:24"
      ]
    },
    "--- Iteration": {
      "value": "--- Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:12"
      ]
    },
    "--- Progress Summary ---": {
      "value": "--- Progress Summary ---",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:132"
      ]
    },
    "--> Helpful debugging info provided": {
      "value": "--> Helpful debugging info provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:139"
      ]
    },
    "--> The fix is NOT working. Frontend will fail to refresh.": {
      "value": "--> The fix is NOT working. Frontend will fail to refresh.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:65"
      ]
    },
    "--> The fix is working! Frontend can now refresh tokens.": {
      "value": "--> The fix is working! Frontend can now refresh tokens.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:62"
      ]
    },
    "--all": {
      "value": "--all",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:41"
      ]
    },
    "--api-port": {
      "value": "--api-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:207"
      ]
    },
    "--apply": {
      "value": "--apply",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:136",
        "scripts/migrate_test_ids.py:213"
      ]
    },
    "--apply-optimizations": {
      "value": "--apply-optimizations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:346"
      ]
    },
    "--asyncio-mode=auto": {
      "value": "--asyncio-mode=auto",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:45",
        "scripts/test_backend_ORIGINAL.py:288"
      ]
    },
    "--attach": {
      "value": "--attach",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:169"
      ]
    },
    "--auth-url": {
      "value": "--auth-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:169"
      ]
    },
    "--auto-split": {
      "value": "--auto-split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:522"
      ]
    },
    "--backend-url": {
      "value": "--backend-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:174"
      ]
    },
    "--backup-dir": {
      "value": "--backup-dir",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:935"
      ]
    },
    "--bail": {
      "value": "--bail",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:284"
      ]
    },
    "--base-url": {
      "value": "--base-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:419",
        "scripts/test_staging_env.py:209"
      ]
    },
    "--benchmark": {
      "value": "--benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:378"
      ]
    },
    "--build": {
      "value": "--build",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:412"
      ]
    },
    "--cache-dir": {
      "value": "--cache-dir",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:380"
      ]
    },
    "--cacheDirectory": {
      "value": "--cacheDirectory",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:156"
      ]
    },
    "--capture=no": {
      "value": "--capture=no",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:248"
      ]
    },
    "--categories": {
      "value": "--categories",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:146",
        "scripts/simple_test_fix_loop.py:18"
      ]
    },
    "--category": {
      "value": "--category",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:69",
        "scripts/continuous_e2e_test_runner.py:27",
        "scripts/frontend_iterative_test_runner.py:191",
        "scripts/launch_test_env.py:156",
        "scripts/run_all_test_categories.py:21",
        "scripts/test_backend_optimized.py:368",
        "scripts/test_backend_ORIGINAL.py:485",
        "scripts/test_comprehensive_scanner.py:127",
        "scripts/test_failure_analyzer.py:339",
        "scripts/test_failure_tracker.py:75"
      ]
    },
    "--check-deps": {
      "value": "--check-deps",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:514",
        "scripts/test_frontend_ORIGINAL.py:417"
      ]
    },
    "--cleanup": {
      "value": "--cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:206"
      ]
    },
    "--cleanup-on-exit": {
      "value": "--cleanup-on-exit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:425"
      ]
    },
    "--clear-cache": {
      "value": "--clear-cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:384"
      ]
    },
    "--clickhouse": {
      "value": "--clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:171"
      ]
    },
    "--collect-only": {
      "value": "--collect-only",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:105"
      ]
    },
    "--color=yes": {
      "value": "--color=yes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:288"
      ]
    },
    "--compose-file": {
      "value": "--compose-file",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:370"
      ]
    },
    "--confirm-unsafe": {
      "value": "--confirm-unsafe",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:923"
      ]
    },
    "--cov": {
      "value": "--cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:499",
        "scripts/test_frontend_ORIGINAL.py:403"
      ]
    },
    "--cov-fail-under=": {
      "value": "--cov-fail-under=",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:267",
        "scripts/unified_test_config.py:382"
      ]
    },
    "--cov-fail-under=90": {
      "value": "--cov-fail-under=90",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:212"
      ]
    },
    "--cov-report=html": {
      "value": "--cov-report=html",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:375"
      ]
    },
    "--cov-report=html:htmlcov_supervisor": {
      "value": "--cov-report=html:htmlcov_supervisor",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:210"
      ]
    },
    "--cov-report=html:reports/coverage/html": {
      "value": "--cov-report=html:reports/coverage/html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:265",
        "scripts/test_coverage_system.py:30"
      ]
    },
    "--cov-report=json": {
      "value": "--cov-report=json",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113"
      ]
    },
    "--cov-report=json:coverage_full.json": {
      "value": "--cov-report=json:coverage_full.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:211"
      ]
    },
    "--cov-report=json:coverage_unit.json": {
      "value": "--cov-report=json:coverage_unit.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:78"
      ]
    },
    "--cov-report=json:reports/coverage/coverage.json": {
      "value": "--cov-report=json:reports/coverage/coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:266",
        "scripts/test_coverage_system.py:32"
      ]
    },
    "--cov-report=term-missing": {
      "value": "--cov-report=term-missing",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:77",
        "scripts/run_supervisor_test_coverage.py:209",
        "scripts/test_backend_ORIGINAL.py:266",
        "scripts/test_coverage_system.py:29",
        "scripts/unified_test_config.py:376"
      ]
    },
    "--cov-report=xml:reports/coverage/coverage.xml": {
      "value": "--cov-report=xml:reports/coverage/coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:31"
      ]
    },
    "--cov=": {
      "value": "--cov=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:374"
      ]
    },
    "--cov=app": {
      "value": "--cov=app",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113"
      ]
    },
    "--cov=netra_backend.app": {
      "value": "--cov=netra_backend.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:265"
      ]
    },
    "--cov=netra_backend.app.agents.supervisor": {
      "value": "--cov=netra_backend.app.agents.supervisor",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:75",
        "scripts/run_supervisor_test_coverage.py:208"
      ]
    },
    "--cov=netra_backend.app.agents.supervisor_agent_modern": {
      "value": "--cov=netra_backend.app.agents.supervisor_agent_modern",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:76",
        "scripts/run_supervisor_test_coverage.py:207"
      ]
    },
    "--cov=netra_backend/app": {
      "value": "--cov=netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:28"
      ]
    },
    "--coverage": {
      "value": "--coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:499",
        "scripts/test_frontend_ORIGINAL.py:130",
        "scripts/test_frontend_ORIGINAL.py:403",
        "scripts/test_frontend_simple.py:39"
      ]
    },
    "--coverage=false": {
      "value": "--coverage=false",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:284"
      ]
    },
    "--coverageDirectory=": {
      "value": "--coverageDirectory=",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:132"
      ]
    },
    "--critical-only": {
      "value": "--critical-only",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:137"
      ]
    },
    "--cypress-open": {
      "value": "--cypress-open",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:397"
      ]
    },
    "--days": {
      "value": "--days",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:446",
        "scripts/test_execution_tracker.py:774"
      ]
    },
    "--debug": {
      "value": "--debug",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:432"
      ]
    },
    "--deselect=": {
      "value": "--deselect=",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:85"
      ]
    },
    "--detectOpenHandles": {
      "value": "--detectOpenHandles",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:124"
      ]
    },
    "--directory": {
      "value": "--directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:376",
        "scripts/migrate_test_environment_access.py:327"
      ]
    },
    "--disable-dev-shm-usage": {
      "value": "--disable-dev-shm-usage",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:34",
        "scripts/test_gtm_tracking.py:21"
      ]
    },
    "--disable-safe-mode": {
      "value": "--disable-safe-mode",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:931"
      ]
    },
    "--disable-warnings": {
      "value": "--disable-warnings",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:46",
        "scripts/test_backend_ORIGINAL.py:291",
        "scripts/test_coverage_system.py:35",
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--docker": {
      "value": "--docker",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:173"
      ]
    },
    "--docker-production": {
      "value": "--docker-production",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:211"
      ]
    },
    "--docker-stats": {
      "value": "--docker-stats",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:212"
      ]
    },
    "--dry-run": {
      "value": "--dry-run",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:235",
        "scripts/auto_fix_test_sizes.py:718",
        "scripts/auto_fix_test_violations.py:919",
        "scripts/migrate_test_environment_access.py:317",
        "scripts/optimize_test_performance.py:348",
        "scripts/standardize_l3_test_names.py:250"
      ]
    },
    "--dry-run, -n     : Show what would be renamed without doing it": {
      "value": "--dry-run, -n     : Show what would be renamed without doing it",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:301"
      ]
    },
    "--durations=20": {
      "value": "--durations=20",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:277"
      ]
    },
    "--e2e": {
      "value": "--e2e",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:166",
        "scripts/test_frontend_ORIGINAL.py:396"
      ]
    },
    "--endpoint": {
      "value": "--endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:424"
      ]
    },
    "--env": {
      "value": "--env",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:30",
        "scripts/test_docker_manager.py:209",
        "scripts/test_failure_analyzer.py:341",
        "scripts/test_staging.py:58"
      ]
    },
    "--env-file": {
      "value": "--env-file",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:47",
        "scripts/launch_test_env.py:87"
      ]
    },
    "--environment": {
      "value": "--environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:421"
      ]
    },
    "--execute": {
      "value": "--execute",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:287"
      ]
    },
    "--execute         : Actually perform the renames": {
      "value": "--execute         : Actually perform the renames",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:302"
      ]
    },
    "--execute --limit=30": {
      "value": "--execute --limit=30",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:288"
      ]
    },
    "--export": {
      "value": "--export",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:52",
        "scripts/setup_test_environment.py:347"
      ]
    },
    "--extensions": {
      "value": "--extensions",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:224"
      ]
    },
    "--fail-fast": {
      "value": "--fail-fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:493"
      ]
    },
    "--failed-first": {
      "value": "--failed-first",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:246",
        "scripts/test_backend_ORIGINAL.py:494"
      ]
    },
    "--fast-fail": {
      "value": "--fast-fail",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/continuous_e2e_test_runner.py:29",
        "scripts/frontend_iterative_test_runner.py:192",
        "scripts/iterative_test_fix_loop.py:35",
        "scripts/launch_test_env.py:158",
        "scripts/manage_test_services.py:146",
        "scripts/run_all_test_categories.py:23",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/test_comprehensive_scanner.py:129"
      ]
    },
    "--ff": {
      "value": "--ff",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:247",
        "scripts/test_backend_ORIGINAL.py:494"
      ]
    },
    "--file": {
      "value": "--file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:722",
        "scripts/compliance/fake_test_scanner.py:378",
        "scripts/migrate_test_environment_access.py:332"
      ]
    },
    "--filter": {
      "value": "--filter",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:33",
        "scripts/test_hot_reload.py:22"
      ]
    },
    "--fix": {
      "value": "--fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:256",
        "scripts/remove_test_stubs.py:356",
        "scripts/setup_test_environment.py:346",
        "scripts/test_collection_audit.py:430",
        "scripts/test_frontend_ORIGINAL.py:319",
        "scripts/test_frontend_ORIGINAL.py:410"
      ]
    },
    "--force": {
      "value": "--force",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:149",
        "scripts/test_docker_manager.py:212",
        "scripts/test_frontend_ORIGINAL.py:530"
      ]
    },
    "--force-unsafe-fix": {
      "value": "--force-unsafe-fix",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:921"
      ]
    },
    "--forceExit": {
      "value": "--forceExit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:124"
      ]
    },
    "--format": {
      "value": "--format",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:777",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/pytest_resource_monitor.py:118",
        "scripts/remove_test_stubs.py:358",
        "scripts/setup_e2e_test_ports.py:33",
        "scripts/test_cors.py:434",
        "scripts/test_execution_tracker.py:769",
        "scripts/test_hot_reload.py:22"
      ]
    },
    "--format=\"{{json .Mounts}}\" 2>/dev/null": {
      "value": "--format=\"{{json .Mounts}}\" 2>/dev/null",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:152"
      ]
    },
    "--frontend-port": {
      "value": "--frontend-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:208"
      ]
    },
    "--full": {
      "value": "--full",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:82"
      ]
    },
    "--git-diff": {
      "value": "--git-diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:260"
      ]
    },
    "--github-actions": {
      "value": "--github-actions",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:109"
      ]
    },
    "--headless": {
      "value": "--headless",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:32",
        "scripts/test_gtm_tracking.py:19"
      ]
    },
    "--help": {
      "value": "--help",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:298",
        "scripts/test_adaptive_workflow.py:391",
        "scripts/test_verify_workflow.py:34",
        "scripts/test_verify_workflow_status.py:81",
        "scripts/test_verify_workflow_status_corrected.py:88"
      ]
    },
    "--help, -h        : Show this help": {
      "value": "--help, -h        : Show this help",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:304"
      ]
    },
    "--host": {
      "value": "--host",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:56"
      ]
    },
    "--html-output": {
      "value": "--html-output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:508"
      ]
    },
    "--html=reports/tests/report.html": {
      "value": "--html=reports/tests/report.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:284"
      ]
    },
    "--install-deps": {
      "value": "--install-deps",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:418"
      ]
    },
    "--integration": {
      "value": "--integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:426"
      ]
    },
    "--integration-first": {
      "value": "--integration-first",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:724"
      ]
    },
    "--interval": {
      "value": "--interval",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:372"
      ]
    },
    "--isolation": {
      "value": "--isolation",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:516",
        "scripts/test_frontend_ORIGINAL.py:424"
      ]
    },
    "--iterations": {
      "value": "--iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:171"
      ]
    },
    "--json": {
      "value": "--json",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:54",
        "scripts/test_collection_audit.py:154",
        "scripts/test_imports.py:53",
        "scripts/test_staging_env.py:210",
        "scripts/test_staging_startup.py:291"
      ]
    },
    "--json-output": {
      "value": "--json-output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:507"
      ]
    },
    "--json-report": {
      "value": "--json-report",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:36",
        "scripts/run_supervisor_test_coverage.py:79",
        "scripts/run_supervisor_test_coverage.py:103",
        "scripts/run_supervisor_test_coverage.py:132",
        "scripts/run_supervisor_test_coverage.py:157",
        "scripts/run_supervisor_test_coverage.py:181",
        "scripts/test_backend_ORIGINAL.py:282",
        "scripts/test_example_message_flow.py:95",
        "scripts/test_websocket_injection_fix_complete.py:281"
      ]
    },
    "--json-report-file=/tmp/pytest_report.json": {
      "value": "--json-report-file=/tmp/pytest_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:282"
      ]
    },
    "--json-report-file=reports/tests/report.json": {
      "value": "--json-report-file=reports/tests/report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:282"
      ]
    },
    "--json-report-file=test_report_critical.json": {
      "value": "--json-report-file=test_report_critical.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:182"
      ]
    },
    "--json-report-file=test_report_e2e.json": {
      "value": "--json-report-file=test_report_e2e.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:133"
      ]
    },
    "--json-report-file=test_report_integration.json": {
      "value": "--json-report-file=test_report_integration.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:104"
      ]
    },
    "--json-report-file=test_report_stress.json": {
      "value": "--json-report-file=test_report_stress.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:158"
      ]
    },
    "--json-report-file=test_report_unit.json": {
      "value": "--json-report-file=test_report_unit.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:80"
      ]
    },
    "--json-report-file=test_results.json": {
      "value": "--json-report-file=test_results.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:96"
      ]
    },
    "--keyword": {
      "value": "--keyword",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:486",
        "scripts/test_frontend_ORIGINAL.py:391"
      ]
    },
    "--level": {
      "value": "--level",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/iterative_test_fix_loop.py:31",
        "scripts/iterative_test_fix_loop.py:32",
        "scripts/iterative_test_fix_loop.py:33",
        "scripts/test_frontend_simple.py:75",
        "scripts/test_staging.py:57"
      ]
    },
    "--limit=": {
      "value": "--limit=",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:254"
      ]
    },
    "--limit=N, -lN    : Process only first N files": {
      "value": "--limit=N, -lN    : Process only first N files",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:303"
      ]
    },
    "--lint": {
      "value": "--lint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:409"
      ]
    },
    "--list": {
      "value": "--list",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:154"
      ]
    },
    "--listTests": {
      "value": "--listTests",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:154"
      ]
    },
    "--markers": {
      "value": "--markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:487"
      ]
    },
    "--max": {
      "value": "--max",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:920"
      ]
    },
    "--max-files": {
      "value": "--max-files",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:720",
        "scripts/auto_fix_test_violations.py:925"
      ]
    },
    "--maxWorkers=1": {
      "value": "--maxWorkers=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--maxWorkers=2": {
      "value": "--maxWorkers=2",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "--maxfail=1": {
      "value": "--maxfail=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:253"
      ]
    },
    "--maxfail=50": {
      "value": "--maxfail=50",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--memory": {
      "value": "--memory",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:261"
      ]
    },
    "--memory-critical": {
      "value": "--memory-critical",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:376"
      ]
    },
    "--memory-warning": {
      "value": "--memory-warning",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:374"
      ]
    },
    "--method": {
      "value": "--method",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:428",
        "scripts/test_staging_login_automated.py:395"
      ]
    },
    "--min-coverage": {
      "value": "--min-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:500"
      ]
    },
    "--mode": {
      "value": "--mode",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:50"
      ]
    },
    "--module": {
      "value": "--module",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:45"
      ]
    },
    "--name-only": {
      "value": "--name-only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "--no-auth": {
      "value": "--no-auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:415",
        "scripts/test_adaptive_workflow.py:421"
      ]
    },
    "--no-bad-test-detection": {
      "value": "--no-bad-test-detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:517"
      ]
    },
    "--no-browser": {
      "value": "--no-browser",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:116"
      ]
    },
    "--no-cache": {
      "value": "--no-cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:382"
      ]
    },
    "--no-cov": {
      "value": "--no-cov",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:82"
      ]
    },
    "--no-coverage": {
      "value": "--no-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/frontend_iterative_test_runner.py:193",
        "scripts/iterative_test_fix_loop.py:34",
        "scripts/launch_test_env.py:157",
        "scripts/manage_test_services.py:146",
        "scripts/run_all_test_categories.py:22",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/test_comprehensive_scanner.py:128",
        "scripts/test_failure_tracker.py:76"
      ]
    },
    "--no-env-setup": {
      "value": "--no-env-setup",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:87"
      ]
    },
    "--no-fail-fast": {
      "value": "--no-fail-fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:57"
      ]
    },
    "--no-header": {
      "value": "--no-header",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:368",
        "scripts/test_example_message_flow.py:94",
        "scripts/test_failure_scanner.py:101",
        "scripts/test_jwt_critical.py:45"
      ]
    },
    "--no-sandbox": {
      "value": "--no-sandbox",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:33",
        "scripts/test_gtm_tracking.py:20"
      ]
    },
    "--no-stream": {
      "value": "--no-stream",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:118"
      ]
    },
    "--no-summary": {
      "value": "--no-summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--no-wait": {
      "value": "--no-wait",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:178"
      ]
    },
    "--noEmit": {
      "value": "--noEmit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:337"
      ]
    },
    "--non-interactive": {
      "value": "--non-interactive",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:413"
      ]
    },
    "--optimization": {
      "value": "--optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:373"
      ]
    },
    "--origin": {
      "value": "--origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:426"
      ]
    },
    "--output": {
      "value": "--output",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:776",
        "scripts/compliance/fake_test_scanner.py:384",
        "scripts/compliance/test_size_validator.py:521",
        "scripts/optimize_test_performance.py:345",
        "scripts/remove_test_stubs.py:360",
        "scripts/test_collection_audit.py:424",
        "scripts/test_dashboard.py:450",
        "scripts/test_staging_login_automated.py:401",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:171"
      ]
    },
    "--parallel": {
      "value": "--parallel",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:492"
      ]
    },
    "--passWithNoTests": {
      "value": "--passWithNoTests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:39",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--path": {
      "value": "--path",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:218"
      ]
    },
    "--pattern": {
      "value": "--pattern",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:144",
        "scripts/manage_test_services.py:191"
      ]
    },
    "--port": {
      "value": "--port",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:57"
      ]
    },
    "--preflight-only": {
      "value": "--preflight-only",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:440"
      ]
    },
    "--priority-only": {
      "value": "--priority-only",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:322"
      ]
    },
    "--profile": {
      "value": "--profile",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:509",
        "scripts/test_docker_config.py:11"
      ]
    },
    "--progress-file": {
      "value": "--progress-file",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:926"
      ]
    },
    "--project-root": {
      "value": "--project-root",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:775",
        "scripts/ci/check_test_stubs.py:111",
        "scripts/remove_test_stubs.py:361",
        "scripts/test_dashboard.py:429",
        "scripts/test_execution_tracker.py:763"
      ]
    },
    "--quick": {
      "value": "--quick",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:419",
        "scripts/test_example_message_flow.py:433",
        "scripts/test_service_orchestration.py:210",
        "scripts/test_staging.py:77",
        "scripts/test_staging_websocket_comprehensive.py:427"
      ]
    },
    "--quiet": {
      "value": "--quiet",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/ci/check_test_stubs.py:107",
        "scripts/test_backend_optimized.py:390",
        "scripts/test_backend_ORIGINAL.py:506",
        "scripts/test_collection_audit.py:105"
      ]
    },
    "--real-e2e": {
      "value": "--real-e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:166"
      ]
    },
    "--real-llm": {
      "value": "--real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:28",
        "scripts/setup_test_environment.py:348",
        "scripts/test_failure_analyzer.py:340"
      ]
    },
    "--reload": {
      "value": "--reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:58"
      ]
    },
    "--repo": {
      "value": "--repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:46",
        "scripts/test_verify_workflow.py:64",
        "scripts/test_verify_workflow_status.py:90",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147"
      ]
    },
    "--report": {
      "value": "--report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:262",
        "scripts/remove_test_stubs.py:357"
      ]
    },
    "--report-only": {
      "value": "--report-only",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:929",
        "scripts/compliance/fake_test_scanner.py:380",
        "scripts/test_cors.py:436"
      ]
    },
    "--restart": {
      "value": "--restart",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:184"
      ]
    },
    "--resume": {
      "value": "--resume",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:922"
      ]
    },
    "--root-dir": {
      "value": "--root-dir",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:927"
      ]
    },
    "--run-id": {
      "value": "--run-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:106",
        "scripts/test_verify_workflow_status_corrected.py:150"
      ]
    },
    "--run-tests": {
      "value": "--run-tests",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:189"
      ]
    },
    "--runners": {
      "value": "--runners",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:236"
      ]
    },
    "--scan": {
      "value": "--scan",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:355"
      ]
    },
    "--scan-all": {
      "value": "--scan-all",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:374"
      ]
    },
    "--secret-file": {
      "value": "--secret-file",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:115",
        "scripts/test_workflows_with_act.py:154"
      ]
    },
    "--self-contained-html": {
      "value": "--self-contained-html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:284"
      ]
    },
    "--service": {
      "value": "--service",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:100",
        "scripts/start_test_services.py:108",
        "scripts/test_backend.py:33",
        "scripts/test_frontend.py:33"
      ]
    },
    "--services": {
      "value": "--services",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:174",
        "scripts/test_docker_manager.py:211",
        "scripts/test_log_introspection.py:263"
      ]
    },
    "--set-secrets": {
      "value": "--set-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:71"
      ]
    },
    "--show-warnings": {
      "value": "--show-warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:515"
      ]
    },
    "--simulate": {
      "value": "--simulate",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:289"
      ]
    },
    "--simulate-failure": {
      "value": "--simulate-failure",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:399"
      ]
    },
    "--spec": {
      "value": "--spec",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:229",
        "scripts/test_frontend_ORIGINAL.py:231"
      ]
    },
    "--start": {
      "value": "--start",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:918"
      ]
    },
    "--status": {
      "value": "--status",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:924"
      ]
    },
    "--stop": {
      "value": "--stop",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:179"
      ]
    },
    "--strategy": {
      "value": "--strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "--strict": {
      "value": "--strict",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:258",
        "scripts/compliance/test_size_validator.py:524"
      ]
    },
    "--strict-markers": {
      "value": "--strict-markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:288"
      ]
    },
    "--tail": {
      "value": "--tail",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:74"
      ]
    },
    "--tb=no": {
      "value": "--tb=no",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--tb=short": {
      "value": "--tb=short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:584",
        "auth_service/tests/test_auth_comprehensive_audit.py:619",
        "auth_service/tests/test_auth_real_services_comprehensive.py:519",
        "auth_service/tests/test_critical_bugs_real.py:289",
        "auth_service/tests/test_critical_bugs_simple.py:141",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:334",
        "auth_service/tests/test_refresh_endpoint_integration.py:173",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:285",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/comprehensive_test_fixer.py:367"
      ]
    },
    "--test": {
      "value": "--test",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:445",
        "scripts/test_execution_tracker.py:773"
      ]
    },
    "--test-all-origins": {
      "value": "--test-all-origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:438"
      ]
    },
    "--test-category": {
      "value": "--test-category",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:194"
      ]
    },
    "--test-dir": {
      "value": "--test-dir",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:134",
        "scripts/optimize_test_performance.py:343"
      ]
    },
    "--test-unified": {
      "value": "--test-unified",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:242"
      ]
    },
    "--test-websocket": {
      "value": "--test-websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:430"
      ]
    },
    "--testMatch": {
      "value": "--testMatch",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:188",
        "scripts/test_frontend_ORIGINAL.py:190",
        "scripts/test_frontend_ORIGINAL.py:192",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--testNamePattern=": {
      "value": "--testNamePattern=",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:149"
      ]
    },
    "--testPathPattern=__tests__/(components|hooks|store)": {
      "value": "--testPathPattern=__tests__/(components|hooks|store)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58"
      ]
    },
    "--threshold": {
      "value": "--threshold",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:778"
      ]
    },
    "--timeout": {
      "value": "--timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:213"
      ]
    },
    "--timeout=": {
      "value": "--timeout=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:396"
      ]
    },
    "--timeout=30": {
      "value": "--timeout=30",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:36"
      ]
    },
    "--timeout=300": {
      "value": "--timeout=300",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:84"
      ]
    },
    "--timeout=5": {
      "value": "--timeout=5",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--token": {
      "value": "--token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "--type-check": {
      "value": "--type-check",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:411"
      ]
    },
    "--update-snapshots": {
      "value": "--update-snapshots",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:404"
      ]
    },
    "--updateSnapshot": {
      "value": "--updateSnapshot",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:145"
      ]
    },
    "--validate-tests": {
      "value": "--validate-tests",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:933"
      ]
    },
    "--verbose": {
      "value": "--verbose",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:388",
        "scripts/frontend_iterative_test_runner.py:284",
        "scripts/test_backend_optimized.py:388",
        "scripts/test_backend_ORIGINAL.py:505",
        "scripts/test_clickhouse_startup_fix.py:398",
        "scripts/test_cors.py:442",
        "scripts/test_dashboard.py:105",
        "scripts/test_example_message_flow.py:434",
        "scripts/test_frontend_ORIGINAL.py:147",
        "scripts/test_frontend_ORIGINAL.py:419"
      ]
    },
    "--version": {
      "value": "--version",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:23",
        "scripts/launch_test_env.py:24",
        "scripts/test_frontend_ORIGINAL.py:82",
        "scripts/test_frontend_ORIGINAL.py:89",
        "scripts/test_frontend_simple.py:29",
        "scripts/test_log_introspection.py:254",
        "scripts/test_workflows_with_act.py:39",
        "scripts/test_workflows_with_act.py:56"
      ]
    },
    "--wait": {
      "value": "--wait",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:199",
        "scripts/setup_e2e_test_ports.py:56"
      ]
    },
    "--wait-for-completion": {
      "value": "--wait-for-completion",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106"
      ]
    },
    "--wait-for-completion requires --workflow-name": {
      "value": "--wait-for-completion requires --workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:108"
      ]
    },
    "--watch": {
      "value": "--watch",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:143",
        "scripts/test_frontend_ORIGINAL.py:402"
      ]
    },
    "--workflow-name": {
      "value": "--workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:64",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141"
      ]
    },
    "--ws-endpoint": {
      "value": "--ws-endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:432"
      ]
    },
    "->": {
      "value": "->",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:152",
        "scripts/fix_e2e_test_imports.py:160",
        "scripts/fix_e2e_test_imports.py:169",
        "scripts/fix_test_import_errors.py:184",
        "scripts/standardize_l3_test_names.py:161",
        "scripts/test_agent_execution_websocket_integration.py:100",
        "scripts/test_docker_hot_reload.py:172",
        "scripts/test_staging_startup.py:92",
        "scripts/test_supervisor_execution_flow.py:37",
        "scripts/test_supervisor_execution_flow.py:160"
      ]
    },
    "-> @pytest.mark.": {
      "value": "-> @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:182"
      ]
    },
    "-DOCKER] Ensuring": {
      "value": "-DOCKER] Ensuring",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:52"
      ]
    },
    "-DOCKER] Force cleanup requested": {
      "value": "-DOCKER] Force cleanup requested",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:80"
      ]
    },
    "-DOCKER] Found": {
      "value": "-DOCKER] Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:64"
      ]
    },
    "-DOCKER] Graceful cleanup (containers preserved)": {
      "value": "-DOCKER] Graceful cleanup (containers preserved)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:85"
      ]
    },
    "-DOCKER] ✓ All": {
      "value": "-DOCKER] ✓ All",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:61",
        "scripts/test_docker_manager.py:70"
      ]
    },
    "-DOCKER] ✗ Failed to start": {
      "value": "-DOCKER] ✗ Failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:72"
      ]
    },
    "-P": {
      "value": "-P",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:116",
        "scripts/test_workflows_with_act.py:155"
      ]
    },
    "-U": {
      "value": "-U",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:98"
      ]
    },
    "-W": {
      "value": "-W",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:114",
        "scripts/test_workflows_with_act.py:153"
      ]
    },
    "-a": {
      "value": "-a",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:169"
      ]
    },
    "-agent-": {
      "value": "-agent-",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:292"
      ]
    },
    "-b": {
      "value": "-b",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:412"
      ]
    },
    "-c": {
      "value": "-c",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:77",
        "auth_service/tests/test_environment_loading.py:123",
        "auth_service/tests/test_environment_loading.py:173",
        "auth_service/tests/test_environment_loading.py:231",
        "auth_service/tests/test_environment_loading.py:276",
        "auth_service/tests/test_environment_loading.py:321",
        "scripts/test_backend_optimized.py:368",
        "scripts/test_backend_ORIGINAL.py:196",
        "scripts/test_backend_ORIGINAL.py:198",
        "scripts/test_backend_ORIGINAL.py:485"
      ]
    },
    "-d": {
      "value": "-d",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:92",
        "scripts/start_test_services.py:48",
        "scripts/test_docker_manager.py:98"
      ]
    },
    "-e": {
      "value": "-e",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:160"
      ]
    },
    "-f": {
      "value": "-f",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:149",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/launch_test_env.py:46",
        "scripts/launch_test_env.py:86",
        "scripts/start_test_services.py:46",
        "scripts/test_docker_config.py:11"
      ]
    },
    "-h": {
      "value": "-h",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:298",
        "scripts/test_adaptive_workflow.py:391"
      ]
    },
    "-k": {
      "value": "-k",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:82",
        "scripts/run_supervisor_test_coverage.py:156",
        "scripts/test_backend_ORIGINAL.py:275",
        "scripts/test_backend_ORIGINAL.py:486",
        "scripts/test_failure_analyzer.py:342",
        "scripts/test_frontend_ORIGINAL.py:391"
      ]
    },
    "-l": {
      "value": "-l",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:154",
        "scripts/standardize_l3_test_names.py:256",
        "scripts/test_frontend_ORIGINAL.py:409",
        "scripts/test_workflows_with_act.py:113"
      ]
    },
    "-m": {
      "value": "-m",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/comprehensive_test_fixer.py:364",
        "scripts/e2e_test_fixer.py:311",
        "scripts/fix_test_batch.py:270",
        "scripts/run_agent_pipeline_test.py:78",
        "scripts/run_supervisor_test_coverage.py:72",
        "scripts/run_supervisor_test_coverage.py:100",
        "scripts/run_supervisor_test_coverage.py:129"
      ]
    },
    "-n": {
      "value": "-n",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:250",
        "scripts/test_backend_ORIGINAL.py:233",
        "scripts/test_backend_ORIGINAL.py:235",
        "scripts/test_workflows_with_act.py:156",
        "scripts/unified_test_config.py:369"
      ]
    },
    "-name": {
      "value": "-name",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "-o": {
      "value": "-o",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/business_value_test_index.py:549",
        "scripts/compliance/fake_test_scanner.py:384",
        "scripts/compliance/test_size_validator.py:521",
        "scripts/test_backend_optimized.py:373"
      ]
    },
    "-p": {
      "value": "-p",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:47",
        "scripts/start_test_services.py:47",
        "scripts/test_backend_ORIGINAL.py:291",
        "scripts/test_backend_ORIGINAL.py:492"
      ]
    },
    "-q": {
      "value": "-q",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:390",
        "scripts/test_backend_ORIGINAL.py:506",
        "scripts/test_failure_scanner.py:101",
        "scripts/unified_test_config.py:388"
      ]
    },
    "-rN": {
      "value": "-rN",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "-s": {
      "value": "-s",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:174",
        "scripts/pytest_plugins.py:248",
        "scripts/run_agent_pipeline_test.py:83",
        "scripts/test_jwt_critical.py:44",
        "scripts/test_redis_config_critical_failure.py:342",
        "scripts/test_secret_manager_builder_critical.py:842"
      ]
    },
    "-t": {
      "value": "-t",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:411"
      ]
    },
    "-type": {
      "value": "-type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "-u": {
      "value": "-u",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:404"
      ]
    },
    "-v": {
      "value": "-v",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:584",
        "auth_service/tests/test_auth_comprehensive_audit.py:619",
        "auth_service/tests/test_auth_real_services_comprehensive.py:519",
        "auth_service/tests/test_critical_bugs_real.py:289",
        "auth_service/tests/test_critical_bugs_simple.py:141",
        "auth_service/tests/test_environment_loading.py:365",
        "auth_service/tests/test_oauth_state_validation.py:303",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:334",
        "auth_service/tests/test_refresh_endpoint_integration.py:173",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:285"
      ]
    },
    "-vv": {
      "value": "-vv",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:226",
        "scripts/unified_test_config.py:386"
      ]
    },
    "-w": {
      "value": "-w",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:402"
      ]
    },
    "-x": {
      "value": "-x",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:252",
        "scripts/test_backend_ORIGINAL.py:493",
        "scripts/test_websocket_injection_fix_complete.py:283",
        "scripts/unified_test_config.py:392"
      ]
    },
    "-xvs": {
      "value": "-xvs",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:733",
        "scripts/comprehensive_test_fixer.py:366",
        "scripts/fix_test_batch.py:271",
        "scripts/test_comprehensive_scanner.py:65"
      ]
    },
    ".": {
      "value": ".",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71",
        "auth_service/test_url_construction.py:209",
        "auth_service/tests/test_all_imports.py:50",
        "auth_service/tests/test_auth_comprehensive.py:140",
        "auth_service/tests/test_auth_comprehensive_audit.py:243",
        "auth_service/tests/test_auth_comprehensive_audit.py:247",
        "auth_service/tests/test_auth_comprehensive_audit.py:247"
      ]
    },
    ". **": {
      "value": ". **",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:293"
      ]
    },
    ". AuthConfig should validate port consistency.": {
      "value": ". AuthConfig should validate port consistency.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:291"
      ]
    },
    ". Consider consolidating or improving test coverage.": {
      "value": ". Consider consolidating or improving test coverage.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:478"
      ]
    },
    ". Got": {
      "value": ". Got",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:68"
      ]
    },
    ". Service will fail to respond correctly with this configuration.": {
      "value": ". Service will fail to respond correctly with this configuration.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:334"
      ]
    },
    ". Testing URL:": {
      "value": ". Testing URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:178"
      ]
    },
    ". This mismatch prevents proper service communication.": {
      "value": ". This mismatch prevents proper service communication.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:172"
      ]
    },
    ". This suggests hardcoded configuration is overriding environment variables.": {
      "value": ". This suggests hardcoded configuration is overriding environment variables.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:201"
      ]
    },
    ". This will cause binding/URL mismatches.": {
      "value": ". This will cause binding/URL mismatches.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:139"
      ]
    },
    ". URL:": {
      "value": ". URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:60"
      ]
    },
    ". You said:": {
      "value": ". You said:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:167"
      ]
    },
    ". [": {
      "value": ". [",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:142",
        "scripts/test_failure_scanner.py:240"
      ]
    },
    ". `": {
      "value": ". `",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:885"
      ]
    },
    ".\"\"\"": {
      "value": ".\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:575"
      ]
    },
    ".\"\"\"\n    return {\"status\": \"ok\"}": {
      "value": ".\"\"\"\n    return {\"status\": \"ok\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:165"
      ]
    },
    ".*": {
      "value": ".*",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:332"
      ]
    },
    ".*I/O operation on closed file.*": {
      "value": ".*I/O operation on closed file.*",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:228"
      ]
    },
    ".*closed file.*": {
      "value": ".*closed file.*",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:235"
      ]
    },
    ".*invalid escape sequence.*": {
      "value": ".*invalid escape sequence.*",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:241"
      ]
    },
    "...": {
      "value": "...",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:38",
        "auth_service/tests/test_critical_bugs.py:306",
        "scripts/analyze_test_overlap.py:71",
        "scripts/apply_fast_test_decorators.py:124",
        "scripts/compliance/fake_test_scanner.py:67",
        "scripts/compliance/real_test_requirements_enforcer.py:534",
        "scripts/debug_cors_test.py:39",
        "scripts/final_test_status_check.py:90",
        "scripts/final_test_status_check.py:112",
        "scripts/fix_authentication_test_tokens.py:58"
      ]
    },
    "...\n[bold]Redirect URI:[/bold]": {
      "value": "...\n[bold]Redirect URI:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:154"
      ]
    },
    "... and": {
      "value": "... and",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:437",
        "scripts/align_test_imports.py:449",
        "scripts/check_test_compliance.py:169",
        "scripts/check_test_compliance.py:179",
        "scripts/check_test_compliance.py:187",
        "scripts/check_test_import_order.py:93",
        "scripts/ci/check_test_stubs.py:52",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/real_test_requirements_enforcer.py:539",
        "scripts/compliance/real_test_validator.py:305"
      ]
    },
    "...\" https://api.staging.netrasystems.ai/health": {
      "value": "...\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:321"
      ]
    },
    "...[/cyan]": {
      "value": "...[/cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:194",
        "scripts/test_oauth_local.py:255"
      ]
    },
    "../reports/frontend-coverage": {
      "value": "../reports/frontend-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:138"
      ]
    },
    "./auth_service/": {
      "value": "./auth_service/",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:146"
      ]
    },
    "./frontend/": {
      "value": "./frontend/",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:144"
      ]
    },
    "./netra_backend/": {
      "value": "./netra_backend/",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:145"
      ]
    },
    ".0f": {
      "value": ".0f",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:261"
      ]
    },
    ".1%": {
      "value": ".1%",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:302",
        "auth_service/tests/auth-service-down-critical-scenarios.py:303",
        "scripts/compliance/demo_test_size_enforcement.py:97",
        "scripts/compliance/test_refactor_helper.py:722",
        "scripts/real_service_test_metrics.py:175",
        "scripts/test_dashboard.py:83",
        "scripts/test_dashboard.py:85",
        "scripts/test_dashboard.py:351",
        "scripts/test_execution_tracker.py:740",
        "scripts/test_execution_tracker.py:742"
      ]
    },
    ".1f": {
      "value": ".1f",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465",
        "scripts/analyze_test_overlap.py:563",
        "scripts/automated_test_fix_loop.py:143",
        "scripts/autonomous_review/test_reviewer.py:134",
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/business_value_test_index.py:694",
        "scripts/business_value_test_index.py:701",
        "scripts/business_value_test_index.py:738",
        "scripts/business_value_test_index.py:743"
      ]
    },
    ".2f": {
      "value": ".2f",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:111",
        "auth_service/tests/auth-service-down-critical-scenarios.py:121",
        "auth_service/tests/auth-service-down-critical-scenarios.py:346",
        "auth_service/tests/auth-service-down-critical-scenarios.py:353",
        "auth_service/tests/auth-service-down-critical-scenarios.py:496",
        "scripts/real_service_test_metrics.py:125",
        "scripts/real_service_test_metrics.py:162",
        "scripts/run_all_test_categories.py:51",
        "scripts/run_all_test_categories.py:146",
        "scripts/run_supervisor_test_coverage.py:225"
      ]
    },
    ".3f": {
      "value": ".3f",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:185",
        "scripts/real_service_test_metrics.py:186",
        "scripts/real_service_test_metrics.py:187",
        "scripts/test_agent_execution_websocket_integration.py:89",
        "scripts/test_agent_execution_websocket_integration.py:291",
        "scripts/test_agent_execution_websocket_integration.py:309",
        "scripts/test_agent_execution_websocket_integration.py:385",
        "scripts/test_agent_orchestration_recovery.py:199",
        "scripts/test_agent_pipeline_simple.py:86",
        "scripts/test_agent_pipeline_simple.py:367"
      ]
    },
    ".4f": {
      "value": ".4f",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:150",
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    ".<40": {
      "value": ".<40",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:185"
      ]
    },
    ".cache": {
      "value": ".cache",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:129"
      ]
    },
    ".coverage": {
      "value": ".coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/business_value_test_index.py:546",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:26"
      ]
    },
    ".coveragerc": {
      "value": ".coveragerc",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:106"
      ]
    },
    ".eggs": {
      "value": ".eggs",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132"
      ]
    },
    ".env": {
      "value": ".env",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:24",
        "scripts/business_value_test_index.py:131",
        "scripts/compliance/project_test_validator.py:42",
        "scripts/generate_test_audit.py:22",
        "scripts/migrate_test_ids.py:172",
        "scripts/run_critical_test.py:12",
        "scripts/setup_test_environment.py:49"
      ]
    },
    ".env.development": {
      "value": ".env.development",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:20"
      ]
    },
    ".env.development.local": {
      "value": ".env.development.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:172"
      ]
    },
    ".env.mock": {
      "value": ".env.mock",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:50",
        "scripts/test_backend_ORIGINAL.py:63",
        "scripts/unified_test_config.py:167",
        "scripts/unified_test_config.py:176",
        "scripts/unified_test_config.py:185"
      ]
    },
    ".env.mock*": {
      "value": ".env.mock*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    ".env.staging": {
      "value": ".env.staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:18"
      ]
    },
    ".env.test": {
      "value": ".env.test",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:47",
        "scripts/launch_test_env.py:87",
        "scripts/test/verify_test_ports.py:70",
        "scripts/test_backend_ORIGINAL.py:65"
      ]
    },
    ".env.test file values:": {
      "value": ".env.test file values:",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:72"
      ]
    },
    ".env.test*": {
      "value": ".env.test*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    ".failed_tests_cache.json": {
      "value": ".failed_tests_cache.json",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:34"
      ]
    },
    ".git": {
      "value": ".git",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:130",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/fix_all_test_issues.py:16",
        "scripts/generate_test_audit.py:23",
        "scripts/migrate_test_ids.py:171",
        "scripts/remove_test_stubs.py:79"
      ]
    },
    ".github": {
      "value": ".github",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:27"
      ]
    },
    ".idea": {
      "value": ".idea",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".jpg": {
      "value": ".jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87"
      ]
    },
    ".js": {
      "value": ".js",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".json": {
      "value": ".json",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:372",
        "scripts/iterative_test_fix_loop.py:22",
        "scripts/pytest_resource_monitor.py:288",
        "scripts/run_all_test_categories.py:120",
        "scripts/test_comprehensive_scanner.py:202",
        "scripts/test_failure_tracker.py:21",
        "scripts/test_staging_deployment.py:225",
        "scripts/test_websocket_cors_comprehensive.py:335",
        "scripts/test_workflows_with_act.py:198"
      ]
    },
    ".jsx": {
      "value": ".jsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".mypy_cache": {
      "value": ".mypy_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/generate_test_audit.py:26"
      ]
    },
    ".py": {
      "value": ".py",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:149",
        "scripts/analyze_test_overlap.py:98",
        "scripts/auto_fix_test_sizes.py:277",
        "scripts/auto_fix_test_violations.py:106",
        "scripts/auto_fix_test_violations.py:374",
        "scripts/automated_test_fix_loop.py:36",
        "scripts/autonomous_review/test_reviewer.py:304",
        "scripts/autonomous_review/test_reviewer.py:307",
        "scripts/autonomous_review/test_reviewer.py:309",
        "scripts/autonomous_review/test_reviewer.py:310"
      ]
    },
    ".pytest_cache": {
      "value": ".pytest_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:25",
        "scripts/migrate_test_ids.py:171",
        "scripts/remove_test_stubs.py:80"
      ]
    },
    ".return_value =": {
      "value": ".return_value =",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    ".ruff_cache": {
      "value": ".ruff_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133"
      ]
    },
    ".secrets": {
      "value": ".secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:71",
        "scripts/test_workflows_with_act.py:90",
        "scripts/test_workflows_with_act.py:115",
        "scripts/test_workflows_with_act.py:154"
      ]
    },
    ".service_discovery": {
      "value": ".service_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:64"
      ]
    },
    ".staging.netrasystems.ai": {
      "value": ".staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:156",
        "scripts/setup_staging_test_account.py:164"
      ]
    },
    ".test": {
      "value": ".test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121"
      ]
    },
    ".test.": {
      "value": ".test.",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/remove_test_stubs.py:99"
      ]
    },
    ".test.ts": {
      "value": ".test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:323",
        "scripts/test_frontend_ORIGINAL.py:177"
      ]
    },
    ".test.tsx": {
      "value": ".test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:205",
        "scripts/autonomous_review/test_reviewer.py:207",
        "scripts/autonomous_review/test_reviewer.py:321",
        "scripts/autonomous_review/test_reviewer.py:322",
        "scripts/frontend_iterative_test_runner.py:594",
        "scripts/test_frontend_ORIGINAL.py:177"
      ]
    },
    ".test_backups_": {
      "value": ".test_backups_",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:753"
      ]
    },
    ".tox": {
      "value": ".tox",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:25"
      ]
    },
    ".ts": {
      "value": ".ts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".tsx": {
      "value": ".tsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/frontend_iterative_test_runner.py:532",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".venv": {
      "value": ".venv",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:78",
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19",
        "scripts/generate_test_audit.py:22"
      ]
    },
    ".vs": {
      "value": ".vs",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".vscode": {
      "value": ".vscode",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    "/": {
      "value": "/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:172",
        "auth_service/test_auth_direct.py:248",
        "auth_service/test_staging_db_connection.py:317",
        "auth_service/test_url_construction.py:238",
        "auth_service/tests/test_critical_bugs_real.py:261",
        "scripts/analyze_test_overlap.py:115",
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_violations.py:806",
        "scripts/automated_test_fix_loop.py:104",
        "scripts/automated_test_fix_loop.py:133"
      ]
    },
    "/ directory...": {
      "value": "/ directory...",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:245"
      ]
    },
    "/**/*.test.[jt]s?(x)": {
      "value": "/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:180",
        "scripts/test_frontend_ORIGINAL.py:182"
      ]
    },
    "/.dockerenv": {
      "value": "/.dockerenv",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:70"
      ]
    },
    "//": {
      "value": "//",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:71"
      ]
    },
    "// TEST HOT RELOAD MARKER -": {
      "value": "// TEST HOT RELOAD MARKER -",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:30"
      ]
    },
    "/0": {
      "value": "/0",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:45",
        "scripts/test_service_monitor.py:48"
      ]
    },
    "/1": {
      "value": "/1",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:177"
      ]
    },
    "/10 successful": {
      "value": "/10 successful",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:268"
      ]
    },
    "/100": {
      "value": "/100",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:64",
        "scripts/simple_test_fix_loop.py:93",
        "scripts/simple_test_fix_loop.py:94",
        "scripts/test_environment_validation_clean.py:117"
      ]
    },
    "/100 ---": {
      "value": "/100 ---",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:12"
      ]
    },
    "/100 ===": {
      "value": "/100 ===",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:121"
      ]
    },
    "/3:": {
      "value": "/3:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:240"
      ]
    },
    "/5": {
      "value": "/5",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:113"
      ]
    },
    "/5 users in": {
      "value": "/5 users in",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:83"
      ]
    },
    "/Users/anthony/Documents/GitHub/netra-apex": {
      "value": "/Users/anthony/Documents/GitHub/netra-apex",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:12",
        "scripts/test_blocking_analysis.py:10",
        "scripts/test_intensive_serialization.py:12",
        "scripts/websocket_performance_standalone_test.py:18"
      ]
    },
    "/__init__.py": {
      "value": "/__init__.py",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:235",
        "scripts/fix_test_batch.py:97"
      ]
    },
    "/_next/static": {
      "value": "/_next/static",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:134"
      ]
    },
    "/`": {
      "value": "/`",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:199"
      ]
    },
    "/`:": {
      "value": "/`:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:176"
      ]
    },
    "/agents": {
      "value": "/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:62"
      ]
    },
    "/agents/": {
      "value": "/agents/",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:55"
      ]
    },
    "/agents/data": {
      "value": "/agents/data",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:120"
      ]
    },
    "/agents/optimization": {
      "value": "/agents/optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:178"
      ]
    },
    "/agents/test": {
      "value": "/agents/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:145"
      ]
    },
    "/agents/triage": {
      "value": "/agents/triage",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:66"
      ]
    },
    "/api/admin/auth-status": {
      "value": "/api/admin/auth-status",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:98"
      ]
    },
    "/api/admin/create_admin": {
      "value": "/api/admin/create_admin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:252"
      ]
    },
    "/api/admin/delete_user": {
      "value": "/api/admin/delete_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:251"
      ]
    },
    "/api/admin/shutdown": {
      "value": "/api/admin/shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:541"
      ]
    },
    "/api/admin/users": {
      "value": "/api/admin/users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:250"
      ]
    },
    "/api/agents": {
      "value": "/api/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:108"
      ]
    },
    "/api/agents/": {
      "value": "/api/agents/",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:53"
      ]
    },
    "/api/agents/data": {
      "value": "/api/agents/data",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:118"
      ]
    },
    "/api/agents/optimization": {
      "value": "/api/agents/optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:176"
      ]
    },
    "/api/agents/test-circuit-breaker": {
      "value": "/api/agents/test-circuit-breaker",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:250"
      ]
    },
    "/api/agents/triage": {
      "value": "/api/agents/triage",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:64",
        "scripts/test_staging_cors.py:26",
        "scripts/test_staging_cors.py:49"
      ]
    },
    "/api/config": {
      "value": "/api/config",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:48"
      ]
    },
    "/api/config/public": {
      "value": "/api/config/public",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:40"
      ]
    },
    "/api/debug/auth": {
      "value": "/api/debug/auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:98"
      ]
    },
    "/api/health": {
      "value": "/api/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:183",
        "auth_service/tests/auth-service-down-critical-scenarios.py:370",
        "scripts/staging_comprehensive_test.py:202",
        "scripts/test_cors_implementation.py:39",
        "scripts/test_staging_auth_e2e.py:37",
        "scripts/test_staging_env.py:121"
      ]
    },
    "/api/settings": {
      "value": "/api/settings",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:83"
      ]
    },
    "/api/status": {
      "value": "/api/status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:147"
      ]
    },
    "/api/test": {
      "value": "/api/test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:16"
      ]
    },
    "/api/threads": {
      "value": "/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:226",
        "scripts/test_adaptive_workflow_local.py:56",
        "scripts/test_backend_auth_config.py:69",
        "scripts/test_cold_start_e2e.py:324",
        "scripts/test_cors_implementation.py:41",
        "scripts/test_data_pipeline_simple.py:69",
        "scripts/test_staging_auth_e2e.py:203",
        "scripts/test_staging_auth_live.py:140",
        "scripts/test_staging_deployment.py:104",
        "scripts/test_staging_env.py:69"
      ]
    },
    "/api/threads/": {
      "value": "/api/threads/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:346",
        "scripts/test_data_pipeline_simple.py:81",
        "scripts/test_data_pipeline_simple.py:95",
        "scripts/test_data_pipeline_simple.py:98",
        "scripts/test_data_pipeline_simple.py:113",
        "scripts/test_data_pipeline_simple.py:134"
      ]
    },
    "/api/threads/test-thread-id": {
      "value": "/api/threads/test-thread-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:42"
      ]
    },
    "/api/user/data": {
      "value": "/api/user/data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:233"
      ]
    },
    "/api/user/me": {
      "value": "/api/user/me",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:70",
        "scripts/test_staging_login_automated.py:81"
      ]
    },
    "/api/v1/agents/": {
      "value": "/api/v1/agents/",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:54"
      ]
    },
    "/api/v1/agents/data": {
      "value": "/api/v1/agents/data",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:119"
      ]
    },
    "/api/v1/agents/optimization": {
      "value": "/api/v1/agents/optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:177"
      ]
    },
    "/api/v1/agents/triage": {
      "value": "/api/v1/agents/triage",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:65"
      ]
    },
    "/api/v1/status": {
      "value": "/api/v1/status",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:203"
      ]
    },
    "/api/version": {
      "value": "/api/version",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:146"
      ]
    },
    "/api/workspaces": {
      "value": "/api/workspaces",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:106"
      ]
    },
    "/api/ws": {
      "value": "/api/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:98"
      ]
    },
    "/app/": {
      "value": "/app/",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:144"
      ]
    },
    "/app/auth_service": {
      "value": "/app/auth_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:146"
      ]
    },
    "/app/netra_backend": {
      "value": "/app/netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:145"
      ]
    },
    "/app/tests/integration/": {
      "value": "/app/tests/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:361"
      ]
    },
    "/auth/": {
      "value": "/auth/",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:260"
      ]
    },
    "/auth/callback": {
      "value": "/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:231",
        "auth_service/tests/test_auth_comprehensive.py:245",
        "auth_service/tests/test_auth_comprehensive.py:249",
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "/auth/callback?code=google-auth-code&state=": {
      "value": "/auth/callback?code=google-auth-code&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:292"
      ]
    },
    "/auth/callback?code=test-code&state=": {
      "value": "/auth/callback?code=test-code&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:138",
        "auth_service/tests/test_oauth_state_validation.py:156",
        "auth_service/tests/test_oauth_state_validation.py:174"
      ]
    },
    "/auth/config": {
      "value": "/auth/config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:51",
        "auth_service/tests/test_auth_comprehensive_audit.py:522",
        "auth_service/tests/test_auth_comprehensive_audit.py:606",
        "auth_service/tests/test_auth_real_services_comprehensive.py:421",
        "scripts/test_oauth_local.py:144",
        "scripts/test_staging_auth_flow.py:34",
        "scripts/test_staging_auth_flow.py:45"
      ]
    },
    "/auth/dev-login": {
      "value": "/auth/dev-login",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:230"
      ]
    },
    "/auth/dev/login": {
      "value": "/auth/dev/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:527",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:236",
        "scripts/test_staging_auth_e2e.py:65"
      ]
    },
    "/auth/dev_login": {
      "value": "/auth/dev_login",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:244"
      ]
    },
    "/auth/google": {
      "value": "/auth/google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:168",
        "auth_service/tests/test_auth_comprehensive.py:200",
        "auth_service/tests/test_auth_comprehensive.py:215"
      ]
    },
    "/auth/health": {
      "value": "/auth/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:44",
        "auth_service/tests/test_auth_comprehensive_audit.py:588",
        "scripts/test_auth_integration.py:44",
        "scripts/test_staging_deployment.py:85"
      ]
    },
    "/auth/login": {
      "value": "/auth/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:327",
        "auth_service/tests/test_auth_comprehensive.py:343",
        "auth_service/tests/test_auth_comprehensive.py:377",
        "auth_service/tests/test_auth_comprehensive.py:488",
        "auth_service/tests/test_auth_comprehensive.py:493",
        "scripts/test_adaptive_workflow.py:148",
        "scripts/test_auth_client_debug.py:54",
        "scripts/test_auth_integration.py:113",
        "scripts/test_data_pipeline_simple.py:40",
        "scripts/test_signup_flow_manual.py:139"
      ]
    },
    "/auth/login/google": {
      "value": "/auth/login/google",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:120"
      ]
    },
    "/auth/login?provider=google": {
      "value": "/auth/login?provider=google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:403",
        "auth_service/tests/test_oauth_state_validation.py:87",
        "auth_service/tests/test_oauth_state_validation.py:235",
        "scripts/test_oauth_local.py:187"
      ]
    },
    "/auth/logout": {
      "value": "/auth/logout",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:300"
      ]
    },
    "/auth/me": {
      "value": "/auth/me",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:470",
        "scripts/test_oauth_local.py:303"
      ]
    },
    "/auth/nonexistent-endpoint": {
      "value": "/auth/nonexistent-endpoint",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:186"
      ]
    },
    "/auth/providers": {
      "value": "/auth/providers",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:35",
        "scripts/test_staging_auth_flow.py:111"
      ]
    },
    "/auth/refresh": {
      "value": "/auth/refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:283",
        "auth_service/tests/test_auth_comprehensive_audit.py:292",
        "auth_service/tests/test_auth_comprehensive_audit.py:548",
        "auth_service/tests/test_auth_real_services_comprehensive.py:438",
        "auth_service/tests/test_auth_real_services_comprehensive.py:443",
        "auth_service/tests/test_critical_bugs.py:63",
        "auth_service/tests/test_critical_bugs.py:99",
        "auth_service/tests/test_critical_bugs.py:107",
        "auth_service/tests/test_critical_bugs.py:144",
        "auth_service/tests/test_critical_bugs.py:192"
      ]
    },
    "/auth/register": {
      "value": "/auth/register",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:400",
        "scripts/test_adaptive_workflow.py:177",
        "scripts/test_auth_client_debug.py:38",
        "scripts/test_data_pipeline_simple.py:32",
        "scripts/test_signup_flow_manual.py:21",
        "scripts/test_signup_flow_manual.py:40",
        "scripts/test_signup_flow_manual.py:57",
        "scripts/test_signup_flow_manual.py:74",
        "scripts/test_signup_flow_manual.py:91",
        "scripts/test_signup_flow_manual.py:108"
      ]
    },
    "/auth/status": {
      "value": "/auth/status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:283"
      ]
    },
    "/auth/token": {
      "value": "/auth/token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "/auth/validate": {
      "value": "/auth/validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:98",
        "auth_service/tests/auth-service-down-critical-scenarios.py:143",
        "auth_service/tests/auth-service-down-critical-scenarios.py:270",
        "auth_service/tests/auth-service-down-critical-scenarios.py:329",
        "auth_service/tests/auth-service-down-critical-scenarios.py:442",
        "auth_service/tests/auth-service-down-critical-scenarios.py:475",
        "scripts/test_auth_client_debug.py:121",
        "scripts/test_auth_integration.py:89",
        "scripts/test_auth_service_integration_fix.py:148",
        "scripts/test_auth_service_integration_fix.py:150"
      ]
    },
    "/auth/verify": {
      "value": "/auth/verify",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:541",
        "auth_service/tests/test_auth_comprehensive_audit.py:563",
        "scripts/test_data_pipeline_simple.py:124"
      ]
    },
    "/auth/websocket/auth": {
      "value": "/auth/websocket/auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:576"
      ]
    },
    "/cloudsql/": {
      "value": "/cloudsql/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:232",
        "auth_service/test_staging_db_connection.py:242",
        "auth_service/test_url_construction.py:142",
        "auth_service/test_url_construction.py:163",
        "scripts/test_auth_database_sessions.py:98",
        "scripts/test_auth_database_sessions.py:258",
        "scripts/test_ssl_certificates_staging.py:43"
      ]
    },
    "/cloudsql/invalid-format": {
      "value": "/cloudsql/invalid-format",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:192"
      ]
    },
    "/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:34",
        "auth_service/test_actual_staging_credentials.py:72",
        "auth_service/test_staging_db_connection.py:39",
        "auth_service/test_staging_db_connection.py:55",
        "auth_service/test_url_construction.py:35",
        "scripts/test_database_url_builder_comprehensive.py:22",
        "scripts/test_ssl_certificates_staging.py:110",
        "scripts/test_staging_migrations.py:187"
      ]
    },
    "/cloudsql/prod-project:us-central1:prod-instance": {
      "value": "/cloudsql/prod-project:us-central1:prod-instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:262"
      ]
    },
    "/cloudsql/project:region:instance": {
      "value": "/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:130",
        "scripts/test_database_url_builder_comprehensive.py:203",
        "scripts/test_database_url_builder_comprehensive.py:225"
      ]
    },
    "/custom_db": {
      "value": "/custom_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:200"
      ]
    },
    "/dashboard": {
      "value": "/dashboard",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:231"
      ]
    },
    "/debug/auth": {
      "value": "/debug/auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:98"
      ]
    },
    "/docs": {
      "value": "/docs",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:43",
        "scripts/test_staging_auth_flow.py:61",
        "scripts/test_staging_env.py:57"
      ]
    },
    "/e2e/": {
      "value": "/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:284",
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/frontend_test_progress.json": {
      "value": "/frontend_test_progress.json",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:114"
      ]
    },
    "/health": {
      "value": "/health",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:56",
        "netra_backend/app/api/test_endpoints.py:57",
        "netra_backend/app/api/test_endpoints.py:58",
        "auth_service/tests/test_auth_comprehensive.py:273",
        "auth_service/tests/test_auth_comprehensive.py:282",
        "auth_service/tests/test_auth_comprehensive.py:300",
        "auth_service/tests/test_auth_comprehensive.py:429",
        "auth_service/tests/test_auth_comprehensive.py:448",
        "auth_service/tests/test_auth_comprehensive.py:511",
        "auth_service/tests/test_auth_real_services_comprehensive.py:412"
      ]
    },
    "/health-status": {
      "value": "/health-status",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:272"
      ]
    },
    "/health/": {
      "value": "/health/",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:84"
      ]
    },
    "/health/live": {
      "value": "/health/live",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:183"
      ]
    },
    "/health/ready": {
      "value": "/health/ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:182"
      ]
    },
    "/integration/": {
      "value": "/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:360"
      ]
    },
    "/messages": {
      "value": "/messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:346",
        "scripts/test_data_pipeline_simple.py:113"
      ]
    },
    "/metrics": {
      "value": "/metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:274"
      ]
    },
    "/migrations/": {
      "value": "/migrations/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:37"
      ]
    },
    "/netra": {
      "value": "/netra",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:148"
      ]
    },
    "/netra-apex/": {
      "value": "/netra-apex/",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:74"
      ]
    },
    "/netra_staging": {
      "value": "/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:109",
        "auth_service/test_url_construction.py:110"
      ]
    },
    "/netra_test": {
      "value": "/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:176"
      ]
    },
    "/postgres": {
      "value": "/postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:73"
      ]
    },
    "/proc/self/cgroup": {
      "value": "/proc/self/cgroup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:99"
      ]
    },
    "/profile": {
      "value": "/profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:232"
      ]
    },
    "/secrets/": {
      "value": "/secrets/",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:19",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_clickhouse.py:52",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:20"
      ]
    },
    "/secure": {
      "value": "/secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:450"
      ]
    },
    "/service/{service}": {
      "value": "/service/{service}",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:273"
      ]
    },
    "/system/info": {
      "value": "/system/info",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:29"
      ]
    },
    "/test": {
      "value": "/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:59"
      ]
    },
    "/test_body_parse": {
      "value": "/test_body_parse",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:119",
        "auth_service/tests/test_refresh_endpoint_integration.py:143"
      ]
    },
    "/tests": {
      "value": "/tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:105"
      ]
    },
    "/tests/": {
      "value": "/tests/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:35",
        "scripts/compliance/test_size_validator.py:163"
      ]
    },
    "/tests/e2e/": {
      "value": "/tests/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/tests/integration/": {
      "value": "/tests/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:360"
      ]
    },
    "/tests/unified/e2e/": {
      "value": "/tests/unified/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/tests/unit/": {
      "value": "/tests/unit/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:365"
      ]
    },
    "/threads": {
      "value": "/threads",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:21"
      ]
    },
    "/tmp/pytest_report.json": {
      "value": "/tmp/pytest_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:300"
      ]
    },
    "/unit/": {
      "value": "/unit/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:365",
        "scripts/optimize_test_performance.py:140"
      ]
    },
    "/v1": {
      "value": "/v1",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:450"
      ]
    },
    "/versions/latest": {
      "value": "/versions/latest",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:19",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_clickhouse.py:52",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:20"
      ]
    },
    "/websocket": {
      "value": "/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:98"
      ]
    },
    "/ws": {
      "value": "/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:98",
        "scripts/test_cold_start_e2e.py:451",
        "scripts/test_cold_start_e2e.py:451",
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_cors.py:432",
        "scripts/test_staging_auth_live.py:180",
        "scripts/test_staging_env.py:25",
        "scripts/test_websocket_cors_comprehensive.py:190"
      ]
    },
    "/ws/config": {
      "value": "/ws/config",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:88",
        "scripts/test_websocket_middleware.py:43"
      ]
    },
    "/ws/health": {
      "value": "/ws/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:183",
        "scripts/test_websocket_dev_mode.py:118"
      ]
    },
    "/ws/test": {
      "value": "/ws/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:58",
        "scripts/test_websocket_middleware.py:89"
      ]
    },
    "0": {
      "value": "0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:71",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:108",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:146",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:198",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:269"
      ]
    },
    "0.0.0.0": {
      "value": "0.0.0.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:66",
        "scripts/test_service_monitor.py:303",
        "scripts/test_websocket_dev_mode.py:56"
      ]
    },
    "1": {
      "value": "1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:278",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:193",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:200",
        "scripts/debug_supervisor_test.py:11",
        "scripts/run_agent_pipeline_test.py:36",
        "scripts/test_ansi_logging.py:19",
        "scripts/test_backend_ORIGINAL.py:82",
        "scripts/test_backend_ORIGINAL.py:110",
        "scripts/test_real_jwt_e2e.py:183",
        "scripts/test_websocket_chat_simple.py:35"
      ]
    },
    "1' OR '1'='1": {
      "value": "1' OR '1'='1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:338"
      ]
    },
    "1. **Fix Critical Violations First** - Address mock component implementations": {
      "value": "1. **Fix Critical Violations First** - Address mock component implementations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:564"
      ]
    },
    "1. **Immediate**: Apply `@fast_test` decorator to tests with sleep calls": {
      "value": "1. **Immediate**: Apply `@fast_test` decorator to tests with sleep calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:326"
      ]
    },
    "1. **Resource Utilization Analysis**\n           - GPU utilization averaging 67% with peaks at 95%\n           - Memory usage shows gradual increase pattern\n           - CPU bottleneck detected during data preprocessing\n        \n        2. **Cost Optimization Opportunities**\n           - Switch to spot instances for batch workloads (30% savings)\n           - Implement request batching for 40% throughput improvement\n           - Consider model quantization for inference optimization\n        \n        3. **Performance Recommendations**\n           - Enable tensor parallelism for large models\n           - Implement gradient checkpointing to reduce memory\n           - Use mixed precision training for 2x speedup\n        \n        4. **Scaling Considerations**\n           - Current setup can handle 10x load with modifications\n           - Recommend horizontal scaling for API endpoints\n           - Database connection pooling needs adjustment": {
      "value": "1. **Resource Utilization Analysis**\n           - GPU utilization averaging 67% with peaks at 95%\n           - Memory usage shows gradual increase pattern\n           - CPU bottleneck detected during data preprocessing\n        \n        2. **Cost Optimization Opportunities**\n           - Switch to spot instances for batch workloads (30% savings)\n           - Implement request batching for 40% throughput improvement\n           - Consider model quantization for inference optimization\n        \n        3. **Performance Recommendations**\n           - Enable tensor parallelism for large models\n           - Implement gradient checkpointing to reduce memory\n           - Use mixed precision training for 2x speedup\n        \n        4. **Scaling Considerations**\n           - Current setup can handle 10x load with modifications\n           - Recommend horizontal scaling for API endpoints\n           - Database connection pooling needs adjustment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:181"
      ]
    },
    "1. API Key Test:": {
      "value": "1. API Key Test:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:315"
      ]
    },
    "1. AUTH MIDDLEWARE ISSUE:": {
      "value": "1. AUTH MIDDLEWARE ISSUE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:144"
      ]
    },
    "1. Add WebSocket paths to auth middleware exclusions:": {
      "value": "1. Add WebSocket paths to auth middleware exclusions:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:192"
      ]
    },
    "1. Added SERVICE_ID environment variable:": {
      "value": "1. Added SERVICE_ID environment variable:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:89"
      ]
    },
    "1. Auth Middleware Configuration:": {
      "value": "1. Auth Middleware Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:125"
      ]
    },
    "1. Back up all files first": {
      "value": "1. Back up all files first",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:952"
      ]
    },
    "1. Base URL:": {
      "value": "1. Base URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:122"
      ]
    },
    "1. Check for missing dependencies: pip install -r requirements.txt": {
      "value": "1. Check for missing dependencies: pip install -r requirements.txt",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:109"
      ]
    },
    "1. Check staging service health and deployment status": {
      "value": "1. Check staging service health and deployment status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:330"
      ]
    },
    "1. Check that secrets are correctly set in Secret Manager": {
      "value": "1. Check that secrets are correctly set in Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:231"
      ]
    },
    "1. Checking Alembic configuration files...": {
      "value": "1. Checking Alembic configuration files...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:103"
      ]
    },
    "1. Checking LLMTestModel enum...": {
      "value": "1. Checking LLMTestModel enum...",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:138"
      ]
    },
    "1. Checking backend health...": {
      "value": "1. Checking backend health...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:23"
      ]
    },
    "1. Checking if services are running...": {
      "value": "1. Checking if services are running...",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:20"
      ]
    },
    "1. Checking initial Node.js processes...": {
      "value": "1. Checking initial Node.js processes...",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:65"
      ]
    },
    "1. Concurrent async serialization...": {
      "value": "1. Concurrent async serialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:255"
      ]
    },
    "1. Create a Google OAuth client for local development": {
      "value": "1. Create a Google OAuth client for local development",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:111"
      ]
    },
    "1. Creating SupervisorAgent with event capture...": {
      "value": "1. Creating SupervisorAgent with event capture...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:89"
      ]
    },
    "1. Creating SupervisorAgent...": {
      "value": "1. Creating SupervisorAgent...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:39"
      ]
    },
    "1. Current mixed implementation...": {
      "value": "1. Current mixed implementation...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:178"
      ]
    },
    "1. Database name mismatch ('postgres' vs expected 'netra_staging')": {
      "value": "1. Database name mismatch ('postgres' vs expected 'netra_staging')",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:176"
      ]
    },
    "1. Ensure Docker Desktop is running": {
      "value": "1. Ensure Docker Desktop is running",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:86"
      ]
    },
    "1. Ensure JWT_SECRET_KEY environment variable is set consistently in staging:\n   - Auth service should have the same JWT_SECRET_KEY as backend service\n   - Check Cloud Run service configurations for both services\n   \n2. The token has a typo in the 'type' field ('acess' instead of 'access')\n   - This appears to be from an older version of the code\n   - Current code should generate 'type': 'access' correctly\n   \n3. To fix immediately:\n   - Set the same JWT_SECRET_KEY in both services' environment variables\n   - Restart both services to pick up the new configuration\n   - Test authentication flow again": {
      "value": "1. Ensure JWT_SECRET_KEY environment variable is set consistently in staging:\n   - Auth service should have the same JWT_SECRET_KEY as backend service\n   - Check Cloud Run service configurations for both services\n   \n2. The token has a typo in the 'type' field ('acess' instead of 'access')\n   - This appears to be from an older version of the code\n   - Current code should generate 'type': 'access' correctly\n   \n3. To fix immediately:\n   - Set the same JWT_SECRET_KEY in both services' environment variables\n   - Restart both services to pick up the new configuration\n   - Test authentication flow again",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:120"
      ]
    },
    "1. Environment safety checks...": {
      "value": "1. Environment safety checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:182"
      ]
    },
    "1. Extract setup logic into fixture or helper method": {
      "value": "1. Extract setup logic into fixture or helper method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:211"
      ]
    },
    "1. Fetching individual PostgreSQL secrets...": {
      "value": "1. Fetching individual PostgreSQL secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:37"
      ]
    },
    "1. Fetching staging configuration...": {
      "value": "1. Fetching staging configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:223"
      ]
    },
    "1. Fetching staging database configuration...": {
      "value": "1. Fetching staging database configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:35",
        "scripts/test_staging_migrations.py:36"
      ]
    },
    "1. Fetching staging database secrets...": {
      "value": "1. Fetching staging database secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:205"
      ]
    },
    "1. Fix collection errors to ensure all tests are discoverable": {
      "value": "1. Fix collection errors to ensure all tests are discoverable",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:380"
      ]
    },
    "1. Go to GA4 > Admin > Property Access Management": {
      "value": "1. Go to GA4 > Admin > Property Access Management",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:97"
      ]
    },
    "1. IMMEDIATE FIX: Use 'postgres' database as configured in Secret Manager": {
      "value": "1. IMMEDIATE FIX: Use 'postgres' database as configured in Secret Manager",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:104"
      ]
    },
    "1. Missing mocks for external services (ClickHouse, Redis, WebSocket)": {
      "value": "1. Missing mocks for external services (ClickHouse, Redis, WebSocket)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:76"
      ]
    },
    "1. Mock component function fix": {
      "value": "1. Mock component function fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:382"
      ]
    },
    "1. Move fixtures to appropriate service-level conftest.py": {
      "value": "1. Move fixtures to appropriate service-level conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:90"
      ]
    },
    "1. Preparing migration environment...": {
      "value": "1. Preparing migration environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:224"
      ]
    },
    "1. Production environment URLs...": {
      "value": "1. Production environment URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:271"
      ]
    },
    "1. Quick real e2e test (with mock services):": {
      "value": "1. Quick real e2e test (with mock services):",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:151"
      ]
    },
    "1. Registering new user...": {
      "value": "1. Registering new user...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:30"
      ]
    },
    "1. Registering test user...": {
      "value": "1. Registering test user...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:36"
      ]
    },
    "1. Replace ALL mocks with real service tests": {
      "value": "1. Replace ALL mocks with real service tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:81"
      ]
    },
    "1. Replace GPT_4 with GEMINI_2_5_FLASH": {
      "value": "1. Replace GPT_4 with GEMINI_2_5_FLASH",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:186"
      ]
    },
    "1. Review SPEC/no_test_stubs.xml for guidelines": {
      "value": "1. Review SPEC/no_test_stubs.xml for guidelines",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:85"
      ]
    },
    "1. Review the changes with: git diff": {
      "value": "1. Review the changes with: git diff",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:243"
      ]
    },
    "1. Review the report above": {
      "value": "1. Review the report above",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1018"
      ]
    },
    "1. Run tests to verify functionality: python unified_test_runner.py": {
      "value": "1. Run tests to verify functionality: python unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:293"
      ]
    },
    "1. Run tests to verify markers work correctly:": {
      "value": "1. Run tests to verify markers work correctly:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:211"
      ]
    },
    "1. Run the authentication tests to verify fixes": {
      "value": "1. Run the authentication tests to verify fixes",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:172"
      ]
    },
    "1. Sending agent_started event...": {
      "value": "1. Sending agent_started event...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:138"
      ]
    },
    "1. Sequential synchronous processing...": {
      "value": "1. Sequential synchronous processing...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:140"
      ]
    },
    "1. Set GOOGLE_CLIENT_ID in .env file": {
      "value": "1. Set GOOGLE_CLIENT_ID in .env file",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:400"
      ]
    },
    "1. Split by test categories (unit/integration/e2e)": {
      "value": "1. Split by test categories (unit/integration/e2e)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:195"
      ]
    },
    "1. Split by test categories:": {
      "value": "1. Split by test categories:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:369"
      ]
    },
    "1. Stop the conflicting services": {
      "value": "1. Stop the conflicting services",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:78"
      ]
    },
    "1. Test Size Validator - scans for violations": {
      "value": "1. Test Size Validator - scans for violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:205"
      ]
    },
    "1. Test Size Validator:": {
      "value": "1. Test Size Validator:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:178"
      ]
    },
    "1. Test files MUST be ≤300 lines (SPEC/testing.xml)": {
      "value": "1. Test files MUST be ≤300 lines (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:265"
      ]
    },
    "1. Testing Authentication Tracking...": {
      "value": "1. Testing Authentication Tracking...",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:112"
      ]
    },
    "1. Testing CORS Preflight Requests (OPTIONS)": {
      "value": "1. Testing CORS Preflight Requests (OPTIONS)",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:110"
      ]
    },
    "1. Testing Environment Detection:": {
      "value": "1. Testing Environment Detection:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:42"
      ]
    },
    "1. Testing HeartbeatConfig...": {
      "value": "1. Testing HeartbeatConfig...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:21"
      ]
    },
    "1. Testing OPTIONS preflight request...": {
      "value": "1. Testing OPTIONS preflight request...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:18"
      ]
    },
    "1. Testing URL conversion...": {
      "value": "1. Testing URL conversion...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:76"
      ]
    },
    "1. Testing URL validation...": {
      "value": "1. Testing URL validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:169"
      ]
    },
    "1. Testing _serialize_message_safely (sync path)...": {
      "value": "1. Testing _serialize_message_safely (sync path)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:85"
      ]
    },
    "1. Testing auth service imports...": {
      "value": "1. Testing auth service imports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:35"
      ]
    },
    "1. Testing basic import...": {
      "value": "1. Testing basic import...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:13"
      ]
    },
    "1. Testing direct token validation with auth service...": {
      "value": "1. Testing direct token validation with auth service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:56"
      ]
    },
    "1. Testing engine creation...": {
      "value": "1. Testing engine creation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:126"
      ]
    },
    "1. Testing send_to_user (synchronous serialization path)...": {
      "value": "1. Testing send_to_user (synchronous serialization path)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:159"
      ]
    },
    "1. Testing service health checks...": {
      "value": "1. Testing service health checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:31"
      ]
    },
    "1. Testing session management patterns...": {
      "value": "1. Testing session management patterns...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:304"
      ]
    },
    "1. Testing snake_case format (refresh_token)...": {
      "value": "1. Testing snake_case format (refresh_token)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:30"
      ]
    },
    "1. Testing startup_module import...": {
      "value": "1. Testing startup_module import...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:16"
      ]
    },
    "1. Testing synchronous serialization (blocking)...": {
      "value": "1. Testing synchronous serialization (blocking)...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:82"
      ]
    },
    "1. Testing valid registration...": {
      "value": "1. Testing valid registration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:19"
      ]
    },
    "1. The measurement ID is incorrect": {
      "value": "1. The measurement ID is incorrect",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:94"
      ]
    },
    "1. Update send_to_user to use _serialize_message_safely_async": {
      "value": "1. Update send_to_user to use _serialize_message_safely_async",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:358"
      ]
    },
    "1. VERIFY which database should be used:": {
      "value": "1. VERIFY which database should be used:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:121"
      ]
    },
    "1. Validating configuration...": {
      "value": "1. Validating configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:32",
        "scripts/test_database_url_builder_comprehensive.py:89"
      ]
    },
    "1. `": {
      "value": "1. `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:591"
      ]
    },
    "1. ✅ Added SERVICE_ID environment variable to backend service:": {
      "value": "1. ✅ Added SERVICE_ID environment variable to backend service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:167"
      ]
    },
    "1.5G": {
      "value": "1.5G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:82"
      ]
    },
    "10": {
      "value": "10",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:146",
        "scripts/test_seed_data.py:261",
        "scripts/test_ssl_certificates_staging.py:185"
      ]
    },
    "10,000 requests daily": {
      "value": "10,000 requests daily",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:54"
      ]
    },
    "10.0.0.10": {
      "value": "10.0.0.10",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:136"
      ]
    },
    "10.0.0.5": {
      "value": "10.0.0.5",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:134"
      ]
    },
    "10.0.0.50": {
      "value": "10.0.0.50",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:89",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252"
      ]
    },
    "100": {
      "value": "100",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:263"
      ]
    },
    "100ms latency": {
      "value": "100ms latency",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:45"
      ]
    },
    "12": {
      "value": "12",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:118",
        "scripts/manage_test_services.py:129"
      ]
    },
    "123": {
      "value": "123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:393",
        "auth_service/tests/test_critical_bugs_simple.py:58",
        "auth_service/tests/test_refresh_endpoint_integration.py:40",
        "auth_service/tests/test_refresh_endpoint_integration.py:63",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106",
        "scripts/test_workflows_with_act.py:190"
      ]
    },
    "12345": {
      "value": "12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:126"
      ]
    },
    "123456": {
      "value": "123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:155"
      ]
    },
    "123456789": {
      "value": "123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:45"
      ]
    },
    "123456789-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com": {
      "value": "123456789-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:78"
      ]
    },
    "123456789012-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com": {
      "value": "123456789012-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:201",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:272",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:332",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:371",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:414"
      ]
    },
    "127.0.0.1": {
      "value": "127.0.0.1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:75",
        "scripts/setup_test_environment.py:69",
        "scripts/test_backend_port_binding.py:33",
        "scripts/test_cors.py:313",
        "scripts/test_cors.py:346",
        "scripts/test_ssl_certificates_staging.py:115"
      ]
    },
    "127.0.0.1:3000": {
      "value": "127.0.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:209"
      ]
    },
    "13": {
      "value": "13",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:185"
      ]
    },
    "15": {
      "value": "15",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:146",
        "scripts/test_cors.py:403",
        "scripts/test_cors.py:409",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:108",
        "scripts/test_secret_manager_builder_critical.py:496",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "192.168.1.": {
      "value": "192.168.1.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:133",
        "auth_service/tests/test_session_security_cycles_36_40.py:293"
      ]
    },
    "192.168.1.1": {
      "value": "192.168.1.1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:117",
        "auth_service/tests/test_auth_real_services_comprehensive.py:134"
      ]
    },
    "192.168.1.100": {
      "value": "192.168.1.100",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:65",
        "auth_service/tests/test_session_security_cycles_36_40.py:187",
        "auth_service/tests/test_session_security_cycles_36_40.py:225",
        "auth_service/tests/test_session_security_cycles_36_40.py:241"
      ]
    },
    "192.168.1.200": {
      "value": "192.168.1.200",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:147",
        "auth_service/tests/test_session_security_cycles_36_40.py:322"
      ]
    },
    "192.168.1.201": {
      "value": "192.168.1.201",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:156"
      ]
    },
    "1G": {
      "value": "1G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:81"
      ]
    },
    "2": {
      "value": "2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:75",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:194",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:204"
      ]
    },
    "2 occurrences": {
      "value": "2 occurrences",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:208"
      ]
    },
    "2. **Extract Shared Utilities** - Move common mocks to test/fixtures directory": {
      "value": "2. **Extract Shared Utilities** - Move common mocks to test/fixtures directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:565"
      ]
    },
    "2. **Short-term**: Mock external dependencies (network, LLM, database)": {
      "value": "2. **Short-term**: Mock external dependencies (network, LLM, database)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:327"
      ]
    },
    "2. Add: netra-staging-deploy@netra-staging.iam.gserviceaccount.com": {
      "value": "2. Add: netra-staging-deploy@netra-staging.iam.gserviceaccount.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:98"
      ]
    },
    "2. Added AUTH_SERVICE_ENABLED=true for backend": {
      "value": "2. Added AUTH_SERVICE_ENABLED=true for backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:92"
      ]
    },
    "2. Bearer Token Test:": {
      "value": "2. Bearer Token Test:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:319"
      ]
    },
    "2. Building database URL...": {
      "value": "2. Building database URL...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:238"
      ]
    },
    "2. Building database URLs using DatabaseURLBuilder...": {
      "value": "2. Building database URLs using DatabaseURLBuilder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:51"
      ]
    },
    "2. Building database URLs...": {
      "value": "2. Building database URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:221"
      ]
    },
    "2. Building migration URLs...": {
      "value": "2. Building migration URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:52"
      ]
    },
    "2. CORS Middleware Configuration:": {
      "value": "2. CORS Middleware Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:131"
      ]
    },
    "2. Check compliance improvement:": {
      "value": "2. Check compliance improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:213"
      ]
    },
    "2. Check git status: git status": {
      "value": "2. Check git status: git status",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:294"
      ]
    },
    "2. Check that JWT tokens are properly validated": {
      "value": "2. Check that JWT tokens are properly validated",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:173"
      ]
    },
    "2. Checking DatabaseManager methods...": {
      "value": "2. Checking DatabaseManager methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:40"
      ]
    },
    "2. Checking WebSocket Manager Integration...": {
      "value": "2. Checking WebSocket Manager Integration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:49"
      ]
    },
    "2. Checking if configuration endpoint exists...": {
      "value": "2. Checking if configuration endpoint exists...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:45"
      ]
    },
    "2. Concurrent async processing...": {
      "value": "2. Concurrent async processing...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:150"
      ]
    },
    "2. Concurrent sync serialization (for comparison)...": {
      "value": "2. Concurrent sync serialization (for comparison)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:274"
      ]
    },
    "2. Creating test execution state...": {
      "value": "2. Creating test execution state...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:99"
      ]
    },
    "2. Creating test file:": {
      "value": "2. Creating test file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:36"
      ]
    },
    "2. Delete the violating conftest.py files": {
      "value": "2. Delete the violating conftest.py files",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:91"
      ]
    },
    "2. Different access patterns...": {
      "value": "2. Different access patterns...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:277"
      ]
    },
    "2. Full real e2e test (with actual LLM):": {
      "value": "2. Full real e2e test (with actual LLM):",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:154"
      ]
    },
    "2. Getting fresh token...": {
      "value": "2. Getting fresh token...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:52"
      ]
    },
    "2. Large file splitting": {
      "value": "2. Large file splitting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:383"
      ]
    },
    "2. Logging in to get JWT token...": {
      "value": "2. Logging in to get JWT token...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:61"
      ]
    },
    "2. Look for circular imports in the error messages above": {
      "value": "2. Look for circular imports in the error messages above",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:110"
      ]
    },
    "2. Manually refactor files with violations": {
      "value": "2. Manually refactor files with violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1019"
      ]
    },
    "2. Migration URL safety...": {
      "value": "2. Migration URL safety...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:195"
      ]
    },
    "2. Missing auth service tables in the 'postgres' database": {
      "value": "2. Missing auth service tables in the 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:177"
      ]
    },
    "2. PROPER FIX: Create 'netra_staging' database for staging environment": {
      "value": "2. PROPER FIX: Create 'netra_staging' database for staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:105"
      ]
    },
    "2. Properly integrate WebSocket CORS middleware:": {
      "value": "2. Properly integrate WebSocket CORS middleware:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:194"
      ]
    },
    "2. Rename duplicate tests to have unique names": {
      "value": "2. Rename duplicate tests to have unique names",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:383"
      ]
    },
    "2. Replace GPT_35_TURBO with GEMINI_2_5_FLASH": {
      "value": "2. Replace GPT_35_TURBO with GEMINI_2_5_FLASH",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:187"
      ]
    },
    "2. Replace test stubs with real implementations": {
      "value": "2. Replace test stubs with real implementations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:86"
      ]
    },
    "2. Run mock-only tests: pytest -m mock_only": {
      "value": "2. Run mock-only tests: pytest -m mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:244"
      ]
    },
    "2. Run: docker compose --profile test up -d": {
      "value": "2. Run: docker compose --profile test up -d",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:87"
      ]
    },
    "2. Run: docker ps": {
      "value": "2. Run: docker ps",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:79"
      ]
    },
    "2. Scanning test files for deprecated models...": {
      "value": "2. Scanning test files for deprecated models...",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:142"
      ]
    },
    "2. Sending agent_thinking event...": {
      "value": "2. Sending agent_thinking event...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:141"
      ]
    },
    "2. Set GOOGLE_CLIENT_SECRET in .env file": {
      "value": "2. Set GOOGLE_CLIENT_SECRET in .env file",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:402"
      ]
    },
    "2. Set authorized redirect URI to: http://localhost:3000/auth/callback": {
      "value": "2. Set authorized redirect URI to: http://localhost:3000/auth/callback",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:112"
      ]
    },
    "2. Split by functionality being tested": {
      "value": "2. Split by functionality being tested",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:196"
      ]
    },
    "2. Split by test classes:": {
      "value": "2. Split by test classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:376"
      ]
    },
    "2. Split into multiple focused test cases": {
      "value": "2. Split into multiple focused test cases",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:212"
      ]
    },
    "2. Starting test Node.js process...": {
      "value": "2. Starting test Node.js process...",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:70"
      ]
    },
    "2. Test Refactoring Helper - suggests splits": {
      "value": "2. Test Refactoring Helper - suggests splits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:206"
      ]
    },
    "2. Test Refactoring Helper:": {
      "value": "2. Test Refactoring Helper:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:184"
      ]
    },
    "2. Test functions MUST be ≤8 lines (SPEC/testing.xml)": {
      "value": "2. Test functions MUST be ≤8 lines (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:266"
      ]
    },
    "2. Testing Actual GET Requests": {
      "value": "2. Testing Actual GET Requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:126"
      ]
    },
    "2. Testing Alembic dry run...": {
      "value": "2. Testing Alembic dry run...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:138"
      ]
    },
    "2. Testing Cloud SQL detection...": {
      "value": "2. Testing Cloud SQL detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:40"
      ]
    },
    "2. Testing Database Configuration Manager:": {
      "value": "2. Testing Database Configuration Manager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:50"
      ]
    },
    "2. Testing Error Tracking...": {
      "value": "2. Testing Error Tracking...",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:117"
      ]
    },
    "2. Testing POST request with Origin header...": {
      "value": "2. Testing POST request with Origin header...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:36"
      ]
    },
    "2. Testing SSL connection...": {
      "value": "2. Testing SSL connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:64"
      ]
    },
    "2. Testing TCP detection...": {
      "value": "2. Testing TCP detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:96"
      ]
    },
    "2. Testing URL validation methods...": {
      "value": "2. Testing URL validation methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:330"
      ]
    },
    "2. Testing WebSocketHeartbeatManager...": {
      "value": "2. Testing WebSocketHeartbeatManager...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:34"
      ]
    },
    "2. Testing _serialize_message_safely_async (async path)...": {
      "value": "2. Testing _serialize_message_safely_async (async path)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:98"
      ]
    },
    "2. Testing async serialization (non-blocking)...": {
      "value": "2. Testing async serialization (non-blocking)...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:94"
      ]
    },
    "2. Testing camelCase format (refreshToken) - FRONTEND FORMAT...": {
      "value": "2. Testing camelCase format (refreshToken) - FRONTEND FORMAT...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:52"
      ]
    },
    "2. Testing class instantiation...": {
      "value": "2. Testing class instantiation...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:22"
      ]
    },
    "2. Testing dev login...": {
      "value": "2. Testing dev login...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:59"
      ]
    },
    "2. Testing duplicate email...": {
      "value": "2. Testing duplicate email...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:38"
      ]
    },
    "2. Testing invalid URLs...": {
      "value": "2. Testing invalid URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:189"
      ]
    },
    "2. Testing migration commands...": {
      "value": "2. Testing migration commands...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:244"
      ]
    },
    "2. Testing send_to_thread (async serialization path)...": {
      "value": "2. Testing send_to_thread (async serialization path)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:186"
      ]
    },
    "2. Testing supervisor creation pattern...": {
      "value": "2. Testing supervisor creation pattern...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:52"
      ]
    },
    "2. Testing token validation through backend service...": {
      "value": "2. Testing token validation through backend service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:80"
      ]
    },
    "2. Tests expecting specific implementation details that have changed": {
      "value": "2. Tests expecting specific implementation details that have changed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:77"
      ]
    },
    "2. The service account doesn't have access to this property": {
      "value": "2. The service account doesn't have access to this property",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:95"
      ]
    },
    "2. UPDATE Secret Manager if needed:": {
      "value": "2. UPDATE Secret Manager if needed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:125"
      ]
    },
    "2. Update broadcast_to_room to use _serialize_message_safely_async": {
      "value": "2. Update broadcast_to_room to use _serialize_message_safely_async",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:359"
      ]
    },
    "2. Use IsolatedEnvironment for test isolation": {
      "value": "2. Use IsolatedEnvironment for test isolation",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:82"
      ]
    },
    "2. Use dry-run mode to preview changes": {
      "value": "2. Use dry-run mode to preview changes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:953"
      ]
    },
    "2. Verify E2E_OAUTH_SIMULATION_KEY is set correctly": {
      "value": "2. Verify E2E_OAUTH_SIMULATION_KEY is set correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:331"
      ]
    },
    "2. Verify network connectivity to ClickHouse Cloud": {
      "value": "2. Verify network connectivity to ClickHouse Cloud",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:232"
      ]
    },
    "2. WEBSOCKET CORS WRAPPING:": {
      "value": "2. WEBSOCKET CORS WRAPPING:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:149"
      ]
    },
    "2. ✅ Added AUTH_SERVICE_ENABLED environment variable:": {
      "value": "2. ✅ Added AUTH_SERVICE_ENABLED environment variable:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:171"
      ]
    },
    "2.0": {
      "value": "2.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "20": {
      "value": "20",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:93",
        "scripts/test_discovery_report.py:95",
        "scripts/test_hot_reload.py:74",
        "scripts/test_log_introspection.py:420"
      ]
    },
    "2024-01-15T10:00:00Z backend | psycopg2.OperationalError: connection refused": {
      "value": "2024-01-15T10:00:00Z backend | psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:114"
      ]
    },
    "2024-01-15T10:00:01Z backend | psycopg2.OperationalError: connection refused": {
      "value": "2024-01-15T10:00:01Z backend | psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:115"
      ]
    },
    "2024-01-15T10:00:02Z backend | psycopg2.OperationalError: connection refused": {
      "value": "2024-01-15T10:00:02Z backend | psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:116"
      ]
    },
    "2024-01-15T10:00:03Z auth | JWT decode error: invalid signature": {
      "value": "2024-01-15T10:00:03Z auth | JWT decode error: invalid signature",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:117"
      ]
    },
    "2024-01-15T10:00:04Z auth | JWT decode error: invalid signature": {
      "value": "2024-01-15T10:00:04Z auth | JWT decode error: invalid signature",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:118"
      ]
    },
    "2024-01-15T10:00:05Z frontend | CORS blocked by policy": {
      "value": "2024-01-15T10:00:05Z frontend | CORS blocked by policy",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:119"
      ]
    },
    "2024-01-15T10:30:45.123456Z backend | psycopg2.OperationalError: could not connect to server": {
      "value": "2024-01-15T10:30:45.123456Z backend | psycopg2.OperationalError: could not connect to server",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:42"
      ]
    },
    "2024-01-15T10:31:00.000000Z auth | ERROR: 401 unauthorized access attempt": {
      "value": "2024-01-15T10:31:00.000000Z auth | ERROR: 401 unauthorized access attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:46"
      ]
    },
    "2024-01-15T10:32:00.000000Z frontend | Error: ECONNREFUSED - Connection refused": {
      "value": "2024-01-15T10:32:00.000000Z frontend | Error: ECONNREFUSED - Connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:50"
      ]
    },
    "2024-01-15T10:33:00.000000Z backend | KeyError: 'DATABASE_URL' missing required config": {
      "value": "2024-01-15T10:33:00.000000Z backend | KeyError: 'DATABASE_URL' missing required config",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:54"
      ]
    },
    "2024-01-15T10:34:00.000000Z worker | FATAL: out of memory, cannot allocate 1GB": {
      "value": "2024-01-15T10:34:00.000000Z worker | FATAL: out of memory, cannot allocate 1GB",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:58"
      ]
    },
    "2024-01-15T10:35:00.000000Z backend | ModuleNotFoundError: No module named 'redis'": {
      "value": "2024-01-15T10:35:00.000000Z backend | ModuleNotFoundError: No module named 'redis'",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:62"
      ]
    },
    "2024-01-15T10:36:00.000000Z backend | WARNING: Request timeout after 30s": {
      "value": "2024-01-15T10:36:00.000000Z backend | WARNING: Request timeout after 30s",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:66"
      ]
    },
    "2024-01-15T10:37:00.000000Z backend | websocket connection failed: 1006": {
      "value": "2024-01-15T10:37:00.000000Z backend | websocket connection failed: 1006",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:70"
      ]
    },
    "2024-01-15T10:38:00.000000Z frontend | CORS blocked: No Access-Control-Allow-Origin": {
      "value": "2024-01-15T10:38:00.000000Z frontend | CORS blocked: No Access-Control-Allow-Origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:74"
      ]
    },
    "2024-01-15T10:39:00.000000Z backend | SSL certificate verify failed: self signed": {
      "value": "2024-01-15T10:39:00.000000Z backend | SSL certificate verify failed: self signed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:78"
      ]
    },
    "2025-01-01T00:00:00Z": {
      "value": "2025-01-01T00:00:00Z",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:271",
        "scripts/test_seed_data.py:277"
      ]
    },
    "2025-12-31T23:59:59Z": {
      "value": "2025-12-31T23:59:59Z",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:250",
        "scripts/test_seed_data.py:255"
      ]
    },
    "24h": {
      "value": "24h",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:71",
        "scripts/test_data_validator_backup.py:83",
        "scripts/test_data_validator_backup.py:106",
        "scripts/test_data_validator_backup.py:135",
        "scripts/test_data_validator_backup.py:151"
      ]
    },
    "2G": {
      "value": "2G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:75",
        "scripts/pytest_resource_monitor.py:87"
      ]
    },
    "2d": {
      "value": "2d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83",
        "scripts/test_secret_manager_builder_critical.py:496"
      ]
    },
    "3": {
      "value": "3",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:240"
      ]
    },
    "3. **Medium-term**: Refactor large test files into smaller, focused modules": {
      "value": "3. **Medium-term**: Refactor large test files into smaller, focused modules",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:328"
      ]
    },
    "3. **Use Real Components** - Replace mocks with actual component instances": {
      "value": "3. **Use Real Components** - Replace mocks with actual component instances",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:566"
      ]
    },
    "3. Add to your .env file:": {
      "value": "3. Add to your .env file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:113"
      ]
    },
    "3. Browser Session:": {
      "value": "3. Browser Session:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:323"
      ]
    },
    "3. Check firewall rules and IP allowlisting": {
      "value": "3. Check firewall rules and IP allowlisting",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:233"
      ]
    },
    "3. Check if DEV environment is using these ports": {
      "value": "3. Check if DEV environment is using these ports",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:80"
      ]
    },
    "3. Checking Registry WebSocket Integration...": {
      "value": "3. Checking Registry WebSocket Integration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:54"
      ]
    },
    "3. Checking essential attributes...": {
      "value": "3. Checking essential attributes...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:44"
      ]
    },
    "3. Commit changes:": {
      "value": "3. Commit changes:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:215"
      ]
    },
    "3. Commit changes: git add . && git commit -m 'Standardize L3 test naming'": {
      "value": "3. Commit changes: git add . && git commit -m 'Standardize L3 test naming'",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:295"
      ]
    },
    "3. Ensure staging services are not in cold start state": {
      "value": "3. Ensure staging services are not in cold start state",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:332"
      ]
    },
    "3. Executing supervisor with event monitoring...": {
      "value": "3. Executing supervisor with event monitoring...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:114"
      ]
    },
    "3. Extract assertion logic into helper methods": {
      "value": "3. Extract assertion logic into helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:213"
      ]
    },
    "3. Extract helper functions:": {
      "value": "3. Extract helper functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:382"
      ]
    },
    "3. Function size reduction": {
      "value": "3. Function size reduction",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:384"
      ]
    },
    "3. Grant Editor role": {
      "value": "3. Grant Editor role",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:99"
      ]
    },
    "3. Integration tests running as unit tests": {
      "value": "3. Integration tests running as unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:78"
      ]
    },
    "3. Manually refactor instead of using auto-fix": {
      "value": "3. Manually refactor instead of using auto-fix",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:954"
      ]
    },
    "3. Middleware Order:": {
      "value": "3. Middleware Order:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:137"
      ]
    },
    "3. Move test helpers to app/tests/ directory": {
      "value": "3. Move test helpers to app/tests/ directory",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:87"
      ]
    },
    "3. Need to run migrations or use correct staging database": {
      "value": "3. Need to run migrations or use correct staging database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:178"
      ]
    },
    "3. RUN database migrations on correct database:": {
      "value": "3. RUN database migrations on correct database:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:128"
      ]
    },
    "3. Replace CLAUDE_3_OPUS with GEMINI_2_5_PRO": {
      "value": "3. Replace CLAUDE_3_OPUS with GEMINI_2_5_PRO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:188"
      ]
    },
    "3. Review orphaned tests - remove or link to source modules": {
      "value": "3. Review orphaned tests - remove or link to source modules",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:386"
      ]
    },
    "3. Run real service tests: ENABLE_REAL_LLM_TESTING=true pytest -m real_services": {
      "value": "3. Run real service tests: ENABLE_REAL_LLM_TESTING=true pytest -m real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:245"
      ]
    },
    "3. SECURITY HEADERS:": {
      "value": "3. SECURITY HEADERS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:153"
      ]
    },
    "3. SOLUTION": {
      "value": "3. SOLUTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:143"
      ]
    },
    "3. Safety considerations...": {
      "value": "3. Safety considerations...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:258"
      ]
    },
    "3. Sending tool_executing event...": {
      "value": "3. Sending tool_executing event...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:144"
      ]
    },
    "3. Set JWT_SECRET_KEY in .env file (must match auth service)": {
      "value": "3. Set JWT_SECRET_KEY in .env file (must match auth service)",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:404"
      ]
    },
    "3. Skip security headers for WebSocket upgrade requests:": {
      "value": "3. Skip security headers for WebSocket upgrade requests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:197"
      ]
    },
    "3. Split by functionality, test type, or scenario": {
      "value": "3. Split by functionality, test type, or scenario",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:267"
      ]
    },
    "3. Split by test class if using class-based tests": {
      "value": "3. Split by test class if using class-based tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:197"
      ]
    },
    "3. Test Runner Integration - pre-run validation": {
      "value": "3. Test Runner Integration - pre-run validation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:207"
      ]
    },
    "3. Test Runner Integration:": {
      "value": "3. Test Runner Integration:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:190"
      ]
    },
    "3. Testing Secret Manager Integration:": {
      "value": "3. Testing Secret Manager Integration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:66"
      ]
    },
    "3. Testing URL generation...": {
      "value": "3. Testing URL generation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:45",
        "scripts/test_database_url_builder_comprehensive.py:101"
      ]
    },
    "3. Testing URL normalization for migrations...": {
      "value": "3. Testing URL normalization for migrations...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:67"
      ]
    },
    "3. Testing URL normalization...": {
      "value": "3. Testing URL normalization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:239"
      ]
    },
    "3. Testing async connection with asyncpg...": {
      "value": "3. Testing async connection with asyncpg...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:84"
      ]
    },
    "3. Testing auth client validation...": {
      "value": "3. Testing auth client validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:70"
      ]
    },
    "3. Testing auth error response for debug info...": {
      "value": "3. Testing auth error response for debug info...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:65"
      ]
    },
    "3. Testing auth service URL conversion...": {
      "value": "3. Testing auth service URL conversion...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:245"
      ]
    },
    "3. Testing cleanup_after_subprocess...": {
      "value": "3. Testing cleanup_after_subprocess...",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:92"
      ]
    },
    "3. Testing health endpoint...": {
      "value": "3. Testing health endpoint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:70"
      ]
    },
    "3. Testing if backend requires service authentication...": {
      "value": "3. Testing if backend requires service authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:107"
      ]
    },
    "3. Testing invalid email format...": {
      "value": "3. Testing invalid email format...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:55"
      ]
    },
    "3. Testing robustness improvements...": {
      "value": "3. Testing robustness improvements...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:58"
      ]
    },
    "3. Testing simple format (token)...": {
      "value": "3. Testing simple format (token)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:76"
      ]
    },
    "3. Testing token validation...": {
      "value": "3. Testing token validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:95"
      ]
    },
    "3. UPDATE: Secret Manager to use 'netra_staging' if that's the intended DB": {
      "value": "3. UPDATE: Secret Manager to use 'netra_staging' if that's the intended DB",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:106"
      ]
    },
    "3. Update broadcast_to_all to use _serialize_message_safely_async": {
      "value": "3. Update broadcast_to_all to use _serialize_message_safely_async",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:360"
      ]
    },
    "3. Update test imports if necessary": {
      "value": "3. Update test imports if necessary",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:92"
      ]
    },
    "3. Use docker-compose for service dependencies": {
      "value": "3. Use docker-compose for service dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:83"
      ]
    },
    "3. Use established patterns like fixtures and helper functions": {
      "value": "3. Use established patterns like fixtures and helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1020"
      ]
    },
    "3. Validating token with auth service...": {
      "value": "3. Validating token with auth service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:111"
      ]
    },
    "3. Verified AUTH_SERVICE_URL configuration": {
      "value": "3. Verified AUTH_SERVICE_URL configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:93"
      ]
    },
    "3. Verify all module files exist and have no syntax errors": {
      "value": "3. Verify all module files exist and have no syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:111"
      ]
    },
    "3. Verify service-to-service authentication works": {
      "value": "3. Verify service-to-service authentication works",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:174"
      ]
    },
    "3. Wait for services to be healthy": {
      "value": "3. Wait for services to be healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:88"
      ]
    },
    "3. Waiting for initial file detection...": {
      "value": "3. Waiting for initial file detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:52"
      ]
    },
    "3. With specific LLM model:": {
      "value": "3. With specific LLM model:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:157"
      ]
    },
    "3. ✅ Verified AUTH_SERVICE_URL configuration:": {
      "value": "3. ✅ Verified AUTH_SERVICE_URL configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:174"
      ]
    },
    "30%": {
      "value": "30%",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:218"
      ]
    },
    "30% cost reduction": {
      "value": "30% cost reduction",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:45"
      ]
    },
    "3000": {
      "value": "3000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:186",
        "auth_service/tests/test_auth_port_configuration.py:377",
        "scripts/test_gtm_loading.py:83"
      ]
    },
    "304612253870": {
      "value": "304612253870",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:155",
        "scripts/test_secret_manager_builder_critical.py:563"
      ]
    },
    "30s": {
      "value": "30s",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:288",
        "scripts/test_example_message_flow.py:410"
      ]
    },
    "3G": {
      "value": "3G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:69",
        "scripts/pytest_resource_monitor.py:76",
        "scripts/pytest_resource_monitor.py:88"
      ]
    },
    "3d": {
      "value": "3d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "4": {
      "value": "4",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:108",
        "scripts/test_discovery_report.py:115",
        "scripts/test_discovery_report.py:116",
        "scripts/test_discovery_report.py:117",
        "scripts/test_discovery_report.py:118",
        "scripts/test_discovery_report.py:121",
        "scripts/test_real_jwt_e2e.py:218",
        "scripts/test_real_jwt_e2e.py:228"
      ]
    },
    "4. **Long-term**: Implement comprehensive performance monitoring in CI": {
      "value": "4. **Long-term**: Implement comprehensive performance monitoring in CI",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:329"
      ]
    },
    "4. **Mock External APIs Only** - Keep mocking limited to HTTP clients, databases": {
      "value": "4. **Mock External APIs Only** - Keep mocking limited to HTTP clients, databases",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:567"
      ]
    },
    "4. Analyzing captured WebSocket events...": {
      "value": "4. Analyzing captured WebSocket events...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:124"
      ]
    },
    "4. Calling validate_token_jwt...": {
      "value": "4. Calling validate_token_jwt...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:79"
      ]
    },
    "4. Check network connectivity to staging endpoints": {
      "value": "4. Check network connectivity to staging endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:333"
      ]
    },
    "4. Check that __init__.py files exist in all package directories": {
      "value": "4. Check that __init__.py files exist in all package directories",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:112"
      ]
    },
    "4. Checking Tool Dispatcher Enhancement...": {
      "value": "4. Checking Tool Dispatcher Enhancement...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:59"
      ]
    },
    "4. Compliance Examples - properly sized tests": {
      "value": "4. Compliance Examples - properly sized tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:208"
      ]
    },
    "4. Extract common setup to fixtures or helper functions": {
      "value": "4. Extract common setup to fixtures or helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:268"
      ]
    },
    "4. Implement real WebSocket/database connections": {
      "value": "4. Implement real WebSocket/database connections",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:84"
      ]
    },
    "4. Mock reduction in integration tests": {
      "value": "4. Mock reduction in integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:385"
      ]
    },
    "4. Modifying test file...": {
      "value": "4. Modifying test file...",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:56"
      ]
    },
    "4. Move helper functions to separate test utilities module": {
      "value": "4. Move helper functions to separate test utilities module",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:198"
      ]
    },
    "4. Optimize test collection time - consider parallel collection": {
      "value": "4. Optimize test collection time - consider parallel collection",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:389"
      ]
    },
    "4. Replace synchronous serialization calls in _send_to_connection": {
      "value": "4. Replace synchronous serialization calls in _send_to_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:361"
      ]
    },
    "4. Review error messages above for specific issues": {
      "value": "4. Review error messages above for specific issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:234"
      ]
    },
    "4. Run 'python scripts/remove_test_stubs.py --scan' locally": {
      "value": "4. Run 'python scripts/remove_test_stubs.py --scan' locally",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:88"
      ]
    },
    "4. Run tests after each refactoring to ensure correctness": {
      "value": "4. Run tests after each refactoring to ensure correctness",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1021"
      ]
    },
    "4. Run tests again": {
      "value": "4. Run tests again",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:89"
      ]
    },
    "4. Sending tool_completed event...": {
      "value": "4. Sending tool_completed event...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:148"
      ]
    },
    "4. Service secrets configured via GCP Secret Manager": {
      "value": "4. Service secrets configured via GCP Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:94"
      ]
    },
    "4. Split by feature being tested:": {
      "value": "4. Split by feature being tested:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:386"
      ]
    },
    "4. Start auth service: python -m auth_service.auth_core.main": {
      "value": "4. Start auth service: python -m auth_service.auth_core.main",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:408"
      ]
    },
    "4. TEST connection in staging environment:": {
      "value": "4. TEST connection in staging environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:132"
      ]
    },
    "4. Testing ClickHouse Connection:": {
      "value": "4. Testing ClickHouse Connection:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:84"
      ]
    },
    "4. Testing backend API with token...": {
      "value": "4. Testing backend API with token...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:136"
      ]
    },
    "4. Testing debug endpoints...": {
      "value": "4. Testing debug endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:97"
      ]
    },
    "4. Testing empty body...": {
      "value": "4. Testing empty body...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:98"
      ]
    },
    "4. Testing engine creation configuration...": {
      "value": "4. Testing engine creation configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:266"
      ]
    },
    "4. Testing environment-specific URL selection...": {
      "value": "4. Testing environment-specific URL selection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:52"
      ]
    },
    "4. Testing general Node.js process cleanup...": {
      "value": "4. Testing general Node.js process cleanup...",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:106"
      ]
    },
    "4. Testing imports from various test files...": {
      "value": "4. Testing imports from various test files...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:60"
      ]
    },
    "4. Testing sync connection with psycopg2...": {
      "value": "4. Testing sync connection with psycopg2...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:100"
      ]
    },
    "4. Testing token refresh (snake_case)...": {
      "value": "4. Testing token refresh (snake_case)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:124"
      ]
    },
    "4. Testing weak password...": {
      "value": "4. Testing weak password...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:72"
      ]
    },
    "4. Update hardcoded strings 'gpt-4' to 'gemini-2.0-flash-exp'": {
      "value": "4. Update hardcoded strings 'gpt-4' to 'gemini-2.0-flash-exp'",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:189"
      ]
    },
    "4. Use parameterized tests for multiple scenarios": {
      "value": "4. Use parameterized tests for multiple scenarios",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:214"
      ]
    },
    "4. View Examples:": {
      "value": "4. View Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:196"
      ]
    },
    "4. ✅ Service secrets are configured via GCP Secret Manager:": {
      "value": "4. ✅ Service secrets are configured via GCP Secret Manager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:177"
      ]
    },
    "401": {
      "value": "401",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:50"
      ]
    },
    "403": {
      "value": "403",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:50"
      ]
    },
    "4G": {
      "value": "4G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:70"
      ]
    },
    "4d": {
      "value": "4d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "5": {
      "value": "5",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:118",
        "scripts/test_seed_data.py:262",
        "scripts/test_service_monitor.py:31"
      ]
    },
    "5 async serializations:": {
      "value": "5 async serializations:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:101"
      ]
    },
    "5 concurrent users with <2s response times:": {
      "value": "5 concurrent users with <2s response times:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:314"
      ]
    },
    "5 sync serializations:": {
      "value": "5 sync serializations:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:89"
      ]
    },
    "5. **Split Large Functions** - Break down oversized test functions": {
      "value": "5. **Split Large Functions** - Break down oversized test functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:568"
      ]
    },
    "5. Add appropriate markers to all tests for better categorization": {
      "value": "5. Add appropriate markers to all tests for better categorization",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:391"
      ]
    },
    "5. Checking ExecutionEngine WebSocket Integration...": {
      "value": "5. Checking ExecutionEngine WebSocket Integration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:67"
      ]
    },
    "5. Checking container logs for reload...": {
      "value": "5. Checking container logs for reload...",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:70"
      ]
    },
    "5. Checking for critical WebSocket events...": {
      "value": "5. Checking for critical WebSocket events...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:143"
      ]
    },
    "5. Debug information...": {
      "value": "5. Debug information...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:59"
      ]
    },
    "5. Final verification...": {
      "value": "5. Final verification...",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:111"
      ]
    },
    "5. Remove any OPENAI_API_KEY requirements from test configurations": {
      "value": "5. Remove any OPENAI_API_KEY requirements from test configurations",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:190"
      ]
    },
    "5. Sending agent_completed event...": {
      "value": "5. Sending agent_completed event...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:155"
      ]
    },
    "5. Start backend service: python scripts/dev_launcher.py": {
      "value": "5. Start backend service: python scripts/dev_launcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:411"
      ]
    },
    "5. Testing WebSocket endpoint authentication...": {
      "value": "5. Testing WebSocket endpoint authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:174"
      ]
    },
    "5. Testing _validate_token_remote directly...": {
      "value": "5. Testing _validate_token_remote directly...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:97"
      ]
    },
    "5. Testing password mismatch...": {
      "value": "5. Testing password mismatch...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:89"
      ]
    },
    "5. Testing token refresh (camelCase - frontend format)...": {
      "value": "5. Testing token refresh (camelCase - frontend format)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:158"
      ]
    },
    "5. Testing wrong field name...": {
      "value": "5. Testing wrong field name...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:125"
      ]
    },
    "5. Use parameterized tests to reduce duplication": {
      "value": "5. Use parameterized tests to reduce duplication",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:269"
      ]
    },
    "5. VERIFY auth operations work end-to-end:": {
      "value": "5. VERIFY auth operations work end-to-end:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:136"
      ]
    },
    "5. Verifying old imports no longer work...": {
      "value": "5. Verifying old imports no longer work...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:76"
      ]
    },
    "5000 daily requests": {
      "value": "5000 daily requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:56"
      ]
    },
    "5432": {
      "value": "5432",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:35",
        "auth_service/test_staging_db_connection.py:40",
        "auth_service/test_url_construction.py:36",
        "auth_service/tests/integration/test_database_connection.py:74",
        "auth_service/tests/integration/test_database_connection.py:153",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:48",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:76",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:105",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:131",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:158"
      ]
    },
    "5433": {
      "value": "5433",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:144",
        "scripts/test_docker_manager.py:158"
      ]
    },
    "5434": {
      "value": "5434",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:66",
        "scripts/test_docker_manager.py:172",
        "scripts/test_docker_manager.py:186"
      ]
    },
    "550e8400-e29b-41d4-a716-44665544000": {
      "value": "550e8400-e29b-41d4-a716-44665544000",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:308",
        "scripts/test_seed_data.py:328"
      ]
    },
    "6": {
      "value": "6",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166",
        "scripts/cleanup_test_processes.py:166"
      ]
    },
    "6. Check OAuth redirect configuration in backend": {
      "value": "6. Check OAuth redirect configuration in backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:415"
      ]
    },
    "6. Cleaning up test file...": {
      "value": "6. Cleaning up test file...",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:91"
      ]
    },
    "6. Consider using test discovery caching for faster collection": {
      "value": "6. Consider using test discovery caching for faster collection",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:392"
      ]
    },
    "6. Detailed Event Analysis:": {
      "value": "6. Detailed Event Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:156"
      ]
    },
    "6. Testing WebSocket Notification Methods...": {
      "value": "6. Testing WebSocket Notification Methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:82"
      ]
    },
    "6. Testing authenticated backend API call...": {
      "value": "6. Testing authenticated backend API call...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:193"
      ]
    },
    "6. Testing manual validation request...": {
      "value": "6. Testing manual validation request...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:106"
      ]
    },
    "6. Testing missing required fields...": {
      "value": "6. Testing missing required fields...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:106"
      ]
    },
    "6. Testing service health endpoints...": {
      "value": "6. Testing service health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:206"
      ]
    },
    "6.1f": {
      "value": "6.1f",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:118",
        "scripts/test_secret_manager_builder_critical.py:496",
        "scripts/test_secret_manager_builder_critical.py:626",
        "scripts/test_secret_manager_builder_critical.py:626",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "6379": {
      "value": "6379",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:135",
        "scripts/test_docker_manager.py:141",
        "scripts/test_docker_manager.py:169",
        "scripts/test_seed_data.py:44",
        "scripts/test_service_monitor.py:47"
      ]
    },
    "6380": {
      "value": "6380",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:74",
        "scripts/test_docker_manager.py:145",
        "scripts/test_docker_manager.py:159"
      ]
    },
    "6381": {
      "value": "6381",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:173",
        "scripts/test_docker_manager.py:187"
      ]
    },
    "660e8400-e29b-41d4-a716-44665544000": {
      "value": "660e8400-e29b-41d4-a716-44665544000",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:326",
        "scripts/test_seed_data.py:350"
      ]
    },
    "6G": {
      "value": "6G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:63"
      ]
    },
    "7. Check token generation in auth service": {
      "value": "7. Check token generation in auth service",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:421"
      ]
    },
    "7. Checking Supervisor Execution Path...": {
      "value": "7. Checking Supervisor Execution Path...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:109"
      ]
    },
    "7. Enable dev login: Set ALLOW_DEV_LOGIN=true in .env": {
      "value": "7. Enable dev login: Set ALLOW_DEV_LOGIN=true in .env",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:419"
      ]
    },
    "7. Testing SQL injection prevention...": {
      "value": "7. Testing SQL injection prevention...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:120"
      ]
    },
    "7. Testing session persistence...": {
      "value": "7. Testing session persistence...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:230"
      ]
    },
    "701982941522": {
      "value": "701982941522",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:35",
        "scripts/test_secret_manager_builder_critical.py:141",
        "scripts/test_staging_clickhouse.py:28"
      ]
    },
    "770e8400-e29b-41d4-a716-44665544000": {
      "value": "770e8400-e29b-41d4-a716-44665544000",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:327",
        "scripts/test_seed_data.py:351"
      ]
    },
    "7SVLKvh7mJNeF6njiRJMoZpUWLya3NfsvJfRHPc0-cYI7Oh80oXOUHuBNuMjUI4ghNTHFH0H7s9vf3S835ET5A": {
      "value": "7SVLKvh7mJNeF6njiRJMoZpUWLya3NfsvJfRHPc0-cYI7Oh80oXOUHuBNuMjUI4ghNTHFH0H7s9vf3S835ET5A",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:11"
      ]
    },
    "8": {
      "value": "8",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:240"
      ]
    },
    "8. Testing login with registered user...": {
      "value": "8. Testing login with registered user...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:137"
      ]
    },
    "8. Testing logout...": {
      "value": "8. Testing logout...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:291"
      ]
    },
    "8000": {
      "value": "8000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:186",
        "scripts/test_websocket_dev_mode.py:57"
      ]
    },
    "8001": {
      "value": "8001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:120",
        "auth_service/tests/test_auth_port_configuration.py:186",
        "auth_service/tests/test_auth_port_configuration.py:377",
        "auth_service/tests/test_critical_bugs_real.py:68",
        "auth_service/tests/test_critical_bugs_real.py:180"
      ]
    },
    "8080": {
      "value": "8080",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:119",
        "scripts/test_service_monitor.py:302"
      ]
    },
    "8081": {
      "value": "8081",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:42",
        "auth_service/tests/test_auth_port_configuration.py:43",
        "auth_service/tests/test_auth_port_configuration.py:79",
        "auth_service/tests/test_auth_port_configuration.py:102",
        "auth_service/tests/test_auth_port_configuration.py:118",
        "auth_service/tests/test_auth_port_configuration.py:118",
        "auth_service/tests/test_auth_port_configuration.py:119",
        "auth_service/tests/test_auth_port_configuration.py:120",
        "auth_service/tests/test_auth_port_configuration.py:154",
        "auth_service/tests/test_auth_port_configuration.py:155"
      ]
    },
    "8123": {
      "value": "8123",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:51",
        "scripts/test_service_monitor.py:54"
      ]
    },
    "8443": {
      "value": "8443",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:137",
        "scripts/test_clickhouse_staging.py:29",
        "scripts/test_staging_clickhouse.py:117",
        "scripts/test_staging_clickhouse.py:153"
      ]
    },
    "880e8400-e29b-41d4-a716-44665544000": {
      "value": "880e8400-e29b-41d4-a716-44665544000",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:329"
      ]
    },
    "8G": {
      "value": "8G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:64"
      ]
    },
    "9. Testing login with wrong password...": {
      "value": "9. Testing login with wrong password...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:154"
      ]
    },
    "999999999": {
      "value": "999999999",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:150"
      ]
    },
    ":": {
      "value": ":",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:243",
        "auth_service/tests/factories/permission_factory.py:57",
        "auth_service/tests/factories/permission_factory.py:89",
        "auth_service/tests/factories/permission_factory.py:110",
        "auth_service/tests/factories/permission_factory.py:126",
        "auth_service/tests/factories/permission_factory.py:147",
        "auth_service/tests/factories/permission_factory.py:166",
        "auth_service/tests/factories/permission_factory.py:167",
        "auth_service/tests/test_all_imports.py:91",
        "auth_service/tests/test_all_imports.py:93"
      ]
    },
    ":\n    \"\"\"Comprehensive test suite for": {
      "value": ":\n    \"\"\"Comprehensive test suite for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:121"
      ]
    },
    ":\n    \"\"\"Test suite for": {
      "value": ":\n    \"\"\"Test suite for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:197"
      ]
    },
    ": <not set>": {
      "value": ": <not set>",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:47",
        "scripts/test_staging_auth.py:163"
      ]
    },
    ": ASYNC AND TIMING FIXES\n\nFocus on async operations and timing issues.\n\nTEST OUTPUT:": {
      "value": ": ASYNC AND TIMING FIXES\n\nFocus on async operations and timing issues.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:423"
      ]
    },
    ": Analyzing test failures for": {
      "value": ": Analyzing test failures for",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:258"
      ]
    },
    ": Available": {
      "value": ": Available",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:157"
      ]
    },
    ": COMPONENT PROPS AND DATA FIXES\n\nFocus on simple component prop and data flow issues.\n\nTEST OUTPUT:": {
      "value": ": COMPONENT PROPS AND DATA FIXES\n\nFocus on simple component prop and data flow issues.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:338"
      ]
    },
    ": CONNECTION_ERROR": {
      "value": ": CONNECTION_ERROR",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:100"
      ]
    },
    ": Cannot validate cross-service JWT secret consistency - different implementations prevent unified security validation": {
      "value": ": Cannot validate cross-service JWT secret consistency - different implementations prevent unified security validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:831"
      ]
    },
    ": Contains legacy pattern '": {
      "value": ": Contains legacy pattern '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:182"
      ]
    },
    ": Could not check (": {
      "value": ": Could not check (",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:164"
      ]
    },
    ": Custom runner without ACT comment": {
      "value": ": Custom runner without ACT comment",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:238"
      ]
    },
    ": DEPENDENCY ISSUES\n\nFocus on package dependencies and version conflicts.\n\nTEST OUTPUT:": {
      "value": ": DEPENDENCY ISSUES\n\nFocus on package dependencies and version conflicts.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:389"
      ]
    },
    ": ERROR -": {
      "value": ": ERROR -",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:108",
        "scripts/test_agent_recovery_simple.py:131"
      ]
    },
    ": EVENT HANDLING FIXES\n\nFocus on event handler and user interaction issues in React components.\n\nTEST OUTPUT:": {
      "value": ": EVENT HANDLING FIXES\n\nFocus on event handler and user interaction issues in React components.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:321"
      ]
    },
    ": EXECUTION ERROR -": {
      "value": ": EXECUTION ERROR -",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:359"
      ]
    },
    ": Error -": {
      "value": ": Error -",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:213",
        "scripts/test_agent_orchestration_recovery.py:278",
        "scripts/test_async_serialization_direct.py:203",
        "scripts/test_staging_login_automated.py:109",
        "scripts/test_staging_login_automated.py:227",
        "scripts/test_staging_login_automated.py:292"
      ]
    },
    ": Expected": {
      "value": ": Expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:132"
      ]
    },
    ": FAIL -": {
      "value": ": FAIL -",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:183"
      ]
    },
    ": FAILED": {
      "value": ": FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:369",
        "scripts/test_clickhouse_startup_fix.py:343"
      ]
    },
    ": FAILED WITH EXCEPTION": {
      "value": ": FAILED WITH EXCEPTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:373",
        "scripts/test_database_url_builder_comprehensive.py:324",
        "scripts/test_ssl_certificates_staging.py:280",
        "scripts/test_staging_migrations.py:302"
      ]
    },
    ": Failed (": {
      "value": ": Failed (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:105"
      ]
    },
    ": Failed to parse mount info": {
      "value": ": Failed to parse mount info",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:176"
      ]
    },
    ": File not found": {
      "value": ": File not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:289"
      ]
    },
    ": Fixed": {
      "value": ": Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:145"
      ]
    },
    ": Found '": {
      "value": ": Found '",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:171"
      ]
    },
    ": Found (value length:": {
      "value": ": Found (value length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:52"
      ]
    },
    ": Generated unique tokens with correct user data": {
      "value": ": Generated unique tokens with correct user data",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:75"
      ]
    },
    ": HTTP": {
      "value": ": HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:49",
        "scripts/test_staging_login_automated.py:212"
      ]
    },
    ": IMPORT/EXPORT FIXES\n\nFocus on import/export issues (not architectural).\n\nTEST OUTPUT:": {
      "value": ": IMPORT/EXPORT FIXES\n\nFocus on import/export issues (not architectural).\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:355"
      ]
    },
    ": Implement": {
      "value": ": Implement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:211"
      ]
    },
    ": MISSING - No API key": {
      "value": ": MISSING - No API key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:117"
      ]
    },
    ": MOCK SETUP CONFIGURATION FIXES\n\nFocus on Jest mock configuration and setup issues in frontend tests.\n\nTEST OUTPUT:": {
      "value": ": MOCK SETUP CONFIGURATION FIXES\n\nFocus on Jest mock configuration and setup issues in frontend tests.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:304"
      ]
    },
    ": Memory": {
      "value": ": Memory",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:339"
      ]
    },
    ": Missing": {
      "value": ": Missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:54"
      ]
    },
    ": Missing volume mounts": {
      "value": ": Missing volume mounts",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:171"
      ]
    },
    ": NOT AVAILABLE": {
      "value": ": NOT AVAILABLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:295"
      ]
    },
    ": NOT SENT": {
      "value": ": NOT SENT",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:153"
      ]
    },
    ": NOT using shared CORS config": {
      "value": ": NOT using shared CORS config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:161"
      ]
    },
    ": No redirect (": {
      "value": ": No redirect (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:285"
      ]
    },
    ": No tests run": {
      "value": ": No tests run",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:343"
      ]
    },
    ": OK (non-JSON response)": {
      "value": ": OK (non-JSON response)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:203"
      ]
    },
    ": OK - API key configured (from": {
      "value": ": OK - API key configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:115"
      ]
    },
    ": PASSED": {
      "value": ": PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:341"
      ]
    },
    ": Running tests...": {
      "value": ": Running tests...",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:213"
      ]
    },
    ": Status": {
      "value": ": Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:163"
      ]
    },
    ": Success": {
      "value": ": Success",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:99"
      ]
    },
    ": TEST ENVIRONMENT CONFIGURATION\n\nFocus on test environment and setup configuration issues.\n\nTEST OUTPUT:": {
      "value": ": TEST ENVIRONMENT CONFIGURATION\n\nFocus on test environment and setup configuration issues.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:372"
      ]
    },
    ": TIMEOUT": {
      "value": ": TIMEOUT",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:92"
      ]
    },
    ": Timeout": {
      "value": ": Timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:207",
        "scripts/test_staging_login_automated.py:220"
      ]
    },
    ": Unauthorized (mock auth not enabled)": {
      "value": ": Unauthorized (mock auth not enabled)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:102"
      ]
    },
    ": Unexpected redirect": {
      "value": ": Unexpected redirect",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:279"
      ]
    },
    ": Uses shared CORS config": {
      "value": ": Uses shared CORS config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:159"
      ]
    },
    ": VALIDATION AND EDGE CASES\n\nFocus on form validation and edge case handling.\n\nTEST OUTPUT:": {
      "value": ": VALIDATION AND EDGE CASES\n\nFocus on form validation and edge case handling.\n\nTEST OUTPUT:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:406"
      ]
    },
    ": Volume mounts configured": {
      "value": ": Volume mounts configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:169"
      ]
    },
    ": [ERROR]": {
      "value": ": [ERROR]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:218"
      ]
    },
    ": expected": {
      "value": ": expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:186",
        "auth_service/tests/utils/assertion_helpers.py:202"
      ]
    },
    ": netra_backend='": {
      "value": ": netra_backend='",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:394"
      ]
    },
    ": unexpected error:": {
      "value": ": unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:90"
      ]
    },
    ": ❌ (": {
      "value": ": ❌ (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:26",
        "scripts/test_staging_auth_flow.py:53",
        "scripts/test_staging_auth_flow.py:76"
      ]
    },
    ":(\\d+)": {
      "value": ":(\\d+)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:53",
        "auth_service/tests/test_auth_port_configuration.py:92",
        "auth_service/tests/test_auth_port_configuration.py:162",
        "auth_service/tests/test_auth_port_configuration.py:231",
        "auth_service/tests/test_auth_port_configuration.py:285",
        "auth_service/tests/test_auth_port_configuration.py:328",
        "auth_service/tests/test_auth_port_configuration.py:356",
        "auth_service/tests/test_auth_port_configuration.py:413"
      ]
    },
    "://": {
      "value": "://",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:123"
      ]
    },
    "://***@": {
      "value": "://***@",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:123"
      ]
    },
    ":3000": {
      "value": ":3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:83"
      ]
    },
    ":5433/": {
      "value": ":5433/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:199"
      ]
    },
    ":8000": {
      "value": ":8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:83"
      ]
    },
    "::": {
      "value": "::",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:370",
        "scripts/analyze_test_overlap.py:371",
        "scripts/ci/check_test_stubs.py:100",
        "scripts/ci/check_test_stubs.py:100",
        "scripts/continuous_e2e_test_runner.py:126",
        "scripts/fix_test_batch.py:297",
        "scripts/iterative_test_fix_loop.py:71",
        "scripts/iterative_test_fix_loop.py:72",
        "scripts/test_backend_optimized.py:311",
        "scripts/test_backend_optimized.py:312"
      ]
    },
    "::Test": {
      "value": "::Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:116"
      ]
    },
    "::test_": {
      "value": "::test_",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:116"
      ]
    },
    ":auth_service: JWT secret contains weak pattern '": {
      "value": ":auth_service: JWT secret contains weak pattern '",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:750"
      ]
    },
    ":auth_service: JWT secret too short (": {
      "value": ":auth_service: JWT secret too short (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:741"
      ]
    },
    ":auth_service: JWT security validation failed -": {
      "value": ":auth_service: JWT security validation failed -",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:755"
      ]
    },
    ":netra_backend: Security validation failed -": {
      "value": ":netra_backend: Security validation failed -",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:731"
      ]
    },
    ";": {
      "value": ";",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:379"
      ]
    },
    ";\nexport const HOT_RELOAD_WORKING = true;": {
      "value": ";\nexport const HOT_RELOAD_WORKING = true;",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:31"
      ]
    },
    "<": {
      "value": "<",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:230",
        "scripts/test_websocket_injection_fix_complete.py:430"
      ]
    },
    "<!DOCTYPE html>\n<html>\n<head>\n    <title>Real Service Test Report</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        h1 { color: #333; border-bottom: 3px solid #007bff; padding-bottom: 10px; }\n        h2 { color: #555; margin-top: 30px; }\n        .metric-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007bff; }\n        .success { color: #28a745; font-weight: bold; }\n        .failure { color: #dc3545; font-weight: bold; }\n        .warning { color: #ffc107; }\n        table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n        th { background: #007bff; color: white; padding: 10px; text-align: left; }\n        td { padding: 10px; border-bottom: 1px solid #ddd; }\n        tr:hover { background: #f5f5f5; }\n        .chart { margin: 20px 0; }\n        .progress-bar { width: 100%; height: 30px; background: #e9ecef; border-radius: 5px; overflow: hidden; }\n        .progress-fill { height: 100%; background: linear-gradient(90deg, #28a745, #20c997); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; }\n    </style>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Real Service Test Report</h1>": {
      "value": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Real Service Test Report</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        h1 { color: #333; border-bottom: 3px solid #007bff; padding-bottom: 10px; }\n        h2 { color: #555; margin-top: 30px; }\n        .metric-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007bff; }\n        .success { color: #28a745; font-weight: bold; }\n        .failure { color: #dc3545; font-weight: bold; }\n        .warning { color: #ffc107; }\n        table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n        th { background: #007bff; color: white; padding: 10px; text-align: left; }\n        td { padding: 10px; border-bottom: 1px solid #ddd; }\n        tr:hover { background: #f5f5f5; }\n        .chart { margin: 20px 0; }\n        .progress-bar { width: 100%; height: 30px; background: #e9ecef; border-radius: 5px; overflow: hidden; }\n        .progress-fill { height: 100%; background: linear-gradient(90deg, #28a745, #20c997); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; }\n    </style>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Real Service Test Report</h1>",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:236"
      ]
    },
    "<!DOCTYPE html>\n<html>\n<head>\n    <title>Test Dashboard -": {
      "value": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Test Dashboard -",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:245"
      ]
    },
    "</": {
      "value": "</",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:430"
      ]
    },
    "</div>\n    \n    <div class=\"card\">\n        <h2>Slowest Tests</h2>\n        <table>\n            <tr>\n                <th>Test Name</th>\n                <th>Average Duration</th>\n                <th>Categories</th>\n            </tr>": {
      "value": "</div>\n    \n    <div class=\"card\">\n        <h2>Slowest Tests</h2>\n        <table>\n            <tr>\n                <th>Test Name</th>\n                <th>Average Duration</th>\n                <th>Categories</th>\n            </tr>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:359"
      ]
    },
    "</div>\n                <div class=\"metric-label\">Default Categories</div>\n            </div>\n            <div class=\"metric\">\n                <div class=\"metric-value\">": {
      "value": "</div>\n                <div class=\"metric-label\">Default Categories</div>\n            </div>\n            <div class=\"metric\">\n                <div class=\"metric-value\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:287"
      ]
    },
    "</div>\n                <div class=\"metric-label\">Flaky Tests</div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"card\">\n        <h2>Category Summary</h2>\n        <table>\n            <tr>\n                <th>Category</th>\n                <th>Tests</th>\n                <th>Default</th>\n                <th>Failure Rate</th>\n                <th>Recent Failure Rate</th>\n                <th>Avg Duration</th>\n            </tr>": {
      "value": "</div>\n                <div class=\"metric-label\">Flaky Tests</div>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"card\">\n        <h2>Category Summary</h2>\n        <table>\n            <tr>\n                <th>Category</th>\n                <th>Tests</th>\n                <th>Default</th>\n                <th>Failure Rate</th>\n                <th>Recent Failure Rate</th>\n                <th>Avg Duration</th>\n            </tr>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:295"
      ]
    },
    "</div>\n                <div class=\"metric-label\">Test Categories</div>\n            </div>\n            <div class=\"metric\">\n                <div class=\"metric-value\">": {
      "value": "</div>\n                <div class=\"metric-label\">Test Categories</div>\n            </div>\n            <div class=\"metric\">\n                <div class=\"metric-value\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:283"
      ]
    },
    "</div>\n</body>\n</html>": {
      "value": "</div>\n</body>\n</html>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:410"
      ]
    },
    "</div></body></html>": {
      "value": "</div></body></html>",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:267"
      ]
    },
    "</li>": {
      "value": "</li>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:405"
      ]
    },
    "</p>\n    \n    <div class=\"card\">\n        <h2>Overview</h2>\n        <div class=\"metrics\">": {
      "value": "</p>\n    \n    <div class=\"card\">\n        <h2>Overview</h2>\n        <div class=\"metrics\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:269"
      ]
    },
    "</strong></td>\n                <td>": {
      "value": "</strong></td>\n                <td>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:319"
      ]
    },
    "</table>": {
      "value": "</table>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:355"
      ]
    },
    "</table>\n    </div>\n    \n    <div class=\"card\">\n        <h2>Flaky Tests</h2>": {
      "value": "</table>\n    </div>\n    \n    <div class=\"card\">\n        <h2>Flaky Tests</h2>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:328"
      ]
    },
    "</table>\n    </div>\n    \n    <div class=\"card\">\n        <h2>Recommendations</h2>": {
      "value": "</table>\n    </div>\n    \n    <div class=\"card\">\n        <h2>Recommendations</h2>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:382"
      ]
    },
    "</td>\n                <td class=\"": {
      "value": "</td>\n                <td class=\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:321"
      ]
    },
    "</td>\n                <td class=\"status-fail\">": {
      "value": "</td>\n                <td class=\"status-fail\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:350"
      ]
    },
    "</td>\n                <td>": {
      "value": "</td>\n                <td>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:320",
        "scripts/test_dashboard.py:349",
        "scripts/test_dashboard.py:351",
        "scripts/test_dashboard.py:376"
      ]
    },
    "</td>\n            </tr>": {
      "value": "</td>\n            </tr>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:352",
        "scripts/test_dashboard.py:378"
      ]
    },
    "</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        h1 { color: #333; border-bottom: 2px solid #4CAF50; padding-bottom: 10px; }\n        h2 { color: #666; margin-top: 30px; }\n        .card { background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n        table { width: 100%; border-collapse: collapse; }\n        th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }\n        th { background: #4CAF50; color: white; }\n        .status-pass { color: green; font-weight: bold; }\n        .status-fail { color: red; font-weight: bold; }\n        .metric { display: inline-block; margin: 10px 20px; }\n        .metric-value { font-size: 24px; font-weight: bold; color: #4CAF50; }\n        .metric-label { color: #666; font-size: 14px; }\n        .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 10px; margin: 10px 0; }\n        .chart { width: 100%; height: 300px; background: #fafafa; border: 1px solid #ddd; margin: 20px 0; }\n    </style>\n</head>\n<body>\n    <h1>Test Execution Dashboard</h1>\n    <p>Generated:": {
      "value": "</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        h1 { color: #333; border-bottom: 2px solid #4CAF50; padding-bottom: 10px; }\n        h2 { color: #666; margin-top: 30px; }\n        .card { background: white; padding: 20px; margin: 20px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\n        table { width: 100%; border-collapse: collapse; }\n        th, td { padding: 10px; text-align: left; border-bottom: 1px solid #ddd; }\n        th { background: #4CAF50; color: white; }\n        .status-pass { color: green; font-weight: bold; }\n        .status-fail { color: red; font-weight: bold; }\n        .metric { display: inline-block; margin: 10px 20px; }\n        .metric-value { font-size: 24px; font-weight: bold; color: #4CAF50; }\n        .metric-label { color: #666; font-size: 14px; }\n        .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 10px; margin: 10px 0; }\n        .chart { width: 100%; height: 300px; background: #fafafa; border: 1px solid #ddd; margin: 20px 0; }\n    </style>\n</head>\n<body>\n    <h1>Test Execution Dashboard</h1>\n    <p>Generated:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:249"
      ]
    },
    "</ul>": {
      "value": "</ul>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:406"
      ]
    },
    "<10": {
      "value": "<10",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45",
        "scripts/test_dashboard.py:45",
        "scripts/test_dashboard.py:50",
        "scripts/test_dashboard.py:50"
      ]
    },
    "<12": {
      "value": "<12",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45",
        "scripts/test_dashboard.py:45"
      ]
    },
    "<15": {
      "value": "<15",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45",
        "scripts/test_dashboard.py:50"
      ]
    },
    "<30": {
      "value": "<30",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:149"
      ]
    },
    "<div class=\"metric\">\n                <div class=\"metric-value\">": {
      "value": "<div class=\"metric\">\n                <div class=\"metric-value\">",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:281"
      ]
    },
    "<li>": {
      "value": "<li>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:405"
      ]
    },
    "<p>No flaky tests detected.</p>": {
      "value": "<p>No flaky tests detected.</p>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:357"
      ]
    },
    "<p>✅ Test system is healthy!</p>": {
      "value": "<p>✅ Test system is healthy!</p>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:408"
      ]
    },
    "<table>\n            <tr>\n                <th>Test Name</th>\n                <th>File Path</th>\n                <th>Failure Rate</th>\n                <th>Total Runs</th>\n            </tr>": {
      "value": "<table>\n            <tr>\n                <th>Test Name</th>\n                <th>File Path</th>\n                <th>Failure Rate</th>\n                <th>Total Runs</th>\n            </tr>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:337"
      ]
    },
    "<tr>\n                <td>": {
      "value": "<tr>\n                <td>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:347",
        "scripts/test_dashboard.py:374"
      ]
    },
    "<tr>\n                <td><strong>": {
      "value": "<tr>\n                <td><strong>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:317"
      ]
    },
    "<ul>": {
      "value": "<ul>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:403"
      ]
    },
    "=": {
      "value": "=",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:151",
        "auth_service/test_actual_staging_credentials.py:171",
        "auth_service/test_auth_direct.py:217",
        "auth_service/test_auth_direct.py:219",
        "auth_service/test_auth_direct.py:237",
        "auth_service/test_auth_direct.py:239",
        "auth_service/test_staging_db_connection.py:280",
        "auth_service/test_staging_db_connection.py:316",
        "auth_service/test_url_construction.py:217",
        "auth_service/test_url_construction.py:237"
      ]
    },
    "=== AUTHENTICATION TESTS ===": {
      "value": "=== AUTHENTICATION TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:113"
      ]
    },
    "=== Analysis ===": {
      "value": "=== Analysis ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:167",
        "scripts/simple_websocket_blocking_test.py:219"
      ]
    },
    "=== Analyzing Connection Issue ===": {
      "value": "=== Analyzing Connection Issue ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:156"
      ]
    },
    "=== Analyzing Database Name Configuration ===": {
      "value": "=== Analyzing Database Name Configuration ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:93"
      ]
    },
    "=== BASIC FUNCTIONALITY TESTS ===": {
      "value": "=== BASIC FUNCTIONALITY TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:82"
      ]
    },
    "=== Checking Cloud SQL Proxy Status ===": {
      "value": "=== Checking Cloud SQL Proxy Status ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:224"
      ]
    },
    "=== Checking PostgreSQL Availability ===": {
      "value": "=== Checking PostgreSQL Availability ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:130"
      ]
    },
    "=== Checking SSOT Compliance ===": {
      "value": "=== Checking SSOT Compliance ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:143"
      ]
    },
    "=== Concurrent Serialization Blocking Test ===": {
      "value": "=== Concurrent Serialization Blocking Test ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:186"
      ]
    },
    "=== Expected Fix ===": {
      "value": "=== Expected Fix ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:175"
      ]
    },
    "=== Final Summary ===": {
      "value": "=== Final Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:92"
      ]
    },
    "=== KEY FINDINGS ===": {
      "value": "=== KEY FINDINGS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:143"
      ]
    },
    "=== L3 Test File Standardization ===": {
      "value": "=== L3 Test File Standardization ===",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:226"
      ]
    },
    "=== MIDDLEWARE ANALYSIS ===": {
      "value": "=== MIDDLEWARE ANALYSIS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:122"
      ]
    },
    "=== Mock Analysis Summary ===": {
      "value": "=== Mock Analysis Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:166"
      ]
    },
    "=== Next Steps to Resolve Auth Database Issue ===": {
      "value": "=== Next Steps to Resolve Auth Database Issue ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:118"
      ]
    },
    "=== OUTPUT FORMAT TESTS ===": {
      "value": "=== OUTPUT FORMAT TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:157"
      ]
    },
    "=== Progress:": {
      "value": "=== Progress:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:121"
      ]
    },
    "=== RECOMMENDATIONS ===": {
      "value": "=== RECOMMENDATIONS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:191"
      ]
    },
    "=== REPOSITORY HANDLING TESTS ===": {
      "value": "=== REPOSITORY HANDLING TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:135"
      ]
    },
    "=== Resource Status ===": {
      "value": "=== Resource Status ===",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:337"
      ]
    },
    "=== SIGNUP FLOW TESTING COMPLETE ===": {
      "value": "=== SIGNUP FLOW TESTING COMPLETE ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:167"
      ]
    },
    "=== STARTING WEBSOCKET MIDDLEWARE AUDIT ===": {
      "value": "=== STARTING WEBSOCKET MIDDLEWARE AUDIT ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:159"
      ]
    },
    "=== SUMMARY ===": {
      "value": "=== SUMMARY ===",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:399",
        "scripts/simple_websocket_blocking_test.py:241"
      ]
    },
    "=== Summary ===": {
      "value": "=== Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:281"
      ]
    },
    "=== TEST 1: Basic 5 WebSocket Events ===": {
      "value": "=== TEST 1: Basic 5 WebSocket Events ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:126"
      ]
    },
    "=== TEST 2: Enhanced Tool Execution Events ===": {
      "value": "=== TEST 2: Enhanced Tool Execution Events ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:178"
      ]
    },
    "=== TEST 3: Complete 'Hello' User Flow ===": {
      "value": "=== TEST 3: Complete 'Hello' User Flow ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:227"
      ]
    },
    "=== TESTING HEALTH ENDPOINTS ===": {
      "value": "=== TESTING HEALTH ENDPOINTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:77"
      ]
    },
    "=== TESTING PERFORMANCE METRICS ===": {
      "value": "=== TESTING PERFORMANCE METRICS ===",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:296"
      ]
    },
    "=== TESTING SERVICE INTEGRATION ===": {
      "value": "=== TESTING SERVICE INTEGRATION ===",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:140"
      ]
    },
    "=== TESTING SIGNUP FLOW WITH EDGE CASES ===": {
      "value": "=== TESTING SIGNUP FLOW WITH EDGE CASES ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:16"
      ]
    },
    "=== Test 1: StagingConfig Instantiation ===": {
      "value": "=== Test 1: StagingConfig Instantiation ===",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:29"
      ]
    },
    "=== Test 2: StagingConfig with ClickHouse ===": {
      "value": "=== Test 2: StagingConfig with ClickHouse ===",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:69"
      ]
    },
    "=== Test 3: Full Configuration Flow ===": {
      "value": "=== Test 3: Full Configuration Flow ===",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:120"
      ]
    },
    "=== Testing Auth Client Environment Detection ===": {
      "value": "=== Testing Auth Client Environment Detection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:15"
      ]
    },
    "=== Testing Auth Service Database Connection ===": {
      "value": "=== Testing Auth Service Database Connection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:68"
      ]
    },
    "=== Testing Auth Service Refresh ===": {
      "value": "=== Testing Auth Service Refresh ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:165"
      ]
    },
    "=== Testing AuthConfig ===": {
      "value": "=== Testing AuthConfig ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:168"
      ]
    },
    "=== Testing AuthConfig Integration ===": {
      "value": "=== Testing AuthConfig Integration ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:128"
      ]
    },
    "=== Testing Backend Service Database Connection ===": {
      "value": "=== Testing Backend Service Database Connection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:25"
      ]
    },
    "=== Testing Cloud SQL Connector Availability ===": {
      "value": "=== Testing Cloud SQL Connector Availability ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:111"
      ]
    },
    "=== Testing Connection with AuthConfig URL ===": {
      "value": "=== Testing Connection with AuthConfig URL ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:189"
      ]
    },
    "=== Testing DatabaseURLBuilder ===": {
      "value": "=== Testing DatabaseURLBuilder ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:117"
      ]
    },
    "=== Testing Development CORS Configuration ===": {
      "value": "=== Testing Development CORS Configuration ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:22"
      ]
    },
    "=== Testing Direct asyncpg Connection ===": {
      "value": "=== Testing Direct asyncpg Connection ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:50"
      ]
    },
    "=== Testing JWT ID Uniqueness ===": {
      "value": "=== Testing JWT ID Uniqueness ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:135"
      ]
    },
    "=== Testing Middleware Environment Defaults ===": {
      "value": "=== Testing Middleware Environment Defaults ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:69"
      ]
    },
    "=== Testing OAuth Config Fallback ===": {
      "value": "=== Testing OAuth Config Fallback ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:129"
      ]
    },
    "=== Testing Production CORS Configuration ===": {
      "value": "=== Testing Production CORS Configuration ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:97"
      ]
    },
    "=== Testing Schema Defaults ===": {
      "value": "=== Testing Schema Defaults ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:111"
      ]
    },
    "=== Testing Staging CORS Configuration ===": {
      "value": "=== Testing Staging CORS Configuration ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:53"
      ]
    },
    "=== Testing TCP Fallback Connection ===": {
      "value": "=== Testing TCP Fallback Connection ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:87"
      ]
    },
    "=== Testing Token Refresh Uniqueness ===": {
      "value": "=== Testing Token Refresh Uniqueness ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:27"
      ]
    },
    "=== Testing Token Validation ===": {
      "value": "=== Testing Token Validation ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:89"
      ]
    },
    "=== Testing URL Construction ===": {
      "value": "=== Testing URL Construction ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:54"
      ]
    },
    "=== Testing URL Generation with Actual Credentials ===": {
      "value": "=== Testing URL Generation with Actual Credentials ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:53"
      ]
    },
    "=== Top 10 Unjustified Mocks to Fix ===": {
      "value": "=== Top 10 Unjustified Mocks to Fix ===",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:174"
      ]
    },
    "=== Validating Staging Credentials ===": {
      "value": "=== Validating Staging Credentials ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:254"
      ]
    },
    "=== WebSocket Serialization Blocking Test ===": {
      "value": "=== WebSocket Serialization Blocking Test ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:132"
      ]
    },
    "================================": {
      "value": "================================",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:178"
      ]
    },
    "=====================================": {
      "value": "=====================================",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:460"
      ]
    },
    "=====================================================": {
      "value": "=====================================================",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:232"
      ]
    },
    ">": {
      "value": ">",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:527",
        "scripts/frontend_iterative_test_runner.py:532",
        "scripts/frontend_iterative_test_runner.py:535",
        "scripts/test_error_monitor_logic.py:99",
        "scripts/test_error_monitor_logic.py:102",
        "scripts/test_websocket_injection_fix_complete.py:430",
        "scripts/test_websocket_injection_fix_complete.py:430",
        "scripts/validate_llm_test_models.py:172"
      ]
    },
    ">8": {
      "value": ">8",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:51"
      ]
    },
    ">>> FOUND TARGET PROPERTY! <<<": {
      "value": ">>> FOUND TARGET PROPERTY! <<<",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:73"
      ]
    },
    "?": {
      "value": "?",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:725",
        "scripts/test/test_supervisor_import.py:90"
      ]
    },
    "? Password seems short (": {
      "value": "? Password seems short (",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:184"
      ]
    },
    "? Using non-standard user:": {
      "value": "? Using non-standard user:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:179"
      ]
    },
    "?host=/cloudsql/": {
      "value": "?host=/cloudsql/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:107",
        "auth_service/test_url_construction.py:108"
      ]
    },
    "?limit=20&offset=0": {
      "value": "?limit=20&offset=0",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:37"
      ]
    },
    "?token=": {
      "value": "?token=",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:126"
      ]
    },
    "@": {
      "value": "@",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:169",
        "scripts/apply_fast_test_decorators.py:41",
        "scripts/auto_fix_test_sizes.py:566",
        "scripts/compliance/test_fixer.py:195",
        "scripts/test_config_loading.py:121",
        "scripts/test_config_loading.py:122",
        "scripts/test_seed_data.py:39",
        "scripts/test_service_monitor.py:42"
      ]
    },
    "@127.0.0.1:": {
      "value": "@127.0.0.1:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:90"
      ]
    },
    "@abstractmethod": {
      "value": "@abstractmethod",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "@custom-db-host.example.com:": {
      "value": "@custom-db-host.example.com:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:171"
      ]
    },
    "@custom_host:": {
      "value": "@custom_host:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:198"
      ]
    },
    "@e2e": {
      "value": "@e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:98"
      ]
    },
    "@example.com": {
      "value": "@example.com",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:53",
        "auth_service/test_auth_direct.py:141",
        "auth_service/tests/conftest.py:233",
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/user_factory.py:38",
        "auth_service/tests/test_auth_comprehensive_audit.py:378",
        "auth_service/tests/test_auth_comprehensive_audit.py:381",
        "auth_service/tests/test_auth_comprehensive_audit.py:499",
        "auth_service/tests/test_auth_real_services_comprehensive.py:76",
        "auth_service/tests/test_auth_real_services_comprehensive.py:300"
      ]
    },
    "@fast_test": {
      "value": "@fast_test",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:87",
        "scripts/apply_fast_test_decorators.py:93"
      ]
    },
    "@gmail.com": {
      "value": "@gmail.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:190"
      ]
    },
    "@integration": {
      "value": "@integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:93"
      ]
    },
    "@localhost:": {
      "value": "@localhost:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:62",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:119",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:144",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:226",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:253",
        "scripts/test_async_postgres.py:149"
      ]
    },
    "@mock_justified": {
      "value": "@mock_justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "@patch": {
      "value": "@patch",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:385",
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_requirements_enforcer.py:359",
        "scripts/e2e_test_fixer.py:63"
      ]
    },
    "@patch\\([\\'\"]([^\\'\"]*)[\\'\"].*?\\)": {
      "value": "@patch\\([\\'\"]([^\\'\"]*)[\\'\"].*?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:96"
      ]
    },
    "@postgres:": {
      "value": "@postgres:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:61",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:89",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:118",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:145",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:172",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:227",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:254"
      ]
    },
    "@pytest.": {
      "value": "@pytest.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:153"
      ]
    },
    "@pytest.mark": {
      "value": "@pytest.mark",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:147",
        "scripts/test_collection_audit.py:246"
      ]
    },
    "@pytest.mark.": {
      "value": "@pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:94",
        "scripts/add_pytest_markers.py:99",
        "scripts/add_test_markers.py:83",
        "scripts/add_test_markers.py:117"
      ]
    },
    "@pytest.mark.auth": {
      "value": "@pytest.mark.auth",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:127"
      ]
    },
    "@pytest.mark.e2e": {
      "value": "@pytest.mark.e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:58",
        "scripts/e2e_test_fixer.py:132",
        "scripts/e2e_test_fixer.py:133"
      ]
    },
    "@pytest.mark.integration": {
      "value": "@pytest.mark.integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:56"
      ]
    },
    "@pytest.mark.mock_only": {
      "value": "@pytest.mark.mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:52"
      ]
    },
    "@pytest.mark.performance": {
      "value": "@pytest.mark.performance",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:121"
      ]
    },
    "@pytest.mark.real_clickhouse": {
      "value": "@pytest.mark.real_clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:46"
      ]
    },
    "@pytest.mark.real_database": {
      "value": "@pytest.mark.real_database",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:42"
      ]
    },
    "@pytest.mark.real_llm": {
      "value": "@pytest.mark.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:40",
        "scripts/add_test_markers.py:183"
      ]
    },
    "@pytest.mark.real_redis": {
      "value": "@pytest.mark.real_redis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:44"
      ]
    },
    "@pytest.mark.real_services": {
      "value": "@pytest.mark.real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:50"
      ]
    },
    "@pytest.mark.resilience": {
      "value": "@pytest.mark.resilience",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:123"
      ]
    },
    "@pytest.mark.skip": {
      "value": "@pytest.mark.skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:286"
      ]
    },
    "@pytest.mark.skipif(\n    os.environ.get(\"ENABLE_REAL_LLM_TESTING\") != \"true\",\n    reason=\"Real LLM tests disabled. Set ENABLE_REAL_LLM_TESTING=true to run\"\n)": {
      "value": "@pytest.mark.skipif(\n    os.environ.get(\"ENABLE_REAL_LLM_TESTING\") != \"true\",\n    reason=\"Real LLM tests disabled. Set ENABLE_REAL_LLM_TESTING=true to run\"\n)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:190"
      ]
    },
    "@pytest.mark.startup": {
      "value": "@pytest.mark.startup",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:129"
      ]
    },
    "@pytest.mark.unit": {
      "value": "@pytest.mark.unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:54"
      ]
    },
    "@pytest.mark.websocket": {
      "value": "@pytest.mark.websocket",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:125"
      ]
    },
    "@pytest\\.fixture": {
      "value": "@pytest\\.fixture",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:92"
      ]
    },
    "@pytest\\.fixture.*?\\ndef\\s+(\\w+)": {
      "value": "@pytest\\.fixture.*?\\ndef\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:228"
      ]
    },
    "@pytest\\.mark\\.": {
      "value": "@pytest\\.mark\\.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:44"
      ]
    },
    "@pytest\\.mark\\.(\\w+)": {
      "value": "@pytest\\.mark\\.(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:290"
      ]
    },
    "@skip": {
      "value": "@skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:286"
      ]
    },
    "@test.com": {
      "value": "@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:214"
      ]
    },
    "@unit": {
      "value": "@unit",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:88"
      ]
    },
    "@users.noreply.github.com": {
      "value": "@users.noreply.github.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:224"
      ]
    },
    "A": {
      "value": "A",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:246",
        "auth_service/tests/test_auth_comprehensive_audit.py:246"
      ]
    },
    "A direct tool for testing": {
      "value": "A direct tool for testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:116"
      ]
    },
    "ABC": {
      "value": "ABC",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211",
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "ACCOUNT_LOCKED": {
      "value": "ACCOUNT_LOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:24",
        "auth_service/tests/factories/audit_factory.py:189"
      ]
    },
    "ACCOUNT_UNLOCKED": {
      "value": "ACCOUNT_UNLOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:25"
      ]
    },
    "ACHIEVED": {
      "value": "ACHIEVED",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:220"
      ]
    },
    "ACT": {
      "value": "ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:241"
      ]
    },
    "ACT: ${{ env.ACT }}": {
      "value": "ACT: ${{ env.ACT }}",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:229",
        "scripts/test_workflows_with_act.py:254",
        "scripts/test_workflows_with_act.py:256"
      ]
    },
    "ACTION REQUIRED": {
      "value": "ACTION REQUIRED",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:106"
      ]
    },
    "ACTUAL REQUEST:": {
      "value": "ACTUAL REQUEST:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:90"
      ]
    },
    "ACTUALLY": {
      "value": "ACTUALLY",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "ADAPTIVE WORKFLOW TEST SUITE": {
      "value": "ADAPTIVE WORKFLOW TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:76"
      ]
    },
    "AGENT:": {
      "value": "AGENT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:164"
      ]
    },
    "ALL DATABASE CONNECTION TESTS PASSED!": {
      "value": "ALL DATABASE CONNECTION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:118"
      ]
    },
    "ALL INTEGRATION TESTS PASSED!": {
      "value": "ALL INTEGRATION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:418"
      ]
    },
    "ALL STARTUP MODULE TESTS PASSED": {
      "value": "ALL STARTUP MODULE TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:88"
      ]
    },
    "ALL TESTS PASSED": {
      "value": "ALL TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:402",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_error_monitor_logic.py:240",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:331",
        "scripts/test_windows_process_cleanup.py:187"
      ]
    },
    "ALL TESTS PASSED (": {
      "value": "ALL TESTS PASSED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:371"
      ]
    },
    "ALL TESTS PASSED - SSOT FIX VERIFIED": {
      "value": "ALL TESTS PASSED - SSOT FIX VERIFIED",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:93"
      ]
    },
    "ALL TESTS PASSED! WebSocket agent events working correctly.": {
      "value": "ALL TESTS PASSED! WebSocket agent events working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:267"
      ]
    },
    "ALLOWED": {
      "value": "ALLOWED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:43",
        "scripts/test_cors_ssot_compliance.py:79",
        "scripts/test_cors_ssot_compliance.py:87",
        "scripts/test_cors_ssot_compliance.py:125",
        "scripts/test_cors_ssot_compliance.py:133"
      ]
    },
    "ALLOWED conftest.py files (service-level):": {
      "value": "ALLOWED conftest.py files (service-level):",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:78"
      ]
    },
    "ALLOW_DEV_LOGIN": {
      "value": "ALLOW_DEV_LOGIN",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:241"
      ]
    },
    "ALLOW_DEV_OAUTH_SIMULATION": {
      "value": "ALLOW_DEV_OAUTH_SIMULATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:40",
        "scripts/test_docker_websocket_fix.py:211"
      ]
    },
    "ALLOW_DEV_OAUTH_SIMULATION: true": {
      "value": "ALLOW_DEV_OAUTH_SIMULATION: true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:159"
      ]
    },
    "ALLOW_DEV_OAUTH_SIMULATION=true": {
      "value": "ALLOW_DEV_OAUTH_SIMULATION=true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:174"
      ]
    },
    "ANALYSIS": {
      "value": "ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:134",
        "scripts/test_backend_auth_config.py:119",
        "scripts/test_staging_jwt_validation.py:135"
      ]
    },
    "ANTHROPIC_": {
      "value": "ANTHROPIC_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "ANTHROPIC_API_KEY": {
      "value": "ANTHROPIC_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:53",
        "scripts/run_agent_pipeline_test.py:53",
        "scripts/setup_test_environment.py:120",
        "scripts/setup_test_environment.py:246",
        "scripts/test_backend_ORIGINAL.py:88",
        "scripts/test_backend_ORIGINAL.py:88",
        "scripts/test_environment_validation_clean.py:79",
        "scripts/test_environment_validation_clean.py:140",
        "scripts/test_improved_environment_validation.py:80",
        "scripts/test_improved_environment_validation.py:140"
      ]
    },
    "API": {
      "value": "API",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:72",
        "scripts/test_chat_errors.py:73",
        "scripts/test_chat_errors.py:76",
        "scripts/test_chat_errors.py:77"
      ]
    },
    "API Agents": {
      "value": "API Agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:108"
      ]
    },
    "API Documentation": {
      "value": "API Documentation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:43",
        "scripts/test_staging_env.py:147"
      ]
    },
    "API Services:": {
      "value": "API Services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:52",
        "scripts/test_service_health_simple.py:117"
      ]
    },
    "API Status": {
      "value": "API Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:147"
      ]
    },
    "API Threads List": {
      "value": "API Threads List",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:104"
      ]
    },
    "API URL not found": {
      "value": "API URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:316"
      ]
    },
    "API Version": {
      "value": "API Version",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:146"
      ]
    },
    "API Workspaces": {
      "value": "API Workspaces",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:106"
      ]
    },
    "API agent endpoint:": {
      "value": "API agent endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:150"
      ]
    },
    "API docs are accessible": {
      "value": "API docs are accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:59"
      ]
    },
    "API docs check failed:": {
      "value": "API docs check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:63"
      ]
    },
    "API docs returned status": {
      "value": "API docs returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:61"
      ]
    },
    "API endpoint tests": {
      "value": "API endpoint tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:86"
      ]
    },
    "API key configured": {
      "value": "API key configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:89"
      ]
    },
    "API port": {
      "value": "API port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:207"
      ]
    },
    "API_BASE_URL": {
      "value": "API_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:30",
        "scripts/unified_test_config.py:314"
      ]
    },
    "APIs available:": {
      "value": "APIs available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:127"
      ]
    },
    "APPLY CHANGES": {
      "value": "APPLY CHANGES",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:170"
      ]
    },
    "ARR at risk - validation failures detected": {
      "value": "ARR at risk - validation failures detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:510"
      ]
    },
    "ARR protected - all critical systems validated": {
      "value": "ARR protected - all critical systems validated",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:506"
      ]
    },
    "AST analysis failed for": {
      "value": "AST analysis failed for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:221"
      ]
    },
    "AUTH": {
      "value": "AUTH",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:52",
        "scripts/test_chat_errors.py:53",
        "scripts/test_chat_errors.py:58",
        "scripts/test_chat_errors.py:59",
        "scripts/test_log_introspection.py:377"
      ]
    },
    "AUTH CLIENT DEBUG TEST": {
      "value": "AUTH CLIENT DEBUG TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:24"
      ]
    },
    "AUTH DATABASE SESSION TEST SUMMARY": {
      "value": "AUTH DATABASE SESSION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:380"
      ]
    },
    "AUTH SERVICE DATABASE SESSION MANAGEMENT TESTING": {
      "value": "AUTH SERVICE DATABASE SESSION MANAGEMENT TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:350"
      ]
    },
    "AUTHENTICATION SYSTEM AUDIT": {
      "value": "AUTHENTICATION SYSTEM AUDIT",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:218"
      ]
    },
    "AUTH_BASE_URL": {
      "value": "AUTH_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:31"
      ]
    },
    "AUTH_FAST_TEST_MODE": {
      "value": "AUTH_FAST_TEST_MODE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:58",
        "auth_service/tests/integration/test_database_connection.py:56",
        "auth_service/tests/integration/test_database_connection.py:105",
        "auth_service/tests/integration/test_database_connection.py:239",
        "auth_service/tests/integration/test_database_connection.py:294"
      ]
    },
    "AUTH_PORT": {
      "value": "AUTH_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:42",
        "auth_service/tests/test_auth_port_configuration.py:83",
        "auth_service/tests/test_auth_port_configuration.py:126",
        "auth_service/tests/test_auth_port_configuration.py:133",
        "auth_service/tests/test_auth_port_configuration.py:155",
        "auth_service/tests/test_auth_port_configuration.py:191",
        "auth_service/tests/test_auth_port_configuration.py:223"
      ]
    },
    "AUTH_SERVICE_ENABLED": {
      "value": "AUTH_SERVICE_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:416",
        "scripts/test_auth_fix_simple.py:26",
        "scripts/test_auth_fix_simple.py:33",
        "scripts/test_auth_service_integration_fix.py:29",
        "scripts/test_auth_service_integration_fix.py:36"
      ]
    },
    "AUTH_SERVICE_ENABLED:": {
      "value": "AUTH_SERVICE_ENABLED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:33",
        "scripts/test_auth_service_integration_fix.py:36"
      ]
    },
    "AUTH_SERVICE_HOST": {
      "value": "AUTH_SERVICE_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:67",
        "auth_service/tests/test_critical_bugs_real.py:179"
      ]
    },
    "AUTH_SERVICE_PORT": {
      "value": "AUTH_SERVICE_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:68",
        "auth_service/tests/test_critical_bugs_real.py:180"
      ]
    },
    "AUTH_SERVICE_URL": {
      "value": "AUTH_SERVICE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:85",
        "auth_service/tests/test_auth_port_configuration.py:273",
        "scripts/fix_authentication_test_tokens.py:134",
        "scripts/start_test_services.py:155",
        "scripts/test_auth_client_debug.py:14",
        "scripts/test_auth_fix_simple.py:25",
        "scripts/test_auth_fix_simple.py:32",
        "scripts/test_auth_service_integration_fix.py:28",
        "scripts/test_auth_service_integration_fix.py:35",
        "scripts/test_oauth_local.py:64"
      ]
    },
    "AUTH_SERVICE_URL:": {
      "value": "AUTH_SERVICE_URL:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:135",
        "scripts/test_auth_fix_simple.py:32",
        "scripts/test_auth_service_integration_fix.py:35"
      ]
    },
    "AUTH_USE_FILE_DB": {
      "value": "AUTH_USE_FILE_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:82"
      ]
    },
    "AUTOMATED SPLITTING SUGGESTIONS (": {
      "value": "AUTOMATED SPLITTING SUGGESTIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:142"
      ]
    },
    "AVAILABLE TEST LEVELS": {
      "value": "AVAILABLE TEST LEVELS",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:89"
      ]
    },
    "Accept": {
      "value": "Accept",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:66",
        "scripts/test_backend_auth_config.py:72",
        "scripts/test_staging_auth_live.py:143",
        "scripts/test_staging_jwt_validation.py:88"
      ]
    },
    "Access token": {
      "value": "Access token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:195"
      ]
    },
    "Access token received:": {
      "value": "Access token received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:80"
      ]
    },
    "Access token should not work for refresh": {
      "value": "Access token should not work for refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:215"
      ]
    },
    "Access token:": {
      "value": "Access token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:148"
      ]
    },
    "Access tokens MUST be different on each refresh": {
      "value": "Access tokens MUST be different on each refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:51"
      ]
    },
    "Access tokens should be different after refresh": {
      "value": "Access tokens should be different after refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:57"
      ]
    },
    "Access-Control-Allow-Credentials": {
      "value": "Access-Control-Allow-Credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:36",
        "scripts/test_and_fix_cors.py:36",
        "scripts/test_cors_implementation.py:64",
        "scripts/test_cors_implementation.py:78",
        "scripts/test_cors_implementation.py:116"
      ]
    },
    "Access-Control-Allow-Headers": {
      "value": "Access-Control-Allow-Headers",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:269",
        "scripts/test_and_fix_cors.py:35",
        "scripts/test_and_fix_cors.py:35",
        "scripts/test_cors_implementation.py:63",
        "scripts/test_service_monitor.py:281"
      ]
    },
    "Access-Control-Allow-Methods": {
      "value": "Access-Control-Allow-Methods",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:268",
        "scripts/test_and_fix_cors.py:34",
        "scripts/test_and_fix_cors.py:34",
        "scripts/test_cors_implementation.py:62",
        "scripts/test_service_monitor.py:280",
        "scripts/test_staging_auth_flow.py:98"
      ]
    },
    "Access-Control-Allow-Methods:": {
      "value": "Access-Control-Allow-Methods:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:98"
      ]
    },
    "Access-Control-Allow-Origin": {
      "value": "Access-Control-Allow-Origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:595",
        "scripts/staging_comprehensive_test.py:267",
        "scripts/test_and_fix_cors.py:33",
        "scripts/test_and_fix_cors.py:33",
        "scripts/test_and_fix_cors.py:75",
        "scripts/test_and_fix_cors.py:75",
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141",
        "scripts/test_chat_errors.py:86",
        "scripts/test_cors_implementation.py:61"
      ]
    },
    "Access-Control-Allow-Origin:": {
      "value": "Access-Control-Allow-Origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:97"
      ]
    },
    "Access-Control-Max-Age": {
      "value": "Access-Control-Max-Age",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:270"
      ]
    },
    "Access-Control-Request-Headers": {
      "value": "Access-Control-Request-Headers",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:17",
        "scripts/staging_comprehensive_test.py:257",
        "scripts/test_and_fix_cors.py:24",
        "scripts/test_cors.py:75",
        "scripts/test_cors_implementation.py:52",
        "scripts/test_cors_issue.py:61",
        "scripts/test_staging_auth_flow.py:89",
        "scripts/test_staging_cors.py:22"
      ]
    },
    "Access-Control-Request-Method": {
      "value": "Access-Control-Request-Method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:302",
        "scripts/debug_cors_test.py:16",
        "scripts/staging_comprehensive_test.py:256",
        "scripts/test_and_fix_cors.py:23",
        "scripts/test_auth_integration.py:109",
        "scripts/test_cors.py:74",
        "scripts/test_cors_implementation.py:51",
        "scripts/test_cors_issue.py:60",
        "scripts/test_staging_auth_flow.py:88",
        "scripts/test_staging_cors.py:21"
      ]
    },
    "Account ID:": {
      "value": "Account ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:33"
      ]
    },
    "Account created successfully": {
      "value": "Account created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:187"
      ]
    },
    "Account:": {
      "value": "Account:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:32"
      ]
    },
    "Accounts:": {
      "value": "Accounts:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:28"
      ]
    },
    "Acme Corp": {
      "value": "Acme Corp",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:157",
        "scripts/test_seed_data.py:275"
      ]
    },
    "Action Required:": {
      "value": "Action Required:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:89"
      ]
    },
    "Action:": {
      "value": "Action:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:334",
        "scripts/test_dashboard.py:145"
      ]
    },
    "Actions needed:": {
      "value": "Actions needed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:326"
      ]
    },
    "Active connections:": {
      "value": "Active connections:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:119"
      ]
    },
    "Actual file generation not yet implemented": {
      "value": "Actual file generation not yet implemented",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:596"
      ]
    },
    "Actual fixes require force_unsafe=True. Switching to dry-run mode.": {
      "value": "Actual fixes require force_unsafe=True. Switching to dry-run mode.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:792"
      ]
    },
    "Actual time suggests:": {
      "value": "Actual time suggests:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:217"
      ]
    },
    "Actual:": {
      "value": "Actual:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:525"
      ]
    },
    "Actually valid:": {
      "value": "Actually valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:241"
      ]
    },
    "Add": {
      "value": "Add",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:240",
        "scripts/setup_test_environment.py:106"
      ]
    },
    "Add 'Vary: Origin' header for proper caching": {
      "value": "Add 'Vary: Origin' header for proper caching",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:249"
      ]
    },
    "Add assertions to": {
      "value": "Add assertions to",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "Add caching layer": {
      "value": "Add caching layer",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:406"
      ]
    },
    "Add circuit breakers": {
      "value": "Add circuit breakers",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:417"
      ]
    },
    "Add fast_test import and comment sleep": {
      "value": "Add fast_test import and comment sleep",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:184"
      ]
    },
    "Add more end-to-end tests (current:": {
      "value": "Add more end-to-end tests (current:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:701"
      ]
    },
    "Add pytest markers to test files": {
      "value": "Add pytest markers to test files",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234"
      ]
    },
    "Add pytest markers to test files based on their directory location.\nThis ensures proper test categorization for compliance and test runner.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Test infrastructure compliance and reporting accuracy\n- Value Impact: Enables accurate test metrics and compliance scoring\n- Strategic Impact: Improves development velocity through proper test organization": {
      "value": "Add pytest markers to test files based on their directory location.\nThis ensures proper test categorization for compliance and test runner.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Test infrastructure compliance and reporting accuracy\n- Value Impact: Enables accurate test metrics and compliance scoring\n- Strategic Impact: Improves development velocity through proper test organization",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:2"
      ]
    },
    "Added": {
      "value": "Added",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:212"
      ]
    },
    "Added @pytest.mark.": {
      "value": "Added @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:126"
      ]
    },
    "Added IsolatedEnvironment import to": {
      "value": "Added IsolatedEnvironment import to",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:172"
      ]
    },
    "Added missing typing imports": {
      "value": "Added missing typing imports",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:231"
      ]
    },
    "Added mock imports": {
      "value": "Added mock imports",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:237"
      ]
    },
    "Adding pytest markers to test files...": {
      "value": "Adding pytest markers to test files...",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:201"
      ]
    },
    "Additional arguments to pass to Jest": {
      "value": "Additional arguments to pass to Jest",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:78"
      ]
    },
    "Additional optimization may be required.": {
      "value": "Additional optimization may be required.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:331"
      ]
    },
    "Address": {
      "value": "Address",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:397"
      ]
    },
    "Address critical bottlenecks immediately": {
      "value": "Address critical bottlenecks immediately",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:433"
      ]
    },
    "Admin User": {
      "value": "Admin User",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:117",
        "scripts/test_seed_data.py:269"
      ]
    },
    "After examining the performance metrics, here are my recommendations:": {
      "value": "After examining the performance metrics, here are my recommendations:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:162"
      ]
    },
    "Agent": {
      "value": "Agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:185",
        "scripts/test_agent_pipeline_simple.py:312"
      ]
    },
    "Agent Completed": {
      "value": "Agent Completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:132",
        "scripts/test_websocket_chat_standalone.py:132"
      ]
    },
    "Agent Execution with WebSocket Integration Test\n\nTests that actual agent execution properly sends WebSocket events.\nThis validates the CRITICAL agent execution flow with real WebSocket integration.\n\nTests:\n1. Agent execution sends all 5 critical WebSocket events\n2. Agent can execute tools and send tool events  \n3. Complete agent lifecycle is properly tracked via WebSocket\n4. State management works with WebSocket notifications": {
      "value": "Agent Execution with WebSocket Integration Test\n\nTests that actual agent execution properly sends WebSocket events.\nThis validates the CRITICAL agent execution flow with real WebSocket integration.\n\nTests:\n1. Agent execution sends all 5 critical WebSocket events\n2. Agent can execute tools and send tool events  \n3. Complete agent lifecycle is properly tracked via WebSocket\n4. State management works with WebSocket notifications",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:2"
      ]
    },
    "Agent Orchestration Recovery Test": {
      "value": "Agent Orchestration Recovery Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:135"
      ]
    },
    "Agent Results:": {
      "value": "Agent Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:382"
      ]
    },
    "Agent Started": {
      "value": "Agent Started",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:127",
        "scripts/test_websocket_chat_standalone.py:127"
      ]
    },
    "Agent State": {
      "value": "Agent State",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:151"
      ]
    },
    "Agent Thinking": {
      "value": "Agent Thinking",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:128",
        "scripts/test_websocket_chat_standalone.py:128"
      ]
    },
    "Agent created:": {
      "value": "Agent created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:188"
      ]
    },
    "Agent description:": {
      "value": "Agent description:",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:43",
        "scripts/test_corpus_admin_simple.py:42"
      ]
    },
    "Agent endpoints are mostly functional": {
      "value": "Agent endpoints are mostly functional",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:181"
      ]
    },
    "Agent execution WebSocket validation failed": {
      "value": "Agent execution WebSocket validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:322"
      ]
    },
    "Agent execution completed in": {
      "value": "Agent execution completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:291"
      ]
    },
    "Agent execution failed:": {
      "value": "Agent execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:325"
      ]
    },
    "Agent execution properly integrated with WebSocket events.": {
      "value": "Agent execution properly integrated with WebSocket events.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:419"
      ]
    },
    "Agent execution took too long:": {
      "value": "Agent execution took too long:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:324"
      ]
    },
    "Agent flow test failed:": {
      "value": "Agent flow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:176"
      ]
    },
    "Agent flow test passed": {
      "value": "Agent flow test passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:168"
      ]
    },
    "Agent flow validation failed: missing": {
      "value": "Agent flow validation failed: missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:162"
      ]
    },
    "Agent name:": {
      "value": "Agent name:",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:42",
        "scripts/test_corpus_admin_simple.py:41"
      ]
    },
    "Agent pipeline with WebSocket integration validated.": {
      "value": "Agent pipeline with WebSocket integration validated.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:428"
      ]
    },
    "Agent registry not available - will use mock agent": {
      "value": "Agent registry not available - will use mock agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:41"
      ]
    },
    "Agent result:": {
      "value": "Agent result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:292"
      ]
    },
    "Agent sequence:": {
      "value": "Agent sequence:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:124"
      ]
    },
    "Agent-specific tests": {
      "value": "Agent-specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:116"
      ]
    },
    "Agent-specific tests with real LLMs": {
      "value": "Agent-specific tests with real LLMs",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:64"
      ]
    },
    "Agent:": {
      "value": "Agent:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:43"
      ]
    },
    "Agents executed:": {
      "value": "Agents executed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:378"
      ]
    },
    "Agents involved:": {
      "value": "Agents involved:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:395"
      ]
    },
    "Aggregating coverage...": {
      "value": "Aggregating coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:787"
      ]
    },
    "Alembic Configuration": {
      "value": "Alembic Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:283"
      ]
    },
    "Alembic Version State Recovery Fix": {
      "value": "Alembic Version State Recovery Fix",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:55"
      ]
    },
    "Align Test Imports and Configuration Script\nFixes all test-related import issues and configuration misalignments.": {
      "value": "Align Test Imports and Configuration Script\nFixes all test-related import issues and configuration misalignments.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:2"
      ]
    },
    "All": {
      "value": "All",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:210",
        "scripts/test_adaptive_workflow.py:263"
      ]
    },
    "All JTIs should be unique": {
      "value": "All JTIs should be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:230"
      ]
    },
    "All WebSocket events fire correctly:": {
      "value": "All WebSocket events fire correctly:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:323"
      ]
    },
    "All WebSocket events should be sent during agent execution": {
      "value": "All WebSocket events should be sent during agent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:149"
      ]
    },
    "All WebSocket migration tests PASSED!": {
      "value": "All WebSocket migration tests PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:230"
      ]
    },
    "All configured": {
      "value": "All configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:367"
      ]
    },
    "All critical imports successful!": {
      "value": "All critical imports successful!",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:95"
      ]
    },
    "All failures:": {
      "value": "All failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:199"
      ]
    },
    "All generated tokens must be unique": {
      "value": "All generated tokens must be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:140"
      ]
    },
    "All operations succeeded:": {
      "value": "All operations succeeded:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:213"
      ]
    },
    "All refresh tokens MUST be unique": {
      "value": "All refresh tokens MUST be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:54"
      ]
    },
    "All required injection code present": {
      "value": "All required injection code present",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:175"
      ]
    },
    "All required services are running": {
      "value": "All required services are running",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:93"
      ]
    },
    "All services are ready!": {
      "value": "All services are ready!",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:114"
      ]
    },
    "All services remained stable during the test period!": {
      "value": "All services remained stable during the test period!",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:110"
      ]
    },
    "All staging WebSocket tests PASSED": {
      "value": "All staging WebSocket tests PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:460"
      ]
    },
    "All syntax errors fixed!": {
      "value": "All syntax errors fixed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:268"
      ]
    },
    "All tests completed": {
      "value": "All tests completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:185"
      ]
    },
    "All tests completed!": {
      "value": "All tests completed!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:132"
      ]
    },
    "All tests comply with real test requirements!": {
      "value": "All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:266"
      ]
    },
    "All tests comply with requirements!": {
      "value": "All tests comply with requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:187"
      ]
    },
    "All tests passed": {
      "value": "All tests passed",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:798"
      ]
    },
    "All tests passed! (Iteration": {
      "value": "All tests passed! (Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:228"
      ]
    },
    "All tests passed! The script is working correctly.": {
      "value": "All tests passed! The script is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:97"
      ]
    },
    "All tokens should be unique": {
      "value": "All tokens should be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:234",
        "auth_service/tests/test_refresh_token_fix.py:208"
      ]
    },
    "All tokens unique:": {
      "value": "All tokens unique:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:285"
      ]
    },
    "All workflow tests passed": {
      "value": "All workflow tests passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:280"
      ]
    },
    "Allowed locations:": {
      "value": "Allowed locations:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:94"
      ]
    },
    "Already has @pytest.mark.": {
      "value": "Already has @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:114"
      ]
    },
    "Already in correct order": {
      "value": "Already in correct order",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:47"
      ]
    },
    "Also test WebSocket CORS": {
      "value": "Also test WebSocket CORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:431"
      ]
    },
    "Also test unified test runner integration": {
      "value": "Also test unified test runner integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:244"
      ]
    },
    "Alternation:": {
      "value": "Alternation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:742"
      ]
    },
    "Always fails": {
      "value": "Always fails",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:122",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:127"
      ]
    },
    "Analysis Complete:": {
      "value": "Analysis Complete:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:172"
      ]
    },
    "Analysis complete. 3 optimization opportunities identified.": {
      "value": "Analysis complete. 3 optimization opportunities identified.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:215"
      ]
    },
    "Analysis complete. Suggested creating": {
      "value": "Analysis complete. Suggested creating",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1005"
      ]
    },
    "Analysis complete:": {
      "value": "Analysis complete:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:50"
      ]
    },
    "Analysis completed": {
      "value": "Analysis completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:344",
        "scripts/test_data_validator_backup.py:357",
        "scripts/test_data_validator_backup.py:370",
        "scripts/test_data_validator_backup.py:383",
        "scripts/test_data_validator_backup.py:396",
        "scripts/test_data_validator_backup.py:413"
      ]
    },
    "Analysis completed successfully": {
      "value": "Analysis completed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:150"
      ]
    },
    "Analysis failed:": {
      "value": "Analysis failed:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:102"
      ]
    },
    "Analysis for": {
      "value": "Analysis for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:705"
      ]
    },
    "Analysis should produce at least one finding": {
      "value": "Analysis should produce at least one finding",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:378"
      ]
    },
    "Analysis type '": {
      "value": "Analysis type '",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:155"
      ]
    },
    "Analysis type is required": {
      "value": "Analysis type is required",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:89"
      ]
    },
    "Analytics Data Consistency": {
      "value": "Analytics Data Consistency",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:168"
      ]
    },
    "Analytics consistency error:": {
      "value": "Analytics consistency error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:197"
      ]
    },
    "Analyze current test coverage": {
      "value": "Analyze current test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:108"
      ]
    },
    "Analyze expected vs actual values": {
      "value": "Analyze expected vs actual values",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:229"
      ]
    },
    "Analyze file for splitting": {
      "value": "Analyze file for splitting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:672"
      ]
    },
    "Analyze input text.": {
      "value": "Analyze input text.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:362"
      ]
    },
    "Analyze middleware configuration issues.": {
      "value": "Analyze middleware configuration issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:121"
      ]
    },
    "Analyze my AI costs and recommend optimizations for better performance": {
      "value": "Analyze my AI costs and recommend optimizations for better performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:354"
      ]
    },
    "Analyze test mocks in the codebase to identify unjustified mocks.\nBased on testing.xml spectrum levels (L0-L5).": {
      "value": "Analyze test mocks in the codebase to identify unjustified mocks.\nBased on testing.xml spectrum levels (L0-L5).",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:2"
      ]
    },
    "Analyze test reports in time range.": {
      "value": "Analyze test reports in time range.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:21"
      ]
    },
    "Analyze test size violations and generate improvement suggestions": {
      "value": "Analyze test size violations and generate improvement suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:916"
      ]
    },
    "Analyze user data patterns": {
      "value": "Analyze user data patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:189"
      ]
    },
    "Analyze user input and generate response": {
      "value": "Analyze user input and generate response",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:146"
      ]
    },
    "Analyzed '": {
      "value": "Analyzed '",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:366"
      ]
    },
    "Analyzing": {
      "value": "Analyzing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:73"
      ]
    },
    "Analyzing and suggesting fixes for": {
      "value": "Analyzing and suggesting fixes for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:795"
      ]
    },
    "Analyzing failure:": {
      "value": "Analyzing failure:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:44"
      ]
    },
    "Analyzing large test file:": {
      "value": "Analyzing large test file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:84"
      ]
    },
    "Analyzing test pairs...": {
      "value": "Analyzing test pairs...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:259"
      ]
    },
    "Analyzing test performance in": {
      "value": "Analyzing test performance in",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:357"
      ]
    },
    "Analyzing user greeting and preparing response...": {
      "value": "Analyzing user greeting and preparing response...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:252"
      ]
    },
    "Analyzing:": {
      "value": "Analyzing:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:31"
      ]
    },
    "Annual cost: $150K in developer time + production risk": {
      "value": "Annual cost: $150K in developer time + production risk",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:536"
      ]
    },
    "Annual overhead:": {
      "value": "Annual overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:652"
      ]
    },
    "Anomalous activity not detected": {
      "value": "Anomalous activity not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:266"
      ]
    },
    "AnotherPass123!": {
      "value": "AnotherPass123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:43",
        "scripts/test_signup_flow_manual.py:44"
      ]
    },
    "Anthropic Claude API key": {
      "value": "Anthropic Claude API key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:120"
      ]
    },
    "Anti-regression hook to prevent conftest.py violations.\nEnsures conftest.py files only exist at service-level directories.": {
      "value": "Anti-regression hook to prevent conftest.py violations.\nEnsures conftest.py files only exist at service-level directories.",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:2"
      ]
    },
    "App is not FastAPI instance:": {
      "value": "App is not FastAPI instance:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:250"
      ]
    },
    "Applied": {
      "value": "Applied",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:106",
        "scripts/e2e_test_fixer.py:297",
        "scripts/frontend_iterative_test_runner.py:271"
      ]
    },
    "Applied @fast_test to": {
      "value": "Applied @fast_test to",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:124"
      ]
    },
    "Applied fixes for": {
      "value": "Applied fixes for",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:810"
      ]
    },
    "Applied optimizations:": {
      "value": "Applied optimizations:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:385"
      ]
    },
    "Apply @fast_test decorators to slow tests": {
      "value": "Apply @fast_test decorators to slow tests",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:133"
      ]
    },
    "Apply Fast Test Decorators\n\nAutomatically applies @fast_test decorators to test functions that use sleep calls\nto improve test suite performance.": {
      "value": "Apply Fast Test Decorators\n\nAutomatically applies @fast_test decorators to test functions that use sleep calls\nto improve test suite performance.",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:2"
      ]
    },
    "Apply automatic optimizations": {
      "value": "Apply automatic optimizations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:347"
      ]
    },
    "Apply changes (default is dry run)": {
      "value": "Apply changes (default is dry run)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:215"
      ]
    },
    "Apply changes (default is dry-run)": {
      "value": "Apply changes (default is dry-run)",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:136"
      ]
    },
    "Applying automated fixes...": {
      "value": "Applying automated fixes...",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:295"
      ]
    },
    "Applying known fixes...": {
      "value": "Applying known fixes...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:104"
      ]
    },
    "Applying performance optimizations...": {
      "value": "Applying performance optimizations...",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:379"
      ]
    },
    "Are you ABSOLUTELY SURE you want to proceed? Type 'YES I UNDERSTAND THE RISKS':": {
      "value": "Are you ABSOLUTELY SURE you want to proceed? Type 'YES I UNDERSTAND THE RISKS':",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:956"
      ]
    },
    "Assert session exists in database with expected values": {
      "value": "Assert session exists in database with expected values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:194"
      ]
    },
    "Assert user exists in database with expected values": {
      "value": "Assert user exists in database with expected values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:178"
      ]
    },
    "Assertion Helpers for Auth Service Tests\nCustom assertion functions for common auth testing scenarios.\nProvides clear and reusable assertions with detailed error messages.": {
      "value": "Assertion Helpers for Auth Service Tests\nCustom assertion functions for common auth testing scenarios.\nProvides clear and reusable assertions with detailed error messages.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:1"
      ]
    },
    "AssertionError": {
      "value": "AssertionError",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:64",
        "scripts/fix_test_batch.py:65"
      ]
    },
    "AssertionError: (.+)": {
      "value": "AssertionError: (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:178"
      ]
    },
    "AssertionHelpers": {
      "value": "AssertionHelpers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:19"
      ]
    },
    "Assess quality of existing tests": {
      "value": "Assess quality of existing tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:138"
      ]
    },
    "Async URL has SSL:": {
      "value": "Async URL has SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:146"
      ]
    },
    "Async URL:": {
      "value": "Async URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:91",
        "scripts/test_auth_database_sessions.py:90",
        "scripts/test_database_url_builder_comprehensive.py:48",
        "scripts/test_database_url_builder_comprehensive.py:273",
        "scripts/test_ssl_certificates_staging.py:139",
        "scripts/test_ssl_certificates_staging.py:235"
      ]
    },
    "Async context manager entry.": {
      "value": "Async context manager entry.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:58"
      ]
    },
    "Async context manager exit.": {
      "value": "Async context manager exit.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:65"
      ]
    },
    "Async response should be valid JSON": {
      "value": "Async response should be valid JSON",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:88"
      ]
    },
    "Async results:": {
      "value": "Async results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:267"
      ]
    },
    "Async serialization attempt": {
      "value": "Async serialization attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:110"
      ]
    },
    "Async serialization completed:": {
      "value": "Async serialization completed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:104"
      ]
    },
    "Async serialization failed after": {
      "value": "Async serialization failed after",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:186"
      ]
    },
    "Async serialization failed:": {
      "value": "Async serialization failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:107"
      ]
    },
    "Async serialization implementation has issues": {
      "value": "Async serialization implementation has issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:344"
      ]
    },
    "Async serialization method not found!": {
      "value": "Async serialization method not found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:118"
      ]
    },
    "Async serialization not available": {
      "value": "Async serialization not available",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:182"
      ]
    },
    "Async serialization not available for concurrency testing": {
      "value": "Async serialization not available for concurrency testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:227"
      ]
    },
    "Async serialization total time:": {
      "value": "Async serialization total time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:131"
      ]
    },
    "Async serialization:": {
      "value": "Async serialization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:180"
      ]
    },
    "Async:": {
      "value": "Async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:265",
        "scripts/test_intensive_serialization.py:268"
      ]
    },
    "AsyncMock(": {
      "value": "AsyncMock(",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:63"
      ]
    },
    "AsyncMock()": {
      "value": "AsyncMock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356"
      ]
    },
    "AsyncMock\\(": {
      "value": "AsyncMock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "AsyncMock\\(\\)": {
      "value": "AsyncMock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235",
        "scripts/compliance/test_fixer.py:322",
        "scripts/e2e_test_fixer.py:181"
      ]
    },
    "AsyncMock\\(spec=LLMManager\\)": {
      "value": "AsyncMock\\(spec=LLMManager\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:320"
      ]
    },
    "AsyncTestBase": {
      "value": "AsyncTestBase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:15"
      ]
    },
    "Asynchronous:": {
      "value": "Asynchronous:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:170"
      ]
    },
    "Asynchronous: Not implemented": {
      "value": "Asynchronous: Not implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:180"
      ]
    },
    "At concurrency limit (": {
      "value": "At concurrency limit (",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:99"
      ]
    },
    "Attempt": {
      "value": "Attempt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:166",
        "scripts/test_agent_orchestration_recovery.py:199",
        "scripts/test_agent_orchestration_recovery.py:207",
        "scripts/test_agent_orchestration_recovery.py:213"
      ]
    },
    "Attempt to automatically fix violations": {
      "value": "Attempt to automatically fix violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:257"
      ]
    },
    "Attempt to fix common issues": {
      "value": "Attempt to fix common issues",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:346"
      ]
    },
    "Attempt to fix identified issues": {
      "value": "Attempt to fix identified issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:432"
      ]
    },
    "Attempted fix for mock undefined issue": {
      "value": "Attempted fix for mock undefined issue",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:582"
      ]
    },
    "Attempting TCP connection with params:": {
      "value": "Attempting TCP connection with params:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:99"
      ]
    },
    "Attempting connection with params:": {
      "value": "Attempting connection with params:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:62"
      ]
    },
    "Attempting login as": {
      "value": "Attempting login as",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:144"
      ]
    },
    "Attempting supervisor execution...": {
      "value": "Attempting supervisor execution...",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:113"
      ]
    },
    "Attempting to connect to test endpoint:": {
      "value": "Attempting to connect to test endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:73"
      ]
    },
    "Attempting to connect to:": {
      "value": "Attempting to connect to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:21",
        "scripts/test_websocket_middleware.py:61"
      ]
    },
    "Attempting to fix common issues...": {
      "value": "Attempting to fix common issues...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:322"
      ]
    },
    "Attempting to fix:": {
      "value": "Attempting to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:120"
      ]
    },
    "Attempts made:": {
      "value": "Attempts made:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:159"
      ]
    },
    "AttributeError": {
      "value": "AttributeError",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:54",
        "scripts/fix_test_batch.py:55"
      ]
    },
    "AttributeError: '(\\w+)' object has no attribute '(\\w+)'": {
      "value": "AttributeError: '(\\w+)' object has no attribute '(\\w+)'",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:53"
      ]
    },
    "AttributeError: <module '([\\w\\.]+)'.*> does not have the attribute '(\\w+)'": {
      "value": "AttributeError: <module '([\\w\\.]+)'.*> does not have the attribute '(\\w+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:50"
      ]
    },
    "Audit Log Test Data Factory\nCreates audit log entries for testing authentication events and security monitoring.\nSupports various event types with proper metadata and tracking.": {
      "value": "Audit Log Test Data Factory\nCreates audit log entries for testing authentication events and security monitoring.\nSupports various event types with proper metadata and tracking.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:1"
      ]
    },
    "Audit and improve test collection across Netra Apex platform": {
      "value": "Audit and improve test collection across Netra Apex platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:421"
      ]
    },
    "AuditLogFactory": {
      "value": "AuditLogFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:20"
      ]
    },
    "Auth": {
      "value": "Auth",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:63"
      ]
    },
    "Auth Database Engine Creation": {
      "value": "Auth Database Engine Creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:356"
      ]
    },
    "Auth Database Manager Import": {
      "value": "Auth Database Manager Import",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:354"
      ]
    },
    "Auth Database Session Lifecycle": {
      "value": "Auth Database Session Lifecycle",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:359"
      ]
    },
    "Auth Database Staging Integration": {
      "value": "Auth Database Staging Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:358"
      ]
    },
    "Auth Database URL Conversion": {
      "value": "Auth Database URL Conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:355"
      ]
    },
    "Auth Database URL Validation": {
      "value": "Auth Database URL Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:357"
      ]
    },
    "Auth Endpoint:": {
      "value": "Auth Endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:52",
        "scripts/test_auth_integration.py:56"
      ]
    },
    "Auth Health": {
      "value": "Auth Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:44"
      ]
    },
    "Auth Hot Reload": {
      "value": "Auth Hot Reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:214"
      ]
    },
    "Auth Service": {
      "value": "Auth Service",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:69",
        "scripts/test/test_docker_stability.py:81",
        "scripts/test/verify_test_ports.py:29",
        "scripts/test_async_postgres.py:172",
        "scripts/test_staging_auth_e2e.py:35",
        "scripts/test_staging_auth_live.py:209",
        "scripts/test_staging_login_automated.py:182"
      ]
    },
    "Auth Service 500 error handling timeout - no resilience mechanism": {
      "value": "Auth Service 500 error handling timeout - no resilience mechanism",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:162"
      ]
    },
    "Auth Service Actual Staging Credentials Test": {
      "value": "Auth Service Actual Staging Credentials Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:150"
      ]
    },
    "Auth Service Base Test Classes\nCommon test functionality and base classes for auth service testing": {
      "value": "Auth Service Base Test Classes\nCommon test functionality and base classes for auth service testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:1"
      ]
    },
    "Auth Service Configuration Tests": {
      "value": "Auth Service Configuration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:71"
      ]
    },
    "Auth Service Configuration:": {
      "value": "Auth Service Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:184"
      ]
    },
    "Auth Service Database Connection Test": {
      "value": "Auth Service Database Connection Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:279"
      ]
    },
    "Auth Service Down Critical Scenarios - Iteration 2 Audit Findings\n\nThis test file specifically focuses on scenarios where the Auth Service is completely\ndown, unreachable, or failing, which is a major contributor to the authentication\nsystem failure identified in Iteration 2:\n\n**CRITICAL AUTH SERVICE DOWN SCENARIOS:**\n1. Auth Service completely unresponsive (no HTTP response)\n2. Auth Service returning 500 Internal Server Error\n3. Auth Service database connectivity lost\n4. Auth Service container/process crashed\n5. Auth Service overwhelmed with requests (503 Service Unavailable)\n6. Auth Service network partitioned from other services\n7. Auth Service SSL certificate expired\n8. Auth Service OAuth provider connectivity lost\n9. Auth Service Redis/cache layer down\n10. Auth Service graceful shutdown not working\n\n**EXPECTED TO FAIL**: These tests demonstrate what happens when Auth Service fails\nand expose the lack of fallback mechanisms causing system-wide authentication breakdown\n\nSystem Impact When Auth Service Down:\n- Frontend cannot authenticate users (100% authentication failure)\n- Backend cannot validate tokens (all requests rejected with 403)\n- No fallback authentication mechanisms\n- No cached authentication decisions\n- No graceful degradation\n- 6.2+ second timeouts waiting for unresponsive auth service\n\nRoot Causes (Auth Service Failures):\n- Single point of failure with no redundancy\n- No health checks or automatic recovery\n- No caching layer for authentication decisions  \n- No fallback to alternative authentication methods\n- Dependencies on external services without circuit breakers": {
      "value": "Auth Service Down Critical Scenarios - Iteration 2 Audit Findings\n\nThis test file specifically focuses on scenarios where the Auth Service is completely\ndown, unreachable, or failing, which is a major contributor to the authentication\nsystem failure identified in Iteration 2:\n\n**CRITICAL AUTH SERVICE DOWN SCENARIOS:**\n1. Auth Service completely unresponsive (no HTTP response)\n2. Auth Service returning 500 Internal Server Error\n3. Auth Service database connectivity lost\n4. Auth Service container/process crashed\n5. Auth Service overwhelmed with requests (503 Service Unavailable)\n6. Auth Service network partitioned from other services\n7. Auth Service SSL certificate expired\n8. Auth Service OAuth provider connectivity lost\n9. Auth Service Redis/cache layer down\n10. Auth Service graceful shutdown not working\n\n**EXPECTED TO FAIL**: These tests demonstrate what happens when Auth Service fails\nand expose the lack of fallback mechanisms causing system-wide authentication breakdown\n\nSystem Impact When Auth Service Down:\n- Frontend cannot authenticate users (100% authentication failure)\n- Backend cannot validate tokens (all requests rejected with 403)\n- No fallback authentication mechanisms\n- No cached authentication decisions\n- No graceful degradation\n- 6.2+ second timeouts waiting for unresponsive auth service\n\nRoot Causes (Auth Service Failures):\n- Single point of failure with no redundancy\n- No health checks or automatic recovery\n- No caching layer for authentication decisions  \n- No fallback to alternative authentication methods\n- Dependencies on external services without circuit breakers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:1"
      ]
    },
    "Auth Service Health": {
      "value": "Auth Service Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:32",
        "scripts/test_auth_integration.py:36",
        "scripts/test_staging_deployment.py:85"
      ]
    },
    "Auth Service Integration Fix Validation": {
      "value": "Auth Service Integration Fix Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:103"
      ]
    },
    "Auth Service Integration Fixes Applied": {
      "value": "Auth Service Integration Fixes Applied",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:87"
      ]
    },
    "Auth Service Integration Tests": {
      "value": "Auth Service Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:130"
      ]
    },
    "Auth Service Port Configuration Tests": {
      "value": "Auth Service Port Configuration Tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:459"
      ]
    },
    "Auth Service Refresh": {
      "value": "Auth Service Refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:225"
      ]
    },
    "Auth Service Settings:": {
      "value": "Auth Service Settings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:43"
      ]
    },
    "Auth Service Test Configuration Module\nTest configuration and environment management for auth service tests": {
      "value": "Auth Service Test Configuration Module\nTest configuration and environment management for auth service tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:1"
      ]
    },
    "Auth Service Test Database Module\nDatabase utilities for test isolation and management": {
      "value": "Auth Service Test Database Module\nDatabase utilities for test isolation and management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/__init__.py:1"
      ]
    },
    "Auth Service Test Factories\nTest data factories for creating consistent test data.": {
      "value": "Auth Service Test Factories\nTest data factories for creating consistent test data.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:1"
      ]
    },
    "Auth Service Test Managers Module": {
      "value": "Auth Service Test Managers Module",
      "category": "test_literals",
      "locations": [
        "auth_service/test_framework/test_managers.py:1"
      ]
    },
    "Auth Service Test Utilities\nHelper functions and utilities for auth service testing": {
      "value": "Auth Service Test Utilities\nHelper functions and utilities for auth service testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:1"
      ]
    },
    "Auth Service URL Construction Test": {
      "value": "Auth Service URL Construction Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:216"
      ]
    },
    "Auth Service URL:": {
      "value": "Auth Service URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:38",
        "scripts/test_backend_auth_config.py:56",
        "scripts/test_backend_auth_config.py:108",
        "scripts/test_staging_auth.py:171"
      ]
    },
    "Auth Service became completely unresponsive due to database connectivity loss": {
      "value": "Auth Service became completely unresponsive due to database connectivity loss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:200"
      ]
    },
    "Auth Service becomes unresponsive when Redis cache layer is down": {
      "value": "Auth Service becomes unresponsive when Redis cache layer is down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:456"
      ]
    },
    "Auth Service crash recovery mechanism not implemented:": {
      "value": "Auth Service crash recovery mechanism not implemented:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:252"
      ]
    },
    "Auth Service crashes when Redis cache layer is down": {
      "value": "Auth Service crashes when Redis cache layer is down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:458"
      ]
    },
    "Auth Service hanging due to database connectivity loss": {
      "value": "Auth Service hanging due to database connectivity loss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:202"
      ]
    },
    "Auth Service should automatically restart after crash": {
      "value": "Auth Service should automatically restart after crash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:246"
      ]
    },
    "Auth Service should be new process after restart": {
      "value": "Auth Service should be new process after restart",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:249"
      ]
    },
    "Auth Service should remain responsive with degraded database, got": {
      "value": "Auth Service should remain responsive with degraded database, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:197"
      ]
    },
    "Auth Service should work without Redis, got": {
      "value": "Auth Service should work without Redis, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:448"
      ]
    },
    "Auth Service:": {
      "value": "Auth Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:335",
        "scripts/test_staging_refresh_format.py:21"
      ]
    },
    "Auth Service: [green]✓ Healthy[/green]": {
      "value": "Auth Service: [green]✓ Healthy[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:128"
      ]
    },
    "Auth Service: [red]✗ Not reachable -": {
      "value": "Auth Service: [red]✗ Not reachable -",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:132"
      ]
    },
    "Auth Service: [red]✗ Unhealthy (": {
      "value": "Auth Service: [red]✗ Unhealthy (",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:129"
      ]
    },
    "Auth URL: [cyan]": {
      "value": "Auth URL: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:439"
      ]
    },
    "Auth async URL:": {
      "value": "Auth async URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:248"
      ]
    },
    "Auth connection failed:": {
      "value": "Auth connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:37"
      ]
    },
    "Auth must start before backend": {
      "value": "Auth must start before backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:100"
      ]
    },
    "Auth response:": {
      "value": "Auth response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:33"
      ]
    },
    "Auth service MOCK-FREE test configuration.\n\nCRITICAL: This conftest eliminates ALL 31 mock-using files as per CLAUDE.md requirements.\nUses ONLY real services: PostgreSQL, Redis, JWT operations, HTTP clients.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Stability and Compliance\n- Value Impact: Eliminates 5766+ mock violations for authentic integration testing\n- Strategic Impact: Ensures auth service works with real services in production\n\nZERO MOCKS: Every test uses real services with proper isolation.": {
      "value": "Auth service MOCK-FREE test configuration.\n\nCRITICAL: This conftest eliminates ALL 31 mock-using files as per CLAUDE.md requirements.\nUses ONLY real services: PostgreSQL, Redis, JWT operations, HTTP clients.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Stability and Compliance\n- Value Impact: Eliminates 5766+ mock violations for authentic integration testing\n- Strategic Impact: Ensures auth service works with real services in production\n\nZERO MOCKS: Every test uses real services with proper isolation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:1"
      ]
    },
    "Auth service URL": {
      "value": "Auth service URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:171"
      ]
    },
    "Auth service URL contains hardcoded port": {
      "value": "Auth service URL contains hardcoded port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:200"
      ]
    },
    "Auth service URL must have valid port in": {
      "value": "Auth service URL must have valid port in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:372"
      ]
    },
    "Auth service URL not found": {
      "value": "Auth service URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:224"
      ]
    },
    "Auth service URL port (": {
      "value": "Auth service URL port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:97",
        "auth_service/tests/test_auth_port_configuration.py:171",
        "auth_service/tests/test_auth_port_configuration.py:236"
      ]
    },
    "Auth service URL:": {
      "value": "Auth service URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:74"
      ]
    },
    "Auth service conftest loaded - ZERO MOCKS, 100% REAL SERVICES": {
      "value": "Auth service conftest loaded - ZERO MOCKS, 100% REAL SERVICES",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:305"
      ]
    },
    "Auth service database schema created": {
      "value": "Auth service database schema created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:114"
      ]
    },
    "Auth service error:": {
      "value": "Auth service error:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:48"
      ]
    },
    "Auth service failed to start": {
      "value": "Auth service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:125"
      ]
    },
    "Auth service failure took": {
      "value": "Auth service failure took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:111"
      ]
    },
    "Auth service health check failed with status": {
      "value": "Auth service health check failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:51"
      ]
    },
    "Auth service health check failed:": {
      "value": "Auth service health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:35"
      ]
    },
    "Auth service is healthy!": {
      "value": "Auth service is healthy!",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:138"
      ]
    },
    "Auth service is healthy:": {
      "value": "Auth service is healthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:44"
      ]
    },
    "Auth service must not import from netra_backend (service independence violation):": {
      "value": "Auth service must not import from netra_backend (service independence violation):",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:125"
      ]
    },
    "Auth service not available - authentication may fail": {
      "value": "Auth service not available - authentication may fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:147"
      ]
    },
    "Auth service request timeout after": {
      "value": "Auth service request timeout after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:121"
      ]
    },
    "Auth service responded when it should be down": {
      "value": "Auth service responded when it should be down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:104"
      ]
    },
    "Auth service returned status": {
      "value": "Auth service returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:46"
      ]
    },
    "Auth service should auto-correct URL to match binding port. Expected:": {
      "value": "Auth service should auto-correct URL to match binding port. Expected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:451"
      ]
    },
    "Auth service skips .env loading": {
      "value": "Auth service skips .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:100"
      ]
    },
    "Auth service startup should detect port mismatch! Binding port:": {
      "value": "Auth service startup should detect port mismatch! Binding port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:333"
      ]
    },
    "Auth should be able to start, missing:": {
      "value": "Auth should be able to start, missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:108"
      ]
    },
    "Auth should be in degraded services": {
      "value": "Auth should be in degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:265"
      ]
    },
    "Auth status:": {
      "value": "Auth status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:31"
      ]
    },
    "Auth:": {
      "value": "Auth:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:88"
      ]
    },
    "Auth:     ./auth_service -> /app/auth_service": {
      "value": "Auth:     ./auth_service -> /app/auth_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:236"
      ]
    },
    "AuthConfig Integration": {
      "value": "AuthConfig Integration",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:221"
      ]
    },
    "AuthConfig URL:": {
      "value": "AuthConfig URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:139"
      ]
    },
    "AuthConfig generated URL:": {
      "value": "AuthConfig generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:175"
      ]
    },
    "AuthConfig import failed": {
      "value": "AuthConfig import failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:213"
      ]
    },
    "AuthConfig import not found": {
      "value": "AuthConfig import not found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:352"
      ]
    },
    "AuthConfig integration test failed:": {
      "value": "AuthConfig integration test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:150"
      ]
    },
    "AuthDatabaseManager imported successfully": {
      "value": "AuthDatabaseManager imported successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:37"
      ]
    },
    "AuthSecretLoader": {
      "value": "AuthSecretLoader",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:347",
        "scripts/test_secret_manager_builder_critical.py:402",
        "scripts/test_secret_manager_builder_critical.py:613"
      ]
    },
    "AuthSecretLoader (FAILED)": {
      "value": "AuthSecretLoader (FAILED)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:376"
      ]
    },
    "AuthSecretLoader failed:": {
      "value": "AuthSecretLoader failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:374"
      ]
    },
    "AuthSecretLoader with static methods": {
      "value": "AuthSecretLoader with static methods",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:366"
      ]
    },
    "AuthSessionFactory": {
      "value": "AuthSessionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:16"
      ]
    },
    "AuthTestBase": {
      "value": "AuthTestBase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:14"
      ]
    },
    "AuthTestClient": {
      "value": "AuthTestClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:18"
      ]
    },
    "AuthTestEnvironment": {
      "value": "AuthTestEnvironment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "AuthTestMixin": {
      "value": "AuthTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:18"
      ]
    },
    "AuthTestUtils": {
      "value": "AuthTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:15"
      ]
    },
    "AuthUserFactory": {
      "value": "AuthUserFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:14"
      ]
    },
    "Authenticated API Call": {
      "value": "Authenticated API Call",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:348"
      ]
    },
    "Authentication": {
      "value": "Authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:127",
        "scripts/test_adaptive_workflow.py:307",
        "scripts/test_adaptive_workflow.py:311",
        "scripts/test_adaptive_workflow.py:377"
      ]
    },
    "Authentication Required": {
      "value": "Authentication Required",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:98"
      ]
    },
    "Authentication disabled": {
      "value": "Authentication disabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:417"
      ]
    },
    "Authentication error:": {
      "value": "Authentication error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:206"
      ]
    },
    "Authentication service tests": {
      "value": "Authentication service tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:84"
      ]
    },
    "Authentication session persistence edge case tests.\n\nTests critical session persistence scenarios that cause revenue loss through user abandonment.\nFocus: Service restart scenarios, database failover, and cross-service session consistency.": {
      "value": "Authentication session persistence edge case tests.\n\nTests critical session persistence scenarios that cause revenue loss through user abandonment.\nFocus: Service restart scenarios, database failover, and cross-service session consistency.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:1"
      ]
    },
    "Authentication test failed:": {
      "value": "Authentication test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:258"
      ]
    },
    "Authentication test token fixes completed!": {
      "value": "Authentication test token fixes completed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:168"
      ]
    },
    "Authentication:": {
      "value": "Authentication:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:94",
        "scripts/test_staging_config.py:121"
      ]
    },
    "Authorization": {
      "value": "Authorization",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:468",
        "auth_service/tests/test_auth_comprehensive_audit.py:542",
        "auth_service/tests/test_auth_comprehensive_audit.py:564",
        "auth_service/tests/test_auth_comprehensive_audit.py:577",
        "scripts/setup_staging_test_account.py:206",
        "scripts/test/test_staging_quick.py:45",
        "scripts/test_adaptive_workflow.py:221",
        "scripts/test_backend_auth_config.py:71",
        "scripts/test_cold_start_e2e.py:274",
        "scripts/test_cold_start_e2e.py:321"
      ]
    },
    "Authorization URL should be valid Google OAuth URL": {
      "value": "Authorization URL should be valid Google OAuth URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:240"
      ]
    },
    "Authorization URL should contain client_id parameter": {
      "value": "Authorization URL should contain client_id parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:242"
      ]
    },
    "Authorization code reuse should be blocked": {
      "value": "Authorization code reuse should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:70"
      ]
    },
    "Authorization, Content-Type, X-Request-ID": {
      "value": "Authorization, Content-Type, X-Request-ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:75"
      ]
    },
    "Authorization: Bearer": {
      "value": "Authorization: Bearer",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:124",
        "scripts/test_adaptive_workflow.py:383"
      ]
    },
    "Auto-adjusting": {
      "value": "Auto-adjusting",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:256"
      ]
    },
    "Auto-fix functionality not implemented yet.": {
      "value": "Auto-fix functionality not implemented yet.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:387"
      ]
    },
    "Auto-fix linting issues": {
      "value": "Auto-fix linting issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:410"
      ]
    },
    "Auto-fix operations can break your tests!": {
      "value": "Auto-fix operations can break your tests!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:950"
      ]
    },
    "Auto-generated by Autonomous Test Reviewer with Ultra-Thinking\nGenerated:": {
      "value": "Auto-generated by Autonomous Test Reviewer with Ultra-Thinking\nGenerated:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:101"
      ]
    },
    "Auto-splitting is experimental - manual review required": {
      "value": "Auto-splitting is experimental - manual review required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:400"
      ]
    },
    "Automated Frontend Test Runner with Sub-Agent Fixes": {
      "value": "Automated Frontend Test Runner with Sub-Agent Fixes",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:906"
      ]
    },
    "Automated Test Size Violation Fixer\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity - Enable test runner to function, unblock development pipeline\n- Value Impact: Restores test execution capability, prevents regression accumulation\n- Strategic Impact: $50K+ monthly dev velocity protection through working test infrastructure\n\nThis script automatically fixes test size violations by:\n1. Splitting oversized test files (>300 lines) into focused modules\n2. Extracting common fixtures and utilities\n3. Breaking large test functions (>8 lines) into focused tests\n4. Preserving all test functionality while improving maintainability": {
      "value": "Automated Test Size Violation Fixer\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity - Enable test runner to function, unblock development pipeline\n- Value Impact: Restores test execution capability, prevents regression accumulation\n- Strategic Impact: $50K+ monthly dev velocity protection through working test infrastructure\n\nThis script automatically fixes test size violations by:\n1. Splitting oversized test files (>300 lines) into focused modules\n2. Extracting common fixtures and utilities\n3. Breaking large test functions (>8 lines) into focused tests\n4. Preserving all test functionality while improving maintainability",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:2"
      ]
    },
    "Automated test fix loop script.\n\nThis script runs test suite iterations and fixes issues automatically.": {
      "value": "Automated test fix loop script.\n\nThis script runs test suite iterations and fixes issues automatically.",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:1"
      ]
    },
    "Automated test thread": {
      "value": "Automated test thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:327"
      ]
    },
    "Automatic function refactoring is not supported": {
      "value": "Automatic function refactoring is not supported",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:625"
      ]
    },
    "Automatically fix identified issues": {
      "value": "Automatically fix identified issues",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:273"
      ]
    },
    "Automatically fix test size violations": {
      "value": "Automatically fix test size violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:717"
      ]
    },
    "Autonomous Test Review System - Entry Point\nWrapper script for the autonomous test review system": {
      "value": "Autonomous Test Review System - Entry Point\nWrapper script for the autonomous test review system",
      "category": "test_literals",
      "locations": [
        "scripts/test_autonomous_review.py:2"
      ]
    },
    "Autonomous Test Review System - Main Reviewer\nMain autonomous test reviewer class for orchestrating analysis and improvements": {
      "value": "Autonomous Test Review System - Main Reviewer\nMain autonomous test reviewer class for orchestrating analysis and improvements",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:2"
      ]
    },
    "Autonomous Test Review System - Test Generator\nIntelligent test generation and modernization capabilities": {
      "value": "Autonomous Test Review System - Test Generator\nIntelligent test generation and modernization capabilities",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:2"
      ]
    },
    "Available API keys:": {
      "value": "Available API keys:",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:58"
      ]
    },
    "Available CLI tools:": {
      "value": "Available CLI tools:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:175"
      ]
    },
    "Available Methods:": {
      "value": "Available Methods:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:294"
      ]
    },
    "Available URLs:": {
      "value": "Available URLs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:64"
      ]
    },
    "Available categories:": {
      "value": "Available categories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:221"
      ]
    },
    "Available endpoints:": {
      "value": "Available endpoints:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:307"
      ]
    },
    "Available secrets:": {
      "value": "Available secrets:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:79"
      ]
    },
    "Average Business Value Score:": {
      "value": "Average Business Value Score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:738"
      ]
    },
    "Average Duration:": {
      "value": "Average Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:168"
      ]
    },
    "Average Failure Rate:": {
      "value": "Average Failure Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:67",
        "scripts/test_dashboard.py:166"
      ]
    },
    "Average Response Time:": {
      "value": "Average Response Time:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:465"
      ]
    },
    "Average block duration:": {
      "value": "Average block duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:203"
      ]
    },
    "Average latency increased by 15%": {
      "value": "Average latency increased by 15%",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:321"
      ]
    },
    "Average per object:": {
      "value": "Average per object:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:269",
        "scripts/test_blocking_analysis.py:290"
      ]
    },
    "Average per task:": {
      "value": "Average per task:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:213"
      ]
    },
    "Avg Duration": {
      "value": "Avg Duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45"
      ]
    },
    "Avg Duration:": {
      "value": "Avg Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:721",
        "scripts/test_execution_tracker.py:751"
      ]
    },
    "Avg Failure Rate:": {
      "value": "Avg Failure Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:719"
      ]
    },
    "Avg:": {
      "value": "Avg:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:187"
      ]
    },
    "B": {
      "value": "B",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:246",
        "scripts/pytest_resource_monitor.py:185"
      ]
    },
    "BACKEND": {
      "value": "BACKEND",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:38",
        "scripts/test_chat_errors.py:39",
        "scripts/test_chat_errors.py:44",
        "scripts/test_chat_errors.py:45",
        "scripts/test_log_introspection.py:365"
      ]
    },
    "BACKEND AUTH CONFIGURATION TEST": {
      "value": "BACKEND AUTH CONFIGURATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:14"
      ]
    },
    "BACKEND_PORT": {
      "value": "BACKEND_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:257"
      ]
    },
    "BACKEND_URL": {
      "value": "BACKEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:154"
      ]
    },
    "BASE_URL": {
      "value": "BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:29"
      ]
    },
    "BATCH PROCESSING COMPLETE": {
      "value": "BATCH PROCESSING COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:378"
      ]
    },
    "BATCH TEST FIXER": {
      "value": "BATCH TEST FIXER",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:345"
      ]
    },
    "BLOCKED": {
      "value": "BLOCKED",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:242",
        "scripts/simple_websocket_blocking_test.py:243",
        "scripts/test_blocking_analysis.py:369",
        "scripts/test_cors_ssot_compliance.py:43",
        "scripts/test_cors_ssot_compliance.py:79",
        "scripts/test_cors_ssot_compliance.py:87",
        "scripts/test_cors_ssot_compliance.py:125",
        "scripts/test_cors_ssot_compliance.py:133",
        "scripts/test_environment_validation_clean.py:113",
        "scripts/test_improved_environment_validation.py:114"
      ]
    },
    "BUSINESS IMPACT VALIDATION REPORT": {
      "value": "BUSINESS IMPACT VALIDATION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:545"
      ]
    },
    "BUSINESS IMPACT:": {
      "value": "BUSINESS IMPACT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:225",
        "scripts/test_secret_manager_builder_critical.py:649"
      ]
    },
    "BUSINESS IMPACT:\n   • Current system load time:": {
      "value": "BUSINESS IMPACT:\n   • Current system load time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:659"
      ]
    },
    "BUSINESS IMPACT:\n   • Security risk: Production secrets not meeting enterprise standards\n   • Compliance risk: Weak authentication in production environment\n   • Audit risk: Inconsistent security validation across services\n   • Incident risk: Weak secrets enabling unauthorized access\n\n✅ SOLUTION: SecretManagerBuilder with built-in security validation\n   🔒 Mandatory secret strength validation per environment\n   🛡️  Unified security policies across all services\n   📋 Automated security compliance checking\n   🚨 Production-grade security monitoring and alerting": {
      "value": "BUSINESS IMPACT:\n   • Security risk: Production secrets not meeting enterprise standards\n   • Compliance risk: Weak authentication in production environment\n   • Audit risk: Inconsistent security validation across services\n   • Incident risk: Weak secrets enabling unauthorized access\n\n✅ SOLUTION: SecretManagerBuilder with built-in security validation\n   🔒 Mandatory secret strength validation per environment\n   🛡️  Unified security policies across all services\n   📋 Automated security compliance checking\n   🚨 Production-grade security monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:780"
      ]
    },
    "BUSINESS VALUE AT RISK:": {
      "value": "BUSINESS VALUE AT RISK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:557"
      ]
    },
    "BUSINESS VALUE PROTECTION:": {
      "value": "BUSINESS VALUE PROTECTION:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:550"
      ]
    },
    "BUSINESS VALUE TEST COVERAGE SUMMARY": {
      "value": "BUSINESS VALUE TEST COVERAGE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:734"
      ]
    },
    "BVJ:": {
      "value": "BVJ:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:147"
      ]
    },
    "Backed up": {
      "value": "Backed up",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:763"
      ]
    },
    "Backend": {
      "value": "Backend",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:62",
        "scripts/test_staging_auth_live.py:210"
      ]
    },
    "Backend API": {
      "value": "Backend API",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:181"
      ]
    },
    "Backend API Health": {
      "value": "Backend API Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:84"
      ]
    },
    "Backend Auth Required": {
      "value": "Backend Auth Required",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:72"
      ]
    },
    "Backend Configuration:": {
      "value": "Backend Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:169"
      ]
    },
    "Backend Health": {
      "value": "Backend Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:67",
        "scripts/test_staging_env.py:145"
      ]
    },
    "Backend Health:": {
      "value": "Backend Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:297"
      ]
    },
    "Backend Hot Reload": {
      "value": "Backend Hot Reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:211"
      ]
    },
    "Backend Integration": {
      "value": "Backend Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:78"
      ]
    },
    "Backend Main Import": {
      "value": "Backend Main Import",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:160"
      ]
    },
    "Backend Service": {
      "value": "Backend Service",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:70",
        "scripts/test/verify_test_ports.py:30",
        "scripts/test_async_postgres.py:168",
        "scripts/test_staging_auth_e2e.py:36"
      ]
    },
    "Backend Service:": {
      "value": "Backend Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:336"
      ]
    },
    "Backend Service: [green]✓ Healthy[/green]": {
      "value": "Backend Service: [green]✓ Healthy[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:113"
      ]
    },
    "Backend Service: [red]✗ Not reachable -": {
      "value": "Backend Service: [red]✗ Not reachable -",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:117"
      ]
    },
    "Backend Service: [red]✗ Unhealthy (": {
      "value": "Backend Service: [red]✗ Unhealthy (",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:114"
      ]
    },
    "Backend Tests:": {
      "value": "Backend Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:115"
      ]
    },
    "Backend URL: [cyan]": {
      "value": "Backend URL: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:438"
      ]
    },
    "Backend alone should not trigger production, got": {
      "value": "Backend alone should not trigger production, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:54"
      ]
    },
    "Backend configured to run on:": {
      "value": "Backend configured to run on:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:137"
      ]
    },
    "Backend connection failed:": {
      "value": "Backend connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:23"
      ]
    },
    "Backend health check failed with status": {
      "value": "Backend health check failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:37"
      ]
    },
    "Backend health check failed:": {
      "value": "Backend health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:41"
      ]
    },
    "Backend integration test failed:": {
      "value": "Backend integration test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:77"
      ]
    },
    "Backend is healthy": {
      "value": "Backend is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:35"
      ]
    },
    "Backend is healthy!": {
      "value": "Backend is healthy!",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:133"
      ]
    },
    "Backend must start before frontend": {
      "value": "Backend must start before frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:101"
      ]
    },
    "Backend response:": {
      "value": "Backend response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:19"
      ]
    },
    "Backend returned status": {
      "value": "Backend returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:39"
      ]
    },
    "Backend section": {
      "value": "Backend section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:365"
      ]
    },
    "Backend service URL": {
      "value": "Backend service URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:176"
      ]
    },
    "Backend service failed to start": {
      "value": "Backend service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:119"
      ]
    },
    "Backend service not available - cannot test agent orchestration": {
      "value": "Backend service not available - cannot test agent orchestration",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:143"
      ]
    },
    "Backend service tests": {
      "value": "Backend service tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:83"
      ]
    },
    "Backend should be in registry": {
      "value": "Backend should be in registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:339"
      ]
    },
    "Backend should have started": {
      "value": "Backend should have started",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:332"
      ]
    },
    "Backend should not start before auth is ready": {
      "value": "Backend should not start before auth is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:112"
      ]
    },
    "Backend should now start successfully without ClickHouse blocking it.": {
      "value": "Backend should now start successfully without ClickHouse blocking it.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:106"
      ]
    },
    "Backend skips .env loading": {
      "value": "Backend skips .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:99"
      ]
    },
    "Backend status:": {
      "value": "Backend status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:17"
      ]
    },
    "Backend unhealthy:": {
      "value": "Backend unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:37"
      ]
    },
    "Backend:": {
      "value": "Backend:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:87",
        "scripts/test_and_fix_cors.py:118",
        "scripts/test_and_fix_cors.py:134"
      ]
    },
    "Backend:  ./netra_backend -> /app/netra_backend": {
      "value": "Backend:  ./netra_backend -> /app/netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:235"
      ]
    },
    "Background jobs not using RedisConfigurationBuilder:": {
      "value": "Background jobs not using RedisConfigurationBuilder:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:133"
      ]
    },
    "BackgroundJobWorker not using RedisConfigurationBuilder": {
      "value": "BackgroundJobWorker not using RedisConfigurationBuilder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:295"
      ]
    },
    "BackgroundJobs: Inappropriate fallback occurred": {
      "value": "BackgroundJobs: Inappropriate fallback occurred",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:154"
      ]
    },
    "Backups stored in:": {
      "value": "Backups stored in:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1012"
      ]
    },
    "Base Environment:": {
      "value": "Base Environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:131"
      ]
    },
    "Base URL": {
      "value": "Base URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:209"
      ]
    },
    "Base URL for testing (default: http://localhost:8000)": {
      "value": "Base URL for testing (default: http://localhost:8000)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:420"
      ]
    },
    "Base URL validation:": {
      "value": "Base URL validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:336"
      ]
    },
    "Base URL:": {
      "value": "Base URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:242",
        "scripts/test_auth_fix_simple.py:44",
        "scripts/test_auth_service_integration_fix.py:47",
        "scripts/test_auth_service_integration_fix.py:87"
      ]
    },
    "Based on the analysis of your AI workload, I've identified several optimization opportunities.": {
      "value": "Based on the analysis of your AI workload, I've identified several optimization opportunities.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:160"
      ]
    },
    "Based on the backend's response patterns, we can infer:\n\n1. If the backend is misconfigured, it likely:\n   - Has wrong AUTH_SERVICE_URL environment variable\n   - Missing SERVICE_SECRET for service-to-service auth\n   - Network connectivity issues to auth service\n\n2. Common staging issues:\n   - Auth service URL should be: https://auth.staging.netrasystems.ai\n   - Backend might be trying to use internal Cloud Run URL\n   - Service authentication credentials may be missing\n\n3. To fix:\n   - Ensure AUTH_SERVICE_URL env var is set correctly\n   - Verify SERVICE_SECRET is configured (if required)\n   - Check network connectivity between services": {
      "value": "Based on the backend's response patterns, we can infer:\n\n1. If the backend is misconfigured, it likely:\n   - Has wrong AUTH_SERVICE_URL environment variable\n   - Missing SERVICE_SECRET for service-to-service auth\n   - Network connectivity issues to auth service\n\n2. Common staging issues:\n   - Auth service URL should be: https://auth.staging.netrasystems.ai\n   - Backend might be trying to use internal Cloud Run URL\n   - Service authentication credentials may be missing\n\n3. To fix:\n   - Ensure AUTH_SERVICE_URL env var is set correctly\n   - Verify SERVICE_SECRET is configured (if required)\n   - Check network connectivity between services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:121"
      ]
    },
    "Basic Socket Binding": {
      "value": "Basic Socket Binding",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:159"
      ]
    },
    "Batch Test Fixer - Systematically fixes test failures\nProcesses tests in batches and either:\n1. Aligns tests with current code\n2. Implements missing functionality if tests are correct": {
      "value": "Batch Test Fixer - Systematically fixes test failures\nProcesses tests in batches and either:\n1. Aligns tests with current code\n2. Implements missing functionality if tests are correct",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:2"
      ]
    },
    "Batch Test Generator for Test Coverage Remediation\nImplements comprehensive test generation for 121 critical files\nBusiness Value: Achieves 85%+ coverage for revenue-critical components": {
      "value": "Batch Test Generator for Test Coverage Remediation\nImplements comprehensive test generation for 121 critical files\nBusiness Value: Achieves 85%+ coverage for revenue-critical components",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:2"
      ]
    },
    "Batch fix known test issues and run test iterations.": {
      "value": "Batch fix known test issues and run test iterations.",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:2"
      ]
    },
    "Batch processing completed": {
      "value": "Batch processing completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:128"
      ]
    },
    "Batch test generation complete!": {
      "value": "Batch test generation complete!",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:540"
      ]
    },
    "Bearer": {
      "value": "Bearer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:195",
        "auth_service/tests/factories/token_factory.py:219",
        "auth_service/tests/test_auth_comprehensive.py:468",
        "auth_service/tests/test_auth_comprehensive_audit.py:542",
        "auth_service/tests/test_auth_comprehensive_audit.py:564",
        "auth_service/tests/test_auth_comprehensive_audit.py:577",
        "auth_service/tests/test_oauth_state_validation.py:117",
        "auth_service/tests/test_oauth_state_validation.py:262",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:62",
        "auth_service/tests/unit/test_refresh_endpoint.py:54"
      ]
    },
    "Bearer fake-token-for-testing": {
      "value": "Bearer fake-token-for-testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:84"
      ]
    },
    "Bearer invalid_token_for_testing": {
      "value": "Bearer invalid_token_for_testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:71"
      ]
    },
    "Bearer test": {
      "value": "Bearer test",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:45",
        "scripts/test_staging_deployment.py:105",
        "scripts/test_staging_deployment.py:107",
        "scripts/test_staging_deployment.py:109"
      ]
    },
    "Bearer test_token_123": {
      "value": "Bearer test_token_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:177"
      ]
    },
    "Bearer token_value": {
      "value": "Bearer token_value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:307"
      ]
    },
    "Beta Inc": {
      "value": "Beta Inc",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:158"
      ]
    },
    "Binding port (": {
      "value": "Binding port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:104"
      ]
    },
    "Blacklisted refresh token should be rejected": {
      "value": "Blacklisted refresh token should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:249"
      ]
    },
    "Blocking Issues:": {
      "value": "Blocking Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:114"
      ]
    },
    "Blocking threshold: 5.0ms": {
      "value": "Blocking threshold: 5.0ms",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:162"
      ]
    },
    "Build frontend for production": {
      "value": "Build frontend for production",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:412"
      ]
    },
    "Building frontend...": {
      "value": "Building frontend...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:300"
      ]
    },
    "Business Impact Criteria:": {
      "value": "Business Impact Criteria:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:652"
      ]
    },
    "Business Impact:": {
      "value": "Business Impact:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:645"
      ]
    },
    "Business Value Justification": {
      "value": "Business Value Justification",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:147"
      ]
    },
    "Business Value Test Index Generator\n\nScans the codebase to create a comprehensive index of all tests,\ncategorized by business value, customer tier, and coverage dimensions.": {
      "value": "Business Value Test Index Generator\n\nScans the codebase to create a comprehensive index of all tests,\ncategorized by business value, customer tier, and coverage dimensions.",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:2"
      ]
    },
    "Business value test coverage report saved to": {
      "value": "Business value test coverage report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:727"
      ]
    },
    "CATEGORY DETAILS:": {
      "value": "CATEGORY DETAILS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:152"
      ]
    },
    "CATEGORY STATUS:": {
      "value": "CATEGORY STATUS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:43"
      ]
    },
    "CATEGORY SUMMARY:": {
      "value": "CATEGORY SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:713"
      ]
    },
    "CHECK_INTERVAL": {
      "value": "CHECK_INTERVAL",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:31"
      ]
    },
    "CHOKIDAR_USEPOLLING": {
      "value": "CHOKIDAR_USEPOLLING",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:140",
        "scripts/test_docker_config.py:140"
      ]
    },
    "CI": {
      "value": "CI",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:63"
      ]
    },
    "CI Check for Test Stubs in Production Code\n\nThis script runs as part of the CI/CD pipeline to detect test stubs in production code.\nIt fails the build if any test stubs are found according to SPEC/no_test_stubs.xml.\n\nUsage:\n    python scripts/ci/check_test_stubs.py          # Run check and exit with code\n    python scripts/ci/check_test_stubs.py --quiet  # Minimal output for CI": {
      "value": "CI Check for Test Stubs in Production Code\n\nThis script runs as part of the CI/CD pipeline to detect test stubs in production code.\nIt fails the build if any test stubs are found according to SPEC/no_test_stubs.xml.\n\nUsage:\n    python scripts/ci/check_test_stubs.py          # Run check and exit with code\n    python scripts/ci/check_test_stubs.py --quiet  # Minimal output for CI",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:2"
      ]
    },
    "CI Test Stub Checker": {
      "value": "CI Test Stub Checker",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:106"
      ]
    },
    "CLAUDE_3_OPUS": {
      "value": "CLAUDE_3_OPUS",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:27",
        "scripts/validate_llm_test_models.py:36"
      ]
    },
    "CLAUDE_3_SONNET": {
      "value": "CLAUDE_3_SONNET",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:21"
      ]
    },
    "CLICKHOUSE GRACEFUL FAILURE TEST": {
      "value": "CLICKHOUSE GRACEFUL FAILURE TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:91"
      ]
    },
    "CLICKHOUSE STARTUP FIX VALIDATION": {
      "value": "CLICKHOUSE STARTUP FIX VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:316"
      ]
    },
    "CLICKHOUSE_": {
      "value": "CLICKHOUSE_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "CLICKHOUSE_DB": {
      "value": "CLICKHOUSE_DB",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:86",
        "scripts/test/test_clickhouse_staging_fix.py:140",
        "scripts/test_clickhouse_staging.py:31",
        "scripts/test_seed_data.py:54",
        "scripts/test_service_monitor.py:57"
      ]
    },
    "CLICKHOUSE_ENABLED": {
      "value": "CLICKHOUSE_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:17"
      ]
    },
    "CLICKHOUSE_HOST": {
      "value": "CLICKHOUSE_HOST",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:16",
        "scripts/test/test_clickhouse_staging_fix.py:83",
        "scripts/test/test_clickhouse_staging_fix.py:136",
        "scripts/test_clickhouse_staging.py:28",
        "scripts/test_seed_data.py:50",
        "scripts/test_service_monitor.py:53",
        "scripts/test_staging_clickhouse.py:83",
        "scripts/test_staging_startup.py:114",
        "scripts/test_staging_startup.py:220"
      ]
    },
    "CLICKHOUSE_PASSWORD": {
      "value": "CLICKHOUSE_PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:85",
        "scripts/test/test_clickhouse_staging_fix.py:139",
        "scripts/test_clickhouse_staging.py:74",
        "scripts/test_clickhouse_staging.py:76",
        "scripts/test_secret_manager_builder_critical.py:82",
        "scripts/test_secret_manager_builder_critical.py:160",
        "scripts/test_secret_manager_builder_critical.py:693",
        "scripts/test_secret_manager_builder_critical.py:704",
        "scripts/test_secret_manager_builder_critical.py:802",
        "scripts/test_seed_data.py:53"
      ]
    },
    "CLICKHOUSE_PORT": {
      "value": "CLICKHOUSE_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:137",
        "scripts/test_clickhouse_staging.py:29",
        "scripts/test_seed_data.py:51",
        "scripts/test_service_monitor.py:54",
        "scripts/test_staging_clickhouse.py:83"
      ]
    },
    "CLICKHOUSE_REQUIRED": {
      "value": "CLICKHOUSE_REQUIRED",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:13"
      ]
    },
    "CLICKHOUSE_SECURE": {
      "value": "CLICKHOUSE_SECURE",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:141",
        "scripts/test_clickhouse_staging.py:32"
      ]
    },
    "CLICKHOUSE_URL": {
      "value": "CLICKHOUSE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:15",
        "scripts/debug_supervisor_test.py:30",
        "scripts/test_backend_ORIGINAL.py:84",
        "scripts/test_clickhouse_staging.py:27"
      ]
    },
    "CLICKHOUSE_URL:": {
      "value": "CLICKHOUSE_URL:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:30"
      ]
    },
    "CLICKHOUSE_USER": {
      "value": "CLICKHOUSE_USER",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:84",
        "scripts/test/test_clickhouse_staging_fix.py:138",
        "scripts/test_clickhouse_staging.py:30",
        "scripts/test_seed_data.py:52",
        "scripts/test_service_monitor.py:55"
      ]
    },
    "COMPLETED": {
      "value": "COMPLETED",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:158"
      ]
    },
    "COMPLETED:": {
      "value": "COMPLETED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:164"
      ]
    },
    "COMPLIANCE ANALYSIS": {
      "value": "COMPLIANCE ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:43"
      ]
    },
    "COMPONENT_MAPPINGS = {\n    \"backend\": {\n        \"paths\": [\"netra_backend/tests\"],\n        \"exclude\": [\"frontend\", \"auth_service\"]\n    },\n    \"frontend\": {\n        \"paths\": [\"frontend/__tests__\"],\n        \"exclude\": []\n    },\n    \"auth\": {\n        \"paths\": [\"netra_backend/tests/auth_integration\", \"auth_service/tests\"],\n        \"exclude\": []\n    },\n    \"agents\": {\n        \"paths\": [\"netra_backend/tests/agents\"],\n        \"exclude\": []\n    },\n    \"database\": {\n        \"paths\": [\"netra_backend/tests/database\", \"netra_backend/tests/clickhouse\"],\n        \"exclude\": []\n    },\n    \"websocket\": {\n        \"paths\": [\"netra_backend/tests/websocket\", \"netra_backend/tests/ws_manager\"],\n        \"exclude\": []\n    }\n}": {
      "value": "COMPONENT_MAPPINGS = {\n    \"backend\": {\n        \"paths\": [\"netra_backend/tests\"],\n        \"exclude\": [\"frontend\", \"auth_service\"]\n    },\n    \"frontend\": {\n        \"paths\": [\"frontend/__tests__\"],\n        \"exclude\": []\n    },\n    \"auth\": {\n        \"paths\": [\"netra_backend/tests/auth_integration\", \"auth_service/tests\"],\n        \"exclude\": []\n    },\n    \"agents\": {\n        \"paths\": [\"netra_backend/tests/agents\"],\n        \"exclude\": []\n    },\n    \"database\": {\n        \"paths\": [\"netra_backend/tests/database\", \"netra_backend/tests/clickhouse\"],\n        \"exclude\": []\n    },\n    \"websocket\": {\n        \"paths\": [\"netra_backend/tests/websocket\", \"netra_backend/tests/ws_manager\"],\n        \"exclude\": []\n    }\n}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:278"
      ]
    },
    "COMPONENT_MAPPINGS\\s*=\\s*\\{[^}]+\\}": {
      "value": "COMPONENT_MAPPINGS\\s*=\\s*\\{[^}]+\\}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:276"
      ]
    },
    "COMPREHENSIVE IMPORT TEST": {
      "value": "COMPREHENSIVE IMPORT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:68"
      ]
    },
    "COMPREHENSIVE SECRET MANAGER ANALYSIS": {
      "value": "COMPREHENSIVE SECRET MANAGER ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:487"
      ]
    },
    "COMPREHENSIVE STAGING WEBSOCKET TEST SUITE": {
      "value": "COMPREHENSIVE STAGING WEBSOCKET TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:259"
      ]
    },
    "COMPREHENSIVE TEST FIXER": {
      "value": "COMPREHENSIVE TEST FIXER",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:289"
      ]
    },
    "COMPREHENSIVE TEST IMPORT FIX REPORT": {
      "value": "COMPREHENSIVE TEST IMPORT FIX REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:307"
      ]
    },
    "COMPREHENSIVE TEST QUALITY REPORT": {
      "value": "COMPREHENSIVE TEST QUALITY REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:248"
      ]
    },
    "COMPREHENSIVE TEST SCAN COMPLETE": {
      "value": "COMPREHENSIVE TEST SCAN COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:170"
      ]
    },
    "COMPREHENSIVE TEST SUMMARY": {
      "value": "COMPREHENSIVE TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:132"
      ]
    },
    "CONCLUSIONS": {
      "value": "CONCLUSIONS",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:238"
      ]
    },
    "CONFIG:": {
      "value": "CONFIG:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:235"
      ]
    },
    "CONFIGURATION ISSUES:": {
      "value": "CONFIGURATION ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:280"
      ]
    },
    "CONNECTED": {
      "value": "CONNECTED",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:31"
      ]
    },
    "CONNECTION_ERROR": {
      "value": "CONNECTION_ERROR",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:97"
      ]
    },
    "CONSTRUCTOR_FILE_MISSING": {
      "value": "CONSTRUCTOR_FILE_MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:190"
      ]
    },
    "CONSTRUCTOR_INCOMPATIBLE": {
      "value": "CONSTRUCTOR_INCOMPATIBLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:220"
      ]
    },
    "CONSTRUCTOR_READ_ERROR": {
      "value": "CONSTRUCTOR_READ_ERROR",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:202"
      ]
    },
    "CORS": {
      "value": "CORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:88",
        "scripts/test_chat_errors.py:89",
        "scripts/test_chat_errors.py:94",
        "scripts/test_chat_errors.py:95",
        "scripts/test_log_introspection.py:331"
      ]
    },
    "CORS Configuration": {
      "value": "CORS Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:118",
        "scripts/test_auth_integration.py:124",
        "scripts/test_staging_env.py:150"
      ]
    },
    "CORS Configuration Report": {
      "value": "CORS Configuration Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:457"
      ]
    },
    "CORS Configuration Test": {
      "value": "CORS Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:94"
      ]
    },
    "CORS DEBUG TEST": {
      "value": "CORS DEBUG TEST",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:57"
      ]
    },
    "CORS Headers:": {
      "value": "CORS Headers:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:81",
        "scripts/debug_cors_test.py:99",
        "scripts/test_cors_issue.py:22",
        "scripts/test_cors_issue.py:43",
        "scripts/test_cors_issue.py:65",
        "scripts/test_staging_cors.py:28",
        "scripts/test_staging_cors.py:55",
        "scripts/test_staging_cors.py:78"
      ]
    },
    "CORS Issues Found:": {
      "value": "CORS Issues Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:551"
      ]
    },
    "CORS OK": {
      "value": "CORS OK",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:371"
      ]
    },
    "CORS Origin Header:": {
      "value": "CORS Origin Header:",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141"
      ]
    },
    "CORS SSOT Compliance Test": {
      "value": "CORS SSOT Compliance Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:197"
      ]
    },
    "CORS Test Results:": {
      "value": "CORS Test Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:173"
      ]
    },
    "CORS Testing and Debugging Script\n\nBusiness Value Justification (BVJ):\n- Segment: ALL (Operational tooling)\n- Business Goal: Rapidly diagnose and fix CORS issues\n- Value Impact: Reduces time to resolution for CORS-related incidents\n- Strategic Impact: Enables proactive CORS testing and validation\n\nThis script provides comprehensive CORS testing capabilities:\n- Test CORS configuration for any endpoint\n- Show which origins are allowed\n- Validate current environment settings\n- Generate CORS configuration reports\n- Test WebSocket CORS support": {
      "value": "CORS Testing and Debugging Script\n\nBusiness Value Justification (BVJ):\n- Segment: ALL (Operational tooling)\n- Business Goal: Rapidly diagnose and fix CORS issues\n- Value Impact: Reduces time to resolution for CORS-related incidents\n- Strategic Impact: Enables proactive CORS testing and validation\n\nThis script provides comprehensive CORS testing capabilities:\n- Test CORS configuration for any endpoint\n- Show which origins are allowed\n- Validate current environment settings\n- Generate CORS configuration reports\n- Test WebSocket CORS support",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:2"
      ]
    },
    "CORS Testing and Debugging Tool": {
      "value": "CORS Testing and Debugging Tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:417"
      ]
    },
    "CORS actual request successful (status:": {
      "value": "CORS actual request successful (status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:134"
      ]
    },
    "CORS configured:": {
      "value": "CORS configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:111"
      ]
    },
    "CORS errors": {
      "value": "CORS errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:364"
      ]
    },
    "CORS headers missing from backend": {
      "value": "CORS headers missing from backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:87"
      ]
    },
    "CORS headers not properly configured": {
      "value": "CORS headers not properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:113"
      ]
    },
    "CORS policy blocked request": {
      "value": "CORS policy blocked request",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:332"
      ]
    },
    "CORS preflight successful (status:": {
      "value": "CORS preflight successful (status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:96"
      ]
    },
    "CORS test complete": {
      "value": "CORS test complete",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:86"
      ]
    },
    "CORS test failed:": {
      "value": "CORS test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:123",
        "scripts/test_staging_env.py:115",
        "scripts/test_websocket_middleware.py:117"
      ]
    },
    "CORS validation test PASSED": {
      "value": "CORS validation test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:161"
      ]
    },
    "CORS validation test failed:": {
      "value": "CORS validation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:166"
      ]
    },
    "CORS: 1": {
      "value": "CORS: 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:364"
      ]
    },
    "CPU Utilization:": {
      "value": "CPU Utilization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:354"
      ]
    },
    "CPU usage at": {
      "value": "CPU usage at",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:225"
      ]
    },
    "CRASHED:": {
      "value": "CRASHED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:169",
        "auth_service/test_url_construction.py:235"
      ]
    },
    "CREATE DATABASE": {
      "value": "CREATE DATABASE",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:220"
      ]
    },
    "CREATE INDEX IF NOT EXISTS idx_test_metadata_failure_rate ON test_metadata(failure_rate)": {
      "value": "CREATE INDEX IF NOT EXISTS idx_test_metadata_failure_rate ON test_metadata(failure_rate)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:206"
      ]
    },
    "CREATE INDEX IF NOT EXISTS idx_test_runs_status ON test_runs(status)": {
      "value": "CREATE INDEX IF NOT EXISTS idx_test_runs_status ON test_runs(status)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:205"
      ]
    },
    "CREATE INDEX IF NOT EXISTS idx_test_runs_test_id ON test_runs(test_id)": {
      "value": "CREATE INDEX IF NOT EXISTS idx_test_runs_test_id ON test_runs(test_id)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:203"
      ]
    },
    "CREATE INDEX IF NOT EXISTS idx_test_runs_timestamp ON test_runs(timestamp)": {
      "value": "CREATE INDEX IF NOT EXISTS idx_test_runs_timestamp ON test_runs(timestamp)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:204"
      ]
    },
    "CREATE TABLE IF NOT EXISTS test_connectivity (id UInt32) ENGINE = Memory": {
      "value": "CREATE TABLE IF NOT EXISTS test_connectivity (id UInt32) ENGINE = Memory",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:186"
      ]
    },
    "CREATE TABLE IF NOT EXISTS test_metadata (\n                    test_id TEXT PRIMARY KEY,\n                    file_path TEXT NOT NULL,\n                    test_name TEXT NOT NULL,\n                    categories TEXT,  -- JSON array\n                    first_seen TEXT,\n                    last_modified TEXT,\n                    total_runs INTEGER DEFAULT 0,\n                    total_failures INTEGER DEFAULT 0,\n                    total_passes INTEGER DEFAULT 0,\n                    total_skips INTEGER DEFAULT 0,\n                    average_duration REAL DEFAULT 0.0,\n                    failure_rate REAL DEFAULT 0.0,\n                    last_run_timestamp TEXT,\n                    last_run_status TEXT,\n                    priority_score REAL DEFAULT 50.0,\n                    dependencies TEXT,  -- JSON array\n                    tags TEXT,  -- JSON array\n                    business_value REAL DEFAULT 50.0\n                )": {
      "value": "CREATE TABLE IF NOT EXISTS test_metadata (\n                    test_id TEXT PRIMARY KEY,\n                    file_path TEXT NOT NULL,\n                    test_name TEXT NOT NULL,\n                    categories TEXT,  -- JSON array\n                    first_seen TEXT,\n                    last_modified TEXT,\n                    total_runs INTEGER DEFAULT 0,\n                    total_failures INTEGER DEFAULT 0,\n                    total_passes INTEGER DEFAULT 0,\n                    total_skips INTEGER DEFAULT 0,\n                    average_duration REAL DEFAULT 0.0,\n                    failure_rate REAL DEFAULT 0.0,\n                    last_run_timestamp TEXT,\n                    last_run_status TEXT,\n                    priority_score REAL DEFAULT 50.0,\n                    dependencies TEXT,  -- JSON array\n                    tags TEXT,  -- JSON array\n                    business_value REAL DEFAULT 50.0\n                )",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:139"
      ]
    },
    "CREATE TABLE IF NOT EXISTS test_runs (\n                    run_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    test_id TEXT NOT NULL,\n                    session_id TEXT,\n                    file_path TEXT NOT NULL,\n                    test_name TEXT NOT NULL,\n                    category TEXT,\n                    subcategory TEXT,\n                    status TEXT,\n                    duration REAL,\n                    timestamp TEXT,\n                    environment TEXT,\n                    error_message TEXT,\n                    failure_type TEXT,\n                    flaky BOOLEAN DEFAULT 0,\n                    retry_count INTEGER DEFAULT 0,\n                    coverage_impact REAL,\n                    FOREIGN KEY (test_id) REFERENCES test_metadata(test_id)\n                )": {
      "value": "CREATE TABLE IF NOT EXISTS test_runs (\n                    run_id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    test_id TEXT NOT NULL,\n                    session_id TEXT,\n                    file_path TEXT NOT NULL,\n                    test_name TEXT NOT NULL,\n                    category TEXT,\n                    subcategory TEXT,\n                    status TEXT,\n                    duration REAL,\n                    timestamp TEXT,\n                    environment TEXT,\n                    error_message TEXT,\n                    failure_type TEXT,\n                    flaky BOOLEAN DEFAULT 0,\n                    retry_count INTEGER DEFAULT 0,\n                    coverage_impact REAL,\n                    FOREIGN KEY (test_id) REFERENCES test_metadata(test_id)\n                )",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:163"
      ]
    },
    "CREATE TABLE IF NOT EXISTS test_sessions (\n                    session_id TEXT PRIMARY KEY,\n                    start_time TEXT,\n                    end_time TEXT,\n                    total_tests INTEGER,\n                    passed INTEGER,\n                    failed INTEGER,\n                    skipped INTEGER,\n                    environment TEXT,\n                    categories_run TEXT,  -- JSON array\n                    command_line TEXT,\n                    metadata TEXT  -- JSON object for additional info\n                )": {
      "value": "CREATE TABLE IF NOT EXISTS test_sessions (\n                    session_id TEXT PRIMARY KEY,\n                    start_time TEXT,\n                    end_time TEXT,\n                    total_tests INTEGER,\n                    passed INTEGER,\n                    failed INTEGER,\n                    skipped INTEGER,\n                    environment TEXT,\n                    categories_run TEXT,  -- JSON array\n                    command_line TEXT,\n                    metadata TEXT  -- JSON object for additional info\n                )",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:186"
      ]
    },
    "CRITICAL": {
      "value": "CRITICAL",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:72",
        "scripts/batch_test_generator.py:499",
        "scripts/test_error_monitor_logic.py:35",
        "scripts/test_error_monitor_logic.py:63"
      ]
    },
    "CRITICAL (must fix)": {
      "value": "CRITICAL (must fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:119"
      ]
    },
    "CRITICAL CONTEXT: synchronous serialization at line 810 in": {
      "value": "CRITICAL CONTEXT: synchronous serialization at line 810 in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:234"
      ]
    },
    "CRITICAL ERRORS (would block startup):": {
      "value": "CRITICAL ERRORS (would block startup):",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:57"
      ]
    },
    "CRITICAL FAILING TEST: SecretManagerBuilder Definition of Done\n\nThis is THE single most important test that validates SecretManagerBuilder delivers \non its business promises. When this test passes, the entire project has succeeded.\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: Platform Stability, Development Velocity, Risk Reduction\n- Value Impact: Eliminates 2-3 day secret integration cycles → 30 minute integrations\n- Strategic Impact: $150K/year in prevented incidents + 60% faster development cycles\n\n**THE ONE CRITICAL PROBLEM THIS TEST SOLVES:**\nFRAGMENTATION: Currently 4 different secret manager implementations with:\n- 1,385 lines of duplicated code across services\n- Hardcoded GCP project IDs in 8+ locations  \n- Inconsistent fallback chains causing production drift\n- No unified debugging when secrets fail\n\n**SUCCESS CRITERIA:**\nThis test becomes the \"Definition of Done\" - when it passes, we have:\n1. ✅ Unified SecretManagerBuilder following RedisConfigurationBuilder pattern\n2. ✅ Service independence maintained (auth_service vs netra_backend)\n3. ✅ Security-first design with no placeholder values in production\n4. ✅ Measurable performance improvements\n5. ✅ Backward compatibility during transition\n6. ✅ Production-grade error handling and debugging\n\n**EXPECTED CURRENT STATE: FAIL**\nThis test MUST fail because SecretManagerBuilder doesn't exist yet.\nCurrent implementations are fragmented and inconsistent.\n\n**EXPECTED FUTURE STATE: PASS**  \nOnce SecretManagerBuilder is implemented following the RedisConfigurationBuilder \npattern with 9 specialized sub-builders, this test will pass completely.": {
      "value": "CRITICAL FAILING TEST: SecretManagerBuilder Definition of Done\n\nThis is THE single most important test that validates SecretManagerBuilder delivers \non its business promises. When this test passes, the entire project has succeeded.\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: Platform Stability, Development Velocity, Risk Reduction\n- Value Impact: Eliminates 2-3 day secret integration cycles → 30 minute integrations\n- Strategic Impact: $150K/year in prevented incidents + 60% faster development cycles\n\n**THE ONE CRITICAL PROBLEM THIS TEST SOLVES:**\nFRAGMENTATION: Currently 4 different secret manager implementations with:\n- 1,385 lines of duplicated code across services\n- Hardcoded GCP project IDs in 8+ locations  \n- Inconsistent fallback chains causing production drift\n- No unified debugging when secrets fail\n\n**SUCCESS CRITERIA:**\nThis test becomes the \"Definition of Done\" - when it passes, we have:\n1. ✅ Unified SecretManagerBuilder following RedisConfigurationBuilder pattern\n2. ✅ Service independence maintained (auth_service vs netra_backend)\n3. ✅ Security-first design with no placeholder values in production\n4. ✅ Measurable performance improvements\n5. ✅ Backward compatibility during transition\n6. ✅ Production-grade error handling and debugging\n\n**EXPECTED CURRENT STATE: FAIL**\nThis test MUST fail because SecretManagerBuilder doesn't exist yet.\nCurrent implementations are fragmented and inconsistent.\n\n**EXPECTED FUTURE STATE: PASS**  \nOnce SecretManagerBuilder is implemented following the RedisConfigurationBuilder \npattern with 9 specialized sub-builders, this test will pass completely.",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:1"
      ]
    },
    "CRITICAL FILES (Immediate Attention Required):": {
      "value": "CRITICAL FILES (Immediate Attention Required):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:280"
      ]
    },
    "CRITICAL GAPS:": {
      "value": "CRITICAL GAPS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:758"
      ]
    },
    "CRITICAL IMPORT TEST (Fast-Fail Mode)": {
      "value": "CRITICAL IMPORT TEST (Fast-Fail Mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:82"
      ]
    },
    "CRITICAL ISSUES (": {
      "value": "CRITICAL ISSUES (",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:480"
      ]
    },
    "CRITICAL POLICY VIOLATIONS DETECTED!": {
      "value": "CRITICAL POLICY VIOLATIONS DETECTED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:56"
      ]
    },
    "CRITICAL REDIS CONFIGURATION FAILURE - Business Impact Analysis:": {
      "value": "CRITICAL REDIS CONFIGURATION FAILURE - Business Impact Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:219"
      ]
    },
    "CRITICAL TEST ENVIRONMENT MIGRATION UTILITY\n===========================================\n\nMigrates test files from direct os.environ access to IsolatedEnvironment usage.\nThis script handles the most common patterns and ensures CLAUDE.md compliance.\n\nCRITICAL REQUIREMENTS:\n- Replace ALL patch.dict(os.environ) with IsolatedEnvironment context managers\n- Replace ALL direct os.environ access with get_env() calls\n- Maintain test functionality while enforcing compliance\n- Follow unified_environment_management.xml patterns\n\nBusiness Value: Platform/Internal - System Stability & Test Reliability\nPrevents environment pollution and configuration failures in tests.\n\nAuthor: Claude Code - Test Environment Migration\nDate: 2025-09-02": {
      "value": "CRITICAL TEST ENVIRONMENT MIGRATION UTILITY\n===========================================\n\nMigrates test files from direct os.environ access to IsolatedEnvironment usage.\nThis script handles the most common patterns and ensures CLAUDE.md compliance.\n\nCRITICAL REQUIREMENTS:\n- Replace ALL patch.dict(os.environ) with IsolatedEnvironment context managers\n- Replace ALL direct os.environ access with get_env() calls\n- Maintain test functionality while enforcing compliance\n- Follow unified_environment_management.xml patterns\n\nBusiness Value: Platform/Internal - System Stability & Test Reliability\nPrevents environment pollution and configuration failures in tests.\n\nAuthor: Claude Code - Test Environment Migration\nDate: 2025-09-02",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:2"
      ]
    },
    "CRITICAL TEST: Cross-Service Secret Consistency in Production Deployment": {
      "value": "CRITICAL TEST: Cross-Service Secret Consistency in Production Deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:120"
      ]
    },
    "CRITICAL violations** found:": {
      "value": "CRITICAL violations** found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:505"
      ]
    },
    "CRITICAL:": {
      "value": "CRITICAL:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:129",
        "scripts/pytest_resource_monitor.py:206",
        "scripts/pytest_resource_monitor.py:225"
      ]
    },
    "CRITICAL: Coverage below 80% - focus on unit test generation for core modules": {
      "value": "CRITICAL: Coverage below 80% - focus on unit test generation for core modules",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:247"
      ]
    },
    "CRITICAL: Found": {
      "value": "CRITICAL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:444"
      ]
    },
    "CRITICAL: Run all tests immediately to verify nothing is broken!": {
      "value": "CRITICAL: Run all tests immediately to verify nothing is broken!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1009"
      ]
    },
    "CRITICAL: Test that refresh operations generate unique tokens each time": {
      "value": "CRITICAL: Test that refresh operations generate unique tokens each time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:26"
      ]
    },
    "CRITICAL: Verify tokens are ALWAYS unique on refresh": {
      "value": "CRITICAL: Verify tokens are ALWAYS unique on refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:39"
      ]
    },
    "CSV report saved to": {
      "value": "CSV report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:513"
      ]
    },
    "Cache Hit Rate:": {
      "value": "Cache Hit Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:351"
      ]
    },
    "Cache Hits:": {
      "value": "Cache Hits:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:337"
      ]
    },
    "Cache TTL:": {
      "value": "Cache TTL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:51",
        "scripts/test_triage_flow.py:189"
      ]
    },
    "Cache hit for query": {
      "value": "Cache hit for query",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:98"
      ]
    },
    "Cache refreshed": {
      "value": "Cache refreshed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:129"
      ]
    },
    "Calculating cosine similarities...": {
      "value": "Calculating cosine similarities...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:255"
      ]
    },
    "Can Start Services:": {
      "value": "Can Start Services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:91"
      ]
    },
    "Can execute:": {
      "value": "Can execute:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:137"
      ]
    },
    "Cannot connect to": {
      "value": "Cannot connect to",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:79"
      ]
    },
    "Cannot connect to PostgreSQL database": {
      "value": "Cannot connect to PostgreSQL database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:174"
      ]
    },
    "Cannot connect to PostgreSQL:": {
      "value": "Cannot connect to PostgreSQL:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:163"
      ]
    },
    "Cannot connect to Redis": {
      "value": "Cannot connect to Redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:178"
      ]
    },
    "Cannot connect to Redis:": {
      "value": "Cannot connect to Redis:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:188"
      ]
    },
    "Cannot connect to accounts.google.com": {
      "value": "Cannot connect to accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:397"
      ]
    },
    "Cannot find file for module:": {
      "value": "Cannot find file for module:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:184"
      ]
    },
    "Cannot find module": {
      "value": "Cannot find module",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:650"
      ]
    },
    "Cannot resolve module": {
      "value": "Cannot resolve module",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:689"
      ]
    },
    "Cannot run supervisor test due to dependency errors": {
      "value": "Cannot run supervisor test due to dependency errors",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:131"
      ]
    },
    "Canonical WebSocket manager functional (modern features integrated)": {
      "value": "Canonical WebSocket manager functional (modern features integrated)",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:78"
      ]
    },
    "Canonical WebSocket manager imported successfully (modern features integrated)": {
      "value": "Canonical WebSocket manager imported successfully (modern features integrated)",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:47"
      ]
    },
    "Canonical WebSocket manager test failed:": {
      "value": "Canonical WebSocket manager test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:81",
        "scripts/test_modern_websocket_migration.py:114"
      ]
    },
    "Canonical WebSocket manager tests passed (replaces wrapper functionality)": {
      "value": "Canonical WebSocket manager tests passed (replaces wrapper functionality)",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:111"
      ]
    },
    "Capture event instead of sending.": {
      "value": "Capture event instead of sending.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:28"
      ]
    },
    "Capture sent WebSocket messages.": {
      "value": "Capture sent WebSocket messages.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:271",
        "scripts/test_websocket_chat_standalone.py:267"
      ]
    },
    "Cascading failure detected": {
      "value": "Cascading failure detected",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:111"
      ]
    },
    "Categories Tested:": {
      "value": "Categories Tested:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:138"
      ]
    },
    "Categories with very few tests:": {
      "value": "Categories with very few tests:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:478"
      ]
    },
    "Category": {
      "value": "Category",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45"
      ]
    },
    "Category '": {
      "value": "Category '",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459",
        "scripts/analyze_test_overlap.py:465",
        "scripts/test_dashboard.py:158"
      ]
    },
    "Category Results:": {
      "value": "Category Results:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:143"
      ]
    },
    "Category name": {
      "value": "Category name",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:441"
      ]
    },
    "Category section": {
      "value": "Category section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:361"
      ]
    },
    "Category:": {
      "value": "Category:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:179",
        "scripts/test_backend_optimized.py:126",
        "scripts/test_backend_optimized.py:424",
        "scripts/test_backend_ORIGINAL.py:368",
        "scripts/test_triage_flow.py:157"
      ]
    },
    "Certificate expires:": {
      "value": "Certificate expires:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:84"
      ]
    },
    "Certificate issuer:": {
      "value": "Certificate issuer:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:78"
      ]
    },
    "Certificate subject:": {
      "value": "Certificate subject:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:77"
      ]
    },
    "Certificate version:": {
      "value": "Certificate version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:79"
      ]
    },
    "Changes made:": {
      "value": "Changes made:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:211"
      ]
    },
    "Chat First-Load Glitch Fix Verification": {
      "value": "Chat First-Load Glitch Fix Verification",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:100"
      ]
    },
    "Chat flow test failed:": {
      "value": "Chat flow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:367"
      ]
    },
    "Check ClickHouse service health.": {
      "value": "Check ClickHouse service health.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:122"
      ]
    },
    "Check LLM service availability": {
      "value": "Check LLM service availability",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:139",
        "scripts/test_failure_analyzer.py:273"
      ]
    },
    "Check PostgreSQL service health.": {
      "value": "Check PostgreSQL service health.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:61"
      ]
    },
    "Check Redis connectivity": {
      "value": "Check Redis connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:130",
        "scripts/test_failure_analyzer.py:259"
      ]
    },
    "Check Redis service health.": {
      "value": "Check Redis service health.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:86"
      ]
    },
    "Check database connectivity": {
      "value": "Check database connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:122",
        "scripts/test_failure_analyzer.py:247"
      ]
    },
    "Check environment configuration": {
      "value": "Check environment configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:57"
      ]
    },
    "Check for deadlocks": {
      "value": "Check for deadlocks",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:116"
      ]
    },
    "Check for inter-class dependencies": {
      "value": "Check for inter-class dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:484"
      ]
    },
    "Check for memory leaks": {
      "value": "Check for memory leaks",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:397"
      ]
    },
    "Check full logs with: docker logs netra-backend --tail 50": {
      "value": "Check full logs with: docker logs netra-backend --tail 50",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:88"
      ]
    },
    "Check health of all services.": {
      "value": "Check health of all services.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:148"
      ]
    },
    "Check health of backend and auth services": {
      "value": "Check health of backend and auth services",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:99"
      ]
    },
    "Check if": {
      "value": "Check if",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:203"
      ]
    },
    "Check if a service is healthy.": {
      "value": "Check if a service is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:190"
      ]
    },
    "Check if the API is healthy.": {
      "value": "Check if the API is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:29"
      ]
    },
    "Check service health": {
      "value": "Check service health",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:88"
      ]
    },
    "Check test dependencies before running": {
      "value": "Check test dependencies before running",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:514",
        "scripts/test_frontend_ORIGINAL.py:417"
      ]
    },
    "Check that setup_test_path() is called before any netra_backend imports in test files.": {
      "value": "Check that setup_test_path() is called before any netra_backend imports in test files.",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:1"
      ]
    },
    "Check the deployment logs for JWT validation errors.": {
      "value": "Check the deployment logs for JWT validation errors.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:183"
      ]
    },
    "Check the error messages above for specific issues": {
      "value": "Check the error messages above for specific issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:324"
      ]
    },
    "Checked": {
      "value": "Checked",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:82"
      ]
    },
    "Checking": {
      "value": "Checking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:243",
        "scripts/test_staging_login_automated.py:193"
      ]
    },
    "Checking Docker Services": {
      "value": "Checking Docker Services",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:76"
      ]
    },
    "Checking JWT_SECRET_KEY usage...": {
      "value": "Checking JWT_SECRET_KEY usage...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:200"
      ]
    },
    "Checking configuration...": {
      "value": "Checking configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:184"
      ]
    },
    "Checking current test state:": {
      "value": "Checking current test state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:334"
      ]
    },
    "Checking dependencies...": {
      "value": "Checking dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:342",
        "scripts/test_frontend_ORIGINAL.py:450"
      ]
    },
    "Checking for conftest.py violations...": {
      "value": "Checking for conftest.py violations...",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:70"
      ]
    },
    "Checking for legacy CORS code:": {
      "value": "Checking for legacy CORS code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:174"
      ]
    },
    "Checking for syntax issues...": {
      "value": "Checking for syntax issues...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:346"
      ]
    },
    "Checking for test stubs in production code...": {
      "value": "Checking for test stubs in production code...",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:34"
      ]
    },
    "Checking health of all test services...": {
      "value": "Checking health of all test services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:149"
      ]
    },
    "Checking imports...": {
      "value": "Checking imports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:178",
        "scripts/test_example_message_flow.py:375"
      ]
    },
    "Checking port": {
      "value": "Checking port",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:145"
      ]
    },
    "Checking port availability...": {
      "value": "Checking port availability...",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:67"
      ]
    },
    "Checking service independence...": {
      "value": "Checking service independence...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:195"
      ]
    },
    "Checking system status...": {
      "value": "Checking system status...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:301",
        "scripts/test_websocket_chat_standalone.py:296"
      ]
    },
    "Checking tables after transaction...": {
      "value": "Checking tables after transaction...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:46"
      ]
    },
    "Checking test files in:": {
      "value": "Checking test files in:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:134"
      ]
    },
    "Circuit Breaker Migration Fix": {
      "value": "Circuit Breaker Migration Fix",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:59"
      ]
    },
    "Circuit breaker behavior detected": {
      "value": "Circuit breaker behavior detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:292"
      ]
    },
    "Circuit breaker endpoint not implemented (expected)": {
      "value": "Circuit breaker endpoint not implemented (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:295"
      ]
    },
    "Circuit breaker opened for service": {
      "value": "Circuit breaker opened for service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:110"
      ]
    },
    "Circular Reference": {
      "value": "Circular Reference",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:240"
      ]
    },
    "Circular env.ACT reference found": {
      "value": "Circular env.ACT reference found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:230"
      ]
    },
    "Classes:": {
      "value": "Classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:90",
        "scripts/compliance/test_refactor_helper.py:708"
      ]
    },
    "Classify user request type": {
      "value": "Classify user request type",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:170"
      ]
    },
    "Clean database state before each test.\n    \n    REAL DATABASE: Cleans actual PostgreSQL tables.": {
      "value": "Clean database state before each test.\n    \n    REAL DATABASE: Cleans actual PostgreSQL tables.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:261"
      ]
    },
    "Clean output sample:": {
      "value": "Clean output sample:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:51"
      ]
    },
    "Clean up Node processes on exit (automatic on Windows)": {
      "value": "Clean up Node processes on exit (automatic on Windows)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:425"
      ]
    },
    "Clean up hanging test processes": {
      "value": "Clean up hanging test processes",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:146"
      ]
    },
    "Clean up resources": {
      "value": "Clean up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:430"
      ]
    },
    "Clean up resources.": {
      "value": "Clean up resources.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:102",
        "scripts/test_cold_start_e2e.py:462"
      ]
    },
    "Cleaned": {
      "value": "Cleaned",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:108"
      ]
    },
    "Cleaning up test environment": {
      "value": "Cleaning up test environment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:88"
      ]
    },
    "Cleaning up test processes...": {
      "value": "Cleaning up test processes...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:529"
      ]
    },
    "Cleaning up test user data": {
      "value": "Cleaning up test user data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:74"
      ]
    },
    "Cleanup cancelled.": {
      "value": "Cleanup cancelled.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:113"
      ]
    },
    "Cleanup error:": {
      "value": "Cleanup error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:477"
      ]
    },
    "Cleanup functionality:": {
      "value": "Cleanup functionality:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:183"
      ]
    },
    "Cleanup result:": {
      "value": "Cleanup result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:94"
      ]
    },
    "Cleanup services after testing": {
      "value": "Cleanup services after testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:207"
      ]
    },
    "Cleanup test environment.": {
      "value": "Cleanup test environment.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:87"
      ]
    },
    "Cleanup test user data.": {
      "value": "Cleanup test user data.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:73"
      ]
    },
    "Clear Redis cache": {
      "value": "Clear Redis cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:132",
        "scripts/test_failure_analyzer.py:260"
      ]
    },
    "Clear cache before execution": {
      "value": "Clear cache before execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:385"
      ]
    },
    "Cleared Jest cache.": {
      "value": "Cleared Jest cache.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:134"
      ]
    },
    "Cleared cache directory:": {
      "value": "Cleared cache directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:407"
      ]
    },
    "ClickHouse": {
      "value": "ClickHouse",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:82"
      ]
    },
    "ClickHouse HTTP": {
      "value": "ClickHouse HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:60",
        "scripts/setup_test_environment.py:67"
      ]
    },
    "ClickHouse Host:": {
      "value": "ClickHouse Host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:62"
      ]
    },
    "ClickHouse Native": {
      "value": "ClickHouse Native",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:68"
      ]
    },
    "ClickHouse Port:": {
      "value": "ClickHouse Port:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:63"
      ]
    },
    "ClickHouse Staging Configuration Fix Tests": {
      "value": "ClickHouse Staging Configuration Fix Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:167"
      ]
    },
    "ClickHouse Startup Fix Validation Script\n\nThis script validates that the ClickHouse health check dependency fix is working correctly.\nIt tests the complete flow:\n1. Docker service dependency validation\n2. Connection retry logic with exponential backoff\n3. Connection pooling and health monitoring\n4. Analytics data consistency validation\n5. Graceful degradation when ClickHouse is unavailable\n\nUsage:\n    python scripts/test_clickhouse_startup_fix.py\n    python scripts/test_clickhouse_startup_fix.py --simulate-failure\n    python scripts/test_clickhouse_startup_fix.py --verbose": {
      "value": "ClickHouse Startup Fix Validation Script\n\nThis script validates that the ClickHouse health check dependency fix is working correctly.\nIt tests the complete flow:\n1. Docker service dependency validation\n2. Connection retry logic with exponential backoff\n3. Connection pooling and health monitoring\n4. Analytics data consistency validation\n5. Graceful degradation when ClickHouse is unavailable\n\nUsage:\n    python scripts/test_clickhouse_startup_fix.py\n    python scripts/test_clickhouse_startup_fix.py --simulate-failure\n    python scripts/test_clickhouse_startup_fix.py --verbose",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:2"
      ]
    },
    "ClickHouse TCP": {
      "value": "ClickHouse TCP",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:61",
        "scripts/test/verify_test_ports.py:28"
      ]
    },
    "ClickHouse TCP (default)": {
      "value": "ClickHouse TCP (default)",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:38"
      ]
    },
    "ClickHouse URL:": {
      "value": "ClickHouse URL:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:39",
        "scripts/test_clickhouse_staging.py:61"
      ]
    },
    "ClickHouse configuration is MANDATORY": {
      "value": "ClickHouse configuration is MANDATORY",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:54"
      ]
    },
    "ClickHouse error:": {
      "value": "ClickHouse error:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:59"
      ]
    },
    "ClickHouse is accessible": {
      "value": "ClickHouse is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:55"
      ]
    },
    "ClickHouse is ready": {
      "value": "ClickHouse is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:98"
      ]
    },
    "ClickHouse not ready after": {
      "value": "ClickHouse not ready after",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:102"
      ]
    },
    "ClickHouse returned status": {
      "value": "ClickHouse returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:57"
      ]
    },
    "ClickHouse test data seeding completed": {
      "value": "ClickHouse test data seeding completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:369"
      ]
    },
    "ClickHouse version:": {
      "value": "ClickHouse version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:95"
      ]
    },
    "ClickHouse:": {
      "value": "ClickHouse:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:92"
      ]
    },
    "ClickHouse: user=": {
      "value": "ClickHouse: user=",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:67"
      ]
    },
    "Client ID:": {
      "value": "Client ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:107",
        "scripts/test_oauth_dev_config.py:89",
        "scripts/test_oauth_dev_config.py:89"
      ]
    },
    "Client Secret:": {
      "value": "Client Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:108",
        "scripts/test_oauth_dev_config.py:95"
      ]
    },
    "Cloud SQL": {
      "value": "Cloud SQL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "Cloud SQL Configuration": {
      "value": "Cloud SQL Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:305"
      ]
    },
    "Cloud SQL Connector": {
      "value": "Cloud SQL Connector",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:176"
      ]
    },
    "Cloud SQL URL (should remove SSL parameters)": {
      "value": "Cloud SQL URL (should remove SSL parameters)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:109"
      ]
    },
    "Cloud SQL URL with SSL (should remove SSL)": {
      "value": "Cloud SQL URL with SSL (should remove SSL)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:146"
      ]
    },
    "Cloud SQL detected:": {
      "value": "Cloud SQL detected:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:82"
      ]
    },
    "Cloud SQL instance is not running or accessible": {
      "value": "Cloud SQL instance is not running or accessible",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:202"
      ]
    },
    "Cloud SQL socket connection detected": {
      "value": "Cloud SQL socket connection detected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:237"
      ]
    },
    "Code Review Agent": {
      "value": "Code Review Agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:206"
      ]
    },
    "Code:": {
      "value": "Code:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:333"
      ]
    },
    "Collected": {
      "value": "Collected",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75"
      ]
    },
    "Collection Time:": {
      "value": "Collection Time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:328"
      ]
    },
    "Collection failed:": {
      "value": "Collection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:141"
      ]
    },
    "Comma-separated file extensions to scan (default: .py)": {
      "value": "Comma-separated file extensions to scan (default: .py)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:227"
      ]
    },
    "Command": {
      "value": "Command",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:255"
      ]
    },
    "Command Syntax": {
      "value": "Command Syntax",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:130"
      ]
    },
    "Command failed:": {
      "value": "Command failed:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:105",
        "scripts/test_failure_analyzer.py:311"
      ]
    },
    "Command output:": {
      "value": "Command output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:314"
      ]
    },
    "Command syntax looks correct": {
      "value": "Command syntax looks correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:86"
      ]
    },
    "Command timed out:": {
      "value": "Command timed out:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:108",
        "scripts/test_failure_analyzer.py:317"
      ]
    },
    "Command to execute": {
      "value": "Command to execute",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:161"
      ]
    },
    "Command:": {
      "value": "Command:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:214",
        "scripts/final_test_status_check.py:17",
        "scripts/launch_test_env.py:99"
      ]
    },
    "Command: python": {
      "value": "Command: python",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:37",
        "scripts/test_verify_workflow_status_corrected.py:25"
      ]
    },
    "Commands": {
      "value": "Commands",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:669",
        "scripts/test_dashboard.py:431",
        "scripts/test_execution_tracker.py:765"
      ]
    },
    "Comment out sleep calls with optimization note": {
      "value": "Comment out sleep calls with optimization note",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:179"
      ]
    },
    "Common staging secret": {
      "value": "Common staging secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:98"
      ]
    },
    "Common test secret": {
      "value": "Common test secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:97"
      ]
    },
    "Compare blocking between send_to_user and send_to_thread.": {
      "value": "Compare blocking between send_to_user and send_to_thread.",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:137"
      ]
    },
    "Comparing send_to_user vs send_to_thread blocking": {
      "value": "Comparing send_to_user vs send_to_thread blocking",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:139"
      ]
    },
    "Complete Chat Flow": {
      "value": "Complete Chat Flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:431",
        "scripts/test_websocket_chat_standalone.py:416"
      ]
    },
    "Complete OAuth flow test - complex integration test": {
      "value": "Complete OAuth flow test - complex integration test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:226"
      ]
    },
    "Complete WebSocket Injection Fix Validation Script\n\nBusiness Value: $500K+ ARR - Ensures WebSocket injection fix remains operational\nThis script provides comprehensive validation of the WebSocket injection fix including:\n- Static code analysis to ensure injection code is present\n- Test suite execution with detailed reporting\n- Learning documentation validation\n- Business impact assessment\n\nCRITICAL: Run this script before any deployment to prevent regression\nof core chat functionality.": {
      "value": "Complete WebSocket Injection Fix Validation Script\n\nBusiness Value: $500K+ ARR - Ensures WebSocket injection fix remains operational\nThis script provides comprehensive validation of the WebSocket injection fix including:\n- Static code analysis to ensure injection code is present\n- Test suite execution with detailed reporting\n- Learning documentation validation\n- Business impact assessment\n\nCRITICAL: Run this script before any deployment to prevent regression\nof core chat functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:2"
      ]
    },
    "Complete coordination workflow successful": {
      "value": "Complete coordination workflow successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:342"
      ]
    },
    "Complete workflow should succeed": {
      "value": "Complete workflow should succeed",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:331"
      ]
    },
    "Complete workflow test failed:": {
      "value": "Complete workflow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:346"
      ]
    },
    "Completed in": {
      "value": "Completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:99",
        "scripts/test_async_serialization_direct.py:114"
      ]
    },
    "Completes correctly:": {
      "value": "Completes correctly:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:317"
      ]
    },
    "Completion Rate:": {
      "value": "Completion Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:473"
      ]
    },
    "Complex asyncio event loop issue during simulated service restart - needs investigation": {
      "value": "Complex asyncio event loop issue during simulated service restart - needs investigation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:19"
      ]
    },
    "Complex cross-service session sync simulation - asyncio issues": {
      "value": "Complex cross-service session sync simulation - asyncio issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:59"
      ]
    },
    "Complex database failover simulation - asyncio event loop issues": {
      "value": "Complex database failover simulation - asyncio event loop issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:40"
      ]
    },
    "Complex request with": {
      "value": "Complex request with",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:28"
      ]
    },
    "Complex session security test - activity tracking implementation": {
      "value": "Complex session security test - activity tracking implementation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:211"
      ]
    },
    "Complex session security test - cascade invalidation logic": {
      "value": "Complex session security test - cascade invalidation logic",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:277"
      ]
    },
    "Complex session security test - needs extensive session manager mocking": {
      "value": "Complex session security test - needs extensive session manager mocking",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:113"
      ]
    },
    "Complex session security test - timeout enforcement mocking": {
      "value": "Complex session security test - timeout enforcement mocking",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:173"
      ]
    },
    "Compliance Rate:": {
      "value": "Compliance Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:53"
      ]
    },
    "Compliant Files:": {
      "value": "Compliant Files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:52"
      ]
    },
    "Component isolation tests (1-2min)": {
      "value": "Component isolation tests (1-2min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:32"
      ]
    },
    "Components:": {
      "value": "Components:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:204"
      ]
    },
    "Compose file:": {
      "value": "Compose file:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:296"
      ]
    },
    "Comprehensive Auth Service Test Suite\n====================================\n\nThis file consolidates all auth service testing functionality into a single comprehensive suite.\nReplaces the previous 89 test files with focused, complete test coverage.\n\nBusiness Value Justification (BVJ):\n- Segment: All tiers | Goal: System Stability | Impact: Critical path protection\n- Consolidates 89 test files into single comprehensive suite\n- Maintains 100% critical path coverage with zero duplication\n- Enables fast feedback loops for auth service changes\n\nTest Coverage:\n- OAuth flows (Google, GitHub, Local)\n- JWT token handling and validation  \n- Database operations and connections\n- Error handling and edge cases\n- Security scenarios and CSRF protection\n- Configuration and environment handling\n- API endpoints and HTTP methods\n- Redis connection and failover": {
      "value": "Comprehensive Auth Service Test Suite\n====================================\n\nThis file consolidates all auth service testing functionality into a single comprehensive suite.\nReplaces the previous 89 test files with focused, complete test coverage.\n\nBusiness Value Justification (BVJ):\n- Segment: All tiers | Goal: System Stability | Impact: Critical path protection\n- Consolidates 89 test files into single comprehensive suite\n- Maintains 100% critical path coverage with zero duplication\n- Enables fast feedback loops for auth service changes\n\nTest Coverage:\n- OAuth flows (Google, GitHub, Local)\n- JWT token handling and validation  \n- Database operations and connections\n- Error handling and edge cases\n- Security scenarios and CSRF protection\n- Configuration and environment handling\n- API endpoints and HTTP methods\n- Redis connection and failover",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:1"
      ]
    },
    "Comprehensive Authentication Audit Test Suite\nTests authentication with increasing complexity to ensure robustness": {
      "value": "Comprehensive Authentication Audit Test Suite\nTests authentication with increasing complexity to ensure robustness",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:1"
      ]
    },
    "Comprehensive Fake Test Scan Results": {
      "value": "Comprehensive Fake Test Scan Results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:402"
      ]
    },
    "Comprehensive GitHub Workflows Testing with ACT\nTests all workflows locally to validate before pushing to GitHub": {
      "value": "Comprehensive GitHub Workflows Testing with ACT\nTests all workflows locally to validate before pushing to GitHub",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:2"
      ]
    },
    "Comprehensive OAuth state validation test.\nTests the OAuth flow state parameter validation to prevent CSRF attacks.": {
      "value": "Comprehensive OAuth state validation test.\nTests the OAuth flow state parameter validation to prevent CSRF attacks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:1"
      ]
    },
    "Comprehensive Refresh Loop Prevention Test Suite\nEnsures that the auth service NEVER causes refresh loops": {
      "value": "Comprehensive Refresh Loop Prevention Test Suite\nEnsures that the auth service NEVER causes refresh loops",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:1"
      ]
    },
    "Comprehensive Staging Environment Test Suite\n============================================\nDirect testing of staging services with real endpoints and comprehensive validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal \n- Business Goal: Risk Reduction and Platform Stability\n- Value Impact: Ensures staging environment reliability before production deployment\n- Strategic Impact: Prevents production outages and enables confident releases": {
      "value": "Comprehensive Staging Environment Test Suite\n============================================\nDirect testing of staging services with real endpoints and comprehensive validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal \n- Business Goal: Risk Reduction and Platform Stability\n- Value Impact: Ensures staging environment reliability before production deployment\n- Strategic Impact: Prevents production outages and enables confident releases",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:2"
      ]
    },
    "Comprehensive Staging WebSocket Test Runner\n\nThis script provides comprehensive testing of WebSocket functionality in staging environment.\nIt validates all critical WebSocket features including authentication, SSL/TLS, event tracking,\nand agent flow validation.\n\nBusiness Value:\n- Validates staging WebSocket before production deployment\n- Prevents $50K+ MRR loss from WebSocket failures\n- Ensures agent event tracking works correctly in production-like environment\n\nUsage:\n    python scripts/test_staging_websocket_comprehensive.py\n    python scripts/test_staging_websocket_comprehensive.py --quick\n    python scripts/test_staging_websocket_comprehensive.py --debug": {
      "value": "Comprehensive Staging WebSocket Test Runner\n\nThis script provides comprehensive testing of WebSocket functionality in staging environment.\nIt validates all critical WebSocket features including authentication, SSL/TLS, event tracking,\nand agent flow validation.\n\nBusiness Value:\n- Validates staging WebSocket before production deployment\n- Prevents $50K+ MRR loss from WebSocket failures\n- Ensures agent event tracking works correctly in production-like environment\n\nUsage:\n    python scripts/test_staging_websocket_comprehensive.py\n    python scripts/test_staging_websocket_comprehensive.py --quick\n    python scripts/test_staging_websocket_comprehensive.py --debug",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:2"
      ]
    },
    "Comprehensive Test Fixer - Analyzes and fixes all test failures systematically": {
      "value": "Comprehensive Test Fixer - Analyzes and fixes all test failures systematically",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:2"
      ]
    },
    "Comprehensive Unit Tests for DataValidator\n\nTests all data validation operations including request validation,\nraw data quality checks, analysis result validation, and quality scoring.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Data quality assurance and reliable analytics\n- Value Impact: Prevents incorrect insights that could impact revenue\n- Strategic Impact: Critical for data integrity and trustworthy analysis": {
      "value": "Comprehensive Unit Tests for DataValidator\n\nTests all data validation operations including request validation,\nraw data quality checks, analysis result validation, and quality scoring.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Data quality assurance and reliable analytics\n- Value Impact: Prevents incorrect insights that could impact revenue\n- Strategic Impact: Critical for data integrity and trustworthy analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:1"
      ]
    },
    "Comprehensive WebSocket CORS Test Script\n\nThis script tests WebSocket connectivity in various scenarios to ensure CORS is properly configured\nfor Docker development environment. It tests connections with different origins and validates\nthat the development OAUTH SIMULATION works properly.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Ensure WebSocket reliability in development\n- Value Impact: Prevents connection issues that block development\n- Strategic Impact: Foundation for real-time features": {
      "value": "Comprehensive WebSocket CORS Test Script\n\nThis script tests WebSocket connectivity in various scenarios to ensure CORS is properly configured\nfor Docker development environment. It tests connections with different origins and validates\nthat the development OAUTH SIMULATION works properly.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Ensure WebSocket reliability in development\n- Value Impact: Prevents connection issues that block development\n- Strategic Impact: Foundation for real-time features",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:2"
      ]
    },
    "Comprehensive backend test runner for Netra AI Platform": {
      "value": "Comprehensive backend test runner for Netra AI Platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:438"
      ]
    },
    "Comprehensive fake test detection and reporting": {
      "value": "Comprehensive fake test detection and reporting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:361"
      ]
    },
    "Comprehensive frontend test runner for Netra AI Platform": {
      "value": "Comprehensive frontend test runner for Netra AI Platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:351"
      ]
    },
    "Comprehensive report saved to": {
      "value": "Comprehensive report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:353"
      ]
    },
    "Comprehensive script to fix all test import errors systematically.\nAnalyzes failing test files and fixes common import patterns.": {
      "value": "Comprehensive script to fix all test import errors systematically.\nAnalyzes failing test files and fixes common import patterns.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:2"
      ]
    },
    "Comprehensive staging WebSocket test runner": {
      "value": "Comprehensive staging WebSocket test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:411"
      ]
    },
    "Comprehensive staging deployment validation script.\nTests all critical endpoints and services on staging environment.": {
      "value": "Comprehensive staging deployment validation script.\nTests all critical endpoints and services on staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:2"
      ]
    },
    "Comprehensive staging test: What is 2+2 and provide the calculation steps?": {
      "value": "Comprehensive staging test: What is 2+2 and provide the calculation steps?",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:149"
      ]
    },
    "Comprehensive suffix": {
      "value": "Comprehensive suffix",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:103"
      ]
    },
    "Comprehensive system-wide tests": {
      "value": "Comprehensive system-wide tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:121"
      ]
    },
    "Comprehensive test of DatabaseURLBuilder functionality and edge cases.": {
      "value": "Comprehensive test of DatabaseURLBuilder functionality and edge cases.",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:1"
      ]
    },
    "Comprehensive test scanner to find all failures.": {
      "value": "Comprehensive test scanner to find all failures.",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:2"
      ]
    },
    "Comprehensive test size limits validator for Netra testing system.\n\nEnforces SPEC/testing.xml requirements:\n- Test files MUST follow same 450-line limit as production code\n- Test functions MUST follow same 25-line limit as production code\n- Prevents test files from becoming unmaintainable \"ravioli code\"\n\nFeatures:\n- Scans all test files for size violations\n- Reports files exceeding 300 lines\n- Reports functions exceeding 8 lines  \n- Provides refactoring suggestions\n- Can auto-split large test files\n- Integration with test runner": {
      "value": "Comprehensive test size limits validator for Netra testing system.\n\nEnforces SPEC/testing.xml requirements:\n- Test files MUST follow same 450-line limit as production code\n- Test functions MUST follow same 25-line limit as production code\n- Prevents test files from becoming unmaintainable \"ravioli code\"\n\nFeatures:\n- Scans all test files for size violations\n- Reports files exceeding 300 lines\n- Reports functions exceeding 8 lines  \n- Provides refactoring suggestions\n- Can auto-split large test files\n- Integration with test runner",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:2"
      ]
    },
    "Comprehensive test suite for auth refresh endpoint field naming compatibility.\nTests various field naming conventions and error scenarios.": {
      "value": "Comprehensive test suite for auth refresh endpoint field naming compatibility.\nTests various field naming conventions and error scenarios.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:1"
      ]
    },
    "Comprehensive tests for Redis connectivity fixes in staging environment.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: System Reliability and Monitoring\n- Value Impact: Ensures auth service functions correctly with/without Redis\n- Strategic Impact: Prevents service degradation and improves observability\n\nThese tests validate the Redis connectivity improvements made to fix the\nstaging environment degraded status issue.": {
      "value": "Comprehensive tests for Redis connectivity fixes in staging environment.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: System Reliability and Monitoring\n- Value Impact: Ensures auth service functions correctly with/without Redis\n- Strategic Impact: Prevents service degradation and improves observability\n\nThese tests validate the Redis connectivity improvements made to fix the\nstaging environment degraded status issue.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:1"
      ]
    },
    "Comprehensive tests for user signup flow with edge cases\nTests database persistence, password hashing, validation, and error handling": {
      "value": "Comprehensive tests for user signup flow with edge cases\nTests database persistence, password hashing, validation, and error handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:1"
      ]
    },
    "Computed startup order:": {
      "value": "Computed startup order:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:90"
      ]
    },
    "Concurrency improvement:": {
      "value": "Concurrency improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:225"
      ]
    },
    "Concurrent Serialization Stress Test": {
      "value": "Concurrent Serialization Stress Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:229"
      ]
    },
    "Concurrent execution total:": {
      "value": "Concurrent execution total:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:212"
      ]
    },
    "Concurrent operations blocking test:": {
      "value": "Concurrent operations blocking test:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:243"
      ]
    },
    "Concurrent session limit verified": {
      "value": "Concurrent session limit verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:170"
      ]
    },
    "Concurrent time:": {
      "value": "Concurrent time:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:157"
      ]
    },
    "Concurrent token validation verified:": {
      "value": "Concurrent token validation verified:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:275"
      ]
    },
    "Concurrent vs Sequential Processing Test": {
      "value": "Concurrent vs Sequential Processing Test",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:134"
      ]
    },
    "Concurrent:": {
      "value": "Concurrent:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:163"
      ]
    },
    "Confidence:": {
      "value": "Confidence:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:97",
        "scripts/compliance/test_refactor_helper.py:722"
      ]
    },
    "Config Valid:": {
      "value": "Config Valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:462"
      ]
    },
    "Config endpoint failed:": {
      "value": "Config endpoint failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:52"
      ]
    },
    "Config endpoint returned": {
      "value": "Config endpoint returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:105"
      ]
    },
    "Config endpoint returned:": {
      "value": "Config endpoint returned:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:49"
      ]
    },
    "Config endpoint test failed:": {
      "value": "Config endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:109"
      ]
    },
    "Config keys:": {
      "value": "Config keys:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:48"
      ]
    },
    "Config missing database_url": {
      "value": "Config missing database_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:133"
      ]
    },
    "Config missing jwt_secret": {
      "value": "Config missing jwt_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:132"
      ]
    },
    "Configuration Files:": {
      "value": "Configuration Files:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:281"
      ]
    },
    "Configuration Inconsistencies:": {
      "value": "Configuration Inconsistencies:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:220"
      ]
    },
    "Configuration Loading": {
      "value": "Configuration Loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:237"
      ]
    },
    "Configuration Loading Test": {
      "value": "Configuration Loading Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:30"
      ]
    },
    "Configuration Test:": {
      "value": "Configuration Test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:111",
        "scripts/test_auth_service_integration_fix.py:196"
      ]
    },
    "Configuration error:": {
      "value": "Configuration error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:69"
      ]
    },
    "Configuration failed to load": {
      "value": "Configuration failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:62"
      ]
    },
    "Configuration file not found:": {
      "value": "Configuration file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:198"
      ]
    },
    "Configuration fixes applied:": {
      "value": "Configuration fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:428"
      ]
    },
    "Configuration from environment:": {
      "value": "Configuration from environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:41"
      ]
    },
    "Configuration reloaded": {
      "value": "Configuration reloaded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:132"
      ]
    },
    "Configuration summary:": {
      "value": "Configuration summary:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:119"
      ]
    },
    "Configuration updated successfully.": {
      "value": "Configuration updated successfully.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:217"
      ]
    },
    "Configuration valid:": {
      "value": "Configuration valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:226",
        "scripts/test_staging_migrations.py:57"
      ]
    },
    "Configuration validation failed - aborting tests": {
      "value": "Configuration validation failed - aborting tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:267"
      ]
    },
    "Configuration validation failed! Binding port": {
      "value": "Configuration validation failed! Binding port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:290"
      ]
    },
    "Configuration validation failed:": {
      "value": "Configuration validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:76",
        "scripts/test_example_message_flow.py:243",
        "scripts/test_staging_websocket_comprehensive.py:93"
      ]
    },
    "Configuration validation should catch port mismatches gracefully, but got exception:": {
      "value": "Configuration validation should catch port mismatches gracefully, but got exception:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:298"
      ]
    },
    "Configuration:": {
      "value": "Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:105"
      ]
    },
    "Confirm password:": {
      "value": "Confirm password:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:170"
      ]
    },
    "Confirmation rate:": {
      "value": "Confirmation rate:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:268"
      ]
    },
    "Confirmation tests:": {
      "value": "Confirmation tests:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:267"
      ]
    },
    "Connected": {
      "value": "Connected",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:83"
      ]
    },
    "Connected test users:": {
      "value": "Connected test users:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:156"
      ]
    },
    "Connected to test WebSocket!": {
      "value": "Connected to test WebSocket!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:63"
      ]
    },
    "Connected user": {
      "value": "Connected user",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:269",
        "scripts/test_agent_pipeline_simple.py:340",
        "scripts/test_websocket_standalone.py:120"
      ]
    },
    "Connecting to:": {
      "value": "Connecting to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:158"
      ]
    },
    "Connection": {
      "value": "Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:184"
      ]
    },
    "Connection Analysis:": {
      "value": "Connection Analysis:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:194"
      ]
    },
    "Connection Issue Analysis": {
      "value": "Connection Issue Analysis",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:222"
      ]
    },
    "Connection Manager Initialization": {
      "value": "Connection Manager Initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:39"
      ]
    },
    "Connection Pooling URLs": {
      "value": "Connection Pooling URLs",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:310"
      ]
    },
    "Connection Retry Logic": {
      "value": "Connection Retry Logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:84"
      ]
    },
    "Connection Tests:": {
      "value": "Connection Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:292"
      ]
    },
    "Connection closed:": {
      "value": "Connection closed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:124"
      ]
    },
    "Connection established (no response within timeout)": {
      "value": "Connection established (no response within timeout)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:107"
      ]
    },
    "Connection failed": {
      "value": "Connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:98",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:99"
      ]
    },
    "Connection lost": {
      "value": "Connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:167",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:168",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:169"
      ]
    },
    "Connection manager not available": {
      "value": "Connection manager not available",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:157",
        "scripts/test_clickhouse_startup_fix.py:194"
      ]
    },
    "Connection pool exhausted, queuing request": {
      "value": "Connection pool exhausted, queuing request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:103"
      ]
    },
    "Connection recovery within 5 seconds:": {
      "value": "Connection recovery within 5 seconds:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:317"
      ]
    },
    "Connection refused to Redis server": {
      "value": "Connection refused to Redis server",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:432"
      ]
    },
    "Connection refused to database": {
      "value": "Connection refused to database",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:303"
      ]
    },
    "Connection refused: Too many connections": {
      "value": "Connection refused: Too many connections",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:109"
      ]
    },
    "Connection state:": {
      "value": "Connection state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:68"
      ]
    },
    "Connection status endpoint error:": {
      "value": "Connection status endpoint error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:245"
      ]
    },
    "Connection successful, no response to test message (expected)": {
      "value": "Connection successful, no response to test message (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:172"
      ]
    },
    "Connection test failed:": {
      "value": "Connection test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:134"
      ]
    },
    "Connection test passed (success rate:": {
      "value": "Connection test passed (success rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:128"
      ]
    },
    "Connection type:": {
      "value": "Connection type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "Connection type: Cloud SQL Unix Socket": {
      "value": "Connection type: Cloud SQL Unix Socket",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:44"
      ]
    },
    "Connection type: TCP": {
      "value": "Connection type: TCP",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:49"
      ]
    },
    "Connectivity Test:": {
      "value": "Connectivity Test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:112",
        "scripts/test_auth_service_integration_fix.py:197"
      ]
    },
    "Consider cluster-wide CPU optimization": {
      "value": "Consider cluster-wide CPU optimization",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:440"
      ]
    },
    "Consider exposing useful headers (X-Request-ID, etc.)": {
      "value": "Consider exposing useful headers (X-Request-ID, etc.)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:357"
      ]
    },
    "Consider increasing max_age to reduce preflight requests": {
      "value": "Consider increasing max_age to reduce preflight requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:352"
      ]
    },
    "Consider optimizing slow queries": {
      "value": "Consider optimizing slow queries",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:325"
      ]
    },
    "Consistently Failing Tests:": {
      "value": "Consistently Failing Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:296"
      ]
    },
    "Constructor accepts websocket_manager parameter": {
      "value": "Constructor accepts websocket_manager parameter",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:214"
      ]
    },
    "Constructor does not accept websocket_manager parameter": {
      "value": "Constructor does not accept websocket_manager parameter",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:222"
      ]
    },
    "Container ID:": {
      "value": "Container ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:147"
      ]
    },
    "Container output:": {
      "value": "Container output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:54"
      ]
    },
    "Content-Type": {
      "value": "Content-Type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:490",
        "auth_service/tests/test_auth_comprehensive_audit.py:285",
        "auth_service/tests/test_critical_bugs.py:101",
        "auth_service/tests/test_critical_bugs.py:109",
        "auth_service/tests/test_critical_bugs.py:146",
        "auth_service/tests/test_critical_bugs.py:194",
        "auth_service/tests/test_critical_bugs.py:224",
        "auth_service/tests/test_critical_bugs.py:272",
        "auth_service/tests/test_critical_bugs.py:314",
        "auth_service/tests/test_critical_bugs.py:347"
      ]
    },
    "Content-Type, Authorization": {
      "value": "Content-Type, Authorization",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:24",
        "scripts/test_cors_implementation.py:52"
      ]
    },
    "Content-Type,Authorization": {
      "value": "Content-Type,Authorization",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:257",
        "scripts/test_staging_auth_flow.py:89",
        "scripts/test_staging_cors.py:22"
      ]
    },
    "Continue anyway? (y/n):": {
      "value": "Continue anyway? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:151"
      ]
    },
    "Continue testing even after failures": {
      "value": "Continue testing even after failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:58"
      ]
    },
    "Coordination should succeed with optional service failures": {
      "value": "Coordination should succeed with optional service failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:260"
      ]
    },
    "Core AI optimization delivering 30-50% cost savings for": {
      "value": "Core AI optimization delivering 30-50% cost savings for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:491"
      ]
    },
    "Core WebSocket imports failed:": {
      "value": "Core WebSocket imports failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:92"
      ]
    },
    "Core WebSocket imports successful (no legacy dependencies)": {
      "value": "Core WebSocket imports successful (no legacy dependencies)",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:89"
      ]
    },
    "Core functionality unit tests": {
      "value": "Core functionality unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:48"
      ]
    },
    "Core logic failed:": {
      "value": "Core logic failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:26"
      ]
    },
    "Correct session state validation should succeed": {
      "value": "Correct session state validation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:205"
      ]
    },
    "Corrected test suite for verify_workflow_status.py\n\nTests various scenarios with proper expected behavior validation.": {
      "value": "Corrected test suite for verify_workflow_status.py\n\nTests various scenarios with proper expected behavior validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:2"
      ]
    },
    "Cost Optimization": {
      "value": "Cost Optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:31"
      ]
    },
    "Cost optimization opportunities identified": {
      "value": "Cost optimization opportunities identified",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:322"
      ]
    },
    "Cost savings of $1,200/month achieved.": {
      "value": "Cost savings of $1,200/month achieved.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:219"
      ]
    },
    "CostOptimizationAgent": {
      "value": "CostOptimizationAgent",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:56"
      ]
    },
    "Could not auto-fix syntax in:": {
      "value": "Could not auto-fix syntax in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:367"
      ]
    },
    "Could not connect to PostgreSQL on ports 5432 or 5433": {
      "value": "Could not connect to PostgreSQL on ports 5432 or 5433",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:156"
      ]
    },
    "Could not create module spec for": {
      "value": "Could not create module spec for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:80"
      ]
    },
    "Could not decode token:": {
      "value": "Could not decode token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:99"
      ]
    },
    "Could not extract failures:": {
      "value": "Could not extract failures:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:851"
      ]
    },
    "Could not get npm test output:": {
      "value": "Could not get npm test output:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:297"
      ]
    },
    "Could not get streams:": {
      "value": "Could not get streams:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:75"
      ]
    },
    "Could not import JWTGenerationTestManager:": {
      "value": "Could not import JWTGenerationTestManager:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_framework/test_managers.py:18"
      ]
    },
    "Could not load progress file:": {
      "value": "Could not load progress file:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:166"
      ]
    },
    "Could not parse JSON results:": {
      "value": "Could not parse JSON results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:147"
      ]
    },
    "Could not parse message as JSON": {
      "value": "Could not parse message as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:102"
      ]
    },
    "Could not parse test output:": {
      "value": "Could not parse test output:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:245"
      ]
    },
    "Could not read MessageHandlerService file:": {
      "value": "Could not read MessageHandlerService file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:203"
      ]
    },
    "Could not read document:": {
      "value": "Could not read document:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:422"
      ]
    },
    "Could not read file:": {
      "value": "Could not read file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:148",
        "scripts/compliance/real_test_requirements_enforcer.py:180",
        "scripts/compliance/real_test_validator.py:103",
        "scripts/test_websocket_injection_fix_complete.py:144"
      ]
    },
    "Could not save progress:": {
      "value": "Could not save progress:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:184"
      ]
    },
    "Could not save report to": {
      "value": "Could not save report to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:355"
      ]
    },
    "Could not save report to file:": {
      "value": "Could not save report to file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:667"
      ]
    },
    "Could not spawn analysis agent for": {
      "value": "Could not spawn analysis agent for",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:293"
      ]
    },
    "Could not validate test file": {
      "value": "Could not validate test file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:746"
      ]
    },
    "Coverage": {
      "value": "Coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:114"
      ]
    },
    "Coverage Analysis": {
      "value": "Coverage Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:344",
        "scripts/run_supervisor_test_coverage.py:352"
      ]
    },
    "Coverage System Validation Script\nTests that coverage reporting system works properly with pytest": {
      "value": "Coverage System Validation Script\nTests that coverage reporting system works properly with pytest",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:2"
      ]
    },
    "Coverage:": {
      "value": "Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:370"
      ]
    },
    "Create a knowledge base for AI optimization": {
      "value": "Create a knowledge base for AI optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:53",
        "scripts/test_corpus_admin_simple.py:52"
      ]
    },
    "Create a thread for testing without authentication.\n    ONLY available in development environment.": {
      "value": "Create a thread for testing without authentication.\n    ONLY available in development environment.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:23"
      ]
    },
    "Create an authenticated user and return tokens": {
      "value": "Create an authenticated user and return tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:233"
      ]
    },
    "Create auth service with real dependencies.": {
      "value": "Create auth service with real dependencies.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:284"
      ]
    },
    "Create isolated session manager for testing.": {
      "value": "Create isolated session manager for testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:41"
      ]
    },
    "Create mock repository factory": {
      "value": "Create mock repository factory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:42"
      ]
    },
    "Create real Redis manager using test environment.": {
      "value": "Create real Redis manager using test environment.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:147"
      ]
    },
    "Create real repository factory using test environment.": {
      "value": "Create real repository factory using test environment.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:60"
      ]
    },
    "Create real repository factory with test environment": {
      "value": "Create real repository factory with test environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:33"
      ]
    },
    "Create tests in appropriate directory for": {
      "value": "Create tests in appropriate directory for",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:116"
      ]
    },
    "Created": {
      "value": "Created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283",
        "scripts/test_blocking_analysis.py:237",
        "scripts/test_seed_data.py:153",
        "scripts/test_seed_data.py:174",
        "scripts/test_seed_data.py:192",
        "scripts/test_seed_data.py:232"
      ]
    },
    "Created UserFlowTestBase using unittest.TestCase": {
      "value": "Created UserFlowTestBase using unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:104"
      ]
    },
    "Created backup directory:": {
      "value": "Created backup directory:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:755"
      ]
    },
    "Created execution context for run_id:": {
      "value": "Created execution context for run_id:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:134"
      ]
    },
    "Created mock Agent and AgentRun models": {
      "value": "Created mock Agent and AgentRun models",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:134"
      ]
    },
    "Created mock AgentRun model": {
      "value": "Created mock AgentRun model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:129"
      ]
    },
    "Created mock ClickHouseManager for tests": {
      "value": "Created mock ClickHouseManager for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:80"
      ]
    },
    "Created mock ConversionEvent for tests": {
      "value": "Created mock ConversionEvent for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:87"
      ]
    },
    "Created mock Message model": {
      "value": "Created mock Message model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:116"
      ]
    },
    "Created mock Team for tests": {
      "value": "Created mock Team for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:92"
      ]
    },
    "Created mock Thread model": {
      "value": "Created mock Thread model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:111"
      ]
    },
    "Created mock database test fixtures": {
      "value": "Created mock database test fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:99"
      ]
    },
    "Created mock user journey data": {
      "value": "Created mock user journey data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:122"
      ]
    },
    "Created nightmare object with ~": {
      "value": "Created nightmare object with ~",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:139"
      ]
    },
    "Created object with ~": {
      "value": "Created object with ~",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:62"
      ]
    },
    "Created pipeline with": {
      "value": "Created pipeline with",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:350"
      ]
    },
    "Created split file:": {
      "value": "Created split file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:539"
      ]
    },
    "Created utilities file:": {
      "value": "Created utilities file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:567"
      ]
    },
    "Created:": {
      "value": "Created:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:478"
      ]
    },
    "Creating": {
      "value": "Creating",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:90"
      ]
    },
    "Creating LLM config...": {
      "value": "Creating LLM config...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:23"
      ]
    },
    "Creating TF-IDF vectors...": {
      "value": "Creating TF-IDF vectors...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:246"
      ]
    },
    "Creating TriageSubAgent with mocked dependencies...": {
      "value": "Creating TriageSubAgent with mocked dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:186"
      ]
    },
    "Creating comprehensive test documentation...": {
      "value": "Creating comprehensive test documentation...",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:503"
      ]
    },
    "Creating corpus admin agent...": {
      "value": "Creating corpus admin agent...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:34",
        "scripts/test_corpus_admin_simple.py:33"
      ]
    },
    "Creating deep state...": {
      "value": "Creating deep state...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:51",
        "scripts/test_corpus_admin_simple.py:50"
      ]
    },
    "Creating fix tasks for all failures...": {
      "value": "Creating fix tasks for all failures...",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:214"
      ]
    },
    "Creating mock LLM manager...": {
      "value": "Creating mock LLM manager...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:22"
      ]
    },
    "Creating new user account...": {
      "value": "Creating new user account...",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:163"
      ]
    },
    "Creating tables...": {
      "value": "Creating tables...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:35"
      ]
    },
    "Creating test session...": {
      "value": "Creating test session...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:53"
      ]
    },
    "Creating test thread for user": {
      "value": "Creating test thread for user",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:42"
      ]
    },
    "Creating tool dispatcher...": {
      "value": "Creating tool dispatcher...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:29",
        "scripts/test_corpus_admin_simple.py:28"
      ]
    },
    "Credentials check:": {
      "value": "Credentials check:",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:65"
      ]
    },
    "Criteria Failed:": {
      "value": "Criteria Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:548"
      ]
    },
    "Criteria Met:": {
      "value": "Criteria Met:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:547"
      ]
    },
    "Critical": {
      "value": "Critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:166"
      ]
    },
    "Critical - API endpoints": {
      "value": "Critical - API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:39"
      ]
    },
    "Critical - Core functionality": {
      "value": "Critical - Core functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:38"
      ]
    },
    "Critical - Database": {
      "value": "Critical - Database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:41"
      ]
    },
    "Critical - Security": {
      "value": "Critical - Security",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:40"
      ]
    },
    "Critical Auth Service Bug Tests - REAL SERVICES ONLY\n\nTests for critical bugs in auth service using real services and connections.\nNO MOCKS per CLAUDE.md policy - uses real FastAPI test client and actual service behavior.\n\nBusiness Value Justification (BVJ):\n- Segment: All tiers | Goal: System Stability | Impact: Critical path protection\n- Tests demonstrate actual auth service behavior without mocks\n- Validates real request/response handling\n- Ensures real database and service interactions work correctly": {
      "value": "Critical Auth Service Bug Tests - REAL SERVICES ONLY\n\nTests for critical bugs in auth service using real services and connections.\nNO MOCKS per CLAUDE.md policy - uses real FastAPI test client and actual service behavior.\n\nBusiness Value Justification (BVJ):\n- Segment: All tiers | Goal: System Stability | Impact: Critical path protection\n- Tests demonstrate actual auth service behavior without mocks\n- Validates real request/response handling\n- Ensures real database and service interactions work correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:1"
      ]
    },
    "Critical Components:": {
      "value": "Critical Components:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:142"
      ]
    },
    "Critical Errors:": {
      "value": "Critical Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:51"
      ]
    },
    "Critical Session Security Tests - Cycles 36-40\nTests revenue-critical session management security patterns.\n\nBusiness Value Justification:\n- Segment: Enterprise customers requiring session security\n- Business Goal: Prevent $2.8M annual revenue loss from session hijacking\n- Value Impact: Ensures secure session management for enterprise workflows\n- Strategic Impact: Enables compliance with security frameworks (SOC 2, ISO 27001)\n\nCycles Covered: 36, 37, 38, 39, 40": {
      "value": "Critical Session Security Tests - Cycles 36-40\nTests revenue-critical session management security patterns.\n\nBusiness Value Justification:\n- Segment: Enterprise customers requiring session security\n- Business Goal: Prevent $2.8M annual revenue loss from session hijacking\n- Value Impact: Ensures secure session management for enterprise workflows\n- Strategic Impact: Enables compliance with security frameworks (SOC 2, ISO 27001)\n\nCycles Covered: 36, 37, 38, 39, 40",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:1"
      ]
    },
    "Critical Test Suites:": {
      "value": "Critical Test Suites:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:650"
      ]
    },
    "Critical Tests (90+ score):": {
      "value": "Critical Tests (90+ score):",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:750"
      ]
    },
    "Critical Token Validation Security Tests - Cycles 31-35\nTests revenue-critical authentication token security patterns.\n\nBusiness Value Justification:\n- Segment: All customer segments requiring secure authentication\n- Business Goal: Prevent $3.2M annual revenue loss from security breaches\n- Value Impact: Ensures enterprise-grade authentication security\n- Strategic Impact: Enables SOC 2 compliance and enterprise customer acquisition\n\nCycles Covered: 31, 32, 33, 34, 35": {
      "value": "Critical Token Validation Security Tests - Cycles 31-35\nTests revenue-critical authentication token security patterns.\n\nBusiness Value Justification:\n- Segment: All customer segments requiring secure authentication\n- Business Goal: Prevent $3.2M annual revenue loss from security breaches\n- Value Impact: Ensures enterprise-grade authentication security\n- Strategic Impact: Enables SOC 2 compliance and enterprise customer acquisition\n\nCycles Covered: 31, 32, 33, 34, 35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:1"
      ]
    },
    "Critical bugs tests loaded - ZERO MOCKS, 100% REAL SERVICES": {
      "value": "Critical bugs tests loaded - ZERO MOCKS, 100% REAL SERVICES",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:433"
      ]
    },
    "Critical deployment should fail": {
      "value": "Critical deployment should fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:205"
      ]
    },
    "Critical error after deployment": {
      "value": "Critical error after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:151"
      ]
    },
    "Critical errors:": {
      "value": "Critical errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:99"
      ]
    },
    "Critical events are being sent during execution": {
      "value": "Critical events are being sent during execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:189"
      ]
    },
    "Critical failures:": {
      "value": "Critical failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:518"
      ]
    },
    "Critical messages preserved:": {
      "value": "Critical messages preserved:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:218"
      ]
    },
    "Critical messages sent:": {
      "value": "Critical messages sent:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:217"
      ]
    },
    "Critical path tests that protect revenue": {
      "value": "Critical path tests that protect revenue",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:80"
      ]
    },
    "Critical suffix": {
      "value": "Critical suffix",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:101"
      ]
    },
    "Critical test for refresh token fix - ensures the exact staging bug is resolved": {
      "value": "Critical test for refresh token fix - ensures the exact staging bug is resolved",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:1"
      ]
    },
    "Cross-service auth failed:": {
      "value": "Cross-service auth failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:130"
      ]
    },
    "Cross-session state validation should fail": {
      "value": "Cross-session state validation should fail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:201"
      ]
    },
    "Current Environment Variables:": {
      "value": "Current Environment Variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:152"
      ]
    },
    "Current async serialization implementation appears sufficient": {
      "value": "Current async serialization implementation appears sufficient",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:365"
      ]
    },
    "Current implementation that uses sync serialization - BLOCKS EVENT LOOP\n        \n        This simulates the actual method in websocket_core/manager.py line 810": {
      "value": "Current implementation that uses sync serialization - BLOCKS EVENT LOOP\n        \n        This simulates the actual method in websocket_core/manager.py line 810",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:69"
      ]
    },
    "Current iteration:": {
      "value": "Current iteration:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:766"
      ]
    },
    "Current performance overhead:": {
      "value": "Current performance overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:650"
      ]
    },
    "Current revision:": {
      "value": "Current revision:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:157"
      ]
    },
    "Current size:": {
      "value": "Current size:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:193"
      ]
    },
    "Current state:": {
      "value": "Current state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:534"
      ]
    },
    "Current test file counts by category:": {
      "value": "Current test file counts by category:",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:498"
      ]
    },
    "Current time:": {
      "value": "Current time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:47"
      ]
    },
    "Current:": {
      "value": "Current:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:154",
        "scripts/test_staging_auth.py:77"
      ]
    },
    "Custom cache directory": {
      "value": "Custom cache directory",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:381"
      ]
    },
    "CustomCORSMiddleware": {
      "value": "CustomCORSMiddleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:169"
      ]
    },
    "Customer Support Agent": {
      "value": "Customer Support Agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:198"
      ]
    },
    "Customer-facing functionality": {
      "value": "Customer-facing functionality",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:404"
      ]
    },
    "Cycle 36: Test session hijacking prevention through client fingerprinting.\n        \n        Revenue Protection: $560K annually from preventing session hijacking.": {
      "value": "Cycle 36: Test session hijacking prevention through client fingerprinting.\n        \n        Revenue Protection: $560K annually from preventing session hijacking.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:56"
      ]
    },
    "Cycle 37: Test concurrent session limit prevents unauthorized account sharing.\n        \n        Revenue Protection: $420K annually from preventing account sharing abuse.": {
      "value": "Cycle 37: Test concurrent session limit prevents unauthorized account sharing.\n        \n        Revenue Protection: $420K annually from preventing account sharing abuse.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:115"
      ]
    },
    "Cycle 38: Test session timeout enforcement prevents stale session access.\n        \n        Revenue Protection: $380K annually from preventing stale session abuse.": {
      "value": "Cycle 38: Test session timeout enforcement prevents stale session access.\n        \n        Revenue Protection: $380K annually from preventing stale session abuse.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:175"
      ]
    },
    "Cycle 39: Test session activity tracking detects anomalous user behavior.\n        \n        Revenue Protection: $640K annually from detecting account compromise.": {
      "value": "Cycle 39: Test session activity tracking detects anomalous user behavior.\n        \n        Revenue Protection: $640K annually from detecting account compromise.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:213"
      ]
    },
    "Cycle 40: Test session invalidation cascade prevents orphaned sessions.\n        \n        Revenue Protection: $320K annually from preventing session state inconsistency.": {
      "value": "Cycle 40: Test session invalidation cascade prevents orphaned sessions.\n        \n        Revenue Protection: $320K annually from preventing session state inconsistency.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:279"
      ]
    },
    "Cypress E2E:": {
      "value": "Cypress E2E:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:117"
      ]
    },
    "DANGEROUS: Actually perform fixes (NOT RECOMMENDED)": {
      "value": "DANGEROUS: Actually perform fixes (NOT RECOMMENDED)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:922"
      ]
    },
    "DANGEROUS: Created": {
      "value": "DANGEROUS: Created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1008"
      ]
    },
    "DANGEROUS: Disable safe mode protections": {
      "value": "DANGEROUS: Disable safe mode protections",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:932"
      ]
    },
    "DANGEROUS: Second confirmation required for unsafe operations": {
      "value": "DANGEROUS: Second confirmation required for unsafe operations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:924"
      ]
    },
    "DANGEROUSLY fixing": {
      "value": "DANGEROUSLY fixing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:795"
      ]
    },
    "DANGEROUSLY split": {
      "value": "DANGEROUSLY split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:830"
      ]
    },
    "DATA PIPELINE INTEGRITY TEST": {
      "value": "DATA PIPELINE INTEGRITY TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:149"
      ]
    },
    "DATABASE MIGRATION TESTING FOR STAGING": {
      "value": "DATABASE MIGRATION TESTING FOR STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:278"
      ]
    },
    "DATABASE SSL CERTIFICATE AND CONFIGURATION TESTING": {
      "value": "DATABASE SSL CERTIFICATE AND CONFIGURATION TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:259"
      ]
    },
    "DATABASE URL BUILDER COMPREHENSIVE TESTING": {
      "value": "DATABASE URL BUILDER COMPREHENSIVE TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:301"
      ]
    },
    "DATABASE_URL": {
      "value": "DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:12",
        "auth_service/tests/conftest.py:64",
        "auth_service/tests/integration/test_database_connection.py:43",
        "auth_service/tests/integration/test_database_connection.py:55",
        "auth_service/tests/integration/test_database_connection.py:89",
        "auth_service/tests/integration/test_database_connection.py:104",
        "auth_service/tests/integration/test_database_connection.py:123",
        "auth_service/tests/integration/test_database_connection.py:141",
        "auth_service/tests/integration/test_database_connection.py:161",
        "auth_service/tests/integration/test_database_connection.py:200"
      ]
    },
    "DATABASE_URL not set": {
      "value": "DATABASE_URL not set",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:150"
      ]
    },
    "DATABASE_URL:": {
      "value": "DATABASE_URL:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:29"
      ]
    },
    "DATABASE_URL_PLACEHOLDER": {
      "value": "DATABASE_URL_PLACEHOLDER",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:128"
      ]
    },
    "DB error": {
      "value": "DB error",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:302"
      ]
    },
    "DB errors": {
      "value": "DB errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:362"
      ]
    },
    "DEBUG": {
      "value": "DEBUG",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:83",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/compliance/fake_test_scanner.py:394",
        "scripts/test_config_loading.py:144",
        "scripts/test_staging_config.py:47"
      ]
    },
    "DEFAULT_TEST_PATHS = [\n        \"netra_backend/tests\",\n        \"test_framework/tests\",\n        \"frontend/__tests__\",\n        \"auth_service/tests\"\n    ]": {
      "value": "DEFAULT_TEST_PATHS = [\n        \"netra_backend/tests\",\n        \"test_framework/tests\",\n        \"frontend/__tests__\",\n        \"auth_service/tests\"\n    ]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:326"
      ]
    },
    "DEFAULT_TEST_PATHS\\s*=\\s*\\[[^\\]]+\\]": {
      "value": "DEFAULT_TEST_PATHS\\s*=\\s*\\[[^\\]]+\\]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:325"
      ]
    },
    "DEMO 1: TEST SIZE VALIDATOR": {
      "value": "DEMO 1: TEST SIZE VALIDATOR",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:20"
      ]
    },
    "DEMO 2: TEST REFACTORING HELPER": {
      "value": "DEMO 2: TEST REFACTORING HELPER",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:57"
      ]
    },
    "DEMO 3: TEST RUNNER INTEGRATION": {
      "value": "DEMO 3: TEST RUNNER INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:109"
      ]
    },
    "DEMO 4: PROPERLY SIZED TEST EXAMPLES": {
      "value": "DEMO 4: PROPERLY SIZED TEST EXAMPLES",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:139"
      ]
    },
    "DEMO 5: CLI USAGE EXAMPLES": {
      "value": "DEMO 5: CLI USAGE EXAMPLES",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:172"
      ]
    },
    "DEMONSTRATION COMPLETE": {
      "value": "DEMONSTRATION COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:218"
      ]
    },
    "DEPRECATED TEST RUNNER - LEGACY COMPATIBILITY ONLY\n=====================================================\nThis script is DEPRECATED and will be removed in a future version.\nPlease use the unified test runner instead:\n\n    python tests/unified_test_runner.py --service backend [your args]\n\nThis script now redirects to the unified test runner for backward compatibility.": {
      "value": "DEPRECATED TEST RUNNER - LEGACY COMPATIBILITY ONLY\n=====================================================\nThis script is DEPRECATED and will be removed in a future version.\nPlease use the unified test runner instead:\n\n    python tests/unified_test_runner.py --service backend [your args]\n\nThis script now redirects to the unified test runner for backward compatibility.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:2"
      ]
    },
    "DEPRECATED TEST RUNNER - LEGACY COMPATIBILITY ONLY\n=====================================================\nThis script is DEPRECATED and will be removed in a future version.\nPlease use the unified test runner instead:\n\n    python tests/unified_test_runner.py --service frontend [your args]\n\nThis script now redirects to the unified test runner for backward compatibility.": {
      "value": "DEPRECATED TEST RUNNER - LEGACY COMPATIBILITY ONLY\n=====================================================\nThis script is DEPRECATED and will be removed in a future version.\nPlease use the unified test runner instead:\n\n    python tests/unified_test_runner.py --service frontend [your args]\n\nThis script now redirects to the unified test runner for backward compatibility.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:2"
      ]
    },
    "DEPRECATED_": {
      "value": "DEPRECATED_",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:77"
      ]
    },
    "DEPRECATION WARNINGS:": {
      "value": "DEPRECATION WARNINGS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:213"
      ]
    },
    "DETAILED CONNECTION LIFECYCLE MONITORING": {
      "value": "DETAILED CONNECTION LIFECYCLE MONITORING",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:124"
      ]
    },
    "DETAILED ERROR ANALYSIS (first 5 files):": {
      "value": "DETAILED ERROR ANALYSIS (first 5 files):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:328"
      ]
    },
    "DETAILED ISSUES:": {
      "value": "DETAILED ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:231"
      ]
    },
    "DETAILED REAL E2E TEST INFORMATION": {
      "value": "DETAILED REAL E2E TEST INFORMATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:127"
      ]
    },
    "DETAILED REPORT": {
      "value": "DETAILED REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:234"
      ]
    },
    "DETAILED RESULTS": {
      "value": "DETAILED RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:105"
      ]
    },
    "DETAILED VIOLATIONS:": {
      "value": "DETAILED VIOLATIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:324"
      ]
    },
    "DETAILS:": {
      "value": "DETAILS:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:296",
        "scripts/test_websocket_injection_fix_complete.py:240"
      ]
    },
    "DEV_DATABASE_URL": {
      "value": "DEV_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:136"
      ]
    },
    "DEV_POSTGRES_PORT": {
      "value": "DEV_POSTGRES_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:150",
        "scripts/test_docker_manager.py:158"
      ]
    },
    "DEV_REDIS_PORT": {
      "value": "DEV_REDIS_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:151",
        "scripts/test_docker_manager.py:159"
      ]
    },
    "DEV_REDIS_URL": {
      "value": "DEV_REDIS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:137"
      ]
    },
    "DIRECT ADAPTIVE WORKFLOW TEST": {
      "value": "DIRECT ADAPTIVE WORKFLOW TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:153"
      ]
    },
    "DIRECT WebSocket Test - No pytest, no fixtures, no environment checks\n\nThis is the SIMPLEST and most DIRECT test possible:\n- User sends \"Hello\" message\n- Agent processes request  \n- ALL 5 critical WebSocket events are sent:\n  1. agent_started\n  2. agent_thinking  \n  3. tool_executing\n  4. tool_completed\n  5. agent_completed\n\nRun with: python test_websocket_direct.py": {
      "value": "DIRECT WebSocket Test - No pytest, no fixtures, no environment checks\n\nThis is the SIMPLEST and most DIRECT test possible:\n- User sends \"Hello\" message\n- Agent processes request  \n- ALL 5 critical WebSocket events are sent:\n  1. agent_started\n  2. agent_thinking  \n  3. tool_executing\n  4. tool_completed\n  5. agent_completed\n\nRun with: python test_websocket_direct.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:2"
      ]
    },
    "DISCONNECTED": {
      "value": "DISCONNECTED",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:56"
      ]
    },
    "DO $$ \n                    DECLARE \n                        r RECORD;\n                    BEGIN\n                        FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') \n                        LOOP\n                            EXECUTE 'TRUNCATE TABLE ' || quote_ident(r.tablename) || ' RESTART IDENTITY CASCADE';\n                        END LOOP;\n                    END $$;": {
      "value": "DO $$ \n                    DECLARE \n                        r RECORD;\n                    BEGIN\n                        FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') \n                        LOOP\n                            EXECUTE 'TRUNCATE TABLE ' || quote_ident(r.tablename) || ' RESTART IDENTITY CASCADE';\n                        END LOOP;\n                    END $$;",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:99"
      ]
    },
    "DOCKER COMPOSE LOG INTROSPECTION REPORT": {
      "value": "DOCKER COMPOSE LOG INTROSPECTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:160"
      ]
    },
    "DOCKER ENVIRONMENT STATUS": {
      "value": "DOCKER ENVIRONMENT STATUS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:194"
      ]
    },
    "DOCKER WEBSOCKET CONFIGURATION TEST RESULTS": {
      "value": "DOCKER WEBSOCKET CONFIGURATION TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:259"
      ]
    },
    "DOCKER_CONTAINER": {
      "value": "DOCKER_CONTAINER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:29"
      ]
    },
    "DOCUMENT DETAILS:": {
      "value": "DOCUMENT DETAILS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:475"
      ]
    },
    "DOCUMENT_MISSING": {
      "value": "DOCUMENT_MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:406"
      ]
    },
    "DOCUMENT_READ_ERROR": {
      "value": "DOCUMENT_READ_ERROR",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:420"
      ]
    },
    "DROP TABLE IF EXISTS test_connectivity": {
      "value": "DROP TABLE IF EXISTS test_connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:187"
      ]
    },
    "DRY RUN": {
      "value": "DRY RUN",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:170",
        "scripts/migrate_test_ids.py:194"
      ]
    },
    "DRY RUN - No files were actually modified": {
      "value": "DRY RUN - No files were actually modified",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:759"
      ]
    },
    "DRY RUN - Would apply these optimizations:": {
      "value": "DRY RUN - Would apply these optimizations:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:383"
      ]
    },
    "DRY RUN MODE - No files will be renamed": {
      "value": "DRY RUN MODE - No files will be renamed",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:264"
      ]
    },
    "DSN:": {
      "value": "DSN:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:86"
      ]
    },
    "DTprdt5KoQXlEG4Gh9lF": {
      "value": "DTprdt5KoQXlEG4Gh9lF",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:38",
        "auth_service/test_staging_db_connection.py:43",
        "auth_service/test_staging_db_connection.py:59",
        "auth_service/test_staging_db_connection.py:96",
        "auth_service/test_url_construction.py:39",
        "scripts/test_async_postgres.py:134"
      ]
    },
    "Data agent endpoint accessible for fallback testing": {
      "value": "Data agent endpoint accessible for fallback testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:151"
      ]
    },
    "Data integrity and performance for": {
      "value": "Data integrity and performance for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:495"
      ]
    },
    "Database Connection": {
      "value": "Database Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:207",
        "scripts/test_staging_env.py:148"
      ]
    },
    "Database Connection: 1": {
      "value": "Database Connection: 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:362"
      ]
    },
    "Database Connections": {
      "value": "Database Connections",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:186"
      ]
    },
    "Database Migration Commands": {
      "value": "Database Migration Commands",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:285"
      ]
    },
    "Database Mismatch Analysis": {
      "value": "Database Mismatch Analysis",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:155"
      ]
    },
    "Database Services:": {
      "value": "Database Services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:44",
        "scripts/test_service_health_simple.py:109"
      ]
    },
    "Database URL loading failed:": {
      "value": "Database URL loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:337"
      ]
    },
    "Database URL not loaded": {
      "value": "Database URL not loaded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:137"
      ]
    },
    "Database URL should be string": {
      "value": "Database URL should be string",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:141"
      ]
    },
    "Database URL:": {
      "value": "Database URL:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:38"
      ]
    },
    "Database connection appears functional": {
      "value": "Database connection appears functional",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:72"
      ]
    },
    "Database connection failed": {
      "value": "Database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:184",
        "scripts/test_log_introspection.py:193"
      ]
    },
    "Database connection lost": {
      "value": "Database connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:50"
      ]
    },
    "Database connectivity test failed:": {
      "value": "Database connectivity test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:76"
      ]
    },
    "Database error": {
      "value": "Database error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:198",
        "auth_service/tests/unit/test_refresh_endpoint.py:135"
      ]
    },
    "Database error pattern '": {
      "value": "Database error pattern '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:371"
      ]
    },
    "Database initialized:": {
      "value": "Database initialized:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:29"
      ]
    },
    "Database must start before auth": {
      "value": "Database must start before auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:99"
      ]
    },
    "Database test returned status": {
      "value": "Database test returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:74"
      ]
    },
    "Database user doesn't exist or password is incorrect": {
      "value": "Database user doesn't exist or password is incorrect",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:201"
      ]
    },
    "Database-related tests": {
      "value": "Database-related tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:88"
      ]
    },
    "Database:": {
      "value": "Database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:235",
        "scripts/test_config_loading.py:116",
        "scripts/test_ssl_certificates_staging.py:217",
        "scripts/test_staging_db_direct.py:46",
        "scripts/test_staging_migrations.py:48"
      ]
    },
    "DatabaseTestMixin": {
      "value": "DatabaseTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:16"
      ]
    },
    "DatabaseTestUtils": {
      "value": "DatabaseTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:17"
      ]
    },
    "Databases available:": {
      "value": "Databases available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:126"
      ]
    },
    "Days of history": {
      "value": "Days of history",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:446",
        "scripts/test_execution_tracker.py:774"
      ]
    },
    "Debug Results:": {
      "value": "Debug Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:344"
      ]
    },
    "Debug database test to verify table creation works": {
      "value": "Debug database test to verify table creation works",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:2"
      ]
    },
    "Debug info:": {
      "value": "Debug info:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:157"
      ]
    },
    "Debug script to test CORS configuration against the running backend.": {
      "value": "Debug script to test CORS configuration against the running backend.",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:2"
      ]
    },
    "Debug script to test supervisor configuration issues.": {
      "value": "Debug script to test supervisor configuration issues.",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:2"
      ]
    },
    "Default": {
      "value": "Default",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45"
      ]
    },
    "Default Category:": {
      "value": "Default Category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:169"
      ]
    },
    "Default configuration values:": {
      "value": "Default configuration values:",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:56"
      ]
    },
    "Default test secret from code": {
      "value": "Default test secret from code",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:99"
      ]
    },
    "Default:": {
      "value": "Default:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:100"
      ]
    },
    "Delegating fix to subagent:": {
      "value": "Delegating fix to subagent:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:131"
      ]
    },
    "Demo failed with error:": {
      "value": "Demo failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:226"
      ]
    },
    "Demo script showing the Test Size Limits Enforcement system in action.\n\nThis demonstrates all components of Fix #2: Test Size Limits Enforcement:\n1. Test size validator functionality\n2. Test refactoring helper functionality  \n3. Integration with test runner\n4. Properly sized test examples": {
      "value": "Demo script showing the Test Size Limits Enforcement system in action.\n\nThis demonstrates all components of Fix #2: Test Size Limits Enforcement:\n1. Test size validator functionality\n2. Test refactoring helper functionality  \n3. Integration with test runner\n4. Properly sized test examples",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:2"
      ]
    },
    "Dependencies installed successfully": {
      "value": "Dependencies installed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:65"
      ]
    },
    "Dependency Resolution": {
      "value": "Dependency Resolution",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:240"
      ]
    },
    "Dependency resolution test failed:": {
      "value": "Dependency resolution test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:118"
      ]
    },
    "Dependency resolution working correctly": {
      "value": "Dependency resolution working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:114"
      ]
    },
    "Dependency validation error:": {
      "value": "Dependency validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:160"
      ]
    },
    "Deployment Ready:": {
      "value": "Deployment Ready:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:646"
      ]
    },
    "Deployment errors:": {
      "value": "Deployment errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:176",
        "scripts/test_error_monitor_logic.py:200"
      ]
    },
    "Deployment script configuration": {
      "value": "Deployment script configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:101"
      ]
    },
    "Description:": {
      "value": "Description:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:332",
        "scripts/test_verify_workflow_status.py:36",
        "scripts/test_verify_workflow_status_corrected.py:24"
      ]
    },
    "Destination": {
      "value": "Destination",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:164"
      ]
    },
    "Detail:": {
      "value": "Detail:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:115"
      ]
    },
    "Detailed Results:": {
      "value": "Detailed Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:199"
      ]
    },
    "Detailed error information:": {
      "value": "Detailed error information:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:450"
      ]
    },
    "Detailed report saved to:": {
      "value": "Detailed report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:414",
        "scripts/test_imports.py:117"
      ]
    },
    "Detailed report saved to: staging_test_report.json": {
      "value": "Detailed report saved to: staging_test_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:509"
      ]
    },
    "Detailed results saved to:": {
      "value": "Detailed results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:228"
      ]
    },
    "Details": {
      "value": "Details",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:353"
      ]
    },
    "Details:": {
      "value": "Details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:12",
        "scripts/test_clickhouse_startup_fix.py:349",
        "scripts/test_service_health.py:82",
        "scripts/test_service_health_simple.py:61"
      ]
    },
    "Detected environment:": {
      "value": "Detected environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:45",
        "scripts/test_staging_migrations.py:191"
      ]
    },
    "Detected file change": {
      "value": "Detected file change",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:79"
      ]
    },
    "Dev Login": {
      "value": "Dev Login",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:344"
      ]
    },
    "Dev launcher exited unexpectedly": {
      "value": "Dev launcher exited unexpectedly",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:131"
      ]
    },
    "Dev login not available in test environment": {
      "value": "Dev login not available in test environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:242"
      ]
    },
    "Dev login not enabled": {
      "value": "Dev login not enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:291",
        "scripts/test_oauth_local.py:418"
      ]
    },
    "Development": {
      "value": "Development",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:201",
        "scripts/test_gtm_loading.py:99",
        "scripts/test_secret_manager_builder_critical.py:178"
      ]
    },
    "Development CORS:": {
      "value": "Development CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:47"
      ]
    },
    "Development Environment": {
      "value": "Development Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:135"
      ]
    },
    "Development auth service URL port (": {
      "value": "Development auth service URL port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:365"
      ]
    },
    "Development environment specific tests": {
      "value": "Development environment specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:96"
      ]
    },
    "Development mode:": {
      "value": "Development mode:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:91"
      ]
    },
    "Development password in staging (should fail)": {
      "value": "Development password in staging (should fail)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:222"
      ]
    },
    "Development server failed to start": {
      "value": "Development server failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:75"
      ]
    },
    "Development server started successfully": {
      "value": "Development server started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:71"
      ]
    },
    "Development server stopped": {
      "value": "Development server stopped",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:252"
      ]
    },
    "Development time per new secret: 2-3 days (should be 30 minutes)": {
      "value": "Development time per new secret: 2-3 days (should be 30 minutes)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:535"
      ]
    },
    "Development traceback sample:": {
      "value": "Development traceback sample:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:69"
      ]
    },
    "Development:": {
      "value": "Development:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:103"
      ]
    },
    "Diagnostic complete!": {
      "value": "Diagnostic complete!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:205"
      ]
    },
    "Dict": {
      "value": "Dict",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:202"
      ]
    },
    "Dict[": {
      "value": "Dict[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Different implementation patterns:": {
      "value": "Different implementation patterns:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:404"
      ]
    },
    "Different implementations found:": {
      "value": "Different implementations found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:529"
      ]
    },
    "Different123!": {
      "value": "Different123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:95"
      ]
    },
    "Direct API Test for Agent Orchestration Recovery\nTests the actual backend agent endpoints that the Cypress test is trying to verify.": {
      "value": "Direct API Test for Agent Orchestration Recovery\nTests the actual backend agent endpoints that the Cypress test is trying to verify.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:2"
      ]
    },
    "Direct API Test for Agent Orchestration Recovery\nTests the actual backend agent endpoints that the Cypress test is trying to verify.\nThis bypasses the problematic frontend Docker container and tests the SUT directly.": {
      "value": "Direct API Test for Agent Orchestration Recovery\nTests the actual backend agent endpoints that the Cypress test is trying to verify.\nThis bypasses the problematic frontend Docker container and tests the SUT directly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:2"
      ]
    },
    "Direct Cloud SQL async": {
      "value": "Direct Cloud SQL async",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:279"
      ]
    },
    "Direct Cloud SQL sync": {
      "value": "Direct Cloud SQL sync",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:280"
      ]
    },
    "Direct Tests": {
      "value": "Direct Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:345"
      ]
    },
    "Direct cost reduction features for": {
      "value": "Direct cost reduction features for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:493"
      ]
    },
    "Direct error message from main": {
      "value": "Direct error message from main",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:38"
      ]
    },
    "Direct info message from main": {
      "value": "Direct info message from main",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:36"
      ]
    },
    "Direct os.environ item access": {
      "value": "Direct os.environ item access",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:71"
      ]
    },
    "Direct test file not found, skipping": {
      "value": "Direct test file not found, skipping",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:287"
      ]
    },
    "Direct test of WebSocket async serialization to identify event loop blocking.": {
      "value": "Direct test of WebSocket async serialization to identify event loop blocking.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:2"
      ]
    },
    "Direct test of auth service without database dependency": {
      "value": "Direct test of auth service without database dependency",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:1"
      ]
    },
    "Direct test of corpus admin agent initialization.": {
      "value": "Direct test of corpus admin agent initialization.",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:2"
      ]
    },
    "Direct test of staging database connection using migrated secrets.\n\n**UPDATED**: Now uses DatabaseURLBuilder for centralized URL construction.": {
      "value": "Direct test of staging database connection using migrated secrets.\n\n**UPDATED**: Now uses DatabaseURLBuilder for centralized URL construction.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:1"
      ]
    },
    "Direct test of the adaptive workflow without going through the API.\nTests the workflow orchestrator directly with different data sufficiency scenarios.": {
      "value": "Direct test of the adaptive workflow without going through the API.\nTests the workflow orchestrator directly with different data sufficiency scenarios.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:2"
      ]
    },
    "Direct tool executed successfully": {
      "value": "Direct tool executed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:121"
      ]
    },
    "Direct warning message from main": {
      "value": "Direct warning message from main",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:37"
      ]
    },
    "Direct workflow tests passed": {
      "value": "Direct workflow tests passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:281"
      ]
    },
    "Directory": {
      "value": "Directory",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:143",
        "scripts/remove_test_stubs.py:110"
      ]
    },
    "Directory does not exist:": {
      "value": "Directory does not exist:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:106"
      ]
    },
    "Directory for storing backups (auto-generated if not specified)": {
      "value": "Directory for storing backups (auto-generated if not specified)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:936"
      ]
    },
    "Directory not found:": {
      "value": "Directory not found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:107",
        "scripts/migrate_test_environment_access.py:357",
        "scripts/remove_duplicate_test_setup.py:47"
      ]
    },
    "Disable bad test detection": {
      "value": "Disable bad test detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:517"
      ]
    },
    "Disable result caching": {
      "value": "Disable result caching",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:383"
      ]
    },
    "Discovered": {
      "value": "Discovered",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:316"
      ]
    },
    "Docker Compose Log Introspection Test Suite": {
      "value": "Docker Compose Log Introspection Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:390"
      ]
    },
    "Docker Configuration Test": {
      "value": "Docker Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:117"
      ]
    },
    "Docker Hot Reload Test": {
      "value": "Docker Hot Reload Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:16"
      ]
    },
    "Docker Hot Reload Test Suite": {
      "value": "Docker Hot Reload Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:184"
      ]
    },
    "Docker Integration": {
      "value": "Docker Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:398"
      ]
    },
    "Docker WebSocket test": {
      "value": "Docker WebSocket test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:94"
      ]
    },
    "Docker bridge IP: 172.18.0.1:3000": {
      "value": "Docker bridge IP: 172.18.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:237"
      ]
    },
    "Docker compose file to monitor": {
      "value": "Docker compose file to monitor",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:371"
      ]
    },
    "Docker container: netra-frontend:3000": {
      "value": "Docker container: netra-frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:229"
      ]
    },
    "Docker is not installed": {
      "value": "Docker is not installed",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:31"
      ]
    },
    "Docker is not running. Please start Docker first.": {
      "value": "Docker is not running. Please start Docker first.",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:191"
      ]
    },
    "Docker service: backend:8000": {
      "value": "Docker service: backend:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:223"
      ]
    },
    "Docker service: frontend:3000": {
      "value": "Docker service: frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:217"
      ]
    },
    "Docker services started successfully": {
      "value": "Docker services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:56"
      ]
    },
    "Document is complete and properly cross-linked": {
      "value": "Document is complete and properly cross-linked",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:453"
      ]
    },
    "Don't wait for services to be healthy": {
      "value": "Don't wait for services to be healthy",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:180"
      ]
    },
    "Driver URL Formatting": {
      "value": "Driver URL Formatting",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:307"
      ]
    },
    "Duplicate User": {
      "value": "Duplicate User",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:45"
      ]
    },
    "Duplicate access token at iteration": {
      "value": "Duplicate access token at iteration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:385"
      ]
    },
    "Duplicate access token at refresh": {
      "value": "Duplicate access token at refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:107",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:62"
      ]
    },
    "Duplicate jti found:": {
      "value": "Duplicate jti found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:504"
      ]
    },
    "Duplicate refresh token at iteration": {
      "value": "Duplicate refresh token at iteration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:386"
      ]
    },
    "Duplicate refresh token at refresh": {
      "value": "Duplicate refresh token at refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:108",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:63"
      ]
    },
    "Duplicate test file:": {
      "value": "Duplicate test file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:425"
      ]
    },
    "Duplicate test setup code has been removed.": {
      "value": "Duplicate test setup code has been removed.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:64"
      ]
    },
    "Duplicates Found:": {
      "value": "Duplicates Found:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:657"
      ]
    },
    "Duration:": {
      "value": "Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:51",
        "scripts/test_agent_execution_websocket_integration.py:309",
        "scripts/test_async_serialization_direct.py:163",
        "scripts/test_async_serialization_direct.py:175",
        "scripts/test_failure_tracker.py:121",
        "scripts/test_staging_websocket_comprehensive.py:302"
      ]
    },
    "E2E COLD START TEST SUMMARY": {
      "value": "E2E COLD START TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:482"
      ]
    },
    "E2E Coverage:": {
      "value": "E2E Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:748"
      ]
    },
    "E2E ENVIRONMENT VALIDATOR TEST": {
      "value": "E2E ENVIRONMENT VALIDATOR TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:111"
      ]
    },
    "E2E Environment Validator": {
      "value": "E2E Environment Validator",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:163"
      ]
    },
    "E2E Files Import Real JWT": {
      "value": "E2E Files Import Real JWT",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:106"
      ]
    },
    "E2E Simple Health Checks": {
      "value": "E2E Simple Health Checks",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:77"
      ]
    },
    "E2E Test Fixer - Process B\nScans and fixes all e2e test issues": {
      "value": "E2E Test Fixer - Process B\nScans and fixes all e2e test issues",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:2"
      ]
    },
    "E2E Test Fixer - Scanning and fixing test issues...": {
      "value": "E2E Test Fixer - Scanning and fixing test issues...",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:285"
      ]
    },
    "E2E Test Import Fixer\n\nAutomatically fixes imports in all moved test files after the test directory reorganization.\nUpdates imports to reflect the new test structure under tests/e2e/.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (Development velocity protection)\n- Business Goal: Restore broken imports after test reorganization\n- Value Impact: Enables test execution after directory restructuring\n- Strategic Impact: Prevents development velocity loss due to import failures\n\nThis script:\n1. Scans test files in tests/e2e/ subdirectories\n2. Updates imports that reference old paths\n3. Fixes helper imports to use new organized structure\n4. Reports all changes made": {
      "value": "E2E Test Import Fixer\n\nAutomatically fixes imports in all moved test files after the test directory reorganization.\nUpdates imports to reflect the new test structure under tests/e2e/.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (Development velocity protection)\n- Business Goal: Restore broken imports after test reorganization\n- Value Impact: Enables test execution after directory restructuring\n- Strategic Impact: Prevents development velocity loss due to import failures\n\nThis script:\n1. Scans test files in tests/e2e/ subdirectories\n2. Updates imports that reference old paths\n3. Fixes helper imports to use new organized structure\n4. Reports all changes made",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:2"
      ]
    },
    "E2E Test Port Configuration (": {
      "value": "E2E Test Port Configuration (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:86"
      ]
    },
    "E2E Test Thread": {
      "value": "E2E Test Thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:326"
      ]
    },
    "E2E Tests": {
      "value": "E2E Tests",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:341"
      ]
    },
    "E2E test classes import successfully": {
      "value": "E2E test classes import successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:119"
      ]
    },
    "E2E validator test failed:": {
      "value": "E2E validator test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:139"
      ]
    },
    "E2E_TESTING": {
      "value": "E2E_TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:37"
      ]
    },
    "ENABLE_REAL_LLM_TESTING": {
      "value": "ENABLE_REAL_LLM_TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:185",
        "scripts/run_agent_pipeline_test.py:32",
        "scripts/run_critical_test.py:29",
        "scripts/run_critical_test.py:44",
        "scripts/setup_test_environment.py:117",
        "scripts/setup_test_environment.py:355"
      ]
    },
    "ENABLE_REAL_LLM_TESTING:": {
      "value": "ENABLE_REAL_LLM_TESTING:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:44"
      ]
    },
    "ENVIRONMENT": {
      "value": "ENVIRONMENT",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:19",
        "auth_service/debug_db_test.py:11",
        "auth_service/test_actual_staging_credentials.py:31",
        "auth_service/test_auth_direct.py:17",
        "auth_service/test_staging_db_connection.py:36",
        "auth_service/test_staging_db_connection.py:123",
        "auth_service/test_url_construction.py:32",
        "auth_service/test_url_construction.py:63",
        "auth_service/test_url_construction.py:189",
        "auth_service/tests/conftest.py:57"
      ]
    },
    "ENVIRONMENT CONFIGURATION CHECK": {
      "value": "ENVIRONMENT CONFIGURATION CHECK",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:139"
      ]
    },
    "ENVIRONMENT DETECTION TEST SUITE": {
      "value": "ENVIRONMENT DETECTION TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:159"
      ]
    },
    "ENVIRONMENT RESULTS:": {
      "value": "ENVIRONMENT RESULTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:492"
      ]
    },
    "ENVIRONMENT:": {
      "value": "ENVIRONMENT:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:39",
        "scripts/test_auth_fix_simple.py:31",
        "scripts/test_auth_service_integration_fix.py:34"
      ]
    },
    "ENVIRONMENT=staging:": {
      "value": "ENVIRONMENT=staging:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:38"
      ]
    },
    "ENVIRONMENT=test\nSERVICE_SECRET=test-secret-for-auth-service-32-characters-long\nSERVICE_ID=auth-service-test\nJWT_SECRET_KEY=test-jwt-secret-key-for-auth-service\nPOSTGRES_HOST=localhost\nPOSTGRES_PORT=5432\nPOSTGRES_DB=test_db\nPOSTGRES_USER=test_user\nPOSTGRES_PASSWORD=test_password": {
      "value": "ENVIRONMENT=test\nSERVICE_SECRET=test-secret-for-auth-service-32-characters-long\nSERVICE_ID=auth-service-test\nJWT_SECRET_KEY=test-jwt-secret-key-for-auth-service\nPOSTGRES_HOST=localhost\nPOSTGRES_PORT=5432\nPOSTGRES_DB=test_db\nPOSTGRES_USER=test_user\nPOSTGRES_PASSWORD=test_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:25"
      ]
    },
    "ERROR": {
      "value": "ERROR",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:72",
        "netra_backend/app/services/realistic_test_data/log_generator.py:81",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/iterative_test_fix_loop.py:53",
        "scripts/run_all_test_categories.py:47",
        "scripts/run_all_test_categories.py:69",
        "scripts/staging_comprehensive_test.py:134",
        "scripts/staging_comprehensive_test.py:196",
        "scripts/staging_comprehensive_test.py:243",
        "scripts/staging_comprehensive_test.py:290"
      ]
    },
    "ERROR ([\\w/\\\\\\.]+::\\S+)": {
      "value": "ERROR ([\\w/\\\\\\.]+::\\S+)",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:57",
        "scripts/test_failure_tracker.py:30"
      ]
    },
    "ERROR after": {
      "value": "ERROR after",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:170"
      ]
    },
    "ERROR processing": {
      "value": "ERROR processing",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:210"
      ]
    },
    "ERROR:": {
      "value": "ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:383",
        "scripts/debug_cors_test.py:74",
        "scripts/debug_cors_test.py:93",
        "scripts/test_agent_orchestration_recovery.py:357",
        "scripts/test_agent_recovery_simple.py:105",
        "scripts/test_staging_cors.py:33",
        "scripts/test_staging_cors.py:67",
        "scripts/test_staging_cors.py:83",
        "scripts/test_staging_db_direct.py:123",
        "scripts/test_staging_migrations.py:173"
      ]
    },
    "ERROR: .env.staging still exists - should be deleted!": {
      "value": "ERROR: .env.staging still exists - should be deleted!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:20"
      ]
    },
    "ERROR: Alembic not found (not installed?)": {
      "value": "ERROR: Alembic not found (not installed?)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:170"
      ]
    },
    "ERROR: Auth service configuration incomplete": {
      "value": "ERROR: Auth service configuration incomplete",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:55"
      ]
    },
    "ERROR: Auth service connection failed:": {
      "value": "ERROR: Auth service connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:45"
      ]
    },
    "ERROR: Auth service unhealthy:": {
      "value": "ERROR: Auth service unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:41"
      ]
    },
    "ERROR: Backend connection failed:": {
      "value": "ERROR: Backend connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:34"
      ]
    },
    "ERROR: Backend service not running. Please start with:": {
      "value": "ERROR: Backend service not running. Please start with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:28"
      ]
    },
    "ERROR: Backend unhealthy:": {
      "value": "ERROR: Backend unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:30"
      ]
    },
    "ERROR: Cloud SQL URL should not have SSL parameters": {
      "value": "ERROR: Cloud SQL URL should not have SSL parameters",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:99",
        "scripts/test_auth_database_sessions.py:260"
      ]
    },
    "ERROR: Connection refused": {
      "value": "ERROR: Connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:85"
      ]
    },
    "ERROR: Connectivity test failed:": {
      "value": "ERROR: Connectivity test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:82"
      ]
    },
    "ERROR: Engine creation failed": {
      "value": "ERROR: Engine creation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:148",
        "scripts/test_auth_database_sessions.py:280"
      ]
    },
    "ERROR: Engine creation failed:": {
      "value": "ERROR: Engine creation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:284"
      ]
    },
    "ERROR: Entry conditions not met!": {
      "value": "ERROR: Entry conditions not met!",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:140"
      ]
    },
    "ERROR: Error during test:": {
      "value": "ERROR: Error during test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:110"
      ]
    },
    "ERROR: Expected SSL parameters but none found!": {
      "value": "ERROR: Expected SSL parameters but none found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:152"
      ]
    },
    "ERROR: Failed to initialize auth service settings:": {
      "value": "ERROR: Failed to initialize auth service settings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:59"
      ]
    },
    "ERROR: Failed:": {
      "value": "ERROR: Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:350"
      ]
    },
    "ERROR: Found SSL parameters but none expected!": {
      "value": "ERROR: Found SSL parameters but none expected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:157"
      ]
    },
    "ERROR: Found deprecated model": {
      "value": "ERROR: Found deprecated model",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:111"
      ]
    },
    "ERROR: Health endpoint returned status": {
      "value": "ERROR: Health endpoint returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:78"
      ]
    },
    "ERROR: Invalid URL format": {
      "value": "ERROR: Invalid URL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:254"
      ]
    },
    "ERROR: Invalid async URL format": {
      "value": "ERROR: Invalid async URL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:94"
      ]
    },
    "ERROR: No LLM API keys found!": {
      "value": "ERROR: No LLM API keys found!",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:61"
      ]
    },
    "ERROR: No triage result in state!": {
      "value": "ERROR: No triage result in state!",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:165"
      ]
    },
    "ERROR: Required packages not available:": {
      "value": "ERROR: Required packages not available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:32"
      ]
    },
    "ERROR: Service": {
      "value": "ERROR: Service",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:28"
      ]
    },
    "ERROR: Setup failed, aborting tests": {
      "value": "ERROR: Setup failed, aborting tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:309"
      ]
    },
    "ERROR: Some port configurations are INCORRECT!": {
      "value": "ERROR: Some port configurations are INCORRECT!",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:84"
      ]
    },
    "ERROR: Target file already exists:": {
      "value": "ERROR: Target file already exists:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:165"
      ]
    },
    "ERROR: Test execution failed:": {
      "value": "ERROR: Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:102"
      ]
    },
    "ERROR: Test execution timed out after 10 minutes": {
      "value": "ERROR: Test execution timed out after 10 minutes",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:96"
      ]
    },
    "ERROR: Test failed with exception:": {
      "value": "ERROR: Test failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:192",
        "scripts/test_service_startup_with_missing_optionals.py:212"
      ]
    },
    "ERROR: Test stub check failed:": {
      "value": "ERROR: Test stub check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:128"
      ]
    },
    "ERROR: URL conversion failed:": {
      "value": "ERROR: URL conversion failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:105"
      ]
    },
    "ERROR: setup_test_path() at line": {
      "value": "ERROR: setup_test_path() at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:60"
      ]
    },
    "ERRORS": {
      "value": "ERRORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:45"
      ]
    },
    "ERRORS (": {
      "value": "ERRORS (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:289"
      ]
    },
    "ERRORS BY CATEGORY": {
      "value": "ERRORS BY CATEGORY",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:162",
        "scripts/test_log_introspection.py:361"
      ]
    },
    "ERRORS FOUND:": {
      "value": "ERRORS FOUND:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:120"
      ]
    },
    "ERRORS:": {
      "value": "ERRORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:51",
        "scripts/test_staging_startup.py:269"
      ]
    },
    "EVENT:": {
      "value": "EVENT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:50"
      ]
    },
    "EXAMPLES:\n    python frontend_iterative_test_runner.py                    # Run iterations 7-100\n    python frontend_iterative_test_runner.py --start 10         # Start from iteration 10\n    python frontend_iterative_test_runner.py --max 50           # Run up to iteration 50\n    python frontend_iterative_test_runner.py --resume           # Resume from last saved state\n    python frontend_iterative_test_runner.py --status           # Show current status only": {
      "value": "EXAMPLES:\n    python frontend_iterative_test_runner.py                    # Run iterations 7-100\n    python frontend_iterative_test_runner.py --start 10         # Start from iteration 10\n    python frontend_iterative_test_runner.py --max 50           # Run up to iteration 50\n    python frontend_iterative_test_runner.py --resume           # Resume from last saved state\n    python frontend_iterative_test_runner.py --status           # Show current status only",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:908"
      ]
    },
    "EXCEPTION (": {
      "value": "EXCEPTION (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL CACHE LAYER ISSUE\n        Auth Service should continue operating when Redis cache layer is down\n        Root cause: Auth Service depends too heavily on Redis, fails when Redis is unavailable": {
      "value": "EXPECTED TO FAIL - CRITICAL CACHE LAYER ISSUE\n        Auth Service should continue operating when Redis cache layer is down\n        Root cause: Auth Service depends too heavily on Redis, fails when Redis is unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:425"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL DATABASE CONNECTIVITY ISSUE\n        Auth Service should handle database connectivity loss gracefully\n        Root cause: Auth Service crashes or becomes unresponsive when database is unreachable": {
      "value": "EXPECTED TO FAIL - CRITICAL DATABASE CONNECTIVITY ISSUE\n        Auth Service should handle database connectivity loss gracefully\n        Root cause: Auth Service crashes or becomes unresponsive when database is unreachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:167"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL GRACEFUL SHUTDOWN ISSUE\n        Auth Service should shut down gracefully, finishing in-progress requests\n        Root cause: No graceful shutdown mechanism, abrupt termination causing request failures": {
      "value": "EXPECTED TO FAIL - CRITICAL GRACEFUL SHUTDOWN ISSUE\n        Auth Service should shut down gracefully, finishing in-progress requests\n        Root cause: No graceful shutdown mechanism, abrupt termination causing request failures",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:463"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL NETWORK PARTITION ISSUE\n        System should detect and handle Auth Service network partition\n        Root cause: No network partition detection or handling mechanisms": {
      "value": "EXPECTED TO FAIL - CRITICAL NETWORK PARTITION ISSUE\n        System should detect and handle Auth Service network partition\n        Root cause: No network partition detection or handling mechanisms",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:313"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL OAUTH PROVIDER ISSUE\n        Auth Service should handle OAuth provider connectivity loss\n        Root cause: No fallback when OAuth provider (Google, etc.) is unreachable": {
      "value": "EXPECTED TO FAIL - CRITICAL OAUTH PROVIDER ISSUE\n        Auth Service should handle OAuth provider connectivity loss\n        Root cause: No fallback when OAuth provider (Google, etc.) is unreachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:390"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL OVERLOAD ISSUE\n        Auth Service should handle request overload with proper rate limiting/circuit breaker\n        Root cause: No circuit breaker or rate limiting when Auth Service is overwhelmed": {
      "value": "EXPECTED TO FAIL - CRITICAL OVERLOAD ISSUE\n        Auth Service should handle request overload with proper rate limiting/circuit breaker\n        Root cause: No circuit breaker or rate limiting when Auth Service is overwhelmed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:257"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SERVER ERROR ISSUE\n        System should handle Auth Service 500 errors gracefully with retry/fallback\n        Root cause: No error handling when Auth Service returns 500 errors": {
      "value": "EXPECTED TO FAIL - CRITICAL SERVER ERROR ISSUE\n        System should handle Auth Service 500 errors gracefully with retry/fallback\n        Root cause: No error handling when Auth Service returns 500 errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:126"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SERVICE DOWN ISSUE\n        System should have fallback when Auth Service is completely unresponsive\n        Root cause: No fallback mechanism when Auth Service doesn't respond at all": {
      "value": "EXPECTED TO FAIL - CRITICAL SERVICE DOWN ISSUE\n        System should have fallback when Auth Service is completely unresponsive\n        Root cause: No fallback mechanism when Auth Service doesn't respond at all",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:84"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SSL CERT EXPIRY ISSUE\n        System should handle Auth Service SSL certificate expiration gracefully\n        Root cause: No SSL certificate monitoring or graceful handling of certificate expiry": {
      "value": "EXPECTED TO FAIL - CRITICAL SSL CERT EXPIRY ISSUE\n        System should handle Auth Service SSL certificate expiration gracefully\n        Root cause: No SSL certificate monitoring or graceful handling of certificate expiry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:358"
      ]
    },
    "Each log should show the actual source file and line, not unified_logging.py:202": {
      "value": "Each log should show the actual source file and line, not unified_logging.py:202",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:48"
      ]
    },
    "Echo response:": {
      "value": "Echo response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:77"
      ]
    },
    "Either --run-id or --workflow-name must be specified": {
      "value": "Either --run-id or --workflow-name must be specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:49",
        "scripts/test_verify_workflow_status_corrected.py:99"
      ]
    },
    "Email (press Enter for default):": {
      "value": "Email (press Enter for default):",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:103"
      ]
    },
    "Email changed in cycle": {
      "value": "Email changed in cycle",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:272"
      ]
    },
    "Email:": {
      "value": "Email:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:87",
        "scripts/test_signup_flow_manual.py:33",
        "scripts/test_staging_auth_live.py:31",
        "scripts/test_staging_auth_live.py:126"
      ]
    },
    "Emergency shutdown initiated": {
      "value": "Emergency shutdown initiated",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:112"
      ]
    },
    "Empty function implementation found": {
      "value": "Empty function implementation found",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:232"
      ]
    },
    "Enable continuous test generation in CI/CD pipeline": {
      "value": "Enable continuous test generation in CI/CD pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:263"
      ]
    },
    "Enable coverage reporting": {
      "value": "Enable coverage reporting",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:499",
        "scripts/test_frontend_ORIGINAL.py:403"
      ]
    },
    "Enable real LLM testing": {
      "value": "Enable real LLM testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:348"
      ]
    },
    "Enable verbose logging": {
      "value": "Enable verbose logging",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:209",
        "scripts/test_staging_websocket_comprehensive.py:439"
      ]
    },
    "Enabled:": {
      "value": "Enabled:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:45",
        "scripts/test_auth_service_integration_fix.py:48"
      ]
    },
    "Enables real-time agent interactions for": {
      "value": "Enables real-time agent interactions for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:492"
      ]
    },
    "EncodedFile": {
      "value": "EncodedFile",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:144",
        "scripts/pytest_plugins.py:208"
      ]
    },
    "Encryption key for sensitive data": {
      "value": "Encryption key for sensitive data",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:96"
      ]
    },
    "End-to-End Cold Start Test Suite for Netra Apex Platform\n\nThis comprehensive test validates the entire user flow from cold start through\nauthentication, WebSocket connection, chat interaction, and model response.\n\nCritical Path Tested:\n1. Dev launcher startup with all services\n2. Service discovery and dynamic port handling\n3. Auth service login (dev mode)\n4. Token retrieval and validation\n5. WebSocket connection with auth\n6. Chat message sending\n7. Model processing and response\n8. Clean shutdown\n\nAuthor: Netra Apex Engineering": {
      "value": "End-to-End Cold Start Test Suite for Netra Apex Platform\n\nThis comprehensive test validates the entire user flow from cold start through\nauthentication, WebSocket connection, chat interaction, and model response.\n\nCritical Path Tested:\n1. Dev launcher startup with all services\n2. Service discovery and dynamic port handling\n3. Auth service login (dev mode)\n4. Token retrieval and validation\n5. WebSocket connection with auth\n6. Chat message sending\n7. Model processing and response\n8. Clean shutdown\n\nAuthor: Netra Apex Engineering",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:2"
      ]
    },
    "End-to-end integration tests": {
      "value": "End-to-end integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:53"
      ]
    },
    "End-to-end test for staging authentication flow.\nTests login, token refresh, and session persistence.": {
      "value": "End-to-end test for staging authentication flow.\nTests login, token refresh, and session persistence.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:2"
      ]
    },
    "End-to-end tests": {
      "value": "End-to-end tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:78"
      ]
    },
    "Endpoint": {
      "value": "Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:55",
        "scripts/test_cors.py:371"
      ]
    },
    "Endpoint to test (default: /health)": {
      "value": "Endpoint to test (default: /health)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:425"
      ]
    },
    "Endpoint:": {
      "value": "Endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:502"
      ]
    },
    "Engine URL:": {
      "value": "Engine URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:142"
      ]
    },
    "Engine:": {
      "value": "Engine:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:32"
      ]
    },
    "Enhanced Real Test Requirements Enforcer\n\nComprehensive validation and enforcement of SPEC/testing.xml real test requirements\nfor both Python and JavaScript test files.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction  \n- Value Impact: Prevents regression bugs from invalid test patterns\n- Strategic Impact: Ensures test reliability, reduces debugging time, maintains system integrity\n\nSPEC Requirements Enforced:\n1. No mock component implementations inside test files\n2. Integration tests must use real child components\n3. Mock only external APIs and truly unavailable resources\n4. Test files must follow 450-line limit\n5. Test functions must follow 25-line limit\n6. Fix System Under Test first, not tests": {
      "value": "Enhanced Real Test Requirements Enforcer\n\nComprehensive validation and enforcement of SPEC/testing.xml real test requirements\nfor both Python and JavaScript test files.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction  \n- Value Impact: Prevents regression bugs from invalid test patterns\n- Strategic Impact: Ensures test reliability, reduces debugging time, maintains system integrity\n\nSPEC Requirements Enforced:\n1. No mock component implementations inside test files\n2. Integration tests must use real child components\n3. Mock only external APIs and truly unavailable resources\n4. Test files must follow 450-line limit\n5. Test functions must follow 25-line limit\n6. Fix System Under Test first, not tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:1"
      ]
    },
    "Enhanced Test Discovery Report": {
      "value": "Enhanced Test Discovery Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:165"
      ]
    },
    "Enhanced Test Discovery Report\nShows all test categories including real e2e tests prominently.": {
      "value": "Enhanced Test Discovery Report\nShows all test categories including real e2e tests prominently.",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:2"
      ]
    },
    "Enhanced tool execution not available:": {
      "value": "Enhanced tool execution not available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:249"
      ]
    },
    "Ensure PostgreSQL is running and credentials are correct": {
      "value": "Ensure PostgreSQL is running and credentials are correct",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:164"
      ]
    },
    "Ensure PostgreSQL is running with correct credentials": {
      "value": "Ensure PostgreSQL is running with correct credentials",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:233"
      ]
    },
    "Ensure Redis is running or set TEST_DISABLE_REDIS=true": {
      "value": "Ensure Redis is running or set TEST_DISABLE_REDIS=true",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:189"
      ]
    },
    "Ensure auth service is running for tests that require it": {
      "value": "Ensure auth service is running for tests that require it",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:520"
      ]
    },
    "Ensure file is valid and accessible": {
      "value": "Ensure file is valid and accessible",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:181"
      ]
    },
    "Ensure service is running": {
      "value": "Ensure service is running",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:90"
      ]
    },
    "Entry check result:": {
      "value": "Entry check result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:64",
        "scripts/test_corpus_admin_simple.py:63"
      ]
    },
    "Entry conditions not met": {
      "value": "Entry conditions not met",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:141"
      ]
    },
    "Environment Configuration": {
      "value": "Environment Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:170"
      ]
    },
    "Environment Configuration:": {
      "value": "Environment Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:30",
        "scripts/test_service_health.py:39"
      ]
    },
    "Environment OK:": {
      "value": "Environment OK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:192"
      ]
    },
    "Environment Variables:": {
      "value": "Environment Variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:263",
        "scripts/test_service_health.py:127"
      ]
    },
    "Environment async:": {
      "value": "Environment async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:55"
      ]
    },
    "Environment auto async": {
      "value": "Environment auto async",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:281"
      ]
    },
    "Environment auto sync": {
      "value": "Environment auto sync",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:282"
      ]
    },
    "Environment configuration:": {
      "value": "Environment configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:38"
      ]
    },
    "Environment detected:": {
      "value": "Environment detected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:40"
      ]
    },
    "Environment issues:": {
      "value": "Environment issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:194"
      ]
    },
    "Environment sync:": {
      "value": "Environment sync:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:56"
      ]
    },
    "Environment test failed:": {
      "value": "Environment test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:197"
      ]
    },
    "Environment to manage (test or dev)": {
      "value": "Environment to manage (test or dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:210"
      ]
    },
    "Environment to test (default: development)": {
      "value": "Environment to test (default: development)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:423"
      ]
    },
    "Environment usage:": {
      "value": "Environment usage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:162"
      ]
    },
    "Environment value": {
      "value": "Environment value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:285"
      ]
    },
    "Environment variables set for real service testing": {
      "value": "Environment variables set for real service testing",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:165"
      ]
    },
    "Environment variables:": {
      "value": "Environment variables:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:131"
      ]
    },
    "Environment:": {
      "value": "Environment:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:105",
        "scripts/test_backend_auth_config.py:33",
        "scripts/test_backend_ORIGINAL.py:372",
        "scripts/test_cors.py:459",
        "scripts/test_database_url_builder_comprehensive.py:272",
        "scripts/test_staging_auth.py:170",
        "scripts/test_staging_auth.py:185",
        "scripts/test_staging_config.py:100",
        "scripts/test_staging_db_direct.py:81",
        "scripts/test_staging_threads_fix.py:83"
      ]
    },
    "Environment: DATABASE_URL=": {
      "value": "Environment: DATABASE_URL=",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:256"
      ]
    },
    "Environment: STAGING": {
      "value": "Environment: STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:189"
      ]
    },
    "Environment: Staging": {
      "value": "Environment: Staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:308"
      ]
    },
    "Environments tested:": {
      "value": "Environments tested:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:516",
        "scripts/test_secret_manager_builder_critical.py:773"
      ]
    },
    "Error": {
      "value": "Error",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:154",
        "scripts/apply_fast_test_decorators.py:178",
        "scripts/frontend_iterative_test_runner.py:527"
      ]
    },
    "Error 1": {
      "value": "Error 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:452"
      ]
    },
    "Error 2": {
      "value": "Error 2",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:452"
      ]
    },
    "Error Details:": {
      "value": "Error Details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:353"
      ]
    },
    "Error Detection": {
      "value": "Error Detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:394"
      ]
    },
    "Error Detection Results:": {
      "value": "Error Detection Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:102"
      ]
    },
    "Error Grouping": {
      "value": "Error Grouping",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:395"
      ]
    },
    "Error adding markers to": {
      "value": "Error adding markers to",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:159"
      ]
    },
    "Error after deployment": {
      "value": "Error after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:134"
      ]
    },
    "Error analyzing": {
      "value": "Error analyzing",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:134",
        "scripts/compliance/test_size_validator.py:116",
        "scripts/migrate_test_environment_access.py:130"
      ]
    },
    "Error analyzing file": {
      "value": "Error analyzing file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:145"
      ]
    },
    "Error applying real fixes:": {
      "value": "Error applying real fixes:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:499"
      ]
    },
    "Error checking": {
      "value": "Error checking",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:86"
      ]
    },
    "Error checking enum file:": {
      "value": "Error checking enum file:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:122"
      ]
    },
    "Error checking git diff:": {
      "value": "Error checking git diff:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:247"
      ]
    },
    "Error checking size of": {
      "value": "Error checking size of",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:266"
      ]
    },
    "Error count": {
      "value": "Error count",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:360"
      ]
    },
    "Error counting Node processes:": {
      "value": "Error counting Node processes:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:45"
      ]
    },
    "Error creating DeepAgentState:": {
      "value": "Error creating DeepAgentState:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:57"
      ]
    },
    "Error creating test thread:": {
      "value": "Error creating test thread:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:53"
      ]
    },
    "Error decoding service token:": {
      "value": "Error decoding service token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:44"
      ]
    },
    "Error decoding token:": {
      "value": "Error decoding token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:25"
      ]
    },
    "Error details:": {
      "value": "Error details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:85",
        "scripts/test_staging_auth_flow.py:158"
      ]
    },
    "Error during analysis:": {
      "value": "Error during analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:69"
      ]
    },
    "Error during fake test scanning:": {
      "value": "Error during fake test scanning:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:470"
      ]
    },
    "Error during test:": {
      "value": "Error during test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:69"
      ]
    },
    "Error during validation (expected):": {
      "value": "Error during validation (expected):",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:203"
      ]
    },
    "Error during validation:": {
      "value": "Error during validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:186"
      ]
    },
    "Error during verification:": {
      "value": "Error during verification:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:364"
      ]
    },
    "Error executing command:": {
      "value": "Error executing command:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:320"
      ]
    },
    "Error extracting failures:": {
      "value": "Error extracting failures:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:852"
      ]
    },
    "Error fetching secret": {
      "value": "Error fetching secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:24",
        "scripts/test_ssl_certificates_staging.py:24",
        "scripts/test_staging_db_direct.py:26",
        "scripts/test_staging_migrations.py:25"
      ]
    },
    "Error finding test file:": {
      "value": "Error finding test file:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:602"
      ]
    },
    "Error fixing": {
      "value": "Error fixing",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:110",
        "scripts/automated_test_fix_loop.py:91",
        "scripts/fix_all_test_issues.py:76",
        "scripts/fix_test_import_errors.py:220",
        "scripts/fix_test_syntax_errors.py:219"
      ]
    },
    "Error fixing class names in": {
      "value": "Error fixing class names in",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:106"
      ]
    },
    "Error fixing export conversation mock:": {
      "value": "Error fixing export conversation mock:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:643"
      ]
    },
    "Error fixing file:": {
      "value": "Error fixing file:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:64"
      ]
    },
    "Error fixing mock component function in": {
      "value": "Error fixing mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:69"
      ]
    },
    "Error fixing mock undefined issue:": {
      "value": "Error fixing mock undefined issue:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:580"
      ]
    },
    "Error fixing parentheses in": {
      "value": "Error fixing parentheses in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:116"
      ]
    },
    "Error fixing test config:": {
      "value": "Error fixing test config:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:237"
      ]
    },
    "Error fixing test discovery:": {
      "value": "Error fixing test discovery:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:342"
      ]
    },
    "Error in async serialization:": {
      "value": "Error in async serialization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:116"
      ]
    },
    "Error in automated iterations:": {
      "value": "Error in automated iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:897"
      ]
    },
    "Error in iteration": {
      "value": "Error in iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:816"
      ]
    },
    "Error in sub-agent fix:": {
      "value": "Error in sub-agent fix:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:278"
      ]
    },
    "Error in tool": {
      "value": "Error in tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:104"
      ]
    },
    "Error killing process": {
      "value": "Error killing process",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:54"
      ]
    },
    "Error levels within acceptable limits": {
      "value": "Error levels within acceptable limits",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:104"
      ]
    },
    "Error loading Jest coverage:": {
      "value": "Error loading Jest coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:569"
      ]
    },
    "Error loading Python coverage:": {
      "value": "Error loading Python coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:558"
      ]
    },
    "Error loading test results:": {
      "value": "Error loading test results:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:585"
      ]
    },
    "Error message:": {
      "value": "Error message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:83"
      ]
    },
    "Error migrating": {
      "value": "Error migrating",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:183"
      ]
    },
    "Error parsing JSON report:": {
      "value": "Error parsing JSON report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:57"
      ]
    },
    "Error parsing npm failures:": {
      "value": "Error parsing npm failures:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:549"
      ]
    },
    "Error parsing test file": {
      "value": "Error parsing test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:87"
      ]
    },
    "Error processing": {
      "value": "Error processing",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:176",
        "scripts/align_test_imports.py:370",
        "scripts/analyze_test_overlap.py:132",
        "scripts/batch_fix_and_test.py:60",
        "scripts/fix_e2e_test_imports.py:187",
        "scripts/fix_test_syntax_fix_classes.py:61",
        "scripts/fix_test_utils_imports.py:56"
      ]
    },
    "Error rate reduced from 2.3% to 0.8%.": {
      "value": "Error rate reduced from 2.3% to 0.8%.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:218"
      ]
    },
    "Error reading": {
      "value": "Error reading",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:129",
        "scripts/validate_llm_test_models.py:82"
      ]
    },
    "Error reading file": {
      "value": "Error reading file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:204"
      ]
    },
    "Error reading file:": {
      "value": "Error reading file:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:187"
      ]
    },
    "Error reading test file": {
      "value": "Error reading test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:77"
      ]
    },
    "Error reducing mocking in": {
      "value": "Error reducing mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:343"
      ]
    },
    "Error removing mocks from": {
      "value": "Error removing mocks from",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:189"
      ]
    },
    "Error response missing detail": {
      "value": "Error response missing detail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:57"
      ]
    },
    "Error response not JSON": {
      "value": "Error response not JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:160"
      ]
    },
    "Error response should be JSON dict": {
      "value": "Error response should be JSON dict",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:193"
      ]
    },
    "Error running category '": {
      "value": "Error running category '",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:48"
      ]
    },
    "Error running docker-compose config:": {
      "value": "Error running docker-compose config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:16"
      ]
    },
    "Error running tests:": {
      "value": "Error running tests:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:238",
        "scripts/frontend_iterative_test_runner.py:220",
        "scripts/frontend_iterative_test_runner.py:221"
      ]
    },
    "Error running validator:": {
      "value": "Error running validator:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:353"
      ]
    },
    "Error scanning": {
      "value": "Error scanning",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:220",
        "scripts/business_value_test_index.py:344",
        "scripts/e2e_test_fixer.py:71",
        "scripts/migrate_test_ids.py:67"
      ]
    },
    "Error score:": {
      "value": "Error score:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:102",
        "scripts/test_error_monitor_logic.py:177",
        "scripts/test_error_monitor_logic.py:201"
      ]
    },
    "Error spawning analysis agent for": {
      "value": "Error spawning analysis agent for",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:121"
      ]
    },
    "Error splitting": {
      "value": "Error splitting",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:207"
      ]
    },
    "Error splitting file": {
      "value": "Error splitting file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:122"
      ]
    },
    "Error splitting function": {
      "value": "Error splitting function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:260"
      ]
    },
    "Error starting development server:": {
      "value": "Error starting development server:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:79"
      ]
    },
    "Error stopping development server:": {
      "value": "Error stopping development server:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:256"
      ]
    },
    "Error testing category": {
      "value": "Error testing category",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:159"
      ]
    },
    "Error type:": {
      "value": "Error type:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:81",
        "auth_service/test_staging_db_connection.py:111",
        "auth_service/test_staging_db_connection.py:218",
        "scripts/test_staging_clickhouse.py:197"
      ]
    },
    "Error updating": {
      "value": "Error updating",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:127"
      ]
    },
    "Error:": {
      "value": "Error:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:72",
        "scripts/add_pytest_markers.py:131",
        "scripts/apply_fast_test_decorators.py:127",
        "scripts/compliance/demo_test_size_enforcement.py:134",
        "scripts/continuous_e2e_test_runner.py:377",
        "scripts/final_test_status_check.py:112",
        "scripts/frontend_iterative_test_runner.py:818",
        "scripts/manage_test_services.py:121",
        "scripts/staging_comprehensive_test.py:73",
        "scripts/staging_comprehensive_test.py:484"
      ]
    },
    "Error: Could not find tests/e2e directory. Make sure script is run from project root.": {
      "value": "Error: Could not find tests/e2e directory. Make sure script is run from project root.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:226"
      ]
    },
    "Error: Docker or docker-compose is not installed or not running.": {
      "value": "Error: Docker or docker-compose is not installed or not running.",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:27"
      ]
    },
    "Error: Failed to start TEST environment": {
      "value": "Error: Failed to start TEST environment",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:104"
      ]
    },
    "Error: File": {
      "value": "Error: File",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:696"
      ]
    },
    "Error: Frontend directory not found at": {
      "value": "Error: Frontend directory not found at",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:206"
      ]
    },
    "Error: Path '": {
      "value": "Error: Path '",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:241"
      ]
    },
    "Error: Required modules not found. Please ensure test_execution_tracker.py exists.": {
      "value": "Error: Required modules not found. Please ensure test_execution_tracker.py exists.",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:22"
      ]
    },
    "Error: Test directory": {
      "value": "Error: Test directory",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:143",
        "scripts/optimize_test_performance.py:354"
      ]
    },
    "Error: The following TEST environment ports are already in use:": {
      "value": "Error: The following TEST environment ports are already in use:",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:74"
      ]
    },
    "Error: test_categorization.json not found. Run categorize_tests.py first.": {
      "value": "Error: test_categorization.json not found. Run categorize_tests.py first.",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:23"
      ]
    },
    "Errors Encountered:": {
      "value": "Errors Encountered:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:347"
      ]
    },
    "Errors encountered:": {
      "value": "Errors encountered:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:200",
        "scripts/auto_fix_test_sizes.py:754",
        "scripts/test_parallel_docker_manager.py:168"
      ]
    },
    "Errors found:": {
      "value": "Errors found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:75"
      ]
    },
    "Errors:": {
      "value": "Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:527",
        "scripts/fix_test_import_order.py:113",
        "scripts/fix_test_utils_imports.py:93",
        "scripts/staging_comprehensive_test.py:462",
        "scripts/test_example_message_flow.py:117",
        "scripts/test_example_message_flow.py:323",
        "scripts/test_gtm_loading.py:149",
        "scripts/test_secret_manager_debug.py:70",
        "scripts/test_staging_websocket_comprehensive.py:318"
      ]
    },
    "Event Coverage:": {
      "value": "Event Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:126",
        "scripts/test_websocket_chat_standalone.py:126"
      ]
    },
    "Event Sequence:": {
      "value": "Event Sequence:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:139",
        "scripts/test_websocket_chat_standalone.py:139"
      ]
    },
    "Event Types Captured:": {
      "value": "Event Types Captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:126"
      ]
    },
    "Event loop blocked for:": {
      "value": "Event loop blocked for:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:161",
        "scripts/simple_websocket_blocking_test.py:215"
      ]
    },
    "Event loop blocked:": {
      "value": "Event loop blocked:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:132"
      ]
    },
    "Event loop blocks during send_to_thread:": {
      "value": "Event loop blocks during send_to_thread:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:210"
      ]
    },
    "Event loop blocks during send_to_user:": {
      "value": "Event loop blocks during send_to_user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:183"
      ]
    },
    "Event loop blocks:": {
      "value": "Event loop blocks:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:213"
      ]
    },
    "Event order:": {
      "value": "Event order:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:315"
      ]
    },
    "Event timeline (first 10):": {
      "value": "Event timeline (first 10):",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:401"
      ]
    },
    "Event timeline duration:": {
      "value": "Event timeline duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:399"
      ]
    },
    "Event types received:": {
      "value": "Event types received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:175"
      ]
    },
    "Event types:": {
      "value": "Event types:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:308",
        "scripts/test_standalone_websocket.py:109",
        "scripts/test_supervisor_execution_flow.py:132",
        "scripts/test_supervisor_execution_flow.py:173"
      ]
    },
    "Events captured:": {
      "value": "Events captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:307"
      ]
    },
    "Events per agent:": {
      "value": "Events per agent:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:396"
      ]
    },
    "Events received:": {
      "value": "Events received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:108"
      ]
    },
    "Events tested:": {
      "value": "Events tested:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:265"
      ]
    },
    "Events/sec:": {
      "value": "Events/sec:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:310"
      ]
    },
    "Example Message Flow Test Runner": {
      "value": "Example Message Flow Test Runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:432"
      ]
    },
    "Example Message Flow system is ready for production.": {
      "value": "Example Message Flow system is ready for production.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:356"
      ]
    },
    "Example file not found!": {
      "value": "Example file not found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:52",
        "scripts/compliance/demo_test_size_enforcement.py:167"
      ]
    },
    "Example file:": {
      "value": "Example file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:145"
      ]
    },
    "Example refactoring:": {
      "value": "Example refactoring:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:215"
      ]
    },
    "Example split:": {
      "value": "Example split:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:199"
      ]
    },
    "Examples demonstrated:": {
      "value": "Examples demonstrated:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:158"
      ]
    },
    "Examples:\n  # Run all Jest tests\n  python unified_test_runner.py --service frontend\n  \n  # Run specific category\n  python unified_test_runner.py --service frontend --category components\n  python unified_test_runner.py --service frontend --category hooks\n  \n  # Run with coverage\n  python unified_test_runner.py --service frontend --coverage\n  \n  # Run E2E tests with Cypress\n  python unified_test_runner.py --service frontend --e2e\n  python unified_test_runner.py --service frontend --cypress-open\n  \n  # Run specific test file\n  python unified_test_runner.py --service frontend components/Button.test.tsx\n  \n  # Watch mode for development\n  python unified_test_runner.py --service frontend --watch\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service frontend --lint --type-check --coverage --build": {
      "value": "Examples:\n  # Run all Jest tests\n  python unified_test_runner.py --service frontend\n  \n  # Run specific category\n  python unified_test_runner.py --service frontend --category components\n  python unified_test_runner.py --service frontend --category hooks\n  \n  # Run with coverage\n  python unified_test_runner.py --service frontend --coverage\n  \n  # Run E2E tests with Cypress\n  python unified_test_runner.py --service frontend --e2e\n  python unified_test_runner.py --service frontend --cypress-open\n  \n  # Run specific test file\n  python unified_test_runner.py --service frontend components/Button.test.tsx\n  \n  # Watch mode for development\n  python unified_test_runner.py --service frontend --watch\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service frontend --lint --type-check --coverage --build",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:360"
      ]
    },
    "Examples:\n  # Run all tests\n  python unified_test_runner.py --service backend\n  \n  # Run specific category\n  python unified_test_runner.py --service backend --category unit\n  python unified_test_runner.py --service backend --category agent": {
      "value": "Examples:\n  # Run all tests\n  python unified_test_runner.py --service backend\n  \n  # Run specific category\n  python unified_test_runner.py --service backend --category unit\n  python unified_test_runner.py --service backend --category agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:453"
      ]
    },
    "Examples:\n  # Run comprehensive tests\n  python scripts/test_staging_websocket_comprehensive.py\n  \n  # Quick smoke test only\n  python scripts/test_staging_websocket_comprehensive.py --quick\n  \n  # Debug connection issues\n  python scripts/test_staging_websocket_comprehensive.py --debug": {
      "value": "Examples:\n  # Run comprehensive tests\n  python scripts/test_staging_websocket_comprehensive.py\n  \n  # Quick smoke test only\n  python scripts/test_staging_websocket_comprehensive.py --quick\n  \n  # Debug connection issues\n  python scripts/test_staging_websocket_comprehensive.py --debug",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:413"
      ]
    },
    "Examples:\n  python scripts/compliance/fake_test_scanner.py --scan-all\n  python scripts/compliance/fake_test_scanner.py --directory app/tests\n  python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n  python scripts/compliance/fake_test_scanner.py --report-only --format json": {
      "value": "Examples:\n  python scripts/compliance/fake_test_scanner.py --scan-all\n  python scripts/compliance/fake_test_scanner.py --directory app/tests\n  python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n  python scripts/compliance/fake_test_scanner.py --report-only --format json",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:363"
      ]
    },
    "Examples:\n  python scripts/test_imports.py                  # Quick critical import test\n  python scripts/test_imports.py --all            # Comprehensive import test\n  python scripts/test_imports.py --verbose        # Show detailed output\n  python scripts/test_imports.py --json report.json  # Save JSON report": {
      "value": "Examples:\n  python scripts/test_imports.py                  # Quick critical import test\n  python scripts/test_imports.py --all            # Comprehensive import test\n  python scripts/test_imports.py --verbose        # Show detailed output\n  python scripts/test_imports.py --json report.json  # Save JSON report",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:31"
      ]
    },
    "Examples:\n  python test_refactor_helper.py analyze app/tests/test_large.py\n  python test_refactor_helper.py suggest app/tests/test_large.py --strategy category\n  python test_refactor_helper.py validate app/tests/test_large.py": {
      "value": "Examples:\n  python test_refactor_helper.py analyze app/tests/test_large.py\n  python test_refactor_helper.py suggest app/tests/test_large.py --strategy category\n  python test_refactor_helper.py validate app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:661"
      ]
    },
    "Examples:\n  python test_size_validator.py                    # Validate all tests\n  python test_size_validator.py --format json     # JSON output\n  python test_size_validator.py --format markdown # Markdown output\n  python test_size_validator.py --output report.md # Save to file\n  python test_size_validator.py --auto-split      # Auto-split violations": {
      "value": "Examples:\n  python test_size_validator.py                    # Validate all tests\n  python test_size_validator.py --format json     # JSON output\n  python test_size_validator.py --format markdown # Markdown output\n  python test_size_validator.py --output report.md # Save to file\n  python test_size_validator.py --auto-split      # Auto-split violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:509"
      ]
    },
    "Exception in": {
      "value": "Exception in",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:126"
      ]
    },
    "Exception:": {
      "value": "Exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:374",
        "scripts/test_database_url_builder_comprehensive.py:325",
        "scripts/test_ssl_certificates_staging.py:281",
        "scripts/test_staging_migrations.py:303"
      ]
    },
    "ExcessClient/1.0": {
      "value": "ExcessClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:148"
      ]
    },
    "Execute agent with proper WebSocket event flow.": {
      "value": "Execute agent with proper WebSocket event flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:122"
      ]
    },
    "Execute agent with proper WebSocket notifications.": {
      "value": "Execute agent with proper WebSocket notifications.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:135"
      ]
    },
    "Execute complete agent pipeline.": {
      "value": "Execute complete agent pipeline.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:282"
      ]
    },
    "Execute data analysis tools.": {
      "value": "Execute data analysis tools.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:187"
      ]
    },
    "Execute generic tools.": {
      "value": "Execute generic tools.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:231"
      ]
    },
    "Execute optimization tools.": {
      "value": "Execute optimization tools.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:207"
      ]
    },
    "Execute tests with full optimization pipeline": {
      "value": "Execute tests with full optimization pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:124"
      ]
    },
    "Execute the tool.": {
      "value": "Execute the tool.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:119"
      ]
    },
    "Execute triage-specific tools.": {
      "value": "Execute triage-specific tools.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:168"
      ]
    },
    "Executing agent": {
      "value": "Executing agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:290"
      ]
    },
    "Executing tool through enhanced executor...": {
      "value": "Executing tool through enhanced executor...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:374",
        "scripts/test_websocket_direct.py:197",
        "scripts/test_websocket_standalone.py:230"
      ]
    },
    "Executing:": {
      "value": "Executing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:300"
      ]
    },
    "Execution Time:": {
      "value": "Execution Time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:249"
      ]
    },
    "Execution completed in": {
      "value": "Execution completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:150"
      ]
    },
    "Execution failed": {
      "value": "Execution failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:241"
      ]
    },
    "Execution times:": {
      "value": "Execution times:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:184"
      ]
    },
    "ExecutionEngine has WebSocket manager": {
      "value": "ExecutionEngine has WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:135"
      ]
    },
    "ExecutionEngine has WebSocket notifier": {
      "value": "ExecutionEngine has WebSocket notifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:136"
      ]
    },
    "Exit code:": {
      "value": "Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:350"
      ]
    },
    "Expected": {
      "value": "Expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:141",
        "auth_service/tests/utils/assertion_helpers.py:248",
        "scripts/test_oauth_dev_config.py:90",
        "scripts/test_oauth_dev_config.py:96"
      ]
    },
    "Expected '": {
      "value": "Expected '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:182"
      ]
    },
    "Expected 'staging', got '": {
      "value": "Expected 'staging', got '",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:46",
        "scripts/test_clickhouse_staging.py:56"
      ]
    },
    "Expected (.+) but got (.+)": {
      "value": "Expected (.+) but got (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:180"
      ]
    },
    "Expected 21 unique tokens, got": {
      "value": "Expected 21 unique tokens, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:74"
      ]
    },
    "Expected 3 sessions, got": {
      "value": "Expected 3 sessions, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:301"
      ]
    },
    "Expected 404, got": {
      "value": "Expected 404, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:189"
      ]
    },
    "Expected CORS headers or successful response, got headers:": {
      "value": "Expected CORS headers or successful response, got headers:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:314"
      ]
    },
    "Expected Container ID: GTM-WKP28PNQ": {
      "value": "Expected Container ID: GTM-WKP28PNQ",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:153"
      ]
    },
    "Expected Data Sufficiency:": {
      "value": "Expected Data Sufficiency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:102",
        "scripts/test_adaptive_workflow_local.py:39"
      ]
    },
    "Expected Impact:": {
      "value": "Expected Impact:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:96",
        "scripts/test_auth_service_integration_fix.py:180"
      ]
    },
    "Expected OAuth client ID to be missing, but got:": {
      "value": "Expected OAuth client ID to be missing, but got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:82"
      ]
    },
    "Expected OAuth client secret to be missing, but got a value": {
      "value": "Expected OAuth client secret to be missing, but got a value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:119"
      ]
    },
    "Expected SSL:": {
      "value": "Expected SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:148"
      ]
    },
    "Expected STAGING, got": {
      "value": "Expected STAGING, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:32"
      ]
    },
    "Expected at least 5 events, got": {
      "value": "Expected at least 5 events, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:181"
      ]
    },
    "Expected client_id": {
      "value": "Expected client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:213"
      ]
    },
    "Expected client_secret to match test value": {
      "value": "Expected client_secret to match test value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:215"
      ]
    },
    "Expected empty client_id but got:": {
      "value": "Expected empty client_id but got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:162"
      ]
    },
    "Expected empty client_secret but got a value": {
      "value": "Expected empty client_secret but got a value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:164"
      ]
    },
    "Expected error code '": {
      "value": "Expected error code '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:170"
      ]
    },
    "Expected event type '": {
      "value": "Expected event type '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:264"
      ]
    },
    "Expected exit code:": {
      "value": "Expected exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:26"
      ]
    },
    "Expected redirect URI": {
      "value": "Expected redirect URI",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:235"
      ]
    },
    "Expected status": {
      "value": "Expected status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:166"
      ]
    },
    "Expected success=": {
      "value": "Expected success=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:267"
      ]
    },
    "Expected timestamp:": {
      "value": "Expected timestamp:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:53"
      ]
    },
    "Expected token to be expired, but it's valid": {
      "value": "Expected token to be expired, but it's valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:66"
      ]
    },
    "Expected token_type 'Bearer', got '": {
      "value": "Expected token_type 'Bearer', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:143"
      ]
    },
    "Expected user_id '": {
      "value": "Expected user_id '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:271"
      ]
    },
    "Expected valid:": {
      "value": "Expected valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:240"
      ]
    },
    "Expected with async: <50ms (operations run concurrently)": {
      "value": "Expected with async: <50ms (operations run concurrently)",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:216"
      ]
    },
    "Expected:": {
      "value": "Expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:214",
        "scripts/test_adaptive_workflow_direct.py:140",
        "scripts/test_docker_hot_reload.py:172",
        "scripts/test_log_introspection.py:95"
      ]
    },
    "Expired OAuth state should be rejected": {
      "value": "Expired OAuth state should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:181"
      ]
    },
    "Expired at:": {
      "value": "Expired at:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:46"
      ]
    },
    "Expired refresh token should be rejected": {
      "value": "Expired refresh token should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:202"
      ]
    },
    "Expired session still active": {
      "value": "Expired session still active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:206"
      ]
    },
    "Expires at:": {
      "value": "Expires at:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:97"
      ]
    },
    "Expires in:": {
      "value": "Expires in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:112"
      ]
    },
    "Expires:": {
      "value": "Expires:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:76"
      ]
    },
    "Export configuration to environment": {
      "value": "Export configuration to environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:53"
      ]
    },
    "Export test environment variables": {
      "value": "Export test environment variables",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:347"
      ]
    },
    "Exported port configuration for": {
      "value": "Exported port configuration for",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:78"
      ]
    },
    "Exporting test environment variables...": {
      "value": "Exporting test environment variables...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:377"
      ]
    },
    "Extensions:": {
      "value": "Extensions:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:245"
      ]
    },
    "External origin (should work in dev mode)": {
      "value": "External origin (should work in dev mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:261"
      ]
    },
    "Extracted Property ID:": {
      "value": "Extracted Property ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:85"
      ]
    },
    "FAIL": {
      "value": "FAIL",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:514",
        "scripts/frontend_iterative_test_runner.py:833",
        "scripts/staging_comprehensive_test.py:124",
        "scripts/staging_comprehensive_test.py:127",
        "scripts/staging_comprehensive_test.py:175",
        "scripts/staging_comprehensive_test.py:188",
        "scripts/staging_comprehensive_test.py:230",
        "scripts/staging_comprehensive_test.py:283",
        "scripts/staging_comprehensive_test.py:318",
        "scripts/staging_comprehensive_test.py:373"
      ]
    },
    "FAIL: Auth service not properly configured to skip .env loading": {
      "value": "FAIL: Auth service not properly configured to skip .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:56"
      ]
    },
    "FAIL: Auth service refresh failed!": {
      "value": "FAIL: Auth service refresh failed!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:185"
      ]
    },
    "FAIL: Backend app not properly configured to skip .env loading": {
      "value": "FAIL: Backend app not properly configured to skip .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:40"
      ]
    },
    "FAIL: Blacklisted token was accepted!": {
      "value": "FAIL: Blacklisted token was accepted!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:126"
      ]
    },
    "FAIL: Deployment script missing configurations:": {
      "value": "FAIL: Deployment script missing configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:83"
      ]
    },
    "FAIL: Duplicate access token found at refresh": {
      "value": "FAIL: Duplicate access token found at refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:57"
      ]
    },
    "FAIL: Duplicate jti found:": {
      "value": "FAIL: Duplicate jti found:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:154"
      ]
    },
    "FAIL: Duplicate refresh token found at refresh": {
      "value": "FAIL: Duplicate refresh token found at refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:60"
      ]
    },
    "FAIL: Email mismatch: expected": {
      "value": "FAIL: Email mismatch: expected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:69"
      ]
    },
    "FAIL: Email not preserved:": {
      "value": "FAIL: Email not preserved:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:198"
      ]
    },
    "FAIL: Found": {
      "value": "FAIL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:48"
      ]
    },
    "FAIL: Invalid token was accepted:": {
      "value": "FAIL: Invalid token was accepted:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:116"
      ]
    },
    "FAIL: MISSING EVENTS:": {
      "value": "FAIL: MISSING EVENTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:116",
        "scripts/test_websocket_direct.py:68"
      ]
    },
    "FAIL: Old refresh token was accepted (should be rejected)!": {
      "value": "FAIL: Old refresh token was accepted (should be rejected)!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:206"
      ]
    },
    "FAIL: Refresh": {
      "value": "FAIL: Refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:50"
      ]
    },
    "FAIL: Refresh token not regenerated!": {
      "value": "FAIL: Refresh token not regenerated!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:192"
      ]
    },
    "FAIL: Test '": {
      "value": "FAIL: Test '",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:234"
      ]
    },
    "FAIL: Test failed with error:": {
      "value": "FAIL: Test failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:110"
      ]
    },
    "FAIL: Token": {
      "value": "FAIL: Token",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:145",
        "auth_service/test_auth_direct.py:150"
      ]
    },
    "FAIL: User ID mismatch: expected": {
      "value": "FAIL: User ID mismatch: expected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:72"
      ]
    },
    "FAIL: Valid token was rejected!": {
      "value": "FAIL: Valid token was rejected!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:100"
      ]
    },
    "FAILED": {
      "value": "FAILED",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:242",
        "auth_service/test_url_construction.py:233",
        "scripts/continuous_e2e_test_runner.py:249",
        "scripts/iterative_test_fix_loop.py:53",
        "scripts/run_all_test_categories.py:35",
        "scripts/run_all_test_categories.py:62",
        "scripts/test_adaptive_workflow.py:260",
        "scripts/test_auth_database_sessions.py:369",
        "scripts/test_auth_database_sessions.py:387",
        "scripts/test_comprehensive_scanner.py:36"
      ]
    },
    "FAILED (": {
      "value": "FAILED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:65"
      ]
    },
    "FAILED ([\\w/\\\\\\.]+::\\S+)": {
      "value": "FAILED ([\\w/\\\\\\.]+::\\S+)",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:56",
        "scripts/test_failure_tracker.py:29"
      ]
    },
    "FAILED - Check origin configuration": {
      "value": "FAILED - Check origin configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:91"
      ]
    },
    "FAILED - Legacy code detected": {
      "value": "FAILED - Legacy code detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:190"
      ]
    },
    "FAILED - Not permissive enough": {
      "value": "FAILED - Not permissive enough",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:47"
      ]
    },
    "FAILED - Security issue detected": {
      "value": "FAILED - Security issue detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:137"
      ]
    },
    "FAILED FILES (": {
      "value": "FAILED FILES (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:322"
      ]
    },
    "FAILED TESTS:": {
      "value": "FAILED TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:385",
        "scripts/test_modern_websocket_migration.py:207"
      ]
    },
    "FAILED:": {
      "value": "FAILED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:167",
        "scripts/test_auth_database_sessions.py:61",
        "scripts/test_auth_database_sessions.py:111",
        "scripts/test_auth_database_sessions.py:154",
        "scripts/test_auth_database_sessions.py:208",
        "scripts/test_auth_database_sessions.py:290",
        "scripts/test_auth_database_sessions.py:343",
        "scripts/test_ssl_certificates_staging.py:95",
        "scripts/test_ssl_certificates_staging.py:252",
        "scripts/test_staging_db_direct.py:95"
      ]
    },
    "FAILED: Alembic connection failed": {
      "value": "FAILED: Alembic connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:159"
      ]
    },
    "FAILED: AuthConfig URL connection failed:": {
      "value": "FAILED: AuthConfig URL connection failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:217"
      ]
    },
    "FAILED: AuthConfig URL has incorrect format": {
      "value": "FAILED: AuthConfig URL has incorrect format",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:146"
      ]
    },
    "FAILED: AuthConfig test failed:": {
      "value": "FAILED: AuthConfig test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:183"
      ]
    },
    "FAILED: Cannot import AuthDatabaseManager:": {
      "value": "FAILED: Cannot import AuthDatabaseManager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:58"
      ]
    },
    "FAILED: Configuration validation failed:": {
      "value": "FAILED: Configuration validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:139"
      ]
    },
    "FAILED: Could not generate migration URL": {
      "value": "FAILED: Could not generate migration URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:99"
      ]
    },
    "FAILED: Could not rename": {
      "value": "FAILED: Could not rename",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:194"
      ]
    },
    "FAILED: Credential validation error:": {
      "value": "FAILED: Credential validation error:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:273"
      ]
    },
    "FAILED: Credential validation failed": {
      "value": "FAILED: Credential validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:263"
      ]
    },
    "FAILED: DatabaseURLBuilder test failed:": {
      "value": "FAILED: DatabaseURLBuilder test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:162"
      ]
    },
    "FAILED: Direct asyncpg connection failed:": {
      "value": "FAILED: Direct asyncpg connection failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:80"
      ]
    },
    "FAILED: No database URL generated": {
      "value": "FAILED: No database URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:63"
      ]
    },
    "FAILED: No database URL generated by AuthConfig": {
      "value": "FAILED: No database URL generated by AuthConfig",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:194",
        "auth_service/test_url_construction.py:135"
      ]
    },
    "FAILED: TCP connection failed (expected):": {
      "value": "FAILED: TCP connection failed (expected):",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:110"
      ]
    },
    "FAILED: URL generation failed:": {
      "value": "FAILED: URL generation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:87"
      ]
    },
    "FAILED: URL missing expected components:": {
      "value": "FAILED: URL missing expected components:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:80"
      ]
    },
    "FAILED: URLs missing expected Cloud SQL patterns": {
      "value": "FAILED: URLs missing expected Cloud SQL patterns",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:117"
      ]
    },
    "FAILED: Unexpected URL format:": {
      "value": "FAILED: Unexpected URL format:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:213"
      ]
    },
    "FAILED\\s+([\\w/\\.]+::\\w+)": {
      "value": "FAILED\\s+([\\w/\\.]+::\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:114"
      ]
    },
    "FAILING TEST ANALYSIS:": {
      "value": "FAILING TEST ANALYSIS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:294"
      ]
    },
    "FAILURE:": {
      "value": "FAILURE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:126"
      ]
    },
    "FAILURE: Expected at least 5 events, got": {
      "value": "FAILURE: Expected at least 5 events, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:169",
        "scripts/test_websocket_direct.py:276"
      ]
    },
    "FAILURE: First event should be agent_started, got": {
      "value": "FAILURE: First event should be agent_started, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:284"
      ]
    },
    "FAILURE: Last event should be agent_completed, got": {
      "value": "FAILURE: Last event should be agent_completed, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:288"
      ]
    },
    "FAILURE: Missing critical events:": {
      "value": "FAILURE: Missing critical events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:272"
      ]
    },
    "FAILURE: Missing events:": {
      "value": "FAILURE: Missing events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:165"
      ]
    },
    "FAILURE: Missing tool_completed event": {
      "value": "FAILURE: Missing tool_completed event",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:218"
      ]
    },
    "FAILURE: Missing tool_executing event": {
      "value": "FAILURE: Missing tool_executing event",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:214"
      ]
    },
    "FAILURE: Multiple connection tests failed": {
      "value": "FAILURE: Multiple connection tests failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:323"
      ]
    },
    "FAILURE: Services still blocked by critical issues": {
      "value": "FAILURE: Services still blocked by critical issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:207"
      ]
    },
    "FAILURE: Some tests failed!": {
      "value": "FAILURE: Some tests failed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:331"
      ]
    },
    "FAILURE: URL construction has issues": {
      "value": "FAILURE: URL construction has issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:244"
      ]
    },
    "FAILURES": {
      "value": "FAILURES",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:45"
      ]
    },
    "FAKE TEST ANALYSIS:": {
      "value": "FAKE TEST ANALYSIS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:256"
      ]
    },
    "FALLBACK:": {
      "value": "FALLBACK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:237"
      ]
    },
    "FERNET_": {
      "value": "FERNET_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "FERNET_KEY": {
      "value": "FERNET_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:96",
        "scripts/test/test_clickhouse_staging_fix.py:35",
        "scripts/test/test_clickhouse_staging_fix.py:75",
        "scripts/test/test_clickhouse_staging_fix.py:126",
        "scripts/test_backend_ORIGINAL.py:87",
        "scripts/test_config_loading.py:36",
        "scripts/test_secret_manager_builder_critical.py:83",
        "scripts/test_secret_manager_builder_critical.py:161",
        "scripts/test_secret_manager_builder_critical.py:692",
        "scripts/test_secret_manager_builder_critical.py:703"
      ]
    },
    "FILE_MISSING": {
      "value": "FILE_MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:128"
      ]
    },
    "FILE_READ_ERROR": {
      "value": "FILE_READ_ERROR",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:142"
      ]
    },
    "FINAL ANALYSIS": {
      "value": "FINAL ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:338",
        "scripts/test_intensive_serialization.py:334"
      ]
    },
    "FINAL ASSESSMENT": {
      "value": "FINAL ASSESSMENT",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:185"
      ]
    },
    "FINAL RESULT:": {
      "value": "FINAL RESULT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:149"
      ]
    },
    "FINAL RESULTS": {
      "value": "FINAL RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:208",
        "scripts/test_service_health_simple.py:155"
      ]
    },
    "FINAL RESULTS:": {
      "value": "FINAL RESULTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:316"
      ]
    },
    "FINAL SUMMARY": {
      "value": "FINAL SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:128",
        "scripts/test_failure_tracker.py:192"
      ]
    },
    "FINAL TEST RESULTS": {
      "value": "FINAL TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:158",
        "scripts/test_websocket_chat_simple.py:441",
        "scripts/test_websocket_chat_standalone.py:426"
      ]
    },
    "FINAL TEST SUMMARY - ITERATIONS 71-100": {
      "value": "FINAL TEST SUMMARY - ITERATIONS 71-100",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:97"
      ]
    },
    "FINAL_100_ITERATION_REPORT.md": {
      "value": "FINAL_100_ITERATION_REPORT.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:378"
      ]
    },
    "FIXES APPLIED (": {
      "value": "FIXES APPLIED (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:315"
      ]
    },
    "FIXING ALL TEST ISSUES": {
      "value": "FIXING ALL TEST ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:213"
      ]
    },
    "FIXING COMMON TEST ISSUES": {
      "value": "FIXING COMMON TEST ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:66"
      ]
    },
    "FLAKY TESTS DETECTED:": {
      "value": "FLAKY TESTS DETECTED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:79"
      ]
    },
    "FLAKY TESTS:": {
      "value": "FLAKY TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:736"
      ]
    },
    "FLUSHALL": {
      "value": "FLUSHALL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:121"
      ]
    },
    "FORCE_REAL_SERVICES": {
      "value": "FORCE_REAL_SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:39"
      ]
    },
    "FRONTEND": {
      "value": "FRONTEND",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:24",
        "scripts/test_chat_errors.py:25",
        "scripts/test_chat_errors.py:30",
        "scripts/test_chat_errors.py:31",
        "scripts/test_log_introspection.py:366"
      ]
    },
    "FRONTEND ITERATIVE TEST RUNNER\n==============================\nAutomated test runner for running frontend tests repeatedly with sub-agent fixes.\nDesigned to achieve 100+ iterations targeting specific issue types per iteration.\n\nBACKGROUND FROM SUCCESSFUL ITERATIONS 1-6:\n- ✅ Fixed npm dependencies (iteration 1)\n- ✅ Fixed Jest mock configuration (iteration 2)  \n- ✅ Fixed User Profile Form validation, Clipboard API (iteration 3)\n- ✅ Investigated ChatHistorySection architectural issues (iteration 4)\n- ✅ Fixed keyboard event handlers completely (iteration 5)\n- ✅ Fixed mock setup issues, identified patterns (iteration 6)\n\nKEY AUTOMATION STRATEGY:\n- Focus on specific issue types per iteration (rotate through focus areas)\n- Use fast-fail approach for quick feedback\n- Spawn sub-agents for focused analysis and fixes\n- Track progress and results systematically\n- Handle both technical and architectural issues": {
      "value": "FRONTEND ITERATIVE TEST RUNNER\n==============================\nAutomated test runner for running frontend tests repeatedly with sub-agent fixes.\nDesigned to achieve 100+ iterations targeting specific issue types per iteration.\n\nBACKGROUND FROM SUCCESSFUL ITERATIONS 1-6:\n- ✅ Fixed npm dependencies (iteration 1)\n- ✅ Fixed Jest mock configuration (iteration 2)  \n- ✅ Fixed User Profile Form validation, Clipboard API (iteration 3)\n- ✅ Investigated ChatHistorySection architectural issues (iteration 4)\n- ✅ Fixed keyboard event handlers completely (iteration 5)\n- ✅ Fixed mock setup issues, identified patterns (iteration 6)\n\nKEY AUTOMATION STRATEGY:\n- Focus on specific issue types per iteration (rotate through focus areas)\n- Use fast-fail approach for quick feedback\n- Spawn sub-agents for focused analysis and fixes\n- Track progress and results systematically\n- Handle both technical and architectural issues",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:2"
      ]
    },
    "FRONTEND TEST ITERATION PROGRESS SUMMARY": {
      "value": "FRONTEND TEST ITERATION PROGRESS SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:760"
      ]
    },
    "FRONTEND_PORT": {
      "value": "FRONTEND_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:271"
      ]
    },
    "FRONTEND_URL": {
      "value": "FRONTEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:97",
        "scripts/test_oauth_local.py:65",
        "scripts/test_oauth_local.py:65",
        "scripts/test_staging.py:32"
      ]
    },
    "Factory compliance does not default to staging": {
      "value": "Factory compliance does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:95"
      ]
    },
    "Factory status integration does not default to staging": {
      "value": "Factory status integration does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:104"
      ]
    },
    "Fail Fast:": {
      "value": "Fail Fast:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:371"
      ]
    },
    "Fail Rate": {
      "value": "Fail Rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45"
      ]
    },
    "Fail on any violations (for CI)": {
      "value": "Fail on any violations (for CI)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:259"
      ]
    },
    "Failed": {
      "value": "Failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:378",
        "scripts/test_oauth_local.py:380",
        "scripts/test_staging_deployment.py:98",
        "scripts/test_staging_deployment.py:121",
        "scripts/test_staging_deployment.py:142",
        "scripts/test_windows_process_cleanup.py:94",
        "scripts/test_workflows_with_act.py:207"
      ]
    },
    "Failed iterations:": {
      "value": "Failed iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:764"
      ]
    },
    "Failed renames:": {
      "value": "Failed renames:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:284"
      ]
    },
    "Failed tests:": {
      "value": "Failed tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:225",
        "scripts/test_staging_env.py:196"
      ]
    },
    "Failed to adjust memory for": {
      "value": "Failed to adjust memory for",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:267"
      ]
    },
    "Failed to analyze": {
      "value": "Failed to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:125"
      ]
    },
    "Failed to backup": {
      "value": "Failed to backup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:766"
      ]
    },
    "Failed to cleanup Redis data:": {
      "value": "Failed to cleanup Redis data:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:82"
      ]
    },
    "Failed to close Redis connection:": {
      "value": "Failed to close Redis connection:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:94"
      ]
    },
    "Failed to connect to auth service:": {
      "value": "Failed to connect to auth service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:57"
      ]
    },
    "Failed to connect to backend:": {
      "value": "Failed to connect to backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:43"
      ]
    },
    "Failed to connect to frontend:": {
      "value": "Failed to connect to frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:29"
      ]
    },
    "Failed to create": {
      "value": "Failed to create",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:411"
      ]
    },
    "Failed to create account:": {
      "value": "Failed to create account:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:191"
      ]
    },
    "Failed to create backup for": {
      "value": "Failed to create backup for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:822"
      ]
    },
    "Failed to create connection manager": {
      "value": "Failed to create connection manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:71"
      ]
    },
    "Failed to create thread:": {
      "value": "Failed to create thread:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:243",
        "scripts/test_cold_start_e2e.py:338"
      ]
    },
    "Failed to decode token": {
      "value": "Failed to decode token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:63"
      ]
    },
    "Failed to execute test suite:": {
      "value": "Failed to execute test suite:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:321"
      ]
    },
    "Failed to fix:": {
      "value": "Failed to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:393"
      ]
    },
    "Failed to get auth token": {
      "value": "Failed to get auth token",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:52"
      ]
    },
    "Failed to get authentication token from staging": {
      "value": "Failed to get authentication token from staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:86"
      ]
    },
    "Failed to get container stats:": {
      "value": "Failed to get container stats:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:156"
      ]
    },
    "Failed to import WebSocket core:": {
      "value": "Failed to import WebSocket core:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:65"
      ]
    },
    "Failed to import canonical WebSocket manager:": {
      "value": "Failed to import canonical WebSocket manager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:50"
      ]
    },
    "Failed to import optimization modules:": {
      "value": "Failed to import optimization modules:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:38"
      ]
    },
    "Failed to import required modules:": {
      "value": "Failed to import required modules:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:81"
      ]
    },
    "Failed to install dependencies:": {
      "value": "Failed to install dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:63"
      ]
    },
    "Failed to kill PID": {
      "value": "Failed to kill PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:124"
      ]
    },
    "Failed to load violations file:": {
      "value": "Failed to load violations file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:610"
      ]
    },
    "Failed to parse Jest test list": {
      "value": "Failed to parse Jest test list",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:174"
      ]
    },
    "Failed to parse LLM response": {
      "value": "Failed to parse LLM response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:132"
      ]
    },
    "Failed to parse WebSocket message:": {
      "value": "Failed to parse WebSocket message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:64",
        "scripts/test_standalone_websocket.py:31",
        "scripts/test_websocket_standalone.py:54"
      ]
    },
    "Failed to parse file": {
      "value": "Failed to parse file",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:16"
      ]
    },
    "Failed to parse message:": {
      "value": "Failed to parse message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:89"
      ]
    },
    "Failed to process": {
      "value": "Failed to process",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:673"
      ]
    },
    "Failed to read": {
      "value": "Failed to read",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:185"
      ]
    },
    "Failed to remove original file:": {
      "value": "Failed to remove original file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:291"
      ]
    },
    "Failed to run unified test runner:": {
      "value": "Failed to run unified test runner:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:59",
        "scripts/test_frontend.py:59"
      ]
    },
    "Failed to seed Redis data:": {
      "value": "Failed to seed Redis data:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:70"
      ]
    },
    "Failed to send message:": {
      "value": "Failed to send message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:363"
      ]
    },
    "Failed to setup real services:": {
      "value": "Failed to setup real services:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:127"
      ]
    },
    "Failed to setup test database:": {
      "value": "Failed to setup test database:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:232"
      ]
    },
    "Failed to split function": {
      "value": "Failed to split function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:479"
      ]
    },
    "Failed to start Docker services": {
      "value": "Failed to start Docker services",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:53"
      ]
    },
    "Failed to start services:": {
      "value": "Failed to start services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:140"
      ]
    },
    "Failed to test CORS:": {
      "value": "Failed to test CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:93"
      ]
    },
    "Failed to test protected endpoint:": {
      "value": "Failed to test protected endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:75"
      ]
    },
    "Failed to update test:": {
      "value": "Failed to update test:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:194"
      ]
    },
    "Failed:": {
      "value": "Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:101",
        "scripts/fix_test_batch.py:383",
        "scripts/run_all_test_categories.py:140",
        "scripts/simple_test_fix_loop.py:94",
        "scripts/staging_comprehensive_test.py:461",
        "scripts/test_auth_database_sessions.py:399",
        "scripts/test_clickhouse_startup_fix.py:375",
        "scripts/test_coordination_fixes.py:381",
        "scripts/test_database_url_builder_comprehensive.py:349",
        "scripts/test_example_message_flow.py:322"
      ]
    },
    "Failure Rate:": {
      "value": "Failure Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:83",
        "scripts/test_execution_tracker.py:740"
      ]
    },
    "Failure rate:": {
      "value": "Failure rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:226"
      ]
    },
    "Failure report:": {
      "value": "Failure report:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:337"
      ]
    },
    "Failures by category:": {
      "value": "Failures by category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:210"
      ]
    },
    "Failures detected:": {
      "value": "Failures detected:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:105"
      ]
    },
    "Failures found:": {
      "value": "Failures found:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:74"
      ]
    },
    "Failures:": {
      "value": "Failures:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:473"
      ]
    },
    "Fake Test Scan Results:": {
      "value": "Fake Test Scan Results:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:406",
        "scripts/compliance/fake_test_scanner.py:410"
      ]
    },
    "Fake Test Scanner - Comprehensive fake test detection and reporting\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n1. **Segment**: Platform/Internal - Quality assurance for all tiers\n2. **Business Goal**: Platform Stability, Development Velocity, Risk Reduction\n3. **Value Impact**: Prevents false confidence from fake tests, improves reliability\n4. **Strategic Impact**: Reduces debugging time, accelerates issue resolution\n5. **Platform Stability**: Ensures all tests provide real validation\n\nThis script provides comprehensive fake test detection across the entire codebase.\nIt integrates with existing test infrastructure and generates actionable reports.\n\nUsage:\n    python scripts/compliance/fake_test_scanner.py --scan-all\n    python scripts/compliance/fake_test_scanner.py --directory app/tests\n    python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n    python scripts/compliance/fake_test_scanner.py --report-only": {
      "value": "Fake Test Scanner - Comprehensive fake test detection and reporting\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n1. **Segment**: Platform/Internal - Quality assurance for all tiers\n2. **Business Goal**: Platform Stability, Development Velocity, Risk Reduction\n3. **Value Impact**: Prevents false confidence from fake tests, improves reliability\n4. **Strategic Impact**: Reduces debugging time, accelerates issue resolution\n5. **Platform Stability**: Ensures all tests provide real validation\n\nThis script provides comprehensive fake test detection across the entire codebase.\nIt integrates with existing test infrastructure and generates actionable reports.\n\nUsage:\n    python scripts/compliance/fake_test_scanner.py --scan-all\n    python scripts/compliance/fake_test_scanner.py --directory app/tests\n    python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n    python scripts/compliance/fake_test_scanner.py --report-only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:2"
      ]
    },
    "Fake Tests by Severity:": {
      "value": "Fake Tests by Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:264"
      ]
    },
    "Fake Tests by Type:": {
      "value": "Fake Tests by Type:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:272"
      ]
    },
    "Fallback Mode (Execution Failed)": {
      "value": "Fallback Mode (Execution Failed)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:272"
      ]
    },
    "Fallback to standard test execution": {
      "value": "Fallback to standard test execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:242"
      ]
    },
    "Fallbacks Applied:": {
      "value": "Fallbacks Applied:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:54"
      ]
    },
    "Falling back to standard test runner...": {
      "value": "Falling back to standard test runner...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:39"
      ]
    },
    "False": {
      "value": "False",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:195"
      ]
    },
    "False positives from our LLM-based transaction fraud classifier are spiking customer friction. Can we refine the model to reject fewer legitimate transactions?": {
      "value": "False positives from our LLM-based transaction fraud classifier are spiking customer friction. Can we refine the model to reject fewer legitimate transactions?",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:26"
      ]
    },
    "Fast-fail import testing for Netra Backend": {
      "value": "Fast-fail import testing for Netra Backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:29"
      ]
    },
    "Fast-fail import testing script for Netra Backend\n\nThis script provides quick import validation to catch import errors\nearly in the development cycle. It can be run standalone or integrated\ninto CI/CD pipelines.\n\nUsage:\n    python scripts/test_imports.py              # Test critical imports (fast-fail)\n    python scripts/test_imports.py --all        # Test all imports\n    python scripts/test_imports.py --module app.services  # Test specific module": {
      "value": "Fast-fail import testing script for Netra Backend\n\nThis script provides quick import validation to catch import errors\nearly in the development cycle. It can be run standalone or integrated\ninto CI/CD pipelines.\n\nUsage:\n    python scripts/test_imports.py              # Test critical imports (fast-fail)\n    python scripts/test_imports.py --all        # Test all imports\n    python scripts/test_imports.py --module app.services  # Test specific module",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:2"
      ]
    },
    "FastAPI": {
      "value": "FastAPI",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:138"
      ]
    },
    "FastAPI app has no routes configured": {
      "value": "FastAPI app has no routes configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:253"
      ]
    },
    "FastAPI app import failed": {
      "value": "FastAPI app import failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:215"
      ]
    },
    "Fatal error:": {
      "value": "Fatal error:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:762"
      ]
    },
    "Feature grouping is heuristic - review carefully": {
      "value": "Feature grouping is heuristic - review carefully",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:517"
      ]
    },
    "Feature integration tests (3-5min)": {
      "value": "Feature integration tests (3-5min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:40"
      ]
    },
    "Fernet Key:": {
      "value": "Fernet Key:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:98"
      ]
    },
    "Fernet Key: MISSING": {
      "value": "Fernet Key: MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:141"
      ]
    },
    "Fernet Key: OK - Configured (from": {
      "value": "Fernet Key: OK - Configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:139"
      ]
    },
    "Field Analysis:": {
      "value": "Field Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:85"
      ]
    },
    "Field(default=\"staging\"": {
      "value": "Field(default=\"staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:119"
      ]
    },
    "File": {
      "value": "File",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256"
      ]
    },
    "File \"": {
      "value": "File \"",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:28"
      ]
    },
    "File \"([^\"]+\\.py)\"": {
      "value": "File \"([^\"]+\\.py)\"",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:29",
        "scripts/simple_test_fix_loop.py:30"
      ]
    },
    "File does not exist:": {
      "value": "File does not exist:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:133"
      ]
    },
    "File has": {
      "value": "File has",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:213",
        "scripts/compliance/project_test_validator.py:156",
        "scripts/compliance/real_test_requirements_enforcer.py:222",
        "scripts/compliance/real_test_requirements_enforcer.py:401",
        "scripts/compliance/real_test_validator.py:111",
        "scripts/compliance/test_size_validator.py:364"
      ]
    },
    "File not found:": {
      "value": "File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:650",
        "scripts/auto_fix_test_sizes.py:684",
        "scripts/auto_fix_test_violations.py:195",
        "scripts/compliance/fake_test_scanner.py:134",
        "scripts/migrate_test_environment_access.py:139"
      ]
    },
    "File size:": {
      "value": "File size:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:88"
      ]
    },
    "File:": {
      "value": "File:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:299",
        "scripts/remove_test_stubs.py:328"
      ]
    },
    "Files Affected:": {
      "value": "Files Affected:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:311"
      ]
    },
    "Files Migrated:": {
      "value": "Files Migrated:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:292"
      ]
    },
    "Files analyzed:": {
      "value": "Files analyzed:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:400"
      ]
    },
    "Files exceeding": {
      "value": "Files exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:421"
      ]
    },
    "Files fixed:": {
      "value": "Files fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:92"
      ]
    },
    "Files modified:": {
      "value": "Files modified:",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:183",
        "scripts/fix_e2e_test_imports.py:208"
      ]
    },
    "Files processed:": {
      "value": "Files processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:227",
        "scripts/apply_fast_test_decorators.py:182",
        "scripts/auto_fix_test_sizes.py:748",
        "scripts/fix_e2e_test_imports.py:207"
      ]
    },
    "Files scanned:": {
      "value": "Files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:195"
      ]
    },
    "Files split:": {
      "value": "Files split:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:749"
      ]
    },
    "Files successfully fixed:": {
      "value": "Files successfully fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:311"
      ]
    },
    "Files that failed to fix:": {
      "value": "Files that failed to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:312"
      ]
    },
    "Files with Violations:": {
      "value": "Files with Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:51"
      ]
    },
    "Files with import errors:": {
      "value": "Files with import errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:277",
        "scripts/fix_test_import_errors.py:310"
      ]
    },
    "Files with import order issues:": {
      "value": "Files with import order issues:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:88"
      ]
    },
    "Files with violations:": {
      "value": "Files with violations:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:196"
      ]
    },
    "Final Node.js processes:": {
      "value": "Final Node.js processes:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:113"
      ]
    },
    "Final Result:": {
      "value": "Final Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:211"
      ]
    },
    "Final Status:": {
      "value": "Final Status:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:134",
        "scripts/test_service_startup_with_missing_optionals.py:161"
      ]
    },
    "Final Summary": {
      "value": "Final Summary",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:138"
      ]
    },
    "Final Test Status Check - Iterations 71-100": {
      "value": "Final Test Status Check - Iterations 71-100",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:37"
      ]
    },
    "Final Test Status Check - Iterations 71-100 Summary\n\nThis script provides a comprehensive summary of test improvements made during\nthe final 30 iterations of test fixing and infrastructure improvements.": {
      "value": "Final Test Status Check - Iterations 71-100 Summary\n\nThis script provides a comprehensive summary of test improvements made during\nthe final 30 iterations of test fixing and infrastructure improvements.",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:2"
      ]
    },
    "Final connection state:": {
      "value": "Final connection state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:111"
      ]
    },
    "Final reports created in": {
      "value": "Final reports created in",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:489"
      ]
    },
    "Find flaky tests": {
      "value": "Find flaky tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:777"
      ]
    },
    "Findings must be a list": {
      "value": "Findings must be a list",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:365"
      ]
    },
    "First Time User Critical Paths": {
      "value": "First Time User Critical Paths",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:65"
      ]
    },
    "First allocation failed:": {
      "value": "First allocation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:165"
      ]
    },
    "First authorization code use should succeed": {
      "value": "First authorization code use should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:66"
      ]
    },
    "First nonce use should succeed": {
      "value": "First nonce use should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:78"
      ]
    },
    "First refresh should succeed": {
      "value": "First refresh should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:39",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:162"
      ]
    },
    "First session state isolation should succeed": {
      "value": "First session state isolation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:196"
      ]
    },
    "First state validation should succeed": {
      "value": "First state validation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:44"
      ]
    },
    "Fix": {
      "value": "Fix",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:104",
        "scripts/test_dashboard.py:394"
      ]
    },
    "Fix #": {
      "value": "Fix #",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:123"
      ]
    },
    "Fix Authentication Test Tokens\n\nThis script fixes the authentication integration tests by replacing invalid\ntoken strings with properly formatted JWT tokens.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Fix authentication tests to pass with proper JWT tokens\n- Value Impact: Enables authentication system validation and reliability\n- Strategic Impact: Prevents authentication regressions": {
      "value": "Fix Authentication Test Tokens\n\nThis script fixes the authentication integration tests by replacing invalid\ntoken strings with properly formatted JWT tokens.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Fix authentication tests to pass with proper JWT tokens\n- Value Impact: Enables authentication system validation and reliability\n- Strategic Impact: Prevents authentication regressions",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:1"
      ]
    },
    "Fix Python syntax errors": {
      "value": "Fix Python syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:202"
      ]
    },
    "Fix TestSyntaxFix classes that have __init__ constructors in test files.\n\nPytest doesn't allow test classes to have __init__ constructors.\nThis script converts them to use setup_method instead.": {
      "value": "Fix TestSyntaxFix classes that have __init__ constructors in test files.\n\nPytest doesn't allow test classes to have __init__ constructors.\nThis script converts them to use setup_method instead.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:1"
      ]
    },
    "Fix all test issues including syntax errors and size violations.": {
      "value": "Fix all test issues including syntax errors and size violations.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:2"
      ]
    },
    "Fix common test issues in the Netra codebase.": {
      "value": "Fix common test issues in the Netra codebase.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:2"
      ]
    },
    "Fix database configuration": {
      "value": "Fix database configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:124"
      ]
    },
    "Fix detected stubs (not implemented)": {
      "value": "Fix detected stubs (not implemented)",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:356"
      ]
    },
    "Fix implementation bug": {
      "value": "Fix implementation bug",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:108"
      ]
    },
    "Fix import paths": {
      "value": "Fix import paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:98"
      ]
    },
    "Fix import statements": {
      "value": "Fix import statements",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:218"
      ]
    },
    "Fix issues before deploying to production": {
      "value": "Fix issues before deploying to production",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:464"
      ]
    },
    "Fix issues related to": {
      "value": "Fix issues related to",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:441"
      ]
    },
    "Fix mock component function in": {
      "value": "Fix mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:358"
      ]
    },
    "Fix service health issues before testing login flows": {
      "value": "Fix service health issues before testing login flows",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:368"
      ]
    },
    "Fix strategy:": {
      "value": "Fix strategy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:54"
      ]
    },
    "Fix tasks saved to:": {
      "value": "Fix tasks saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:226"
      ]
    },
    "Fix test logic": {
      "value": "Fix test logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:106"
      ]
    },
    "Fix test_utils import errors in test files.\n\nThis script fixes the incorrect import:\n    from netra_backend.tests.test_utils import setup_test_path\n    \nAnd removes it since it's not needed (tests should be run from proper context).": {
      "value": "Fix test_utils import errors in test files.\n\nThis script fixes the incorrect import:\n    from netra_backend.tests.test_utils import setup_test_path\n    \nAnd removes it since it's not needed (tests should be run from proper context).",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:2"
      ]
    },
    "Fix the failing test:": {
      "value": "Fix the failing test:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:127"
      ]
    },
    "Fix the import order in test files to ensure setup_test_path() is called first.": {
      "value": "Fix the import order in test files to ensure setup_test_path() is called first.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:1"
      ]
    },
    "Fix:": {
      "value": "Fix:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:443"
      ]
    },
    "Fixed": {
      "value": "Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:57",
        "scripts/compliance/real_test_linter.py:63",
        "scripts/fix_all_test_issues.py:245",
        "scripts/fix_test_syntax_errors.py:254"
      ]
    },
    "Fixed UserPlan import with placeholder enum": {
      "value": "Fixed UserPlan import with placeholder enum",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:73"
      ]
    },
    "Fixed UserSession import to use Session alias": {
      "value": "Fixed UserSession import to use Session alias",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:66"
      ]
    },
    "Fixed WebSocketConnectionManager import to use ConnectionManager": {
      "value": "Fixed WebSocketConnectionManager import to use ConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:59"
      ]
    },
    "Fixed async/await usage": {
      "value": "Fixed async/await usage",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:744"
      ]
    },
    "Fixed click event handlers": {
      "value": "Fixed click event handlers",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:668"
      ]
    },
    "Fixed decorator spacing in": {
      "value": "Fixed decorator spacing in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:60"
      ]
    },
    "Fixed duplicate import in": {
      "value": "Fixed duplicate import in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:47"
      ]
    },
    "Fixed event handler mocking": {
      "value": "Fixed event handler mocking",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:664"
      ]
    },
    "Fixed export statements": {
      "value": "Fixed export statements",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:694"
      ]
    },
    "Fixed exportConversation mock in": {
      "value": "Fixed exportConversation mock in",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:640"
      ]
    },
    "Fixed import order": {
      "value": "Fixed import order",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:85"
      ]
    },
    "Fixed imports in:": {
      "value": "Fixed imports in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:107",
        "scripts/align_test_imports.py:433"
      ]
    },
    "Fixed invalid syntax:": {
      "value": "Fixed invalid syntax:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:239"
      ]
    },
    "Fixed missing component props": {
      "value": "Fixed missing component props",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:677"
      ]
    },
    "Fixed missing mock module imports": {
      "value": "Fixed missing mock module imports",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:651"
      ]
    },
    "Fixed mockStore.exportConversation mock issue in": {
      "value": "Fixed mockStore.exportConversation mock issue in",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:577"
      ]
    },
    "Fixed module import paths": {
      "value": "Fixed module import paths",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:690"
      ]
    },
    "Fixed promise handling": {
      "value": "Fixed promise handling",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:746"
      ]
    },
    "Fixed syntax in:": {
      "value": "Fixed syntax in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:365"
      ]
    },
    "Fixed syntax issues in:": {
      "value": "Fixed syntax issues in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:445"
      ]
    },
    "Fixed test environment variables": {
      "value": "Fixed test environment variables",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:705"
      ]
    },
    "Fixed unmatched parens:": {
      "value": "Fixed unmatched parens:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:243"
      ]
    },
    "Fixed validation logic": {
      "value": "Fixed validation logic",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:729"
      ]
    },
    "Fixed version conflicts": {
      "value": "Fixed version conflicts",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:718"
      ]
    },
    "Fixed:": {
      "value": "Fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:87",
        "scripts/fix_test_batch.py:382",
        "scripts/fix_test_import_order.py:101",
        "scripts/fix_test_syntax_errors.py:252",
        "scripts/fix_test_utils_imports.py:50",
        "scripts/remove_duplicate_test_setup.py:61"
      ]
    },
    "Fixes Applied:": {
      "value": "Fixes Applied:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:134"
      ]
    },
    "Fixes applied:": {
      "value": "Fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:775"
      ]
    },
    "Fixes made:": {
      "value": "Fixes made:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:134"
      ]
    },
    "Fixing": {
      "value": "Fixing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:806"
      ]
    },
    "Fixing Authentication Test Tokens": {
      "value": "Fixing Authentication Test Tokens",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:155"
      ]
    },
    "Fixing Test Files:": {
      "value": "Fixing Test Files:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:161"
      ]
    },
    "Fixing import issues...": {
      "value": "Fixing import issues...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:84"
      ]
    },
    "Fixing test discovery paths...": {
      "value": "Fixing test discovery paths...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:312"
      ]
    },
    "Fixing test runner configuration...": {
      "value": "Fixing test runner configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:213"
      ]
    },
    "Fixtures:": {
      "value": "Fixtures:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:91",
        "scripts/compliance/test_refactor_helper.py:709"
      ]
    },
    "Focus area:": {
      "value": "Focus area:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:772"
      ]
    },
    "Focus areas:": {
      "value": "Focus areas:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:860"
      ]
    },
    "For": {
      "value": "For",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:171",
        "scripts/test_ssl_certificates_staging.py:247"
      ]
    },
    "For automated testing, use mock authentication or API keys instead of OAuth": {
      "value": "For automated testing, use mock authentication or API keys instead of OAuth",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:376"
      ]
    },
    "For detailed guidance:": {
      "value": "For detailed guidance:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:313"
      ]
    },
    "For migrations:": {
      "value": "For migrations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:205"
      ]
    },
    "For psycopg2:": {
      "value": "For psycopg2:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:73"
      ]
    },
    "Forbidden permission found:": {
      "value": "Forbidden permission found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:229"
      ]
    },
    "Force cleanup": {
      "value": "Force cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:212"
      ]
    },
    "Force kill without confirmation": {
      "value": "Force kill without confirmation",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:151"
      ]
    },
    "Found": {
      "value": "Found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:177",
        "scripts/align_test_imports.py:45",
        "scripts/analyze_test_overlap.py:79",
        "scripts/analyze_test_overlap.py:489",
        "scripts/cleanup_test_processes.py:106",
        "scripts/compliance/fake_test_scanner.py:74",
        "scripts/compliance/real_test_requirements_enforcer.py:83",
        "scripts/compliance/test_size_validator.py:73",
        "scripts/comprehensive_test_fixer.py:300",
        "scripts/continuous_e2e_test_runner.py:231"
      ]
    },
    "Found Alembic config:": {
      "value": "Found Alembic config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:117"
      ]
    },
    "Found issues in": {
      "value": "Found issues in",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:292"
      ]
    },
    "Found potential migration directory:": {
      "value": "Found potential migration directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:133"
      ]
    },
    "Found similar names in module:": {
      "value": "Found similar names in module:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:124"
      ]
    },
    "Found syntax error in:": {
      "value": "Found syntax error in:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:33"
      ]
    },
    "Found test credentials file...": {
      "value": "Found test credentials file...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:133"
      ]
    },
    "Found usage of deprecated JWT_SECRET (should be JWT_SECRET_KEY):": {
      "value": "Found usage of deprecated JWT_SECRET (should be JWT_SECRET_KEY):",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:167"
      ]
    },
    "Found:": {
      "value": "Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:180"
      ]
    },
    "Fresh token validation failed": {
      "value": "Fresh token validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:123"
      ]
    },
    "From JWT_SECRET env var": {
      "value": "From JWT_SECRET env var",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:103"
      ]
    },
    "From JWT_SECRET_KEY env var": {
      "value": "From JWT_SECRET_KEY env var",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:102"
      ]
    },
    "Frontend": {
      "value": "Frontend",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:64",
        "scripts/test_staging_login_automated.py:180"
      ]
    },
    "Frontend API Proxy": {
      "value": "Frontend API Proxy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:151"
      ]
    },
    "Frontend API proxy is configured": {
      "value": "Frontend API proxy is configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:124"
      ]
    },
    "Frontend API proxy test failed:": {
      "value": "Frontend API proxy test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:128"
      ]
    },
    "Frontend Health": {
      "value": "Frontend Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:86",
        "scripts/test_staging_env.py:146"
      ]
    },
    "Frontend Hot Reload": {
      "value": "Frontend Hot Reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:208"
      ]
    },
    "Frontend Service": {
      "value": "Frontend Service",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:37"
      ]
    },
    "Frontend Service:": {
      "value": "Frontend Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:337"
      ]
    },
    "Frontend Tests:": {
      "value": "Frontend Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:116"
      ]
    },
    "Frontend application tests": {
      "value": "Frontend application tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:85"
      ]
    },
    "Frontend collection failed:": {
      "value": "Frontend collection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:179"
      ]
    },
    "Frontend connecting from host browser to Docker backend": {
      "value": "Frontend connecting from host browser to Docker backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:124"
      ]
    },
    "Frontend health check failed:": {
      "value": "Frontend health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:52"
      ]
    },
    "Frontend is serving": {
      "value": "Frontend is serving",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:48"
      ]
    },
    "Frontend port": {
      "value": "Frontend port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:208"
      ]
    },
    "Frontend proxy returned status": {
      "value": "Frontend proxy returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:126"
      ]
    },
    "Frontend returned status": {
      "value": "Frontend returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:23",
        "scripts/test_staging_env.py:50"
      ]
    },
    "Frontend section": {
      "value": "Frontend section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:366"
      ]
    },
    "Frontend should be in registry": {
      "value": "Frontend should be in registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:340"
      ]
    },
    "Frontend should have started": {
      "value": "Frontend should have started",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:333"
      ]
    },
    "Frontend test collection timed out": {
      "value": "Frontend test collection timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:177"
      ]
    },
    "Frontend token:": {
      "value": "Frontend token:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:58",
        "scripts/test_jwt_fix.py:35"
      ]
    },
    "Frontend:": {
      "value": "Frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:89",
        "scripts/test_and_fix_cors.py:117",
        "scripts/test_and_fix_cors.py:133"
      ]
    },
    "Frontend: ./frontend/* -> /app/*": {
      "value": "Frontend: ./frontend/* -> /app/*",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:234"
      ]
    },
    "Full URL for debug:": {
      "value": "Full URL for debug:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:81"
      ]
    },
    "Full analysis saved to mock_analysis.json": {
      "value": "Full analysis saved to mock_analysis.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:195"
      ]
    },
    "Full name (optional):": {
      "value": "Full name (optional):",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:166"
      ]
    },
    "Full optimization workflow with all agents": {
      "value": "Full optimization workflow with all agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:320"
      ]
    },
    "Full report saved to:": {
      "value": "Full report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:386"
      ]
    },
    "Full reports saved to test_reports/": {
      "value": "Full reports saved to test_reports/",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:664"
      ]
    },
    "Full test suite (30-45min)": {
      "value": "Full test suite (30-45min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:48"
      ]
    },
    "Fully Configured": {
      "value": "Fully Configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:161"
      ]
    },
    "Function": {
      "value": "Function",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:192"
      ]
    },
    "Function '": {
      "value": "Function '",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_validator.py:213",
        "scripts/compliance/test_limits_checker.py:209"
      ]
    },
    "Function accepts *args, **kwargs and returns static data": {
      "value": "Function accepts *args, **kwargs and returns static data",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:198"
      ]
    },
    "Function refactoring is disabled.": {
      "value": "Function refactoring is disabled.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "Function/class": {
      "value": "Function/class",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:116"
      ]
    },
    "Functionality Warnings:": {
      "value": "Functionality Warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:115"
      ]
    },
    "Functions added:": {
      "value": "Functions added:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:399"
      ]
    },
    "Functions exceeding": {
      "value": "Functions exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:422"
      ]
    },
    "Functions optimized:": {
      "value": "Functions optimized:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:750"
      ]
    },
    "Functions:": {
      "value": "Functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:89",
        "scripts/compliance/test_refactor_helper.py:707"
      ]
    },
    "G": {
      "value": "G",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:188",
        "scripts/test_docker_config.py:54"
      ]
    },
    "G (<": {
      "value": "G (<",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:68"
      ]
    },
    "G (>=": {
      "value": "G (>=",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:66"
      ]
    },
    "G)": {
      "value": "G)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:66",
        "scripts/test_docker_config.py:68"
      ]
    },
    "G-522Q06C6M5": {
      "value": "G-522Q06C6M5",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:24"
      ]
    },
    "GB": {
      "value": "GB",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:188",
        "scripts/pytest_resource_monitor.py:257"
      ]
    },
    "GB ->": {
      "value": "GB ->",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:257"
      ]
    },
    "GB)": {
      "value": "GB)",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:208",
        "scripts/pytest_resource_monitor.py:217"
      ]
    },
    "GC frequency": {
      "value": "GC frequency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91"
      ]
    },
    "GC pause:": {
      "value": "GC pause:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:118"
      ]
    },
    "GCE_METADATA_HOST": {
      "value": "GCE_METADATA_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:228"
      ]
    },
    "GCP_": {
      "value": "GCP_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "GCP_PROJECT_ID": {
      "value": "GCP_PROJECT_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:65",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:82",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:274",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:290",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:319",
        "scripts/test/test_clickhouse_staging_fix.py:128",
        "scripts/test_clickhouse_staging.py:35",
        "scripts/test_config_loading.py:36",
        "scripts/test_redis_config_critical_failure.py:93",
        "scripts/test_staging.py:34"
      ]
    },
    "GCP_PROJECT_ID_NUMERICAL_PRODUCTION": {
      "value": "GCP_PROJECT_ID_NUMERICAL_PRODUCTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:155",
        "scripts/test_secret_manager_builder_critical.py:563"
      ]
    },
    "GCP_PROJECT_ID_NUMERICAL_STAGING": {
      "value": "GCP_PROJECT_ID_NUMERICAL_STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:36",
        "scripts/test_secret_manager_builder_critical.py:141",
        "scripts/test_staging_config.py:45",
        "scripts/test_staging_config.py:65"
      ]
    },
    "GCP_REGION": {
      "value": "GCP_REGION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:35"
      ]
    },
    "GEMINI_": {
      "value": "GEMINI_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "GEMINI_2_5_FLASH": {
      "value": "GEMINI_2_5_FLASH",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:18",
        "scripts/validate_llm_test_models.py:115"
      ]
    },
    "GEMINI_2_5_PRO": {
      "value": "GEMINI_2_5_PRO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:19",
        "scripts/validate_llm_test_models.py:115"
      ]
    },
    "GEMINI_API_KEY": {
      "value": "GEMINI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:51",
        "scripts/run_agent_pipeline_test.py:51",
        "scripts/run_critical_test.py:16",
        "scripts/run_critical_test.py:17",
        "scripts/run_critical_test.py:18",
        "scripts/run_critical_test.py:40",
        "scripts/setup_test_environment.py:119",
        "scripts/setup_test_environment.py:246",
        "scripts/setup_test_environment.py:257",
        "scripts/test_backend_ORIGINAL.py:95"
      ]
    },
    "GEMINI_API_KEY:": {
      "value": "GEMINI_API_KEY:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:40"
      ]
    },
    "GEMINI_PRO": {
      "value": "GEMINI_PRO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:20"
      ]
    },
    "GET": {
      "value": "GET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:302",
        "scripts/debug_cors_test.py:16",
        "scripts/staging_comprehensive_test.py:90",
        "scripts/staging_comprehensive_test.py:109",
        "scripts/staging_comprehensive_test.py:117",
        "scripts/staging_comprehensive_test.py:256",
        "scripts/test_agent_recovery_simple.py:65",
        "scripts/test_agent_recovery_simple.py:69",
        "scripts/test_and_fix_cors.py:23",
        "scripts/test_cors.py:98"
      ]
    },
    "GET /health - Basic health status": {
      "value": "GET /health - Basic health status",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:308"
      ]
    },
    "GET /health-status - Detailed status": {
      "value": "GET /health-status - Detailed status",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:309"
      ]
    },
    "GET /health-status?fresh=true - Force fresh check": {
      "value": "GET /health-status?fresh=true - Force fresh check",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:310"
      ]
    },
    "GET /metrics - Prometheus metrics": {
      "value": "GET /metrics - Prometheus metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:312"
      ]
    },
    "GET /service/{service} - Specific service status": {
      "value": "GET /service/{service} - Specific service status",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:311"
      ]
    },
    "GET, POST, OPTIONS": {
      "value": "GET, POST, OPTIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:280"
      ]
    },
    "GET/POST": {
      "value": "GET/POST",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:88",
        "scripts/test_agent_recovery_simple.py:96",
        "scripts/test_agent_recovery_simple.py:104"
      ]
    },
    "GIB": {
      "value": "GIB",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:188"
      ]
    },
    "GITHUB_TOKEN": {
      "value": "GITHUB_TOKEN",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:59"
      ]
    },
    "GOCSPX-1234567890123456789012345678901234": {
      "value": "GOCSPX-1234567890123456789012345678901234",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:202",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:273",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:333",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:372",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:415"
      ]
    },
    "GOCSPX-test-client-secret-1234567890123456789": {
      "value": "GOCSPX-test-client-secret-1234567890123456789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:79"
      ]
    },
    "GOOGLE_": {
      "value": "GOOGLE_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "GOOGLE_API_KEY": {
      "value": "GOOGLE_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:54",
        "scripts/run_agent_pipeline_test.py:54",
        "scripts/run_critical_test.py:24",
        "scripts/run_critical_test.py:41",
        "scripts/setup_test_environment.py:259"
      ]
    },
    "GOOGLE_API_KEY:": {
      "value": "GOOGLE_API_KEY:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:41"
      ]
    },
    "GOOGLE_CLIENT_ID": {
      "value": "GOOGLE_CLIENT_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:75",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:151",
        "scripts/setup_staging_test_account.py:66",
        "scripts/test_backend_ORIGINAL.py:96",
        "scripts/test_oauth_dev_config.py:29",
        "scripts/test_oauth_dev_config.py:41",
        "scripts/test_oauth_dev_config.py:56",
        "scripts/test_oauth_dev_config.py:74",
        "scripts/test_oauth_local.py:399",
        "scripts/test_secret_manager_builder_critical.py:85"
      ]
    },
    "GOOGLE_CLIENT_ID=google-oauth-client-id-staging": {
      "value": "GOOGLE_CLIENT_ID=google-oauth-client-id-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:74"
      ]
    },
    "GOOGLE_CLIENT_SECRET": {
      "value": "GOOGLE_CLIENT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:112",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:151",
        "scripts/test_backend_ORIGINAL.py:97",
        "scripts/test_oauth_dev_config.py:30",
        "scripts/test_oauth_dev_config.py:42",
        "scripts/test_oauth_dev_config.py:74",
        "scripts/test_oauth_local.py:401",
        "scripts/test_secret_manager_builder_critical.py:86",
        "scripts/test_secret_manager_builder_critical.py:330"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:94",
        "scripts/test_improved_environment_validation.py:95",
        "scripts/test_oauth_dev_config.py:27",
        "scripts/test_oauth_dev_config.py:55",
        "scripts/test_oauth_dev_config.py:75"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT=your-dev-client-id.apps.googleusercontent.com": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT=your-dev-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:114"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_PRODUCTION": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_PRODUCTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:77"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_STAGING": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_STAGING",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:45",
        "auth_service/test_url_construction.py:46",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:74",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:150",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:204",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:275",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:335",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:374",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:417",
        "auth_service/tests/test_auth_comprehensive.py:261"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_TEST": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_TEST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:78",
        "auth_service/tests/conftest.py:291"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:28",
        "scripts/test_oauth_dev_config.py:75"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT=your-dev-client-secret": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT=your-dev-client-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:115"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_PRODUCTION": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_PRODUCTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:77"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_STAGING": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_STAGING",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:46",
        "auth_service/test_url_construction.py:47",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:111",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:150",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:205",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:276",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:336",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:375",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:418",
        "scripts/test_oauth_dev_config.py:54"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_TEST": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_TEST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:79",
        "auth_service/tests/conftest.py:292"
      ]
    },
    "GPT-4": {
      "value": "GPT-4",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:44",
        "scripts/test_triage_flow.py:64"
      ]
    },
    "GPT_35_TURBO": {
      "value": "GPT_35_TURBO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:26",
        "scripts/validate_llm_test_models.py:35"
      ]
    },
    "GPT_4": {
      "value": "GPT_4",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:25",
        "scripts/validate_llm_test_models.py:34"
      ]
    },
    "GTM Configuration: ISSUES DETECTED": {
      "value": "GTM Configuration: ISSUES DETECTED",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:136"
      ]
    },
    "GTM Configuration: WORKING": {
      "value": "GTM Configuration: WORKING",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:134"
      ]
    },
    "GTM Loading Test Report": {
      "value": "GTM Loading Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:95"
      ]
    },
    "GTM-WKP28PNQ": {
      "value": "GTM-WKP28PNQ",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:61"
      ]
    },
    "GTM-[A-Z0-9]+": {
      "value": "GTM-[A-Z0-9]+",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:32"
      ]
    },
    "Gamma LLC": {
      "value": "Gamma LLC",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:159"
      ]
    },
    "Generate Business Value Test Coverage Index": {
      "value": "Generate Business Value Test Coverage Index",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:774"
      ]
    },
    "Generate HTML dashboard": {
      "value": "Generate HTML dashboard",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:449"
      ]
    },
    "Generate HTML test report": {
      "value": "Generate HTML test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:508"
      ]
    },
    "Generate JSON test report": {
      "value": "Generate JSON test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:507"
      ]
    },
    "Generate appropriate result based on agent type.": {
      "value": "Generate appropriate result based on agent type.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:240"
      ]
    },
    "Generate auto-split suggestions": {
      "value": "Generate auto-split suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:523"
      ]
    },
    "Generate comprehensive fix report": {
      "value": "Generate comprehensive fix report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:263"
      ]
    },
    "Generate comprehensive test organization audit\n\nBusiness Value Justification (BVJ):\n1. Segment: Platform/Internal\n2. Business Goal: Development Velocity\n3. Value Impact: Identifies test organization issues blocking development\n4. Strategic Impact: Reduces development friction by 50%": {
      "value": "Generate comprehensive test organization audit\n\nBusiness Value Justification (BVJ):\n1. Segment: Platform/Internal\n2. Business Goal: Development Velocity\n3. Value Impact: Identifies test organization issues blocking development\n4. Strategic Impact: Reduces development friction by 50%",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:1"
      ]
    },
    "Generate detailed report": {
      "value": "Generate detailed report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:357"
      ]
    },
    "Generate greeting response": {
      "value": "Generate greeting response",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:253"
      ]
    },
    "Generate intelligent recommendations": {
      "value": "Generate intelligent recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:243"
      ]
    },
    "Generate intelligent test based on code analysis": {
      "value": "Generate intelligent test based on code analysis",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:22"
      ]
    },
    "Generate optimization recommendations": {
      "value": "Generate optimization recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:209"
      ]
    },
    "Generate report from existing scan results": {
      "value": "Generate report from existing scan results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:381"
      ]
    },
    "Generate response to user": {
      "value": "Generate response to user",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:160"
      ]
    },
    "Generate splitting suggestions": {
      "value": "Generate splitting suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:677"
      ]
    },
    "Generate test report": {
      "value": "Generate test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:768"
      ]
    },
    "Generated": {
      "value": "Generated",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:526"
      ]
    },
    "Generated Fallbacks:": {
      "value": "Generated Fallbacks:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:96"
      ]
    },
    "Generated URL:": {
      "value": "Generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:67"
      ]
    },
    "Generated async URL:": {
      "value": "Generated async URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:152"
      ]
    },
    "Generated by auto_fix_test_violations.py": {
      "value": "Generated by auto_fix_test_violations.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:519",
        "scripts/auto_fix_test_violations.py:548"
      ]
    },
    "Generated sync URL:": {
      "value": "Generated sync URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:153"
      ]
    },
    "Generated tokens:": {
      "value": "Generated tokens:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:57"
      ]
    },
    "Generated:": {
      "value": "Generated:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:519",
        "scripts/auto_fix_test_violations.py:854",
        "scripts/compliance/fake_test_scanner.py:250",
        "scripts/e2e_test_fixer.py:233",
        "scripts/optimize_test_performance.py:272",
        "scripts/test_execution_tracker.py:709"
      ]
    },
    "Generating final test health reports...": {
      "value": "Generating final test health reports...",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:507"
      ]
    },
    "Generating test files...": {
      "value": "Generating test files...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:522"
      ]
    },
    "Generating tests for": {
      "value": "Generating tests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:280"
      ]
    },
    "Get audit repository instance.": {
      "value": "Get audit repository instance.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:97"
      ]
    },
    "Get database session.": {
      "value": "Get database session.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:76"
      ]
    },
    "Get mock audit repository.": {
      "value": "Get mock audit repository.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:146"
      ]
    },
    "Get mock session repository.": {
      "value": "Get mock session repository.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:140"
      ]
    },
    "Get mock user repository.": {
      "value": "Get mock user repository.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:134"
      ]
    },
    "Get real audit repository.": {
      "value": "Get real audit repository.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:164"
      ]
    },
    "Get real session repository.": {
      "value": "Get real session repository.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:158"
      ]
    },
    "Get real user repository.": {
      "value": "Get real user repository.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:152"
      ]
    },
    "Get session repository instance.": {
      "value": "Get session repository instance.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:92"
      ]
    },
    "Get user repository instance.": {
      "value": "Get user repository instance.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:87"
      ]
    },
    "Getting health status...": {
      "value": "Getting health status...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:46",
        "scripts/test_corpus_admin_simple.py:45"
      ]
    },
    "Git mv error:": {
      "value": "Git mv error:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:142"
      ]
    },
    "Git mv failed:": {
      "value": "Git mv failed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:139"
      ]
    },
    "GitHub User": {
      "value": "GitHub User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:225"
      ]
    },
    "GitHub token required": {
      "value": "GitHub token required",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:72",
        "scripts/test_verify_workflow_status_corrected.py:121"
      ]
    },
    "Google AI/Gemini API key": {
      "value": "Google AI/Gemini API key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:119"
      ]
    },
    "Google Client ID loading failed:": {
      "value": "Google Client ID loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:327"
      ]
    },
    "Google Client Secret loading failed:": {
      "value": "Google Client Secret loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:332"
      ]
    },
    "Google OAuth provider should be available": {
      "value": "Google OAuth provider should be available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:344"
      ]
    },
    "Google OAuth provider should be configured": {
      "value": "Google OAuth provider should be configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:287"
      ]
    },
    "Google should be available provider, got:": {
      "value": "Google should be available provider, got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:284"
      ]
    },
    "Got:": {
      "value": "Got:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:141",
        "scripts/test_log_introspection.py:96"
      ]
    },
    "Graceful Degradation": {
      "value": "Graceful Degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:272"
      ]
    },
    "Graceful degradation test error:": {
      "value": "Graceful degradation test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:308"
      ]
    },
    "Graceful degradation test failed:": {
      "value": "Graceful degradation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:274"
      ]
    },
    "Graceful degradation working: degraded=": {
      "value": "Graceful degradation working: degraded=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:270"
      ]
    },
    "Graceful shutdown took too long:": {
      "value": "Graceful shutdown took too long:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:496"
      ]
    },
    "HEAD": {
      "value": "HEAD",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228",
        "scripts/staging_comprehensive_test.py:90",
        "scripts/staging_comprehensive_test.py:119",
        "scripts/staging_comprehensive_test.py:123"
      ]
    },
    "HIGH": {
      "value": "HIGH",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:500",
        "scripts/ci/check_test_stubs.py:65",
        "scripts/ci/check_test_stubs.py:97",
        "scripts/remove_test_stubs.py:151",
        "scripts/remove_test_stubs.py:197",
        "scripts/test_dashboard.py:102",
        "scripts/test_dashboard.py:132",
        "scripts/test_dashboard.py:137"
      ]
    },
    "HIGH:": {
      "value": "HIGH:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:134"
      ]
    },
    "HOT_RELOAD_WORKING = True": {
      "value": "HOT_RELOAD_WORKING = True",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:71",
        "scripts/test_docker_hot_reload.py:109"
      ]
    },
    "HS256": {
      "value": "HS256",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:20",
        "auth_service/tests/test_auth_comprehensive.py:157",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:34",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:46",
        "scripts/setup_staging_test_account.py:73",
        "scripts/setup_staging_test_account.py:118",
        "scripts/test_staging_auth.py:35",
        "scripts/test_staging_jwt.py:30"
      ]
    },
    "HTML dashboard generated:": {
      "value": "HTML dashboard generated:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:420"
      ]
    },
    "HTTP": {
      "value": "HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:120"
      ]
    },
    "HTTP SERVICE HEALTH CHECKER TEST": {
      "value": "HTTP SERVICE HEALTH CHECKER TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:36"
      ]
    },
    "HTTP Service Health Checker": {
      "value": "HTTP Service Health Checker",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:160"
      ]
    },
    "HTTP connectivity failed for": {
      "value": "HTTP connectivity failed for",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:174"
      ]
    },
    "HTTP handler for Prometheus-style metrics.": {
      "value": "HTTP handler for Prometheus-style metrics.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:232"
      ]
    },
    "HTTP handler for detailed status.": {
      "value": "HTTP handler for detailed status.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:202"
      ]
    },
    "HTTP handler for health status.": {
      "value": "HTTP handler for health status.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:198"
      ]
    },
    "HTTP handler for specific service status.": {
      "value": "HTTP handler for specific service status.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:219"
      ]
    },
    "HTTP method for actual requests (default: GET)": {
      "value": "HTTP method for actual requests (default: GET)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:429"
      ]
    },
    "HTTP origins in production:": {
      "value": "HTTP origins in production:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:342"
      ]
    },
    "HTTP port": {
      "value": "HTTP port",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:132",
        "scripts/test_service_orchestration.py:134"
      ]
    },
    "Handled edge case scenarios": {
      "value": "Handled edge case scenarios",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:733"
      ]
    },
    "Handler initialization failed:": {
      "value": "Handler initialization failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:268"
      ]
    },
    "Hardcoded test data pattern found:": {
      "value": "Hardcoded test data pattern found:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:176"
      ]
    },
    "Has": {
      "value": "Has",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:288"
      ]
    },
    "Has Functional Warnings:": {
      "value": "Has Functional Warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:92"
      ]
    },
    "Has TCP config:": {
      "value": "Has TCP config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:42",
        "scripts/test_database_url_builder_comprehensive.py:98"
      ]
    },
    "Has all critical events:": {
      "value": "Has all critical events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:313",
        "scripts/test_websocket_standalone.py:177"
      ]
    },
    "Has execute method:": {
      "value": "Has execute method:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:72"
      ]
    },
    "Has pipeline completion:": {
      "value": "Has pipeline completion:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:398"
      ]
    },
    "Has pipeline start:": {
      "value": "Has pipeline start:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:397"
      ]
    },
    "Headers received:": {
      "value": "Headers received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:157"
      ]
    },
    "Headers:": {
      "value": "Headers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:118",
        "scripts/test_staging_jwt_validation.py:98",
        "scripts/test_websocket_connection.py:52"
      ]
    },
    "Health Check": {
      "value": "Health Check",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:145"
      ]
    },
    "Health Check Endpoints": {
      "value": "Health Check Endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:205"
      ]
    },
    "Health Checks": {
      "value": "Health Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:343"
      ]
    },
    "Health Endpoints": {
      "value": "Health Endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:241"
      ]
    },
    "Health check failed:": {
      "value": "Health check failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:111",
        "scripts/test_service_monitor.py:193",
        "scripts/test_staging_login_automated.py:68",
        "scripts/test_websocket_middleware.py:35"
      ]
    },
    "Health check passed": {
      "value": "Health check passed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:130"
      ]
    },
    "Health check response:": {
      "value": "Health check response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:32"
      ]
    },
    "Health endpoint error:": {
      "value": "Health endpoint error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:235"
      ]
    },
    "Health endpoint returned": {
      "value": "Health endpoint returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:135"
      ]
    },
    "Health endpoint test failed:": {
      "value": "Health endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:139"
      ]
    },
    "Health endpoints import error:": {
      "value": "Health endpoints import error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:262"
      ]
    },
    "Health endpoints test error:": {
      "value": "Health endpoints test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:264"
      ]
    },
    "Health response missing status": {
      "value": "Health response missing status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:117"
      ]
    },
    "Health response should be JSON dict": {
      "value": "Health response should be JSON dict",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:114"
      ]
    },
    "Health status:": {
      "value": "Health status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:48",
        "scripts/test_corpus_admin_simple.py:47"
      ]
    },
    "Health:": {
      "value": "Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:66"
      ]
    },
    "Healthy": {
      "value": "Healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:364"
      ]
    },
    "Heap size:": {
      "value": "Heap size:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:117"
      ]
    },
    "Hello": {
      "value": "Hello",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:248"
      ]
    },
    "Hello WebSocket!": {
      "value": "Hello WebSocket!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:31"
      ]
    },
    "Hello world": {
      "value": "Hello world",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:380"
      ]
    },
    "Hello! How can I help you today?": {
      "value": "Hello! How can I help you today?",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:254",
        "scripts/test_websocket_direct.py:256"
      ]
    },
    "Hello! I can help you.": {
      "value": "Hello! I can help you.",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:98",
        "scripts/test_websocket_direct.py:153"
      ]
    },
    "Hello! I'm": {
      "value": "Hello! I'm",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:167"
      ]
    },
    "Hello! I've analyzed your request and can help you.": {
      "value": "Hello! I've analyzed your request and can help you.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:157"
      ]
    },
    "Hello, can you help me optimize my AI workload?": {
      "value": "Hello, can you help me optimize my AI workload?",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:52"
      ]
    },
    "Hello, how are you?": {
      "value": "Hello, how are you?",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:276"
      ]
    },
    "Help me optimize my AI workload": {
      "value": "Help me optimize my AI workload",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:330",
        "scripts/test_adaptive_workflow_direct.py:175",
        "scripts/test_adaptive_workflow_local.py:105"
      ]
    },
    "Help text should display successfully": {
      "value": "Help text should display successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:87"
      ]
    },
    "Helper functions:": {
      "value": "Helper functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:37"
      ]
    },
    "Helper method extraction not yet implemented for": {
      "value": "Helper method extraction not yet implemented for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:587"
      ]
    },
    "Helps with customer support inquiries": {
      "value": "Helps with customer support inquiries",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:199"
      ]
    },
    "Helps with sales and lead qualification": {
      "value": "Helps with sales and lead qualification",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:215"
      ]
    },
    "High": {
      "value": "High",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:166"
      ]
    },
    "High - Agent system": {
      "value": "High - Agent system",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:42"
      ]
    },
    "High - Services": {
      "value": "High - Services",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:44"
      ]
    },
    "High - WebSocket": {
      "value": "High - WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:43"
      ]
    },
    "High Failure Rate Tests:": {
      "value": "High Failure Rate Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:297"
      ]
    },
    "High timeout rate (": {
      "value": "High timeout rate (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:302"
      ]
    },
    "Highly Similar:": {
      "value": "Highly Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:658"
      ]
    },
    "Hijack attempt not recorded": {
      "value": "Hijack attempt not recorded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:108"
      ]
    },
    "Host:": {
      "value": "Host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:233",
        "scripts/test_ssl_certificates_staging.py:39",
        "scripts/test_ssl_certificates_staging.py:215",
        "scripts/test_staging_db_direct.py:44",
        "scripts/test_staging_migrations.py:46"
      ]
    },
    "Hostname:": {
      "value": "Hostname:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:60"
      ]
    },
    "Hot reload test complete!": {
      "value": "Hot reload test complete!",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:97"
      ]
    },
    "However, real-world complex DeepAgentState objects may still cause blocking.": {
      "value": "However, real-world complex DeepAgentState objects may still cause blocking.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:251"
      ]
    },
    "I have a chatbot using GPT-4 serving 10,000 requests daily. Average latency is 800ms, cost per request is $0.05. Peak hours are 9-11 AM and 2-4 PM. Quality score is 4.2/5.": {
      "value": "I have a chatbot using GPT-4 serving 10,000 requests daily. Average latency is 800ms, cost per request is $0.05. Peak hours are 9-11 AM and 2-4 PM. Quality score is 4.2/5.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:317",
        "scripts/test_adaptive_workflow_direct.py:162"
      ]
    },
    "I have a chatbot using GPT-4 serving 10,000 requests daily. Average latency is 800ms, cost per request is $0.05. Peak hours are 9-11 AM and 2-4 PM. Quality score is 4.2/5. How can I optimize this?": {
      "value": "I have a chatbot using GPT-4 serving 10,000 requests daily. Average latency is 800ms, cost per request is $0.05. Peak hours are 9-11 AM and 2-4 PM. Quality score is 4.2/5. How can I optimize this?",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:88"
      ]
    },
    "I/O operation on closed file": {
      "value": "I/O operation on closed file",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:29",
        "scripts/pytest_plugins.py:42",
        "scripts/pytest_plugins.py:55",
        "scripts/pytest_plugins.py:78",
        "scripts/pytest_plugins.py:99",
        "scripts/pytest_plugins.py:108",
        "scripts/pytest_plugins.py:117",
        "scripts/pytest_plugins.py:137",
        "scripts/pytest_plugins.py:157",
        "scripts/pytest_plugins.py:177"
      ]
    },
    "ID Migration Report": {
      "value": "ID Migration Report",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:192"
      ]
    },
    "INFO": {
      "value": "INFO",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:76",
        "netra_backend/app/services/realistic_test_data/log_generator.py:83",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/test_error_monitor_logic.py:38",
        "scripts/test_error_monitor_logic.py:66"
      ]
    },
    "INFO (": {
      "value": "INFO (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:303"
      ]
    },
    "INSERT INTO auth.users (email, name, password_hash, is_active, is_superuser)\n                    VALUES ($1, $2, $3, $4, $5)\n                    ON CONFLICT (email) DO UPDATE SET\n                        name = EXCLUDED.name,\n                        password_hash = EXCLUDED.password_hash,\n                        is_active = EXCLUDED.is_active,\n                        is_superuser = EXCLUDED.is_superuser\n                    RETURNING id": {
      "value": "INSERT INTO auth.users (email, name, password_hash, is_active, is_superuser)\n                    VALUES ($1, $2, $3, $4, $5)\n                    ON CONFLICT (email) DO UPDATE SET\n                        name = EXCLUDED.name,\n                        password_hash = EXCLUDED.password_hash,\n                        is_active = EXCLUDED.is_active,\n                        is_superuser = EXCLUDED.is_superuser\n                    RETURNING id",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:140"
      ]
    },
    "INSERT INTO backend.agents (organization_id, name, description, system_prompt, model_config, created_by)\n                    VALUES ($1, $2, $3, $4, $5, $6)\n                    RETURNING id": {
      "value": "INSERT INTO backend.agents (organization_id, name, description, system_prompt, model_config, created_by)\n                    VALUES ($1, $2, $3, $4, $5, $6)\n                    RETURNING id",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:224"
      ]
    },
    "INSERT INTO backend.organization_memberships (user_id, organization_id, role)\n                    VALUES ($1, $2, $3)\n                    ON CONFLICT (user_id, organization_id) DO UPDATE SET\n                        role = EXCLUDED.role": {
      "value": "INSERT INTO backend.organization_memberships (user_id, organization_id, role)\n                    VALUES ($1, $2, $3)\n                    ON CONFLICT (user_id, organization_id) DO UPDATE SET\n                        role = EXCLUDED.role",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:185"
      ]
    },
    "INSERT INTO backend.organizations (name, slug, plan)\n                    VALUES ($1, $2, $3)\n                    ON CONFLICT (slug) DO UPDATE SET\n                        name = EXCLUDED.name,\n                        plan = EXCLUDED.plan\n                    RETURNING id": {
      "value": "INSERT INTO backend.organizations (name, slug, plan)\n                    VALUES ($1, $2, $3)\n                    ON CONFLICT (slug) DO UPDATE SET\n                        name = EXCLUDED.name,\n                        plan = EXCLUDED.plan\n                    RETURNING id",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:164"
      ]
    },
    "INSERT INTO conversation_events \n                    (conversation_id, agent_id, user_id, organization_id, event_type, \n                     message_count, tokens_used, execution_time_ms, model_used, tool_calls) VALUES": {
      "value": "INSERT INTO conversation_events \n                    (conversation_id, agent_id, user_id, organization_id, event_type, \n                     message_count, tokens_used, execution_time_ms, model_used, tool_calls) VALUES",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:339"
      ]
    },
    "INSERT INTO test_metadata (\n                    test_id, file_path, test_name, categories, first_seen,\n                    last_modified, total_runs, total_failures, total_passes,\n                    total_skips, average_duration, failure_rate,\n                    last_run_timestamp, last_run_status\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)": {
      "value": "INSERT INTO test_metadata (\n                    test_id, file_path, test_name, categories, first_seen,\n                    last_modified, total_runs, total_failures, total_passes,\n                    total_skips, average_duration, failure_rate,\n                    last_run_timestamp, last_run_status\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:302"
      ]
    },
    "INSERT INTO test_runs (\n                    test_id, session_id, file_path, test_name, category, subcategory,\n                    status, duration, timestamp, environment, error_message,\n                    failure_type, flaky, retry_count, coverage_impact\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)": {
      "value": "INSERT INTO test_runs (\n                    test_id, session_id, file_path, test_name, category, subcategory,\n                    status, duration, timestamp, environment, error_message,\n                    failure_type, flaky, retry_count, coverage_impact\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:245"
      ]
    },
    "INSERT INTO test_sessions (session_id, start_time, environment, categories_run)\n                VALUES (?, ?, ?, ?)": {
      "value": "INSERT INTO test_sessions (session_id, start_time, environment, categories_run)\n                VALUES (?, ?, ?, ?)",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:219"
      ]
    },
    "INSERT INTO tool_executions\n                    (conversation_id, agent_id, tool_name, execution_status, execution_time_ms,\n                     parameters_size, result_size, error_message, retry_count) VALUES": {
      "value": "INSERT INTO tool_executions\n                    (conversation_id, agent_id, tool_name, execution_status, execution_time_ms,\n                     parameters_size, result_size, error_message, retry_count) VALUES",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:362"
      ]
    },
    "INSERT INTO user_events (user_id, event_type, session_id, properties) VALUES": {
      "value": "INSERT INTO user_events (user_id, event_type, session_id, properties) VALUES",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:317"
      ]
    },
    "INSTANCE_CONNECTION_NAME": {
      "value": "INSTANCE_CONNECTION_NAME",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:233"
      ]
    },
    "INTEGRATION TEST FAILED:": {
      "value": "INTEGRATION TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:425"
      ]
    },
    "IP change not detected": {
      "value": "IP change not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:267"
      ]
    },
    "ISSUE IDENTIFIED:": {
      "value": "ISSUE IDENTIFIED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:95"
      ]
    },
    "IS_DOCKER": {
      "value": "IS_DOCKER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:29"
      ]
    },
    "ITERATION": {
      "value": "ITERATION",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:303",
        "scripts/frontend_iterative_test_runner.py:320",
        "scripts/frontend_iterative_test_runner.py:337",
        "scripts/frontend_iterative_test_runner.py:354",
        "scripts/frontend_iterative_test_runner.py:371",
        "scripts/frontend_iterative_test_runner.py:388",
        "scripts/frontend_iterative_test_runner.py:405",
        "scripts/frontend_iterative_test_runner.py:422",
        "scripts/iterative_test_fix_loop.py:103"
      ]
    },
    "ITERATION 25: OAuth Security Vulnerabilities Test\n\nTests critical OAuth security vulnerabilities that prevent account takeover attacks,\nCSRF attacks, and other OAuth-based security breaches.\n\nBusiness Value: Prevents OAuth security breaches worth $500K+ per incident.": {
      "value": "ITERATION 25: OAuth Security Vulnerabilities Test\n\nTests critical OAuth security vulnerabilities that prevent account takeover attacks,\nCSRF attacks, and other OAuth-based security breaches.\n\nBusiness Value: Prevents OAuth security breaches worth $500K+ per incident.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:1"
      ]
    },
    "ITERATION 25: Prevent CSRF attacks via OAuth state parameter replay.\n        \n        Business Value: Prevents CSRF account takeover attacks worth $500K+ per breach.": {
      "value": "ITERATION 25: Prevent CSRF attacks via OAuth state parameter replay.\n        \n        Business Value: Prevents CSRF account takeover attacks worth $500K+ per breach.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:30"
      ]
    },
    "ITERATION SUMMARY": {
      "value": "ITERATION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:115"
      ]
    },
    "ITERATIONS": {
      "value": "ITERATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:158"
      ]
    },
    "Identified": {
      "value": "Identified",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:521"
      ]
    },
    "Identify gaps in test coverage": {
      "value": "Identify gaps in test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:185"
      ]
    },
    "Identifying potentially flaky tests...": {
      "value": "Identifying potentially flaky tests...",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:364"
      ]
    },
    "If authentication is failing at step 4 (Backend API), check:\n\n1. Backend Service Configuration:\n   - SERVICE_SECRET environment variable is set correctly\n   - AUTH_SERVICE_URL points to https://auth.staging.netrasystems.ai\n   \n2. Auth Service Communication:\n   - Backend can reach auth service (network/firewall)\n   - Service-to-service authentication is configured\n   \n3. Token Validation:\n   - Token format and claims are correct\n   - Backend is using correct validation endpoint\n   \n4. User Database:\n   - User exists in backend database\n   - User permissions are set correctly": {
      "value": "If authentication is failing at step 4 (Backend API), check:\n\n1. Backend Service Configuration:\n   - SERVICE_SECRET environment variable is set correctly\n   - AUTH_SERVICE_URL points to https://auth.staging.netrasystems.ai\n   \n2. Auth Service Communication:\n   - Backend can reach auth service (network/firewall)\n   - Service-to-service authentication is configured\n   \n3. Token Validation:\n   - Token format and claims are correct\n   - Backend is using correct validation endpoint\n   \n4. User Database:\n   - User exists in backend database\n   - User permissions are set correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:224"
      ]
    },
    "If validation is failing, check:\n\n1. Auth service URL configuration in backend\n2. Service authentication credentials (X-Service-ID, X-Service-Secret)\n3. Network connectivity between backend and auth service\n4. Circuit breaker state (might be open from previous failures)\n5. Token format and encoding issues": {
      "value": "If validation is failing, check:\n\n1. Auth service URL configuration in backend\n2. Service authentication credentials (X-Service-ID, X-Service-Secret)\n3. Network connectivity between backend and auth service\n4. Circuit breaker state (might be open from previous failures)\n5. Token format and encoding issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:136"
      ]
    },
    "If you see server errors (500) in protected endpoints,": {
      "value": "If you see server errors (500) in protected endpoints,",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:181"
      ]
    },
    "Impact:": {
      "value": "Impact:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "Implement caching for frequent requests": {
      "value": "Implement caching for frequent requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:326"
      ]
    },
    "Implement memory monitoring and alerting": {
      "value": "Implement memory monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:447"
      ]
    },
    "Implement memory optimization": {
      "value": "Implement memory optimization",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:396"
      ]
    },
    "Implement real functionality or remove unused function": {
      "value": "Implement real functionality or remove unused function",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:234"
      ]
    },
    "Implement request batching": {
      "value": "Implement request batching",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:215"
      ]
    },
    "Implementation may be adequate for current load patterns": {
      "value": "Implementation may be adequate for current load patterns",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:261"
      ]
    },
    "Import": {
      "value": "Import",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:230"
      ]
    },
    "Import error (expected in test environment):": {
      "value": "Import error (expected in test environment):",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:41"
      ]
    },
    "Import error in": {
      "value": "Import error in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:91"
      ]
    },
    "Import error:": {
      "value": "Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:132",
        "scripts/test_clickhouse_startup_fix.py:74",
        "scripts/test_service_health.py:93"
      ]
    },
    "Import failed:": {
      "value": "Import failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:122"
      ]
    },
    "Import fixes applied:": {
      "value": "Import fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:427"
      ]
    },
    "Import test failed. Please fix the import errors above.": {
      "value": "Import test failed. Please fix the import errors above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:92"
      ]
    },
    "Import test interrupted by user": {
      "value": "Import test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:127"
      ]
    },
    "Import validation failed:": {
      "value": "Import validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:224"
      ]
    },
    "ImportError": {
      "value": "ImportError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:34",
        "scripts/comprehensive_test_fixer.py:42",
        "scripts/fix_test_batch.py:44"
      ]
    },
    "ImportError: ([^\\s]+)": {
      "value": "ImportError: ([^\\s]+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:165"
      ]
    },
    "ImportError: cannot import name '(\\w+)' from '([\\w\\.]+)'": {
      "value": "ImportError: cannot import name '(\\w+)' from '([\\w\\.]+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:38",
        "scripts/fix_test_batch.py:42"
      ]
    },
    "Improve error handling": {
      "value": "Improve error handling",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:416"
      ]
    },
    "Improvement:": {
      "value": "Improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:164",
        "scripts/test_environment_validation_clean.py:86"
      ]
    },
    "In-progress request cancelled - no graceful shutdown": {
      "value": "In-progress request cancelled - no graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:501"
      ]
    },
    "In-progress request failed during shutdown:": {
      "value": "In-progress request failed during shutdown:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:495"
      ]
    },
    "In-progress request terminated abruptly - no graceful shutdown": {
      "value": "In-progress request terminated abruptly - no graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:499"
      ]
    },
    "Inactive User": {
      "value": "Inactive User",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:131"
      ]
    },
    "Inappropriate Fallback Behaviors:": {
      "value": "Inappropriate Fallback Behaviors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:221"
      ]
    },
    "Include": {
      "value": "Include",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:28",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Include ClickHouse service": {
      "value": "Include ClickHouse service",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:173"
      ]
    },
    "Increase real LLM test coverage from": {
      "value": "Increase real LLM test coverage from",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:694"
      ]
    },
    "Increase test coverage for critical component '": {
      "value": "Increase test coverage for critical component '",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711"
      ]
    },
    "Increase timeout values": {
      "value": "Increase timeout values",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:114"
      ]
    },
    "Increase timeout values in test configuration": {
      "value": "Increase timeout values in test configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:240"
      ]
    },
    "Initial Node.js processes:": {
      "value": "Initial Node.js processes:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:67"
      ]
    },
    "Initial refresh token:": {
      "value": "Initial refresh token:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:38"
      ]
    },
    "Initial session validation failed": {
      "value": "Initial session validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:194"
      ]
    },
    "Initial token validation failed": {
      "value": "Initial token validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:155",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:191"
      ]
    },
    "Initialization error:": {
      "value": "Initialization error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:76"
      ]
    },
    "Initialization order test failed:": {
      "value": "Initialization order test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:75"
      ]
    },
    "Initialize test environment with real services.": {
      "value": "Initialize test environment with real services.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:23"
      ]
    },
    "Initialize the factory with database connection.": {
      "value": "Initialize the factory with database connection.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:39"
      ]
    },
    "Initialize web application.": {
      "value": "Initialize web application.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:267"
      ]
    },
    "Initialize with mock database.": {
      "value": "Initialize with mock database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:63"
      ]
    },
    "Initialize with real database connection.": {
      "value": "Initialize with real database connection.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:46"
      ]
    },
    "Initializing database...": {
      "value": "Initializing database...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:27"
      ]
    },
    "Initializing test environment": {
      "value": "Initializing test environment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:27"
      ]
    },
    "Initiate graceful shutdown of auth service": {
      "value": "Initiate graceful shutdown of auth service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:538"
      ]
    },
    "Inserted": {
      "value": "Inserted",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:320",
        "scripts/test_seed_data.py:344",
        "scripts/test_seed_data.py:367"
      ]
    },
    "Insights enabling optimization decisions for": {
      "value": "Insights enabling optimization decisions for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:494"
      ]
    },
    "Instability:": {
      "value": "Instability:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:85"
      ]
    },
    "Install": {
      "value": "Install",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:217"
      ]
    },
    "Install dependencies if missing": {
      "value": "Install dependencies if missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:418"
      ]
    },
    "Install missing dependencies": {
      "value": "Install missing dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:97"
      ]
    },
    "Install with: pip install cloud-sql-python-connector[asyncpg]": {
      "value": "Install with: pip install cloud-sql-python-connector[asyncpg]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:119"
      ]
    },
    "Installing frontend dependencies...": {
      "value": "Installing frontend dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:52"
      ]
    },
    "Insufficient Data": {
      "value": "Insufficient Data",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:329",
        "scripts/test_adaptive_workflow_local.py:104"
      ]
    },
    "Insufficient Data Scenario": {
      "value": "Insufficient Data Scenario",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:174"
      ]
    },
    "Insufficient timestamps": {
      "value": "Insufficient timestamps",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:584"
      ]
    },
    "Integration Tests": {
      "value": "Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:332",
        "scripts/run_supervisor_test_coverage.py:352",
        "scripts/test_adaptive_workflow.py:344",
        "scripts/test_example_message_flow.py:51"
      ]
    },
    "Integration test for the refresh endpoint - tests the actual implementation": {
      "value": "Integration test for the refresh endpoint - tests the actual implementation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:1"
      ]
    },
    "Integration test has": {
      "value": "Integration test has",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:287",
        "scripts/compliance/real_test_requirements_enforcer.py:369",
        "scripts/compliance/real_test_validator.py:248"
      ]
    },
    "Integration tests did not run properly": {
      "value": "Integration tests did not run properly",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:269"
      ]
    },
    "Integration tests for auth service database connection.\nTests actual database connectivity in different configurations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Stability - Auth service reliability\n- Value Impact: Prevents auth service failures in production\n- Strategic Impact: Ensures database URL construction works end-to-end across all environments": {
      "value": "Integration tests for auth service database connection.\nTests actual database connectivity in different configurations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Stability - Auth service reliability\n- Value Impact: Prevents auth service failures in production\n- Strategic Impact: Ensures database URL construction works end-to-end across all environments",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:1"
      ]
    },
    "Integration tests for component interaction": {
      "value": "Integration tests for component interaction",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:77"
      ]
    },
    "Intensive WebSocket Async Serialization Test": {
      "value": "Intensive WebSocket Async Serialization Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:320"
      ]
    },
    "Internal Docker service-to-service connection": {
      "value": "Internal Docker service-to-service connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:129"
      ]
    },
    "Internal server error": {
      "value": "Internal server error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:143"
      ]
    },
    "Interrupted by user": {
      "value": "Interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:374"
      ]
    },
    "Invalid": {
      "value": "Invalid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:209"
      ]
    },
    "Invalid Allow-Credentials: expected 'true', got '": {
      "value": "Invalid Allow-Credentials: expected 'true', got '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:90"
      ]
    },
    "Invalid Allow-Origin in actual response: expected '": {
      "value": "Invalid Allow-Origin in actual response: expected '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:128"
      ]
    },
    "Invalid Allow-Origin: expected '": {
      "value": "Invalid Allow-Origin: expected '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:83"
      ]
    },
    "Invalid Cloud SQL format": {
      "value": "Invalid Cloud SQL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:189"
      ]
    },
    "Invalid Email": {
      "value": "Invalid Email",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:62"
      ]
    },
    "Invalid HTTP status code:": {
      "value": "Invalid HTTP status code:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:264"
      ]
    },
    "Invalid JSON body": {
      "value": "Invalid JSON body",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:177",
        "auth_service/tests/unit/test_refresh_endpoint.py:117"
      ]
    },
    "Invalid JWT format: expected 3 parts, got": {
      "value": "Invalid JWT format: expected 3 parts, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:38"
      ]
    },
    "Invalid PKCE challenge should fail:": {
      "value": "Invalid PKCE challenge should fail:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:138"
      ]
    },
    "Invalid UUID format:": {
      "value": "Invalid UUID format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:31"
      ]
    },
    "Invalid analysis type": {
      "value": "Invalid analysis type",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:112"
      ]
    },
    "Invalid auth provider:": {
      "value": "Invalid auth provider:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:106"
      ]
    },
    "Invalid base64url encoding in JWT part": {
      "value": "Invalid base64url encoding in JWT part",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:48"
      ]
    },
    "Invalid config response:": {
      "value": "Invalid config response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:102"
      ]
    },
    "Invalid credentials header value:": {
      "value": "Invalid credentials header value:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:227"
      ]
    },
    "Invalid email format": {
      "value": "Invalid email format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:169",
        "auth_service/tests/test_signup_flow_comprehensive.py:277",
        "auth_service/tests/test_signup_flow_comprehensive.py:299"
      ]
    },
    "Invalid email format:": {
      "value": "Invalid email format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:24"
      ]
    },
    "Invalid health response:": {
      "value": "Invalid health response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:132"
      ]
    },
    "Invalid latency_ms value": {
      "value": "Invalid latency_ms value",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:286"
      ]
    },
    "Invalid max-age value:": {
      "value": "Invalid max-age value:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:243"
      ]
    },
    "Invalid metrics: ['invalid_metric']": {
      "value": "Invalid metrics: ['invalid_metric']",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:142"
      ]
    },
    "Invalid permission format:": {
      "value": "Invalid permission format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:217"
      ]
    },
    "Invalid rate limit remaining:": {
      "value": "Invalid rate limit remaining:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:244"
      ]
    },
    "Invalid refresh token": {
      "value": "Invalid refresh token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:129",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:143",
        "auth_service/tests/unit/test_refresh_endpoint.py:130"
      ]
    },
    "Invalid session state": {
      "value": "Invalid session state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:178"
      ]
    },
    "Invalid state parameter": {
      "value": "Invalid state parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:162"
      ]
    },
    "Invalid token structure:": {
      "value": "Invalid token structure:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:63"
      ]
    },
    "Invalidation event not logged": {
      "value": "Invalidation event not logged",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:332"
      ]
    },
    "Invalidation reason not recorded": {
      "value": "Invalidation reason not recorded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:333"
      ]
    },
    "Is Cloud SQL:": {
      "value": "Is Cloud SQL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:41",
        "scripts/test_database_url_builder_comprehensive.py:97",
        "scripts/test_staging_migrations.py:192"
      ]
    },
    "IsolatedEnvironment not provided": {
      "value": "IsolatedEnvironment not provided",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:273"
      ]
    },
    "IsolatedEnvironment.get not callable": {
      "value": "IsolatedEnvironment.get not callable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:274"
      ]
    },
    "Isolation and multi-tenancy tests": {
      "value": "Isolation and multi-tenancy tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:108"
      ]
    },
    "Issue Creation": {
      "value": "Issue Creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:396"
      ]
    },
    "Issued At:": {
      "value": "Issued At:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:75"
      ]
    },
    "Issues": {
      "value": "Issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:371"
      ]
    },
    "Issues Found:": {
      "value": "Issues Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:136",
        "scripts/test_websocket_chat_standalone.py:136"
      ]
    },
    "It is STRONGLY recommended to:": {
      "value": "It is STRONGLY recommended to:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:951"
      ]
    },
    "Item": {
      "value": "Item",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:50"
      ]
    },
    "Iteration": {
      "value": "Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:104",
        "scripts/batch_fix_and_test.py:64",
        "scripts/continuous_e2e_test_runner.py:213",
        "scripts/frontend_iterative_test_runner.py:258"
      ]
    },
    "Iteration #": {
      "value": "Iteration #",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:120"
      ]
    },
    "Iteration:": {
      "value": "Iteration:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:298"
      ]
    },
    "Iterations with all tests passing:": {
      "value": "Iterations with all tests passing:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:165"
      ]
    },
    "Iterations with failures:": {
      "value": "Iterations with failures:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:166"
      ]
    },
    "Iterations:": {
      "value": "Iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:133"
      ]
    },
    "Iterative test-fix loop script that runs tests and fixes failures in a loop.": {
      "value": "Iterative test-fix loop script that runs tests and fixes failures in a loop.",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:2"
      ]
    },
    "JSON Serialization Failure": {
      "value": "JSON Serialization Failure",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:243"
      ]
    },
    "JSON report saved to": {
      "value": "JSON report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:503"
      ]
    },
    "JTIs are unique": {
      "value": "JTIs are unique",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:159"
      ]
    },
    "JWT Helper Real Token Support": {
      "value": "JWT Helper Real Token Support",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:75"
      ]
    },
    "JWT ID Uniqueness": {
      "value": "JWT ID Uniqueness",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:224"
      ]
    },
    "JWT Payload:": {
      "value": "JWT Payload:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:34"
      ]
    },
    "JWT Secret Testing:": {
      "value": "JWT Secret Testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:92"
      ]
    },
    "JWT Secret:": {
      "value": "JWT Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:97",
        "scripts/test_staging_auth.py:175",
        "scripts/test_staging_auth.py:189"
      ]
    },
    "JWT Secret: <not configured>": {
      "value": "JWT Secret: <not configured>",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:177",
        "scripts/test_staging_auth.py:191"
      ]
    },
    "JWT Secret: MISSING": {
      "value": "JWT Secret: MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:132"
      ]
    },
    "JWT Secret: OK - Configured (from": {
      "value": "JWT Secret: OK - Configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:130"
      ]
    },
    "JWT Token (first 50 chars):": {
      "value": "JWT Token (first 50 chars):",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:32"
      ]
    },
    "JWT Token Decoding:": {
      "value": "JWT Token Decoding:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:146"
      ]
    },
    "JWT Token Generation:": {
      "value": "JWT Token Generation:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:142"
      ]
    },
    "JWT Token Testing: [ERROR] Failed -": {
      "value": "JWT Token Testing: [ERROR] Failed -",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:149"
      ]
    },
    "JWT VALIDATION TEST - STAGING": {
      "value": "JWT VALIDATION TEST - STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:17"
      ]
    },
    "JWT helper creates real tokens:": {
      "value": "JWT helper creates real tokens:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:92"
      ]
    },
    "JWT helper still using mock tokens:": {
      "value": "JWT helper still using mock tokens:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:94"
      ]
    },
    "JWT helper test failed:": {
      "value": "JWT helper test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:97"
      ]
    },
    "JWT library not available": {
      "value": "JWT library not available",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:48",
        "scripts/test_real_jwt_e2e.py:143"
      ]
    },
    "JWT secret for auth service": {
      "value": "JWT secret for auth service",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:92"
      ]
    },
    "JWT secret for authentication": {
      "value": "JWT secret for authentication",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:91"
      ]
    },
    "JWT secret loading failed:": {
      "value": "JWT secret loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:322"
      ]
    },
    "JWT secret not loaded": {
      "value": "JWT secret not loaded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:136"
      ]
    },
    "JWT secret should be string": {
      "value": "JWT secret should be string",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:140"
      ]
    },
    "JWT secret...": {
      "value": "JWT secret...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:19"
      ]
    },
    "JWT signature tampering detection verified": {
      "value": "JWT signature tampering detection verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:101"
      ]
    },
    "JWTGenerationTestManager": {
      "value": "JWTGenerationTestManager",
      "category": "test_literals",
      "locations": [
        "auth_service/auth_core/test_utils.py:13",
        "auth_service/test_framework/test_managers.py:15",
        "auth_service/tests/test_critical_bugs_simple.py:80",
        "auth_service/tests/test_critical_bugs_simple.py:87",
        "auth_service/tests/test_critical_bugs_simple.py:88",
        "auth_service/tests/test_critical_bugs_simple.py:89",
        "auth_service/tests/test_critical_bugs_simple.py:90"
      ]
    },
    "JWTGenerationTestManager should not be found in any expected location": {
      "value": "JWTGenerationTestManager should not be found in any expected location",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:103"
      ]
    },
    "JWT_": {
      "value": "JWT_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "JWT_AVAILABLE": {
      "value": "JWT_AVAILABLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:182"
      ]
    },
    "JWT_SECRET": {
      "value": "JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:159",
        "auth_service/tests/test_all_imports.py:162",
        "scripts/setup_test_environment.py:92",
        "scripts/setup_test_environment.py:108",
        "scripts/test_real_jwt_e2e.py:184",
        "scripts/test_real_jwt_e2e.py:184",
        "scripts/test_staging_auth.py:103",
        "scripts/test_staging_auth.py:145"
      ]
    },
    "JWT_SECRET_KEY": {
      "value": "JWT_SECRET_KEY",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:13",
        "auth_service/test_actual_staging_credentials.py:43",
        "auth_service/test_auth_direct.py:14",
        "auth_service/test_url_construction.py:44",
        "auth_service/tests/conftest.py:59",
        "auth_service/tests/test_all_imports.py:159",
        "auth_service/tests/test_all_imports.py:162",
        "auth_service/tests/test_auth_comprehensive.py:58",
        "auth_service/tests/test_auth_comprehensive.py:59",
        "auth_service/tests/test_auth_comprehensive.py:124"
      ]
    },
    "JWT_SECRET_KEY:": {
      "value": "JWT_SECRET_KEY:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:130"
      ]
    },
    "JWT_SECRET_KEY=jwt-secret-key-staging": {
      "value": "JWT_SECRET_KEY=jwt-secret-key-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:73"
      ]
    },
    "Job failed": {
      "value": "Job failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:170"
      ]
    },
    "K": {
      "value": "K",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:186"
      ]
    },
    "KB": {
      "value": "KB",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:186"
      ]
    },
    "KEY": {
      "value": "KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:51",
        "scripts/test_oauth_local.py:78",
        "scripts/test_staging_auth.py:156"
      ]
    },
    "KEY FINDING:": {
      "value": "KEY FINDING:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:174"
      ]
    },
    "KIB": {
      "value": "KIB",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:186"
      ]
    },
    "K_REVISION": {
      "value": "K_REVISION",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:36",
        "scripts/test_environment_detection.py:20"
      ]
    },
    "K_SERVICE": {
      "value": "K_SERVICE",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:36",
        "scripts/test_environment_detection.py:19",
        "scripts/test_environment_detection.py:44",
        "scripts/test_environment_detection.py:51",
        "scripts/test_environment_detection.py:58",
        "scripts/test_redis_config_critical_failure.py:91",
        "scripts/test_secret_manager_builder_critical.py:142",
        "scripts/test_secret_manager_builder_critical.py:156",
        "scripts/test_staging_config.py:44",
        "scripts/test_staging_config.py:65"
      ]
    },
    "K_SERVICE=netra-backend:": {
      "value": "K_SERVICE=netra-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:53"
      ]
    },
    "K_SERVICE=netra-prod-backend:": {
      "value": "K_SERVICE=netra-prod-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:60"
      ]
    },
    "K_SERVICE=netra-staging-backend:": {
      "value": "K_SERVICE=netra-staging-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:46"
      ]
    },
    "Key Achievements:": {
      "value": "Key Achievements:",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:513"
      ]
    },
    "Key Improvements:": {
      "value": "Key Improvements:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:169"
      ]
    },
    "Key findings: Your AI workloads show 30% optimization potential.\n        Main bottlenecks: Memory allocation and network I/O.\n        Quick wins: Enable caching, batch requests, optimize prompts.\n        Estimated savings: $2,400/month with recommended changes.": {
      "value": "Key findings: Your AI workloads show 30% optimization potential.\n        Main bottlenecks: Memory allocation and network I/O.\n        Quick wins: Enable caching, batch requests, optimize prompts.\n        Estimated savings: $2,400/month with recommended changes.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:205"
      ]
    },
    "Key principles:": {
      "value": "Key principles:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:264"
      ]
    },
    "Kill these processes? (y/n):": {
      "value": "Kill these processes? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:111"
      ]
    },
    "Killed": {
      "value": "Killed",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:126"
      ]
    },
    "Killed PID": {
      "value": "Killed PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:121"
      ]
    },
    "Killing processes...": {
      "value": "Killing processes...",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:116"
      ]
    },
    "L1": {
      "value": "L1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24"
      ]
    },
    "L2": {
      "value": "L2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:21"
      ]
    },
    "L3": {
      "value": "L3",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20"
      ]
    },
    "L3 pattern": {
      "value": "L3 pattern",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:99",
        "scripts/generate_test_audit.py:220",
        "scripts/generate_test_audit.py:221"
      ]
    },
    "L3 test files": {
      "value": "L3 test files",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:230"
      ]
    },
    "LANGFUSE_PUBLIC_KEY": {
      "value": "LANGFUSE_PUBLIC_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:152"
      ]
    },
    "LARGEST FILES:": {
      "value": "LARGEST FILES:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:427"
      ]
    },
    "LARGEST FUNCTIONS:": {
      "value": "LARGEST FUNCTIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:431"
      ]
    },
    "LEARNING DOCUMENTATION VALIDATION REPORT": {
      "value": "LEARNING DOCUMENTATION VALIDATION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:468"
      ]
    },
    "LIKELY CAUSE OF AUTH FAILURES:": {
      "value": "LIKELY CAUSE OF AUTH FAILURES:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:108"
      ]
    },
    "LLM API Keys": {
      "value": "LLM API Keys",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:184"
      ]
    },
    "LLM Configurations:": {
      "value": "LLM Configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:80",
        "scripts/test_staging_config.py:105"
      ]
    },
    "LLM Response Generator\n\nThis module generates realistic LLM responses with production-like characteristics.": {
      "value": "LLM Response Generator\n\nThis module generates realistic LLM responses with production-like characteristics.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:1"
      ]
    },
    "LLM Test Model Validation Script": {
      "value": "LLM Test Model Validation Script",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:128"
      ]
    },
    "LLMManager()": {
      "value": "LLMManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:320"
      ]
    },
    "LLMResponseGenerator": {
      "value": "LLMResponseGenerator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:84"
      ]
    },
    "LLM_MODE": {
      "value": "LLM_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:126"
      ]
    },
    "LOAD_SECRETS": {
      "value": "LOAD_SECRETS",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:36",
        "scripts/test_staging_config.py:43",
        "scripts/test_staging_config.py:65"
      ]
    },
    "LOGIN_FAILED": {
      "value": "LOGIN_FAILED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:20",
        "auth_service/tests/factories/audit_factory.py:89"
      ]
    },
    "LOGIN_SUCCESS": {
      "value": "LOGIN_SUCCESS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:19",
        "auth_service/tests/factories/audit_factory.py:70"
      ]
    },
    "LOGOUT": {
      "value": "LOGOUT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:21",
        "auth_service/tests/factories/audit_factory.py:104"
      ]
    },
    "LOG_LEVEL": {
      "value": "LOG_LEVEL",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:96",
        "scripts/test_config_loading.py:144",
        "scripts/test_staging_config.py:47"
      ]
    },
    "LOW": {
      "value": "LOW",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:123",
        "scripts/test_dashboard.py:132",
        "scripts/test_dashboard.py:139"
      ]
    },
    "LOW: Found": {
      "value": "LOW: Found",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:163"
      ]
    },
    "Large Message": {
      "value": "Large Message",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:150"
      ]
    },
    "Large Pydantic-like Object": {
      "value": "Large Pydantic-like Object",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:242"
      ]
    },
    "Large file (": {
      "value": "Large file (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:261"
      ]
    },
    "Large load time variance:": {
      "value": "Large load time variance:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:411"
      ]
    },
    "Large number of origins (": {
      "value": "Large number of origins (",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:336"
      ]
    },
    "Large user message": {
      "value": "Large user message",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:49"
      ]
    },
    "Latest iteration (": {
      "value": "Latest iteration (",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:771"
      ]
    },
    "Launch TEST Environment for Automated Testing\n\nThis script starts the TEST environment Docker Compose stack with proper configuration\nfor running automated tests with real services.": {
      "value": "Launch TEST Environment for Automated Testing\n\nThis script starts the TEST environment Docker Compose stack with proper configuration\nfor running automated tests with real services.",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:2"
      ]
    },
    "Launch TEST environment for automated testing": {
      "value": "Launch TEST environment for automated testing",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:166"
      ]
    },
    "Learning Documentation:": {
      "value": "Learning Documentation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:651"
      ]
    },
    "Length:": {
      "value": "Length:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "Lib": {
      "value": "Lib",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:27",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Line": {
      "value": "Line",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:366",
        "scripts/fix_e2e_test_imports.py:152",
        "scripts/fix_e2e_test_imports.py:160",
        "scripts/fix_e2e_test_imports.py:169",
        "scripts/migrate_test_ids.py:145",
        "scripts/migrate_test_ids.py:153",
        "scripts/standardize_l3_test_names.py:86",
        "scripts/test_workflows_with_act.py:238",
        "scripts/validate_llm_test_models.py:171"
      ]
    },
    "Line:": {
      "value": "Line:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:329"
      ]
    },
    "Lint test files for real test requirements compliance": {
      "value": "Lint test files for real test requirements compliance",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:254"
      ]
    },
    "List processes only, don't kill": {
      "value": "List processes only, don't kill",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:156"
      ]
    },
    "List[": {
      "value": "List[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Load test reports from test_reports/.": {
      "value": "Load test reports from test_reports/.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:34"
      ]
    },
    "Loaded": {
      "value": "Loaded",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:51",
        "scripts/test_secret_manager_debug.py:46"
      ]
    },
    "Loaded progress:": {
      "value": "Loaded progress:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:163"
      ]
    },
    "Loaded test environment from": {
      "value": "Loaded test environment from",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:75"
      ]
    },
    "Loading configuration...": {
      "value": "Loading configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:58",
        "scripts/test_staging_config.py:72"
      ]
    },
    "Loading coverage data...": {
      "value": "Loading coverage data...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:790"
      ]
    },
    "Loading environment from": {
      "value": "Loading environment from",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:22"
      ]
    },
    "Loading test results...": {
      "value": "Loading test results...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:793"
      ]
    },
    "Local Development": {
      "value": "Local Development",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:127"
      ]
    },
    "Local Environment Test:": {
      "value": "Local Environment Test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:109"
      ]
    },
    "Local OAuth Testing Script with Enhanced Debugging\nTests the complete OAuth flow locally with detailed logging\n\nThis script:\n1. Tests OAuth configuration\n2. Simulates OAuth login flow\n3. Validates token generation\n4. Checks auth service communication": {
      "value": "Local OAuth Testing Script with Enhanced Debugging\nTests the complete OAuth flow locally with detailed logging\n\nThis script:\n1. Tests OAuth configuration\n2. Simulates OAuth login flow\n3. Validates token generation\n4. Checks auth service communication",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:3"
      ]
    },
    "Local address:": {
      "value": "Local address:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:139"
      ]
    },
    "Local services started successfully": {
      "value": "Local services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:130"
      ]
    },
    "Localhost Redis URL not allowed in staging": {
      "value": "Localhost Redis URL not allowed in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:55"
      ]
    },
    "Localhost in staging (should fail)": {
      "value": "Localhost in staging (should fail)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:211"
      ]
    },
    "Localhost origins in production:": {
      "value": "Localhost origins in production:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:348"
      ]
    },
    "Localhost:3000 (Frontend)": {
      "value": "Localhost:3000 (Frontend)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:197"
      ]
    },
    "Localhost:3000 should be allowed in development": {
      "value": "Localhost:3000 should be allowed in development",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:152"
      ]
    },
    "Localhost:5173 (Vite)": {
      "value": "Localhost:5173 (Vite)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:253"
      ]
    },
    "Localhost:8000 (Backend)": {
      "value": "Localhost:8000 (Backend)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:203"
      ]
    },
    "Location": {
      "value": "Location",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:124",
        "scripts/test_staging_login_automated.py:264"
      ]
    },
    "Log Data Generator\n\nThis module generates realistic log data with specific patterns and behaviors.": {
      "value": "Log Data Generator\n\nThis module generates realistic log data with specific patterns and behaviors.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:1"
      ]
    },
    "Log entry": {
      "value": "Log entry",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:101"
      ]
    },
    "LogGenerator": {
      "value": "LogGenerator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:85"
      ]
    },
    "Logged in as": {
      "value": "Logged in as",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:155"
      ]
    },
    "Login failed - invalid credentials or user doesn't exist": {
      "value": "Login failed - invalid credentials or user doesn't exist",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:158"
      ]
    },
    "Login failed with status": {
      "value": "Login failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:254"
      ]
    },
    "Login failed:": {
      "value": "Login failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:202",
        "scripts/test_data_pipeline_simple.py:46"
      ]
    },
    "Logout": {
      "value": "Logout",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:350"
      ]
    },
    "Long-duration soak testing": {
      "value": "Long-duration soak testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:102"
      ]
    },
    "Long-term maintainability": {
      "value": "Long-term maintainability",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:406"
      ]
    },
    "Low - Utilities": {
      "value": "Low - Utilities",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:47"
      ]
    },
    "Low data point count": {
      "value": "Low data point count",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:218"
      ]
    },
    "M": {
      "value": "M",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:187",
        "scripts/test_docker_config.py:56"
      ]
    },
    "MAJOR (should fix)": {
      "value": "MAJOR (should fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:121"
      ]
    },
    "MANUAL ACTION REQUIRED -": {
      "value": "MANUAL ACTION REQUIRED -",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:845"
      ]
    },
    "MB": {
      "value": "MB",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:117",
        "scripts/pytest_resource_monitor.py:187"
      ]
    },
    "MB of data": {
      "value": "MB of data",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:139"
      ]
    },
    "MEDIUM": {
      "value": "MEDIUM",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:501",
        "scripts/ci/check_test_stubs.py:66",
        "scripts/remove_test_stubs.py:175",
        "scripts/remove_test_stubs.py:231",
        "scripts/test_dashboard.py:113",
        "scripts/test_dashboard.py:132",
        "scripts/test_dashboard.py:138"
      ]
    },
    "MEDIUM: Found LLM calls in": {
      "value": "MEDIUM: Found LLM calls in",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:151"
      ]
    },
    "MEDIUM: Found network calls in": {
      "value": "MEDIUM: Found network calls in",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:143"
      ]
    },
    "MET": {
      "value": "MET",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:114",
        "scripts/websocket_performance_standalone_test.py:160"
      ]
    },
    "MIB": {
      "value": "MIB",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:187"
      ]
    },
    "MIGRATION": {
      "value": "MIGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:194"
      ]
    },
    "MIGRATION COMPLETE": {
      "value": "MIGRATION COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:305"
      ]
    },
    "MIGRATION TEST SUMMARY": {
      "value": "MIGRATION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:309"
      ]
    },
    "MINOR (nice to fix)": {
      "value": "MINOR (nice to fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:123"
      ]
    },
    "MISSING": {
      "value": "MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:88",
        "scripts/test_config_loading.py:97",
        "scripts/test_config_loading.py:98",
        "scripts/test_config_loading.py:107",
        "scripts/test_config_loading.py:108"
      ]
    },
    "MISSING OPTIONAL VARIABLES (": {
      "value": "MISSING OPTIONAL VARIABLES (",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:70"
      ]
    },
    "MISSING OPTIONAL VARIABLES BY CATEGORY:": {
      "value": "MISSING OPTIONAL VARIABLES BY CATEGORY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:64"
      ]
    },
    "MISSING_IMPORT": {
      "value": "MISSING_IMPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:155"
      ]
    },
    "MISSING_PATTERN": {
      "value": "MISSING_PATTERN",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:165",
        "scripts/test_websocket_injection_fix_complete.py:443"
      ]
    },
    "MISSING_SECTION": {
      "value": "MISSING_SECTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:433"
      ]
    },
    "MOCK POLICY VIOLATION TEST": {
      "value": "MOCK POLICY VIOLATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:37"
      ]
    },
    "MOCK-FREE test suite for the auth service refresh endpoint.\n\nCRITICAL: This file eliminates ALL mock usage as per CLAUDE.md requirements.\nTests the refresh endpoint using ONLY real services: PostgreSQL, Redis, JWT operations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Stability and Compliance  \n- Value Impact: Authentic refresh token testing with real service integration\n- Strategic Impact: Ensures refresh endpoint works correctly in production\n\nZERO MOCKS: Every test uses real JWT operations, database, and Redis.": {
      "value": "MOCK-FREE test suite for the auth service refresh endpoint.\n\nCRITICAL: This file eliminates ALL mock usage as per CLAUDE.md requirements.\nTests the refresh endpoint using ONLY real services: PostgreSQL, Redis, JWT operations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Stability and Compliance  \n- Value Impact: Authentic refresh token testing with real service integration\n- Strategic Impact: Ensures refresh endpoint works correctly in production\n\nZERO MOCKS: Every test uses real JWT operations, database, and Redis.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:1"
      ]
    },
    "MOCK-FREE tests for critical bugs in auth service.\n\nCRITICAL: This file eliminates ALL mock usage as per CLAUDE.md requirements.\nTests critical auth service bugs using ONLY real services: PostgreSQL, Redis, JWT operations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Reliability and Bug Prevention\n- Value Impact: Authentic testing of critical bugs with real service integration\n- Strategic Impact: Ensures critical bugs are prevented in production\n\nZERO MOCKS: Every test uses real services to validate bug fixes.": {
      "value": "MOCK-FREE tests for critical bugs in auth service.\n\nCRITICAL: This file eliminates ALL mock usage as per CLAUDE.md requirements.\nTests critical auth service bugs using ONLY real services: PostgreSQL, Redis, JWT operations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: System Reliability and Bug Prevention\n- Value Impact: Authentic testing of critical bugs with real service integration\n- Strategic Impact: Ensures critical bugs are prevented in production\n\nZERO MOCKS: Every test uses real services to validate bug fixes.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:1"
      ]
    },
    "MagicMock(": {
      "value": "MagicMock(",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:63"
      ]
    },
    "MagicMock()": {
      "value": "MagicMock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356"
      ]
    },
    "MagicMock, MagicMock": {
      "value": "MagicMock, MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:45"
      ]
    },
    "MagicMock\\(": {
      "value": "MagicMock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "MagicMock\\(\\)": {
      "value": "MagicMock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235",
        "scripts/e2e_test_fixer.py:180"
      ]
    },
    "Main": {
      "value": "Main",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:163"
      ]
    },
    "Main CLI function.": {
      "value": "Main CLI function.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:416"
      ]
    },
    "Main Endpoint (/ws):": {
      "value": "Main Endpoint (/ws):",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:124"
      ]
    },
    "Main continuous test loop.": {
      "value": "Main continuous test loop.",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:334"
      ]
    },
    "Main entry point": {
      "value": "Main entry point",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:384"
      ]
    },
    "Main entry point for optimized test execution": {
      "value": "Main entry point for optimized test execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:360"
      ]
    },
    "Main entry point.": {
      "value": "Main entry point.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:156",
        "scripts/test_cold_start_e2e.py:501",
        "scripts/test_coordination_fixes.py:404",
        "scripts/test_seed_data.py:396",
        "scripts/test_service_monitor.py:324",
        "scripts/test_staging_websocket_comprehensive.py:409",
        "scripts/test_websocket_middleware.py:202"
      ]
    },
    "Main test execution.": {
      "value": "Main test execution.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:230",
        "scripts/test_docker_websocket_fix.py:309",
        "scripts/test_modern_websocket_migration.py:222",
        "scripts/test_real_jwt_e2e.py:263"
      ]
    },
    "Main test function": {
      "value": "Main test function",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:176"
      ]
    },
    "Main test function.": {
      "value": "Main test function.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:278",
        "scripts/simple_serialization_test.py:223",
        "scripts/test_adaptive_workflow_direct.py:212",
        "scripts/test_adaptive_workflow_local.py:140",
        "scripts/test_async_serialization_direct.py:231",
        "scripts/test_auth_fix_simple.py:102",
        "scripts/test_auth_service_integration_fix.py:187",
        "scripts/test_blocking_analysis.py:317",
        "scripts/test_intensive_serialization.py:319",
        "scripts/test_websocket_dev_mode.py:332"
      ]
    },
    "Main test runner": {
      "value": "Main test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:164",
        "scripts/test_clickhouse_startup_fix.py:396"
      ]
    },
    "Main test runner.": {
      "value": "Main test runner.",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:147",
        "scripts/test_websocket_cors_comprehensive.py:318",
        "scripts/test_websocket_simple.py:63"
      ]
    },
    "MainTestSettings": {
      "value": "MainTestSettings",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "Make sure the auth service is running on port 8081": {
      "value": "Make sure the auth service is running on port 8081",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:171"
      ]
    },
    "Make sure you're running from the project root directory": {
      "value": "Make sure you're running from the project root directory",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:95"
      ]
    },
    "Make sure your backend is running on port 8000": {
      "value": "Make sure your backend is running on port 8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:169"
      ]
    },
    "Malformed request should fail:": {
      "value": "Malformed request should fail:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:287"
      ]
    },
    "Malicious redirect URI should fail:": {
      "value": "Malicious redirect URI should fail:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:108"
      ]
    },
    "Malicious sites should be blocked": {
      "value": "Malicious sites should be blocked",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:158"
      ]
    },
    "Manage Docker Compose test services for Netra platform": {
      "value": "Manage Docker Compose test services for Netra platform",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:158"
      ]
    },
    "Manager environment:": {
      "value": "Manager environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:55"
      ]
    },
    "Manual WebSocket Test Script\n\nThis script tests WebSocket connections in development mode to verify the fixes.": {
      "value": "Manual WebSocket Test Script\n\nThis script tests WebSocket connections in development mode to verify the fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:2"
      ]
    },
    "Manual test script for signup flow edge cases\nTests registration, persistence, validation, and error handling": {
      "value": "Manual test script for signup flow edge cases\nTests registration, persistence, validation, and error handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:1"
      ]
    },
    "Many agent endpoints failing - partial functionality": {
      "value": "Many agent endpoints failing - partial functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:178"
      ]
    },
    "Many test failures are due to:": {
      "value": "Many test failures are due to:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:75"
      ]
    },
    "Markdown report saved to": {
      "value": "Markdown report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:508"
      ]
    },
    "Marker Usage:": {
      "value": "Marker Usage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:336"
      ]
    },
    "Markers added:": {
      "value": "Markers added:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:228"
      ]
    },
    "Max allowed load time:": {
      "value": "Max allowed load time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:177"
      ]
    },
    "Max block:": {
      "value": "Max block:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:113",
        "scripts/simple_serialization_test.py:216"
      ]
    },
    "Max concurrent analysis agents:": {
      "value": "Max concurrent analysis agents:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:336"
      ]
    },
    "Max iterations:": {
      "value": "Max iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:160"
      ]
    },
    "Max retries:": {
      "value": "Max retries:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:190"
      ]
    },
    "Max workers:": {
      "value": "Max workers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:359"
      ]
    },
    "Max:": {
      "value": "Max:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:186"
      ]
    },
    "Maximum block duration:": {
      "value": "Maximum block duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:134",
        "scripts/test_intensive_serialization.py:202"
      ]
    },
    "Maximum block:": {
      "value": "Maximum block:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:127"
      ]
    },
    "Maximum blocking duration:": {
      "value": "Maximum blocking duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:251"
      ]
    },
    "Maximum blocking:": {
      "value": "Maximum blocking:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:339"
      ]
    },
    "Maximum concurrent sessions exceeded": {
      "value": "Maximum concurrent sessions exceeded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:144"
      ]
    },
    "Maximum iterations to run (default: 100)": {
      "value": "Maximum iterations to run (default: 100)",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:921"
      ]
    },
    "Maximum number of files to analyze": {
      "value": "Maximum number of files to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:926"
      ]
    },
    "Maximum number of files to process": {
      "value": "Maximum number of files to process",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:721"
      ]
    },
    "Maximum token limit exceeded": {
      "value": "Maximum token limit exceeded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:121"
      ]
    },
    "May cause minor UI stuttering": {
      "value": "May cause minor UI stuttering",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:347"
      ]
    },
    "Measurement ID:": {
      "value": "Measurement ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:68"
      ]
    },
    "Medium - Integration": {
      "value": "Medium - Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:45"
      ]
    },
    "Medium - Models": {
      "value": "Medium - Models",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:46"
      ]
    },
    "Memory Limit": {
      "value": "Memory Limit",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:129",
        "scripts/test_docker_config.py:138",
        "scripts/test_docker_config.py:160",
        "scripts/test_docker_config.py:166"
      ]
    },
    "Memory allocation failed, retrying": {
      "value": "Memory allocation failed, retrying",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:120"
      ]
    },
    "Memory critical threshold percentage": {
      "value": "Memory critical threshold percentage",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:377"
      ]
    },
    "Memory errors": {
      "value": "Memory errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:363"
      ]
    },
    "Memory warning threshold percentage": {
      "value": "Memory warning threshold percentage",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:375"
      ]
    },
    "Memory/Resource: 1": {
      "value": "Memory/Resource: 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:363"
      ]
    },
    "Message": {
      "value": "Message",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:30",
        "scripts/test_intensive_serialization.py:83"
      ]
    },
    "Message flow test PASSED": {
      "value": "Message flow test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:206"
      ]
    },
    "Message type:": {
      "value": "Message type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:89"
      ]
    },
    "Message validation failed:": {
      "value": "Message validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:304"
      ]
    },
    "Message:": {
      "value": "Message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:111"
      ]
    },
    "MessageHandlerService file not found": {
      "value": "MessageHandlerService file not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:192"
      ]
    },
    "MessageHandlerService\\(.*websocket_manager\\)": {
      "value": "MessageHandlerService\\(.*websocket_manager\\)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:50",
        "scripts/test_websocket_injection_fix_complete.py:59",
        "scripts/test_websocket_injection_fix_complete.py:67"
      ]
    },
    "Messages endpoint failed:": {
      "value": "Messages endpoint failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:120"
      ]
    },
    "Method '": {
      "value": "Method '",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:249"
      ]
    },
    "Metrics endpoint error:": {
      "value": "Metrics endpoint error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:255"
      ]
    },
    "Metrics exported": {
      "value": "Metrics exported",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:131"
      ]
    },
    "Migrate hardcoded test IDs to SSOT-compliant format": {
      "value": "Migrate hardcoded test IDs to SSOT-compliant format",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:210"
      ]
    },
    "Migrate specific directory (e.g., \"tests/mission_critical\")": {
      "value": "Migrate specific directory (e.g., \"tests/mission_critical\")",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:329"
      ]
    },
    "Migrate specific file": {
      "value": "Migrate specific file",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:334"
      ]
    },
    "Migrate test files to use IsolatedEnvironment": {
      "value": "Migrate test files to use IsolatedEnvironment",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:314"
      ]
    },
    "Migrated": {
      "value": "Migrated",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:180"
      ]
    },
    "Migrating priority file:": {
      "value": "Migrating priority file:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:260"
      ]
    },
    "Migration Safety Checks": {
      "value": "Migration Safety Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:284"
      ]
    },
    "Migration URL Generation": {
      "value": "Migration URL Generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:282"
      ]
    },
    "Migration URL valid:": {
      "value": "Migration URL valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:209"
      ]
    },
    "Migration URL:": {
      "value": "Migration URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:64",
        "scripts/test_staging_migrations.py:241"
      ]
    },
    "Migration script to update hardcoded test IDs to SSOT-compliant format.\n\nThis script scans the codebase for hardcoded test IDs and provides\nautomated migration to valid ID formats using the IDManager.": {
      "value": "Migration script to update hardcoded test IDs to SSOT-compliant format.\n\nThis script scans the codebase for hardcoded test IDs and provides\nautomated migration to valid ID formats using the IDManager.",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:2"
      ]
    },
    "Min:": {
      "value": "Min:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:185"
      ]
    },
    "Minimal output": {
      "value": "Minimal output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:391",
        "scripts/test_backend_ORIGINAL.py:506"
      ]
    },
    "Minimal output for CI logs": {
      "value": "Minimal output for CI logs",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:108"
      ]
    },
    "Minimal workflow focused on data gathering": {
      "value": "Minimal workflow focused on data gathering",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:331"
      ]
    },
    "Minimum coverage percentage required (default: 70)": {
      "value": "Minimum coverage percentage required (default: 70)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:500"
      ]
    },
    "Minor (2-10ms):": {
      "value": "Minor (2-10ms):",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:214"
      ]
    },
    "Minor (<10ms):": {
      "value": "Minor (<10ms):",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:123"
      ]
    },
    "Minor warning after deployment": {
      "value": "Minor warning after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:124"
      ]
    },
    "Missing": {
      "value": "Missing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:105",
        "scripts/test_modern_websocket_migration.py:133"
      ]
    },
    "Missing Access-Control-Allow-Origin header": {
      "value": "Missing Access-Control-Allow-Origin header",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:220"
      ]
    },
    "Missing Access-Control-Allow-Origin header in actual response": {
      "value": "Missing Access-Control-Allow-Origin header in actual response",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:121"
      ]
    },
    "Missing CORS headers:": {
      "value": "Missing CORS headers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:72"
      ]
    },
    "Missing config file:": {
      "value": "Missing config file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:417"
      ]
    },
    "Missing configs:": {
      "value": "Missing configs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:132"
      ]
    },
    "Missing critical events:": {
      "value": "Missing critical events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:323",
        "scripts/test_websocket_standalone.py:176",
        "scripts/test_websocket_standalone.py:182"
      ]
    },
    "Missing events:": {
      "value": "Missing events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:314"
      ]
    },
    "Missing important": {
      "value": "Missing important",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:198"
      ]
    },
    "Missing rate limit header": {
      "value": "Missing rate limit header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:239"
      ]
    },
    "Missing rate limit remaining header": {
      "value": "Missing rate limit remaining header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:240"
      ]
    },
    "Missing rate limit reset header": {
      "value": "Missing rate limit reset header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:241"
      ]
    },
    "Missing required": {
      "value": "Missing required",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:193"
      ]
    },
    "Missing required field in audit log:": {
      "value": "Missing required field in audit log:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:261"
      ]
    },
    "Missing required field in error response:": {
      "value": "Missing required field in error response:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:162"
      ]
    },
    "Missing required field in login response:": {
      "value": "Missing required field in login response:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:140"
      ]
    },
    "Missing required field:": {
      "value": "Missing required field:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:95",
        "auth_service/tests/utils/assertion_helpers.py:114"
      ]
    },
    "Missing required field: findings": {
      "value": "Missing required field: findings",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:351"
      ]
    },
    "Missing required field: recommendations": {
      "value": "Missing required field: recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:352"
      ]
    },
    "Missing required permission:": {
      "value": "Missing required permission:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:223"
      ]
    },
    "Missing required staging variables": {
      "value": "Missing required staging variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:184"
      ]
    },
    "Missing secret mappings:": {
      "value": "Missing secret mappings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:166"
      ]
    },
    "Missing services:": {
      "value": "Missing services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:87"
      ]
    },
    "Missing setup_test_path import or call": {
      "value": "Missing setup_test_path import or call",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:39"
      ]
    },
    "Missing test directory:": {
      "value": "Missing test directory:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:413"
      ]
    },
    "Missing test file:": {
      "value": "Missing test file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:84"
      ]
    },
    "Missing tool_completed event": {
      "value": "Missing tool_completed event",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:400",
        "scripts/test_websocket_standalone.py:244"
      ]
    },
    "Missing tool_executing event": {
      "value": "Missing tool_executing event",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:399",
        "scripts/test_websocket_standalone.py:243"
      ]
    },
    "Missing/Invalid:": {
      "value": "Missing/Invalid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:472"
      ]
    },
    "Missing:": {
      "value": "Missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:184"
      ]
    },
    "Mission-Critical Tests": {
      "value": "Mission-Critical Tests",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:335",
        "scripts/run_supervisor_test_coverage.py:352"
      ]
    },
    "Mixed load time:": {
      "value": "Mixed load time:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:212"
      ]
    },
    "Mobile App/1.0.0 (iOS 15.0)": {
      "value": "Mobile App/1.0.0 (iOS 15.0)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:82"
      ]
    },
    "Mock LLM response": {
      "value": "Mock LLM response",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:24"
      ]
    },
    "Mock component class '": {
      "value": "Mock component class '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:175",
        "scripts/compliance/real_test_requirements_enforcer.py:248",
        "scripts/compliance/real_test_validator.py:128"
      ]
    },
    "Mock component function '": {
      "value": "Mock component function '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:187",
        "scripts/compliance/real_test_requirements_enforcer.py:265",
        "scripts/compliance/real_test_validator.py:139"
      ]
    },
    "Mock component pattern found:": {
      "value": "Mock component pattern found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:383",
        "scripts/compliance/real_test_validator.py:159"
      ]
    },
    "Mock connection.": {
      "value": "Mock connection.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:52"
      ]
    },
    "Mock disconnection.": {
      "value": "Mock disconnection.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:56"
      ]
    },
    "Mock execution of a workflow step.": {
      "value": "Mock execution of a workflow step.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:47"
      ]
    },
    "Mock send_json method - returns success status.": {
      "value": "Mock send_json method - returns success status.",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:36"
      ]
    },
    "Mock send_json method.": {
      "value": "Mock send_json method.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:94",
        "scripts/test_websocket_standalone.py:58"
      ]
    },
    "Mock send_json with event capture.": {
      "value": "Mock send_json with event capture.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:68"
      ]
    },
    "Mock send_json with timing tracking.": {
      "value": "Mock send_json with timing tracking.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:38"
      ]
    },
    "Mock send_text method - returns success status.": {
      "value": "Mock send_text method - returns success status.",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:23"
      ]
    },
    "Mock send_text method.": {
      "value": "Mock send_text method.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:81",
        "scripts/test_websocket_standalone.py:43"
      ]
    },
    "Mock send_text with event capture.": {
      "value": "Mock send_text with event capture.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:56"
      ]
    },
    "Mock(": {
      "value": "Mock(",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:63"
      ]
    },
    "Mock()": {
      "value": "Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356",
        "scripts/compliance/test_fixer.py:44"
      ]
    },
    "Mock/test implementation comment found:": {
      "value": "Mock/test implementation comment found:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:152"
      ]
    },
    "MockComponent\\s*=": {
      "value": "MockComponent\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:72"
      ]
    },
    "Mock\\(": {
      "value": "Mock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "Mock\\(\\)": {
      "value": "Mock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235",
        "scripts/e2e_test_fixer.py:179"
      ]
    },
    "Mock\\(spec=ToolDispatcher\\)": {
      "value": "Mock\\(spec=ToolDispatcher\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:321"
      ]
    },
    "Mode:": {
      "value": "Mode:",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:170",
        "scripts/migrate_test_ids.py:194"
      ]
    },
    "Model inference completed": {
      "value": "Model inference completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:99"
      ]
    },
    "Model loaded successfully": {
      "value": "Model loaded successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:127"
      ]
    },
    "Model response test failed:": {
      "value": "Model response test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:430"
      ]
    },
    "Moderate (10-50ms):": {
      "value": "Moderate (10-50ms):",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:122",
        "scripts/test_intensive_serialization.py:213"
      ]
    },
    "Moderate blocks (20-50ms):": {
      "value": "Moderate blocks (20-50ms):",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:303"
      ]
    },
    "Modern WebSocket implementation is working correctly.": {
      "value": "Modern WebSocket implementation is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:231"
      ]
    },
    "Modernize legacy test patterns": {
      "value": "Modernize legacy test patterns",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:43"
      ]
    },
    "Modernizing": {
      "value": "Modernizing",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:287"
      ]
    },
    "Modified workflow with data collection request": {
      "value": "Modified workflow with data collection request",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:326"
      ]
    },
    "Modular test file created to comply with 450-line limit requirement.\nContains": {
      "value": "Modular test file created to comply with 450-line limit requirement.\nContains",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:205"
      ]
    },
    "Module file not found:": {
      "value": "Module file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:107"
      ]
    },
    "Module not found": {
      "value": "Module not found",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:689"
      ]
    },
    "Module:": {
      "value": "Module:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:25",
        "scripts/test/test_supervisor_import.py:38"
      ]
    },
    "ModuleNotFoundError": {
      "value": "ModuleNotFoundError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:34",
        "scripts/comprehensive_test_fixer.py:66",
        "scripts/fix_test_batch.py:72"
      ]
    },
    "ModuleNotFoundError: No module named '([\\w\\.]+)'": {
      "value": "ModuleNotFoundError: No module named '([\\w\\.]+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:62",
        "scripts/fix_test_batch.py:70"
      ]
    },
    "Monitor WebSocket connection lifecycle in detail.": {
      "value": "Monitor WebSocket connection lifecycle in detail.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:121"
      ]
    },
    "Monitor event loop delays.": {
      "value": "Monitor event loop delays.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:69",
        "scripts/test_blocking_analysis.py:71"
      ]
    },
    "Monitor failed:": {
      "value": "Monitor failed:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:392"
      ]
    },
    "Monitor if the event loop is responsive.": {
      "value": "Monitor if the event loop is responsive.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:73"
      ]
    },
    "Monitor loop for blocking detection": {
      "value": "Monitor loop for blocking detection",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:113"
      ]
    },
    "Monitor stopped by user": {
      "value": "Monitor stopped by user",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:390"
      ]
    },
    "Monitoring & Observability": {
      "value": "Monitoring & Observability",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:186"
      ]
    },
    "Monitoring error:": {
      "value": "Monitoring error:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:352"
      ]
    },
    "Monitoring interval in seconds": {
      "value": "Monitoring interval in seconds",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:373"
      ]
    },
    "Monitoring interval:": {
      "value": "Monitoring interval:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:295"
      ]
    },
    "Monthly overhead:": {
      "value": "Monthly overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:651"
      ]
    },
    "More intensive test to identify event loop blocking during complex serialization.": {
      "value": "More intensive test to identify event loop blocking during complex serialization.",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:2"
      ]
    },
    "Most concurrent attempts should fail, only": {
      "value": "Most concurrent attempts should fail, only",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:207"
      ]
    },
    "Most likely issues in staging environment:": {
      "value": "Most likely issues in staging environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:207"
      ]
    },
    "Move '": {
      "value": "Move '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:250",
        "scripts/compliance/real_test_requirements_enforcer.py:267"
      ]
    },
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36": {
      "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:66"
      ]
    },
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124": {
      "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:92"
      ]
    },
    "Multi-Service Coverage:": {
      "value": "Multi-Service Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:749"
      ]
    },
    "Multi-user productivity for": {
      "value": "Multi-user productivity for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:496"
      ]
    },
    "MultiCapture": {
      "value": "MultiCapture",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:65",
        "scripts/pytest_plugins.py:198"
      ]
    },
    "Must not be placeholder email": {
      "value": "Must not be placeholder email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:290",
        "auth_service/tests/test_refresh_token_fix.py:295"
      ]
    },
    "Must not use hardcoded placeholder": {
      "value": "Must not use hardcoded placeholder",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:86",
        "auth_service/tests/test_refresh_critical_fix.py:88"
      ]
    },
    "Must not use placeholder email": {
      "value": "Must not use placeholder email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:138"
      ]
    },
    "N/A": {
      "value": "N/A",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:115",
        "scripts/test_and_fix_cors.py:121",
        "scripts/test_and_fix_cors.py:140",
        "scripts/test_cors.py:377",
        "scripts/test_cors.py:382",
        "scripts/test_cors.py:383",
        "scripts/test_cors.py:390",
        "scripts/test_cors.py:391",
        "scripts/test_oauth_local.py:152",
        "scripts/test_oauth_local.py:153"
      ]
    },
    "NEED TO IMPLEMENT:": {
      "value": "NEED TO IMPLEMENT:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:204"
      ]
    },
    "NETRA AI PLATFORM - BACKEND TEST RUNNER": {
      "value": "NETRA AI PLATFORM - BACKEND TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:337"
      ]
    },
    "NETRA AI PLATFORM - COMPREHENSIVE TEST DISCOVERY REPORT": {
      "value": "NETRA AI PLATFORM - COMPREHENSIVE TEST DISCOVERY REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:65"
      ]
    },
    "NETRA AI PLATFORM - FRONTEND TEST RUNNER": {
      "value": "NETRA AI PLATFORM - FRONTEND TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:442"
      ]
    },
    "NETRA APEX STAGING ENVIRONMENT COMPREHENSIVE TEST SUITE": {
      "value": "NETRA APEX STAGING ENVIRONMENT COMPREHENSIVE TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:490"
      ]
    },
    "NETRA_ENV": {
      "value": "NETRA_ENV",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:281",
        "scripts/test_staging_threads_fix.py:76",
        "scripts/test_websocket_chat_simple.py:36",
        "scripts/test_websocket_chat_standalone.py:36"
      ]
    },
    "NETRA_ENVIRONMENT": {
      "value": "NETRA_ENVIRONMENT",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:92"
      ]
    },
    "NETRA_REAL_LLM_ENABLED": {
      "value": "NETRA_REAL_LLM_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:19",
        "scripts/run_agent_pipeline_test.py:31"
      ]
    },
    "NEXT STEPS": {
      "value": "NEXT STEPS",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:209"
      ]
    },
    "NEXT_PUBLIC_API_URL": {
      "value": "NEXT_PUBLIC_API_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:46"
      ]
    },
    "NEXT_PUBLIC_GTM_CONTAINER_ID|NEXT_PUBLIC_GTM_ENABLED": {
      "value": "NEXT_PUBLIC_GTM_CONTAINER_ID|NEXT_PUBLIC_GTM_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:54"
      ]
    },
    "NEXT_PUBLIC_WEBSOCKET_URL": {
      "value": "NEXT_PUBLIC_WEBSOCKET_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:48"
      ]
    },
    "NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:8000/ws": {
      "value": "NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:161"
      ]
    },
    "NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:8000/ws": {
      "value": "NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:167"
      ]
    },
    "NEXT_PUBLIC_WS_URL": {
      "value": "NEXT_PUBLIC_WS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:47"
      ]
    },
    "NEXT_PUBLIC_WS_URL=ws://localhost:8000": {
      "value": "NEXT_PUBLIC_WS_URL=ws://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:168"
      ]
    },
    "NO": {
      "value": "NO",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:179",
        "scripts/test_improved_environment_validation.py:242",
        "scripts/test_service_startup_with_missing_optionals.py:91",
        "scripts/test_service_startup_with_missing_optionals.py:92",
        "scripts/test_service_startup_with_missing_optionals.py:93",
        "scripts/test_service_startup_with_missing_optionals.py:188",
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "NO - FIX REQUIRED": {
      "value": "NO - FIX REQUIRED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:646"
      ]
    },
    "NODE_OPTIONS": {
      "value": "NODE_OPTIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:141",
        "scripts/test_docker_config.py:141"
      ]
    },
    "NOT ACHIEVED": {
      "value": "NOT ACHIEVED",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:220"
      ]
    },
    "NOT MET": {
      "value": "NOT MET",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:114",
        "scripts/websocket_performance_standalone_test.py:160"
      ]
    },
    "NOT SET": {
      "value": "NOT SET",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:33",
        "scripts/test_and_fix_cors.py:34",
        "scripts/test_and_fix_cors.py:35",
        "scripts/test_and_fix_cors.py:36",
        "scripts/test_and_fix_cors.py:75",
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141"
      ]
    },
    "NOT WORKING": {
      "value": "NOT WORKING",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:269"
      ]
    },
    "NOTE: Actual migration execution skipped for safety": {
      "value": "NOTE: Actual migration execution skipped for safety",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:265"
      ]
    },
    "NO_COLOR": {
      "value": "NO_COLOR",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:19",
        "scripts/test_ansi_logging.py:60",
        "scripts/test_ansi_logging.py:61"
      ]
    },
    "NO_MOCK_FALLBACK": {
      "value": "NO_MOCK_FALLBACK",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:38"
      ]
    },
    "Need to increase coverage by": {
      "value": "Need to increase coverage by",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "Netra Adaptive Workflow Test Suite\n\nUsage: python test_adaptive_workflow.py [options]\n\nOptions:\n  --help, -h        Show this help message\n  --no-auth         Skip authentication (requires AUTH_SERVICE_ENABLED=false)\n  --quick           Run only workflow scenarios (skip integration tests)\n  --integration     Run only integration tests\n  --non-interactive Use default credentials without prompting\n\nExamples:\n  python test_adaptive_workflow.py              # Run all tests (interactive)\n  python test_adaptive_workflow.py --quick      # Quick test\n  python test_adaptive_workflow.py --no-auth    # Test without auth\n  python test_adaptive_workflow.py --non-interactive  # Use defaults": {
      "value": "Netra Adaptive Workflow Test Suite\n\nUsage: python test_adaptive_workflow.py [options]\n\nOptions:\n  --help, -h        Show this help message\n  --no-auth         Skip authentication (requires AUTH_SERVICE_ENABLED=false)\n  --quick           Run only workflow scenarios (skip integration tests)\n  --integration     Run only integration tests\n  --non-interactive Use default credentials without prompting\n\nExamples:\n  python test_adaptive_workflow.py              # Run all tests (interactive)\n  python test_adaptive_workflow.py --quick      # Quick test\n  python test_adaptive_workflow.py --no-auth    # Test without auth\n  python test_adaptive_workflow.py --non-interactive  # Use defaults",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:392"
      ]
    },
    "Netra Environment Variable Validation Test Suite": {
      "value": "Netra Environment Variable Validation Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:161"
      ]
    },
    "Netra Test Agent": {
      "value": "Netra Test Agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:47",
        "scripts/setup_staging_test_account.py:61"
      ]
    },
    "Netra-Auth-Test/1.0": {
      "value": "Netra-Auth-Test/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:219"
      ]
    },
    "Network configuration issue in Cloud Run": {
      "value": "Network configuration issue in Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:203"
      ]
    },
    "Network connection FAILED:": {
      "value": "Network connection FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:91"
      ]
    },
    "Network partition detection took": {
      "value": "Network partition detection took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:346"
      ]
    },
    "Network unreachable - simulated partition": {
      "value": "Network unreachable - simulated partition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:320"
      ]
    },
    "New Failures Found:": {
      "value": "New Failures Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:123"
      ]
    },
    "New access token: ...": {
      "value": "New access token: ...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:144",
        "scripts/test_staging_auth_e2e.py:179"
      ]
    },
    "New failures detected:": {
      "value": "New failures detected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:127"
      ]
    },
    "New files created:": {
      "value": "New files created:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:751"
      ]
    },
    "New files:": {
      "value": "New files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:723"
      ]
    },
    "New refresh token MUST differ from original": {
      "value": "New refresh token MUST differ from original",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:53"
      ]
    },
    "New refresh token MUST differ from original to prevent infinite loop": {
      "value": "New refresh token MUST differ from original to prevent infinite loop",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:285"
      ]
    },
    "New refresh token should differ from original": {
      "value": "New refresh token should differ from original",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:59",
        "auth_service/tests/test_refresh_token_fix.py:60"
      ]
    },
    "New session ID should be cryptographically secure": {
      "value": "New session ID should be cryptographically secure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:157"
      ]
    },
    "New session after invalidation failed": {
      "value": "New session after invalidation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:328"
      ]
    },
    "New session validation failed": {
      "value": "New session validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:168"
      ]
    },
    "NewClient/1.0": {
      "value": "NewClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:157",
        "auth_service/tests/test_session_security_cycles_36_40.py:323"
      ]
    },
    "Next Steps Guidance": {
      "value": "Next Steps Guidance",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:156"
      ]
    },
    "Next focus area:": {
      "value": "Next focus area:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:767"
      ]
    },
    "Next steps:": {
      "value": "Next steps:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:242",
        "scripts/fix_authentication_test_tokens.py:171",
        "scripts/standardize_l3_test_names.py:292"
      ]
    },
    "No": {
      "value": "No",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:153",
        "scripts/test_async_serialization_direct.py:132",
        "scripts/test_dashboard.py:169"
      ]
    },
    "No .env.staging file": {
      "value": "No .env.staging file",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:98"
      ]
    },
    "No ACT compatibility checks found": {
      "value": "No ACT compatibility checks found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:242"
      ]
    },
    "No API key": {
      "value": "No API key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:89"
      ]
    },
    "No Alembic configuration found": {
      "value": "No Alembic configuration found",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:121"
      ]
    },
    "No CORS headers found": {
      "value": "No CORS headers found",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:85",
        "scripts/debug_cors_test.py:103"
      ]
    },
    "No L3 files found!": {
      "value": "No L3 files found!",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:233"
      ]
    },
    "No Origin Header (Desktop/Mobile)": {
      "value": "No Origin Header (Desktop/Mobile)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:245"
      ]
    },
    "No SSL parameters as expected": {
      "value": "No SSL parameters as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:159"
      ]
    },
    "No Volume Mounts": {
      "value": "No Volume Mounts",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:132",
        "scripts/test_docker_config.py:142"
      ]
    },
    "No access token received": {
      "value": "No access token received",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:250"
      ]
    },
    "No accessible data agent endpoint found": {
      "value": "No accessible data agent endpoint found",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:154"
      ]
    },
    "No accounts found!": {
      "value": "No accounts found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:45"
      ]
    },
    "No agent endpoints are working - this indicates a fundamental issue": {
      "value": "No agent endpoints are working - this indicates a fundamental issue",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:175"
      ]
    },
    "No applicable fixes found for this iteration": {
      "value": "No applicable fixes found for this iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:274"
      ]
    },
    "No async URL generated": {
      "value": "No async URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:93"
      ]
    },
    "No authentication (dev mode)": {
      "value": "No authentication (dev mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:25"
      ]
    },
    "No changes needed": {
      "value": "No changes needed",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:128"
      ]
    },
    "No changes were needed - files are already compliant": {
      "value": "No changes were needed - files are already compliant",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:309"
      ]
    },
    "No circuit breaker or rate limiting - requests timeout instead of proper 503 responses": {
      "value": "No circuit breaker or rate limiting - requests timeout instead of proper 503 responses",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:308"
      ]
    },
    "No command specified": {
      "value": "No command specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:76"
      ]
    },
    "No container stats retrieved": {
      "value": "No container stats retrieved",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:307"
      ]
    },
    "No critical errors found!": {
      "value": "No critical errors found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:125"
      ]
    },
    "No critical issues found. Test suite appears well-organized.": {
      "value": "No critical issues found. Test suite appears well-organized.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:542"
      ]
    },
    "No data provided for validation": {
      "value": "No data provided for validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:200"
      ]
    },
    "No deprecation warnings detected": {
      "value": "No deprecation warnings detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:151"
      ]
    },
    "No env vars set:": {
      "value": "No env vars set:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:31"
      ]
    },
    "No error details": {
      "value": "No error details",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:388"
      ]
    },
    "No failing tests found!": {
      "value": "No failing tests found!",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:296"
      ]
    },
    "No failure scan found. Run test_failure_scanner.py first.": {
      "value": "No failure scan found. Run test_failure_scanner.py first.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:352"
      ]
    },
    "No failures found!": {
      "value": "No failures found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:256"
      ]
    },
    "No failures found! All tests passing.": {
      "value": "No failures found! All tests passing.",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:229"
      ]
    },
    "No fake tests found": {
      "value": "No fake tests found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:250"
      ]
    },
    "No fallback mechanism for Auth Service 500 errors": {
      "value": "No fallback mechanism for Auth Service 500 errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:151"
      ]
    },
    "No fallback mechanism when Auth Service completely unresponsive": {
      "value": "No fallback mechanism when Auth Service completely unresponsive",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:114"
      ]
    },
    "No fixes available for": {
      "value": "No fixes available for",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:813"
      ]
    },
    "No functions with sleep calls found": {
      "value": "No functions with sleep calls found",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:111"
      ]
    },
    "No import changes were needed.": {
      "value": "No import changes were needed.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:215"
      ]
    },
    "No iterations completed yet": {
      "value": "No iterations completed yet",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:753"
      ]
    },
    "No large test files found for demonstration": {
      "value": "No large test files found for demonstration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:104"
      ]
    },
    "No memory limit set": {
      "value": "No memory limit set",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:51"
      ]
    },
    "No migrations": {
      "value": "No migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:157"
      ]
    },
    "No module named '([^']+)'": {
      "value": "No module named '([^']+)'",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:163"
      ]
    },
    "No module named 'test_module'": {
      "value": "No module named 'test_module'",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:24"
      ]
    },
    "No netra_backend imports found": {
      "value": "No netra_backend imports found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:55",
        "scripts/fix_test_import_order.py:43"
      ]
    },
    "No network partition handling - connection failed after": {
      "value": "No network partition handling - connection failed after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:353"
      ]
    },
    "No new failures found (streak:": {
      "value": "No new failures found (streak:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:176"
      ]
    },
    "No new failures in 2 consecutive runs. Stopping.": {
      "value": "No new failures in 2 consecutive runs. Stopping.",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:179"
      ]
    },
    "No optimization agent endpoints found for retry testing": {
      "value": "No optimization agent endpoints found for retry testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:229"
      ]
    },
    "No origins specified for testing": {
      "value": "No origins specified for testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:498"
      ]
    },
    "No priority failures found.": {
      "value": "No priority failures found.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:362"
      ]
    },
    "No real e2e tests found": {
      "value": "No real e2e tests found",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:81"
      ]
    },
    "No real e2e tests found.": {
      "value": "No real e2e tests found.",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:132"
      ]
    },
    "No refresh token available": {
      "value": "No refresh token available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:251",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:269"
      ]
    },
    "No response from WebSocket": {
      "value": "No response from WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:97"
      ]
    },
    "No response received (expected due to auth)": {
      "value": "No response received (expected due to auth)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:211"
      ]
    },
    "No results to display": {
      "value": "No results to display",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:365"
      ]
    },
    "No scan performed - report only mode": {
      "value": "No scan performed - report only mode",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:420"
      ]
    },
    "No setup_test_path import found": {
      "value": "No setup_test_path import found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:49"
      ]
    },
    "No specific files identified for fixing": {
      "value": "No specific files identified for fixing",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:125"
      ]
    },
    "No splitting suggestions needed!": {
      "value": "No splitting suggestions needed!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:139"
      ]
    },
    "No sync URL generated": {
      "value": "No sync URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:100"
      ]
    },
    "No tasks are running": {
      "value": "No tasks are running",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:40"
      ]
    },
    "No test file size violations found!": {
      "value": "No test file size violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:72"
      ]
    },
    "No test files changed": {
      "value": "No test files changed",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:240"
      ]
    },
    "No test files found for category '": {
      "value": "No test files found for category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:413"
      ]
    },
    "No test function violations found!": {
      "value": "No test function violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:91"
      ]
    },
    "No test history found for the specified criteria.": {
      "value": "No test history found for the specified criteria.",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:201"
      ]
    },
    "No test processes found running.": {
      "value": "No test processes found running.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:103"
      ]
    },
    "No test processes found.": {
      "value": "No test processes found.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:168"
      ]
    },
    "No test violations found!": {
      "value": "No test violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:975"
      ]
    },
    "No tests found": {
      "value": "No tests found",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:30"
      ]
    },
    "No tests found for default category '": {
      "value": "No tests found for default category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:115"
      ]
    },
    "No triage agent endpoint found": {
      "value": "No triage agent endpoint found",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:96"
      ]
    },
    "No triage result": {
      "value": "No triage result",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:166"
      ]
    },
    "No volumes defined (as expected)": {
      "value": "No volumes defined (as expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:111"
      ]
    },
    "Node.js processes after cleanup:": {
      "value": "Node.js processes after cleanup:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:98"
      ]
    },
    "Node.js processes after start:": {
      "value": "Node.js processes after start:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:83"
      ]
    },
    "Non-JSON response": {
      "value": "Non-JSON response",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:50"
      ]
    },
    "Non-critical messages buffered:": {
      "value": "Non-critical messages buffered:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:219"
      ]
    },
    "Non-standard": {
      "value": "Non-standard",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:107",
        "scripts/generate_test_audit.py:223",
        "scripts/generate_test_audit.py:224"
      ]
    },
    "Nonce replay attack should be blocked": {
      "value": "Nonce replay attack should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:82"
      ]
    },
    "None": {
      "value": "None",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:386",
        "scripts/test_secret_manager_builder_critical.py:543",
        "scripts/test_staging_auth_e2e.py:79",
        "scripts/test_staging_auth_e2e.py:80",
        "scripts/test_staging_auth_e2e.py:144",
        "scripts/test_staging_auth_e2e.py:179",
        "scripts/test_websocket_cors_comprehensive.py:57",
        "scripts/test_websocket_simple.py:24"
      ]
    },
    "None  # TODO: Use real service instead of AsyncMock": {
      "value": "None  # TODO: Use real service instead of AsyncMock",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:181"
      ]
    },
    "None  # TODO: Use real service instead of MagicMock": {
      "value": "None  # TODO: Use real service instead of MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:180"
      ]
    },
    "None  # TODO: Use real service instead of Mock": {
      "value": "None  # TODO: Use real service instead of Mock",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:179"
      ]
    },
    "None  # Use real component": {
      "value": "None  # Use real component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:322"
      ]
    },
    "Normal activity flagged as anomalous": {
      "value": "Normal activity flagged as anomalous",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:246"
      ]
    },
    "Normal deployment should not fail": {
      "value": "Normal deployment should not fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:181"
      ]
    },
    "Normalized async:": {
      "value": "Normalized async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:242"
      ]
    },
    "Normalized:": {
      "value": "Normalized:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:166",
        "scripts/test_database_url_builder_comprehensive.py:293",
        "scripts/test_staging_migrations.py:69"
      ]
    },
    "Not Set": {
      "value": "Not Set",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:84"
      ]
    },
    "Not a list": {
      "value": "Not a list",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:358",
        "scripts/test_data_validator_backup.py:385"
      ]
    },
    "Not in a git repository or git not available": {
      "value": "Not in a git repository or git not available",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:232"
      ]
    },
    "Not set": {
      "value": "Not set",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:38",
        "scripts/debug_supervisor_test.py:39",
        "scripts/run_critical_test.py:40",
        "scripts/run_critical_test.py:41",
        "scripts/run_critical_test.py:42",
        "scripts/run_critical_test.py:43",
        "scripts/test/test_clickhouse_staging_fix.py:151",
        "scripts/test/test_clickhouse_staging_fix.py:152",
        "scripts/test_clickhouse_staging.py:62",
        "scripts/test_clickhouse_staging.py:63"
      ]
    },
    "Not tested": {
      "value": "Not tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:358"
      ]
    },
    "Note:": {
      "value": "Note:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:108"
      ]
    },
    "Note: Different environments warn about different missing variables": {
      "value": "Note: Different environments warn about different missing variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:105"
      ]
    },
    "Note: Install 'rich' for better formatting: pip install rich": {
      "value": "Note: Install 'rich' for better formatting: pip install rich",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:28"
      ]
    },
    "Note: Make sure your Next.js development server is running on the target URL": {
      "value": "Note: Make sure your Next.js development server is running on the target URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:261"
      ]
    },
    "Note: Replace with actual staging URL from GCP deployment": {
      "value": "Note: Replace with actual staging URL from GCP deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:112"
      ]
    },
    "Note: WebSocket connections require authentication and cannot be fully tested without credentials": {
      "value": "Note: WebSocket connections require authentication and cannot be fully tested without credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:126"
      ]
    },
    "Number of blocks detected:": {
      "value": "Number of blocks detected:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:164"
      ]
    },
    "Number of database users:": {
      "value": "Number of database users:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:74"
      ]
    },
    "Number of iterations": {
      "value": "Number of iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:171"
      ]
    },
    "Number of parallel test runners (default: 5)": {
      "value": "Number of parallel test runners (default: 5)",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:239"
      ]
    },
    "Number of parallel workers (0=sequential, auto=auto, or number)": {
      "value": "Number of parallel workers (0=sequential, auto=auto, or number)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:492"
      ]
    },
    "OAUTH SIMULATION Configuration:": {
      "value": "OAUTH SIMULATION Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:269"
      ]
    },
    "OAUTH SIMULATION enabled:": {
      "value": "OAUTH SIMULATION enabled:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:273"
      ]
    },
    "OAUTH_CALLBACK": {
      "value": "OAUTH_CALLBACK",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:33",
        "auth_service/tests/factories/audit_factory.py:171"
      ]
    },
    "OAUTH_ERROR": {
      "value": "OAUTH_ERROR",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:34"
      ]
    },
    "OAUTH_GOOGLE_CLIENT_ID_ENV": {
      "value": "OAUTH_GOOGLE_CLIENT_ID_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:61",
        "scripts/test_oauth_local.py:61"
      ]
    },
    "OAUTH_GOOGLE_CLIENT_SECRET_ENV": {
      "value": "OAUTH_GOOGLE_CLIENT_SECRET_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:62",
        "scripts/test_oauth_local.py:62"
      ]
    },
    "OAuth Callback": {
      "value": "OAuth Callback",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "OAuth Configuration": {
      "value": "OAuth Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:184",
        "scripts/test_oauth_local.py:156"
      ]
    },
    "OAuth Configuration Missing Staging Regression Tests (Fixed)\n\nTests to replicate OAuth configuration issues found in GCP staging audit:\n- Missing GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET\n- OAuth authentication functionality broken in staging\n- Service initialization failing due to missing OAuth credentials\n\nBusiness Value: Prevents user authentication failures costing $75K+ MRR\nCritical for user login and Google OAuth integration.\n\nRoot Cause from Staging Audit:\n- GOOGLE_OAUTH_CLIENT_ID_STAGING and GOOGLE_OAUTH_CLIENT_SECRET_STAGING not configured\n- Auth service fails to initialize OAuth providers without proper credentials\n- Users cannot login via Google OAuth in staging environment\n\nThese tests will FAIL initially to confirm the issues exist, then PASS after fixes.\n\nFIXED VERSION: Bypasses database initialization to focus purely on OAuth configuration testing.": {
      "value": "OAuth Configuration Missing Staging Regression Tests (Fixed)\n\nTests to replicate OAuth configuration issues found in GCP staging audit:\n- Missing GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET\n- OAuth authentication functionality broken in staging\n- Service initialization failing due to missing OAuth credentials\n\nBusiness Value: Prevents user authentication failures costing $75K+ MRR\nCritical for user login and Google OAuth integration.\n\nRoot Cause from Staging Audit:\n- GOOGLE_OAUTH_CLIENT_ID_STAGING and GOOGLE_OAUTH_CLIENT_SECRET_STAGING not configured\n- Auth service fails to initialize OAuth providers without proper credentials\n- Users cannot login via Google OAuth in staging environment\n\nThese tests will FAIL initially to confirm the issues exist, then PASS after fixes.\n\nFIXED VERSION: Bypasses database initialization to focus purely on OAuth configuration testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:2"
      ]
    },
    "OAuth Configuration:": {
      "value": "OAuth Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:106"
      ]
    },
    "OAuth Login Endpoint": {
      "value": "OAuth Login Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:127"
      ]
    },
    "OAuth callback should return user info": {
      "value": "OAuth callback should return user info",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:431"
      ]
    },
    "OAuth config for": {
      "value": "OAuth config for",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:144"
      ]
    },
    "OAuth configuration should be valid:": {
      "value": "OAuth configuration should be valid:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:229"
      ]
    },
    "OAuth configuration should have no issues:": {
      "value": "OAuth configuration should have no issues:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:299"
      ]
    },
    "OAuth flow tests": {
      "value": "OAuth flow tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:107"
      ]
    },
    "OAuth is configured but requires real Google/GitHub account for testing": {
      "value": "OAuth is configured but requires real Google/GitHub account for testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:373"
      ]
    },
    "OAuth is not properly configured - use mock or API key authentication": {
      "value": "OAuth is not properly configured - use mock or API key authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:371"
      ]
    },
    "OAuth login URL should be generated": {
      "value": "OAuth login URL should be generated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:384"
      ]
    },
    "OAuth login URL should contain client_id": {
      "value": "OAuth login URL should contain client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:386"
      ]
    },
    "OAuth login URL should contain correct client_id": {
      "value": "OAuth login URL should contain correct client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:387"
      ]
    },
    "OAuth login URL should use Google OAuth": {
      "value": "OAuth login URL should use Google OAuth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:385"
      ]
    },
    "OAuth manager should be healthy:": {
      "value": "OAuth manager should be healthy:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:295"
      ]
    },
    "OAuth manager should report configured providers": {
      "value": "OAuth manager should report configured providers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:291"
      ]
    },
    "OAuth provider connectivity loss causing Auth Service to hang": {
      "value": "OAuth provider connectivity loss causing Auth Service to hang",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:420"
      ]
    },
    "OAuth provider connectivity loss not handled, got": {
      "value": "OAuth provider connectivity loss not handled, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:417"
      ]
    },
    "OAuth provider should be properly configured": {
      "value": "OAuth provider should be properly configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:225"
      ]
    },
    "OAuth provider should have correct client_id": {
      "value": "OAuth provider should have correct client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:221"
      ]
    },
    "OAuth provider should have correct client_secret": {
      "value": "OAuth provider should have correct client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:223"
      ]
    },
    "OAuth provider should not be configured without credentials": {
      "value": "OAuth provider should not be configured without credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:168"
      ]
    },
    "OAuth providers should be available": {
      "value": "OAuth providers should be available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:343"
      ]
    },
    "OAuth user info email should not be empty": {
      "value": "OAuth user info email should not be empty",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:433"
      ]
    },
    "OAuth user info should contain email": {
      "value": "OAuth user info should contain email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:432"
      ]
    },
    "OAuth...": {
      "value": "OAuth...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:256"
      ]
    },
    "OAuth2Session": {
      "value": "OAuth2Session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:137"
      ]
    },
    "OAuthTokenFactory": {
      "value": "OAuthTokenFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:18"
      ]
    },
    "OK": {
      "value": "OK",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:242",
        "scripts/simple_websocket_blocking_test.py:243",
        "scripts/test/test_docker_stability.py:87",
        "scripts/test/verify_test_ports.py:46",
        "scripts/test/verify_test_ports.py:50",
        "scripts/test/verify_test_ports.py:59",
        "scripts/test_blocking_analysis.py:369",
        "scripts/test_config_loading.py:88",
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "OK - Configured": {
      "value": "OK - Configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:97",
        "scripts/test_config_loading.py:98",
        "scripts/test_config_loading.py:107",
        "scripts/test_config_loading.py:108"
      ]
    },
    "OK: All": {
      "value": "OK: All",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:83",
        "auth_service/test_auth_direct.py:159"
      ]
    },
    "OK: All invalid tokens rejected": {
      "value": "OK: All invalid tokens rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:118"
      ]
    },
    "OK: Auth service refresh working correctly": {
      "value": "OK: Auth service refresh working correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:201"
      ]
    },
    "OK: Backend service is running": {
      "value": "OK: Backend service is running",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:32"
      ]
    },
    "OK: Blacklisted token rejected": {
      "value": "OK: Blacklisted token rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:128"
      ]
    },
    "OK: File modified": {
      "value": "OK: File modified",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:67"
      ]
    },
    "OK: Hot reload detected!": {
      "value": "OK: Hot reload detected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:80"
      ]
    },
    "OK: Old refresh token correctly rejected": {
      "value": "OK: Old refresh token correctly rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:209"
      ]
    },
    "OK: Refresh": {
      "value": "OK: Refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:75"
      ]
    },
    "OK: Test file created": {
      "value": "OK: Test file created",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:49"
      ]
    },
    "OK: Test file removed": {
      "value": "OK: Test file removed",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:94"
      ]
    },
    "OK: Valid token accepted": {
      "value": "OK: Valid token accepted",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:102"
      ]
    },
    "OK: setup_test_path() at line": {
      "value": "OK: setup_test_path() at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:58"
      ]
    },
    "OOM": {
      "value": "OOM",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:311"
      ]
    },
    "OPENAI_API_KEY": {
      "value": "OPENAI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:52",
        "scripts/run_agent_pipeline_test.py:52",
        "scripts/setup_test_environment.py:121",
        "scripts/setup_test_environment.py:246",
        "scripts/test_backend_ORIGINAL.py:94",
        "scripts/test_backend_ORIGINAL.py:94",
        "scripts/test_environment_validation_clean.py:141",
        "scripts/test_improved_environment_validation.py:141",
        "scripts/validate_llm_test_models.py:37"
      ]
    },
    "OPTIMIZED TEST EXECUTION RESULTS": {
      "value": "OPTIMIZED TEST EXECUTION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:325"
      ]
    },
    "OPTIONS": {
      "value": "OPTIONS",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:90",
        "scripts/staging_comprehensive_test.py:121",
        "scripts/staging_comprehensive_test.py:123",
        "scripts/test_cors_implementation.py:71",
        "scripts/test_cors_implementation.py:82",
        "scripts/test_cors_implementation.py:89",
        "scripts/test_cors_implementation.py:95",
        "scripts/test_cors_implementation.py:101",
        "scripts/test_cors_implementation.py:103"
      ]
    },
    "OVERALL:": {
      "value": "OVERALL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:325"
      ]
    },
    "OVERRIDE_TEST_ENV": {
      "value": "OVERRIDE_TEST_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:110"
      ]
    },
    "OVERVIEW:": {
      "value": "OVERVIEW:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:291"
      ]
    },
    "Only check files changed in git diff": {
      "value": "Only check files changed in git diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:261"
      ]
    },
    "Only generate configuration report": {
      "value": "Only generate configuration report",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:437"
      ]
    },
    "Only generate report, no fixes (SAFE, default)": {
      "value": "Only generate report, no fixes (SAFE, default)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:930"
      ]
    },
    "Only migrate priority files with known violations": {
      "value": "Only migrate priority files with known violations",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:324"
      ]
    },
    "Only one concurrent refresh should succeed": {
      "value": "Only one concurrent refresh should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:332"
      ]
    },
    "Only one concurrent refresh should succeed, got": {
      "value": "Only one concurrent refresh should succeed, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:206"
      ]
    },
    "Only process files with critical performance issues": {
      "value": "Only process files with critical performance issues",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:138"
      ]
    },
    "Only run tests matching given mark expression": {
      "value": "Only run tests matching given mark expression",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:487"
      ]
    },
    "Only run tests matching the given keyword expression": {
      "value": "Only run tests matching the given keyword expression",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:486"
      ]
    },
    "Only run tests matching the given pattern": {
      "value": "Only run tests matching the given pattern",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:391"
      ]
    },
    "Only test preflight requests": {
      "value": "Only test preflight requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:441"
      ]
    },
    "Open Cypress interactive runner": {
      "value": "Open Cypress interactive runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:397"
      ]
    },
    "OpenAI API key": {
      "value": "OpenAI API key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:121"
      ]
    },
    "Operation cancelled. Good choice!": {
      "value": "Operation cancelled. Good choice!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:958"
      ]
    },
    "Operation succeeded:": {
      "value": "Operation succeeded:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:159"
      ]
    },
    "Operation timeout": {
      "value": "Operation timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:178",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:179",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:180"
      ]
    },
    "Optimization agent endpoints available for retry testing": {
      "value": "Optimization agent endpoints available for retry testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:226"
      ]
    },
    "Optimization level": {
      "value": "Optimization level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:375"
      ]
    },
    "Optimization suggestions:": {
      "value": "Optimization suggestions:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:403"
      ]
    },
    "Optimization:": {
      "value": "Optimization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:425"
      ]
    },
    "Optimize": {
      "value": "Optimize",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:269"
      ]
    },
    "Optimize CPU-intensive operations": {
      "value": "Optimize CPU-intensive operations",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:388"
      ]
    },
    "Optimize database queries": {
      "value": "Optimize database queries",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:407"
      ]
    },
    "Optimize my GPT-4 costs by 30% while maintaining latency under 100ms": {
      "value": "Optimize my GPT-4 costs by 30% while maintaining latency under 100ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:22"
      ]
    },
    "Optimize slow operations": {
      "value": "Optimize slow operations",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:115",
        "scripts/test_failure_analyzer.py:241"
      ]
    },
    "Optimize slow tests - slowest takes": {
      "value": "Optimize slow tests - slowest takes",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:125",
        "scripts/test_dashboard.py:400"
      ]
    },
    "Optimize test suite performance": {
      "value": "Optimize test suite performance",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:342"
      ]
    },
    "Optimized Backend Test Runner - 100x Productivity Gains": {
      "value": "Optimized Backend Test Runner - 100x Productivity Gains",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:362"
      ]
    },
    "Optimized Backend Test Runner - 100x Productivity Gains\n\nUltra-high performance test execution with intelligent parallelization,\nresource monitoring, caching, and fail-fast mechanisms for maximum efficiency.\n\nBusiness Value Justification (BVJ):\n- Segment: All customer segments (development infrastructure)\n- Business Goal: Achieve 100x faster test cycles for rapid deployment\n- Value Impact: Enables continuous deployment with sub-minute test execution\n- Revenue Impact: Accelerates time-to-market by 90%, reduces CI/CD costs by 80%\n\nUsage:\n    python scripts/test_backend_optimized.py --category unit\n    python scripts/test_backend_optimized.py --optimize-aggressive\n    python scripts/test_backend_optimized.py --benchmark": {
      "value": "Optimized Backend Test Runner - 100x Productivity Gains\n\nUltra-high performance test execution with intelligent parallelization,\nresource monitoring, caching, and fail-fast mechanisms for maximum efficiency.\n\nBusiness Value Justification (BVJ):\n- Segment: All customer segments (development infrastructure)\n- Business Goal: Achieve 100x faster test cycles for rapid deployment\n- Value Impact: Enables continuous deployment with sub-minute test execution\n- Revenue Impact: Accelerates time-to-market by 90%, reduces CI/CD costs by 80%\n\nUsage:\n    python scripts/test_backend_optimized.py --category unit\n    python scripts/test_backend_optimized.py --optimize-aggressive\n    python scripts/test_backend_optimized.py --benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:2"
      ]
    },
    "Optimized execution failed:": {
      "value": "Optimized execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:156"
      ]
    },
    "Optimizing function": {
      "value": "Optimizing function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:445"
      ]
    },
    "Optional Enhancements:": {
      "value": "Optional Enhancements:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:116"
      ]
    },
    "Optional Missing:": {
      "value": "Optional Missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:53"
      ]
    },
    "Optional service failed": {
      "value": "Optional service failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:248"
      ]
    },
    "Options:": {
      "value": "Options:",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:77",
        "scripts/standardize_l3_test_names.py:300"
      ]
    },
    "Origin": {
      "value": "Origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:301",
        "scripts/debug_cors_test.py:15",
        "scripts/debug_cors_test.py:32",
        "scripts/staging_comprehensive_test.py:255",
        "scripts/test_and_fix_cors.py:22",
        "scripts/test_and_fix_cors.py:65",
        "scripts/test_auth_integration.py:108",
        "scripts/test_chat_errors.py:83",
        "scripts/test_cors.py:73",
        "scripts/test_cors.py:102"
      ]
    },
    "Origin Count:": {
      "value": "Origin Count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:461"
      ]
    },
    "Origin mismatch: expected": {
      "value": "Origin mismatch: expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:218"
      ]
    },
    "Origin to test (can be specified multiple times)": {
      "value": "Origin to test (can be specified multiple times)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:427"
      ]
    },
    "Origin:": {
      "value": "Origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:57"
      ]
    },
    "Original:": {
      "value": "Original:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:162",
        "scripts/test_staging_migrations.py:204"
      ]
    },
    "Origins by Type:": {
      "value": "Origins by Type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:465"
      ]
    },
    "Origins:": {
      "value": "Origins:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:503"
      ]
    },
    "Orphaned sessions found:": {
      "value": "Orphaned sessions found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:317"
      ]
    },
    "Our AI-powered news summarization platform needs to reduce LLM expenditure by 30% while keeping summarization coherence above acceptance thresholds": {
      "value": "Our AI-powered news summarization platform needs to reduce LLM expenditure by 30% while keeping summarization coherence above acceptance thresholds",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:25"
      ]
    },
    "Our chatbot uses a large LLM to provide helpful responses, but costs are rising fast with usage growth. How can we maintain response quality while reducing LLM invocation?": {
      "value": "Our chatbot uses a large LLM to provide helpful responses, but costs are rising fast with usage growth. How can we maintain response quality while reducing LLM invocation?",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:23"
      ]
    },
    "Out of memory error": {
      "value": "Out of memory error",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:312"
      ]
    },
    "Output GitHub Actions annotations": {
      "value": "Output GitHub Actions annotations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:110"
      ]
    },
    "Output configuration as JSON": {
      "value": "Output configuration as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:55"
      ]
    },
    "Output file for metrics JSON": {
      "value": "Output file for metrics JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:427"
      ]
    },
    "Output file for report": {
      "value": "Output file for report",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:345",
        "scripts/remove_test_stubs.py:360"
      ]
    },
    "Output file for test report (JSON)": {
      "value": "Output file for test report (JSON)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:403"
      ]
    },
    "Output file path": {
      "value": "Output file path",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:521",
        "scripts/test_dashboard.py:450"
      ]
    },
    "Output file path (default: print to console)": {
      "value": "Output file path (default: print to console)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:385"
      ]
    },
    "Output file path for the report": {
      "value": "Output file path for the report",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:776"
      ]
    },
    "Output format": {
      "value": "Output format",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:778",
        "scripts/compliance/fake_test_scanner.py:387",
        "scripts/compliance/test_size_validator.py:520"
      ]
    },
    "Output format (default: table)": {
      "value": "Output format (default: table)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:435"
      ]
    },
    "Output results as JSON": {
      "value": "Output results as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:210",
        "scripts/test_staging_startup.py:292"
      ]
    },
    "Output:": {
      "value": "Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:116"
      ]
    },
    "Overall Health:": {
      "value": "Overall Health:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:106"
      ]
    },
    "Overall Result:": {
      "value": "Overall Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:402",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:331"
      ]
    },
    "Overall Status:": {
      "value": "Overall Status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:123",
        "scripts/test_websocket_chat_standalone.py:123",
        "scripts/test_websocket_injection_fix_complete.py:644"
      ]
    },
    "Overall compliance rate:": {
      "value": "Overall compliance rate:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:161"
      ]
    },
    "Overall validation:": {
      "value": "Overall validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:319"
      ]
    },
    "Overall:": {
      "value": "Overall:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:187"
      ]
    },
    "PARALLEL TEST RESULTS": {
      "value": "PARALLEL TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:144"
      ]
    },
    "PASS": {
      "value": "PASS",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:118",
        "scripts/staging_comprehensive_test.py:120",
        "scripts/staging_comprehensive_test.py:122",
        "scripts/staging_comprehensive_test.py:175",
        "scripts/staging_comprehensive_test.py:228",
        "scripts/staging_comprehensive_test.py:283",
        "scripts/staging_comprehensive_test.py:318",
        "scripts/staging_comprehensive_test.py:373",
        "scripts/staging_comprehensive_test.py:399",
        "scripts/staging_comprehensive_test.py:408"
      ]
    },
    "PASS: .env.staging correctly removed": {
      "value": "PASS: .env.staging correctly removed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:23"
      ]
    },
    "PASS: Auth service correctly configured to skip .env loading in staging": {
      "value": "PASS: Auth service correctly configured to skip .env loading in staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:53"
      ]
    },
    "PASS: Backend app correctly configured to skip .env loading in staging": {
      "value": "PASS: Backend app correctly configured to skip .env loading in staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:37"
      ]
    },
    "PASS: Deployment script has all necessary configurations": {
      "value": "PASS: Deployment script has all necessary configurations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:86"
      ]
    },
    "PASSED": {
      "value": "PASSED",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:242",
        "auth_service/test_url_construction.py:230",
        "scripts/comprehensive_test_fixer.py:309",
        "scripts/comprehensive_test_fixer.py:327",
        "scripts/run_all_test_categories.py:35",
        "scripts/test_adaptive_workflow.py:259",
        "scripts/test_auth_database_sessions.py:369",
        "scripts/test_auth_database_sessions.py:387",
        "scripts/test_database_url_builder_comprehensive.py:320",
        "scripts/test_database_url_builder_comprehensive.py:337"
      ]
    },
    "PASSED (": {
      "value": "PASSED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:63"
      ]
    },
    "PASSED - All services use shared config": {
      "value": "PASSED - All services use shared config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:190"
      ]
    },
    "PASSED - Explicit origins set correctly": {
      "value": "PASSED - Explicit origins set correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:91"
      ]
    },
    "PASSED - Permissive as expected": {
      "value": "PASSED - Permissive as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:47"
      ]
    },
    "PASSED - Strict origins enforced": {
      "value": "PASSED - Strict origins enforced",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:137"
      ]
    },
    "PASSWORD": {
      "value": "PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:77",
        "scripts/test_config_loading.py:51"
      ]
    },
    "PASSWORD_CHANGE": {
      "value": "PASSWORD_CHANGE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:22",
        "auth_service/tests/factories/audit_factory.py:119"
      ]
    },
    "PASSWORD_RESET": {
      "value": "PASSWORD_RESET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:23"
      ]
    },
    "PATCH": {
      "value": "PATCH",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:108"
      ]
    },
    "PERFORMANCE BENCHMARK: Current vs Target": {
      "value": "PERFORMANCE BENCHMARK: Current vs Target",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:557"
      ]
    },
    "PERFORMANCE RESULTS (Target: <": {
      "value": "PERFORMANCE RESULTS (Target: <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:619"
      ]
    },
    "PERFORMANCE SUMMARY": {
      "value": "PERFORMANCE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:328"
      ]
    },
    "PERMISSION_GRANTED": {
      "value": "PERMISSION_GRANTED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:31",
        "auth_service/tests/factories/audit_factory.py:208"
      ]
    },
    "PERMISSION_REVOKED": {
      "value": "PERMISSION_REVOKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:32"
      ]
    },
    "PHASE 1: Fixing syntax errors...": {
      "value": "PHASE 1: Fixing syntax errors...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:220"
      ]
    },
    "PHASE 1: Service Orchestration Test": {
      "value": "PHASE 1: Service Orchestration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:60"
      ]
    },
    "PHASE 2: Fixing size violations...": {
      "value": "PHASE 2: Fixing size violations...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:248"
      ]
    },
    "PHASE 2: Service Connectivity Test": {
      "value": "PHASE 2: Service Connectivity Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:71"
      ]
    },
    "PHASE 3: Final validation...": {
      "value": "PHASE 3: Final validation...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:271"
      ]
    },
    "PIPELINE EXECUTION RESULTS": {
      "value": "PIPELINE EXECUTION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:374"
      ]
    },
    "PORT": {
      "value": "PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:43",
        "auth_service/tests/test_auth_port_configuration.py:84",
        "auth_service/tests/test_auth_port_configuration.py:102",
        "auth_service/tests/test_auth_port_configuration.py:125",
        "auth_service/tests/test_auth_port_configuration.py:132",
        "auth_service/tests/test_auth_port_configuration.py:154",
        "auth_service/tests/test_auth_port_configuration.py:167",
        "auth_service/tests/test_auth_port_configuration.py:190",
        "auth_service/tests/test_auth_port_configuration.py:222",
        "auth_service/tests/test_auth_port_configuration.py:272"
      ]
    },
    "PORT (": {
      "value": "PORT (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:66"
      ]
    },
    "POST": {
      "value": "POST",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:79",
        "scripts/test_agent_recovery_simple.py:83",
        "scripts/test_auth_integration.py:109",
        "scripts/test_cors.py:69",
        "scripts/test_cors.py:108",
        "scripts/test_staging_cors.py:21",
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "POSTGRES_": {
      "value": "POSTGRES_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "POSTGRES_DB": {
      "value": "POSTGRES_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:36",
        "auth_service/test_staging_db_connection.py:41",
        "auth_service/test_staging_db_connection.py:126",
        "auth_service/test_staging_db_connection.py:126",
        "auth_service/test_url_construction.py:37",
        "auth_service/test_url_construction.py:66",
        "auth_service/test_url_construction.py:66",
        "auth_service/tests/conftest.py:69",
        "auth_service/tests/integration/test_database_connection.py:75",
        "auth_service/tests/integration/test_database_connection.py:152"
      ]
    },
    "POSTGRES_HOST": {
      "value": "POSTGRES_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:34",
        "auth_service/test_staging_db_connection.py:39",
        "auth_service/test_staging_db_connection.py:124",
        "auth_service/test_staging_db_connection.py:124",
        "auth_service/test_staging_db_connection.py:232",
        "auth_service/test_staging_db_connection.py:241",
        "auth_service/test_url_construction.py:35",
        "auth_service/test_url_construction.py:64",
        "auth_service/test_url_construction.py:64",
        "auth_service/tests/conftest.py:65"
      ]
    },
    "POSTGRES_PASSWORD": {
      "value": "POSTGRES_PASSWORD",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:38",
        "auth_service/test_staging_db_connection.py:43",
        "auth_service/test_staging_db_connection.py:128",
        "auth_service/test_staging_db_connection.py:128",
        "auth_service/test_staging_db_connection.py:131",
        "auth_service/test_url_construction.py:39",
        "auth_service/test_url_construction.py:68",
        "auth_service/test_url_construction.py:68",
        "auth_service/test_url_construction.py:174",
        "auth_service/tests/conftest.py:68"
      ]
    },
    "POSTGRES_PASSWORD=postgres-password-staging": {
      "value": "POSTGRES_PASSWORD=postgres-password-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:72"
      ]
    },
    "POSTGRES_PORT": {
      "value": "POSTGRES_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:35",
        "auth_service/test_staging_db_connection.py:40",
        "auth_service/test_staging_db_connection.py:125",
        "auth_service/test_staging_db_connection.py:125",
        "auth_service/test_url_construction.py:36",
        "auth_service/test_url_construction.py:65",
        "auth_service/test_url_construction.py:65",
        "auth_service/tests/conftest.py:66",
        "auth_service/tests/integration/test_database_connection.py:74",
        "auth_service/tests/integration/test_database_connection.py:153"
      ]
    },
    "POSTGRES_USER": {
      "value": "POSTGRES_USER",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:37",
        "auth_service/test_staging_db_connection.py:42",
        "auth_service/test_staging_db_connection.py:127",
        "auth_service/test_staging_db_connection.py:127",
        "auth_service/test_url_construction.py:38",
        "auth_service/test_url_construction.py:67",
        "auth_service/test_url_construction.py:67",
        "auth_service/test_url_construction.py:173",
        "auth_service/tests/conftest.py:67",
        "auth_service/tests/integration/test_database_connection.py:76"
      ]
    },
    "PREFLIGHT REQUEST:": {
      "value": "PREFLIGHT REQUEST:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:71"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix Jest mock configurations in __tests__ files\n2. Update setupTests.js if needed\n3. Fix module mocking issues\n4. Resolve mock implementation problems\n5. Update test utilities and helpers\n\nApply only the most critical mock setup fixes. Be surgical and focused.": {
      "value": "PRIORITY ACTIONS:\n1. Fix Jest mock configurations in __tests__ files\n2. Update setupTests.js if needed\n3. Fix module mocking issues\n4. Resolve mock implementation problems\n5. Update test utilities and helpers\n\nApply only the most critical mock setup fixes. Be surgical and focused.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:309"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix async/await usage in tests\n2. Update waitFor and findBy utilities\n3. Fix timing-related test flakiness\n4. Update async component testing\n5. Resolve promise handling issues\n\nApply only critical async/timing fixes. Maintain test stability.": {
      "value": "PRIORITY ACTIONS:\n1. Fix async/await usage in tests\n2. Update waitFor and findBy utilities\n3. Fix timing-related test flakiness\n4. Update async component testing\n5. Resolve promise handling issues\n\nApply only critical async/timing fixes. Maintain test stability.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:428"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix component prop passing\n2. Update default prop values\n3. Fix data structure mismatches\n4. Update component interfaces\n5. Fix simple rendering issues\n\nApply only straightforward prop and data fixes. Avoid architectural changes.": {
      "value": "PRIORITY ACTIONS:\n1. Fix component prop passing\n2. Update default prop values\n3. Fix data structure mismatches\n4. Update component interfaces\n5. Fix simple rendering issues\n\nApply only straightforward prop and data fixes. Avoid architectural changes.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:343"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix form validation logic\n2. Update edge case handling\n3. Fix validation error messages\n4. Update validation test utilities\n5. Resolve validation state issues\n\nApply only essential validation fixes. Keep business logic intact.": {
      "value": "PRIORITY ACTIONS:\n1. Fix form validation logic\n2. Update edge case handling\n3. Fix validation error messages\n4. Update validation test utilities\n5. Resolve validation state issues\n\nApply only essential validation fixes. Keep business logic intact.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:411"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix import paths in test files\n2. Update export statements\n3. Fix module resolution issues\n4. Update import statements for utilities\n5. Resolve dependency import problems\n\nApply only simple import/export fixes. Avoid major refactoring.": {
      "value": "PRIORITY ACTIONS:\n1. Fix import paths in test files\n2. Update export statements\n3. Fix module resolution issues\n4. Update import statements for utilities\n5. Resolve dependency import problems\n\nApply only simple import/export fixes. Avoid major refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:360"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix keyboard event handlers\n2. Fix click event problems\n3. Update event mock implementations\n4. Fix user interaction test utilities\n5. Resolve async event handling\n\nApply only essential event handling fixes. Keep changes minimal.": {
      "value": "PRIORITY ACTIONS:\n1. Fix keyboard event handlers\n2. Fix click event problems\n3. Update event mock implementations\n4. Fix user interaction test utilities\n5. Resolve async event handling\n\nApply only essential event handling fixes. Keep changes minimal.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:326"
      ]
    },
    "PRIORITY ACTIONS:\n1. Fix package.json issues\n2. Update dependency versions\n3. Resolve peer dependency warnings\n4. Fix module compatibility issues\n5. Update lockfile if needed\n\nApply only critical dependency fixes. Avoid major version updates.": {
      "value": "PRIORITY ACTIONS:\n1. Fix package.json issues\n2. Update dependency versions\n3. Resolve peer dependency warnings\n4. Fix module compatibility issues\n5. Update lockfile if needed\n\nApply only critical dependency fixes. Avoid major version updates.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:394"
      ]
    },
    "PRIORITY ACTIONS:\n1. Update Jest configuration\n2. Fix test environment variables\n3. Update setupTests configuration\n4. Fix global test utilities\n5. Resolve test framework issues\n\nApply only essential environment configuration fixes.": {
      "value": "PRIORITY ACTIONS:\n1. Update Jest configuration\n2. Fix test environment variables\n3. Update setupTests configuration\n4. Fix global test utilities\n5. Resolve test framework issues\n\nApply only essential environment configuration fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:377"
      ]
    },
    "PRIORITY FAILURES (Critical/High)": {
      "value": "PRIORITY FAILURES (Critical/High)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:236"
      ]
    },
    "PR_NUMBER": {
      "value": "PR_NUMBER",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:36"
      ]
    },
    "PUT": {
      "value": "PUT",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:108"
      ]
    },
    "PYTEST MARKER ADDITION TOOL": {
      "value": "PYTEST MARKER ADDITION TOOL",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:169"
      ]
    },
    "PYTEST_CURRENT_TEST": {
      "value": "PYTEST_CURRENT_TEST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:52"
      ]
    },
    "Parallel Efficiency:": {
      "value": "Parallel Efficiency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:352"
      ]
    },
    "Parallel:": {
      "value": "Parallel:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:369"
      ]
    },
    "Partial Data": {
      "value": "Partial Data",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:323",
        "scripts/test_adaptive_workflow_local.py:96"
      ]
    },
    "Partial Data Scenario": {
      "value": "Partial Data Scenario",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:168"
      ]
    },
    "Partial Results": {
      "value": "Partial Results",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:131",
        "scripts/test_websocket_chat_standalone.py:131"
      ]
    },
    "Partial data...": {
      "value": "Partial data...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:211",
        "scripts/test_websocket_chat_standalone.py:207"
      ]
    },
    "Partially Configured": {
      "value": "Partially Configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:161"
      ]
    },
    "Pass Rate:": {
      "value": "Pass Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:291",
        "scripts/test_websocket_dev_mode.py:298"
      ]
    },
    "Passed": {
      "value": "Passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:361"
      ]
    },
    "Passed:": {
      "value": "Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:100",
        "scripts/run_all_test_categories.py:139",
        "scripts/simple_test_fix_loop.py:93",
        "scripts/staging_comprehensive_test.py:460",
        "scripts/test_auth_database_sessions.py:398",
        "scripts/test_clickhouse_startup_fix.py:374",
        "scripts/test_coordination_fixes.py:380",
        "scripts/test_database_url_builder_comprehensive.py:348",
        "scripts/test_example_message_flow.py:321",
        "scripts/test_modern_websocket_migration.py:202"
      ]
    },
    "Password Mismatch": {
      "value": "Password Mismatch",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:96"
      ]
    },
    "Password cannot be empty": {
      "value": "Password cannot be empty",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:112"
      ]
    },
    "Password length:": {
      "value": "Password length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:76"
      ]
    },
    "Password must": {
      "value": "Password must",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:182"
      ]
    },
    "Password must be at least": {
      "value": "Password must be at least",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:285"
      ]
    },
    "Password must contain at least one digit": {
      "value": "Password must contain at least one digit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:84"
      ]
    },
    "Password must contain at least one lowercase letter": {
      "value": "Password must contain at least one lowercase letter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:81"
      ]
    },
    "Password must contain at least one special character": {
      "value": "Password must contain at least one special character",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:87"
      ]
    },
    "Password must contain at least one uppercase letter": {
      "value": "Password must contain at least one uppercase letter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:78"
      ]
    },
    "Password too short: minimum": {
      "value": "Password too short: minimum",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:75"
      ]
    },
    "Password123!": {
      "value": "Password123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:94"
      ]
    },
    "Password:": {
      "value": "Password:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:110",
        "scripts/test_adaptive_workflow.py:121",
        "scripts/test_staging_db_direct.py:48"
      ]
    },
    "Passwords don't match": {
      "value": "Passwords don't match",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:173"
      ]
    },
    "Path to scan (default: current directory)": {
      "value": "Path to scan (default: current directory)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:221"
      ]
    },
    "Pattern check results:": {
      "value": "Pattern check results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:118"
      ]
    },
    "Perform analysis without making changes": {
      "value": "Perform analysis without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:719"
      ]
    },
    "Perform concurrent token validation.": {
      "value": "Perform concurrent token validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:228"
      ]
    },
    "Perform dry run without making changes (SAFE, default)": {
      "value": "Perform dry run without making changes (SAFE, default)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:920"
      ]
    },
    "Perform ultra-thinking deep analysis": {
      "value": "Perform ultra-thinking deep analysis",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:72"
      ]
    },
    "Performance": {
      "value": "Performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:124"
      ]
    },
    "Performance Grade:": {
      "value": "Performance Grade:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:331"
      ]
    },
    "Performance Metrics:": {
      "value": "Performance Metrics:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:307"
      ]
    },
    "Performance Optimization": {
      "value": "Performance Optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:32"
      ]
    },
    "Performance Simulator\n\nThis module simulates performance patterns including cascading failures and bottlenecks.": {
      "value": "Performance Simulator\n\nThis module simulates performance patterns including cascading failures and bottlenecks.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:1"
      ]
    },
    "Performance analysis completed": {
      "value": "Performance analysis completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:319"
      ]
    },
    "Performance and SLA validation tests": {
      "value": "Performance and SLA validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:99"
      ]
    },
    "Performance benchmark tests": {
      "value": "Performance benchmark tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:103"
      ]
    },
    "Performance improvement needed:": {
      "value": "Performance improvement needed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:642"
      ]
    },
    "Performance issues:": {
      "value": "Performance issues:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:401",
        "scripts/test_secret_manager_builder_critical.py:519"
      ]
    },
    "Performance test failed:": {
      "value": "Performance test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:243"
      ]
    },
    "Performance test passed": {
      "value": "Performance test passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:235"
      ]
    },
    "PerformanceSimulator": {
      "value": "PerformanceSimulator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:87"
      ]
    },
    "Periodically check service health.": {
      "value": "Periodically check service health.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:188"
      ]
    },
    "Permission Test Data Factory\nCreates test permission data for role-based access control testing.\nSupports various permission patterns and user permission assignments.": {
      "value": "Permission Test Data Factory\nCreates test permission data for role-based access control testing.\nSupports various permission patterns and user permission assignments.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:1"
      ]
    },
    "PermissionFactory": {
      "value": "PermissionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:19"
      ]
    },
    "PermissionRequest schema does not default to staging": {
      "value": "PermissionRequest schema does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:122"
      ]
    },
    "Permissions must be a list": {
      "value": "Permissions must be a list",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:211"
      ]
    },
    "Pipeline Test User": {
      "value": "Pipeline Test User",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:26"
      ]
    },
    "Pipeline completed:": {
      "value": "Pipeline completed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:377"
      ]
    },
    "Pipeline completion events missing": {
      "value": "Pipeline completion events missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:413"
      ]
    },
    "Pipeline did not complete": {
      "value": "Pipeline did not complete",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:408"
      ]
    },
    "Pipeline execution completed in": {
      "value": "Pipeline execution completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:367"
      ]
    },
    "Pipeline start events missing": {
      "value": "Pipeline start events missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:412"
      ]
    },
    "Pipeline took too long:": {
      "value": "Pipeline took too long:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:414"
      ]
    },
    "Placeholder count:": {
      "value": "Placeholder count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:72"
      ]
    },
    "Placeholder detected": {
      "value": "Placeholder detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:473"
      ]
    },
    "Placeholder detected in": {
      "value": "Placeholder detected in",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:438"
      ]
    },
    "Placeholder email detected!": {
      "value": "Placeholder email detected!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:273"
      ]
    },
    "Platform stability and performance": {
      "value": "Platform stability and performance",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:405"
      ]
    },
    "Please check test configuration.": {
      "value": "Please check test configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:359"
      ]
    },
    "Please ensure pytest and loguru are installed": {
      "value": "Please ensure pytest and loguru are installed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:33"
      ]
    },
    "Please install Docker and ensure it's running.": {
      "value": "Please install Docker and ensure it's running.",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:28"
      ]
    },
    "Please install: pip install websockets aiohttp": {
      "value": "Please install: pip install websockets aiohttp",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:368"
      ]
    },
    "Please provide the following data for optimization analysis:\n1. Current LLM model details\n2. Request volume metrics\n3. Latency measurements\n4. Cost breakdown\n5. Quality metrics": {
      "value": "Please provide the following data for optimization analysis:\n1. Current LLM model details\n2. Request volume metrics\n3. Latency measurements\n4. Cost breakdown\n5. Quality metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:79"
      ]
    },
    "Please review failures before deploying.": {
      "value": "Please review failures before deploying.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:362"
      ]
    },
    "Please review the failed tests and fix the issues": {
      "value": "Please review the failed tests and fix the issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:424"
      ]
    },
    "Please review violations manually and implement proper solutions.": {
      "value": "Please review violations manually and implement proper solutions.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:388"
      ]
    },
    "Please start PostgreSQL with:": {
      "value": "Please start PostgreSQL with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:159"
      ]
    },
    "Please update your scripts and CI/CD to use:": {
      "value": "Please update your scripts and CI/CD to use:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:23",
        "scripts/test_frontend.py:23"
      ]
    },
    "Pong response:": {
      "value": "Pong response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:72"
      ]
    },
    "Pool size:": {
      "value": "Pool size:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:323"
      ]
    },
    "Pool size: 5, Max overflow: 10": {
      "value": "Pool size: 5, Max overflow: 10",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:319"
      ]
    },
    "Port": {
      "value": "Port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:253",
        "scripts/test_windows_process_cleanup.py:156"
      ]
    },
    "Port Cleanup Test": {
      "value": "Port Cleanup Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:132"
      ]
    },
    "Port allocation test failed:": {
      "value": "Port allocation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:182"
      ]
    },
    "Port allocation working: service1=": {
      "value": "Port allocation working: service1=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:173"
      ]
    },
    "Port cleanup:": {
      "value": "Port cleanup:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:184"
      ]
    },
    "Port configuration inconsistency detected! PORT=": {
      "value": "Port configuration inconsistency detected! PORT=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:138"
      ]
    },
    "Port configuration mismatch detected:\n  Binding port:": {
      "value": "Port configuration mismatch detected:\n  Binding port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:419"
      ]
    },
    "Port connectivity failed for": {
      "value": "Port connectivity failed for",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:154"
      ]
    },
    "Port is already in use by another process": {
      "value": "Port is already in use by another process",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:45"
      ]
    },
    "Port mismatch detected! Auth service binds to port": {
      "value": "Port mismatch detected! Auth service binds to port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:59"
      ]
    },
    "Port:": {
      "value": "Port:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:118",
        "scripts/test_auth_database_sessions.py:234",
        "scripts/test_ssl_certificates_staging.py:40",
        "scripts/test_ssl_certificates_staging.py:61",
        "scripts/test_ssl_certificates_staging.py:216",
        "scripts/test_staging_db_direct.py:45",
        "scripts/test_staging_migrations.py:47"
      ]
    },
    "Possible issues:": {
      "value": "Possible issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:93"
      ]
    },
    "Post-deployment:": {
      "value": "Post-deployment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:221"
      ]
    },
    "PostgreSQL": {
      "value": "PostgreSQL",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:58",
        "scripts/setup_test_environment.py:65",
        "scripts/test/test_docker_stability.py:79",
        "scripts/test/verify_test_ports.py:26"
      ]
    },
    "PostgreSQL (default)": {
      "value": "PostgreSQL (default)",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:36"
      ]
    },
    "PostgreSQL Async Configuration Test": {
      "value": "PostgreSQL Async Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:126"
      ]
    },
    "PostgreSQL connection string": {
      "value": "PostgreSQL connection string",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:94"
      ]
    },
    "PostgreSQL error:": {
      "value": "PostgreSQL error:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:28"
      ]
    },
    "PostgreSQL is accessible": {
      "value": "PostgreSQL is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:26"
      ]
    },
    "PostgreSQL is ready": {
      "value": "PostgreSQL is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:68"
      ]
    },
    "PostgreSQL not ready after": {
      "value": "PostgreSQL not ready after",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:72"
      ]
    },
    "PostgreSQL test data seeding completed": {
      "value": "PostgreSQL test data seeding completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:234"
      ]
    },
    "PostgreSQL version:": {
      "value": "PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:70",
        "auth_service/test_staging_db_connection.py:208"
      ]
    },
    "PostgreSQL:": {
      "value": "PostgreSQL:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:90"
      ]
    },
    "PostgreSQL: user=": {
      "value": "PostgreSQL: user=",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:66"
      ]
    },
    "Potential circular dependencies detected": {
      "value": "Potential circular dependencies detected",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:621"
      ]
    },
    "Potentially flaky tests:": {
      "value": "Potentially flaky tests:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:402"
      ]
    },
    "Pre-deployment error": {
      "value": "Pre-deployment error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:114"
      ]
    },
    "Pre-deployment:": {
      "value": "Pre-deployment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:220"
      ]
    },
    "Precisely monitor event loop responsiveness.": {
      "value": "Precisely monitor event loop responsiveness.",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:146"
      ]
    },
    "Preferred splitting strategy": {
      "value": "Preferred splitting strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:680"
      ]
    },
    "Preflight:": {
      "value": "Preflight:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:517"
      ]
    },
    "Presence Detection System Improvements:": {
      "value": "Presence Detection System Improvements:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:84"
      ]
    },
    "Press Enter to use default test account or enter your credentials": {
      "value": "Press Enter to use default test account or enter your credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:99"
      ]
    },
    "Priority failures:": {
      "value": "Priority failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:227"
      ]
    },
    "Priority file not found:": {
      "value": "Priority file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:265"
      ]
    },
    "Priority:": {
      "value": "Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:158"
      ]
    },
    "Privilege escalation not detected": {
      "value": "Privilege escalation not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:268"
      ]
    },
    "Problematic files found in excluded directories:": {
      "value": "Problematic files found in excluded directories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:38"
      ]
    },
    "Process A: Continuous E2E Agent Test Runner with Fail-Fast\nContinuously runs e2e agent real LLM tests with fail-fast settings.\nTracks failures and spawns Process B agents for analysis and recommendations.": {
      "value": "Process A: Continuous E2E Agent Test Runner with Fail-Fast\nContinuously runs e2e agent real LLM tests with fail-fast settings.\nTracks failures and spawns Process B agents for analysis and recommendations.",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:2"
      ]
    },
    "Process B agent for": {
      "value": "Process B agent for",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:175"
      ]
    },
    "Process B tasks created:": {
      "value": "Process B tasks created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:251"
      ]
    },
    "Process a specific file": {
      "value": "Process a specific file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:723"
      ]
    },
    "Process integration tests first (default: True)": {
      "value": "Process integration tests first (default: True)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:725"
      ]
    },
    "Process request generically": {
      "value": "Process request generically",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:233"
      ]
    },
    "Process this extremely complex request": {
      "value": "Process this extremely complex request",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:68"
      ]
    },
    "Processed": {
      "value": "Processed",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:63"
      ]
    },
    "Processed:": {
      "value": "Processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:190",
        "scripts/fix_test_batch.py:381"
      ]
    },
    "Processing": {
      "value": "Processing",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:182",
        "scripts/apply_fast_test_decorators.py:169",
        "scripts/auto_fix_test_sizes.py:643",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/continuous_e2e_test_runner.py:352",
        "scripts/standardize_l3_test_names.py:266"
      ]
    },
    "Processing Batch": {
      "value": "Processing Batch",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:240"
      ]
    },
    "Processing complete!": {
      "value": "Processing complete!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:206"
      ]
    },
    "Processing first": {
      "value": "Processing first",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:261"
      ]
    },
    "Processing specific file:": {
      "value": "Processing specific file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:686"
      ]
    },
    "Processing the user request step by step": {
      "value": "Processing the user request step by step",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:84"
      ]
    },
    "Processing user request and analyzing requirements...": {
      "value": "Processing user request and analyzing requirements...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:142"
      ]
    },
    "Processing user request:": {
      "value": "Processing user request:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:152"
      ]
    },
    "Processing your message...": {
      "value": "Processing your message...",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:89",
        "scripts/test_websocket_direct.py:150"
      ]
    },
    "Processing...": {
      "value": "Processing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:208",
        "scripts/test_websocket_chat_standalone.py:204"
      ]
    },
    "Processing:": {
      "value": "Processing:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:261",
        "scripts/migrate_test_ids.py:129",
        "scripts/standardize_l3_test_names.py:160"
      ]
    },
    "Production": {
      "value": "Production",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:203",
        "scripts/test_secret_manager_builder_critical.py:178"
      ]
    },
    "Production CORS:": {
      "value": "Production CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:137"
      ]
    },
    "Production Environment": {
      "value": "Production Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:151"
      ]
    },
    "Production auth service using development port": {
      "value": "Production auth service using development port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:381"
      ]
    },
    "Production mode:": {
      "value": "Production mode:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:90"
      ]
    },
    "Productivity Gain:": {
      "value": "Productivity Gain:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "Progress file path (default: frontend_test_progress.json)": {
      "value": "Progress file path (default: frontend_test_progress.json)",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:927"
      ]
    },
    "Progress:": {
      "value": "Progress:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:255"
      ]
    },
    "Project ID:": {
      "value": "Project ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:89"
      ]
    },
    "Project root directory": {
      "value": "Project root directory",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:775",
        "scripts/ci/check_test_stubs.py:112",
        "scripts/remove_test_stubs.py:361",
        "scripts/test_dashboard.py:429",
        "scripts/test_execution_tracker.py:763"
      ]
    },
    "Project root:": {
      "value": "Project root:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:71",
        "scripts/test_websocket_injection_fix_complete.py:572"
      ]
    },
    "Project-Only Real Test Requirements Validator\n\nValidates only project test files against SPEC/testing.xml real test requirements.\nExcludes virtual environments and external libraries.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns in our code\n- Strategic Impact: Ensures test reliability and system integrity": {
      "value": "Project-Only Real Test Requirements Validator\n\nValidates only project test files against SPEC/testing.xml real test requirements.\nExcludes virtual environments and external libraries.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns in our code\n- Strategic Impact: Ensures test reliability and system integrity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:1"
      ]
    },
    "Promise": {
      "value": "Promise",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:745"
      ]
    },
    "Properties:": {
      "value": "Properties:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:37"
      ]
    },
    "Property ID:": {
      "value": "Property ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:59"
      ]
    },
    "Property Name:": {
      "value": "Property Name:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:80"
      ]
    },
    "Property Path:": {
      "value": "Property Path:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:81"
      ]
    },
    "Property:": {
      "value": "Property:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:58"
      ]
    },
    "Proposed new files:": {
      "value": "Proposed new files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:98"
      ]
    },
    "Protected endpoint accessible without authentication": {
      "value": "Protected endpoint accessible without authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:67"
      ]
    },
    "Protects": {
      "value": "Protects",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:490"
      ]
    },
    "Protocol": {
      "value": "Protocol",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211",
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "PyTest Resource Monitor": {
      "value": "PyTest Resource Monitor",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:369"
      ]
    },
    "PyTest Resource Monitor\nAdvanced monitoring and auto-adjustment for Docker containers during pytest execution.\nPrevents OOM kills and container restarts during test collection and execution.": {
      "value": "PyTest Resource Monitor\nAdvanced monitoring and auto-adjustment for Docker containers during pytest execution.\nPrevents OOM kills and container restarts during test collection and execution.",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:2"
      ]
    },
    "PyTest resource monitor stopped": {
      "value": "PyTest resource monitor stopped",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:359"
      ]
    },
    "Pytest fixture for test repository factory with mock database.": {
      "value": "Pytest fixture for test repository factory with mock database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:116"
      ]
    },
    "Pytest fixture for test repository factory with real database.": {
      "value": "Pytest fixture for test repository factory with real database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:125"
      ]
    },
    "Pytest plugins to fix I/O operation on closed file errors.": {
      "value": "Pytest plugins to fix I/O operation on closed file errors.",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:1"
      ]
    },
    "Python files to process": {
      "value": "Python files to process",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:196"
      ]
    },
    "Python path:": {
      "value": "Python path:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:27",
        "scripts/run_agent_pipeline_test.py:89"
      ]
    },
    "QUALITY METRICS:": {
      "value": "QUALITY METRICS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:745"
      ]
    },
    "Quick Start Examples:": {
      "value": "Quick Start Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:314"
      ]
    },
    "Quick Test": {
      "value": "Quick Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:406"
      ]
    },
    "Quick frontend test runner that handles no-tests case properly": {
      "value": "Quick frontend test runner that handles no-tests case properly",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:2"
      ]
    },
    "Quick health check of the orchestration system.": {
      "value": "Quick health check of the orchestration system.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:180"
      ]
    },
    "Quick script to run tests against the actual staging environment.\n\nUsage:\n    python scripts/test_staging.py           # Run all staging tests\n    python scripts/test_staging.py --quick   # Run quick health checks only\n    python scripts/test_staging.py --full    # Run comprehensive staging tests": {
      "value": "Quick script to run tests against the actual staging environment.\n\nUsage:\n    python scripts/test_staging.py           # Run all staging tests\n    python scripts/test_staging.py --quick   # Run quick health checks only\n    python scripts/test_staging.py --full    # Run comprehensive staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:3"
      ]
    },
    "Quick script to verify that test scanning is excluding site-packages and virtual environments": {
      "value": "Quick script to verify that test scanning is excluding site-packages and virtual environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:2"
      ]
    },
    "Quick smoke tests for basic functionality": {
      "value": "Quick smoke tests for basic functionality",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:79"
      ]
    },
    "Quick staging environment test": {
      "value": "Quick staging environment test",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:2"
      ]
    },
    "Quick test failure scanner - identifies failing tests efficiently": {
      "value": "Quick test failure scanner - identifies failing tests efficiently",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:2"
      ]
    },
    "Quick test runner for the JWT critical tests\n\nThis script demonstrates that the new test file uses real services\nand doesn't rely on mocks or simulations.": {
      "value": "Quick test runner for the JWT critical tests\n\nThis script demonstrates that the new test file uses real services\nand doesn't rely on mocks or simulations.",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:2"
      ]
    },
    "Quick test to verify supervisor WebSocket integration.": {
      "value": "Quick test to verify supervisor WebSocket integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:2"
      ]
    },
    "Quick tests FAILED - staging WebSocket has issues": {
      "value": "Quick tests FAILED - staging WebSocket has issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:390"
      ]
    },
    "Quick tests PASSED - staging WebSocket is functional": {
      "value": "Quick tests PASSED - staging WebSocket is functional",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:387"
      ]
    },
    "Quick tests failed with exception:": {
      "value": "Quick tests failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:394"
      ]
    },
    "Quick validation test": {
      "value": "Quick validation test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:403"
      ]
    },
    "Quick validation tests (<30s)": {
      "value": "Quick validation tests (<30s)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:24"
      ]
    },
    "READY": {
      "value": "READY",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:145",
        "scripts/test_environment_validation_clean.py:113",
        "scripts/test_improved_environment_validation.py:114"
      ]
    },
    "REAL OAuth endpoint configurations for testing.\n    \n    ZERO MOCKS: Uses sandbox/staging OAuth endpoints.": {
      "value": "REAL OAuth endpoint configurations for testing.\n    \n    ZERO MOCKS: Uses sandbox/staging OAuth endpoints.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:282"
      ]
    },
    "REAL PostgreSQL database session for auth service.\n    \n    ZERO MOCKS: Uses actual PostgreSQL with transaction isolation.": {
      "value": "REAL PostgreSQL database session for auth service.\n    \n    ZERO MOCKS: Uses actual PostgreSQL with transaction isolation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:139"
      ]
    },
    "REAL Redis connection for auth service.\n    \n    ZERO MOCKS: Uses actual Redis with database isolation.": {
      "value": "REAL Redis connection for auth service.\n    \n    ZERO MOCKS: Uses actual Redis with database isolation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:161"
      ]
    },
    "REAL auth service instance with all real dependencies.\n    \n    ZERO MOCKS: Complete auth service with real database, Redis, and JWT.": {
      "value": "REAL auth service instance with all real dependencies.\n    \n    ZERO MOCKS: Complete auth service with real database, Redis, and JWT.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:194"
      ]
    },
    "REAL_LLM": {
      "value": "REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:305"
      ]
    },
    "RECENT FAILURE TRENDS (7 days):": {
      "value": "RECENT FAILURE TRENDS (7 days):",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:726"
      ]
    },
    "RECENT FAILURES (last 7 days):": {
      "value": "RECENT FAILURES (last 7 days):",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:177"
      ]
    },
    "RECENT TRENDS (7 days):": {
      "value": "RECENT TRENDS (7 days):",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:57"
      ]
    },
    "RECOMMENDATION": {
      "value": "RECOMMENDATION",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:73"
      ]
    },
    "RECOMMENDATION:": {
      "value": "RECOMMENDATION:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:54"
      ]
    },
    "RECOMMENDATION: Modify file:": {
      "value": "RECOMMENDATION: Modify file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:325"
      ]
    },
    "RECOMMENDATIONS": {
      "value": "RECOMMENDATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:376",
        "scripts/test_dashboard.py:90",
        "scripts/validate_llm_test_models.py:181"
      ]
    },
    "RECOMMENDATIONS FOR AGENT TESTING": {
      "value": "RECOMMENDATIONS FOR AGENT TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:362"
      ]
    },
    "RECOMMENDATIONS:": {
      "value": "RECOMMENDATIONS:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:103",
        "scripts/business_value_test_index.py:764",
        "scripts/compliance/fake_test_scanner.py:304",
        "scripts/test_staging_auth.py:118"
      ]
    },
    "REDIS_": {
      "value": "REDIS_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "REDIS_DB": {
      "value": "REDIS_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:75"
      ]
    },
    "REDIS_FALLBACK_ENABLED": {
      "value": "REDIS_FALLBACK_ENABLED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:24",
        "auth_service/tests/test_redis_staging_fixes.py:45",
        "auth_service/tests/test_redis_staging_fixes.py:66",
        "scripts/test_redis_config_critical_failure.py:94"
      ]
    },
    "REDIS_HOST": {
      "value": "REDIS_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:73",
        "scripts/test/test_clickhouse_staging_fix.py:82",
        "scripts/test/test_clickhouse_staging_fix.py:134",
        "scripts/test_seed_data.py:43",
        "scripts/test_service_monitor.py:46"
      ]
    },
    "REDIS_PASSWORD": {
      "value": "REDIS_PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:96",
        "scripts/test_secret_manager_builder_critical.py:81",
        "scripts/test_secret_manager_builder_critical.py:131",
        "scripts/test_secret_manager_builder_critical.py:145",
        "scripts/test_secret_manager_builder_critical.py:159",
        "scripts/test_secret_manager_builder_critical.py:566",
        "scripts/test_secret_manager_builder_critical.py:691",
        "scripts/test_secret_manager_builder_critical.py:702",
        "scripts/test_secret_manager_builder_critical.py:800",
        "scripts/test_secret_manager_debug.py:22"
      ]
    },
    "REDIS_PORT": {
      "value": "REDIS_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:74",
        "scripts/test/test_clickhouse_staging_fix.py:135",
        "scripts/test_seed_data.py:44",
        "scripts/test_service_monitor.py:47"
      ]
    },
    "REDIS_REQUIRED": {
      "value": "REDIS_REQUIRED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:23",
        "auth_service/tests/test_redis_staging_fixes.py:44",
        "auth_service/tests/test_redis_staging_fixes.py:65",
        "auth_service/tests/test_redis_staging_fixes.py:86",
        "auth_service/tests/test_redis_staging_fixes.py:136",
        "auth_service/tests/test_redis_staging_fixes.py:162",
        "scripts/test_redis_config_critical_failure.py:95"
      ]
    },
    "REDIS_URL": {
      "value": "REDIS_URL",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:31",
        "auth_service/tests/conftest.py:72",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:47",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:63",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:80",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:213",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:252",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:262",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:272",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:317"
      ]
    },
    "REDIS_URL must be configured in staging": {
      "value": "REDIS_URL must be configured in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:76"
      ]
    },
    "REDUNDANT TEST": {
      "value": "REDUNDANT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:67"
      ]
    },
    "REPLACE": {
      "value": "REPLACE",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:425"
      ]
    },
    "REQUIRED ACTIONS:": {
      "value": "REQUIRED ACTIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:80"
      ]
    },
    "RESULT:": {
      "value": "RESULT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:205",
        "scripts/test_websocket_direct.py:162",
        "scripts/test_websocket_direct.py:269"
      ]
    },
    "RESULT: ✓ READY - Test environment is properly configured": {
      "value": "RESULT: ✓ READY - Test environment is properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:315"
      ]
    },
    "RESULT: ✗ FAILED -": {
      "value": "RESULT: ✗ FAILED -",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:313"
      ]
    },
    "RESULTS": {
      "value": "RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:263"
      ]
    },
    "RESULTS BY SERVICE:": {
      "value": "RESULTS BY SERVICE:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:467"
      ]
    },
    "RUNNING AGENT PIPELINE REAL TEST": {
      "value": "RUNNING AGENT PIPELINE REAL TEST",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:72"
      ]
    },
    "RUNNING FRONTEND UNIT TESTS": {
      "value": "RUNNING FRONTEND UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:55"
      ]
    },
    "RUNNING REAL E2E TESTS:": {
      "value": "RUNNING REAL E2E TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:149"
      ]
    },
    "RUNNING SIMPLIFIED UNIT TESTS": {
      "value": "RUNNING SIMPLIFIED UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:36"
      ]
    },
    "RUNNING_IN_DOCKER": {
      "value": "RUNNING_IN_DOCKER",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:29",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:46",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:156",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:183",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:211",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:238"
      ]
    },
    "Range:": {
      "value": "Range:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:859"
      ]
    },
    "Rapid Test Consolidation - Iterations 83-100": {
      "value": "Rapid Test Consolidation - Iterations 83-100",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:493"
      ]
    },
    "Rapid Test Consolidation Script - Iterations 83-90\n==================================================\n\nThis script rapidly consolidates remaining test files and generates comprehensive\ndocumentation for iterations 83-100 of the test remediation plan.\n\nBusiness Value Justification:\n- Eliminates remaining SSOT violations across all test categories\n- Creates comprehensive test documentation\n- Establishes ongoing test health monitoring\n- Completes 100-iteration test remediation initiative": {
      "value": "Rapid Test Consolidation Script - Iterations 83-90\n==================================================\n\nThis script rapidly consolidates remaining test files and generates comprehensive\ndocumentation for iterations 83-100 of the test remediation plan.\n\nBusiness Value Justification:\n- Eliminates remaining SSOT violations across all test categories\n- Creates comprehensive test documentation\n- Establishes ongoing test health monitoring\n- Completes 100-iteration test remediation initiative",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:2"
      ]
    },
    "Rate limit exceeded": {
      "value": "Rate limit exceeded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:115"
      ]
    },
    "Rate limiting and DDoS protection tests": {
      "value": "Rate limiting and DDoS protection tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:109"
      ]
    },
    "Raw output:": {
      "value": "Raw output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:47"
      ]
    },
    "React\\.createContext\\(\\w*mock\\w*\\)": {
      "value": "React\\.createContext\\(\\w*mock\\w*\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:68"
      ]
    },
    "Readiness Score:": {
      "value": "Readiness Score:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:117"
      ]
    },
    "Readiness separation test failed:": {
      "value": "Readiness separation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:153"
      ]
    },
    "Readiness vs health separation working correctly": {
      "value": "Readiness vs health separation working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:149"
      ]
    },
    "Real Data Pipeline Test Thread": {
      "value": "Real Data Pipeline Test Thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:65"
      ]
    },
    "Real JWT Token Creation": {
      "value": "Real JWT Token Creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:38"
      ]
    },
    "Real JWT ready for WebSocket:": {
      "value": "Real JWT ready for WebSocket:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:156"
      ]
    },
    "Real JWT token created successfully:": {
      "value": "Real JWT token created successfully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:61"
      ]
    },
    "Real LLM APIs available:": {
      "value": "Real LLM APIs available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:62"
      ]
    },
    "Real LLM Coverage:": {
      "value": "Real LLM Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:747"
      ]
    },
    "Real LLM testing enabled but no valid API keys found": {
      "value": "Real LLM testing enabled but no valid API keys found",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:135"
      ]
    },
    "Real PostgreSQL connected successfully": {
      "value": "Real PostgreSQL connected successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:108"
      ]
    },
    "Real Redis connected successfully": {
      "value": "Real Redis connected successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:118"
      ]
    },
    "Real Redis connection for tests.": {
      "value": "Real Redis connection for tests.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:547"
      ]
    },
    "Real Service Auth Tests - No Mock Implementation\n===============================================\n\nThis test suite eliminates all mock usage and tests against real services:\n- Real PostgreSQL/SQLite database connections\n- Real Redis for session management  \n- Real JWT validation without mocks\n- Real HTTP clients for OAuth flows\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal | Goal: Test Quality | Impact: Eliminates mock violations\n- Replaces 222+ mock violations with real service tests\n- Ensures auth service actually works with real dependencies\n- Validates end-to-end authentication flows": {
      "value": "Real Service Auth Tests - No Mock Implementation\n===============================================\n\nThis test suite eliminates all mock usage and tests against real services:\n- Real PostgreSQL/SQLite database connections\n- Real Redis for session management  \n- Real JWT validation without mocks\n- Real HTTP clients for OAuth flows\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal | Goal: Test Quality | Impact: Eliminates mock violations\n- Replaces 222+ mock violations with real service tests\n- Ensures auth service actually works with real dependencies\n- Validates end-to-end authentication flows",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:1"
      ]
    },
    "Real Service Test Metrics Tracking\nULTRA DEEP THINK: Module-based architecture - Metrics tracking extracted for 450-line compliance": {
      "value": "Real Service Test Metrics Tracking\nULTRA DEEP THINK: Module-based architecture - Metrics tracking extracted for 450-line compliance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:2"
      ]
    },
    "Real Test Requirements Linter\n\nIntegrates into development workflow to enforce real test requirements.\nCan be used as pre-commit hook, CI check, or standalone validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents test anti-patterns from entering codebase\n- Strategic Impact: Maintains test reliability and system integrity\n\nUsage:\n  python scripts/compliance/real_test_linter.py [--fix] [--strict] [file1 file2 ...]\n  \nOptions:\n  --fix     Attempt to automatically fix violations\n  --strict  Fail on any violations (for CI)\n  --files   Specific files to check (default: all project test files)": {
      "value": "Real Test Requirements Linter\n\nIntegrates into development workflow to enforce real test requirements.\nCan be used as pre-commit hook, CI check, or standalone validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents test anti-patterns from entering codebase\n- Strategic Impact: Maintains test reliability and system integrity\n\nUsage:\n  python scripts/compliance/real_test_linter.py [--fix] [--strict] [file1 file2 ...]\n  \nOptions:\n  --fix     Attempt to automatically fix violations\n  --strict  Fail on any violations (for CI)\n  --files   Specific files to check (default: all project test files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:2"
      ]
    },
    "Real Test Requirements Validator\n\nValidates test files against SPEC/testing.xml real test requirements:\n1. No mock component implementations inside test files\n2. Integration tests use real child components  \n3. Files must not exceed 300 lines\n4. Functions must not exceed 8 lines\n5. Minimal mocking (only external APIs)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns\n- Strategic Impact: Ensures test reliability and system integrity": {
      "value": "Real Test Requirements Validator\n\nValidates test files against SPEC/testing.xml real test requirements:\n1. No mock component implementations inside test files\n2. Integration tests use real child components  \n3. Files must not exceed 300 lines\n4. Functions must not exceed 8 lines\n5. Minimal mocking (only external APIs)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns\n- Strategic Impact: Ensures test reliability and system integrity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:1"
      ]
    },
    "Real WebSocket connections and other async operations would be delayed.": {
      "value": "Real WebSocket connections and other async operations would be delayed.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:171"
      ]
    },
    "Real agents not available - using mock agents": {
      "value": "Real agents not available - using mock agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:40"
      ]
    },
    "Real database connection for tests.": {
      "value": "Real database connection for tests.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:564"
      ]
    },
    "Real databases available:": {
      "value": "Real databases available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:61"
      ]
    },
    "Real services unavailable:": {
      "value": "Real services unavailable:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:128"
      ]
    },
    "Realistic Test Data Models and Configuration\n\nThis module defines models, enums, and configuration data for realistic test data generation.": {
      "value": "Realistic Test Data Models and Configuration\n\nThis module defines models, enums, and configuration data for realistic test data generation.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:1"
      ]
    },
    "Realistic Test Data Service\n\nBackward compatibility module that imports from the new modular structure.\nGenerates production-like test data for comprehensive testing.\nAddresses gaps identified in test_realism_analysis_20250811.md": {
      "value": "Realistic Test Data Service\n\nBackward compatibility module that imports from the new modular structure.\nGenerates production-like test data for comprehensive testing.\nAddresses gaps identified in test_realism_analysis_20250811.md",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data_service.py:1"
      ]
    },
    "Realistic Test Data Service Module\n\nGenerates production-like test data for comprehensive testing.\nThis module addresses gaps identified in test realism analysis and provides\nrealistic patterns for LLM responses, logs, workloads, and performance scenarios.": {
      "value": "Realistic Test Data Service Module\n\nGenerates production-like test data for comprehensive testing.\nThis module addresses gaps identified in test realism analysis and provides\nrealistic patterns for LLM responses, logs, workloads, and performance scenarios.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:1"
      ]
    },
    "Realistic test data module - consolidates test data functionality.": {
      "value": "Realistic test data module - consolidates test data functionality.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/realistic_test_data.py:1"
      ]
    },
    "RealisticDataPatterns": {
      "value": "RealisticDataPatterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:82",
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "RealisticTestDataConfigManager": {
      "value": "RealisticTestDataConfigManager",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:83"
      ]
    },
    "RealisticTestDataService": {
      "value": "RealisticTestDataService",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/realistic_test_data.py:8",
        "netra_backend/app/services/realistic_test_data/__init__.py:81",
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "Reason:": {
      "value": "Reason:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:179",
        "scripts/test_error_monitor_logic.py:203"
      ]
    },
    "Received": {
      "value": "Received",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:166"
      ]
    },
    "Received interrupt signal, stopping monitor...": {
      "value": "Received interrupt signal, stopping monitor...",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:349"
      ]
    },
    "Received keys:": {
      "value": "Received keys:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:113",
        "scripts/test_staging_refresh_format.py:138"
      ]
    },
    "Received response:": {
      "value": "Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:209"
      ]
    },
    "Received signal": {
      "value": "Received signal",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:128"
      ]
    },
    "Recent Failure Rate (7d):": {
      "value": "Recent Failure Rate (7d):",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:167"
      ]
    },
    "Recent Failure Rate:": {
      "value": "Recent Failure Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:720"
      ]
    },
    "Recommendation: Complete async serialization implementation": {
      "value": "Recommendation: Complete async serialization implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:252"
      ]
    },
    "Recommendation: Manually refactor based on these suggestions.": {
      "value": "Recommendation: Manually refactor based on these suggestions.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1006"
      ]
    },
    "Recommendation: Review the generated report and apply optimizations to improve test suite performance.": {
      "value": "Recommendation: Review the generated report and apply optimizations to improve test suite performance.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:406"
      ]
    },
    "Recommendations must be a list": {
      "value": "Recommendations must be a list",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:391"
      ]
    },
    "Recommendations:": {
      "value": "Recommendations:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:660",
        "scripts/setup_staging_test_account.py:299",
        "scripts/test_cors.py:475",
        "scripts/test_staging_websocket_comprehensive.py:358"
      ]
    },
    "Recommended Actions:": {
      "value": "Recommended Actions:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:329"
      ]
    },
    "Recommended approach:": {
      "value": "Recommended approach:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1017"
      ]
    },
    "Recommended splitting strategies:": {
      "value": "Recommended splitting strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:365"
      ]
    },
    "Record event with detailed timing and logging.": {
      "value": "Record event with detailed timing and logging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:74"
      ]
    },
    "Recovery successful:": {
      "value": "Recovery successful:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:158"
      ]
    },
    "Recovery time:": {
      "value": "Recovery time:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:157"
      ]
    },
    "Redirect to: [cyan]": {
      "value": "Redirect to: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:194"
      ]
    },
    "Redirecting to:": {
      "value": "Redirecting to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:51",
        "scripts/test_frontend.py:51"
      ]
    },
    "Redis": {
      "value": "Redis",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:59",
        "scripts/setup_test_environment.py:66",
        "scripts/test/test_docker_stability.py:80",
        "scripts/test/verify_test_ports.py:27"
      ]
    },
    "Redis (default)": {
      "value": "Redis (default)",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:37"
      ]
    },
    "Redis Connection Python 3.12 Fixes": {
      "value": "Redis Connection Python 3.12 Fixes",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:45"
      ]
    },
    "Redis Python 3.12 Compatibility Tests": {
      "value": "Redis Python 3.12 Compatibility Tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:49"
      ]
    },
    "Redis configuration error": {
      "value": "Redis configuration error",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:306"
      ]
    },
    "Redis connection established": {
      "value": "Redis connection established",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:37"
      ]
    },
    "Redis connection failed:": {
      "value": "Redis connection failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:39"
      ]
    },
    "Redis connection lost": {
      "value": "Redis connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:436"
      ]
    },
    "Redis connection string": {
      "value": "Redis connection string",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:95"
      ]
    },
    "Redis error:": {
      "value": "Redis error:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:37"
      ]
    },
    "Redis is accessible": {
      "value": "Redis is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:35"
      ]
    },
    "Redis is ready": {
      "value": "Redis is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:83"
      ]
    },
    "Redis key-value pairs": {
      "value": "Redis key-value pairs",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:287"
      ]
    },
    "Redis not available in test environment": {
      "value": "Redis not available in test environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:421"
      ]
    },
    "Redis not available:": {
      "value": "Redis not available:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:555",
        "auth_service/tests/test_auth_real_services_comprehensive.py:155"
      ]
    },
    "Redis not ready after": {
      "value": "Redis not ready after",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:87"
      ]
    },
    "Redis should be in degraded services": {
      "value": "Redis should be in degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:264"
      ]
    },
    "Redis test data seeding completed": {
      "value": "Redis test data seeding completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:293"
      ]
    },
    "Redis-dependent tests": {
      "value": "Redis-dependent tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:119"
      ]
    },
    "Redis:": {
      "value": "Redis:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:91"
      ]
    },
    "RedisConfigurationBuilder": {
      "value": "RedisConfigurationBuilder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:126",
        "scripts/test_redis_config_critical_failure.py:131",
        "scripts/test_redis_config_critical_failure.py:265",
        "scripts/test_redis_config_critical_failure.py:286"
      ]
    },
    "RedisConfigurationBuilder missing secret manager integration": {
      "value": "RedisConfigurationBuilder missing secret manager integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:178"
      ]
    },
    "RedisConfigurationBuilder test failed:": {
      "value": "RedisConfigurationBuilder test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:137"
      ]
    },
    "RedisManager not using RedisConfigurationBuilder": {
      "value": "RedisManager not using RedisConfigurationBuilder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:274"
      ]
    },
    "RedisManager not using RedisConfigurationBuilder:": {
      "value": "RedisManager not using RedisConfigurationBuilder:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:128"
      ]
    },
    "RedisManager: Inappropriate fallback occurred": {
      "value": "RedisManager: Inappropriate fallback occurred",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:146"
      ]
    },
    "RedisTestMixin": {
      "value": "RedisTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:17"
      ]
    },
    "Reduce mocking by using real components and external API mocks only": {
      "value": "Reduce mocking by using real components and external API mocks only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:403"
      ]
    },
    "Reduce mocking in": {
      "value": "Reduce mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:370"
      ]
    },
    "Reduce model complexity for faster inference": {
      "value": "Reduce model complexity for faster inference",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:214"
      ]
    },
    "Refactor": {
      "value": "Refactor",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:366"
      ]
    },
    "Referer": {
      "value": "Referer",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:18",
        "scripts/test_cors_issue.py:39"
      ]
    },
    "Refresh": {
      "value": "Refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:102",
        "auth_service/tests/test_auth_comprehensive_audit.py:345",
        "auth_service/tests/test_refresh_critical_fix.py:127",
        "auth_service/tests/test_refresh_critical_fix.py:133",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:57"
      ]
    },
    "Refresh cycle": {
      "value": "Refresh cycle",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:265",
        "scripts/test_staging_auth_e2e.py:240"
      ]
    },
    "Refresh endpoint tests loaded - ZERO MOCKS, 100% REAL SERVICES": {
      "value": "Refresh endpoint tests loaded - ZERO MOCKS, 100% REAL SERVICES",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:383"
      ]
    },
    "Refresh operation": {
      "value": "Refresh operation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:190"
      ]
    },
    "Refresh token": {
      "value": "Refresh token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:196"
      ]
    },
    "Refresh tokens MUST be different on each refresh": {
      "value": "Refresh tokens MUST be different on each refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:52"
      ]
    },
    "Refresh tokens should be different after refresh": {
      "value": "Refresh tokens should be different after refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:58"
      ]
    },
    "Registration failed": {
      "value": "Registration failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:201",
        "auth_service/tests/test_signup_flow_comprehensive.py:377"
      ]
    },
    "Registry doesn't have WebSocket manager": {
      "value": "Registry doesn't have WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:55"
      ]
    },
    "Registry has WebSocket manager": {
      "value": "Registry has WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:129"
      ]
    },
    "Regular User": {
      "value": "Regular User",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:124"
      ]
    },
    "Relevant log lines:": {
      "value": "Relevant log lines:",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:81"
      ]
    },
    "Reloading": {
      "value": "Reloading",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:79"
      ]
    },
    "Remaining L3 files:": {
      "value": "Remaining L3 files:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:290"
      ]
    },
    "Remaining syntax errors:": {
      "value": "Remaining syntax errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:290"
      ]
    },
    "Remote address:": {
      "value": "Remote address:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:140"
      ]
    },
    "Remove duplicate test setup code from all test files.\n\nThis script finds and removes the duplicate sys.path manipulation code\nthat appears in hundreds of test files, ensuring only the centralized\nsetup_test_path() function is used.": {
      "value": "Remove duplicate test setup code from all test files.\n\nThis script finds and removes the duplicate sys.path manipulation code\nthat appears in hundreds of test files, ensuring only the centralized\nsetup_test_path() function is used.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:1"
      ]
    },
    "Remove or mark redundant tests": {
      "value": "Remove or mark redundant tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:63"
      ]
    },
    "Removed original file": {
      "value": "Removed original file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:289"
      ]
    },
    "Removing": {
      "value": "Removing",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:294"
      ]
    },
    "Renaming:": {
      "value": "Renaming:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:161"
      ]
    },
    "Replace hardcoded sleeps in": {
      "value": "Replace hardcoded sleeps in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:181"
      ]
    },
    "Replace mocks with real components or move to unit tests": {
      "value": "Replace mocks with real components or move to unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:371"
      ]
    },
    "Replace with proper function signature and real implementation": {
      "value": "Replace with proper function signature and real implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:200"
      ]
    },
    "Replace with real data source or move to test fixtures": {
      "value": "Replace with real data source or move to test fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:178"
      ]
    },
    "Replace with real implementation or move to test directory": {
      "value": "Replace with real implementation or move to test directory",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:154"
      ]
    },
    "Replaced UserFlowTestBase with unittest.TestCase": {
      "value": "Replaced UserFlowTestBase with unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:244"
      ]
    },
    "Replaced pattern:": {
      "value": "Replaced pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:107"
      ]
    },
    "Report Generation": {
      "value": "Report Generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:397"
      ]
    },
    "Report format (default: text)": {
      "value": "Report format (default: text)",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:359"
      ]
    },
    "Report saved to": {
      "value": "Report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:438",
        "scripts/compliance/test_size_validator.py:539",
        "scripts/remove_test_stubs.py:349"
      ]
    },
    "Report saved to:": {
      "value": "Report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:421",
        "scripts/auto_fix_test_violations.py:986",
        "scripts/batch_test_generator.py:539",
        "scripts/e2e_test_fixer.py:306",
        "scripts/run_all_test_categories.py:154",
        "scripts/test_comprehensive_scanner.py:225"
      ]
    },
    "Report written to": {
      "value": "Report written to",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:373"
      ]
    },
    "Report-only mode. Use --force-unsafe-fix and --confirm-unsafe for actual changes (NOT RECOMMENDED)": {
      "value": "Report-only mode. Use --force-unsafe-fix and --confirm-unsafe for actual changes (NOT RECOMMENDED)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1015"
      ]
    },
    "Request": {
      "value": "Request",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:268",
        "scripts/test_agent_orchestration_recovery.py:278"
      ]
    },
    "Request failed:": {
      "value": "Request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:103",
        "scripts/test_cors_implementation.py:141",
        "scripts/test_gtm_loading.py:66"
      ]
    },
    "Request processed in 45ms": {
      "value": "Request processed in 45ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:126"
      ]
    },
    "Request processed successfully": {
      "value": "Request processed successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:97"
      ]
    },
    "Request timed out": {
      "value": "Request timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:224"
      ]
    },
    "Request timeout": {
      "value": "Request timeout",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:137",
        "scripts/test_cors_implementation.py:101",
        "scripts/test_cors_implementation.py:139"
      ]
    },
    "Request:": {
      "value": "Request:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:213",
        "scripts/test_adaptive_workflow_direct.py:103"
      ]
    },
    "Required auth service imports failed:": {
      "value": "Required auth service imports failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:218"
      ]
    },
    "Required environment key": {
      "value": "Required environment key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:284"
      ]
    },
    "Required injection file does not exist": {
      "value": "Required injection file does not exist",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:130"
      ]
    },
    "Required learning document does not exist": {
      "value": "Required learning document does not exist",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:408"
      ]
    },
    "Requires authentication (expected)": {
      "value": "Requires authentication (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:73"
      ]
    },
    "Requires data gathering:": {
      "value": "Requires data gathering:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:159"
      ]
    },
    "Reset test database if needed": {
      "value": "Reset test database if needed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:249"
      ]
    },
    "Resilience and recovery validation tests": {
      "value": "Resilience and recovery validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:120"
      ]
    },
    "Resolved peer dependency warnings": {
      "value": "Resolved peer dependency warnings",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:716"
      ]
    },
    "Resource cleanup successful": {
      "value": "Resource cleanup successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:362"
      ]
    },
    "Resource cleanup test failed:": {
      "value": "Resource cleanup test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:366"
      ]
    },
    "Resources auto-adjusted": {
      "value": "Resources auto-adjusted",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:334"
      ]
    },
    "Response Body:": {
      "value": "Response Body:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:51",
        "scripts/test_staging_threads_fix.py:55",
        "scripts/test_staging_threads_fix.py:59"
      ]
    },
    "Response Data:": {
      "value": "Response Data:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:47"
      ]
    },
    "Response Headers:": {
      "value": "Response Headers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:42"
      ]
    },
    "Response Status:": {
      "value": "Response Status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:41"
      ]
    },
    "Response Time:": {
      "value": "Response Time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:81",
        "scripts/test_service_health_simple.py:51",
        "scripts/test_service_health_simple.py:57"
      ]
    },
    "Response should be valid JSON dict": {
      "value": "Response should be valid JSON dict",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:52"
      ]
    },
    "Response:": {
      "value": "Response:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:77",
        "scripts/manage_test_services.py:118",
        "scripts/test_auth_client_debug.py:127",
        "scripts/test_oauth_local.py:167",
        "scripts/test_oauth_local.py:213",
        "scripts/test_oauth_local.py:271",
        "scripts/test_oauth_local.py:274",
        "scripts/test_oauth_local.py:323",
        "scripts/test_staging_auth_e2e.py:86",
        "scripts/test_staging_auth_e2e.py:149"
      ]
    },
    "Restart Redis service": {
      "value": "Restart Redis service",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:261"
      ]
    },
    "Restart rate limited for": {
      "value": "Restart rate limited for",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:79"
      ]
    },
    "Restart the TEST environment": {
      "value": "Restart the TEST environment",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:186"
      ]
    },
    "Result": {
      "value": "Result",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:352"
      ]
    },
    "Result data": {
      "value": "Result data",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:110"
      ]
    },
    "Result size: ~": {
      "value": "Result size: ~",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:164",
        "scripts/test_async_serialization_direct.py:176"
      ]
    },
    "Result type:": {
      "value": "Result type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:162"
      ]
    },
    "Result:": {
      "value": "Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:82",
        "scripts/test_auth_client_debug.py:90",
        "scripts/test_auth_client_debug.py:101",
        "scripts/test_auth_database_sessions.py:182",
        "scripts/test_auth_database_sessions.py:201",
        "scripts/test_backend_port_binding.py:170",
        "scripts/test_comprehensive_scanner.py:76",
        "scripts/test_staging_jwt_validation.py:71",
        "scripts/test_verify_workflow.py:38",
        "scripts/test_verify_workflow.py:50"
      ]
    },
    "Result: ERROR -": {
      "value": "Result: ERROR -",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:83"
      ]
    },
    "Result: TIMEOUT": {
      "value": "Result: TIMEOUT",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:80"
      ]
    },
    "Results saved to:": {
      "value": "Results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:149",
        "scripts/fix_test_batch.py:384",
        "scripts/iterative_test_fix_loop.py:159",
        "scripts/test_staging_login_automated.py:422"
      ]
    },
    "Results will be saved to:": {
      "value": "Results will be saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:143"
      ]
    },
    "Results:": {
      "value": "Results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:238",
        "scripts/auto_fix_test_sizes.py:736",
        "scripts/simple_websocket_blocking_test.py:158",
        "scripts/simple_websocket_blocking_test.py:212",
        "scripts/test_async_serialization_direct.py:129",
        "scripts/test_cors.py:536",
        "scripts/test_standalone_websocket.py:107"
      ]
    },
    "Resume from last saved state": {
      "value": "Resume from last saved state",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:923"
      ]
    },
    "Resuming from last saved state...": {
      "value": "Resuming from last saved state...",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:944"
      ]
    },
    "Retry attempt 1 of 3": {
      "value": "Retry attempt 1 of 3",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:104"
      ]
    },
    "Retry logic test error:": {
      "value": "Retry logic test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:125"
      ]
    },
    "Return Code:": {
      "value": "Return Code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:122"
      ]
    },
    "Reused refresh token should be rejected": {
      "value": "Reused refresh token should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:232",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:90"
      ]
    },
    "Reused refresh token should still be rejected": {
      "value": "Reused refresh token should still be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:94"
      ]
    },
    "Revenue-critical component": {
      "value": "Revenue-critical component",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:403"
      ]
    },
    "Revenue-critical path tests (1-2min)": {
      "value": "Revenue-critical path tests (1-2min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:56"
      ]
    },
    "Review and optimize test fixtures and setup": {
      "value": "Review and optimize test fixtures and setup",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:126"
      ]
    },
    "Review recent deployments": {
      "value": "Review recent deployments",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:418"
      ]
    },
    "Review service dependencies": {
      "value": "Review service dependencies",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:408"
      ]
    },
    "Review shared fixtures and utilities": {
      "value": "Review shared fixtures and utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:444"
      ]
    },
    "Review the issues above before proceeding.": {
      "value": "Review the issues above before proceeding.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:235"
      ]
    },
    "Reviews code and provides feedback": {
      "value": "Reviews code and provides feedback",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:207"
      ]
    },
    "Root": {
      "value": "Root",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:42"
      ]
    },
    "Root Cause Analysis:": {
      "value": "Root Cause Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:345"
      ]
    },
    "Root directory to scan": {
      "value": "Root directory to scan",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:928"
      ]
    },
    "Run E2E tests with Cypress": {
      "value": "Run E2E tests with Cypress",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:396"
      ]
    },
    "Run ESLint": {
      "value": "Run ESLint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:409"
      ]
    },
    "Run Jest in watch mode": {
      "value": "Run Jest in watch mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:402"
      ]
    },
    "Run Supervisor Agent Test Suite with 100% Coverage Verification.\n\nThis script runs all supervisor tests and generates a comprehensive coverage report.\nIt ensures the Supervisor Agent orchestration is bulletproof with 100% test coverage.\n\nBusiness Value: Guarantees production readiness of the core orchestration engine.": {
      "value": "Run Supervisor Agent Test Suite with 100% Coverage Verification.\n\nThis script runs all supervisor tests and generates a comprehensive coverage report.\nIt ensures the Supervisor Agent orchestration is bulletproof with 100% test coverage.\n\nBusiness Value: Guarantees production readiness of the core orchestration engine.",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:1"
      ]
    },
    "Run TypeScript type checking": {
      "value": "Run TypeScript type checking",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:411"
      ]
    },
    "Run WebSocket tests.": {
      "value": "Run WebSocket tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:107"
      ]
    },
    "Run all ClickHouse startup fix validation tests": {
      "value": "Run all ClickHouse startup fix validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:314"
      ]
    },
    "Run all E2E tests": {
      "value": "Run all E2E tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:330"
      ]
    },
    "Run all WebSocket configuration tests.": {
      "value": "Run all WebSocket configuration tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:235"
      ]
    },
    "Run all WebSocket connectivity tests.": {
      "value": "Run all WebSocket connectivity tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:158"
      ]
    },
    "Run all WebSocket event tests.": {
      "value": "Run all WebSocket event tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:254"
      ]
    },
    "Run all WebSocket functionality tests.": {
      "value": "Run all WebSocket functionality tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:259"
      ]
    },
    "Run all WebSocket migration tests.": {
      "value": "Run all WebSocket migration tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:155"
      ]
    },
    "Run all WebSocket serialization blocking tests": {
      "value": "Run all WebSocket serialization blocking tests",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:230"
      ]
    },
    "Run all WebSocket tests.": {
      "value": "Run all WebSocket tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:173"
      ]
    },
    "Run all coordination fix validation tests.": {
      "value": "Run all coordination fix validation tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:38"
      ]
    },
    "Run all direct tests.": {
      "value": "Run all direct tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:296"
      ]
    },
    "Run all integration tests": {
      "value": "Run all integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:128"
      ]
    },
    "Run all integration tests.": {
      "value": "Run all integration tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:408"
      ]
    },
    "Run all service health tests.": {
      "value": "Run all service health tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:144"
      ]
    },
    "Run all staging WebSocket tests.\n        \n        Args:\n            quick_mode: Run only essential tests for faster feedback\n            \n        Returns:\n            True if all tests pass": {
      "value": "Run all staging WebSocket tests.\n        \n        Args:\n            quick_mode: Run only essential tests for faster feedback\n            \n        Returns:\n            True if all tests pass",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:250"
      ]
    },
    "Run all staging deployment tests": {
      "value": "Run all staging deployment tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:184"
      ]
    },
    "Run all staging tests": {
      "value": "Run all staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:58"
      ]
    },
    "Run all standalone tests.": {
      "value": "Run all standalone tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:401"
      ]
    },
    "Run all test categories individually and collect failures.": {
      "value": "Run all test categories individually and collect failures.",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:2"
      ]
    },
    "Run all test scenarios.": {
      "value": "Run all test scenarios.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:151",
        "scripts/test_adaptive_workflow_local.py:74"
      ]
    },
    "Run all tests": {
      "value": "Run all tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:124"
      ]
    },
    "Run all tests.": {
      "value": "Run all tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:94",
        "scripts/test_websocket_chat_simple.py:416"
      ]
    },
    "Run all validation tests.": {
      "value": "Run all validation tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:204"
      ]
    },
    "Run autonomous test review based on mode": {
      "value": "Run autonomous test review based on mode",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:34"
      ]
    },
    "Run benchmark comparison with standard execution": {
      "value": "Run benchmark comparison with standard execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:379"
      ]
    },
    "Run comprehensive CORS tests.": {
      "value": "Run comprehensive CORS tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:144"
      ]
    },
    "Run comprehensive WebSocket tests.\n        \n        Returns:\n            Summary of all test results": {
      "value": "Run comprehensive WebSocket tests.\n        \n        Returns:\n            Summary of all test results",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:169"
      ]
    },
    "Run comprehensive performance validation.": {
      "value": "Run comprehensive performance validation.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:279"
      ]
    },
    "Run comprehensive staging tests": {
      "value": "Run comprehensive staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:84"
      ]
    },
    "Run comprehensive staging tests.": {
      "value": "Run comprehensive staging tests.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:489"
      ]
    },
    "Run comprehensive test suite.": {
      "value": "Run comprehensive test suite.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:399"
      ]
    },
    "Run debug mode to troubleshoot connection issues": {
      "value": "Run debug mode to troubleshoot connection issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:434"
      ]
    },
    "Run debug mode to troubleshoot staging WebSocket issues.": {
      "value": "Run debug mode to troubleshoot staging WebSocket issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:339"
      ]
    },
    "Run in attached mode (see logs)": {
      "value": "Run in attached mode (see logs)",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:171"
      ]
    },
    "Run integration tests separately with proper services running": {
      "value": "Run integration tests separately with proper services running",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:80"
      ]
    },
    "Run iterative test-fix loop": {
      "value": "Run iterative test-fix loop",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:170"
      ]
    },
    "Run migrations": {
      "value": "Run migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:123"
      ]
    },
    "Run multiple concurrent validations.": {
      "value": "Run multiple concurrent validations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:255"
      ]
    },
    "Run only quick smoke tests for fast feedback": {
      "value": "Run only quick smoke tests for fast feedback",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:429"
      ]
    },
    "Run pending migrations": {
      "value": "Run pending migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:248"
      ]
    },
    "Run previously failed tests first": {
      "value": "Run previously failed tests first",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:494"
      ]
    },
    "Run quick health check only": {
      "value": "Run quick health check only",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:211"
      ]
    },
    "Run quick staging health checks only": {
      "value": "Run quick staging health checks only",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:79"
      ]
    },
    "Run quick tests for fast feedback.": {
      "value": "Run quick tests for fast feedback.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:379"
      ]
    },
    "Run quick validation only": {
      "value": "Run quick validation only",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:433"
      ]
    },
    "Run service health tests.": {
      "value": "Run service health tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:141"
      ]
    },
    "Run simplified pipeline test.": {
      "value": "Run simplified pipeline test.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:421"
      ]
    },
    "Run tests": {
      "value": "Run tests",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:189"
      ]
    },
    "Run tests after starting environment": {
      "value": "Run tests after starting environment",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:191"
      ]
    },
    "Run tests against staging environment": {
      "value": "Run tests against staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:75"
      ]
    },
    "Run tests from a specific category": {
      "value": "Run tests from a specific category",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:485",
        "scripts/test_frontend_ORIGINAL.py:390"
      ]
    },
    "Run tests to validate they pass before suggesting fixes": {
      "value": "Run tests to validate they pass before suggesting fixes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:934"
      ]
    },
    "Run tests using the Docker infrastructure.": {
      "value": "Run tests using the Docker infrastructure.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:134"
      ]
    },
    "Run the complete E2E test suite.": {
      "value": "Run the complete E2E test suite.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:72"
      ]
    },
    "Run the complete seeding process.": {
      "value": "Run the complete seeding process.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:375"
      ]
    },
    "Run the service monitor.": {
      "value": "Run the service monitor.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:289"
      ]
    },
    "Run this script again after making changes to verify compliance.": {
      "value": "Run this script again after making changes to verify compliance.",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:191"
      ]
    },
    "Run this test to see the CRITICAL Redis configuration failure.\n    \n    Expected output: FAILURE with detailed business impact analysis\n    \n    After RedisConfigurationBuilder implementation:\n    Expected output: PASS with all configuration consistency checks passing": {
      "value": "Run this test to see the CRITICAL Redis configuration failure.\n    \n    Expected output: FAILURE with detailed business impact analysis\n    \n    After RedisConfigurationBuilder implementation:\n    Expected output: PASS with all configuration consistency checks passing",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:334"
      ]
    },
    "Run with: pytest auth_service/tests/test_auth_port_configuration.py -v": {
      "value": "Run with: pytest auth_service/tests/test_auth_port_configuration.py -v",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:462"
      ]
    },
    "Run: pip install clickhouse-connect": {
      "value": "Run: pip install clickhouse-connect",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:247"
      ]
    },
    "Runner": {
      "value": "Runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:171"
      ]
    },
    "Running": {
      "value": "Running",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:152",
        "scripts/run_all_test_categories.py:17"
      ]
    },
    "Running 'alembic current'...": {
      "value": "Running 'alembic current'...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:146"
      ]
    },
    "Running CRITICAL SecretManagerBuilder Test - Definition of Done": {
      "value": "Running CRITICAL SecretManagerBuilder Test - Definition of Done",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:839"
      ]
    },
    "Running Cypress E2E Tests": {
      "value": "Running Cypress E2E Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:491"
      ]
    },
    "Running Direct Workflow Test": {
      "value": "Running Direct Workflow Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:274"
      ]
    },
    "Running ESLint...": {
      "value": "Running ESLint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:315"
      ]
    },
    "Running Integration Tests": {
      "value": "Running Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:252"
      ]
    },
    "Running Jest Tests": {
      "value": "Running Jest Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:496"
      ]
    },
    "Running TypeScript type check...": {
      "value": "Running TypeScript type check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:335"
      ]
    },
    "Running WebSocket migration tests...": {
      "value": "Running WebSocket migration tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:165"
      ]
    },
    "Running command:": {
      "value": "Running command:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:196",
        "scripts/test_parallel_docker_manager.py:216",
        "scripts/test_staging.py:61"
      ]
    },
    "Running command:\n  pytest": {
      "value": "Running command:\n  pytest",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:376"
      ]
    },
    "Running comprehensive staging WebSocket tests...": {
      "value": "Running comprehensive staging WebSocket tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:400"
      ]
    },
    "Running comprehensive test suite for 100% coverage...": {
      "value": "Running comprehensive test suite for 100% coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:323"
      ]
    },
    "Running debug mode for staging WebSocket...": {
      "value": "Running debug mode for staging WebSocket...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:340"
      ]
    },
    "Running diagnostics for strategy:": {
      "value": "Running diagnostics for strategy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:294"
      ]
    },
    "Running quick staging WebSocket tests...": {
      "value": "Running quick staging WebSocket tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:380"
      ]
    },
    "Running sample e2e tests to verify fixes...": {
      "value": "Running sample e2e tests to verify fixes...",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:309"
      ]
    },
    "Running startup module tests...": {
      "value": "Running startup module tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:81"
      ]
    },
    "Running targeted category tests...": {
      "value": "Running targeted category tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:178"
      ]
    },
    "Running test suite:": {
      "value": "Running test suite:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:330"
      ]
    },
    "Running test:": {
      "value": "Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:54"
      ]
    },
    "Running tests...": {
      "value": "Running tests...",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:108",
        "scripts/simple_test_fix_loop.py:15"
      ]
    },
    "Running verify_workflow_status.py validation tests...": {
      "value": "Running verify_workflow_status.py validation tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:79"
      ]
    },
    "Running:": {
      "value": "Running:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:50",
        "scripts/fix_common_test_issues.py:59",
        "scripts/run_agent_pipeline_test.py:87",
        "scripts/test_frontend_ORIGINAL.py:196",
        "scripts/test_frontend_ORIGINAL.py:234",
        "scripts/test_jwt_critical.py:48",
        "scripts/test_staging_env.py:166"
      ]
    },
    "SAFE MODE ENABLED: Only analysis and dry-run operations allowed": {
      "value": "SAFE MODE ENABLED: Only analysis and dry-run operations allowed",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:691"
      ]
    },
    "SAFETY: Actual file splitting is disabled by default. Use force_unsafe=True if you really want to modify files (NOT RECOMMENDED). Consider manual refactoring instead.": {
      "value": "SAFETY: Actual file splitting is disabled by default. Use force_unsafe=True if you really want to modify files (NOT RECOMMENDED). Consider manual refactoring instead.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:333"
      ]
    },
    "SAFETY: Automatic function refactoring is disabled. This operation is too dangerous for automatic execution. Please refactor manually.": {
      "value": "SAFETY: Automatic function refactoring is disabled. This operation is too dangerous for automatic execution. Please refactor manually.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:614"
      ]
    },
    "SAFETY: Cannot perform actual fixes in safe mode. Use dry_run=True for suggestions or explicitly set safe_mode=False and force_unsafe=True (NOT RECOMMENDED).": {
      "value": "SAFETY: Cannot perform actual fixes in safe mode. Use dry_run=True for suggestions or explicitly set safe_mode=False and force_unsafe=True (NOT RECOMMENDED).",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:786"
      ]
    },
    "SAFETY: Cannot perform actual fixes with safe mode enabled": {
      "value": "SAFETY: Cannot perform actual fixes with safe mode enabled",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:966"
      ]
    },
    "SAFETY: Unsafe operations require --confirm-unsafe flag. Please reconsider using manual refactoring instead.": {
      "value": "SAFETY: Unsafe operations require --confirm-unsafe flag. Please reconsider using manual refactoring instead.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:944"
      ]
    },
    "SCAN COMPLETE": {
      "value": "SCAN COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:222"
      ]
    },
    "SECRET": {
      "value": "SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:51",
        "scripts/test_oauth_local.py:78",
        "scripts/test_staging_auth.py:156"
      ]
    },
    "SECRET MANAGER BUILDER DEBUG TEST": {
      "value": "SECRET MANAGER BUILDER DEBUG TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:29"
      ]
    },
    "SECRET:": {
      "value": "SECRET:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:239"
      ]
    },
    "SECRET_KEY": {
      "value": "SECRET_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:40",
        "scripts/test_improved_environment_validation.py:41",
        "scripts/test_service_startup_with_missing_optionals.py:36"
      ]
    },
    "SECRET_MANAGER_PROJECT_ID": {
      "value": "SECRET_MANAGER_PROJECT_ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:36",
        "scripts/test_staging_config.py:46"
      ]
    },
    "SECURITY": {
      "value": "SECURITY",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:68",
        "scripts/test_chat_errors.py:69"
      ]
    },
    "SECURITY REQUIREMENTS": {
      "value": "SECURITY REQUIREMENTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:713"
      ]
    },
    "SECURITY SUMMARY:": {
      "value": "SECURITY SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:771"
      ]
    },
    "SECURITY VALIDATION: Production Requirements": {
      "value": "SECURITY VALIDATION: Production Requirements",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:680"
      ]
    },
    "SELECT \n                            COUNT(*) as recent_runs,\n                            SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as recent_failures\n                        FROM test_runs\n                        WHERE category = ? AND timestamp > ?": {
      "value": "SELECT \n                            COUNT(*) as recent_runs,\n                            SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as recent_failures\n                        FROM test_runs\n                        WHERE category = ? AND timestamp > ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:564"
      ]
    },
    "SELECT \n                        COUNT(*) as total_tests,\n                        AVG(failure_rate) as avg_failure_rate,\n                        AVG(average_duration) as avg_duration,\n                        SUM(total_runs) as total_runs,\n                        AVG(business_value) as avg_business_value\n                    FROM test_metadata\n                    WHERE categories LIKE ?": {
      "value": "SELECT \n                        COUNT(*) as total_tests,\n                        AVG(failure_rate) as avg_failure_rate,\n                        AVG(average_duration) as avg_duration,\n                        SUM(total_runs) as total_runs,\n                        AVG(business_value) as avg_business_value\n                    FROM test_metadata\n                    WHERE categories LIKE ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:540"
      ]
    },
    "SELECT \n                    DATE(timestamp) as day,\n                    COUNT(*) as total,\n                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failures,\n                    SUM(CASE WHEN status = 'passed' THEN 1 ELSE 0 END) as passes\n                FROM test_runs\n                WHERE timestamp > ?\n                GROUP BY DATE(timestamp)\n                ORDER BY day": {
      "value": "SELECT \n                    DATE(timestamp) as day,\n                    COUNT(*) as total,\n                    SUM(CASE WHEN status = 'failed' THEN 1 ELSE 0 END) as failures,\n                    SUM(CASE WHEN status = 'passed' THEN 1 ELSE 0 END) as passes\n                FROM test_runs\n                WHERE timestamp > ?\n                GROUP BY DATE(timestamp)\n                ORDER BY day",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:489"
      ]
    },
    "SELECT \n                    test_id, file_path, test_name,\n                    COUNT(*) as failure_count\n                FROM test_runs\n                WHERE timestamp > ? AND status = 'failed'\n                GROUP BY test_id\n                ORDER BY failure_count DESC\n                LIMIT 10": {
      "value": "SELECT \n                    test_id, file_path, test_name,\n                    COUNT(*) as failure_count\n                FROM test_runs\n                WHERE timestamp > ? AND status = 'failed'\n                GROUP BY test_id\n                ORDER BY failure_count DESC\n                LIMIT 10",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:512"
      ]
    },
    "SELECT \n                    test_id, file_path, test_name, total_runs,\n                    failure_rate, average_duration\n                FROM test_metadata\n                WHERE total_runs >= ?\n                    AND failure_rate > ? \n                    AND failure_rate < ?\n                ORDER BY failure_rate DESC": {
      "value": "SELECT \n                    test_id, file_path, test_name, total_runs,\n                    failure_rate, average_duration\n                FROM test_metadata\n                WHERE total_runs >= ?\n                    AND failure_rate > ? \n                    AND failure_rate < ?\n                ORDER BY failure_rate DESC",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:426"
      ]
    },
    "SELECT * FROM test_metadata WHERE test_id = ?": {
      "value": "SELECT * FROM test_metadata WHERE test_id = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:273"
      ]
    },
    "SELECT * FROM test_runs WHERE file_path = ?": {
      "value": "SELECT * FROM test_runs WHERE file_path = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:408"
      ]
    },
    "SELECT * FROM test_runs WHERE test_id = ?": {
      "value": "SELECT * FROM test_runs WHERE test_id = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:401",
        "scripts/test_execution_tracker.py:405"
      ]
    },
    "SELECT * FROM test_runs WHERE timestamp > ? ORDER BY timestamp DESC": {
      "value": "SELECT * FROM test_runs WHERE timestamp > ? ORDER BY timestamp DESC",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:413"
      ]
    },
    "SELECT 1": {
      "value": "SELECT 1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:228",
        "scripts/test/test_docker_stability.py:22",
        "scripts/test_clickhouse_graceful_failure.py:51",
        "scripts/test_clickhouse_startup_fix.py:300",
        "scripts/test_seed_data.py:66",
        "scripts/test_seed_data.py:96"
      ]
    },
    "SELECT 1 FROM pg_database WHERE datname = '": {
      "value": "SELECT 1 FROM pg_database WHERE datname = '",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:218"
      ]
    },
    "SELECT 1 as test": {
      "value": "SELECT 1 as test",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:90",
        "scripts/test_sqlalchemy_2_migration.py:40"
      ]
    },
    "SELECT COUNT(*) FROM auth.users": {
      "value": "SELECT COUNT(*) FROM auth.users",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:66"
      ]
    },
    "SELECT COUNT(*) FROM pg_user": {
      "value": "SELECT COUNT(*) FROM pg_user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:73"
      ]
    },
    "SELECT COUNT(*) FROM user_events": {
      "value": "SELECT COUNT(*) FROM user_events",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:128"
      ]
    },
    "SELECT average_duration FROM test_metadata\n                    WHERE file_path = ?": {
      "value": "SELECT average_duration FROM test_metadata\n                    WHERE file_path = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:649"
      ]
    },
    "SELECT current_database()": {
      "value": "SELECT current_database()",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:92"
      ]
    },
    "SELECT failure_rate, average_duration, last_run_status,\n                               business_value, last_modified\n                        FROM test_metadata\n                        WHERE file_path = ?": {
      "value": "SELECT failure_rate, average_duration, last_run_status,\n                               business_value, last_modified\n                        FROM test_metadata\n                        WHERE file_path = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:596"
      ]
    },
    "SELECT last_run_status FROM test_metadata\n                    WHERE file_path = ?": {
      "value": "SELECT last_run_status FROM test_metadata\n                    WHERE file_path = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:671"
      ]
    },
    "SELECT name FROM sqlite_master WHERE type='table';": {
      "value": "SELECT name FROM sqlite_master WHERE type='table';",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:41",
        "auth_service/debug_db_test.py:48"
      ]
    },
    "SELECT test_id, file_path, test_name,\n                           average_duration, total_runs, categories\n                    FROM test_metadata\n                    ORDER BY average_duration DESC\n                    LIMIT ?": {
      "value": "SELECT test_id, file_path, test_name,\n                           average_duration, total_runs, categories\n                    FROM test_metadata\n                    ORDER BY average_duration DESC\n                    LIMIT ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:470"
      ]
    },
    "SELECT test_id, file_path, test_name, \n                           average_duration, total_runs, categories\n                    FROM test_metadata\n                    WHERE categories LIKE ?\n                    ORDER BY average_duration DESC\n                    LIMIT ?": {
      "value": "SELECT test_id, file_path, test_name, \n                           average_duration, total_runs, categories\n                    FROM test_metadata\n                    WHERE categories LIKE ?\n                    ORDER BY average_duration DESC\n                    LIMIT ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:461"
      ]
    },
    "SELECT version()": {
      "value": "SELECT version()",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:68",
        "auth_service/test_staging_db_connection.py:103",
        "auth_service/test_staging_db_connection.py:206",
        "scripts/test_async_postgres.py:49",
        "scripts/test_clickhouse_staging.py:94",
        "scripts/test_staging_clickhouse.py:173",
        "scripts/test_staging_db_direct.py:91",
        "scripts/test_staging_db_direct.py:108"
      ]
    },
    "SERVICE AVAILABILITY CHECKER TEST": {
      "value": "SERVICE AVAILABILITY CHECKER TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:98"
      ]
    },
    "SERVICE AVAILABILITY TEST RESULTS": {
      "value": "SERVICE AVAILABILITY TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:36"
      ]
    },
    "SERVICE COORDINATION FIX VALIDATION SUMMARY": {
      "value": "SERVICE COORDINATION FIX VALIDATION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:372"
      ]
    },
    "SERVICE HEALTH CHECK:": {
      "value": "SERVICE HEALTH CHECK:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:269"
      ]
    },
    "SERVICE STARTUP ORCHESTRATION TEST": {
      "value": "SERVICE STARTUP ORCHESTRATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:128"
      ]
    },
    "SERVICE_ID": {
      "value": "SERVICE_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:41",
        "auth_service/test_auth_direct.py:16",
        "auth_service/test_url_construction.py:42",
        "auth_service/tests/conftest.py:61",
        "scripts/test_auth_fix_simple.py:27",
        "scripts/test_auth_fix_simple.py:34",
        "scripts/test_auth_service_integration_fix.py:30",
        "scripts/test_auth_service_integration_fix.py:37",
        "scripts/test_staging_auth.py:148"
      ]
    },
    "SERVICE_ID:": {
      "value": "SERVICE_ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:34",
        "scripts/test_auth_service_integration_fix.py:37"
      ]
    },
    "SERVICE_SECRET": {
      "value": "SERVICE_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:42",
        "auth_service/test_auth_direct.py:15",
        "auth_service/test_url_construction.py:43",
        "auth_service/tests/conftest.py:60",
        "scripts/setup_test_environment.py:93",
        "scripts/setup_test_environment.py:108",
        "scripts/test/test_clickhouse_staging_fix.py:36",
        "scripts/test/test_clickhouse_staging_fix.py:76",
        "scripts/test/test_clickhouse_staging_fix.py:127",
        "scripts/test_auth_fix_simple.py:28"
      ]
    },
    "SERVICE_SECRET:": {
      "value": "SERVICE_SECRET:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:35",
        "scripts/test_auth_service_integration_fix.py:38"
      ]
    },
    "SESSION_CREATED": {
      "value": "SESSION_CREATED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:29",
        "auth_service/tests/factories/audit_factory.py:152"
      ]
    },
    "SESSION_EXPIRED": {
      "value": "SESSION_EXPIRED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:30"
      ]
    },
    "SETUP COMPLETE": {
      "value": "SETUP COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:308"
      ]
    },
    "SEVERITY BREAKDOWN:": {
      "value": "SEVERITY BREAKDOWN:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:314"
      ]
    },
    "SHOW DATABASES": {
      "value": "SHOW DATABASES",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:180"
      ]
    },
    "SIMPLE CRITICAL CHAT FLOW TEST\n\nenv = get_env()\nThis is a simple test that validates the critical WebSocket chat flow\nwithout any external service dependencies or pytest fixtures.\n\nBusiness Value: $500K+ ARR - Core product functionality depends on this.\n\nTests the complete flow:\n1. User sends message via WebSocket\n2. Supervisor processes message \n3. Agent events are sent back via WebSocket\n4. User receives complete response\n\nIf this test fails, the chat UI is completely broken.": {
      "value": "SIMPLE CRITICAL CHAT FLOW TEST\n\nenv = get_env()\nThis is a simple test that validates the critical WebSocket chat flow\nwithout any external service dependencies or pytest fixtures.\n\nBusiness Value: $500K+ ARR - Core product functionality depends on this.\n\nTests the complete flow:\n1. User sends message via WebSocket\n2. Supervisor processes message \n3. Agent events are sent back via WebSocket\n4. User receives complete response\n\nIf this test fails, the chat UI is completely broken.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:3"
      ]
    },
    "SIMPLE CRITICAL CHAT FLOW VALIDATION": {
      "value": "SIMPLE CRITICAL CHAT FLOW VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:121"
      ]
    },
    "SIMPLIFIED AGENT PIPELINE E2E TEST": {
      "value": "SIMPLIFIED AGENT PIPELINE E2E TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:327"
      ]
    },
    "SIMPLIFIED PIPELINE TEST COMPLETED SUCCESSFULLY!": {
      "value": "SIMPLIFIED PIPELINE TEST COMPLETED SUCCESSFULLY!",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:427"
      ]
    },
    "SIMPLIFIED PIPELINE TEST FAILED:": {
      "value": "SIMPLIFIED PIPELINE TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:434"
      ]
    },
    "SIMULATING": {
      "value": "SIMULATING",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "SKIP": {
      "value": "SKIP",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:228",
        "scripts/staging_comprehensive_test.py:402",
        "scripts/staging_comprehensive_test.py:408",
        "scripts/test_real_jwt_e2e.py:47",
        "scripts/test_real_jwt_e2e.py:142",
        "scripts/test_real_jwt_e2e.py:233"
      ]
    },
    "SKIP_DOCKER_CHECK": {
      "value": "SKIP_DOCKER_CHECK",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:42"
      ]
    },
    "SLA compliance and incident prevention for": {
      "value": "SLA compliance and incident prevention for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:497"
      ]
    },
    "SLOWEST TESTS:": {
      "value": "SLOWEST TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:187",
        "scripts/test_execution_tracker.py:747"
      ]
    },
    "SOLUTION STATUS: RedisConfigurationBuilder implemented with:": {
      "value": "SOLUTION STATUS: RedisConfigurationBuilder implemented with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:245"
      ]
    },
    "SOME TESTS FAILED": {
      "value": "SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:402",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:331",
        "scripts/test_windows_process_cleanup.py:187"
      ]
    },
    "SOME TESTS FAILED (": {
      "value": "SOME TESTS FAILED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:373"
      ]
    },
    "SPEC": {
      "value": "SPEC",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:24",
        "scripts/business_value_test_index.py:115"
      ]
    },
    "SPEC/learnings/index.xml": {
      "value": "SPEC/learnings/index.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:88"
      ]
    },
    "SPEC/learnings/websocket_injection_fix_comprehensive.xml": {
      "value": "SPEC/learnings/websocket_injection_fix_comprehensive.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:82"
      ]
    },
    "SQL Injection": {
      "value": "SQL Injection",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:127"
      ]
    },
    "SQL_ECHO": {
      "value": "SQL_ECHO",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:20"
      ]
    },
    "SSL Certificate Validation": {
      "value": "SSL Certificate Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:263"
      ]
    },
    "SSL Parameter Handling": {
      "value": "SSL Parameter Handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:308",
        "scripts/test_ssl_certificates_staging.py:264"
      ]
    },
    "SSL TEST SUMMARY": {
      "value": "SSL TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:287"
      ]
    },
    "SSL certificate expiry not handled gracefully:": {
      "value": "SSL certificate expiry not handled gracefully:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:385"
      ]
    },
    "SSL configuration check failed:": {
      "value": "SSL configuration check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:206"
      ]
    },
    "SSL configured:": {
      "value": "SSL configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:82"
      ]
    },
    "SSL connection FAILED:": {
      "value": "SSL connection FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:88"
      ]
    },
    "SSL connection: SUCCESS": {
      "value": "SSL connection: SUCCESS",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:73"
      ]
    },
    "SSL parameters present as expected": {
      "value": "SSL parameters present as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:154"
      ]
    },
    "SSL should be required for staging environment": {
      "value": "SSL should be required for staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:198"
      ]
    },
    "SSL validation failed:": {
      "value": "SSL validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:203"
      ]
    },
    "SSL validation: Not applicable (Unix socket handles encryption)": {
      "value": "SSL validation: Not applicable (Unix socket handles encryption)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:45"
      ]
    },
    "SSL/TLS Issues:": {
      "value": "SSL/TLS Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:223"
      ]
    },
    "SSL/authentication method mismatch": {
      "value": "SSL/authentication method mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:204"
      ]
    },
    "SSL:": {
      "value": "SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:241"
      ]
    },
    "SSOT Compliance": {
      "value": "SSOT Compliance",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:204"
      ]
    },
    "SSOT Compliance:": {
      "value": "SSOT Compliance:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:190"
      ]
    },
    "SSOT_COMPLIANCE_REPORT.md": {
      "value": "SSOT_COMPLIANCE_REPORT.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:334"
      ]
    },
    "STAGING AUTHENTICATION E2E TEST": {
      "value": "STAGING AUTHENTICATION E2E TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:332"
      ]
    },
    "STAGING AUTHENTICATION TEST": {
      "value": "STAGING AUTHENTICATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:16"
      ]
    },
    "STAGING CONFIGURATION SIMPLIFICATION TEST": {
      "value": "STAGING CONFIGURATION SIMPLIFICATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:93"
      ]
    },
    "STAGING DEPLOYMENT VALIDATION TEST SUITE": {
      "value": "STAGING DEPLOYMENT VALIDATION TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:186"
      ]
    },
    "STAGING ENVIRONMENT TEST REPORT": {
      "value": "STAGING ENVIRONMENT TEST REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:455"
      ]
    },
    "STAGING ENVIRONMENT TEST RUNNER": {
      "value": "STAGING ENVIRONMENT TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:43"
      ]
    },
    "STAGING ENVIRONMENT TEST SUITE": {
      "value": "STAGING ENVIRONMENT TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:162"
      ]
    },
    "STAGING ENVIRONMENT TESTS": {
      "value": "STAGING ENVIRONMENT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:60"
      ]
    },
    "STAGING ERROR MONITOR LOGIC VALIDATION": {
      "value": "STAGING ERROR MONITOR LOGIC VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:231"
      ]
    },
    "STAGING ISSUES": {
      "value": "STAGING ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:300"
      ]
    },
    "STAGING LOGIN TEST SUITE": {
      "value": "STAGING LOGIN TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:305"
      ]
    },
    "STAGING READY": {
      "value": "STAGING READY",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:300"
      ]
    },
    "STAGING REFRESH ENDPOINT FORMAT TEST": {
      "value": "STAGING REFRESH ENDPOINT FORMAT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:18"
      ]
    },
    "STAGING STARTUP SEQUENCE TESTS": {
      "value": "STAGING STARTUP SEQUENCE TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:228"
      ]
    },
    "STAGING TEST ACCOUNT SETUP": {
      "value": "STAGING TEST ACCOUNT SETUP",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:287"
      ]
    },
    "STAGING THREADS ENDPOINT FIX VALIDATION": {
      "value": "STAGING THREADS ENDPOINT FIX VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:96"
      ]
    },
    "STAGING TOKEN ANALYSIS": {
      "value": "STAGING TOKEN ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:57"
      ]
    },
    "STAGING URLS:": {
      "value": "STAGING URLS:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:475"
      ]
    },
    "STAGING WEBSOCKET TEST SUMMARY": {
      "value": "STAGING WEBSOCKET TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:296"
      ]
    },
    "STAGING_API_URL": {
      "value": "STAGING_API_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:26",
        "scripts/test_staging.py:47"
      ]
    },
    "STAGING_AUTH_URL": {
      "value": "STAGING_AUTH_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:27",
        "scripts/test_staging.py:48"
      ]
    },
    "STAGING_DATABASE_URL": {
      "value": "STAGING_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:144"
      ]
    },
    "STAGING_FRONTEND_URL": {
      "value": "STAGING_FRONTEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:28",
        "scripts/test_staging.py:49"
      ]
    },
    "STAGING_JWT_SECRET": {
      "value": "STAGING_JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:117"
      ]
    },
    "STAGING_REDIS_URL": {
      "value": "STAGING_REDIS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:145"
      ]
    },
    "STAGING_URL": {
      "value": "STAGING_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:25",
        "scripts/test_staging.py:46"
      ]
    },
    "STANDALONE CRITICAL CHAT FLOW TEST\n\nenv = get_env()\nThis is a standalone test that validates the critical WebSocket chat flow\nwithout any external service dependencies or pytest fixtures.\n\nBusiness Value: $500K+ ARR - Core product functionality depends on this.\n\nTests the complete flow:\n1. User sends message via WebSocket\n2. Supervisor processes message \n3. Agent events are sent back via WebSocket\n4. User receives complete response\n\nIf this test fails, the chat UI is completely broken.": {
      "value": "STANDALONE CRITICAL CHAT FLOW TEST\n\nenv = get_env()\nThis is a standalone test that validates the critical WebSocket chat flow\nwithout any external service dependencies or pytest fixtures.\n\nBusiness Value: $500K+ ARR - Core product functionality depends on this.\n\nTests the complete flow:\n1. User sends message via WebSocket\n2. Supervisor processes message \n3. Agent events are sent back via WebSocket\n4. User receives complete response\n\nIf this test fails, the chat UI is completely broken.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:3"
      ]
    },
    "STANDALONE CRITICAL CHAT FLOW VALIDATION": {
      "value": "STANDALONE CRITICAL CHAT FLOW VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:121"
      ]
    },
    "STANDALONE WEBSOCKET AGENT EVENTS TEST": {
      "value": "STANDALONE WEBSOCKET AGENT EVENTS TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:256"
      ]
    },
    "STANDALONE WebSocket Agent Events Test - NO FIXTURES\n\nThis test validates that the critical WebSocket events are sent during agent execution.\nNO conftest dependencies, NO complex fixtures, NO real services requirements.\n\nTests the 5 critical WebSocket events:\n1. agent_started\n2. agent_thinking  \n3. tool_executing\n4. tool_completed\n5. agent_completed": {
      "value": "STANDALONE WebSocket Agent Events Test - NO FIXTURES\n\nThis test validates that the critical WebSocket events are sent during agent execution.\nNO conftest dependencies, NO complex fixtures, NO real services requirements.\n\nTests the 5 critical WebSocket events:\n1. agent_started\n2. agent_thinking  \n3. tool_executing\n4. tool_completed\n5. agent_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:2"
      ]
    },
    "STANDARD": {
      "value": "STANDARD",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:502"
      ]
    },
    "STARTING CRITICAL CHAT FLOW TEST": {
      "value": "STARTING CRITICAL CHAT FLOW TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:255"
      ]
    },
    "STARTING DIRECT WEBSOCKET TESTS": {
      "value": "STARTING DIRECT WEBSOCKET TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:297"
      ]
    },
    "STARTING STANDALONE CRITICAL CHAT FLOW TEST": {
      "value": "STARTING STANDALONE CRITICAL CHAT FLOW TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:251"
      ]
    },
    "STARTUP MODULE SUPERVISOR TEST": {
      "value": "STARTUP MODULE SUPERVISOR TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:9"
      ]
    },
    "STARTUP MODULE TESTS FAILED": {
      "value": "STARTUP MODULE TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:90"
      ]
    },
    "STATIC CODE ANALYSIS REPORT": {
      "value": "STATIC CODE ANALYSIS REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:233"
      ]
    },
    "STATISTICS:": {
      "value": "STATISTICS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:163"
      ]
    },
    "STDERR:": {
      "value": "STDERR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:161"
      ]
    },
    "STDOUT:": {
      "value": "STDOUT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:160"
      ]
    },
    "SUCCESS": {
      "value": "SUCCESS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:84",
        "auth_service/tests/test_environment_loading.py:130",
        "auth_service/tests/test_environment_loading.py:180",
        "auth_service/tests/test_environment_loading.py:238",
        "auth_service/tests/test_environment_loading.py:328",
        "scripts/test_websocket_cors_comprehensive.py:133",
        "scripts/test_websocket_injection_fix_complete.py:173",
        "scripts/test_websocket_injection_fix_complete.py:212",
        "scripts/test_websocket_injection_fix_complete.py:244",
        "scripts/test_websocket_injection_fix_complete.py:451"
      ]
    },
    "SUCCESS! Found property with measurement ID": {
      "value": "SUCCESS! Found property with measurement ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:79"
      ]
    },
    "SUCCESS! PostgreSQL version:": {
      "value": "SUCCESS! PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:92",
        "scripts/test_staging_db_direct.py:110"
      ]
    },
    "SUCCESS: ALL 5 CRITICAL EVENTS RECEIVED in": {
      "value": "SUCCESS: ALL 5 CRITICAL EVENTS RECEIVED in",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:66"
      ]
    },
    "SUCCESS: ALL 5 CRITICAL EVENTS RECEIVED!": {
      "value": "SUCCESS: ALL 5 CRITICAL EVENTS RECEIVED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:113"
      ]
    },
    "SUCCESS: ALL DIRECT WEBSOCKET TESTS PASSED!": {
      "value": "SUCCESS: ALL DIRECT WEBSOCKET TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:328"
      ]
    },
    "SUCCESS: ALL TESTS PASSED! The auth system is working correctly.": {
      "value": "SUCCESS: ALL TESTS PASSED! The auth system is working correctly.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:251"
      ]
    },
    "SUCCESS: Agent execution with WebSocket events validated!": {
      "value": "SUCCESS: Agent execution with WebSocket events validated!",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:327"
      ]
    },
    "SUCCESS: Alembic can connect to staging database": {
      "value": "SUCCESS: Alembic can connect to staging database",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:156"
      ]
    },
    "SUCCESS: All 5 critical WebSocket events were sent correctly!": {
      "value": "SUCCESS: All 5 critical WebSocket events were sent correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:185"
      ]
    },
    "SUCCESS: All 5 critical events received!": {
      "value": "SUCCESS: All 5 critical events received!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:172"
      ]
    },
    "SUCCESS: All auth service settings configured correctly!": {
      "value": "SUCCESS: All auth service settings configured correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:52"
      ]
    },
    "SUCCESS: All port configurations are CORRECT!": {
      "value": "SUCCESS: All port configurations are CORRECT!",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:82"
      ]
    },
    "SUCCESS: All tests passed! Staging is correctly simplified.": {
      "value": "SUCCESS: All tests passed! Staging is correctly simplified.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:118"
      ]
    },
    "SUCCESS: All tests passed! The fixes should resolve the auth service integration issues.": {
      "value": "SUCCESS: All tests passed! The fixes should resolve the auth service integration issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:115"
      ]
    },
    "SUCCESS: Auth service health endpoint is reachable": {
      "value": "SUCCESS: Auth service health endpoint is reachable",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:75"
      ]
    },
    "SUCCESS: AuthConfig URL connection successful!": {
      "value": "SUCCESS: AuthConfig URL connection successful!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:207"
      ]
    },
    "SUCCESS: AuthConfig generated correct Cloud SQL URL": {
      "value": "SUCCESS: AuthConfig generated correct Cloud SQL URL",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:143"
      ]
    },
    "SUCCESS: Complete 'Hello' flow with all 5 events in correct order!": {
      "value": "SUCCESS: Complete 'Hello' flow with all 5 events in correct order!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:291"
      ]
    },
    "SUCCESS: Configuration validation passed": {
      "value": "SUCCESS: Configuration validation passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:142",
        "auth_service/test_url_construction.py:79"
      ]
    },
    "SUCCESS: Connection testing completed successfully": {
      "value": "SUCCESS: Connection testing completed successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:320"
      ]
    },
    "SUCCESS: Credential validation passed": {
      "value": "SUCCESS: Credential validation passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:261"
      ]
    },
    "SUCCESS: Direct asyncpg connection successful!": {
      "value": "SUCCESS: Direct asyncpg connection successful!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:69"
      ]
    },
    "SUCCESS: Enhanced tool execution integration validated!": {
      "value": "SUCCESS: Enhanced tool execution integration validated!",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:403"
      ]
    },
    "SUCCESS: Environment validation system is working correctly!": {
      "value": "SUCCESS: Environment validation system is working correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:168"
      ]
    },
    "SUCCESS: Environment variable fixes are working!": {
      "value": "SUCCESS: Environment variable fixes are working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:194"
      ]
    },
    "SUCCESS: No test stubs found in production code.": {
      "value": "SUCCESS: No test stubs found in production code.",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:40"
      ]
    },
    "SUCCESS: No tests found in excluded directories (site-packages, venv, etc.)": {
      "value": "SUCCESS: No tests found in excluded directories (site-packages, venv, etc.)",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:42"
      ]
    },
    "SUCCESS: No violations found! All conftest.py files are at service-level.": {
      "value": "SUCCESS: No violations found! All conftest.py files are at service-level.",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:100"
      ]
    },
    "SUCCESS: Renamed to": {
      "value": "SUCCESS: Renamed to",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:191"
      ]
    },
    "SUCCESS: Simplified agent pipeline E2E test passed!": {
      "value": "SUCCESS: Simplified agent pipeline E2E test passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:416"
      ]
    },
    "SUCCESS: Socket path exists:": {
      "value": "SUCCESS: Socket path exists:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:244"
      ]
    },
    "SUCCESS: TCP connection successful! Version:": {
      "value": "SUCCESS: TCP connection successful! Version:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:104"
      ]
    },
    "SUCCESS: Tool execution events sent correctly!": {
      "value": "SUCCESS: Tool execution events sent correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:246"
      ]
    },
    "SUCCESS: Tool execution events working correctly!": {
      "value": "SUCCESS: Tool execution events working correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:221"
      ]
    },
    "SUCCESS: URL construction is working correctly": {
      "value": "SUCCESS: URL construction is working correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:241"
      ]
    },
    "SUCCESS: URL contains all expected components": {
      "value": "SUCCESS: URL contains all expected components",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:78"
      ]
    },
    "SUCCESS: URLs have expected Cloud SQL format": {
      "value": "SUCCESS: URLs have expected Cloud SQL format",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:114"
      ]
    },
    "SUCCESS: main.py loads environment variables before importing auth modules": {
      "value": "SUCCESS: main.py loads environment variables before importing auth modules",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:360"
      ]
    },
    "SUGGESTION: Function": {
      "value": "SUGGESTION: Function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619"
      ]
    },
    "SUGGESTION: Refactor": {
      "value": "SUGGESTION: Refactor",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:622"
      ]
    },
    "SUITE DETAILS:": {
      "value": "SUITE DETAILS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:369"
      ]
    },
    "SUMMARY": {
      "value": "SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:194",
        "scripts/comprehensive_test_fixer.py:389",
        "scripts/test_agent_recovery_simple.py:157",
        "scripts/test_async_serialization_direct.py:246",
        "scripts/test_collection_audit.py:367",
        "scripts/test_gtm_loading.py:140",
        "scripts/test_log_introspection.py:161",
        "scripts/test_staging_auth_live.py:222",
        "scripts/test_staging_refresh_format.py:147",
        "scripts/test_staging_simplified.py:114"
      ]
    },
    "SUMMARY:": {
      "value": "SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:64",
        "scripts/test_environment_detection.py:171"
      ]
    },
    "SUPERVISOR AGENT IMPORT TEST": {
      "value": "SUPERVISOR AGENT IMPORT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:9"
      ]
    },
    "SYSTEM PERFORMANCE:": {
      "value": "SYSTEM PERFORMANCE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:639"
      ]
    },
    "Safety check prevented file splitting:": {
      "value": "Safety check prevented file splitting:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:840"
      ]
    },
    "Sales Assistant": {
      "value": "Sales Assistant",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:214"
      ]
    },
    "Same refresh token returned at refresh": {
      "value": "Same refresh token returned at refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:64"
      ]
    },
    "Same refresh token should not be usable twice": {
      "value": "Same refresh token should not be usable twice",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:228"
      ]
    },
    "Sample Events:": {
      "value": "Sample Events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:132"
      ]
    },
    "Sample error for testing": {
      "value": "Sample error for testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:429"
      ]
    },
    "Save detailed JSON report to file": {
      "value": "Save detailed JSON report to file",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:54"
      ]
    },
    "Saving test credentials...": {
      "value": "Saving test credentials...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:304"
      ]
    },
    "Savings percentage must be between 0-50%": {
      "value": "Savings percentage must be between 0-50%",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:408"
      ]
    },
    "Scale horizontally to reduce CPU load": {
      "value": "Scale horizontally to reduce CPU load",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:387"
      ]
    },
    "Scan Date:": {
      "value": "Scan Date:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:309"
      ]
    },
    "Scan all test directories in codebase": {
      "value": "Scan all test directories in codebase",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:375"
      ]
    },
    "Scan complete:": {
      "value": "Scan complete:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:91"
      ]
    },
    "Scan completed. Found": {
      "value": "Scan completed. Found",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:371"
      ]
    },
    "Scan for test stubs": {
      "value": "Scan for test stubs",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:355"
      ]
    },
    "Scan specific directory": {
      "value": "Scan specific directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:377"
      ]
    },
    "Scan specific file": {
      "value": "Scan specific file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:379"
      ]
    },
    "Scanned": {
      "value": "Scanned",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718"
      ]
    },
    "Scanning": {
      "value": "Scanning",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:67",
        "scripts/migrate_test_ids.py:244",
        "scripts/remove_test_stubs.py:245",
        "scripts/test_failure_scanner.py:79",
        "scripts/test_mock_violations_standalone.py:48"
      ]
    },
    "Scanning all e2e tests for issues...": {
      "value": "Scanning all e2e tests for issues...",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:290"
      ]
    },
    "Scanning directory:": {
      "value": "Scanning directory:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:103"
      ]
    },
    "Scanning file:": {
      "value": "Scanning file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:130"
      ]
    },
    "Scanning for test failures...": {
      "value": "Scanning for test failures...",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:53"
      ]
    },
    "Scanning for test size violations...": {
      "value": "Scanning for test size violations...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:70"
      ]
    },
    "Scanning for test stubs...": {
      "value": "Scanning for test stubs...",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:368"
      ]
    },
    "Scanning for test violations...": {
      "value": "Scanning for test violations...",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:699"
      ]
    },
    "Scanning recent test reports...": {
      "value": "Scanning recent test reports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:174"
      ]
    },
    "Scanning test files in:": {
      "value": "Scanning test files in:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:209"
      ]
    },
    "Scanning tests...": {
      "value": "Scanning tests...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:784"
      ]
    },
    "Scanning:": {
      "value": "Scanning:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:98"
      ]
    },
    "Scenario:": {
      "value": "Scenario:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:341"
      ]
    },
    "Schedule tech debt sprint to address": {
      "value": "Schedule tech debt sprint to address",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:257"
      ]
    },
    "Script to add pytest markers to test files based on their dependencies": {
      "value": "Script to add pytest markers to test files based on their dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:3"
      ]
    },
    "Script to fix common syntax errors in test files": {
      "value": "Script to fix common syntax errors in test files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:2"
      ]
    },
    "Script to run critical agent pipeline test with proper environment configuration.": {
      "value": "Script to run critical agent pipeline test with proper environment configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:2"
      ]
    },
    "Script to standardize L3 test file naming convention\nRenames test_*_l3.py files to test_*.py and updates references": {
      "value": "Script to standardize L3 test file naming convention\nRenames test_*_l3.py files to test_*.py and updates references",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:2"
      ]
    },
    "Scripts": {
      "value": "Scripts",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:27",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Searched locations:": {
      "value": "Searched locations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:122"
      ]
    },
    "Sec-WebSocket-Key": {
      "value": "Sec-WebSocket-Key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:186"
      ]
    },
    "Sec-WebSocket-Version": {
      "value": "Sec-WebSocket-Version",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:185"
      ]
    },
    "Second allocation failed:": {
      "value": "Second allocation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:168"
      ]
    },
    "Second refresh should succeed": {
      "value": "Second refresh should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:47"
      ]
    },
    "Second session state isolation should succeed": {
      "value": "Second session state isolation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:197"
      ]
    },
    "Second token should have later or equal iat": {
      "value": "Second token should have later or equal iat",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:116"
      ]
    },
    "Secret Access": {
      "value": "Secret Access",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:238"
      ]
    },
    "Secret Manager": {
      "value": "Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:114",
        "scripts/test_staging_config.py:129",
        "scripts/test_staging_config.py:138"
      ]
    },
    "Secret Manager Issues:": {
      "value": "Secret Manager Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:222"
      ]
    },
    "Secret Manager not available": {
      "value": "Secret Manager not available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:86"
      ]
    },
    "Secret access test failed:": {
      "value": "Secret access test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:173"
      ]
    },
    "Secret length:": {
      "value": "Secret length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:109"
      ]
    },
    "Secret management check failed:": {
      "value": "Secret management check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:181"
      ]
    },
    "Secret validation failed:": {
      "value": "Secret validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:174"
      ]
    },
    "SecretManager": {
      "value": "SecretManager",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:270",
        "scripts/test_secret_manager_builder_critical.py:402",
        "scripts/test_secret_manager_builder_critical.py:590"
      ]
    },
    "SecretManager (FAILED)": {
      "value": "SecretManager (FAILED)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:301"
      ]
    },
    "SecretManager failed to load:": {
      "value": "SecretManager failed to load:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:299"
      ]
    },
    "SecretManager with GCP integration": {
      "value": "SecretManager with GCP integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:291"
      ]
    },
    "Secrets failed to load": {
      "value": "Secrets failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:68"
      ]
    },
    "SecurePass123!": {
      "value": "SecurePass123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:24",
        "scripts/test_signup_flow_manual.py:25",
        "scripts/test_signup_flow_manual.py:142"
      ]
    },
    "Security issue: Cannot use wildcard origin with credentials": {
      "value": "Security issue: Cannot use wildcard origin with credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:253"
      ]
    },
    "Security level:": {
      "value": "Security level:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:178"
      ]
    },
    "Security validation tests": {
      "value": "Security validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:106"
      ]
    },
    "Security violations:": {
      "value": "Security violations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:520"
      ]
    },
    "See": {
      "value": "See",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:392"
      ]
    },
    "Seed ClickHouse with test analytics data.": {
      "value": "Seed ClickHouse with test analytics data.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:299"
      ]
    },
    "Seed PostgreSQL with test fixture data.": {
      "value": "Seed PostgreSQL with test fixture data.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:108"
      ]
    },
    "Seed Redis with test fixture data.": {
      "value": "Seed Redis with test fixture data.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:240"
      ]
    },
    "Seed test data for concurrent user testing.": {
      "value": "Seed test data for concurrent user testing.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:45"
      ]
    },
    "Seeded": {
      "value": "Seeded",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:287"
      ]
    },
    "Seeding ClickHouse test data...": {
      "value": "Seeding ClickHouse test data...",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:300"
      ]
    },
    "Seeding PostgreSQL test data...": {
      "value": "Seeding PostgreSQL test data...",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:109"
      ]
    },
    "Seeding Redis test data...": {
      "value": "Seeding Redis test data...",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:241"
      ]
    },
    "Seeding test user data": {
      "value": "Seeding test user data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:46"
      ]
    },
    "Send error:": {
      "value": "Send error:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:83"
      ]
    },
    "Sending 5 critical WebSocket events...": {
      "value": "Sending 5 critical WebSocket events...",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:81",
        "scripts/test_websocket_direct.py:146"
      ]
    },
    "Sending test message:": {
      "value": "Sending test message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:34",
        "scripts/test_websocket_manual.py:85"
      ]
    },
    "Sequential execution total:": {
      "value": "Sequential execution total:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:222"
      ]
    },
    "Sequential time:": {
      "value": "Sequential time:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:147"
      ]
    },
    "Sequential:": {
      "value": "Sequential:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:162"
      ]
    },
    "Service Availability Checker": {
      "value": "Service Availability Checker",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:162",
        "scripts/test_service_health_simple.py:159"
      ]
    },
    "Service Coordination Fix Validation": {
      "value": "Service Coordination Fix Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:405"
      ]
    },
    "Service Dependency Validation": {
      "value": "Service Dependency Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:133"
      ]
    },
    "Service Details:": {
      "value": "Service Details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:52"
      ]
    },
    "Service Health Checking Test Suite": {
      "value": "Service Health Checking Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:145",
        "scripts/test_service_health_simple.py:142"
      ]
    },
    "Service ID:": {
      "value": "Service ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:75",
        "scripts/test_auth_fix_simple.py:46",
        "scripts/test_auth_service_integration_fix.py:49",
        "scripts/test_auth_service_integration_fix.py:88",
        "scripts/test_backend_auth_config.py:110"
      ]
    },
    "Service Initialization Order": {
      "value": "Service Initialization Order",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:239"
      ]
    },
    "Service Readiness Assessment:": {
      "value": "Service Readiness Assessment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:90"
      ]
    },
    "Service Secret Configured:": {
      "value": "Service Secret Configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:47",
        "scripts/test_auth_service_integration_fix.py:50",
        "scripts/test_auth_service_integration_fix.py:89",
        "scripts/test_backend_auth_config.py:112"
      ]
    },
    "Service Secret configured:": {
      "value": "Service Secret configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:76"
      ]
    },
    "Service Startup Environment Test Suite": {
      "value": "Service Startup Environment Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:172"
      ]
    },
    "Service Startup:": {
      "value": "Service Startup:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:113"
      ]
    },
    "Service Status Results:": {
      "value": "Service Status Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:117"
      ]
    },
    "Service URL:": {
      "value": "Service URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:421"
      ]
    },
    "Service URLs:": {
      "value": "Service URLs:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:93"
      ]
    },
    "Service availability test failed:": {
      "value": "Service availability test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:136"
      ]
    },
    "Service count": {
      "value": "Service count",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:359"
      ]
    },
    "Service discovery failed with retry logic": {
      "value": "Service discovery failed with retry logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:219"
      ]
    },
    "Service discovery timing fixes working correctly": {
      "value": "Service discovery timing fixes working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:222"
      ]
    },
    "Service discovery timing test failed:": {
      "value": "Service discovery timing test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:226"
      ]
    },
    "Service instances tested:": {
      "value": "Service instances tested:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:517"
      ]
    },
    "Service should be ready after marking": {
      "value": "Service should be ready after marking",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:147"
      ]
    },
    "Service should not be ready initially": {
      "value": "Service should not be ready initially",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:132"
      ]
    },
    "Service should not be ready while initializing": {
      "value": "Service should not be ready while initializing",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:136"
      ]
    },
    "Service should not be ready while starting": {
      "value": "Service should not be ready while starting",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:140"
      ]
    },
    "Service temporarily unavailable": {
      "value": "Service temporarily unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:126"
      ]
    },
    "Service token decoded successfully:": {
      "value": "Service token decoded successfully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:42"
      ]
    },
    "Service token:": {
      "value": "Service token:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:59",
        "scripts/test_jwt_fix.py:36"
      ]
    },
    "Service-to-service authentication secret": {
      "value": "Service-to-service authentication secret",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:93"
      ]
    },
    "Service:": {
      "value": "Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:142"
      ]
    },
    "Services": {
      "value": "Services",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:306"
      ]
    },
    "Services Affected:": {
      "value": "Services Affected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:59"
      ]
    },
    "Services Analyzed: 3": {
      "value": "Services Analyzed: 3",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:359"
      ]
    },
    "Services are ready for testing!": {
      "value": "Services are ready for testing!",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:207"
      ]
    },
    "Services available at:": {
      "value": "Services available at:",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:109"
      ]
    },
    "Services got same port - conflict not prevented": {
      "value": "Services got same port - conflict not prevented",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:171"
      ]
    },
    "Services will be properly detected when available.": {
      "value": "Services will be properly detected when available.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:173"
      ]
    },
    "Services:": {
      "value": "Services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:197"
      ]
    },
    "Session": {
      "value": "Session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:196"
      ]
    },
    "Session ID should be regenerated": {
      "value": "Session ID should be regenerated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:156"
      ]
    },
    "Session Persistence": {
      "value": "Session Persistence",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:349"
      ]
    },
    "Session Test Data Factory\nCreates test sessions with proper expiration and metadata.\nSupports both active and expired sessions for comprehensive testing.": {
      "value": "Session Test Data Factory\nCreates test sessions with proper expiration and metadata.\nSupports both active and expired sessions for comprehensive testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:1"
      ]
    },
    "Session activity tracking verified": {
      "value": "Session activity tracking verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:274"
      ]
    },
    "Session cleanup test - potential asyncio event loop issues": {
      "value": "Session cleanup test - potential asyncio event loop issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:86"
      ]
    },
    "Session expiration must be after creation time": {
      "value": "Session expiration must be after creation time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:132"
      ]
    },
    "Session expired": {
      "value": "Session expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:200"
      ]
    },
    "Session fingerprint mismatch": {
      "value": "Session fingerprint mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:93"
      ]
    },
    "Session hijacking prevention verified": {
      "value": "Session hijacking prevention verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:110"
      ]
    },
    "Session invalidation cascade verified": {
      "value": "Session invalidation cascade verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:335"
      ]
    },
    "Session mismatch should be blocked": {
      "value": "Session mismatch should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:58"
      ]
    },
    "Session must be invalid after logout": {
      "value": "Session must be invalid after logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:99"
      ]
    },
    "Session must persist through service restart": {
      "value": "Session must persist through service restart",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:35"
      ]
    },
    "Session must work during database failover": {
      "value": "Session must work during database failover",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:54"
      ]
    },
    "Session not flagged as high risk": {
      "value": "Session not flagged as high risk",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:272"
      ]
    },
    "Session not found or expired": {
      "value": "Session not found or expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:163",
        "auth_service/tests/test_session_security_cycles_36_40.py:312"
      ]
    },
    "Session report saved to:": {
      "value": "Session report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:196"
      ]
    },
    "Session timeout enforcement verified": {
      "value": "Session timeout enforcement verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:208"
      ]
    },
    "Session updates must sync within 2 seconds": {
      "value": "Session updates must sync within 2 seconds",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:81"
      ]
    },
    "Session.": {
      "value": "Session.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:202"
      ]
    },
    "SessionFactory": {
      "value": "SessionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:15"
      ]
    },
    "Set": {
      "value": "Set",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:47",
        "scripts/run_critical_test.py:40",
        "scripts/run_critical_test.py:41",
        "scripts/run_critical_test.py:42",
        "scripts/run_critical_test.py:43"
      ]
    },
    "Set DATABASE_URL in .env.mock": {
      "value": "Set DATABASE_URL in .env.mock",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:151"
      ]
    },
    "Set GEMINI_API_KEY directly": {
      "value": "Set GEMINI_API_KEY directly",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:19"
      ]
    },
    "Set GEMINI_API_KEY from your .env file or disable real LLM testing": {
      "value": "Set GEMINI_API_KEY from your .env file or disable real LLM testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:136"
      ]
    },
    "Set all Google/Gemini API key variants": {
      "value": "Set all Google/Gemini API key variants",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:26"
      ]
    },
    "Set up ACTUAL staging credentials from Secret Manager": {
      "value": "Set up ACTUAL staging credentials from Secret Manager",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:48"
      ]
    },
    "Set up minimal staging environment variables": {
      "value": "Set up minimal staging environment variables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:49"
      ]
    },
    "Set up staging environment variables": {
      "value": "Set up staging environment variables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:45"
      ]
    },
    "Set up the test environment.": {
      "value": "Set up the test environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:28"
      ]
    },
    "Setting critical variables:": {
      "value": "Setting critical variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:41"
      ]
    },
    "Setting up real services for auth_service tests...": {
      "value": "Setting up real services for auth_service tests...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:100"
      ]
    },
    "Setting up test environment...": {
      "value": "Setting up test environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:24"
      ]
    },
    "Settings Enabled:": {
      "value": "Settings Enabled:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:86"
      ]
    },
    "Setup E2E Test Ports for Docker and Local Testing\n\nThis script ensures E2E tests use the correct ports based on the execution environment.\nIt detects whether tests are running locally, in Docker, or in CI and configures\nports accordingly.\n\nBVJ:\n- Segment: Platform/Internal\n- Business Goal: Ensure reliable test execution\n- Value Impact: Prevents port conflicts and test failures\n- Strategic Impact: Enables parallel testing and CI/CD reliability": {
      "value": "Setup E2E Test Ports for Docker and Local Testing\n\nThis script ensures E2E tests use the correct ports based on the execution environment.\nIt detects whether tests are running locally, in Docker, or in CI and configures\nports accordingly.\n\nBVJ:\n- Segment: Platform/Internal\n- Business Goal: Ensure reliable test execution\n- Value Impact: Prevents port conflicts and test failures\n- Strategic Impact: Enables parallel testing and CI/CD reliability",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:3"
      ]
    },
    "Setup E2E test ports": {
      "value": "Setup E2E test ports",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:49"
      ]
    },
    "Setup and validate test environment": {
      "value": "Setup and validate test environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:345"
      ]
    },
    "Setup real services infrastructure for auth service tests.\n    \n    ZERO MOCKS: Uses actual PostgreSQL and Redis connections.": {
      "value": "Setup real services infrastructure for auth service tests.\n    \n    ZERO MOCKS: Uses actual PostgreSQL and Redis connections.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:96"
      ]
    },
    "Setup test accounts for staging environment testing.\nThis script creates test accounts with pre-configured OAuth tokens for agent testing.": {
      "value": "Setup test accounts for staging environment testing.\nThis script creates test accounts with pre-configured OAuth tokens for agent testing.",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:3"
      ]
    },
    "Severe (>50ms):": {
      "value": "Severe (>50ms):",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:121",
        "scripts/test_intensive_serialization.py:212"
      ]
    },
    "Severe blocks (>50ms):": {
      "value": "Severe blocks (>50ms):",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:302"
      ]
    },
    "Severity:": {
      "value": "Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:331"
      ]
    },
    "Short time span": {
      "value": "Short time span",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:304",
        "scripts/test_data_validator_backup.py:574"
      ]
    },
    "Should accept JSON output format": {
      "value": "Should accept JSON output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:170"
      ]
    },
    "Should accept table output format (default)": {
      "value": "Should accept table output format (default)",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:162"
      ]
    },
    "Should be ALLOWED:": {
      "value": "Should be ALLOWED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:75",
        "scripts/test_cors_ssot_compliance.py:121"
      ]
    },
    "Should be BLOCKED:": {
      "value": "Should be BLOCKED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:83",
        "scripts/test_cors_ssot_compliance.py:129"
      ]
    },
    "Should be able to send test message": {
      "value": "Should be able to send test message",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:115"
      ]
    },
    "Should be connected after session setup": {
      "value": "Should be connected after session setup",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:107"
      ]
    },
    "Should fail gracefully when missing required arguments": {
      "value": "Should fail gracefully when missing required arguments",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:96"
      ]
    },
    "Should fail gracefully with invalid run ID": {
      "value": "Should fail gracefully with invalid run ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:149"
      ]
    },
    "Should fail gracefully with invalid token": {
      "value": "Should fail gracefully with invalid token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:127"
      ]
    },
    "Should fail gracefully with non-existent repository": {
      "value": "Should fail gracefully with non-existent repository",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:140"
      ]
    },
    "Should fail when --wait-for-completion used without --workflow-name": {
      "value": "Should fail when --wait-for-completion used without --workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:96",
        "scripts/test_verify_workflow_status_corrected.py:105"
      ]
    },
    "Should fail when missing required arguments": {
      "value": "Should fail when missing required arguments",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:89"
      ]
    },
    "Should fail when no GitHub token provided": {
      "value": "Should fail when no GitHub token provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:118"
      ]
    },
    "Should fail when no token provided": {
      "value": "Should fail when no token provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:105"
      ]
    },
    "Should fail with invalid token": {
      "value": "Should fail with invalid token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:112"
      ]
    },
    "Should fail with non-existent repository": {
      "value": "Should fail with non-existent repository",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:121"
      ]
    },
    "Should fail with non-existent workflow": {
      "value": "Should fail with non-existent workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:130"
      ]
    },
    "Should fail:": {
      "value": "Should fail:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:178",
        "scripts/test_error_monitor_logic.py:202"
      ]
    },
    "Should have 1 pre-deployment error": {
      "value": "Should have 1 pre-deployment error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:223"
      ]
    },
    "Should have 2 post-deployment errors": {
      "value": "Should have 2 post-deployment errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:224"
      ]
    },
    "Should have actual permissions if provided": {
      "value": "Should have actual permissions if provided",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:262"
      ]
    },
    "Should have real permissions": {
      "value": "Should have real permissions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:170"
      ]
    },
    "Should not be the placeholder email": {
      "value": "Should not be the placeholder email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:110"
      ]
    },
    "Should not contain placeholder email": {
      "value": "Should not contain placeholder email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:261"
      ]
    },
    "Should not use placeholder email": {
      "value": "Should not use placeholder email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:169"
      ]
    },
    "Should return 503 for SSL certificate issues, got": {
      "value": "Should return 503 for SSL certificate issues, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:381"
      ]
    },
    "Should use ASGI3 interface": {
      "value": "Should use ASGI3 interface",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:135"
      ]
    },
    "Show category details": {
      "value": "Show category details",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:440"
      ]
    },
    "Show category summary": {
      "value": "Show category summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:781"
      ]
    },
    "Show current status and exit": {
      "value": "Show current status and exit",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:925"
      ]
    },
    "Show detailed output for each import": {
      "value": "Show detailed output for each import",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:50"
      ]
    },
    "Show detailed real e2e test information": {
      "value": "Show detailed real e2e test information",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:167"
      ]
    },
    "Show recommendations": {
      "value": "Show recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:437"
      ]
    },
    "Show service status": {
      "value": "Show service status",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:186"
      ]
    },
    "Show slowest tests": {
      "value": "Show slowest tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:509"
      ]
    },
    "Show status of test services using SSOT DockerTestUtility.": {
      "value": "Show status of test services using SSOT DockerTestUtility.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:93"
      ]
    },
    "Show test history": {
      "value": "Show test history",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:444",
        "scripts/test_execution_tracker.py:772"
      ]
    },
    "Show test system overview": {
      "value": "Show test system overview",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:434"
      ]
    },
    "Show that AsyncClient without context manager can cause issues.": {
      "value": "Show that AsyncClient without context manager can cause issues.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:111"
      ]
    },
    "Show the correct way to use AsyncClient.": {
      "value": "Show the correct way to use AsyncClient.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:127"
      ]
    },
    "Show warning messages": {
      "value": "Show warning messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:515"
      ]
    },
    "Show what would be changed without making changes": {
      "value": "Show what would be changed without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:319"
      ]
    },
    "Show what would be changed without modifying files": {
      "value": "Show what would be changed without modifying files",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:349"
      ]
    },
    "Show what would be done without making changes": {
      "value": "Show what would be done without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:235"
      ]
    },
    "Shutting down test service monitor...": {
      "value": "Shutting down test service monitor...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:318"
      ]
    },
    "Shutting down...": {
      "value": "Shutting down...",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:363"
      ]
    },
    "Similar:": {
      "value": "Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:659"
      ]
    },
    "Simple Data Pipeline Integrity Test\nTests the actual running services without test framework overhead": {
      "value": "Simple Data Pipeline Integrity Test\nTests the actual running services without test framework overhead",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:2"
      ]
    },
    "Simple Dict": {
      "value": "Simple Dict",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:149"
      ]
    },
    "Simple WebSocket Connection Test\n\nTests basic WebSocket connectivity to validate CORS configuration.": {
      "value": "Simple WebSocket Connection Test\n\nTests basic WebSocket connectivity to validate CORS configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:2"
      ]
    },
    "Simple failing tests for critical bugs - no complex setup required.\nThese tests demonstrate the bugs without requiring database connections.": {
      "value": "Simple failing tests for critical bugs - no complex setup required.\nThese tests demonstrate the bugs without requiring database connections.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:1"
      ]
    },
    "Simple frontend test runner": {
      "value": "Simple frontend test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:74"
      ]
    },
    "Simple frontend test runner for Netra AI Platform\nMinimal dependencies for use by test_runner.py": {
      "value": "Simple frontend test runner for Netra AI Platform\nMinimal dependencies for use by test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:2"
      ]
    },
    "Simple functional test to verify WebSocket works in DEV MODE.\n\nThis script tests the actual WebSocket connection functionality by:\n1. Starting the development server\n2. Testing secure WebSocket connection\n3. Verifying bidirectional message flow\n4. Testing authentication and CORS\n5. Cleaning up resources": {
      "value": "Simple functional test to verify WebSocket works in DEV MODE.\n\nThis script tests the actual WebSocket connection functionality by:\n1. Starting the development server\n2. Testing secure WebSocket connection\n3. Verifying bidirectional message flow\n4. Testing authentication and CORS\n5. Cleaning up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:2"
      ]
    },
    "Simple standalone test to demonstrate WebSocket serialization blocking issue.\n\nThis test demonstrates that the current WebSocket manager uses synchronous \nserialization which blocks the event loop during complex message processing.": {
      "value": "Simple standalone test to demonstrate WebSocket serialization blocking issue.\n\nThis test demonstrates that the current WebSocket manager uses synchronous \nserialization which blocks the event loop during complex message processing.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:2"
      ]
    },
    "Simple test fix loop - runs tests and fixes issues iteratively.": {
      "value": "Simple test fix loop - runs tests and fixes issues iteratively.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:2"
      ]
    },
    "Simple test for refresh endpoint field naming without database dependencies.": {
      "value": "Simple test for refresh endpoint field naming without database dependencies.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:1"
      ]
    },
    "Simple test of corpus admin agent with mock LLM manager.": {
      "value": "Simple test of corpus admin agent with mock LLM manager.",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:2"
      ]
    },
    "Simple test runner for presence detection tests": {
      "value": "Simple test runner for presence detection tests",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:2"
      ]
    },
    "Simple test script to validate Auth Service integration fixes for GCP staging.": {
      "value": "Simple test script to validate Auth Service integration fixes for GCP staging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:2"
      ]
    },
    "Simple test script to verify service startup orchestration.\nTests the core startup sequence without complex integration.": {
      "value": "Simple test script to verify service startup orchestration.\nTests the core startup sequence without complex integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:2"
      ]
    },
    "Simple test script to verify the improved service health checking mechanism works.\nThis focuses on the core functionality without complex test fixtures.": {
      "value": "Simple test script to verify the improved service health checking mechanism works.\nThis focuses on the core functionality without complex test fixtures.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:2"
      ]
    },
    "Simple test to isolate WebSocket serialization behavior.": {
      "value": "Simple test to isolate WebSocket serialization behavior.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:2"
      ]
    },
    "Simple test to validate Auth service database URL construction for staging.\n\nThis test focuses on URL construction logic rather than actual connections,\nsince Unix socket connections cannot be tested on Windows.": {
      "value": "Simple test to validate Auth service database URL construction for staging.\n\nThis test focuses on URL construction logic rather than actual connections,\nsince Unix socket connections cannot be tested on Windows.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:1"
      ]
    },
    "Simplified Agent Pipeline E2E Test\n\nTests the complete agent execution pipeline without complex fixtures or external dependencies.\nThis validates the core agent orchestration flow with WebSocket event integration.\n\nTests:\n1. Agent pipeline can execute multiple agent types\n2. State is properly passed between pipeline stages\n3. WebSocket events are sent throughout the pipeline\n4. Tool execution works within the pipeline": {
      "value": "Simplified Agent Pipeline E2E Test\n\nTests the complete agent execution pipeline without complex fixtures or external dependencies.\nThis validates the core agent orchestration flow with WebSocket event integration.\n\nTests:\n1. Agent pipeline can execute multiple agent types\n2. State is properly passed between pipeline stages\n3. WebSocket events are sent throughout the pipeline\n4. Tool execution works within the pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:2"
      ]
    },
    "Simulate WebSocket load with mixed serialization paths.": {
      "value": "Simulate WebSocket load with mixed serialization paths.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:170"
      ]
    },
    "Simulate async serialization like _serialize_message_safely_async.": {
      "value": "Simulate async serialization like _serialize_message_safely_async.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:45"
      ]
    },
    "Simulate failure conditions": {
      "value": "Simulate failure conditions",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:399"
      ]
    },
    "Simulate successful reconnection on 2nd attempt.": {
      "value": "Simulate successful reconnection on 2nd attempt.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:138"
      ]
    },
    "Simulate tests without real connections": {
      "value": "Simulate tests without real connections",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:290"
      ]
    },
    "Simulating complete 'Hello' processing flow...": {
      "value": "Simulating complete 'Hello' processing flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:247"
      ]
    },
    "Single operation blocking test:": {
      "value": "Single operation blocking test:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:242"
      ]
    },
    "Size violations addressed:": {
      "value": "Size violations addressed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:289"
      ]
    },
    "Skip environment setup (use existing environment variables)": {
      "value": "Skip environment setup (use existing environment variables)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:89"
      ]
    },
    "Skipped (exists):": {
      "value": "Skipped (exists):",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:480"
      ]
    },
    "Skipped:": {
      "value": "Skipped:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:463"
      ]
    },
    "Skipping": {
      "value": "Skipping",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:815",
        "scripts/continuous_e2e_test_runner.py:211",
        "scripts/test_failure_tracker.py:86"
      ]
    },
    "Skipping tool execution event test": {
      "value": "Skipping tool execution event test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:250"
      ]
    },
    "Slow tests that may take longer to complete": {
      "value": "Slow tests that may take longer to complete",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:100"
      ]
    },
    "Smart Docker Manager for Test and Dev environments": {
      "value": "Smart Docker Manager for Test and Dev environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:205"
      ]
    },
    "Solution: SecretManagerBuilder with unified pattern": {
      "value": "Solution: SecretManagerBuilder with unified pattern",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:537"
      ]
    },
    "Some WebSocket events may not be sent": {
      "value": "Some WebSocket events may not be sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:153"
      ]
    },
    "Some WebSocket migration tests FAILED!": {
      "value": "Some WebSocket migration tests FAILED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:234"
      ]
    },
    "Some direct tests failed": {
      "value": "Some direct tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:284"
      ]
    },
    "Some finding": {
      "value": "Some finding",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:384",
        "scripts/test_data_validator_backup.py:397",
        "scripts/test_data_validator_backup.py:414"
      ]
    },
    "Some recommendation": {
      "value": "Some recommendation",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:372",
        "scripts/test_data_validator_backup.py:398",
        "scripts/test_data_validator_backup.py:415"
      ]
    },
    "Some requests should succeed": {
      "value": "Some requests should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:612"
      ]
    },
    "Some services are not available!": {
      "value": "Some services are not available!",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:111"
      ]
    },
    "Some tests failed - see details above": {
      "value": "Some tests failed - see details above",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:313"
      ]
    },
    "Some tests failed. Check the output above.": {
      "value": "Some tests failed. Check the output above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:100"
      ]
    },
    "Some text data": {
      "value": "Some text data",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:20"
      ]
    },
    "Sorry, I encountered an error:": {
      "value": "Sorry, I encountered an error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:188"
      ]
    },
    "Source": {
      "value": "Source",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:163"
      ]
    },
    "Spawned Process B agent for": {
      "value": "Spawned Process B agent for",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:117"
      ]
    },
    "Specific files to check (default: all test files)": {
      "value": "Specific files to check (default: all test files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:265"
      ]
    },
    "Specific module to test (e.g., netra_backend.app.services)": {
      "value": "Specific module to test (e.g., netra_backend.app.services)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:46"
      ]
    },
    "Specific services": {
      "value": "Specific services",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:211"
      ]
    },
    "Specific services to start (e.g., postgres-test redis-test)": {
      "value": "Specific services to start (e.g., postgres-test redis-test)",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:176"
      ]
    },
    "Specific test files or directories": {
      "value": "Specific test files or directories",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:367"
      ]
    },
    "Specific test files or directories to run": {
      "value": "Specific test files or directories to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:484"
      ]
    },
    "Specific test files or patterns to run": {
      "value": "Specific test files or patterns to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:389"
      ]
    },
    "Specific test to prevent the staging infinite refresh loop scenario": {
      "value": "Specific test to prevent the staging infinite refresh loop scenario",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:266"
      ]
    },
    "Split": {
      "value": "Split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:362",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "Split '": {
      "value": "Split '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:331"
      ]
    },
    "Split from": {
      "value": "Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:556"
      ]
    },
    "Split into": {
      "value": "Split into",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:113",
        "scripts/compliance/test_limits_checker.py:157",
        "scripts/compliance/test_size_validator.py:194"
      ]
    },
    "Split into multiple focused test functions or extract helper methods": {
      "value": "Split into multiple focused test functions or extract helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:233"
      ]
    },
    "Split large test files into smaller, focused test modules": {
      "value": "Split large test files into smaller, focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:223"
      ]
    },
    "Split large test functions into smaller, focused tests": {
      "value": "Split large test functions into smaller, focused tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:450"
      ]
    },
    "Splitting": {
      "value": "Splitting",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:259"
      ]
    },
    "Splitting suggestions for": {
      "value": "Splitting suggestions for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:719"
      ]
    },
    "Splitting suggestions:": {
      "value": "Splitting suggestions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:48"
      ]
    },
    "Stability": {
      "value": "Stability",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:103"
      ]
    },
    "Staging": {
      "value": "Staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:202",
        "scripts/test_gtm_loading.py:100"
      ]
    },
    "Staging Authentication Diagnostic Tool": {
      "value": "Staging Authentication Diagnostic Tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:197"
      ]
    },
    "Staging CORS:": {
      "value": "Staging CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:91"
      ]
    },
    "Staging Configuration Test": {
      "value": "Staging Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:29"
      ]
    },
    "Staging Deployment Impact:": {
      "value": "Staging Deployment Impact:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:99"
      ]
    },
    "Staging Deployment Ready:": {
      "value": "Staging Deployment Ready:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:200"
      ]
    },
    "Staging Endpoint Test:": {
      "value": "Staging Endpoint Test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:110"
      ]
    },
    "Staging Environment": {
      "value": "Staging Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:143"
      ]
    },
    "Staging Environment Analysis:": {
      "value": "Staging Environment Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:178"
      ]
    },
    "Staging Environment Test Script\nVerifies that the staging environment is properly configured and all components are communicating": {
      "value": "Staging Environment Test Script\nVerifies that the staging environment is properly configured and all components are communicating",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:2"
      ]
    },
    "Staging SSL Configuration": {
      "value": "Staging SSL Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:266"
      ]
    },
    "Staging Test Agent": {
      "value": "Staging Test Agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:109"
      ]
    },
    "Staging WebSocket tests FAILED": {
      "value": "Staging WebSocket tests FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:463"
      ]
    },
    "Staging configuration validation failed": {
      "value": "Staging configuration validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:75"
      ]
    },
    "Staging environment is ready for WebSocket functionality": {
      "value": "Staging environment is ready for WebSocket functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:461"
      ]
    },
    "Staging environment specific tests": {
      "value": "Staging environment specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:95"
      ]
    },
    "Staging should not allow dev login": {
      "value": "Staging should not allow dev login",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:149"
      ]
    },
    "Staging should not allow mock auth": {
      "value": "Staging should not allow mock auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:150"
      ]
    },
    "Staging:": {
      "value": "Staging:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:104"
      ]
    },
    "Standalone Mock Policy Violation Test\n\nThis test script enforces the \"MOCKS = Abomination\" policy from CLAUDE.md\nby scanning all test files and failing when mocks are detected.": {
      "value": "Standalone Mock Policy Violation Test\n\nThis test script enforces the \"MOCKS = Abomination\" policy from CLAUDE.md\nby scanning all test files and failing when mocks are detected.",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:2"
      ]
    },
    "Standalone Tests": {
      "value": "Standalone Tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:150",
        "scripts/compliance/test_fixer.py:151",
        "scripts/compliance/test_fixer.py:152"
      ]
    },
    "Standalone WebSocket Infrastructure Performance Validation\n\nThis standalone test validates the enhanced WebSocket infrastructure performance\nimprovements without relying on the pytest framework.": {
      "value": "Standalone WebSocket Infrastructure Performance Validation\n\nThis standalone test validates the enhanced WebSocket infrastructure performance\nimprovements without relying on the pytest framework.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:2"
      ]
    },
    "Standalone test to verify WebSocket functionality without pytest fixtures": {
      "value": "Standalone test to verify WebSocket functionality without pytest fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:2"
      ]
    },
    "Standard pytest": {
      "value": "Standard pytest",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:105"
      ]
    },
    "Standard rename failed:": {
      "value": "Standard rename failed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:151"
      ]
    },
    "Start all services using dev launcher.": {
      "value": "Start all services using dev launcher.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:111"
      ]
    },
    "Start full E2E service stack (backend, auth)": {
      "value": "Start full E2E service stack (backend, auth)",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:168"
      ]
    },
    "Start monitoring for event loop blocks": {
      "value": "Start monitoring for event loop blocks",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:97"
      ]
    },
    "Start test services": {
      "value": "Start test services",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:164"
      ]
    },
    "Start test services for frontend real service testing": {
      "value": "Start test services for frontend real service testing",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:170"
      ]
    },
    "Start test services for frontend real service testing.\n\nThis script manages Docker containers and local services needed for\nrunning frontend tests against real backend services.": {
      "value": "Start test services for frontend real service testing.\n\nThis script manages Docker containers and local services needed for\nrunning frontend tests against real backend services.",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:3"
      ]
    },
    "Start test services using SSOT DockerTestUtility.": {
      "value": "Start test services using SSOT DockerTestUtility.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:45"
      ]
    },
    "Start the development server.": {
      "value": "Start the development server.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:48"
      ]
    },
    "Started at:": {
      "value": "Started at:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:238"
      ]
    },
    "Started reloader process": {
      "value": "Started reloader process",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:79"
      ]
    },
    "Starting": {
      "value": "Starting",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:142"
      ]
    },
    "Starting 100 test iterations...": {
      "value": "Starting 100 test iterations...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:101"
      ]
    },
    "Starting Adaptive Workflow Tests...": {
      "value": "Starting Adaptive Workflow Tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:154"
      ]
    },
    "Starting Batch Test Generation for 121 Critical Files...": {
      "value": "Starting Batch Test Generation for 121 Critical Files...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:516"
      ]
    },
    "Starting CORS test...": {
      "value": "Starting CORS test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:73"
      ]
    },
    "Starting Direct Workflow Tests...": {
      "value": "Starting Direct Workflow Tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:219"
      ]
    },
    "Starting Docker service stability test for": {
      "value": "Starting Docker service stability test for",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:63"
      ]
    },
    "Starting Docker services...": {
      "value": "Starting Docker services...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:43"
      ]
    },
    "Starting E2E test import fixing...": {
      "value": "Starting E2E test import fixing...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:192"
      ]
    },
    "Starting PyTest resource monitor...": {
      "value": "Starting PyTest resource monitor...",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:294"
      ]
    },
    "Starting TEST environment containers...": {
      "value": "Starting TEST environment containers...",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:98"
      ]
    },
    "Starting Tool Execution Events Test...": {
      "value": "Starting Tool Execution Events Test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:192"
      ]
    },
    "Starting Triage Agent Flow Test": {
      "value": "Starting Triage Agent Flow Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:177"
      ]
    },
    "Starting WebSocket Agent Events Test...": {
      "value": "Starting WebSocket Agent Events Test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:108"
      ]
    },
    "Starting WebSocket DEV MODE functional tests...": {
      "value": "Starting WebSocket DEV MODE functional tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:260"
      ]
    },
    "Starting WebSocket Injection Fix - Complete Validation": {
      "value": "Starting WebSocket Injection Fix - Complete Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:571"
      ]
    },
    "Starting WebSocket connection tests...": {
      "value": "Starting WebSocket connection tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:175"
      ]
    },
    "Starting WebSocket event test...": {
      "value": "Starting WebSocket event test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:55"
      ]
    },
    "Starting Windows Process Cleanup Tests": {
      "value": "Starting Windows Process Cleanup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:173"
      ]
    },
    "Starting Workflow Status Verification Tests": {
      "value": "Starting Workflow Status Verification Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:196"
      ]
    },
    "Starting agent execution for:": {
      "value": "Starting agent execution for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:284"
      ]
    },
    "Starting automated frontend test iterations": {
      "value": "Starting automated frontend test iterations",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:946"
      ]
    },
    "Starting automated test fix loop...": {
      "value": "Starting automated test fix loop...",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:96"
      ]
    },
    "Starting comprehensive fake test scan...": {
      "value": "Starting comprehensive fake test scan...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:51"
      ]
    },
    "Starting comprehensive test import fix...": {
      "value": "Starting comprehensive test import fix...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:264"
      ]
    },
    "Starting comprehensive test run...": {
      "value": "Starting comprehensive test run...",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:105"
      ]
    },
    "Starting continuous E2E agent test runner...": {
      "value": "Starting continuous E2E agent test runner...",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:335"
      ]
    },
    "Starting continuous test failure detection...": {
      "value": "Starting continuous test failure detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:159"
      ]
    },
    "Starting corpus admin initialization test...": {
      "value": "Starting corpus admin initialization test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:19"
      ]
    },
    "Starting database test...": {
      "value": "Starting database test...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:19"
      ]
    },
    "Starting development server...": {
      "value": "Starting development server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:50"
      ]
    },
    "Starting import validation for auth_service...": {
      "value": "Starting import validation for auth_service...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:175"
      ]
    },
    "Starting iteration number (default: 7)": {
      "value": "Starting iteration number (default: 7)",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:919"
      ]
    },
    "Starting local backend services...": {
      "value": "Starting local backend services...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:96"
      ]
    },
    "Starting missing services...": {
      "value": "Starting missing services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:88"
      ]
    },
    "Starting optimized execution of": {
      "value": "Starting optimized execution of",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:125"
      ]
    },
    "Starting optimized test execution...": {
      "value": "Starting optimized test execution...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:423"
      ]
    },
    "Starting parallel Docker manager test with": {
      "value": "Starting parallel Docker manager test with",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:114"
      ]
    },
    "Starting pipeline execution for:": {
      "value": "Starting pipeline execution for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:360"
      ]
    },
    "Starting pipeline with": {
      "value": "Starting pipeline with",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:287"
      ]
    },
    "Starting service coordination fix validation": {
      "value": "Starting service coordination fix validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:39"
      ]
    },
    "Starting signup flow tests...": {
      "value": "Starting signup flow tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:170"
      ]
    },
    "Starting simple corpus admin test...": {
      "value": "Starting simple corpus admin test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:18"
      ]
    },
    "Starting test data seeding process...": {
      "value": "Starting test data seeding process...",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:376"
      ]
    },
    "Starting test import alignment...": {
      "value": "Starting test import alignment...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:41"
      ]
    },
    "Starting test overlap analysis for": {
      "value": "Starting test overlap analysis for",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:71"
      ]
    },
    "Starting test service monitor...": {
      "value": "Starting test service monitor...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:290"
      ]
    },
    "Starting test uvicorn server...": {
      "value": "Starting test uvicorn server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:75"
      ]
    },
    "Starts correctly:": {
      "value": "Starts correctly:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:316"
      ]
    },
    "Startup Timing": {
      "value": "Startup Timing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:242"
      ]
    },
    "Startup took": {
      "value": "Startup took",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:208"
      ]
    },
    "State parameter should be stored successfully": {
      "value": "State parameter should be stored successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:40"
      ]
    },
    "State replay attack should be blocked": {
      "value": "State replay attack should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:48"
      ]
    },
    "State:": {
      "value": "State:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:138"
      ]
    },
    "Static Assets": {
      "value": "Static Assets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:152"
      ]
    },
    "Static Code Analysis:": {
      "value": "Static Code Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:649"
      ]
    },
    "Static assets are being served": {
      "value": "Static assets are being served",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:136"
      ]
    },
    "Static assets returned status": {
      "value": "Static assets returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:138"
      ]
    },
    "Static assets test failed:": {
      "value": "Static assets test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:140"
      ]
    },
    "Status": {
      "value": "Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:353",
        "scripts/test_cors.py:371",
        "scripts/test_oauth_local.py:70"
      ]
    },
    "Status code should be real integer": {
      "value": "Status code should be real integer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:263"
      ]
    },
    "Status code:": {
      "value": "Status code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:198"
      ]
    },
    "Status:": {
      "value": "Status:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:76",
        "scripts/debug_cors_test.py:95",
        "scripts/frontend_iterative_test_runner.py:773",
        "scripts/run_all_test_categories.py:50",
        "scripts/test_agent_orchestration_recovery.py:74",
        "scripts/test_agent_orchestration_recovery.py:128",
        "scripts/test_and_fix_cors.py:121",
        "scripts/test_and_fix_cors.py:140",
        "scripts/test_auth_client_debug.py:126",
        "scripts/test_auth_service_integration_fix.py:141"
      ]
    },
    "Status: 401 Unauthorized (expected for invalid token)": {
      "value": "Status: 401 Unauthorized (expected for invalid token)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:39",
        "scripts/test_staging_refresh_format.py:61",
        "scripts/test_staging_refresh_format.py:85"
      ]
    },
    "Stderr:": {
      "value": "Stderr:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:133"
      ]
    },
    "Stdout:": {
      "value": "Stdout:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:132"
      ]
    },
    "Step 1: Running smoke, unit, and critical tests...": {
      "value": "Step 1: Running smoke, unit, and critical tests...",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:107"
      ]
    },
    "Step 2: Attempting to fix:": {
      "value": "Step 2: Attempting to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:122"
      ]
    },
    "Stop auth service completely to simulate it being down": {
      "value": "Stop auth service completely to simulate it being down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:506"
      ]
    },
    "Stop monitoring and return results": {
      "value": "Stop monitoring and return results",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:104"
      ]
    },
    "Stop on first test failure": {
      "value": "Stop on first test failure",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:493"
      ]
    },
    "Stop services and clean all data": {
      "value": "Stop services and clean all data",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:182"
      ]
    },
    "Stop test services": {
      "value": "Stop test services",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:177"
      ]
    },
    "Stop test services using SSOT DockerTestUtility.": {
      "value": "Stop test services using SSOT DockerTestUtility.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:76"
      ]
    },
    "Stop the TEST environment": {
      "value": "Stop the TEST environment",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:181"
      ]
    },
    "Stopping development server...": {
      "value": "Stopping development server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:239"
      ]
    },
    "Stopping existing TEST environment containers...": {
      "value": "Stopping existing TEST environment containers...",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:43"
      ]
    },
    "Strategies:": {
      "value": "Strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:92",
        "scripts/compliance/test_refactor_helper.py:710"
      ]
    },
    "Stream URL:": {
      "value": "Stream URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:69"
      ]
    },
    "Stress Tests": {
      "value": "Stress Tests",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:338"
      ]
    },
    "Stress test concurrent serialization with complex objects.": {
      "value": "Stress test concurrent serialization with complex objects.",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:227"
      ]
    },
    "Stress tests with high load or concurrency": {
      "value": "Stress tests with high load or concurrency",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:101"
      ]
    },
    "Strict mode - fail on any violations": {
      "value": "Strict mode - fail on any violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:525"
      ]
    },
    "Subprotocol:": {
      "value": "Subprotocol:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:69"
      ]
    },
    "Subprotocols:": {
      "value": "Subprotocols:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:53"
      ]
    },
    "Success": {
      "value": "Success",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:99",
        "scripts/test_windows_process_cleanup.py:94"
      ]
    },
    "Success Rate:": {
      "value": "Success Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/final_test_status_check.py:102",
        "scripts/staging_comprehensive_test.py:464",
        "scripts/test_backend_optimized.py:336",
        "scripts/test_coordination_fixes.py:382",
        "scripts/test_example_message_flow.py:327",
        "scripts/test_real_jwt_e2e.py:248",
        "scripts/test_staging_deployment.py:218",
        "scripts/test_verify_workflow_status_corrected.py:197"
      ]
    },
    "Success Rate: N/A": {
      "value": "Success Rate: N/A",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:329"
      ]
    },
    "Success rate too low:": {
      "value": "Success rate too low:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:224"
      ]
    },
    "Success rate:": {
      "value": "Success rate:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:143",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/test_agent_pipeline_simple.py:380",
        "scripts/test_clickhouse_startup_fix.py:376",
        "scripts/test_modern_websocket_migration.py:204",
        "scripts/test_parallel_docker_manager.py:153"
      ]
    },
    "Successful agents:": {
      "value": "Successful agents:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:379"
      ]
    },
    "Successful iterations:": {
      "value": "Successful iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:763"
      ]
    },
    "Successful renames:": {
      "value": "Successful renames:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:283"
      ]
    },
    "Successful sends:": {
      "value": "Successful sends:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:113",
        "scripts/websocket_performance_standalone_test.py:266"
      ]
    },
    "Successful test runs:": {
      "value": "Successful test runs:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:135",
        "scripts/automated_test_fix_loop.py:142"
      ]
    },
    "Successful:": {
      "value": "Successful:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:151",
        "scripts/test_triage_flow.py:211",
        "scripts/test_websocket_simple.py:90"
      ]
    },
    "Successfully authenticated!": {
      "value": "Successfully authenticated!",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:379"
      ]
    },
    "Successfully fixed:": {
      "value": "Successfully fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:392"
      ]
    },
    "Successfully generated": {
      "value": "Successfully generated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:141"
      ]
    },
    "Successfully migrated": {
      "value": "Successfully migrated",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:307"
      ]
    },
    "Successfully validated staging configuration and authentication": {
      "value": "Successfully validated staging configuration and authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:89"
      ]
    },
    "Sufficient Data": {
      "value": "Sufficient Data",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:316",
        "scripts/test_adaptive_workflow_local.py:87"
      ]
    },
    "Sufficient Data Scenario": {
      "value": "Sufficient Data Scenario",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:161"
      ]
    },
    "Suggested refactoring strategies:": {
      "value": "Suggested refactoring strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:210"
      ]
    },
    "Suggested splitting strategies:": {
      "value": "Suggested splitting strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:194"
      ]
    },
    "Suggested:": {
      "value": "Suggested:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:156"
      ]
    },
    "Suggestion: Extract helper methods or split test logic": {
      "value": "Suggestion: Extract helper methods or split test logic",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:846"
      ]
    },
    "Suggestion: Focus on core unit tests that test business logic": {
      "value": "Suggestion: Focus on core unit tests that test business logic",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:79"
      ]
    },
    "Suite Breakdown:": {
      "value": "Suite Breakdown:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:332"
      ]
    },
    "Summary of errors:": {
      "value": "Summary of errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:121"
      ]
    },
    "Summary:": {
      "value": "Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:226",
        "scripts/apply_fast_test_decorators.py:181",
        "scripts/fix_all_test_issues.py:286",
        "scripts/fix_authentication_test_tokens.py:166",
        "scripts/fix_test_import_order.py:107",
        "scripts/iterative_test_fix_loop.py:163",
        "scripts/remove_test_stubs.py:374",
        "scripts/test_cors.py:542",
        "scripts/test_environment_validation_clean.py:48",
        "scripts/test_environment_validation_clean.py:85"
      ]
    },
    "SupervisorAgent": {
      "value": "SupervisorAgent",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:23"
      ]
    },
    "SupervisorAgent has ExecutionEngine": {
      "value": "SupervisorAgent has ExecutionEngine",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:130"
      ]
    },
    "SupervisorAgent has WebSocket manager": {
      "value": "SupervisorAgent has WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:127"
      ]
    },
    "SupervisorAgent has registry": {
      "value": "SupervisorAgent has registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:128"
      ]
    },
    "Supports": {
      "value": "Supports",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:500"
      ]
    },
    "Sync URL has SSL:": {
      "value": "Sync URL has SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:147"
      ]
    },
    "Sync URL:": {
      "value": "Sync URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:98",
        "scripts/test_database_url_builder_comprehensive.py:49",
        "scripts/test_database_url_builder_comprehensive.py:274",
        "scripts/test_ssl_certificates_staging.py:140",
        "scripts/test_ssl_certificates_staging.py:236"
      ]
    },
    "Sync results:": {
      "value": "Sync results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:288"
      ]
    },
    "Sync serialization attempt": {
      "value": "Sync serialization attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:95"
      ]
    },
    "Sync serialization completed:": {
      "value": "Sync serialization completed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:91"
      ]
    },
    "Sync serialization failed after": {
      "value": "Sync serialization failed after",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:169"
      ]
    },
    "Sync serialization failed:": {
      "value": "Sync serialization failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:94"
      ]
    },
    "Sync serialization:": {
      "value": "Sync serialization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:166"
      ]
    },
    "Sync:": {
      "value": "Sync:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:254",
        "scripts/test_intensive_serialization.py:257"
      ]
    },
    "Synchronous serialization total time:": {
      "value": "Synchronous serialization total time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:130"
      ]
    },
    "Synchronous:": {
      "value": "Synchronous:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:158"
      ]
    },
    "Syntax error in": {
      "value": "Syntax error in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:93",
        "scripts/align_test_imports.py:356",
        "scripts/compliance/test_size_validator.py:201"
      ]
    },
    "Syntax error:": {
      "value": "Syntax error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:142",
        "scripts/compliance/real_test_requirements_enforcer.py:201",
        "scripts/compliance/real_test_validator.py:97",
        "scripts/compliance/test_refactor_helper.py:82"
      ]
    },
    "Syntax errors fixed:": {
      "value": "Syntax errors fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:288"
      ]
    },
    "Syntax fixes applied:": {
      "value": "Syntax fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:429"
      ]
    },
    "SyntaxError": {
      "value": "SyntaxError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:28",
        "scripts/simple_test_fix_loop.py:28"
      ]
    },
    "SysCapture": {
      "value": "SysCapture",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:128",
        "scripts/pytest_plugins.py:205"
      ]
    },
    "System Startup Test Runner\nModular test runner for system startup and E2E tests\nLegacy entry point - redirects to new modular implementation": {
      "value": "System Startup Test Runner\nModular test runner for system startup and E2E tests\nLegacy entry point - redirects to new modular implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_system_startup.py:2"
      ]
    },
    "System has API access:": {
      "value": "System has API access:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:129"
      ]
    },
    "System has required databases:": {
      "value": "System has required databases:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:128"
      ]
    },
    "System should be healthy despite degraded services": {
      "value": "System should be healthy despite degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:268"
      ]
    },
    "T": {
      "value": "T",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:209"
      ]
    },
    "TCP": {
      "value": "TCP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "TCP Async SSL URL:": {
      "value": "TCP Async SSL URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:109"
      ]
    },
    "TCP Async URL:": {
      "value": "TCP Async URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:107"
      ]
    },
    "TCP Configuration": {
      "value": "TCP Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:306"
      ]
    },
    "TCP Sync SSL URL:": {
      "value": "TCP Sync SSL URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:110"
      ]
    },
    "TCP Sync URL:": {
      "value": "TCP Sync URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:108"
      ]
    },
    "TCP URL with ssl for psycopg2 conversion": {
      "value": "TCP URL with ssl for psycopg2 conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:154"
      ]
    },
    "TCP URL with sslmode for asyncpg conversion": {
      "value": "TCP URL with sslmode for asyncpg conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:150"
      ]
    },
    "TCP config available:": {
      "value": "TCP config available:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:83"
      ]
    },
    "TCP connection mode": {
      "value": "TCP connection mode",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:249"
      ]
    },
    "TCP staging URL (should have SSL parameters)": {
      "value": "TCP staging URL (should have SSL parameters)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:114"
      ]
    },
    "TEST 1: Basic 5 WebSocket events through notifier.": {
      "value": "TEST 1: Basic 5 WebSocket events through notifier.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:125"
      ]
    },
    "TEST 1: WebSocket Notifier Basic Flow": {
      "value": "TEST 1: WebSocket Notifier Basic Flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:424",
        "scripts/test_websocket_chat_standalone.py:409"
      ]
    },
    "TEST 2: Complete Chat Flow": {
      "value": "TEST 2: Complete Chat Flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:429",
        "scripts/test_websocket_chat_standalone.py:414"
      ]
    },
    "TEST 2: Enhanced tool execution events.": {
      "value": "TEST 2: Enhanced tool execution events.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:177"
      ]
    },
    "TEST 3: Complete 'Hello' user flow.": {
      "value": "TEST 3: Complete 'Hello' user flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:226"
      ]
    },
    "TEST ALIGNMENT SUMMARY": {
      "value": "TEST ALIGNMENT SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:425"
      ]
    },
    "TEST CATEGORIES & COUNTS": {
      "value": "TEST CATEGORIES & COUNTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:100"
      ]
    },
    "TEST COLLECTION AUDIT REPORT": {
      "value": "TEST COLLECTION AUDIT REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:315"
      ]
    },
    "TEST COMPLETE": {
      "value": "TEST COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:170"
      ]
    },
    "TEST COMPLETED": {
      "value": "TEST COMPLETED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:87"
      ]
    },
    "TEST COMPLIANCE REPORT": {
      "value": "TEST COMPLIANCE REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:157"
      ]
    },
    "TEST ENVIRONMENT MIGRATION REPORT": {
      "value": "TEST ENVIRONMENT MIGRATION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:285"
      ]
    },
    "TEST ENVIRONMENT VALIDATION REPORT": {
      "value": "TEST ENVIRONMENT VALIDATION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:265"
      ]
    },
    "TEST EXECUTION REPORT": {
      "value": "TEST EXECUTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:707"
      ]
    },
    "TEST FAILED with exception:": {
      "value": "TEST FAILED with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:312"
      ]
    },
    "TEST FAILED:": {
      "value": "TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:271"
      ]
    },
    "TEST FILE SIZE VIOLATIONS (": {
      "value": "TEST FILE SIZE VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:75"
      ]
    },
    "TEST FUNCTION VIOLATIONS (": {
      "value": "TEST FUNCTION VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:94"
      ]
    },
    "TEST HISTORY (last": {
      "value": "TEST HISTORY (last",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:195"
      ]
    },
    "TEST LIMITS VIOLATIONS REPORT": {
      "value": "TEST LIMITS VIOLATIONS REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:34"
      ]
    },
    "TEST MAPPING TO ORIGINAL ISSUES:": {
      "value": "TEST MAPPING TO ORIGINAL ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:391"
      ]
    },
    "TEST OVERLAP ANALYSIS COMPLETE": {
      "value": "TEST OVERLAP ANALYSIS COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:654"
      ]
    },
    "TEST PROCESS CLEANUP": {
      "value": "TEST PROCESS CLEANUP",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:97"
      ]
    },
    "TEST RESULTS": {
      "value": "TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:333",
        "scripts/test_data_pipeline_simple.py:155"
      ]
    },
    "TEST RESULTS SUMMARY": {
      "value": "TEST RESULTS SUMMARY",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:238",
        "scripts/test_clickhouse_startup_fix.py:367"
      ]
    },
    "TEST RESULTS:": {
      "value": "TEST RESULTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:301"
      ]
    },
    "TEST SERVICE PORT CONFIGURATION VERIFICATION": {
      "value": "TEST SERVICE PORT CONFIGURATION VERIFICATION",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:17"
      ]
    },
    "TEST SIZE COMPLIANCE REPORT": {
      "value": "TEST SIZE COMPLIANCE REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:416"
      ]
    },
    "TEST SIZE FIXING SUMMARY": {
      "value": "TEST SIZE FIXING SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:746"
      ]
    },
    "TEST SIZE LIMITS ENFORCEMENT SYSTEM DEMONSTRATION": {
      "value": "TEST SIZE LIMITS ENFORCEMENT SYSTEM DEMONSTRATION",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:201"
      ]
    },
    "TEST STUB DETECTION REPORT": {
      "value": "TEST STUB DETECTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:307"
      ]
    },
    "TEST SUITE EXECUTION REPORT": {
      "value": "TEST SUITE EXECUTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:362"
      ]
    },
    "TEST SUMMARY": {
      "value": "TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:99",
        "scripts/test_adaptive_workflow_direct.py:194",
        "scripts/test_adaptive_workflow_local.py:128",
        "scripts/test_database_url_builder_comprehensive.py:330",
        "scripts/test_log_introspection.py:412",
        "scripts/test_staging_auth_e2e.py:363",
        "scripts/test_staging_deployment.py:213",
        "scripts/test_staging_env.py:186",
        "scripts/test_staging_login_automated.py:335",
        "scripts/test_staging_threads_fix.py:107"
      ]
    },
    "TEST SUMMARY:": {
      "value": "TEST SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:458"
      ]
    },
    "TEST SYSTEM OVERVIEW": {
      "value": "TEST SYSTEM OVERVIEW",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:37"
      ]
    },
    "TEST TYPE SUMMARY": {
      "value": "TEST TYPE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:113"
      ]
    },
    "TEST environment started successfully!": {
      "value": "TEST environment started successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:108"
      ]
    },
    "TEST environment stopped.": {
      "value": "TEST environment stopped.",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:211"
      ]
    },
    "TEST-ONLY-SECRET-NOT-FOR-PRODUCTION-": {
      "value": "TEST-ONLY-SECRET-NOT-FOR-PRODUCTION-",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:99"
      ]
    },
    "TESTING": {
      "value": "TESTING",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:71",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:108",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:146",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:198",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:269",
        "auth_service/tests/test_critical_bugs_real.py:277",
        "auth_service/tests/test_critical_bugs_real.py:281",
        "scripts/debug_supervisor_test.py:11",
        "scripts/run_agent_pipeline_test.py:36",
        "scripts/test_backend_ORIGINAL.py:82"
      ]
    },
    "TESTING AGENT EXECUTION WITH WEBSOCKET EVENTS": {
      "value": "TESTING AGENT EXECUTION WITH WEBSOCKET EVENTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:255"
      ]
    },
    "TESTING ALEMBIC CONFIGURATION": {
      "value": "TESTING ALEMBIC CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:93"
      ]
    },
    "TESTING AUTH DATABASE ENGINE CREATION": {
      "value": "TESTING AUTH DATABASE ENGINE CREATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:119"
      ]
    },
    "TESTING AUTH DATABASE SESSION LIFECYCLE": {
      "value": "TESTING AUTH DATABASE SESSION LIFECYCLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:298"
      ]
    },
    "TESTING AUTH DATABASE STAGING INTEGRATION": {
      "value": "TESTING AUTH DATABASE STAGING INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:216"
      ]
    },
    "TESTING AUTH DATABASE URL CONVERSION": {
      "value": "TESTING AUTH DATABASE URL CONVERSION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:69"
      ]
    },
    "TESTING AUTH DATABASE URL VALIDATION": {
      "value": "TESTING AUTH DATABASE URL VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:162"
      ]
    },
    "TESTING AUTH SERVICE DATABASE MANAGER IMPORT": {
      "value": "TESTING AUTH SERVICE DATABASE MANAGER IMPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:30"
      ]
    },
    "TESTING CLOUD SQL CONFIGURATION": {
      "value": "TESTING CLOUD SQL CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:16"
      ]
    },
    "TESTING CONNECTION POOLING URL SCENARIOS": {
      "value": "TESTING CONNECTION POOLING URL SCENARIOS",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:256"
      ]
    },
    "TESTING DATABASE MIGRATION COMMANDS": {
      "value": "TESTING DATABASE MIGRATION COMMANDS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:219"
      ]
    },
    "TESTING DRIVER URL FORMATTING": {
      "value": "TESTING DRIVER URL FORMATTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:117"
      ]
    },
    "TESTING ENHANCED TOOL EXECUTION INTEGRATION": {
      "value": "TESTING ENHANCED TOOL EXECUTION INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:335"
      ]
    },
    "TESTING MIGRATION SAFETY CHECKS": {
      "value": "TESTING MIGRATION SAFETY CHECKS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:179"
      ]
    },
    "TESTING MIGRATION URL GENERATION": {
      "value": "TESTING MIGRATION URL GENERATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:31"
      ]
    },
    "TESTING MODULE:": {
      "value": "TESTING MODULE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:75"
      ]
    },
    "TESTING SSL CERTIFICATE VALIDATION": {
      "value": "TESTING SSL CERTIFICATE VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:30"
      ]
    },
    "TESTING SSL PARAMETER HANDLING": {
      "value": "TESTING SSL PARAMETER HANDLING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:140"
      ]
    },
    "TESTING SSL PARAMETER HANDLING IN URLs": {
      "value": "TESTING SSL PARAMETER HANDLING IN URLs",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:103"
      ]
    },
    "TESTING STAGING DATABASE CONNECTION": {
      "value": "TESTING STAGING DATABASE CONNECTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:32"
      ]
    },
    "TESTING STAGING SSL CONFIGURATION WITH REAL SECRETS": {
      "value": "TESTING STAGING SSL CONFIGURATION WITH REAL SECRETS",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:200"
      ]
    },
    "TESTING TCP CONFIGURATION": {
      "value": "TESTING TCP CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:73"
      ]
    },
    "TESTING UNIFIED TEST RUNNER INTEGRATION": {
      "value": "TESTING UNIFIED TEST RUNNER INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:203"
      ]
    },
    "TESTING URL DRIVER COMPATIBILITY FOR SSL": {
      "value": "TESTING URL DRIVER COMPATIBILITY FOR SSL",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:166"
      ]
    },
    "TESTING VALIDATION EDGE CASES": {
      "value": "TESTING VALIDATION EDGE CASES",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:178"
      ]
    },
    "TESTING WEBSOCKET NOTIFIER": {
      "value": "TESTING WEBSOCKET NOTIFIER",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:153"
      ]
    },
    "TESTING WEBSOCKET NOTIFIER STANDALONE": {
      "value": "TESTING WEBSOCKET NOTIFIER STANDALONE",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:153"
      ]
    },
    "TESTING environment not set correctly:": {
      "value": "TESTING environment not set correctly:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:278"
      ]
    },
    "TESTING | Service startup orchestration...": {
      "value": "TESTING | Service startup orchestration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:21"
      ]
    },
    "TESTING_ENV": {
      "value": "TESTING_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:183"
      ]
    },
    "TEST_ARCHITECTURE.md": {
      "value": "TEST_ARCHITECTURE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:45"
      ]
    },
    "TEST_DIRECTORIES = {\n    \"unit\": [\"netra_backend/tests/unit\"],\n    \"integration\": [\"netra_backend/tests/integration\"],\n    \"e2e\": [\"netra_backend/tests/e2e\"],\n    \"agents\": [\"netra_backend/tests/agents\"],\n    \"critical\": [\"netra_backend/tests/critical\"],\n    \"routes\": [\"netra_backend/tests/routes\"],\n    \"services\": [\"netra_backend/tests/services\"],\n    \"database\": [\"netra_backend/tests/database\"],\n    \"websocket\": [\"netra_backend/tests/websocket\"],\n    \"auth\": [\"netra_backend/tests/auth_integration\"],\n    \"performance\": [\"netra_backend/tests/performance\"],\n    \"security\": [\"netra_backend/tests/security\"],\n    \"mcp\": [\"netra_backend/tests/mcp\"],\n    \"utils\": [\"netra_backend/tests/utils\"],\n    \"validation\": [\"netra_backend/tests/validation\"],\n    \"config\": [\"netra_backend/tests/config\"],\n    \"startup\": [\"netra_backend/tests/startup\"],\n    \"llm\": [\"netra_backend/tests/llm\"],\n    \"core\": [\"netra_backend/tests/core\"],\n    \"unified_system\": [\"netra_backend/tests/unified_system\"],\n    \"test_framework\": [\"test_framework/tests\"]\n}": {
      "value": "TEST_DIRECTORIES = {\n    \"unit\": [\"netra_backend/tests/unit\"],\n    \"integration\": [\"netra_backend/tests/integration\"],\n    \"e2e\": [\"netra_backend/tests/e2e\"],\n    \"agents\": [\"netra_backend/tests/agents\"],\n    \"critical\": [\"netra_backend/tests/critical\"],\n    \"routes\": [\"netra_backend/tests/routes\"],\n    \"services\": [\"netra_backend/tests/services\"],\n    \"database\": [\"netra_backend/tests/database\"],\n    \"websocket\": [\"netra_backend/tests/websocket\"],\n    \"auth\": [\"netra_backend/tests/auth_integration\"],\n    \"performance\": [\"netra_backend/tests/performance\"],\n    \"security\": [\"netra_backend/tests/security\"],\n    \"mcp\": [\"netra_backend/tests/mcp\"],\n    \"utils\": [\"netra_backend/tests/utils\"],\n    \"validation\": [\"netra_backend/tests/validation\"],\n    \"config\": [\"netra_backend/tests/config\"],\n    \"startup\": [\"netra_backend/tests/startup\"],\n    \"llm\": [\"netra_backend/tests/llm\"],\n    \"core\": [\"netra_backend/tests/core\"],\n    \"unified_system\": [\"netra_backend/tests/unified_system\"],\n    \"test_framework\": [\"test_framework/tests\"]\n}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:244"
      ]
    },
    "TEST_DIRECTORIES\\s*=\\s*\\{[^}]+\\}": {
      "value": "TEST_DIRECTORIES\\s*=\\s*\\{[^}]+\\}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:242"
      ]
    },
    "TEST_ENV": {
      "value": "TEST_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:303"
      ]
    },
    "TEST_EXECUTION_GUIDE.md": {
      "value": "TEST_EXECUTION_GUIDE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:79"
      ]
    },
    "TEST_GEMINI_API_KEY": {
      "value": "TEST_GEMINI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:23",
        "scripts/run_critical_test.py:43"
      ]
    },
    "TEST_GEMINI_API_KEY:": {
      "value": "TEST_GEMINI_API_KEY:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:43"
      ]
    },
    "TEST_GOOGLE_API_KEY": {
      "value": "TEST_GOOGLE_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:22",
        "scripts/run_critical_test.py:42"
      ]
    },
    "TEST_GOOGLE_API_KEY:": {
      "value": "TEST_GOOGLE_API_KEY:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:42"
      ]
    },
    "TEST_HEALTH_METRICS.md": {
      "value": "TEST_HEALTH_METRICS.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:289"
      ]
    },
    "TEST_JWT_SECRET": {
      "value": "TEST_JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:72"
      ]
    },
    "TEST_LLM_MODE": {
      "value": "TEST_LLM_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:21",
        "scripts/run_agent_pipeline_test.py:33",
        "scripts/run_critical_test.py:30",
        "scripts/run_critical_test.py:45"
      ]
    },
    "TEST_LLM_MODE:": {
      "value": "TEST_LLM_MODE:",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:45"
      ]
    },
    "TEST_MAINTENANCE.md": {
      "value": "TEST_MAINTENANCE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:165"
      ]
    },
    "TEST_MODE": {
      "value": "TEST_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:159"
      ]
    },
    "TEST_ORGANIZATION_AUDIT.md": {
      "value": "TEST_ORGANIZATION_AUDIT.md",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:267"
      ]
    },
    "TEST_PERFORMANCE.md": {
      "value": "TEST_PERFORMANCE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:222"
      ]
    },
    "TEST_POSTGRES_PORT": {
      "value": "TEST_POSTGRES_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:178",
        "scripts/test_docker_manager.py:186"
      ]
    },
    "TEST_REDIS_PORT": {
      "value": "TEST_REDIS_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:179",
        "scripts/test_docker_manager.py:187"
      ]
    },
    "TEST_SECRET": {
      "value": "TEST_SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:112",
        "scripts/test_secret_manager_debug.py:113"
      ]
    },
    "TEST_SERVICE_MODE": {
      "value": "TEST_SERVICE_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:41"
      ]
    },
    "TEST_USE_REAL_LLM": {
      "value": "TEST_USE_REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:30",
        "scripts/run_critical_test.py:32"
      ]
    },
    "TEST_UTILS IMPORT FIX RESULTS": {
      "value": "TEST_UTILS IMPORT FIX RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:90"
      ]
    },
    "TEST_WRITING_STANDARDS.md": {
      "value": "TEST_WRITING_STANDARDS.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:115"
      ]
    },
    "THE MOST CRITICAL REDIS TEST: Configuration consistency across services.\n        \n        This test exposes the core problem: Different services configure Redis differently,\n        leading to inconsistent behavior in staging that becomes production outages.\n        \n        EXPECTED FAILURE: Currently different services use different Redis configuration:\n        - RedisManager: Uses host/port/password individually  \n        - Background Jobs: Use redis_config Dict parameter\n        - Some use REDIS_URL, others build URLs manually\n        - Fallback behavior differs (some allow localhost, others don't)\n        \n        BUSINESS IMPACT OF THIS FAILURE:\n        - $50,000 per Redis-related production incident (3-4 incidents/year)\n        - 40% slower development due to inconsistent debugging\n        - Cache hit rate drops from 85% to 45% during Redis issues\n        - Background job failure rate increases 10x during Redis outages": {
      "value": "THE MOST CRITICAL REDIS TEST: Configuration consistency across services.\n        \n        This test exposes the core problem: Different services configure Redis differently,\n        leading to inconsistent behavior in staging that becomes production outages.\n        \n        EXPECTED FAILURE: Currently different services use different Redis configuration:\n        - RedisManager: Uses host/port/password individually  \n        - Background Jobs: Use redis_config Dict parameter\n        - Some use REDIS_URL, others build URLs manually\n        - Fallback behavior differs (some allow localhost, others don't)\n        \n        BUSINESS IMPACT OF THIS FAILURE:\n        - $50,000 per Redis-related production incident (3-4 incidents/year)\n        - 40% slower development due to inconsistent debugging\n        - Cache hit rate drops from 85% to 45% during Redis issues\n        - Background job failure rate increases 10x during Redis outages",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:69"
      ]
    },
    "TIER COVERAGE:": {
      "value": "TIER COVERAGE:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:740"
      ]
    },
    "TIMEOUT": {
      "value": "TIMEOUT",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:381",
        "scripts/run_all_test_categories.py:41",
        "scripts/test_agent_recovery_simple.py:89"
      ]
    },
    "TIMEOUT: Alembic command timed out": {
      "value": "TIMEOUT: Alembic command timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:167"
      ]
    },
    "TOKEN_CREATED": {
      "value": "TOKEN_CREATED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:26",
        "auth_service/tests/factories/audit_factory.py:134"
      ]
    },
    "TOKEN_REFRESHED": {
      "value": "TOKEN_REFRESHED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:27"
      ]
    },
    "TOKEN_REVOKED": {
      "value": "TOKEN_REVOKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:28"
      ]
    },
    "TOP OPTIMIZATION RECOMMENDATIONS": {
      "value": "TOP OPTIMIZATION RECOMMENDATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:342"
      ]
    },
    "TOP VALUE TESTS:": {
      "value": "TOP VALUE TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:753"
      ]
    },
    "TOTAL:": {
      "value": "TOTAL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:172",
        "scripts/test_discovery_report.py:121"
      ]
    },
    "TRACEBACK:": {
      "value": "TRACEBACK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:97",
        "scripts/test_staging_db_direct.py:114"
      ]
    },
    "Tables created in transaction": {
      "value": "Tables created in transaction",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:38"
      ]
    },
    "Tables found after transaction:": {
      "value": "Tables found after transaction:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:50"
      ]
    },
    "Tables found in transaction:": {
      "value": "Tables found in transaction:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:43"
      ]
    },
    "Tampered token should be rejected": {
      "value": "Tampered token should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:251"
      ]
    },
    "Target URL:": {
      "value": "Target URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:237"
      ]
    },
    "Target for unified builder: <": {
      "value": "Target for unified builder: <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:641"
      ]
    },
    "Target:": {
      "value": "Target:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:182"
      ]
    },
    "Targeted test to identify the exact source of event loop blocking.": {
      "value": "Targeted test to identify the exact source of event loop blocking.",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:2"
      ]
    },
    "Task": {
      "value": "Task",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:200",
        "scripts/test_async_serialization_direct.py:203"
      ]
    },
    "Terminating Process B agent for": {
      "value": "Terminating Process B agent for",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:188"
      ]
    },
    "Test": {
      "value": "Test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:237",
        "scripts/analyze_test_overlap.py:124",
        "scripts/business_value_test_index.py:212",
        "scripts/compliance/test_fixer.py:142",
        "scripts/compliance/test_refactor_helper.py:262",
        "scripts/compliance/test_refactor_helper.py:537",
        "scripts/compliance/test_size_validator.py:276",
        "scripts/compliance/test_size_validator.py:278",
        "scripts/e2e_test_fixer.py:52",
        "scripts/e2e_test_fixer.py:52"
      ]
    },
    "Test '": {
      "value": "Test '",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:358"
      ]
    },
    "Test 1: Minimal Critical Variables Only": {
      "value": "Test 1: Minimal Critical Variables Only",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:34",
        "scripts/test_improved_environment_validation.py:35"
      ]
    },
    "Test 1: Testing /ws/test endpoint": {
      "value": "Test 1: Testing /ws/test endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:112"
      ]
    },
    "Test 2: Adding Important Optional Variables": {
      "value": "Test 2: Adding Important Optional Variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:74"
      ]
    },
    "Test 2: Testing /ws main endpoint": {
      "value": "Test 2: Testing /ws main endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:116"
      ]
    },
    "Test 3: Development vs Staging Environment Differences": {
      "value": "Test 3: Development vs Staging Environment Differences",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:89"
      ]
    },
    "Test 4: Service Startup Readiness Check": {
      "value": "Test 4: Service Startup Readiness Check",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:108"
      ]
    },
    "Test 5 concurrent users with <2s response time requirement.": {
      "value": "Test 5 concurrent users with <2s response time requirement.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:60"
      ]
    },
    "Test Agent": {
      "value": "Test Agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:91",
        "scripts/test_staging_login_automated.py:57"
      ]
    },
    "Test Auth Service Integration": {
      "value": "Test Auth Service Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:167"
      ]
    },
    "Test Auth Service Integration\nVerifies that the auth service is properly integrated with backend and frontend": {
      "value": "Test Auth Service Integration\nVerifies that the auth service is properly integrated with backend and frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:2"
      ]
    },
    "Test Auth service with the ACTUAL staging credentials from Secret Manager.\nThis test validates the exact configuration that would be used in production.": {
      "value": "Test Auth service with the ACTUAL staging credentials from Secret Manager.\nThis test validates the exact configuration that would be used in production.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:1"
      ]
    },
    "Test AuthConfig database URL generation.": {
      "value": "Test AuthConfig database URL generation.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:167"
      ]
    },
    "Test CORS configuration": {
      "value": "Test CORS configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:105",
        "scripts/test_staging_cors.py:43"
      ]
    },
    "Test CORS configuration for cross-origin requests.": {
      "value": "Test CORS configuration for cross-origin requests.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:248"
      ]
    },
    "Test CORS configuration in staging environment.": {
      "value": "Test CORS configuration in staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:2"
      ]
    },
    "Test CORS configuration.": {
      "value": "Test CORS configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:92"
      ]
    },
    "Test CORS issue with 127.0.0.1 vs localhost.": {
      "value": "Test CORS issue with 127.0.0.1 vs localhost.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:2"
      ]
    },
    "Test CORS preflight (OPTIONS) request.": {
      "value": "Test CORS preflight (OPTIONS) request.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:47"
      ]
    },
    "Test CORS preflight request.": {
      "value": "Test CORS preflight request.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:15",
        "scripts/test_cors.py:70"
      ]
    },
    "Test CORS validation.": {
      "value": "Test CORS validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:143"
      ]
    },
    "Test CORS with different origins.": {
      "value": "Test CORS with different origins.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:8"
      ]
    },
    "Test ClickHouse configuration and connectivity in staging.": {
      "value": "Test ClickHouse configuration and connectivity in staging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:23"
      ]
    },
    "Test ClickHouse connection manager initialization": {
      "value": "Test ClickHouse connection manager initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:37"
      ]
    },
    "Test ClickHouse connectivity with staging configuration.\n\nThis script verifies that:\n1. Secrets are correctly loaded from GCP Secret Manager\n2. ClickHouse connection can be established with the correct credentials\n3. No placeholder or incorrect references remain": {
      "value": "Test ClickHouse connectivity with staging configuration.\n\nThis script verifies that:\n1. Secrets are correctly loaded from GCP Secret Manager\n2. ClickHouse connection can be established with the correct credentials\n3. No placeholder or incorrect references remain",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:1"
      ]
    },
    "Test ClickHouse health check endpoints": {
      "value": "Test ClickHouse health check endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:203"
      ]
    },
    "Test ClickHouse staging configuration and connectivity.\n\nenv = get_env()\nThis script validates:\n1. Environment detection is working correctly in staging\n2. ClickHouse password is loaded from GCP Secret Manager\n3. ClickHouse connection parameters are correct\n4. Connection to ClickHouse Cloud succeeds with authentication": {
      "value": "Test ClickHouse staging configuration and connectivity.\n\nenv = get_env()\nThis script validates:\n1. Environment detection is working correctly in staging\n2. ClickHouse password is loaded from GCP Secret Manager\n3. ClickHouse connection parameters are correct\n4. Connection to ClickHouse Cloud succeeds with authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:3"
      ]
    },
    "Test ClickHouse startup fix": {
      "value": "Test ClickHouse startup fix",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:397"
      ]
    },
    "Test Collection Audit and Improvement Tool\nAnalyzes and optimizes test collection across the Netra Apex platform": {
      "value": "Test Collection Audit and Improvement Tool\nAnalyzes and optimizes test collection across the Netra Apex platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:2"
      ]
    },
    "Test Complete": {
      "value": "Test Complete",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:103",
        "scripts/test_docker_config.py:176"
      ]
    },
    "Test Complete!": {
      "value": "Test Complete!",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:304"
      ]
    },
    "Test Compliance Checker\nEnsures test files follow the same quality standards as production code:\n- Maximum 300 lines per file\n- Maximum 8 lines per function\n- No mock component implementations inside test files": {
      "value": "Test Compliance Checker\nEnsures test files follow the same quality standards as production code:\n- Maximum 300 lines per file\n- Maximum 8 lines per function\n- No mock component implementations inside test files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:2"
      ]
    },
    "Test Configuration:": {
      "value": "Test Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:367"
      ]
    },
    "Test Dashboard - Interactive test metrics": {
      "value": "Test Dashboard - Interactive test metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:428"
      ]
    },
    "Test Dashboard - Interactive test metrics and insights\n\nProvides a comprehensive view of test execution history, trends, and recommendations.": {
      "value": "Test Dashboard - Interactive test metrics and insights\n\nProvides a comprehensive view of test execution history, trends, and recommendations.",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:2"
      ]
    },
    "Test Data Seeder for Real Services\nSeeds test databases with realistic fixture data for comprehensive testing.": {
      "value": "Test Data Seeder for Real Services\nSeeds test databases with realistic fixture data for comprehensive testing.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:3"
      ]
    },
    "Test Details:": {
      "value": "Test Details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:378"
      ]
    },
    "Test Distribution:": {
      "value": "Test Distribution:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:331"
      ]
    },
    "Test Docker Manager - Intelligent Docker management for tests\n\nThis script prevents Docker Compose brittleness by:\n1. Reusing healthy containers across test runs\n2. Only restarting containers when necessary\n3. Proper cleanup without affecting unrelated services\n4. Fast startup through container reuse": {
      "value": "Test Docker Manager - Intelligent Docker management for tests\n\nThis script prevents Docker Compose brittleness by:\n1. Reusing healthy containers across test runs\n2. Only restarting containers when necessary\n3. Proper cleanup without affecting unrelated services\n4. Fast startup through container reuse",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:2"
      ]
    },
    "Test Docker hostname resolution for database connections.\n\nThis test ensures that the auth service correctly detects Docker environments\nand adjusts database hostnames accordingly.": {
      "value": "Test Docker hostname resolution for database connections.\n\nThis test ensures that the auth service correctly detects Docker environments\nand adjusts database hostnames accordingly.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:2"
      ]
    },
    "Test Docker service stability and connectivity.": {
      "value": "Test Docker service stability and connectivity.",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:2"
      ]
    },
    "Test E2E Service Orchestration": {
      "value": "Test E2E Service Orchestration",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:205"
      ]
    },
    "Test Endpoint (/ws/test):": {
      "value": "Test Endpoint (/ws/test):",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:123"
      ]
    },
    "Test Environment Setup and Validation Script\nEnsures proper test environment configuration for all services": {
      "value": "Test Environment Setup and Validation Script\nEnsures proper test environment configuration for all services",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:2"
      ]
    },
    "Test Execution Tracker": {
      "value": "Test Execution Tracker",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:762"
      ]
    },
    "Test Execution Tracker - Maintains test execution history and metadata\n\nThis module provides comprehensive tracking of test executions including:\n- Test run history with timestamps\n- Failure tracking and analysis\n- Category-based organization\n- Performance metrics\n- Smart test prioritization based on failure patterns": {
      "value": "Test Execution Tracker - Maintains test execution history and metadata\n\nThis module provides comprehensive tracking of test executions including:\n- Test run history with timestamps\n- Failure tracking and analysis\n- Category-based organization\n- Performance metrics\n- Smart test prioritization based on failure patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:2"
      ]
    },
    "Test Failure Analyzer - Diagnostic and Recommendation Tool\n\nIMPORTANT: This tool DOES NOT automatically fix issues. It only:\n1. Analyzes test failures to identify root causes\n2. Suggests potential fixes and strategies  \n3. Runs diagnostic commands to gather information\n4. Generates detailed reports with recommendations\n\nFor actual fixes, a human or LLM agent must:\n- Review the analysis and recommendations\n- Implement the suggested changes manually\n- Run tests to verify the fixes work\n\nThis is a diagnostic assistant, NOT an automated fixer.": {
      "value": "Test Failure Analyzer - Diagnostic and Recommendation Tool\n\nIMPORTANT: This tool DOES NOT automatically fix issues. It only:\n1. Analyzes test failures to identify root causes\n2. Suggests potential fixes and strategies  \n3. Runs diagnostic commands to gather information\n4. Generates detailed reports with recommendations\n\nFor actual fixes, a human or LLM agent must:\n- Review the analysis and recommendations\n- Implement the suggested changes manually\n- Run tests to verify the fixes work\n\nThis is a diagnostic assistant, NOT an automated fixer.",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:2"
      ]
    },
    "Test Failure Tracker - Continuously run tests and track failures.": {
      "value": "Test Failure Tracker - Continuously run tests and track failures.",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:2"
      ]
    },
    "Test File Size Violations (>300 lines):": {
      "value": "Test File Size Violations (>300 lines):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:65"
      ]
    },
    "Test Fixer Examples:": {
      "value": "Test Fixer Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:381"
      ]
    },
    "Test Fixer for Real Test Requirements\n\nProvides automated and semi-automated fixes for test requirement violations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity\n- Value Impact: Automates compliance with real test requirements\n- Strategic Impact: Reduces manual fix effort and prevents regressions": {
      "value": "Test Fixer for Real Test Requirements\n\nProvides automated and semi-automated fixes for test requirement violations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity\n- Value Impact: Automates compliance with real test requirements\n- Strategic Impact: Reduces manual fix effort and prevents regressions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:1"
      ]
    },
    "Test Function Violations (>8 lines):": {
      "value": "Test Function Violations (>8 lines):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:66"
      ]
    },
    "Test GA4 connection and find property": {
      "value": "Test GA4 connection and find property",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:2"
      ]
    },
    "Test GTM Event Tracking Implementation\n\nThis script verifies that GTM events are being properly tracked\nin the application by checking for dataLayer pushes.": {
      "value": "Test GTM Event Tracking Implementation\n\nThis script verifies that GTM events are being properly tracked\nin the application by checking for dataLayer pushes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:2"
      ]
    },
    "Test GTM loading in dev and staging environments": {
      "value": "Test GTM loading in dev and staging environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:2"
      ]
    },
    "Test HTTP health endpoint to ensure backend is running.\n        \n        Args:\n            url: Health endpoint URL\n            \n        Returns:\n            True if healthy, False otherwise": {
      "value": "Test HTTP health endpoint to ensure backend is running.\n        \n        Args:\n            url: Health endpoint URL\n            \n        Returns:\n            True if healthy, False otherwise",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:140"
      ]
    },
    "Test Iteration #": {
      "value": "Test Iteration #",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:71"
      ]
    },
    "Test JSON output format": {
      "value": "Test JSON output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:146"
      ]
    },
    "Test JWT token generation with correct secret.": {
      "value": "Test JWT token generation with correct secret.",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:1"
      ]
    },
    "Test JWT token validation edge cases.\n        \n        ZERO MOCKS: Uses real JWT operations for edge case testing.": {
      "value": "Test JWT token validation edge cases.\n        \n        ZERO MOCKS: Uses real JWT operations for edge case testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:294"
      ]
    },
    "Test JWT validation flow on staging - reproducing the 401 error": {
      "value": "Test JWT validation flow on staging - reproducing the 401 error",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:2"
      ]
    },
    "Test Limits Examples - See function docstrings for splitting strategies": {
      "value": "Test Limits Examples - See function docstrings for splitting strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:263"
      ]
    },
    "Test Limits Violation Examples and Fixes\nDemonstrates how to fix common test limit violations according to SPEC/testing.xml": {
      "value": "Test Limits Violation Examples and Fixes\nDemonstrates how to fix common test limit violations according to SPEC/testing.xml",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:2"
      ]
    },
    "Test Modern WebSocket Migration\n\nThis script tests the modern WebSocket implementation to ensure:\n1. No deprecation warnings are generated\n2. WebSocket connections work properly\n3. Modern abstractions function correctly\n4. Backward compatibility is maintained": {
      "value": "Test Modern WebSocket Migration\n\nThis script tests the modern WebSocket implementation to ensure:\n1. No deprecation warnings are generated\n2. WebSocket connections work properly\n3. Modern abstractions function correctly\n4. Backward compatibility is maintained",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:2"
      ]
    },
    "Test OAuth authentication flow": {
      "value": "Test OAuth authentication flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:125"
      ]
    },
    "Test OAuth configuration endpoint": {
      "value": "Test OAuth configuration endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:140"
      ]
    },
    "Test OAuth credential loading for development environment.\nVerifies that the auth service correctly loads development-specific OAuth credentials.": {
      "value": "Test OAuth credential loading for development environment.\nVerifies that the auth service correctly loads development-specific OAuth credentials.",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:3"
      ]
    },
    "Test OAuth flow locally with enhanced debugging": {
      "value": "Test OAuth flow locally with enhanced debugging",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:435"
      ]
    },
    "Test OAuth login initiation": {
      "value": "Test OAuth login initiation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:181"
      ]
    },
    "Test OAuth session ID generation without mocks.": {
      "value": "Test OAuth session ID generation without mocks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:467"
      ]
    },
    "Test OAuth state generation without mocks.": {
      "value": "Test OAuth state generation without mocks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:454"
      ]
    },
    "Test Overlap Analyzer\nAnalyzes test files for similarity and potential duplication using vector similarity techniques.": {
      "value": "Test Overlap Analyzer\nAnalyzes test files for similarity and potential duplication using vector similarity techniques.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:1"
      ]
    },
    "Test Performance Optimization Script\n\nAnalyzes and optimizes test suite performance by identifying slow tests,\nflaky tests, and common performance bottlenecks.": {
      "value": "Test Performance Optimization Script\n\nAnalyzes and optimizes test suite performance by identifying slow tests,\nflaky tests, and common performance bottlenecks.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:2"
      ]
    },
    "Test Process Cleanup Utility\nCleans up hanging Node.js and Python test processes on Windows": {
      "value": "Test Process Cleanup Utility\nCleans up hanging Node.js and Python test processes on Windows",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:2"
      ]
    },
    "Test Quality Report (Report Only)": {
      "value": "Test Quality Report (Report Only)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:422"
      ]
    },
    "Test Redis Staging Fixes for Auth Service\nVerifies that Redis localhost fallback is prevented in staging/production\n\nCRITICAL: ZERO MOCKS - Uses only real Redis services and isolated environment": {
      "value": "Test Redis Staging Fixes for Auth Service\nVerifies that Redis localhost fallback is prevented in staging/production\n\nCRITICAL: ZERO MOCKS - Uses only real Redis services and isolated environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:1"
      ]
    },
    "Test Redis connection configuration with real Redis": {
      "value": "Test Redis connection configuration with real Redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:131"
      ]
    },
    "Test Redis connection retry with exponential backoff": {
      "value": "Test Redis connection retry with exponential backoff",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:94"
      ]
    },
    "Test Redis database cleaned": {
      "value": "Test Redis database cleaned",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:122"
      ]
    },
    "Test Redis token blacklist functionality.\n        \n        ZERO MOCKS: Uses real Redis for token blacklisting.": {
      "value": "Test Redis token blacklist functionality.\n        \n        ZERO MOCKS: Uses real Redis for token blacklisting.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:163"
      ]
    },
    "Test Report Analyzer - Analyzes test reports and identifies issues.": {
      "value": "Test Report Analyzer - Analyzes test reports and identifies issues.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:1"
      ]
    },
    "Test Repository Factory for Auth Service\nProvides repository instances for testing without direct database access": {
      "value": "Test Repository Factory for Auth Service\nProvides repository instances for testing without direct database access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/helpers/test_repository_factory.py:1"
      ]
    },
    "Test Results Summary": {
      "value": "Test Results Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:186",
        "scripts/test_auth_fix_simple.py:109"
      ]
    },
    "Test Results:": {
      "value": "Test Results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:317",
        "scripts/test_ansi_logging.py:89",
        "scripts/test_auth_integration.py:141"
      ]
    },
    "Test Runner for Example Message Flow System\n\nComprehensive test runner for the example message flow implementation\nwith detailed reporting and validation.\n\nBusiness Value: Ensures reliability of AI optimization demonstration system": {
      "value": "Test Runner for Example Message Flow System\n\nComprehensive test runner for the example message flow implementation\nwith detailed reporting and validation.\n\nBusiness Value: Ensures reliability of AI optimization demonstration system",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:1"
      ]
    },
    "Test SQLAlchemy 2.0 patterns are working correctly.": {
      "value": "Test SQLAlchemy 2.0 patterns are working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:10"
      ]
    },
    "Test SSL certificate handling for staging database connections.": {
      "value": "Test SSL certificate handling for staging database connections.",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:1"
      ]
    },
    "Test Script: Real JWT Token E2E Test Validation\nPurpose: Validate that E2E tests now use real JWT tokens instead of mock tokens.\n\nThis test verifies that the updated E2E test files properly integrate with\nthe enhanced test framework to use real JWT tokens for authentication.": {
      "value": "Test Script: Real JWT Token E2E Test Validation\nPurpose: Validate that E2E tests now use real JWT tokens instead of mock tokens.\n\nThis test verifies that the updated E2E test files properly integrate with\nthe enhanced test framework to use real JWT tokens for authentication.",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:3"
      ]
    },
    "Test Service Management Script\n\nThis script manages Docker Compose test services for the Netra platform.\nIt provides a simple interface to start, stop, and manage test infrastructure.\n\nUsage:\n    python scripts/manage_test_services.py start          # Start core test services\n    python scripts/manage_test_services.py start --e2e    # Start full E2E stack\n    python scripts/manage_test_services.py stop           # Stop all test services\n    python scripts/manage_test_services.py status         # Check service status\n    python scripts/manage_test_services.py clean          # Stop and clean all data": {
      "value": "Test Service Management Script\n\nThis script manages Docker Compose test services for the Netra platform.\nIt provides a simple interface to start, stop, and manage test infrastructure.\n\nUsage:\n    python scripts/manage_test_services.py start          # Start core test services\n    python scripts/manage_test_services.py start --e2e    # Start full E2E stack\n    python scripts/manage_test_services.py stop           # Stop all test services\n    python scripts/manage_test_services.py status         # Check service status\n    python scripts/manage_test_services.py clean          # Stop and clean all data",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:2"
      ]
    },
    "Test Service Monitor\nMonitors health of test services and provides status endpoint for test coordination.": {
      "value": "Test Service Monitor\nMonitors health of test services and provides status endpoint for test coordination.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:3"
      ]
    },
    "Test Service Orchestration Script\n\nThis script tests the E2E service orchestration system to ensure it can properly\nstart and health-check services for E2E testing.\n\nUsage:\n    python scripts/test_service_orchestration.py\n    python scripts/test_service_orchestration.py --cleanup\n    python scripts/test_service_orchestration.py --verbose": {
      "value": "Test Service Orchestration Script\n\nThis script tests the E2E service orchestration system to ensure it can properly\nstart and health-check services for E2E testing.\n\nUsage:\n    python scripts/test_service_orchestration.py\n    python scripts/test_service_orchestration.py --cleanup\n    python scripts/test_service_orchestration.py --verbose",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:2"
      ]
    },
    "Test Size Violations Analysis and Reporting Script\n\n!!!! CRITICAL WARNING !!!!\nThis script is designed ONLY for analysis and reporting of test size violations.\nThe auto-fix capabilities are DISABLED by default and should ONLY be used:\n1. In dry-run mode for planning manual refactoring\n2. With explicit human review before any actual changes\n3. After backing up all affected files\n4. With immediate test validation after any changes\n\nNEVER use auto-fix in production code without thorough review!\n\nCapabilities:\n1. ANALYZE test files for size violations (SAFE)\n2. REPORT violations and suggest improvements (SAFE)\n3. DRY-RUN mode to preview potential changes (SAFE)\n4. ACTUAL fixes require explicit opt-in and multiple confirmations (DANGEROUS)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Code Quality Analysis and Reporting\n- Value Impact: Identifies technical debt for manual remediation\n- Strategic/Revenue Impact: Provides metrics for prioritizing refactoring efforts": {
      "value": "Test Size Violations Analysis and Reporting Script\n\n!!!! CRITICAL WARNING !!!!\nThis script is designed ONLY for analysis and reporting of test size violations.\nThe auto-fix capabilities are DISABLED by default and should ONLY be used:\n1. In dry-run mode for planning manual refactoring\n2. With explicit human review before any actual changes\n3. After backing up all affected files\n4. With immediate test validation after any changes\n\nNEVER use auto-fix in production code without thorough review!\n\nCapabilities:\n1. ANALYZE test files for size violations (SAFE)\n2. REPORT violations and suggest improvements (SAFE)\n3. DRY-RUN mode to preview potential changes (SAFE)\n4. ACTUAL fixes require explicit opt-in and multiple confirmations (DANGEROUS)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Code Quality Analysis and Reporting\n- Value Impact: Identifies technical debt for manual remediation\n- Strategic/Revenue Impact: Provides metrics for prioritizing refactoring efforts",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:2"
      ]
    },
    "Test Staging Startup Sequence\nenv = get_env()\nTests the complete startup sequence for staging deployment.\nValidates service initialization order, dependencies, and configuration.": {
      "value": "Test Staging Startup Sequence\nenv = get_env()\nTests the complete startup sequence for staging deployment.\nValidates service initialization order, dependencies, and configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:3"
      ]
    },
    "Test Stub Detection and Removal Script\n\nThis script automatically detects test stubs, mock implementations, and placeholder\ncode in production files according to the SPEC/no_test_stubs.xml specification.\n\nUsage:\n    python scripts/remove_test_stubs.py --scan          # Scan for test stubs\n    python scripts/remove_test_stubs.py --fix           # Fix detected stubs\n    python scripts/remove_test_stubs.py --report        # Generate detailed report": {
      "value": "Test Stub Detection and Removal Script\n\nThis script automatically detects test stubs, mock implementations, and placeholder\ncode in production files according to the SPEC/no_test_stubs.xml specification.\n\nUsage:\n    python scripts/remove_test_stubs.py --scan          # Scan for test stubs\n    python scripts/remove_test_stubs.py --fix           # Fix detected stubs\n    python scripts/remove_test_stubs.py --report        # Generate detailed report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:2"
      ]
    },
    "Test Stub Detection and Removal Tool": {
      "value": "Test Stub Detection and Removal Tool",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:354"
      ]
    },
    "Test Summary": {
      "value": "Test Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:180"
      ]
    },
    "Test TCP connection as fallback (should fail from local).": {
      "value": "Test TCP connection as fallback (should fail from local).",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:86"
      ]
    },
    "Test URL:": {
      "value": "Test URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:131"
      ]
    },
    "Test User": {
      "value": "Test User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:39",
        "auth_service/tests/test_auth_real_services_comprehensive.py:91",
        "auth_service/tests/test_auth_real_services_comprehensive.py:100",
        "auth_service/tests/test_auth_real_services_comprehensive.py:302",
        "auth_service/tests/test_auth_real_services_comprehensive.py:342",
        "auth_service/tests/test_auth_real_services_comprehensive.py:377",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:148",
        "auth_service/tests/test_oauth_state_validation.py:128",
        "auth_service/tests/test_oauth_state_validation.py:271",
        "auth_service/tests/test_signup_flow_comprehensive.py:128"
      ]
    },
    "Test User Real": {
      "value": "Test User Real",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:234"
      ]
    },
    "Test Violations Reporter - Focus specifically on test file and function violations\nGenerates detailed reports with splitting suggestions for test limit violations.": {
      "value": "Test Violations Reporter - Focus specifically on test file and function violations\nGenerates detailed reports with splitting suggestions for test limit violations.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:2"
      ]
    },
    "Test WebSocket CORS.": {
      "value": "Test WebSocket CORS.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:136"
      ]
    },
    "Test WebSocket configuration endpoint.": {
      "value": "Test WebSocket configuration endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:83",
        "scripts/test_websocket_middleware.py:39"
      ]
    },
    "Test WebSocket connection and functionality.": {
      "value": "Test WebSocket connection and functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:170"
      ]
    },
    "Test WebSocket connection capabilities.": {
      "value": "Test WebSocket connection capabilities.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:99"
      ]
    },
    "Test WebSocket connection in development mode.": {
      "value": "Test WebSocket connection in development mode.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:17"
      ]
    },
    "Test WebSocket connection to diagnose rapid disconnect issue.\n\nThis script tests the WebSocket connection to understand why it's immediately\ndisconnecting after successful authentication.": {
      "value": "Test WebSocket connection to diagnose rapid disconnect issue.\n\nThis script tests the WebSocket connection to understand why it's immediately\ndisconnecting after successful authentication.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:2"
      ]
    },
    "Test WebSocket connection to specified URL.": {
      "value": "Test WebSocket connection to specified URL.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:68"
      ]
    },
    "Test WebSocket connection with real JWT token.": {
      "value": "Test WebSocket connection with real JWT token.",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:131"
      ]
    },
    "Test WebSocket connection with various configurations.": {
      "value": "Test WebSocket connection with various configurations.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:20"
      ]
    },
    "Test WebSocket connection.": {
      "value": "Test WebSocket connection.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:262"
      ]
    },
    "Test WebSocket connections for Docker networking scenarios.": {
      "value": "Test WebSocket connections for Docker networking scenarios.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:116"
      ]
    },
    "Test WebSocket connectivity": {
      "value": "Test WebSocket connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:36",
        "scripts/test_staging_deployment.py:146"
      ]
    },
    "Test WebSocket event delivery confirmation.": {
      "value": "Test WebSocket event delivery confirmation.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:226"
      ]
    },
    "Test WebSocket failed:": {
      "value": "Test WebSocket failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:83"
      ]
    },
    "Test WebSocket health endpoint.": {
      "value": "Test WebSocket health endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:113"
      ]
    },
    "Test WebSocket notifier basic functionality.": {
      "value": "Test WebSocket notifier basic functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:150",
        "scripts/test_websocket_chat_standalone.py:150"
      ]
    },
    "Test WebSocket performance in staging.": {
      "value": "Test WebSocket performance in staging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:183"
      ]
    },
    "Test WebSocket with CORS origin headers.": {
      "value": "Test WebSocket with CORS origin headers.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:87"
      ]
    },
    "Test a simple WebSocket connection.\n    \n    Args:\n        url: WebSocket URL to test\n        origin: Origin header to send": {
      "value": "Test a simple WebSocket connection.\n    \n    Args:\n        url: WebSocket URL to test\n        origin: Origin header to send",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:17"
      ]
    },
    "Test a single WebSocket connection.\n        \n        Args:\n            websocket_url: WebSocket URL to connect to\n            origin: Origin header to send\n            test_name: Name of the test\n            expect_success: Whether we expect the connection to succeed\n            \n        Returns:\n            Test result dictionary": {
      "value": "Test a single WebSocket connection.\n        \n        Args:\n            websocket_url: WebSocket URL to connect to\n            origin: Origin header to send\n            test_name: Name of the test\n            expect_success: Whether we expect the connection to succeed\n            \n        Returns:\n            Test result dictionary",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:44"
      ]
    },
    "Test a single endpoint": {
      "value": "Test a single endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:39"
      ]
    },
    "Test a single prompt through the triage agent": {
      "value": "Test a single prompt through the triage agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:125"
      ]
    },
    "Test a specific scenario.": {
      "value": "Test a specific scenario.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:99"
      ]
    },
    "Test a specific workflow scenario.": {
      "value": "Test a specific workflow scenario.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:36"
      ]
    },
    "Test actual CORS request.": {
      "value": "Test actual CORS request.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:99"
      ]
    },
    "Test actual GET request with CORS.": {
      "value": "Test actual GET request with CORS.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:59"
      ]
    },
    "Test actual request with CORS headers.": {
      "value": "Test actual request with CORS headers.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:106"
      ]
    },
    "Test actual supervisor execution flow to verify WebSocket events.": {
      "value": "Test actual supervisor execution flow to verify WebSocket events.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:2"
      ]
    },
    "Test actual supervisor execution to see if WebSocket events are sent.": {
      "value": "Test actual supervisor execution to see if WebSocket events are sent.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:66"
      ]
    },
    "Test agent flow through staging WebSocket.": {
      "value": "Test agent flow through staging WebSocket.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:141"
      ]
    },
    "Test alignment complete!": {
      "value": "Test alignment complete!",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:62"
      ]
    },
    "Test all configured origins for the environment": {
      "value": "Test all configured origins for the environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:439"
      ]
    },
    "Test all health endpoints with different HTTP methods.": {
      "value": "Test all health endpoints with different HTTP methods.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:76"
      ]
    },
    "Test all imports (comprehensive, slower)": {
      "value": "Test all imports (comprehensive, slower)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:42"
      ]
    },
    "Test analytics data consistency validation": {
      "value": "Test analytics data consistency validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:166"
      ]
    },
    "Test and diagnose staging authentication issues.\nChecks JWT validation between auth service and backend.": {
      "value": "Test and diagnose staging authentication issues.\nChecks JWT validation between auth service and backend.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:3"
      ]
    },
    "Test and fix CORS configuration for localhost vs 127.0.0.1 mismatch.": {
      "value": "Test and fix CORS configuration for localhost vs 127.0.0.1 mismatch.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:1"
      ]
    },
    "Test assertion failed": {
      "value": "Test assertion failed",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:123"
      ]
    },
    "Test async PostgreSQL connections for both backend and auth services\n\nThis script verifies that the new async-only PostgreSQL configuration\nworks correctly in local development environment.": {
      "value": "Test async PostgreSQL connections for both backend and auth services\n\nThis script verifies that the new async-only PostgreSQL configuration\nworks correctly in local development environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:3"
      ]
    },
    "Test async health check with proper timeout handling": {
      "value": "Test async health check with proper timeout handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:132"
      ]
    },
    "Test async request handling with real AsyncClient.\n        \n        Validates that async requests work correctly with actual service.": {
      "value": "Test async request handling with real AsyncClient.\n        \n        Validates that async requests work correctly with actual service.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:61"
      ]
    },
    "Test async serialization performance specifically.": {
      "value": "Test async serialization performance specifically.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:140"
      ]
    },
    "Test auth client directly": {
      "value": "Test auth client directly",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:21"
      ]
    },
    "Test auth service API endpoints": {
      "value": "Test auth service API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:40"
      ]
    },
    "Test auth service configuration with the fixes.": {
      "value": "Test auth service configuration with the fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:18",
        "scripts/test_auth_service_integration_fix.py:21"
      ]
    },
    "Test auth service database connection": {
      "value": "Test auth service database connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:67"
      ]
    },
    "Test auth service database session management and DatabaseURLBuilder integration.": {
      "value": "Test auth service database session management and DatabaseURLBuilder integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:2"
      ]
    },
    "Test auth service health endpoint": {
      "value": "Test auth service health endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:28"
      ]
    },
    "Test auth session persistence in real database.": {
      "value": "Test auth session persistence in real database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:107"
      ]
    },
    "Test authentication flow on staging with fresh tokens": {
      "value": "Test authentication flow on staging with fresh tokens",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:2"
      ]
    },
    "Test authentication flow.": {
      "value": "Test authentication flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:217"
      ]
    },
    "Test backend API endpoints": {
      "value": "Test backend API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:25"
      ]
    },
    "Test backend auth client integration": {
      "value": "Test backend auth client integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:62"
      ]
    },
    "Test backend health endpoint": {
      "value": "Test backend health endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:13"
      ]
    },
    "Test backend service database connection": {
      "value": "Test backend service database connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:24"
      ]
    },
    "Test backend's auth configuration and debug token validation": {
      "value": "Test backend's auth configuration and debug token validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:11"
      ]
    },
    "Test backend's auth service configuration": {
      "value": "Test backend's auth service configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:2"
      ]
    },
    "Test basic API endpoints availability.": {
      "value": "Test basic API endpoints availability.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:200"
      ]
    },
    "Test basic JWT token creation and validation": {
      "value": "Test basic JWT token creation and validation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:60"
      ]
    },
    "Test basic connectivity to auth service.": {
      "value": "Test basic connectivity to auth service.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:63",
        "scripts/test_auth_service_integration_fix.py:125"
      ]
    },
    "Test basic service startup orchestration.": {
      "value": "Test basic service startup orchestration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:20"
      ]
    },
    "Test blacklist performance with many tokens": {
      "value": "Test blacklist performance with many tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:393"
      ]
    },
    "Test blocking behavior between sync and async serialization.": {
      "value": "Test blocking behavior between sync and async serialization.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:58"
      ]
    },
    "Test canonical WebSocket manager functionality (with integrated modern features).": {
      "value": "Test canonical WebSocket manager functionality (with integrated modern features).",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:69"
      ]
    },
    "Test case": {
      "value": "Test case",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:85"
      ]
    },
    "Test category '": {
      "value": "Test category '",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:42"
      ]
    },
    "Test category to run": {
      "value": "Test category to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:370"
      ]
    },
    "Test category to run (default: integration)": {
      "value": "Test category to run (default: integration)",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:196"
      ]
    },
    "Test centralized Docker manager with parallel execution": {
      "value": "Test centralized Docker manager with parallel execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:233"
      ]
    },
    "Test chat interface for errors": {
      "value": "Test chat interface for errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:1"
      ]
    },
    "Test checking specific workflow run ID": {
      "value": "Test checking specific workflow run ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:154"
      ]
    },
    "Test classes:": {
      "value": "Test classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:36"
      ]
    },
    "Test collection timed out after 60 seconds": {
      "value": "Test collection timed out after 60 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:139"
      ]
    },
    "Test complete OAuth flow from initiation to callback.": {
      "value": "Test complete OAuth flow from initiation to callback.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:228"
      ]
    },
    "Test complete agent execution with WebSocket event validation.": {
      "value": "Test complete agent execution with WebSocket event validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:252"
      ]
    },
    "Test complete authentication flow on staging": {
      "value": "Test complete authentication flow on staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:13"
      ]
    },
    "Test complete chat flow with mocked external dependencies.": {
      "value": "Test complete chat flow with mocked external dependencies.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:252",
        "scripts/test_websocket_chat_standalone.py:248"
      ]
    },
    "Test complete end-to-end coordination workflow.": {
      "value": "Test complete end-to-end coordination workflow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:278"
      ]
    },
    "Test complete signup flow with edge cases": {
      "value": "Test complete signup flow with edge cases",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:13"
      ]
    },
    "Test complete user login with real database.": {
      "value": "Test complete user login with real database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:329"
      ]
    },
    "Test complete user registration with real database.": {
      "value": "Test complete user registration with real database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:299"
      ]
    },
    "Test complete. Check the log output above for proper file:line information.": {
      "value": "Test complete. Check the log output above for proper file:line information.",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:47"
      ]
    },
    "Test completed successfully!": {
      "value": "Test completed successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:69"
      ]
    },
    "Test completed with exit code:": {
      "value": "Test completed with exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:107"
      ]
    },
    "Test completed!": {
      "value": "Test completed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:219"
      ]
    },
    "Test comprehensive error handling in Redis operations": {
      "value": "Test comprehensive error handling in Redis operations",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:155"
      ]
    },
    "Test concurrent request handling.": {
      "value": "Test concurrent request handling.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:341"
      ]
    },
    "Test concurrent serialization behavior.": {
      "value": "Test concurrent serialization behavior.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:184"
      ]
    },
    "Test concurrent token refresh for race conditions.\n        \n        ZERO MOCKS: Tests real concurrent operations with real services.": {
      "value": "Test concurrent token refresh for race conditions.\n        \n        ZERO MOCKS: Tests real concurrent operations with real services.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:247"
      ]
    },
    "Test concurrent vs sequential processing.": {
      "value": "Test concurrent vs sequential processing.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:132"
      ]
    },
    "Test config file not found:": {
      "value": "Test config file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:218"
      ]
    },
    "Test configuration loading for staging environment.": {
      "value": "Test configuration loading for staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:2"
      ]
    },
    "Test configuration loading with detailed logging for debugging staging issues.": {
      "value": "Test configuration loading with detailed logging for debugging staging issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:2"
      ]
    },
    "Test connection initialization with real SQLite database.": {
      "value": "Test connection initialization with real SQLite database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:101"
      ]
    },
    "Test connection recovery within 5 seconds.": {
      "value": "Test connection recovery within 5 seconds.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:120"
      ]
    },
    "Test connection retry logic with simulated failures": {
      "value": "Test connection retry logic with simulated failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:82"
      ]
    },
    "Test connection timeout is properly handled.": {
      "value": "Test connection timeout is properly handled.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:86"
      ]
    },
    "Test connection using AuthConfig generated URL.": {
      "value": "Test connection using AuthConfig generated URL.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:188"
      ]
    },
    "Test connection with Docker Compose style DATABASE_URL.": {
      "value": "Test connection with Docker Compose style DATABASE_URL.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:40"
      ]
    },
    "Test connection with individual POSTGRES_* variables.": {
      "value": "Test connection with individual POSTGRES_* variables.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:70"
      ]
    },
    "Test connectivity to orchestrated services.": {
      "value": "Test connectivity to orchestrated services.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:100"
      ]
    },
    "Test corpus admin initialization.": {
      "value": "Test corpus admin initialization.",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:18"
      ]
    },
    "Test corpus admin with mock LLM manager.": {
      "value": "Test corpus admin with mock LLM manager.",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:17"
      ]
    },
    "Test coverage calculation module.\n\nCalculates test coverage metrics and trends.\nFollows 450-line limit with 25-line function limit.": {
      "value": "Test coverage calculation module.\n\nCalculates test coverage metrics and trends.\nFollows 450-line limit with 25-line function limit.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:1"
      ]
    },
    "Test coverage metrics calculator.\n\nCalculates test coverage and related metrics.\nFollows 450-line limit with 25-line function limit.": {
      "value": "Test coverage metrics calculator.\n\nCalculates test coverage and related metrics.\nFollows 450-line limit with 25-line function limit.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:1"
      ]
    },
    "Test crashed:": {
      "value": "Test crashed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:188",
        "auth_service/test_staging_db_connection.py:337",
        "auth_service/test_url_construction.py:254"
      ]
    },
    "Test creating an auth user in real database.": {
      "value": "Test creating an auth user in real database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:75"
      ]
    },
    "Test credentials have been generated and saved.": {
      "value": "Test credentials have been generated and saved.",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:310"
      ]
    },
    "Test credentials saved to:": {
      "value": "Test credentials saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:278"
      ]
    },
    "Test cross-service integration and dependencies.": {
      "value": "Test cross-service integration and dependencies.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:139"
      ]
    },
    "Test data seeding completed successfully!": {
      "value": "Test data seeding completed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:388"
      ]
    },
    "Test data seeding failed:": {
      "value": "Test data seeding failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:391"
      ]
    },
    "Test database connection initialization with DATABASE_URL.": {
      "value": "Test database connection initialization with DATABASE_URL.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:52"
      ]
    },
    "Test database connection pool behavior.\n        \n        ZERO MOCKS: Uses real PostgreSQL connection pool.": {
      "value": "Test database connection pool behavior.\n        \n        ZERO MOCKS: Uses real PostgreSQL connection pool.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:362"
      ]
    },
    "Test database connection with individual secrets.": {
      "value": "Test database connection with individual secrets.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:30"
      ]
    },
    "Test database initialization and table creation": {
      "value": "Test database initialization and table creation",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:18"
      ]
    },
    "Test database migrations against staging database.": {
      "value": "Test database migrations against staging database.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:1"
      ]
    },
    "Test database transaction rollback behavior.\n        \n        ZERO MOCKS: Uses real PostgreSQL transactions.": {
      "value": "Test database transaction rollback behavior.\n        \n        ZERO MOCKS: Uses real PostgreSQL transactions.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:392"
      ]
    },
    "Test database user lookup in refresh endpoint.\n        \n        ZERO MOCKS: Uses real PostgreSQL database operations.": {
      "value": "Test database user lookup in refresh endpoint.\n        \n        ZERO MOCKS: Uses real PostgreSQL database operations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:115"
      ]
    },
    "Test demonstrating that synchronous serialization blocks the event loop.\n    \n    This test SHOULD show blocking behavior with the current implementation.\n    Once async serialization is implemented, the blocking should be eliminated.": {
      "value": "Test demonstrating that synchronous serialization blocks the event loop.\n    \n    This test SHOULD show blocking behavior with the current implementation.\n    Once async serialization is implemented, the blocking should be eliminated.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:126"
      ]
    },
    "Test dev login to get initial tokens": {
      "value": "Test dev login to get initial tokens",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:58"
      ]
    },
    "Test different HTTP methods for a service health endpoint.": {
      "value": "Test different HTTP methods for a service health endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:89"
      ]
    },
    "Test direct asyncpg connection using staging credentials.": {
      "value": "Test direct asyncpg connection using staging credentials.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:49"
      ]
    },
    "Test directories:": {
      "value": "Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:135"
      ]
    },
    "Test directory": {
      "value": "Test directory",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:135"
      ]
    },
    "Test directory to analyze": {
      "value": "Test directory to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:344"
      ]
    },
    "Test discovery file not found:": {
      "value": "Test discovery file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:317"
      ]
    },
    "Test distribution by top-level directory:": {
      "value": "Test distribution by top-level directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:55"
      ]
    },
    "Test documentation created in": {
      "value": "Test documentation created in",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:280"
      ]
    },
    "Test endpoint health check.": {
      "value": "Test endpoint health check.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:60"
      ]
    },
    "Test endpoints are only available in development environment": {
      "value": "Test endpoints are only available in development environment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:30"
      ]
    },
    "Test endpoints for development - bypasses authentication\nONLY enabled in development environment": {
      "value": "Test endpoints for development - bypasses authentication\nONLY enabled in development environment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:2"
      ]
    },
    "Test engine creation uses config when URL not provided.": {
      "value": "Test engine creation uses config when URL not provided.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:235"
      ]
    },
    "Test engine creation with provided URL.": {
      "value": "Test engine creation with provided URL.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:220"
      ]
    },
    "Test enhanced tool execution with WebSocket integration.": {
      "value": "Test enhanced tool execution with WebSocket integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:332"
      ]
    },
    "Test environment cleanup completed": {
      "value": "Test environment cleanup completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:97"
      ]
    },
    "Test environment configuration edge cases.\n        \n        ZERO MOCKS: Uses real environment isolation for testing.": {
      "value": "Test environment configuration edge cases.\n        \n        ZERO MOCKS: Uses real environment isolation for testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:330"
      ]
    },
    "Test environment initialized successfully": {
      "value": "Test environment initialized successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:42"
      ]
    },
    "Test environment service for E2E testing infrastructure.": {
      "value": "Test environment service for E2E testing infrastructure.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:1"
      ]
    },
    "Test environment variable loading and configuration for auth service.\nThis test ensures that SERVICE_SECRET and SERVICE_ID are properly loaded\nand prevents race conditions during module imports.\n\nCreated: 2025-08-30\nIssue: Auth service startup failure due to environment loading race condition": {
      "value": "Test environment variable loading and configuration for auth service.\nThis test ensures that SERVICE_SECRET and SERVICE_ID are properly loaded\nand prevents race conditions during module imports.\n\nCreated: 2025-08-30\nIssue: Auth service startup failure due to environment loading race condition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:1"
      ]
    },
    "Test error": {
      "value": "Test error",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:357"
      ]
    },
    "Test error handling with real service behavior.\n        \n        Validates that the service handles errors correctly without mocks.": {
      "value": "Test error handling with real service behavior.\n        \n        Validates that the service handles errors correctly without mocks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:173"
      ]
    },
    "Test error:": {
      "value": "Test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:247"
      ]
    },
    "Test exception from clickhouse.py line 412": {
      "value": "Test exception from clickhouse.py line 412",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:36"
      ]
    },
    "Test exception in development": {
      "value": "Test exception in development",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:66"
      ]
    },
    "Test execution error:": {
      "value": "Test execution error:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:62",
        "scripts/test_clickhouse_startup_fix.py:356"
      ]
    },
    "Test execution failed:": {
      "value": "Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:330",
        "scripts/test_backend_optimized.py:449",
        "scripts/test_modern_websocket_migration.py:239"
      ]
    },
    "Test execution interrupted by user": {
      "value": "Test execution interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:99",
        "scripts/test_backend_optimized.py:446",
        "scripts/test_clickhouse_startup_fix.py:425"
      ]
    },
    "Test execution mode": {
      "value": "Test execution mode",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:51"
      ]
    },
    "Test execution timed out": {
      "value": "Test execution timed out",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:60"
      ]
    },
    "Test failed": {
      "value": "Test failed",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:131"
      ]
    },
    "Test failed with error:": {
      "value": "Test failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:270",
        "scripts/test_service_health_simple.py:86",
        "scripts/test_websocket_manual.py:147"
      ]
    },
    "Test failed with exception:": {
      "value": "Test failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:141",
        "scripts/test_service_orchestration.py:238"
      ]
    },
    "Test failed:": {
      "value": "Test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:83",
        "auth_service/tests/test_environment_loading.py:129",
        "auth_service/tests/test_environment_loading.py:179",
        "auth_service/tests/test_environment_loading.py:237",
        "auth_service/tests/test_environment_loading.py:282",
        "auth_service/tests/test_environment_loading.py:327",
        "scripts/simple_serialization_test.py:269",
        "scripts/test_blocking_analysis.py:373",
        "scripts/test_error_monitor_logic.py:245",
        "scripts/test_intensive_serialization.py:375"
      ]
    },
    "Test fallback to in-memory registration when no database": {
      "value": "Test fallback to in-memory registration when no database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:212"
      ]
    },
    "Test file": {
      "value": "Test file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:742"
      ]
    },
    "Test file and function limits compliance checker.\nEnforces SPEC/testing.xml rules: test files MUST follow same 450-line limit as production code,\ntest functions MUST follow same 25-line limit as production code.": {
      "value": "Test file and function limits compliance checker.\nEnforces SPEC/testing.xml rules: test files MUST follow same 450-line limit as production code,\ntest functions MUST follow same 25-line limit as production code.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:2"
      ]
    },
    "Test file exceeds": {
      "value": "Test file exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:112",
        "scripts/compliance/test_size_validator.py:193"
      ]
    },
    "Test file not found:": {
      "value": "Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:32",
        "scripts/frontend_iterative_test_runner.py:610"
      ]
    },
    "Test file path": {
      "value": "Test file path",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:445"
      ]
    },
    "Test file to analyze": {
      "value": "Test file to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:673",
        "scripts/compliance/test_refactor_helper.py:678"
      ]
    },
    "Test file to validate": {
      "value": "Test file to validate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:684"
      ]
    },
    "Test files:": {
      "value": "Test files:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:426"
      ]
    },
    "Test for event loop blocking with very complex objects.": {
      "value": "Test for event loop blocking with very complex objects.",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:133"
      ]
    },
    "Test function '": {
      "value": "Test function '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_requirements_enforcer.py:448",
        "scripts/compliance/test_limits_checker.py:156",
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "Test functions:": {
      "value": "Test functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:35",
        "scripts/compliance/demo_test_size_enforcement.py:156"
      ]
    },
    "Test graceful degradation when ClickHouse is unavailable": {
      "value": "Test graceful degradation when ClickHouse is unavailable",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:270"
      ]
    },
    "Test graceful degradation when Redis not required in staging": {
      "value": "Test graceful degradation when Redis not required in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:81"
      ]
    },
    "Test graceful degradation with optional service failures.": {
      "value": "Test graceful degradation with optional service failures.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:230"
      ]
    },
    "Test handling of Redis connection failures.": {
      "value": "Test handling of Redis connection failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:502"
      ]
    },
    "Test handling of database connection failures.": {
      "value": "Test handling of database connection failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:484"
      ]
    },
    "Test handling of database errors during registration": {
      "value": "Test handling of database errors during registration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:191"
      ]
    },
    "Test handling of extremely long inputs": {
      "value": "Test handling of extremely long inputs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:308"
      ]
    },
    "Test handling of unicode and special characters": {
      "value": "Test handling of unicode and special characters",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:323"
      ]
    },
    "Test health endpoints for all services": {
      "value": "Test health endpoints for all services",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:82"
      ]
    },
    "Test if Cloud SQL connector can be imported": {
      "value": "Test if Cloud SQL connector can be imported",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:110"
      ]
    },
    "Test if a port is connectable.": {
      "value": "Test if a port is connectable.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:144"
      ]
    },
    "Test if an HTTP service is responsive.": {
      "value": "Test if an HTTP service is responsive.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:159"
      ]
    },
    "Test if background jobs Redis connection fails appropriately.": {
      "value": "Test if background jobs Redis connection fails appropriately.",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:301"
      ]
    },
    "Test if serialization blocks the event loop.": {
      "value": "Test if serialization blocks the event loop.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:62"
      ]
    },
    "Test if supervisor is properly integrated with WebSocket notifications.": {
      "value": "Test if supervisor is properly integrated with WebSocket notifications.",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:20"
      ]
    },
    "Test if the backend is running.": {
      "value": "Test if the backend is running.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:27"
      ]
    },
    "Test info message from level1 function": {
      "value": "Test info message from level1 function",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:15"
      ]
    },
    "Test infrastructure significantly improved across iterations 71-100!": {
      "value": "Test infrastructure significantly improved across iterations 71-100!",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:135"
      ]
    },
    "Test interrupted by user": {
      "value": "Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:334",
        "scripts/test_async_serialization_direct.py:268",
        "scripts/test_service_orchestration.py:235",
        "scripts/test_websocket_dev_mode.py:344",
        "scripts/test_websocket_manual.py:144"
      ]
    },
    "Test interrupted by user.": {
      "value": "Test interrupted by user.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:437"
      ]
    },
    "Test is currently failing": {
      "value": "Test is currently failing",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:357"
      ]
    },
    "Test is currently passing": {
      "value": "Test is currently passing",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:354"
      ]
    },
    "Test level to run": {
      "value": "Test level to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:77"
      ]
    },
    "Test logout functionality": {
      "value": "Test logout functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:290"
      ]
    },
    "Test main API endpoints": {
      "value": "Test main API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:102"
      ]
    },
    "Test making an authenticated API call to the backend": {
      "value": "Test making an authenticated API call to the backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:192"
      ]
    },
    "Test message for validation": {
      "value": "Test message for validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:281",
        "scripts/test_example_message_flow.py:296"
      ]
    },
    "Test method to use": {
      "value": "Test method to use",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:398"
      ]
    },
    "Test module for refresh token fix - ensures tokens are properly refreshed with unique values": {
      "value": "Test module for refresh token fix - ensures tokens are properly refreshed with unique values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:1"
      ]
    },
    "Test module split from original file": {
      "value": "Test module split from original file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:518"
      ]
    },
    "Test name or path": {
      "value": "Test name or path",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:773"
      ]
    },
    "Test passed": {
      "value": "Test passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:182",
        "scripts/test_error_monitor_logic.py:206",
        "scripts/test_error_monitor_logic.py:225"
      ]
    },
    "Test pattern to run": {
      "value": "Test pattern to run",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:192"
      ]
    },
    "Test performance for a specific service.": {
      "value": "Test performance for a specific service.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:308"
      ]
    },
    "Test performance metrics for all services.": {
      "value": "Test performance metrics for all services.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:295"
      ]
    },
    "Test port allocation prevents conflicts.": {
      "value": "Test port allocation prevents conflicts.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:157"
      ]
    },
    "Test processes running:": {
      "value": "Test processes running:",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:164"
      ]
    },
    "Test proper resource cleanup.": {
      "value": "Test proper resource cleanup.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:350"
      ]
    },
    "Test race condition protection for concurrent registrations": {
      "value": "Test race condition protection for concurrent registrations",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:350"
      ]
    },
    "Test rapid sequential token refreshes": {
      "value": "Test rapid sequential token refreshes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:336"
      ]
    },
    "Test receiving model response via WebSocket.": {
      "value": "Test receiving model response via WebSocket.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:371"
      ]
    },
    "Test refactoring helper": {
      "value": "Test refactoring helper",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:659"
      ]
    },
    "Test refactoring helper for splitting large test files.\n\nThis helper analyzes large test files and suggests intelligent splits based on:\n- Test categories (unit, integration, e2e)\n- Functionality being tested\n- Test classes and groupings\n- Dependencies between tests\n\nFeatures:\n- Analyzes large test files and suggests splits\n- Groups related tests for extraction\n- Maintains test dependencies when splitting\n- Generates new file names following conventions\n- Preserves imports and test utilities": {
      "value": "Test refactoring helper for splitting large test files.\n\nThis helper analyzes large test files and suggests intelligent splits based on:\n- Test categories (unit, integration, e2e)\n- Functionality being tested\n- Test classes and groupings\n- Dependencies between tests\n\nFeatures:\n- Analyzes large test files and suggests splits\n- Groups related tests for extraction\n- Maintains test dependencies when splitting\n- Generates new file names following conventions\n- Preserves imports and test utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:2"
      ]
    },
    "Test refresh endpoint accepts different field naming formats": {
      "value": "Test refresh endpoint accepts different field naming formats",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:13"
      ]
    },
    "Test refresh endpoint handles concurrent requests with real services.\n        \n        ZERO MOCKS: Tests real concurrent JWT operations.": {
      "value": "Test refresh endpoint handles concurrent requests with real services.\n        \n        ZERO MOCKS: Tests real concurrent JWT operations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:335"
      ]
    },
    "Test refresh endpoint with REAL blacklisted token.\n        \n        ZERO MOCKS: Uses real Redis for blacklist and real JWT.": {
      "value": "Test refresh endpoint with REAL blacklisted token.\n        \n        ZERO MOCKS: Uses real Redis for blacklist and real JWT.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:148"
      ]
    },
    "Test refresh endpoint with REAL database integration.\n        \n        ZERO MOCKS: Tests complete flow with real PostgreSQL.": {
      "value": "Test refresh endpoint with REAL database integration.\n        \n        ZERO MOCKS: Tests complete flow with real PostgreSQL.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:257"
      ]
    },
    "Test refresh endpoint with REAL expired token.\n        \n        ZERO MOCKS: Creates real expired JWT token.": {
      "value": "Test refresh endpoint with REAL expired token.\n        \n        ZERO MOCKS: Creates real expired JWT token.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:96"
      ]
    },
    "Test refresh endpoint with REAL valid refresh token.\n        \n        ZERO MOCKS: Uses real JWT manager and real database.": {
      "value": "Test refresh endpoint with REAL valid refresh token.\n        \n        ZERO MOCKS: Uses real JWT manager and real database.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:48"
      ]
    },
    "Test refresh endpoint with access token instead of refresh token.\n        \n        ZERO MOCKS: Creates real access token and tests validation.": {
      "value": "Test refresh endpoint with access token instead of refresh token.\n        \n        ZERO MOCKS: Creates real access token and tests validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:220"
      ]
    },
    "Test refresh endpoint with real async client.": {
      "value": "Test refresh endpoint with real async client.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:430"
      ]
    },
    "Test refresh fails with invalid token": {
      "value": "Test refresh fails with invalid token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:291"
      ]
    },
    "Test refresh handles race condition": {
      "value": "Test refresh handles race condition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:300"
      ]
    },
    "Test refresh updates user session": {
      "value": "Test refresh updates user session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:312"
      ]
    },
    "Test refresh with real token using camelCase": {
      "value": "Test refresh with real token using camelCase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:266"
      ]
    },
    "Test refresh with real token using snake_case": {
      "value": "Test refresh with real token using snake_case",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:248"
      ]
    },
    "Test registration with empty fields": {
      "value": "Test registration with empty fields",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:272"
      ]
    },
    "Test registration with existing email": {
      "value": "Test registration with existing email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:140"
      ]
    },
    "Test registration with invalid email": {
      "value": "Test registration with invalid email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:165"
      ]
    },
    "Test registration with weak password": {
      "value": "Test registration with weak password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:178"
      ]
    },
    "Test remediation on a small sample of high-priority files": {
      "value": "Test remediation on a small sample of high-priority files",
      "category": "test_literals",
      "locations": [
        "scripts/test_remediation_sample.py:2"
      ]
    },
    "Test report saved to: workflow_verification_test_report.md": {
      "value": "Test report saved to: workflow_verification_test_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:218"
      ]
    },
    "Test request": {
      "value": "Test request",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:108"
      ]
    },
    "Test request with very long content": {
      "value": "Test request with very long content",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:41"
      ]
    },
    "Test requires staging environment, current:": {
      "value": "Test requires staging environment, current:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:522"
      ]
    },
    "Test response from supervisor": {
      "value": "Test response from supervisor",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:83"
      ]
    },
    "Test run timed out": {
      "value": "Test run timed out",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:43",
        "scripts/frontend_iterative_test_runner.py:217"
      ]
    },
    "Test run timed out after 10 minutes": {
      "value": "Test run timed out after 10 minutes",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:235"
      ]
    },
    "Test run timed out after 5 minutes": {
      "value": "Test run timed out after 5 minutes",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:218"
      ]
    },
    "Test runner error:": {
      "value": "Test runner error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:428"
      ]
    },
    "Test runner failed:": {
      "value": "Test runner failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:473"
      ]
    },
    "Test runner script for the agent pipeline real test.\nLoads development environment and runs the test with proper configuration.": {
      "value": "Test runner script for the agent pipeline real test.\nLoads development environment and runs the test with proper configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:3"
      ]
    },
    "Test runner to validate service coordination fixes.\n\nThis script runs the coordination system tests to ensure all issues\nidentified in test_critical_cold_start_initialization.py are resolved.": {
      "value": "Test runner to validate service coordination fixes.\n\nThis script runs the coordination system tests to ensure all issues\nidentified in test_critical_cold_start_initialization.py are resolved.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:1"
      ]
    },
    "Test script for Docker Compose Log Introspection System\n\nTests the log introspector and issue creator functionality.": {
      "value": "Test script for Docker Compose Log Introspection System\n\nTests the log introspector and issue creator functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:2"
      ]
    },
    "Test script for improved environment variable validation system.\n\nThis script demonstrates the enhanced environment variable categorization\nand validation that prevents non-critical variables from causing service failures.\n\nBusiness Value: Platform/Internal - System Stability\nReduces environment-related service failures by 90% through intelligent categorization.": {
      "value": "Test script for improved environment variable validation system.\n\nThis script demonstrates the enhanced environment variable categorization\nand validation that prevents non-critical variables from causing service failures.\n\nBusiness Value: Platform/Internal - System Stability\nReduces environment-related service failures by 90% through intelligent categorization.",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:2",
        "scripts/test_improved_environment_validation.py:2"
      ]
    },
    "Test script for staging error monitor logic validation.\n\nThis script tests the error threshold and decision logic without requiring GCP access.": {
      "value": "Test script for staging error monitor logic validation.\n\nThis script tests the error threshold and decision logic without requiring GCP access.",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:1"
      ]
    },
    "Test script for the adaptive workflow with data helper.\nTests different data sufficiency scenarios locally.": {
      "value": "Test script for the adaptive workflow with data helper.\nTests different data sufficiency scenarios locally.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:2"
      ]
    },
    "Test script for verify_workflow_status.py\n\nDemonstrates usage patterns and validates the script functionality.": {
      "value": "Test script for verify_workflow_status.py\n\nDemonstrates usage patterns and validates the script functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:3"
      ]
    },
    "Test script for verifying CORS implementation in Next.js API routes.\n\nThis script simulates CORS preflight requests and actual requests to verify\nthat the CORS implementation is working correctly across all frontend API routes.": {
      "value": "Test script for verifying CORS implementation in Next.js API routes.\n\nThis script simulates CORS preflight requests and actual requests to verify\nthat the CORS implementation is working correctly across all frontend API routes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:2"
      ]
    },
    "Test script to debug Auth service database connection with staging credentials.\n\nThis script tests the database connection locally using the exact same configuration\nas the Auth service would use in staging environment.": {
      "value": "Test script to debug Auth service database connection with staging credentials.\n\nThis script tests the database connection locally using the exact same configuration\nas the Auth service would use in staging environment.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:1"
      ]
    },
    "Test script to specifically check backend port 8000 binding.\nThis isolates the socket permission error from other dev launcher issues.": {
      "value": "Test script to specifically check backend port 8000 binding.\nThis isolates the socket permission error from other dev launcher issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:3"
      ]
    },
    "Test script to validate Auth Service integration fixes for GCP staging.\n\nThis script tests the auth service client configuration to ensure that the fixes\nfor SERVICE_ID and AUTH_SERVICE_ENABLED will resolve the integration issues.": {
      "value": "Test script to validate Auth Service integration fixes for GCP staging.\n\nThis script tests the auth service client configuration to ensure that the fixes\nfor SERVICE_ID and AUTH_SERVICE_ENABLED will resolve the integration issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:2"
      ]
    },
    "Test script to validate SQLAlchemy 2.0 migration": {
      "value": "Test script to validate SQLAlchemy 2.0 migration",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:2"
      ]
    },
    "Test script to validate WebSocket configuration fixes for Docker environment.\n\nBusiness Value Justification:\n- Segment: Development/DevOps\n- Business Goal: Development Velocity\n- Value Impact: Eliminates Docker WebSocket connection failures, reduces dev time\n- Strategic Impact: Ensures reliable local development environment": {
      "value": "Test script to validate WebSocket configuration fixes for Docker environment.\n\nBusiness Value Justification:\n- Segment: Development/DevOps\n- Business Goal: Development Velocity\n- Value Impact: Eliminates Docker WebSocket connection failures, reduces dev time\n- Strategic Impact: Ensures reliable local development environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:3"
      ]
    },
    "Test script to validate the staging threads endpoint fix.": {
      "value": "Test script to validate the staging threads endpoint fix.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:1"
      ]
    },
    "Test script to verify ANSI escape codes are properly handled in logs.": {
      "value": "Test script to verify ANSI escape codes are properly handled in logs.",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:3"
      ]
    },
    "Test script to verify CORS SSOT compliance across all services.\n\nThis script verifies that:\n1. All services follow SSOT for CORS configuration\n2. Dev environment is permissive (allows localhost with any port)\n3. Staging/Production have explicit origins set\n4. No legacy CORS code remains": {
      "value": "Test script to verify CORS SSOT compliance across all services.\n\nThis script verifies that:\n1. All services follow SSOT for CORS configuration\n2. Dev environment is permissive (allows localhost with any port)\n3. Staging/Production have explicit origins set\n4. No legacy CORS code remains",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:2"
      ]
    },
    "Test script to verify ClickHouse staging configuration fix.\n\nThis test verifies that:\n1. StagingConfig can be instantiated without ClickHouse env vars\n2. Validation correctly identifies missing ClickHouse after instantiation  \n3. Validation passes when ClickHouse is properly configured": {
      "value": "Test script to verify ClickHouse staging configuration fix.\n\nThis test verifies that:\n1. StagingConfig can be instantiated without ClickHouse env vars\n2. Validation correctly identifies missing ClickHouse after instantiation  \n3. Validation passes when ClickHouse is properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:2"
      ]
    },
    "Test script to verify Docker configuration changes.": {
      "value": "Test script to verify Docker configuration changes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:2"
      ]
    },
    "Test script to verify Docker hot reload functionality.\nRun this after starting Docker services to confirm hot reload is working.": {
      "value": "Test script to verify Docker hot reload functionality.\nRun this after starting Docker services to confirm hot reload is working.",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:2"
      ]
    },
    "Test script to verify Docker hot reload is working for development containers.\nThis ensures that code changes are immediately reflected without rebuilding containers.": {
      "value": "Test script to verify Docker hot reload is working for development containers.\nThis ensures that code changes are immediately reflected without rebuilding containers.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:2"
      ]
    },
    "Test script to verify WebSocket connectivity and identify middleware issues.": {
      "value": "Test script to verify WebSocket connectivity and identify middleware issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:2"
      ]
    },
    "Test script to verify Windows process cleanup functionality.\n\nThis script tests that Node.js processes are properly cleaned up\nafter frontend tests and dev launcher operations.": {
      "value": "Test script to verify Windows process cleanup functionality.\n\nThis script tests that Node.js processes are properly cleaned up\nafter frontend tests and dev launcher operations.",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:2"
      ]
    },
    "Test script to verify centralized Docker manager handles parallel test execution.\nThis simulates multiple test runners executing simultaneously to ensure no conflicts.": {
      "value": "Test script to verify centralized Docker manager handles parallel test execution.\nThis simulates multiple test runners executing simultaneously to ensure no conflicts.",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:2"
      ]
    },
    "Test script to verify chat first-load glitch fixes\nTests the improvements made to prevent multiple re-renders": {
      "value": "Test script to verify chat first-load glitch fixes\nTests the improvements made to prevent multiple re-renders",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:2"
      ]
    },
    "Test script to verify environment detection is working correctly.\nRun this to ensure all environment detection logic defaults to staging, not production.": {
      "value": "Test script to verify environment detection is working correctly.\nRun this to ensure all environment detection logic defaults to staging, not production.",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:2"
      ]
    },
    "Test script to verify logging shows correct source location.": {
      "value": "Test script to verify logging shows correct source location.",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:2"
      ]
    },
    "Test script to verify the improved service health checking mechanism.\nThis script can be run independently to test service availability detection.": {
      "value": "Test script to verify the improved service health checking mechanism.\nThis script can be run independently to test service availability detection.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:2"
      ]
    },
    "Test script to verify triage agent flow with example prompts": {
      "value": "Test script to verify triage agent flow with example prompts",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:1"
      ]
    },
    "Test sending a chat message.": {
      "value": "Test sending a chat message.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:310"
      ]
    },
    "Test separation between readiness and health checks.": {
      "value": "Test separation between readiness and health checks.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:122"
      ]
    },
    "Test service dependency validation": {
      "value": "Test service dependency validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:131"
      ]
    },
    "Test service discovery handles timing issues.": {
      "value": "Test service discovery handles timing issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:186"
      ]
    },
    "Test service monitor listening on port": {
      "value": "Test service monitor listening on port",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:306"
      ]
    },
    "Test session created successfully!": {
      "value": "Test session created successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:65"
      ]
    },
    "Test session manager behavior when Redis is unavailable": {
      "value": "Test session manager behavior when Redis is unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:226"
      ]
    },
    "Test session properly cleaned up when user logs out.": {
      "value": "Test session properly cleaned up when user logs out.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:88"
      ]
    },
    "Test session remains valid during database failover scenarios.": {
      "value": "Test session remains valid during database failover scenarios.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:42"
      ]
    },
    "Test session storage in real Redis.": {
      "value": "Test session storage in real Redis.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:172"
      ]
    },
    "Test session survives auth service restart without user re-login.": {
      "value": "Test session survives auth service restart without user re-login.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:21"
      ]
    },
    "Test session updates sync correctly between auth and backend services.": {
      "value": "Test session updates sync correctly between auth and backend services.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:61"
      ]
    },
    "Test simplified agent pipeline with WebSocket integration.": {
      "value": "Test simplified agent pipeline with WebSocket integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:324"
      ]
    },
    "Test size limits validator": {
      "value": "Test size limits validator",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:507"
      ]
    },
    "Test staging authentication flow to identify JWT secret mismatches": {
      "value": "Test staging authentication flow to identify JWT secret mismatches",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:2"
      ]
    },
    "Test staging configuration after simplification.\nVerifies that staging will load secrets from Google Secret Manager only.": {
      "value": "Test staging configuration after simplification.\nVerifies that staging will load secrets from Google Secret Manager only.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:2"
      ]
    },
    "Test staging environment": {
      "value": "Test staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:206"
      ]
    },
    "Test staging login functionality": {
      "value": "Test staging login functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:393"
      ]
    },
    "Test staging startup sequence": {
      "value": "Test staging startup sequence",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:288"
      ]
    },
    "Test successful connection with valid staging Redis URL": {
      "value": "Test successful connection with valid staging Redis URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:157"
      ]
    },
    "Test successful token refresh": {
      "value": "Test successful token refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:267"
      ]
    },
    "Test successful user registration": {
      "value": "Test successful user registration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:108"
      ]
    },
    "Test suite file does not exist": {
      "value": "Test suite file does not exist",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:270"
      ]
    },
    "Test suite for verify_workflow_status.py\n\nTests various scenarios and documents the verification results.": {
      "value": "Test suite for verify_workflow_status.py\n\nTests various scenarios and documents the verification results.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:2"
      ]
    },
    "Test suite timed out after 5 minutes": {
      "value": "Test suite timed out after 5 minutes",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:315"
      ]
    },
    "Test supervisor creation and basic functionality.": {
      "value": "Test supervisor creation and basic functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:86"
      ]
    },
    "Test synchronous serialization path for blocking.": {
      "value": "Test synchronous serialization path for blocking.",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:60"
      ]
    },
    "Test table output format": {
      "value": "Test table output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:139"
      ]
    },
    "Test that ClickHouse fails gracefully in staging environment.": {
      "value": "Test that ClickHouse fails gracefully in staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:19"
      ]
    },
    "Test that Redis can be marked as required in staging": {
      "value": "Test that Redis can be marked as required in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:60"
      ]
    },
    "Test that SQL injection attempts are handled safely": {
      "value": "Test that SQL injection attempts are handled safely",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:294"
      ]
    },
    "Test that SupervisorAgent imports correctly from the consolidated module.": {
      "value": "Test that SupervisorAgent imports correctly from the consolidated module.",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:2"
      ]
    },
    "Test that WebSocket core imports work without deprecation warnings.": {
      "value": "Test that WebSocket core imports work without deprecation warnings.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:54"
      ]
    },
    "Test that access tokens cannot be used for refresh": {
      "value": "Test that access tokens cannot be used for refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:206"
      ]
    },
    "Test that all 5 critical WebSocket events are sent during agent execution.": {
      "value": "Test that all 5 critical WebSocket events are sent during agent execution.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:106"
      ]
    },
    "Test that all modules can be imported successfully for auth_service.\n\nThis test suite validates that all Python modules in the auth_service can be imported\nwithout errors. This catches missing imports, circular dependencies, and syntax\nerrors that might not be caught by unit tests with heavy mocking.\n\nThis addresses the critical issue documented in SPEC/learnings/test_coverage_import_gap.xml\nwhere import errors passed all tests but failed in production.": {
      "value": "Test that all modules can be imported successfully for auth_service.\n\nThis test suite validates that all Python modules in the auth_service can be imported\nwithout errors. This catches missing imports, circular dependencies, and syntax\nerrors that might not be caught by unit tests with heavy mocking.\n\nThis addresses the critical issue documented in SPEC/learnings/test_coverage_import_gap.xml\nwhere import errors passed all tests but failed in production.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:1"
      ]
    },
    "Test that all services are healthy": {
      "value": "Test that all services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:30"
      ]
    },
    "Test that blacklisted refresh tokens are rejected": {
      "value": "Test that blacklisted refresh tokens are rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:238"
      ]
    },
    "Test that blacklisted tokens are rejected": {
      "value": "Test that blacklisted tokens are rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:125"
      ]
    },
    "Test that blacklisting a user invalidates all their tokens": {
      "value": "Test that blacklisting a user invalidates all their tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:472"
      ]
    },
    "Test that canonical WebSocket manager can be imported without warnings.": {
      "value": "Test that canonical WebSocket manager can be imported without warnings.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:40"
      ]
    },
    "Test that concurrent refresh attempts are handled correctly": {
      "value": "Test that concurrent refresh attempts are handled correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:187"
      ]
    },
    "Test that concurrent refresh attempts with same token are handled correctly": {
      "value": "Test that concurrent refresh attempts with same token are handled correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:315"
      ]
    },
    "Test that core imports work without legacy dependencies.": {
      "value": "Test that core imports work without legacy dependencies.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:85"
      ]
    },
    "Test that dependency resolution prevents early startup.": {
      "value": "Test that dependency resolution prevents early startup.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:81"
      ]
    },
    "Test that expired refresh tokens are rejected": {
      "value": "Test that expired refresh tokens are rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:180"
      ]
    },
    "Test that frontend can reach its dependencies.": {
      "value": "Test that frontend can reach its dependencies.",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:152"
      ]
    },
    "Test that health check reports healthy when Redis is properly configured": {
      "value": "Test that health check reports healthy when Redis is properly configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:286"
      ]
    },
    "Test that localhost Redis URL is rejected in staging unless explicitly allowed": {
      "value": "Test that localhost Redis URL is rejected in staging unless explicitly allowed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:39"
      ]
    },
    "Test that localhost fallback IS allowed in development": {
      "value": "Test that localhost fallback IS allowed in development",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:105"
      ]
    },
    "Test that localhost fallback is prevented in staging environment": {
      "value": "Test that localhost fallback is prevented in staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:18"
      ]
    },
    "Test that multiple concurrent serializations block each other": {
      "value": "Test that multiple concurrent serializations block each other",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:185"
      ]
    },
    "Test that rapid refresh attempts don't cause issues": {
      "value": "Test that rapid refresh attempts don't cause issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:148"
      ]
    },
    "Test that refresh always generates unique tokens": {
      "value": "Test that refresh always generates unique tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:85"
      ]
    },
    "Test that refresh endpoint correctly handles async request.body() method.\n        \n        ZERO MOCKS: Uses real HTTP client and real auth service.\n        This test verifies the bytes await bug is fixed using real services.": {
      "value": "Test that refresh endpoint correctly handles async request.body() method.\n        \n        ZERO MOCKS: Uses real HTTP client and real auth service.\n        This test verifies the bytes await bug is fixed using real services.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:40"
      ]
    },
    "Test that refresh endpoint uses proper JSON parsing methods.\n        \n        ZERO MOCKS: Tests real JSON handling with real services.": {
      "value": "Test that refresh endpoint uses proper JSON parsing methods.\n        \n        ZERO MOCKS: Tests real JSON handling with real services.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:78"
      ]
    },
    "Test that refresh falls back to token payload when database unavailable": {
      "value": "Test that refresh falls back to token payload when database unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:120"
      ]
    },
    "Test that refresh operation generates new unique tokens": {
      "value": "Test that refresh operation generates new unique tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:32"
      ]
    },
    "Test that refresh tokens are actually different to prevent infinite loops": {
      "value": "Test that refresh tokens are actually different to prevent infinite loops",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:174"
      ]
    },
    "Test that refresh tokens cannot be reused": {
      "value": "Test that refresh tokens cannot be reused",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:219"
      ]
    },
    "Test that refreshed tokens contain actual user data, not placeholders": {
      "value": "Test that refreshed tokens contain actual user data, not placeholders",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:64"
      ]
    },
    "Test that retry logic eventually gives up": {
      "value": "Test that retry logic eventually gives up",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:119"
      ]
    },
    "Test that services can start properly even when non-critical environment variables are missing.\n\nThis validates that our environment variable categorization fixes prevent\nservice startup failures due to missing optional variables.\n\nBusiness Value: Platform/Internal - System Reliability\nEnsures 99.9% service availability by preventing startup failures from optional config.": {
      "value": "Test that services can start properly even when non-critical environment variables are missing.\n\nThis validates that our environment variable categorization fixes prevent\nservice startup failures due to missing optional variables.\n\nBusiness Value: Platform/Internal - System Reliability\nEnsures 99.9% service availability by preventing startup failures from optional config.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:2"
      ]
    },
    "Test that session persists across multiple refreshes": {
      "value": "Test that session persists across multiple refreshes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:229"
      ]
    },
    "Test that startup_module can properly import and use SupervisorAgent.": {
      "value": "Test that startup_module can properly import and use SupervisorAgent.",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:13"
      ]
    },
    "Test that startup_module.py can import and use SupervisorAgent correctly.": {
      "value": "Test that startup_module.py can import and use SupervisorAgent correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:2"
      ]
    },
    "Test that sync URLs are converted to async format.": {
      "value": "Test that sync URLs are converted to async format.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:120"
      ]
    },
    "Test that the access token is valid": {
      "value": "Test that the access token is valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:94"
      ]
    },
    "Test that the same refresh token cannot be used twice (race condition protection)": {
      "value": "Test that the same refresh token cannot be used twice (race condition protection)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:212"
      ]
    },
    "Test that the staging auth service refresh endpoint accepts different field formats.\nThis is the critical fix we deployed.": {
      "value": "Test that the staging auth service refresh endpoint accepts different field formats.\nThis is the critical fix we deployed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:2"
      ]
    },
    "Test that tokens remain unique even under high load": {
      "value": "Test that tokens remain unique even under high load",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:370"
      ]
    },
    "Test that tool execution sends proper WebSocket events.": {
      "value": "Test that tool execution sends proper WebSocket events.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:190"
      ]
    },
    "Test that uvicorn configuration includes modern WebSocket settings.": {
      "value": "Test that uvicorn configuration includes modern WebSocket settings.",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:118"
      ]
    },
    "Test that we can establish a real Redis connection.": {
      "value": "Test that we can establish a real Redis connection.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:166"
      ]
    },
    "Test that we can establish a real database connection.": {
      "value": "Test that we can establish a real database connection.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:67"
      ]
    },
    "Test the /ws/test endpoint (no auth required).": {
      "value": "Test the /ws/test endpoint (no auth required).",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:69"
      ]
    },
    "Test the 5 critical WebSocket events.": {
      "value": "Test the 5 critical WebSocket events.",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:54"
      ]
    },
    "Test the E2E service orchestration system.": {
      "value": "Test the E2E service orchestration system.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:39"
      ]
    },
    "Test the E2EEnvironmentValidator from conftest.py": {
      "value": "Test the E2EEnvironmentValidator from conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:104"
      ]
    },
    "Test the HTTP service health checker directly.": {
      "value": "Test the HTTP service health checker directly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:25"
      ]
    },
    "Test the basic service availability checker.": {
      "value": "Test the basic service availability checker.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:91"
      ]
    },
    "Test the canonical WebSocket manager functionality (replaces wrapper).": {
      "value": "Test the canonical WebSocket manager functionality (replaces wrapper).",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:96"
      ]
    },
    "Test the exact JWT validation flow that's failing": {
      "value": "Test the exact JWT validation flow that's failing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:11"
      ]
    },
    "Test the exact infinite loop scenario that was happening in staging": {
      "value": "Test the exact infinite loop scenario that was happening in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:110"
      ]
    },
    "Test the fallback paths in serialization that might cause blocking.": {
      "value": "Test the fallback paths in serialization that might cause blocking.",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:231"
      ]
    },
    "Test the fix in local environment with mock JWT.": {
      "value": "Test the fix in local environment with mock JWT.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:68"
      ]
    },
    "Test the real data pipeline with actual running services.": {
      "value": "Test the real data pipeline with actual running services.",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:13"
      ]
    },
    "Test the service availability checker.": {
      "value": "Test the service availability checker.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:25"
      ]
    },
    "Test the startup module ClickHouse initialization.": {
      "value": "Test the startup module ClickHouse initialization.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:68"
      ]
    },
    "Test the threads endpoint with a valid JWT token.": {
      "value": "Test the threads endpoint with a valid JWT token.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:17"
      ]
    },
    "Test the unauthenticated test WebSocket endpoint.": {
      "value": "Test the unauthenticated test WebSocket endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:56"
      ]
    },
    "Test timed out": {
      "value": "Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:30",
        "scripts/test_verify_workflow_status.py:67"
      ]
    },
    "Test token blacklist management in real Redis.": {
      "value": "Test token blacklist management in real Redis.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:191"
      ]
    },
    "Test token generation with mock user": {
      "value": "Test token generation with mock user",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:237"
      ]
    },
    "Test token refresh with camelCase format (frontend format)": {
      "value": "Test token refresh with camelCase format (frontend format)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:157"
      ]
    },
    "Test token refresh with real dependencies.": {
      "value": "Test token refresh with real dependencies.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:364"
      ]
    },
    "Test token refresh with snake_case format": {
      "value": "Test token refresh with snake_case format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:123"
      ]
    },
    "Test token validation": {
      "value": "Test token validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:297"
      ]
    },
    "Test token validation between services": {
      "value": "Test token validation between services",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:82"
      ]
    },
    "Test tool for validation": {
      "value": "Test tool for validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:314",
        "scripts/test_websocket_chat_standalone.py:309"
      ]
    },
    "Test utilities and helper functions": {
      "value": "Test utilities and helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:547"
      ]
    },
    "Test utilities for auth_core": {
      "value": "Test utilities for auth_core",
      "category": "test_literals",
      "locations": [
        "auth_service/auth_core/test_utils.py:1"
      ]
    },
    "Test verification timed out": {
      "value": "Test verification timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:361"
      ]
    },
    "Test warning message from level2 function": {
      "value": "Test warning message from level2 function",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:21"
      ]
    },
    "Test which JWT secret the staging environment is using": {
      "value": "Test which JWT secret the staging environment is using",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:2"
      ]
    },
    "Test with no assertions": {
      "value": "Test with no assertions",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:277"
      ]
    },
    "Test zero message loss for critical messages.": {
      "value": "Test zero message loss for critical messages.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:166"
      ]
    },
    "TestAgent/1.0": {
      "value": "TestAgent/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:118",
        "auth_service/tests/test_auth_real_services_comprehensive.py:135"
      ]
    },
    "TestClient not using real app": {
      "value": "TestClient not using real app",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:258"
      ]
    },
    "TestClient/": {
      "value": "TestClient/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:134",
        "auth_service/tests/test_session_security_cycles_36_40.py:294"
      ]
    },
    "TestClient/1.0": {
      "value": "TestClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:188",
        "auth_service/tests/test_session_security_cycles_36_40.py:226"
      ]
    },
    "TestPassword123!": {
      "value": "TestPassword123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:86",
        "auth_service/tests/test_auth_real_services_comprehensive.py:301",
        "auth_service/tests/test_auth_real_services_comprehensive.py:331",
        "auth_service/tests/test_auth_real_services_comprehensive.py:366",
        "auth_service/tests/test_signup_flow_comprehensive.py:235",
        "auth_service/tests/test_signup_flow_comprehensive.py:246",
        "auth_service/tests/test_signup_flow_comprehensive.py:255",
        "scripts/test_adaptive_workflow.py:32",
        "scripts/test_auth_client_debug.py:32",
        "scripts/test_staging_auth_live.py:23"
      ]
    },
    "TestPipeline123!": {
      "value": "TestPipeline123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:27",
        "scripts/test_data_pipeline_simple.py:28"
      ]
    },
    "Testing": {
      "value": "Testing",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:106",
        "scripts/test_agent_recovery_simple.py:49",
        "scripts/test_cors_implementation.py:146",
        "scripts/test_gtm_loading.py:106",
        "scripts/test_service_health.py:76",
        "scripts/test_service_health_simple.py:43",
        "scripts/test_staging_login_automated.py:93",
        "scripts/test_staging_login_automated.py:256"
      ]
    },
    "Testing ANSI escape code handling in logs": {
      "value": "Testing ANSI escape code handling in logs",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:77"
      ]
    },
    "Testing Async Serialization Performance": {
      "value": "Testing Async Serialization Performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:142"
      ]
    },
    "Testing Auth Service Configuration Fixes": {
      "value": "Testing Auth Service Configuration Fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:19"
      ]
    },
    "Testing Auth Service Connectivity": {
      "value": "Testing Auth Service Connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:64"
      ]
    },
    "Testing Auth builder...": {
      "value": "Testing Auth builder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:103"
      ]
    },
    "Testing CLAUDE.md policy: 'MOCKS = Abomination', 'MOCKS are FORBIDDEN'": {
      "value": "Testing CLAUDE.md policy: 'MOCKS = Abomination', 'MOCKS are FORBIDDEN'",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:39"
      ]
    },
    "Testing CORS configuration...": {
      "value": "Testing CORS configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:249",
        "scripts/test_and_fix_cors.py:168"
      ]
    },
    "Testing CORS for": {
      "value": "Testing CORS for",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:501"
      ]
    },
    "Testing CORS from": {
      "value": "Testing CORS from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:14"
      ]
    },
    "Testing CORS implementation at": {
      "value": "Testing CORS implementation at",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:145"
      ]
    },
    "Testing Cache builder...": {
      "value": "Testing Cache builder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:111"
      ]
    },
    "Testing ClickHouse Staging Configuration": {
      "value": "Testing ClickHouse Staging Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:38"
      ]
    },
    "Testing ClickHouse client context manager...": {
      "value": "Testing ClickHouse client context manager...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:47"
      ]
    },
    "Testing ClickHouse connection manager initialization...": {
      "value": "Testing ClickHouse connection manager initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:51"
      ]
    },
    "Testing ClickHouse graceful failure in staging environment...": {
      "value": "Testing ClickHouse graceful failure in staging environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:20"
      ]
    },
    "Testing ClickHouse health check endpoints...": {
      "value": "Testing ClickHouse health check endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:221"
      ]
    },
    "Testing ClickHouse health check...": {
      "value": "Testing ClickHouse health check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:26"
      ]
    },
    "Testing ClickHouse service initialization...": {
      "value": "Testing ClickHouse service initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:34"
      ]
    },
    "Testing Concurrent Serialization": {
      "value": "Testing Concurrent Serialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:186"
      ]
    },
    "Testing Docker Compose integration...": {
      "value": "Testing Docker Compose integration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:249"
      ]
    },
    "Testing Docker networking scenarios...": {
      "value": "Testing Docker networking scenarios...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:117"
      ]
    },
    "Testing E2EEnvironmentValidator": {
      "value": "Testing E2EEnvironmentValidator",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:105"
      ]
    },
    "Testing GA4 connection...": {
      "value": "Testing GA4 connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:20"
      ]
    },
    "Testing GCP builder...": {
      "value": "Testing GCP builder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:87"
      ]
    },
    "Testing GTM Event Tracking Implementation": {
      "value": "Testing GTM Event Tracking Implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:106"
      ]
    },
    "Testing HTTP Service Health Checker": {
      "value": "Testing HTTP Service Health Checker",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:26"
      ]
    },
    "Testing HTTP Service Health Checker:": {
      "value": "Testing HTTP Service Health Checker:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:66"
      ]
    },
    "Testing Improved Environment Variable Validation System": {
      "value": "Testing Improved Environment Variable Validation System",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:26",
        "scripts/test_improved_environment_validation.py:27"
      ]
    },
    "Testing Incremental Environment Improvement": {
      "value": "Testing Incremental Environment Improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:122"
      ]
    },
    "Testing JWT signature tampering detection - Cycle 31": {
      "value": "Testing JWT signature tampering detection - Cycle 31",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:59"
      ]
    },
    "Testing Minimal Service Startup Environment": {
      "value": "Testing Minimal Service Startup Environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:25"
      ]
    },
    "Testing OAUTH SIMULATION logic...": {
      "value": "Testing OAUTH SIMULATION logic...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:207"
      ]
    },
    "Testing OAuth credential loading for development environment...": {
      "value": "Testing OAuth credential loading for development environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:18"
      ]
    },
    "Testing OPTIONS preflight with 127.0.0.1:3000...": {
      "value": "Testing OPTIONS preflight with 127.0.0.1:3000...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:53"
      ]
    },
    "Testing Presence Detection System...": {
      "value": "Testing Presence Detection System...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:15"
      ]
    },
    "Testing SQLAlchemy 2.0 Migration...": {
      "value": "Testing SQLAlchemy 2.0 Migration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:11"
      ]
    },
    "Testing Scenario:": {
      "value": "Testing Scenario:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:38"
      ]
    },
    "Testing Serialization Fallback Paths": {
      "value": "Testing Serialization Fallback Paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:233"
      ]
    },
    "Testing Service Availability Checker": {
      "value": "Testing Service Availability Checker",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:92"
      ]
    },
    "Testing Service Readiness Analysis": {
      "value": "Testing Service Readiness Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:80"
      ]
    },
    "Testing URL:": {
      "value": "Testing URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:197"
      ]
    },
    "Testing WebSocket config endpoint...": {
      "value": "Testing WebSocket config endpoint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:40"
      ]
    },
    "Testing WebSocket connection capabilities...": {
      "value": "Testing WebSocket connection capabilities...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:100"
      ]
    },
    "Testing WebSocket connection to:": {
      "value": "Testing WebSocket connection to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:69"
      ]
    },
    "Testing WebSocket connection...": {
      "value": "Testing WebSocket connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:180"
      ]
    },
    "Testing WebSocket connectivity and CORS configuration in Docker development environment": {
      "value": "Testing WebSocket connectivity and CORS configuration in Docker development environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:320"
      ]
    },
    "Testing WebSocket endpoints...": {
      "value": "Testing WebSocket endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:116"
      ]
    },
    "Testing WebSocket performance in staging...": {
      "value": "Testing WebSocket performance in staging...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:184"
      ]
    },
    "Testing WebSocket test endpoint (no auth)...": {
      "value": "Testing WebSocket test endpoint (no auth)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:57"
      ]
    },
    "Testing WebSocket with CORS headers...": {
      "value": "Testing WebSocket with CORS headers...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:88"
      ]
    },
    "Testing Workflow Scenarios": {
      "value": "Testing Workflow Scenarios",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:312"
      ]
    },
    "Testing against staging environment:": {
      "value": "Testing against staging environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:168"
      ]
    },
    "Testing against:": {
      "value": "Testing against:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:45",
        "scripts/test_staging_jwt.py:64"
      ]
    },
    "Testing agent endpoints...": {
      "value": "Testing agent endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:42"
      ]
    },
    "Testing agent flow through staging WebSocket...": {
      "value": "Testing agent flow through staging WebSocket...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:142"
      ]
    },
    "Testing all modules in netra_backend.app...": {
      "value": "Testing all modules in netra_backend.app...",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:70"
      ]
    },
    "Testing analytics data consistency...": {
      "value": "Testing analytics data consistency...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:177"
      ]
    },
    "Testing async serialization with nightmare object...": {
      "value": "Testing async serialization with nightmare object...",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:173"
      ]
    },
    "Testing async serialization...": {
      "value": "Testing async serialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:104"
      ]
    },
    "Testing auth service health...": {
      "value": "Testing auth service health...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:28"
      ]
    },
    "Testing backend health check...": {
      "value": "Testing backend health check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:28"
      ]
    },
    "Testing backend health...": {
      "value": "Testing backend health...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:14"
      ]
    },
    "Testing category:": {
      "value": "Testing category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:124"
      ]
    },
    "Testing complete coordination workflow": {
      "value": "Testing complete coordination workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:279"
      ]
    },
    "Testing concurrent async serialization...": {
      "value": "Testing concurrent async serialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:193"
      ]
    },
    "Testing concurrent serialization of": {
      "value": "Testing concurrent serialization of",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:196"
      ]
    },
    "Testing concurrent session limit - Cycle 37": {
      "value": "Testing concurrent session limit - Cycle 37",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:120"
      ]
    },
    "Testing concurrent token validation - Cycle 35": {
      "value": "Testing concurrent token validation - Cycle 35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:213"
      ]
    },
    "Testing configuration loading...": {
      "value": "Testing configuration loading...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:109"
      ]
    },
    "Testing connection retry logic...": {
      "value": "Testing connection retry logic...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:96"
      ]
    },
    "Testing critical error deployment scenario...": {
      "value": "Testing critical error deployment scenario...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:187"
      ]
    },
    "Testing dependency resolution fixes": {
      "value": "Testing dependency resolution fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:82"
      ]
    },
    "Testing dependency resolution...": {
      "value": "Testing dependency resolution...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:80"
      ]
    },
    "Testing endpoint:": {
      "value": "Testing endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:63"
      ]
    },
    "Testing entry conditions...": {
      "value": "Testing entry conditions...",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:60",
        "scripts/test_corpus_admin_simple.py:59"
      ]
    },
    "Testing environment variables configuration...": {
      "value": "Testing environment variables configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:36"
      ]
    },
    "Testing environment vars:": {
      "value": "Testing environment vars:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:28"
      ]
    },
    "Testing error categorization...": {
      "value": "Testing error categorization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:211"
      ]
    },
    "Testing error detection...": {
      "value": "Testing error detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:35"
      ]
    },
    "Testing error grouping...": {
      "value": "Testing error grouping...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:108"
      ]
    },
    "Testing event loop blocking during serialization...": {
      "value": "Testing event loop blocking during serialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:63"
      ]
    },
    "Testing exception handling in development mode...": {
      "value": "Testing exception handling in development mode...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:63"
      ]
    },
    "Testing exception handling in production mode...": {
      "value": "Testing exception handling in production mode...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:27"
      ]
    },
    "Testing graceful degradation": {
      "value": "Testing graceful degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:231"
      ]
    },
    "Testing graceful degradation...": {
      "value": "Testing graceful degradation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:281"
      ]
    },
    "Testing handler initialization...": {
      "value": "Testing handler initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:190"
      ]
    },
    "Testing health endpoint...": {
      "value": "Testing health endpoint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:62"
      ]
    },
    "Testing health endpoints...": {
      "value": "Testing health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:178"
      ]
    },
    "Testing help command...": {
      "value": "Testing help command...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:32"
      ]
    },
    "Testing improved service health checking mechanism": {
      "value": "Testing improved service health checking mechanism",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:26"
      ]
    },
    "Testing initialization...": {
      "value": "Testing initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:391"
      ]
    },
    "Testing intensive event loop blocking...": {
      "value": "Testing intensive event loop blocking...",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:134"
      ]
    },
    "Testing issue creation...": {
      "value": "Testing issue creation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:171"
      ]
    },
    "Testing local environment configuration...": {
      "value": "Testing local environment configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:81"
      ]
    },
    "Testing logging with proper source location...": {
      "value": "Testing logging with proper source location...",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:32"
      ]
    },
    "Testing login methods...": {
      "value": "Testing login methods...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:291"
      ]
    },
    "Testing message validation...": {
      "value": "Testing message validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:196",
        "scripts/test_example_message_flow.py:397"
      ]
    },
    "Testing missing parameters...": {
      "value": "Testing missing parameters...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:44"
      ]
    },
    "Testing missing token...": {
      "value": "Testing missing token...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:56"
      ]
    },
    "Testing nested function calls...": {
      "value": "Testing nested function calls...",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:41"
      ]
    },
    "Testing normal deployment scenario...": {
      "value": "Testing normal deployment scenario...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:163"
      ]
    },
    "Testing origin:": {
      "value": "Testing origin:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:67",
        "scripts/test_cors.py:510"
      ]
    },
    "Testing port allocation coordination": {
      "value": "Testing port allocation coordination",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:158"
      ]
    },
    "Testing pre-run size validation...": {
      "value": "Testing pre-run size validation...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:121"
      ]
    },
    "Testing prompt:": {
      "value": "Testing prompt:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:127"
      ]
    },
    "Testing public endpoints...": {
      "value": "Testing public endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:150"
      ]
    },
    "Testing readiness vs health check separation": {
      "value": "Testing readiness vs health check separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:123"
      ]
    },
    "Testing refresh endpoint field naming compatibility...": {
      "value": "Testing refresh endpoint field naming compatibility...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:106"
      ]
    },
    "Testing remediation on": {
      "value": "Testing remediation on",
      "category": "test_literals",
      "locations": [
        "scripts/test_remediation_sample.py:27"
      ]
    },
    "Testing report generation...": {
      "value": "Testing report generation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:287"
      ]
    },
    "Testing resource cleanup": {
      "value": "Testing resource cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:351"
      ]
    },
    "Testing secret access...": {
      "value": "Testing secret access...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:140"
      ]
    },
    "Testing sequential async serialization...": {
      "value": "Testing sequential async serialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:216"
      ]
    },
    "Testing serialization blocking behavior...": {
      "value": "Testing serialization blocking behavior...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:59"
      ]
    },
    "Testing service dependency validation...": {
      "value": "Testing service dependency validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:142"
      ]
    },
    "Testing service discovery timing fixes": {
      "value": "Testing service discovery timing fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:187"
      ]
    },
    "Testing service initialization order...": {
      "value": "Testing service initialization order...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:37"
      ]
    },
    "Testing session activity tracking - Cycle 39": {
      "value": "Testing session activity tracking - Cycle 39",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:218"
      ]
    },
    "Testing session hijacking prevention - Cycle 36": {
      "value": "Testing session hijacking prevention - Cycle 36",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:61"
      ]
    },
    "Testing session invalidation cascade - Cycle 40": {
      "value": "Testing session invalidation cascade - Cycle 40",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:284"
      ]
    },
    "Testing session timeout enforcement - Cycle 38": {
      "value": "Testing session timeout enforcement - Cycle 38",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:180"
      ]
    },
    "Testing startup module ClickHouse initialization...": {
      "value": "Testing startup module ClickHouse initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:69"
      ]
    },
    "Testing startup timing...": {
      "value": "Testing startup timing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:198"
      ]
    },
    "Testing synchronous serialization (current implementation)...": {
      "value": "Testing synchronous serialization (current implementation)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:90"
      ]
    },
    "Testing synchronous serialization blocking...": {
      "value": "Testing synchronous serialization blocking...",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:61"
      ]
    },
    "Testing synchronous serialization with nightmare object...": {
      "value": "Testing synchronous serialization with nightmare object...",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:160"
      ]
    },
    "Testing that services can start with missing optional variables": {
      "value": "Testing that services can start with missing optional variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:174"
      ]
    },
    "Testing threads endpoint with JWT authentication...": {
      "value": "Testing threads endpoint with JWT authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:30"
      ]
    },
    "Testing token expiration enforcement - Cycle 32": {
      "value": "Testing token expiration enforcement - Cycle 32",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:110"
      ]
    },
    "Testing token replay attack detection - Cycle 33": {
      "value": "Testing token replay attack detection - Cycle 33",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:141"
      ]
    },
    "Testing token revocation enforcement - Cycle 34": {
      "value": "Testing token revocation enforcement - Cycle 34",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:177"
      ]
    },
    "Testing valid URL:": {
      "value": "Testing valid URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:178"
      ]
    },
    "Testing with 127.0.0.1:3000 origin...": {
      "value": "Testing with 127.0.0.1:3000 origin...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:11"
      ]
    },
    "Testing with complex state containing": {
      "value": "Testing with complex state containing",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:144"
      ]
    },
    "Testing with localhost:3000 origin...": {
      "value": "Testing with localhost:3000 origin...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:32"
      ]
    },
    "Testing with origin:": {
      "value": "Testing with origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:101"
      ]
    },
    "Testing:": {
      "value": "Testing:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:16",
        "scripts/test_adaptive_workflow_direct.py:101",
        "scripts/test_oauth_dev_config.py:66",
        "scripts/test_staging_auth.py:108",
        "scripts/test_staging_simplified.py:106",
        "scripts/test_websocket_connection.py:50"
      ]
    },
    "Tests": {
      "value": "Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:45"
      ]
    },
    "Tests - Split from": {
      "value": "Tests - Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:381",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/compliance/test_fixer.py:205"
      ]
    },
    "Tests Executed:": {
      "value": "Tests Executed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:334"
      ]
    },
    "Tests Failed:": {
      "value": "Tests Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:132",
        "scripts/run_supervisor_test_coverage.py:290",
        "scripts/test_websocket_cors_comprehensive.py:300"
      ]
    },
    "Tests Passed:": {
      "value": "Tests Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:122",
        "scripts/batch_fix_and_test.py:131",
        "scripts/run_supervisor_test_coverage.py:289",
        "scripts/test_backend_optimized.py:335",
        "scripts/test_websocket_cors_comprehensive.py:299"
      ]
    },
    "Tests Run:": {
      "value": "Tests Run:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:298"
      ]
    },
    "Tests completed": {
      "value": "Tests completed",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:69"
      ]
    },
    "Tests completed!": {
      "value": "Tests completed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:209"
      ]
    },
    "Tests in excluded directories:": {
      "value": "Tests in excluded directories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:35"
      ]
    },
    "Tests interrupted by user": {
      "value": "Tests interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:469"
      ]
    },
    "Tests marked as consistently failing": {
      "value": "Tests marked as consistently failing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:113"
      ]
    },
    "Tests needing implementation:": {
      "value": "Tests needing implementation:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:389"
      ]
    },
    "Tests passed:": {
      "value": "Tests passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:94"
      ]
    },
    "Tests requiring real database connections": {
      "value": "Tests requiring real database connections",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:93"
      ]
    },
    "Tests requiring real external services": {
      "value": "Tests requiring real external services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:91"
      ]
    },
    "Tests that may be unreliable due to timing, randomness, or external dependencies:": {
      "value": "Tests that may be unreliable due to timing, randomness, or external dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:310"
      ]
    },
    "Tests that may fail intermittently": {
      "value": "Tests that may fail intermittently",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:112"
      ]
    },
    "Tests that use real LLM services": {
      "value": "Tests that use real LLM services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:92"
      ]
    },
    "Tests using only mocks": {
      "value": "Tests using only mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:94"
      ]
    },
    "Tests:": {
      "value": "Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:232",
        "scripts/frontend_iterative_test_runner.py:774",
        "scripts/test_execution_tracker.py:718",
        "scripts/test_staging_websocket_comprehensive.py:303"
      ]
    },
    "The 401 error is likely caused by one of these issues:\n\n1. Token Expiry: The token has a 15-minute expiry and may be expired\n2. Service Authentication: Backend may not have proper service credentials\n   to validate tokens with the auth service\n3. Cross-Service Validation: The token may be issued for a different\n   environment or service context\n4. Blacklisting: The token or user may have been blacklisted\n\nRecommended fixes:\n1. Ensure backend has correct SERVICE_SECRET configured for staging\n2. Check that auth service URL is correctly configured in backend\n3. Verify token is being validated with correct environment context\n4. Check Redis/cache for any blacklist entries": {
      "value": "The 401 error is likely caused by one of these issues:\n\n1. Token Expiry: The token has a 15-minute expiry and may be expired\n2. Service Authentication: Backend may not have proper service credentials\n   to validate tokens with the auth service\n3. Cross-Service Validation: The token may be issued for a different\n   environment or service context\n4. Blacklisting: The token or user may have been blacklisted\n\nRecommended fixes:\n1. Ensure backend has correct SERVICE_SECRET configured for staging\n2. Check that auth service URL is correctly configured in backend\n3. Verify token is being validated with correct environment context\n4. Check Redis/cache for any blacklist entries",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:137"
      ]
    },
    "The Auth service database connection issue is likely caused by:": {
      "value": "The Auth service database connection issue is likely caused by:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:175"
      ]
    },
    "The Auth service should be able to connect to staging database": {
      "value": "The Auth service should be able to connect to staging database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:321"
      ]
    },
    "The E2E service health checking mechanism is working correctly.": {
      "value": "The E2E service health checking mechanism is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:172"
      ]
    },
    "The auth service and backend are likely using different JWT secrets": {
      "value": "The auth service and backend are likely using different JWT secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:115"
      ]
    },
    "The backend is rejecting the token": {
      "value": "The backend is rejecting the token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:217"
      ]
    },
    "The backend should now start without being blocked by ClickHouse timeouts.": {
      "value": "The backend should now start without being blocked by ClickHouse timeouts.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:57"
      ]
    },
    "The codebase is compliant with LLM test model standardization.": {
      "value": "The codebase is compliant with LLM test model standardization.",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:195"
      ]
    },
    "The comprehensive test suite in:": {
      "value": "The comprehensive test suite in:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:253"
      ]
    },
    "The core functionality appears to be working.": {
      "value": "The core functionality appears to be working.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:177"
      ]
    },
    "The current configuration shows potential for improvement in the following areas:": {
      "value": "The current configuration shows potential for improvement in the following areas:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:161"
      ]
    },
    "The fix should replace the synchronous _serialize_message_safely() call": {
      "value": "The fix should replace the synchronous _serialize_message_safely() call",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:176"
      ]
    },
    "The frontend can now successfully refresh authentication tokens.": {
      "value": "The frontend can now successfully refresh authentication tokens.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:155"
      ]
    },
    "The issue is NOT with _serialize_message_safely_async": {
      "value": "The issue is NOT with _serialize_message_safely_async",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:251"
      ]
    },
    "The issue is likely with the actual database connection in Cloud Run": {
      "value": "The issue is likely with the actual database connection in Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:242"
      ]
    },
    "The issue is that browsers treat 'localhost' and '127.0.0.1' as different origins,\neven though they resolve to the same address.\n\nIMMEDIATE FIX (Choose one):\n1. Use consistent hostnames - access both frontend and backend via either:\n   - http://localhost:3000 → http://localhost:8000\n   - http://127.0.0.1:3000 → http://127.0.0.1:8000\n\n2. Set environment variable to allow all local origins:\n   export CORS_ORIGINS=\"*\"  (for development only)\n\n3. The backend CORS configuration should already handle this, but if not,\n   ensure the backend is running with proper environment detection.\n\nDEBUGGING:\n- Check that your backend is detecting 'development' environment\n- Verify CORS middleware is properly initialized\n- Check backend logs for CORS-related messages": {
      "value": "The issue is that browsers treat 'localhost' and '127.0.0.1' as different origins,\neven though they resolve to the same address.\n\nIMMEDIATE FIX (Choose one):\n1. Use consistent hostnames - access both frontend and backend via either:\n   - http://localhost:3000 → http://localhost:8000\n   - http://127.0.0.1:3000 → http://127.0.0.1:8000\n\n2. Set environment variable to allow all local origins:\n   export CORS_ORIGINS=\"*\"  (for development only)\n\n3. The backend CORS configuration should already handle this, but if not,\n   ensure the backend is running with proper environment detection.\n\nDEBUGGING:\n- Check that your backend is detecting 'development' environment\n- Verify CORS middleware is properly initialized\n- Check backend logs for CORS-related messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:145"
      ]
    },
    "The issue is that send_to_user, broadcast_to_room, etc.": {
      "value": "The issue is that send_to_user, broadcast_to_room, etc.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:252"
      ]
    },
    "The refresh endpoint now accepts multiple field formats:": {
      "value": "The refresh endpoint now accepts multiple field formats:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:149"
      ]
    },
    "The service coordination system should now handle:": {
      "value": "The service coordination system should now handle:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:415"
      ]
    },
    "The socket permission error may be resolved or intermittent.": {
      "value": "The socket permission error may be resolved or intermittent.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:189"
      ]
    },
    "The system analysis reveals the following insights:": {
      "value": "The system analysis reveals the following insights:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:163"
      ]
    },
    "The system is operational.": {
      "value": "The system is operational.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:300",
        "scripts/test_websocket_chat_standalone.py:295"
      ]
    },
    "The test suite MUST fail until all mocks are replaced with real services": {
      "value": "The test suite MUST fail until all mocks are replaced with real services",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:99"
      ]
    },
    "The test_backend.py script has been consolidated into unified_test_runner.py": {
      "value": "The test_backend.py script has been consolidated into unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:22"
      ]
    },
    "The test_frontend.py script has been consolidated into unified_test_runner.py": {
      "value": "The test_frontend.py script has been consolidated into unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:22"
      ]
    },
    "These files exceed 450-line limit and should be split:": {
      "value": "These files exceed 450-line limit and should be split:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:201"
      ]
    },
    "These files should be fixed manually before attempting any refactoring.": {
      "value": "These files should be fixed manually before attempting any refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:724"
      ]
    },
    "These files will be skipped to avoid overwrites.": {
      "value": "These files will be skipped to avoid overwrites.",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:244"
      ]
    },
    "These functions exceed 25-line limit and need helper extraction:": {
      "value": "These functions exceed 25-line limit and need helper extraction:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:208"
      ]
    },
    "These integration tests use excessive mocking:": {
      "value": "These integration tests use excessive mocking:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:217"
      ]
    },
    "These test pairs appear to be exact duplicates and should be consolidated:": {
      "value": "These test pairs appear to be exact duplicates and should be consolidated:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:586"
      ]
    },
    "These test pairs are highly similar and might benefit from refactoring:": {
      "value": "These test pairs are highly similar and might benefit from refactoring:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:601"
      ]
    },
    "These tests are designed to FAIL initially to expose port configuration issues.": {
      "value": "These tests are designed to FAIL initially to expose port configuration issues.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:461"
      ]
    },
    "These tests demonstrate the blocking behavior described in the": {
      "value": "These tests demonstrate the blocking behavior described in the",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:233"
      ]
    },
    "This comprehensive test suite validates the adaptive workflow system:\n\n1. **Environment Check** - Ensures all services are running\n2. **Authentication** - Sets up test user and gets access token\n3. **Workflow Scenarios** - Tests three data sufficiency levels\n4. **Integration Tests** - Runs pytest test suite\n5. **Direct Tests** - Runs direct workflow validation": {
      "value": "This comprehensive test suite validates the adaptive workflow system:\n\n1. **Environment Check** - Ensures all services are running\n2. **Authentication** - Sets up test user and gets access token\n3. **Workflow Scenarios** - Tests three data sufficiency levels\n4. **Integration Tests** - Runs pytest test suite\n5. **Direct Tests** - Runs direct workflow validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:295"
      ]
    },
    "This confirms that synchronous serialization is the issue": {
      "value": "This confirms that synchronous serialization is the issue",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:219"
      ]
    },
    "This confirms the issue described in the CRITICAL CONTEXT.": {
      "value": "This confirms the issue described in the CRITICAL CONTEXT.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:170"
      ]
    },
    "This confirms there's a Windows socket permission problem.": {
      "value": "This confirms there's a Windows socket permission problem.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:193"
      ]
    },
    "This demo shows Fix #2: Test Size Limits Enforcement implementation": {
      "value": "This demo shows Fix #2: Test Size Limits Enforcement implementation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:203"
      ]
    },
    "This file causes precedence issues with Google Secret Manager": {
      "value": "This file causes precedence issues with Google Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:21"
      ]
    },
    "This fixes the 422 errors the frontend was experiencing.": {
      "value": "This fixes the 422 errors the frontend was experiencing.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:154"
      ]
    },
    "This indicates WebSocket integration may not be working": {
      "value": "This indicates WebSocket integration may not be working",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:176"
      ]
    },
    "This is a large text blob that repeats.": {
      "value": "This is a large text blob that repeats.",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:40"
      ]
    },
    "This is the [WinError 10013] permission error!": {
      "value": "This is the [WinError 10013] permission error!",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:43"
      ]
    },
    "This legacy wrapper will be removed in a future version.": {
      "value": "This legacy wrapper will be removed in a future version.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:27",
        "scripts/test_frontend.py:27"
      ]
    },
    "This may be expected if services aren't running": {
      "value": "This may be expected if services aren't running",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:75"
      ]
    },
    "This might be expected if not running on GCP or without proxy": {
      "value": "This might be expected if not running on GCP or without proxy",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:247"
      ]
    },
    "This might be expected if the user lacks permissions": {
      "value": "This might be expected if the user lacks permissions",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:163"
      ]
    },
    "This might be normal if reload already happened": {
      "value": "This might be normal if reload already happened",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:87"
      ]
    },
    "This report identifies test files that violate size constraints.": {
      "value": "This report identifies test files that violate size constraints.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:857"
      ]
    },
    "This should match across all environments": {
      "value": "This should match across all environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:154"
      ]
    },
    "This should work if running on GCP or with Cloud SQL proxy": {
      "value": "This should work if running on GCP or with Cloud SQL proxy",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:238"
      ]
    },
    "This shows serialization is not properly concurrent.": {
      "value": "This shows serialization is not properly concurrent.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:222"
      ]
    },
    "This shows the correct way - using request.json() which IS awaitable.": {
      "value": "This shows the correct way - using request.json() which IS awaitable.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:34"
      ]
    },
    "This test MUST fail to prove the business case for consolidation": {
      "value": "This test MUST fail to prove the business case for consolidation",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:840"
      ]
    },
    "This test is for Windows only": {
      "value": "This test is for Windows only",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:24"
      ]
    },
    "This test should now PASS with the new implementation.": {
      "value": "This test should now PASS with the new implementation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:252"
      ]
    },
    "This test uses REAL services - NO MOCKS!": {
      "value": "This test uses REAL services - NO MOCKS!",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:26"
      ]
    },
    "This validates fixes for issues in test_critical_cold_start_initialization.py": {
      "value": "This validates fixes for issues in test_critical_cold_start_initialization.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:406"
      ]
    },
    "This validates the need for async serialization implementation.": {
      "value": "This validates the need for async serialization implementation.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:247"
      ]
    },
    "This will cause issues in Cloud Run logs.": {
      "value": "This will cause issues in Cloud Run logs.",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:95"
      ]
    },
    "This will cause noticeable UI freezing": {
      "value": "This will cause noticeable UI freezing",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:343"
      ]
    },
    "This will cause service communication failures.": {
      "value": "This will cause service communication failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:422"
      ]
    },
    "This will fix send_to_user, broadcast_to_room, broadcast_to_all": {
      "value": "This will fix send_to_user, broadcast_to_room, broadcast_to_all",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:257"
      ]
    },
    "This would contain:\n- All user creation tests\n- All authentication tests  \n- All permission tests\n- All user profile tests\n- Helper functions": {
      "value": "This would contain:\n- All user creation tests\n- All authentication tests  \n- All permission tests\n- All user profile tests\n- Helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:67"
      ]
    },
    "This would move serialization to a thread pool, preventing event loop blocking.": {
      "value": "This would move serialization to a thread pool, preventing event loop blocking.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:179"
      ]
    },
    "This would require careful AST manipulation": {
      "value": "This would require careful AST manipulation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:597"
      ]
    },
    "Thought:": {
      "value": "Thought:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:45"
      ]
    },
    "Thread ID:": {
      "value": "Thread ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:134"
      ]
    },
    "Thread created:": {
      "value": "Thread created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:237"
      ]
    },
    "Thread creation failed:": {
      "value": "Thread creation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:76"
      ]
    },
    "Thread retrieval failed:": {
      "value": "Thread retrieval failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:90"
      ]
    },
    "Thread title mismatch: expected '": {
      "value": "Thread title mismatch: expected '",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:87"
      ]
    },
    "Thread update did not propagate correctly": {
      "value": "Thread update did not propagate correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:104"
      ]
    },
    "Thread update failed:": {
      "value": "Thread update failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:109"
      ]
    },
    "Thread verification after update failed:": {
      "value": "Thread verification after update failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:106"
      ]
    },
    "Threads List": {
      "value": "Threads List",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:82"
      ]
    },
    "Threads count:": {
      "value": "Threads count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:213",
        "scripts/test_staging_auth_live.py:153"
      ]
    },
    "Threshold exceeded:": {
      "value": "Threshold exceeded:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:163"
      ]
    },
    "Throughput below target:": {
      "value": "Throughput below target:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:230"
      ]
    },
    "Time Analysis:": {
      "value": "Time Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:74"
      ]
    },
    "Time Zone:": {
      "value": "Time Zone:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:60"
      ]
    },
    "Timeframe is required": {
      "value": "Timeframe is required",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:100"
      ]
    },
    "Timeout": {
      "value": "Timeout",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:60",
        "scripts/test_docker_manager.py:213"
      ]
    },
    "Timeout during test": {
      "value": "Timeout during test",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:180"
      ]
    },
    "Timeout during validation": {
      "value": "Timeout during validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:137"
      ]
    },
    "Timeout for category:": {
      "value": "Timeout for category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:153"
      ]
    },
    "Timeout in": {
      "value": "Timeout in",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:122"
      ]
    },
    "Timestamp:": {
      "value": "Timestamp:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:26",
        "scripts/test_backend_auth_config.py:16",
        "scripts/test_cors.py:460",
        "scripts/test_failure_analyzer.py:384",
        "scripts/test_staging_auth_e2e.py:334",
        "scripts/test_staging_auth_live.py:18",
        "scripts/test_staging_deployment.py:188",
        "scripts/test_staging_jwt_validation.py:19",
        "scripts/test_staging_login_automated.py:307",
        "scripts/test_staging_refresh_format.py:20"
      ]
    },
    "Tips:": {
      "value": "Tips:",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:98"
      ]
    },
    "To apply these changes, run with --apply flag": {
      "value": "To apply these changes, run with --apply flag",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:186"
      ]
    },
    "To apply these changes, run:": {
      "value": "To apply these changes, run:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:199"
      ]
    },
    "To execute the renames, run: python": {
      "value": "To execute the renames, run: python",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:287"
      ]
    },
    "To fix import errors:": {
      "value": "To fix import errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:108"
      ]
    },
    "To fix these issues:": {
      "value": "To fix these issues:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:185"
      ]
    },
    "To fix:": {
      "value": "To fix:",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:85"
      ]
    },
    "To grant access:": {
      "value": "To grant access:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:96"
      ]
    },
    "To limit to first N files: python": {
      "value": "To limit to first N files: python",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:288"
      ]
    },
    "To restore: cp -r {backup_dir}/* {root_dir}/": {
      "value": "To restore: cp -r {backup_dir}/* {root_dir}/",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1013"
      ]
    },
    "To run all integration tests:": {
      "value": "To run all integration tests:",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:210"
      ]
    },
    "To run frontend tests with real services:": {
      "value": "To run frontend tests with real services:",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:208"
      ]
    },
    "To run real e2e tests:": {
      "value": "To run real e2e tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:83"
      ]
    },
    "To stop: docker-compose -f docker-compose.test.yml down": {
      "value": "To stop: docker-compose -f docker-compose.test.yml down",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:117"
      ]
    },
    "To use development-specific OAuth credentials:": {
      "value": "To use development-specific OAuth credentials:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:110"
      ]
    },
    "To view logs: docker-compose -f docker-compose.test.yml logs -f": {
      "value": "To view logs: docker-compose -f docker-compose.test.yml logs -f",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:116"
      ]
    },
    "Token": {
      "value": "Token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:157"
      ]
    },
    "Token '": {
      "value": "Token '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:183"
      ]
    },
    "Token (first 20 chars): [cyan]": {
      "value": "Token (first 20 chars): [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:255"
      ]
    },
    "Token Endpoint": {
      "value": "Token Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "Token Payload:": {
      "value": "Token Payload:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:66"
      ]
    },
    "Token Refresh (camelCase)": {
      "value": "Token Refresh (camelCase)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:347"
      ]
    },
    "Token Refresh (snake_case)": {
      "value": "Token Refresh (snake_case)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:346"
      ]
    },
    "Token Refresh Uniqueness": {
      "value": "Token Refresh Uniqueness",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:222"
      ]
    },
    "Token Test Data Factory\nCreates JWT tokens and OAuth tokens for auth service testing.\nSupports access tokens, refresh tokens, and service tokens with proper claims.": {
      "value": "Token Test Data Factory\nCreates JWT tokens and OAuth tokens for auth service testing.\nSupports access tokens, refresh tokens, and service tokens with proper claims.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:1"
      ]
    },
    "Token Validation": {
      "value": "Token Validation",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:223",
        "scripts/test_auth_integration.py:95",
        "scripts/test_auth_integration.py:101",
        "scripts/test_staging_auth_e2e.py:345"
      ]
    },
    "Token creation failed:": {
      "value": "Token creation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:66"
      ]
    },
    "Token expiration enforcement verified": {
      "value": "Token expiration enforcement verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:132"
      ]
    },
    "Token expired": {
      "value": "Token expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:101"
      ]
    },
    "Token failed for reason other than expiration:": {
      "value": "Token failed for reason other than expiration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:69"
      ]
    },
    "Token has been revoked": {
      "value": "Token has been revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:201"
      ]
    },
    "Token is expired:": {
      "value": "Token is expired:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:57"
      ]
    },
    "Token lifetime:": {
      "value": "Token lifetime:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:96"
      ]
    },
    "Token not added to revocation list": {
      "value": "Token not added to revocation list",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:198"
      ]
    },
    "Token not suitable for WebSocket:": {
      "value": "Token not suitable for WebSocket:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:158"
      ]
    },
    "Token replay attack detection verified": {
      "value": "Token replay attack detection verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:168"
      ]
    },
    "Token replay detected": {
      "value": "Token replay detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:165"
      ]
    },
    "Token replay not detected": {
      "value": "Token replay not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:162"
      ]
    },
    "Token revocation enforcement verified": {
      "value": "Token revocation enforcement verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:204"
      ]
    },
    "Token should have jti claim": {
      "value": "Token should have jti claim",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:503"
      ]
    },
    "Token validation failed:": {
      "value": "Token validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:59"
      ]
    },
    "Token validation test failed:": {
      "value": "Token validation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:100"
      ]
    },
    "Token with 'none' algorithm should be rejected": {
      "value": "Token with 'none' algorithm should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:442"
      ]
    },
    "Token without 'sub' claim should be rejected": {
      "value": "Token without 'sub' claim should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:270"
      ]
    },
    "Token:": {
      "value": "Token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:381"
      ]
    },
    "TokenFactory": {
      "value": "TokenFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:17"
      ]
    },
    "TokenTestUtils": {
      "value": "TokenTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:16"
      ]
    },
    "Tokens changed:": {
      "value": "Tokens changed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:145",
        "scripts/test_staging_auth_e2e.py:180"
      ]
    },
    "Tokens generated with 'test-secret':": {
      "value": "Tokens generated with 'test-secret':",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:34"
      ]
    },
    "Tokens should be different": {
      "value": "Tokens should be different",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:113"
      ]
    },
    "Tokens should have different JTI": {
      "value": "Tokens should have different JTI",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:117"
      ]
    },
    "Too few WebSocket events:": {
      "value": "Too few WebSocket events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:410"
      ]
    },
    "Too few agents involved:": {
      "value": "Too few agents involved:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:411"
      ]
    },
    "Too few successful agents:": {
      "value": "Too few successful agents:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:409"
      ]
    },
    "Too many consecutive errors, stopping monitor": {
      "value": "Too many consecutive errors, stopping monitor",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:310",
        "scripts/pytest_resource_monitor.py:355"
      ]
    },
    "Too many failed validations:": {
      "value": "Too many failed validations:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:268"
      ]
    },
    "Tool Completed": {
      "value": "Tool Completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:130",
        "scripts/test_websocket_chat_standalone.py:130"
      ]
    },
    "Tool Executing": {
      "value": "Tool Executing",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:129",
        "scripts/test_websocket_chat_standalone.py:129"
      ]
    },
    "Tool events received:": {
      "value": "Tool events received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:211"
      ]
    },
    "Tool executed": {
      "value": "Tool executed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:312",
        "scripts/test_websocket_chat_standalone.py:307"
      ]
    },
    "Tool executed successfully": {
      "value": "Tool executed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:225"
      ]
    },
    "Tool execution completed in": {
      "value": "Tool execution completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:385"
      ]
    },
    "Tool execution events received:": {
      "value": "Tool execution events received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:240"
      ]
    },
    "Tool execution events:": {
      "value": "Tool execution events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:395"
      ]
    },
    "Tool execution took too long:": {
      "value": "Tool execution took too long:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:401"
      ]
    },
    "Tool output data": {
      "value": "Tool output data",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:52",
        "scripts/test_intensive_serialization.py:100"
      ]
    },
    "Tool result:": {
      "value": "Tool result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:386"
      ]
    },
    "Tool:": {
      "value": "Tool:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:47"
      ]
    },
    "ToolDispatcher(llm_manager)": {
      "value": "ToolDispatcher(llm_manager)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:321"
      ]
    },
    "ToolPermissionMiddleware does not default to staging": {
      "value": "ToolPermissionMiddleware does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:86"
      ]
    },
    "Tools balanced:": {
      "value": "Tools balanced:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:318"
      ]
    },
    "Top Failures:": {
      "value": "Top Failures:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:150"
      ]
    },
    "Top splitting strategy:": {
      "value": "Top splitting strategy:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:96"
      ]
    },
    "Top violations by type:": {
      "value": "Top violations by type:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:132"
      ]
    },
    "Total Changes:": {
      "value": "Total Changes:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:293"
      ]
    },
    "Total Checks:": {
      "value": "Total Checks:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:235"
      ]
    },
    "Total Collection Errors:": {
      "value": "Total Collection Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:370"
      ]
    },
    "Total Documents:": {
      "value": "Total Documents:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:470"
      ]
    },
    "Total Duplicate Tests:": {
      "value": "Total Duplicate Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:371"
      ]
    },
    "Total Duration:": {
      "value": "Total Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:329"
      ]
    },
    "Total Errors: 2": {
      "value": "Total Errors: 2",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:360"
      ]
    },
    "Total Errors: 6": {
      "value": "Total Errors: 6",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:163"
      ]
    },
    "Total Events Captured:": {
      "value": "Total Events Captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:123"
      ]
    },
    "Total Events:": {
      "value": "Total Events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:124",
        "scripts/test_websocket_chat_standalone.py:124"
      ]
    },
    "Total Failures Found:": {
      "value": "Total Failures Found:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:141"
      ]
    },
    "Total Failures:": {
      "value": "Total Failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:66"
      ]
    },
    "Total Fake Tests Found:": {
      "value": "Total Fake Tests Found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:259"
      ]
    },
    "Total Files Scanned:": {
      "value": "Total Files Scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:258"
      ]
    },
    "Total Improvement:": {
      "value": "Total Improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:160"
      ]
    },
    "Total Iterations:": {
      "value": "Total Iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:130"
      ]
    },
    "Total Known Failures:": {
      "value": "Total Known Failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:124"
      ]
    },
    "Total Orphaned Tests:": {
      "value": "Total Orphaned Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:372"
      ]
    },
    "Total Runs:": {
      "value": "Total Runs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:165"
      ]
    },
    "Total Suites:": {
      "value": "Total Suites:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:364"
      ]
    },
    "Total Test Files:": {
      "value": "Total Test Files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:50"
      ]
    },
    "Total Test Runs:": {
      "value": "Total Test Runs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:65"
      ]
    },
    "Total Test Violations:": {
      "value": "Total Test Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:67"
      ]
    },
    "Total Tests Analyzed:": {
      "value": "Total Tests Analyzed:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:656"
      ]
    },
    "Total Tests Collected:": {
      "value": "Total Tests Collected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:369"
      ]
    },
    "Total Tests:": {
      "value": "Total Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:737",
        "scripts/final_test_status_check.py:99",
        "scripts/staging_comprehensive_test.py:459",
        "scripts/test_agent_orchestration_recovery.py:348",
        "scripts/test_collection_audit.py:327",
        "scripts/test_coordination_fixes.py:379",
        "scripts/test_dashboard.py:164",
        "scripts/test_example_message_flow.py:320",
        "scripts/test_staging_deployment.py:215",
        "scripts/test_staging_env.py:188"
      ]
    },
    "Total Tracked Tests:": {
      "value": "Total Tracked Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:298"
      ]
    },
    "Total Violations:": {
      "value": "Total Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:310",
        "scripts/test_mock_violations_standalone.py:58"
      ]
    },
    "Total WebSocket events:": {
      "value": "Total WebSocket events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:394"
      ]
    },
    "Total blocked time:": {
      "value": "Total blocked time:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:114",
        "scripts/test_blocking_analysis.py:128",
        "scripts/test_intensive_serialization.py:204"
      ]
    },
    "Total blocking events:": {
      "value": "Total blocking events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:126",
        "scripts/test_blocking_analysis.py:301",
        "scripts/test_intensive_serialization.py:201"
      ]
    },
    "Total blocks:": {
      "value": "Total blocks:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:112"
      ]
    },
    "Total changes made:": {
      "value": "Total changes made:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:167"
      ]
    },
    "Total concurrent time:": {
      "value": "Total concurrent time:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:214"
      ]
    },
    "Total conftest.py files:": {
      "value": "Total conftest.py files:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:102"
      ]
    },
    "Total errors:": {
      "value": "Total errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:219"
      ]
    },
    "Total events captured:": {
      "value": "Total events captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:125"
      ]
    },
    "Total events:": {
      "value": "Total events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:396",
        "scripts/test_supervisor_execution_flow.py:172",
        "scripts/test_websocket_standalone.py:174"
      ]
    },
    "Total failures found:": {
      "value": "Total failures found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:225"
      ]
    },
    "Total failures to fix:": {
      "value": "Total failures to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:252"
      ]
    },
    "Total failures:": {
      "value": "Total failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:102"
      ]
    },
    "Total files modified:": {
      "value": "Total files modified:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:197"
      ]
    },
    "Total files processed:": {
      "value": "Total files processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:196",
        "scripts/standardize_l3_test_names.py:282"
      ]
    },
    "Total files scanned:": {
      "value": "Total files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:309"
      ]
    },
    "Total fixes applied:": {
      "value": "Total fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:141",
        "scripts/frontend_iterative_test_runner.py:765"
      ]
    },
    "Total iterations completed:": {
      "value": "Total iterations completed:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:762"
      ]
    },
    "Total iterations:": {
      "value": "Total iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:140",
        "scripts/iterative_test_fix_loop.py:164",
        "scripts/test_failure_tracker.py:194"
      ]
    },
    "Total lines:": {
      "value": "Total lines:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:34",
        "scripts/compliance/demo_test_size_enforcement.py:152",
        "scripts/compliance/test_refactor_helper.py:706"
      ]
    },
    "Total mocks found:": {
      "value": "Total mocks found:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:167"
      ]
    },
    "Total operation time:": {
      "value": "Total operation time:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:160"
      ]
    },
    "Total runners:": {
      "value": "Total runners:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:150"
      ]
    },
    "Total savings must be non-negative": {
      "value": "Total savings must be non-negative",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:425"
      ]
    },
    "Total send time:": {
      "value": "Total send time:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:112"
      ]
    },
    "Total service restarts:": {
      "value": "Total service restarts:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:180"
      ]
    },
    "Total system load time:": {
      "value": "Total system load time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:640"
      ]
    },
    "Total tasks to process:": {
      "value": "Total tasks to process:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:227"
      ]
    },
    "Total test files scanned:": {
      "value": "Total test files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:160",
        "scripts/compliance/test_size_validator.py:420"
      ]
    },
    "Total test files:": {
      "value": "Total test files:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:287"
      ]
    },
    "Total tests processed:": {
      "value": "Total tests processed:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:391"
      ]
    },
    "Total tests run:": {
      "value": "Total tests run:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:101"
      ]
    },
    "Total tests scanned:": {
      "value": "Total tests scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:34",
        "scripts/test_failure_scanner.py:224"
      ]
    },
    "Total tests:": {
      "value": "Total tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:373",
        "scripts/test_modern_websocket_migration.py:201"
      ]
    },
    "Total time:": {
      "value": "Total time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:268",
        "scripts/test_blocking_analysis.py:289"
      ]
    },
    "Total unique failures found:": {
      "value": "Total unique failures found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:207",
        "scripts/test_failure_tracker.py:195"
      ]
    },
    "Total violations:": {
      "value": "Total violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:423",
        "scripts/test_secret_manager_builder_critical.py:772"
      ]
    },
    "Total workflows:": {
      "value": "Total workflows:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:333"
      ]
    },
    "Total:": {
      "value": "Total:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:248",
        "scripts/fix_test_batch.py:380",
        "scripts/test_auth_database_sessions.py:397",
        "scripts/test_auth_integration.py:156",
        "scripts/test_database_url_builder_comprehensive.py:347",
        "scripts/test_log_introspection.py:422",
        "scripts/test_real_jwt_e2e.py:247",
        "scripts/test_ssl_certificates_staging.py:304",
        "scripts/test_staging_auth_e2e.py:373",
        "scripts/test_staging_migrations.py:326"
      ]
    },
    "Trend Direction:": {
      "value": "Trend Direction:",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:74"
      ]
    },
    "Triage agent endpoint accessible or properly times out": {
      "value": "Triage agent endpoint accessible or properly times out",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:93"
      ]
    },
    "True": {
      "value": "True",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:198"
      ]
    },
    "Try again? (y/n):": {
      "value": "Try again? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:192"
      ]
    },
    "Try different credentials? (y/n):": {
      "value": "Try different credentials? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:197"
      ]
    },
    "Try running as Administrator or use the port cleanup script.": {
      "value": "Try running as Administrator or use the port cleanup script.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:194"
      ]
    },
    "Try running the dev launcher again.": {
      "value": "Try running the dev launcher again.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:190"
      ]
    },
    "Tuple[": {
      "value": "Tuple[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Type:": {
      "value": "Type:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:180",
        "scripts/compliance/test_size_validator.py:441",
        "scripts/remove_test_stubs.py:330",
        "scripts/test/test_startup_module.py:71"
      ]
    },
    "TypeError": {
      "value": "TypeError",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:527"
      ]
    },
    "UNIFIED TEST CONFIGURATION\n==========================\nCentral configuration for all testing operations across Netra platform.\nThis module defines test levels, markers, environments, and execution strategies.": {
      "value": "UNIFIED TEST CONFIGURATION\n==========================\nCentral configuration for all testing operations across Netra platform.\nThis module defines test levels, markers, environments, and execution strategies.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:2"
      ]
    },
    "UPDATE test_metadata SET\n                    total_runs = total_runs + 1,\n                    total_failures = total_failures + ?,\n                    total_passes = total_passes + ?,\n                    total_skips = total_skips + ?,\n                    last_run_timestamp = ?,\n                    last_run_status = ?,\n                    average_duration = (average_duration * total_runs + ?) / (total_runs + 1),\n                    failure_rate = CAST(total_failures + ? AS REAL) / (total_runs + 1)\n                WHERE test_id = ?": {
      "value": "UPDATE test_metadata SET\n                    total_runs = total_runs + 1,\n                    total_failures = total_failures + ?,\n                    total_passes = total_passes + ?,\n                    total_skips = total_skips + ?,\n                    last_run_timestamp = ?,\n                    last_run_status = ?,\n                    average_duration = (average_duration * total_runs + ?) / (total_runs + 1),\n                    failure_rate = CAST(total_failures + ? AS REAL) / (total_runs + 1)\n                WHERE test_id = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:278"
      ]
    },
    "UPDATE test_sessions SET\n                    end_time = ?,\n                    total_tests = ?,\n                    passed = ?,\n                    failed = ?,\n                    skipped = ?,\n                    metadata = ?\n                WHERE session_id = ?": {
      "value": "UPDATE test_sessions SET\n                    end_time = ?,\n                    total_tests = ?,\n                    passed = ?,\n                    failed = ?,\n                    skipped = ?,\n                    metadata = ?\n                WHERE session_id = ?",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:363"
      ]
    },
    "URGENT: Add tests for": {
      "value": "URGENT: Add tests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:252"
      ]
    },
    "URL Construction": {
      "value": "URL Construction",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:220"
      ]
    },
    "URL Driver Compatibility": {
      "value": "URL Driver Compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:265"
      ]
    },
    "URL Generation with Actual Credentials": {
      "value": "URL Generation with Actual Credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:154"
      ]
    },
    "URL construction test failed:": {
      "value": "URL construction test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:122"
      ]
    },
    "URL port:": {
      "value": "URL port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:420"
      ]
    },
    "URL:": {
      "value": "URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:117",
        "scripts/test_gtm_loading.py:107",
        "scripts/test_staging_db_direct.py:102",
        "scripts/test_staging_threads_fix.py:31",
        "scripts/test_websocket_connection.py:51",
        "scripts/test_websocket_cors_comprehensive.py:56"
      ]
    },
    "URLs to test:": {
      "value": "URLs to test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:44"
      ]
    },
    "USER": {
      "value": "USER",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:77"
      ]
    },
    "USE_MEMORY_DB": {
      "value": "USE_MEMORY_DB",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:14"
      ]
    },
    "USE_MOCKS": {
      "value": "USE_MOCKS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:304"
      ]
    },
    "USE_REAL_LLM": {
      "value": "USE_REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:20",
        "scripts/debug_supervisor_test.py:31",
        "scripts/run_agent_pipeline_test.py:29",
        "scripts/run_critical_test.py:31"
      ]
    },
    "USE_REAL_LLM:": {
      "value": "USE_REAL_LLM:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:31",
        "scripts/test_service_health.py:41",
        "scripts/test_service_health_simple.py:107"
      ]
    },
    "USE_REAL_SERVICES": {
      "value": "USE_REAL_SERVICES",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:281",
        "scripts/start_test_services.py:153",
        "scripts/test_staging.py:36",
        "scripts/test_websocket_chat_simple.py:38",
        "scripts/test_websocket_chat_standalone.py:38"
      ]
    },
    "USE_REAL_SERVICES:": {
      "value": "USE_REAL_SERVICES:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:40",
        "scripts/test_service_health_simple.py:106"
      ]
    },
    "UTF-8": {
      "value": "UTF-8",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:22",
        "scripts/test_ssl_certificates_staging.py:22",
        "scripts/test_staging_clickhouse.py:54",
        "scripts/test_staging_db_direct.py:24",
        "scripts/test_staging_migrations.py:23"
      ]
    },
    "Unauthenticated health check:": {
      "value": "Unauthenticated health check:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:80"
      ]
    },
    "Unauthenticated request failed:": {
      "value": "Unauthenticated request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:82"
      ]
    },
    "Unexpected async error type:": {
      "value": "Unexpected async error type:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:94"
      ]
    },
    "Unexpected async status:": {
      "value": "Unexpected async status:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:84"
      ]
    },
    "Unexpected error during service availability test:": {
      "value": "Unexpected error during service availability test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:99"
      ]
    },
    "Unexpected error during testing:": {
      "value": "Unexpected error during testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:348"
      ]
    },
    "Unexpected error importing": {
      "value": "Unexpected error importing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:96"
      ]
    },
    "Unexpected error type:": {
      "value": "Unexpected error type:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:198"
      ]
    },
    "Unexpected error:": {
      "value": "Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:69",
        "scripts/test_imports.py:130",
        "scripts/test_real_jwt_e2e.py:124"
      ]
    },
    "Unexpected exceptions in concurrent validation:": {
      "value": "Unexpected exceptions in concurrent validation:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:269"
      ]
    },
    "Unexpected result": {
      "value": "Unexpected result",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:307"
      ]
    },
    "Unexpected status": {
      "value": "Unexpected status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:71"
      ]
    },
    "Unexpected status code:": {
      "value": "Unexpected status code:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:159",
        "auth_service/tests/test_critical_bugs_real.py:48"
      ]
    },
    "Unexpected status:": {
      "value": "Unexpected status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:69"
      ]
    },
    "Unified JWT Validation Tests Package\n\nBusiness Value: Authentication security for cross-service communication": {
      "value": "Unified JWT Validation Tests Package\n\nBusiness Value: Authentication security for cross-service communication",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/__init__.py:1"
      ]
    },
    "Unique Failures:": {
      "value": "Unique Failures:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:149"
      ]
    },
    "Unit Tests": {
      "value": "Unit Tests",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:329",
        "scripts/run_supervisor_test_coverage.py:352",
        "scripts/test_example_message_flow.py:46"
      ]
    },
    "Unit tests for auth service refresh token endpoint.\nTests the /auth/refresh endpoint request handling and validation.": {
      "value": "Unit tests for auth service refresh token endpoint.\nTests the /auth/refresh endpoint request handling and validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:1"
      ]
    },
    "Unit tests for isolated components": {
      "value": "Unit tests for isolated components",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:76"
      ]
    },
    "Unix socket path doesn't exist in Cloud Run environment": {
      "value": "Unix socket path doesn't exist in Cloud Run environment",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:200"
      ]
    },
    "Unjustified mocks by category:": {
      "value": "Unjustified mocks by category:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:169"
      ]
    },
    "Unjustified mocks:": {
      "value": "Unjustified mocks:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:168"
      ]
    },
    "Unknown": {
      "value": "Unknown",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:323",
        "scripts/fix_test_batch.py:79",
        "scripts/manage_test_services.py:105",
        "scripts/team_updates_test_analyzer.py:58",
        "scripts/test_backend_optimized.py:214",
        "scripts/test_secret_manager_builder_critical.py:526",
        "scripts/test_staging_clickhouse.py:174",
        "scripts/test_staging_config.py:99",
        "scripts/test_workflows_with_act.py:211"
      ]
    },
    "Unknown Variable Access env": {
      "value": "Unknown Variable Access env",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:312"
      ]
    },
    "Unknown category:": {
      "value": "Unknown category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:296",
        "scripts/test_backend_ORIGINAL.py:220"
      ]
    },
    "Unknown error": {
      "value": "Unknown error",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:394",
        "scripts/test_websocket_injection_fix_complete.py:378",
        "scripts/test_workflows_with_act.py:221"
      ]
    },
    "Unknown format": {
      "value": "Unknown format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:115"
      ]
    },
    "Unknown issue": {
      "value": "Unknown issue",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:247",
        "scripts/test_websocket_injection_fix_complete.py:482"
      ]
    },
    "Unknown memory format:": {
      "value": "Unknown memory format:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:63"
      ]
    },
    "Unknown role:": {
      "value": "Unknown role:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:237"
      ]
    },
    "Unknown service:": {
      "value": "Unknown service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:224"
      ]
    },
    "Unserializable Object": {
      "value": "Unserializable Object",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:241"
      ]
    },
    "Update": {
      "value": "Update",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:113"
      ]
    },
    "Update Jest snapshots": {
      "value": "Update Jest snapshots",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:404"
      ]
    },
    "Update PYTHONPATH": {
      "value": "Update PYTHONPATH",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:99"
      ]
    },
    "Update _send_to_connection to use async serialization": {
      "value": "Update _send_to_connection to use async serialization",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:256"
      ]
    },
    "Update connection settings": {
      "value": "Update connection settings",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:205"
      ]
    },
    "Update expected values": {
      "value": "Update expected values",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:107"
      ]
    },
    "Update mock configurations": {
      "value": "Update mock configurations",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:140",
        "scripts/test_failure_analyzer.py:272"
      ]
    },
    "Update optimization models based on execution results": {
      "value": "Update optimization models based on execution results",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:224"
      ]
    },
    "Update requirements.txt": {
      "value": "Update requirements.txt",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:219"
      ]
    },
    "Update test expectations or fix implementation": {
      "value": "Update test expectations or fix implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:230"
      ]
    },
    "Updated Jest configuration": {
      "value": "Updated Jest configuration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:703"
      ]
    },
    "Updated Real Pipeline Test Thread": {
      "value": "Updated Real Pipeline Test Thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:94"
      ]
    },
    "Updated component defaultProps": {
      "value": "Updated component defaultProps",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:679"
      ]
    },
    "Updated component prop interfaces": {
      "value": "Updated component prop interfaces",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:681"
      ]
    },
    "Updated configurations:": {
      "value": "Updated configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:440"
      ]
    },
    "Updated failure report:": {
      "value": "Updated failure report:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:331"
      ]
    },
    "Updated form validation rules": {
      "value": "Updated form validation rules",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:731"
      ]
    },
    "Updated global test setup": {
      "value": "Updated global test setup",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:707"
      ]
    },
    "Updated import statements": {
      "value": "Updated import statements",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:692"
      ]
    },
    "Updated jest.fn() mock definitions": {
      "value": "Updated jest.fn() mock definitions",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:653"
      ]
    },
    "Updated keyboard event handlers": {
      "value": "Updated keyboard event handlers",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:666"
      ]
    },
    "Updated missing packages": {
      "value": "Updated missing packages",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:720"
      ]
    },
    "Updated references in:": {
      "value": "Updated references in:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:124"
      ]
    },
    "Updated report:": {
      "value": "Updated report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:413"
      ]
    },
    "Updated setupTests.js configuration": {
      "value": "Updated setupTests.js configuration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:655"
      ]
    },
    "Updated test discovery configuration": {
      "value": "Updated test discovery configuration",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:339"
      ]
    },
    "Updated test runner configuration": {
      "value": "Updated test runner configuration",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:234"
      ]
    },
    "Updated test to use": {
      "value": "Updated test to use",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:191"
      ]
    },
    "Updated waitFor timeout values": {
      "value": "Updated waitFor timeout values",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:742"
      ]
    },
    "Updating optimization models with execution data": {
      "value": "Updating optimization models with execution data",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:226"
      ]
    },
    "Upgrade": {
      "value": "Upgrade",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:183",
        "scripts/test_staging_auth_live.py:184"
      ]
    },
    "Upstream service responding slowly": {
      "value": "Upstream service responding slowly",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:105"
      ]
    },
    "Usage count mismatch:": {
      "value": "Usage count mismatch:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:273"
      ]
    },
    "Usage:": {
      "value": "Usage:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:127"
      ]
    },
    "Usage: python standardize_l3_test_names.py [options]": {
      "value": "Usage: python standardize_l3_test_names.py [options]",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:299"
      ]
    },
    "Usage: python test_failure_analyzer.py <test_name>": {
      "value": "Usage: python test_failure_analyzer.py <test_name>",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:421"
      ]
    },
    "Use API Key authentication for direct API testing": {
      "value": "Use API Key authentication for direct API testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:233"
      ]
    },
    "Use Docker services instead of local processes": {
      "value": "Use Docker services instead of local processes",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:175"
      ]
    },
    "Use browser automation with pre-configured session for UI testing": {
      "value": "Use browser automation with pre-configured session for UI testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:242"
      ]
    },
    "Use bypass token for authenticated endpoint testing": {
      "value": "Use bypass token for authenticated endpoint testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:238"
      ]
    },
    "Use default password? (y/n, default=y):": {
      "value": "Use default password? (y/n, default=y):",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:116"
      ]
    },
    "Use deployment pipeline for real migrations": {
      "value": "Use deployment pipeline for real migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:266"
      ]
    },
    "Use in requests:": {
      "value": "Use in requests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:382"
      ]
    },
    "Use model caching for repeated queries": {
      "value": "Use model caching for repeated queries",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:216"
      ]
    },
    "Use pytest fixtures to reduce test function length:\n\n@pytest.fixture\ndef authenticated_user():\n    user_data = {\"email\": \"test@example.com\", \"password\": \"password\"}\n    user = create_user(user_data)\n    token = authenticate_user(user.email, user_data[\"password\"])\n    return user, token\n\ndef test_user_can_access_profile(authenticated_user):\n    user, token = authenticated_user\n    profile = get_user_profile(user.id, token)\n    assert profile[\"email\"] == user.email": {
      "value": "Use pytest fixtures to reduce test function length:\n\n@pytest.fixture\ndef authenticated_user():\n    user_data = {\"email\": \"test@example.com\", \"password\": \"password\"}\n    user = create_user(user_data)\n    token = authenticate_user(user.email, user_data[\"password\"])\n    return user, token\n\ndef test_user_can_access_profile(authenticated_user):\n    user, token = authenticated_user\n    profile = get_user_profile(user.id, token)\n    assert profile[\"email\"] == user.email",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:230"
      ]
    },
    "Use pytest.mark.parametrize to reduce function length:\n\n@pytest.mark.parametrize(\"email,password,expected\", [\n    (\"valid@email.com\", \"strong_password\", True),\n    (\"invalid-email\", \"password\", False),\n    (\"valid@email.com\", \"weak\", False),\n])\ndef test_user_validation(email, password, expected):\n    result = validate_user_data({\"email\": email, \"password\": password})\n    assert result == expected": {
      "value": "Use pytest.mark.parametrize to reduce function length:\n\n@pytest.mark.parametrize(\"email,password,expected\", [\n    (\"valid@email.com\", \"strong_password\", True),\n    (\"invalid-email\", \"password\", False),\n    (\"valid@email.com\", \"weak\", False),\n])\ndef test_user_validation(email, password, expected):\n    result = validate_user_data({\"email\": email, \"password\": password})\n    assert result == expected",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:248"
      ]
    },
    "Use real components or move mocks to shared test utilities": {
      "value": "Use real components or move mocks to shared test utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:385"
      ]
    },
    "Use test isolation for concurrent execution": {
      "value": "Use test isolation for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:516",
        "scripts/test_frontend_ORIGINAL.py:424"
      ]
    },
    "Use the cookies in staging_test_credentials.json with Selenium/Playwright": {
      "value": "Use the cookies in staging_test_credentials.json with Selenium/Playwright",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:324"
      ]
    },
    "Use the credentials in 'staging_test_credentials.json' for testing.": {
      "value": "Use the credentials in 'staging_test_credentials.json' for testing.",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:311"
      ]
    },
    "Use the setup_staging_test_account.py script to generate test credentials": {
      "value": "Use the setup_staging_test_account.py script to generate test credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:375"
      ]
    },
    "User": {
      "value": "User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:238",
        "auth_service/tests/utils/assertion_helpers.py:180"
      ]
    },
    "User ID changed in cycle": {
      "value": "User ID changed in cycle",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:271"
      ]
    },
    "User ID changed in refresh token": {
      "value": "User ID changed in refresh token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:277"
      ]
    },
    "User ID consistent:": {
      "value": "User ID consistent:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:270"
      ]
    },
    "User ID:": {
      "value": "User ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:86",
        "scripts/test_signup_flow_manual.py:32",
        "scripts/test_signup_flow_manual.py:149",
        "scripts/test_staging_auth_e2e.py:111",
        "scripts/test_staging_auth_live.py:49",
        "scripts/test_staging_auth_live.py:125"
      ]
    },
    "User Profile": {
      "value": "User Profile",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:81"
      ]
    },
    "User Request:": {
      "value": "User Request:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:40"
      ]
    },
    "User Settings": {
      "value": "User Settings",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:83"
      ]
    },
    "User Test Data Factory\nCreates test users with consistent data patterns for auth service testing.\nSupports both local and OAuth users with proper password handling.": {
      "value": "User Test Data Factory\nCreates test users with consistent data patterns for auth service testing.\nSupports both local and OAuth users with proper password handling.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:1"
      ]
    },
    "User chat will appear frozen during complex agent state updates.": {
      "value": "User chat will appear frozen during complex agent state updates.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:248"
      ]
    },
    "User denied access": {
      "value": "User denied access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:251"
      ]
    },
    "User email not set correctly": {
      "value": "User email not set correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:166"
      ]
    },
    "User email validation should require @ symbol": {
      "value": "User email validation should require @ symbol",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:169"
      ]
    },
    "User id not set correctly": {
      "value": "User id not set correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:165"
      ]
    },
    "User import failed": {
      "value": "User import failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:214"
      ]
    },
    "User model missing email field": {
      "value": "User model missing email field",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:162"
      ]
    },
    "User model missing id field": {
      "value": "User model missing id field",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:161"
      ]
    },
    "User registered successfully": {
      "value": "User registered successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:134",
        "auth_service/tests/test_signup_flow_comprehensive.py:224"
      ]
    },
    "User registration failed:": {
      "value": "User registration failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:57"
      ]
    },
    "User should not have": {
      "value": "User should not have",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:67"
      ]
    },
    "User with email test@example.com already exists": {
      "value": "User with email test@example.com already exists",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:374"
      ]
    },
    "User with this email already exists": {
      "value": "User with this email already exists",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:154"
      ]
    },
    "User-Agent": {
      "value": "User-Agent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:219",
        "scripts/test_websocket_middleware.py:104"
      ]
    },
    "User.": {
      "value": "User.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:186"
      ]
    },
    "User:": {
      "value": "User:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:218",
        "scripts/test_staging_clickhouse.py:159",
        "scripts/test_staging_db_direct.py:47",
        "scripts/test_staging_migrations.py:49"
      ]
    },
    "User: [cyan]": {
      "value": "User: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:310"
      ]
    },
    "UserFactory": {
      "value": "UserFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:13"
      ]
    },
    "UserFlowTestBase": {
      "value": "UserFlowTestBase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:240",
        "scripts/fix_test_import_errors.py:241"
      ]
    },
    "Users with valid JWT tokens will be auto-created in staging.": {
      "value": "Users with valid JWT tokens will be auto-created in staging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:114"
      ]
    },
    "Uses Generated Fallbacks:": {
      "value": "Uses Generated Fallbacks:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:93"
      ]
    },
    "Uses deprecated unittest patterns": {
      "value": "Uses deprecated unittest patterns",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:272"
      ]
    },
    "Uses hardcoded sleep": {
      "value": "Uses hardcoded sleep",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:282"
      ]
    },
    "Using API Key:": {
      "value": "Using API Key:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:141"
      ]
    },
    "Using GOOGLE_CLIENT_ID from environment": {
      "value": "Using GOOGLE_CLIENT_ID from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:44"
      ]
    },
    "Using GOOGLE_CLIENT_SECRET from environment": {
      "value": "Using GOOGLE_CLIENT_SECRET from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:45"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:32"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_ID_STAGING from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_ID_STAGING from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:58"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:33"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_SECRET_STAGING from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_SECRET_STAGING from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:59"
      ]
    },
    "Using URL:": {
      "value": "Using URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:197"
      ]
    },
    "Using fallback execution method": {
      "value": "Using fallback execution method",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:243"
      ]
    },
    "Using fallback optimization for test_run_id": {
      "value": "Using fallback optimization for test_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:27"
      ]
    },
    "Using wildcard (*) origin - consider specific origins for security": {
      "value": "Using wildcard (*) origin - consider specific origins for security",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:216"
      ]
    },
    "Uvicorn Binding": {
      "value": "Uvicorn Binding",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:161"
      ]
    },
    "Uvicorn config test failed:": {
      "value": "Uvicorn config test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:140"
      ]
    },
    "Uvicorn configuration includes modern WebSocket settings": {
      "value": "Uvicorn configuration includes modern WebSocket settings",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:137"
      ]
    },
    "VALIDATION ERROR:": {
      "value": "VALIDATION ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:190"
      ]
    },
    "VALIDATION MISMATCH!": {
      "value": "VALIDATION MISMATCH!",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:246"
      ]
    },
    "VALIDATION RESULTS": {
      "value": "VALIDATION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:157"
      ]
    },
    "VALIDATOR TEST COMPLETED": {
      "value": "VALIDATOR TEST COMPLETED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:133"
      ]
    },
    "VERIFIED FUNCTIONALITY:": {
      "value": "VERIFIED FUNCTIONALITY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:316"
      ]
    },
    "VIOLATION EXAMPLES FOR FIXES:": {
      "value": "VIOLATION EXAMPLES FOR FIXES:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:397"
      ]
    },
    "VIOLATION TYPE BREAKDOWN:": {
      "value": "VIOLATION TYPE BREAKDOWN:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:319"
      ]
    },
    "VIOLATION: conftest.py files found in non-service-level directories:": {
      "value": "VIOLATION: conftest.py files found in non-service-level directories:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:85"
      ]
    },
    "VIOLATIONS:": {
      "value": "VIOLATIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:437"
      ]
    },
    "Valid": {
      "value": "Valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:193"
      ]
    },
    "Valid Cloud SQL configuration": {
      "value": "Valid Cloud SQL configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:200"
      ]
    },
    "Valid PKCE challenge should pass": {
      "value": "Valid PKCE challenge should pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:123"
      ]
    },
    "Valid User": {
      "value": "Valid User",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:26"
      ]
    },
    "Valid redirect URI should pass:": {
      "value": "Valid redirect URI should pass:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:95"
      ]
    },
    "Valid session validation failed": {
      "value": "Valid session validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:86"
      ]
    },
    "Valid test token:": {
      "value": "Valid test token:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:60",
        "scripts/test_jwt_fix.py:37"
      ]
    },
    "Valid token validation failed": {
      "value": "Valid token validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:73"
      ]
    },
    "Valid:": {
      "value": "Valid:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:732",
        "scripts/test_database_url_builder_comprehensive.py:34",
        "scripts/test_database_url_builder_comprehensive.py:91",
        "scripts/test_database_url_builder_comprehensive.py:133"
      ]
    },
    "ValidPass123!": {
      "value": "ValidPass123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:127",
        "auth_service/tests/test_signup_flow_comprehensive.py:157",
        "auth_service/tests/test_signup_flow_comprehensive.py:172",
        "auth_service/tests/test_signup_flow_comprehensive.py:204",
        "auth_service/tests/test_signup_flow_comprehensive.py:218",
        "auth_service/tests/test_signup_flow_comprehensive.py:280",
        "auth_service/tests/test_signup_flow_comprehensive.py:302",
        "auth_service/tests/test_signup_flow_comprehensive.py:317",
        "auth_service/tests/test_signup_flow_comprehensive.py:342",
        "auth_service/tests/test_signup_flow_comprehensive.py:380"
      ]
    },
    "Validate splitting suggestion": {
      "value": "Validate splitting suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:683"
      ]
    },
    "Validate staging configuration.": {
      "value": "Validate staging configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:70"
      ]
    },
    "Validated:": {
      "value": "Validated:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:471"
      ]
    },
    "Validating JWT Environment Configuration:": {
      "value": "Validating JWT Environment Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:123"
      ]
    },
    "Validating configuration files...": {
      "value": "Validating configuration files...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:153"
      ]
    },
    "Validating staging configuration...": {
      "value": "Validating staging configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:71"
      ]
    },
    "Validating:": {
      "value": "Validating:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:86"
      ]
    },
    "Validation Components:": {
      "value": "Validation Components:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:648"
      ]
    },
    "Validation Edge Cases": {
      "value": "Validation Edge Cases",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:309"
      ]
    },
    "Validation Result:": {
      "value": "Validation Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:47",
        "scripts/test_environment_validation_clean.py:84",
        "scripts/test_improved_environment_validation.py:48",
        "scripts/test_service_startup_with_missing_optionals.py:50"
      ]
    },
    "Validation Results:": {
      "value": "Validation Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:312",
        "scripts/test_websocket_standalone.py:173"
      ]
    },
    "Validation Test": {
      "value": "Validation Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:284"
      ]
    },
    "Validation correct": {
      "value": "Validation correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:249"
      ]
    },
    "Validation error:": {
      "value": "Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:338"
      ]
    },
    "Validation failed with exception:": {
      "value": "Validation failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:428"
      ]
    },
    "Validation for": {
      "value": "Validation for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:731"
      ]
    },
    "Validation script for LLM test model standardization.\n\nThis script ensures that the codebase uses only approved LLM models\n(Gemini models) and flags any regressions to GPT or Claude models\nthat should not be used in tests.": {
      "value": "Validation script for LLM test model standardization.\n\nThis script ensures that the codebase uses only approved LLM models\n(Gemini models) and flags any regressions to GPT or Claude models\nthat should not be used in tests.",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:2"
      ]
    },
    "Validation success:": {
      "value": "Validation success:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:178"
      ]
    },
    "Validation time should be constant to prevent timing attacks": {
      "value": "Validation time should be constant to prevent timing attacks",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:230"
      ]
    },
    "Validation too slow:": {
      "value": "Validation too slow:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:410"
      ]
    },
    "Validation valid:": {
      "value": "Validation valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:69"
      ]
    },
    "Value": {
      "value": "Value",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:71"
      ]
    },
    "Variable": {
      "value": "Variable",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:69"
      ]
    },
    "Verbose output": {
      "value": "Verbose output",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:389",
        "scripts/test_backend_optimized.py:389",
        "scripts/test_backend_ORIGINAL.py:505",
        "scripts/test_clickhouse_startup_fix.py:398",
        "scripts/test_cors.py:443",
        "scripts/test_example_message_flow.py:434",
        "scripts/test_frontend_ORIGINAL.py:419"
      ]
    },
    "Verification summary saved to: workflow_verification_results.md": {
      "value": "Verification summary saved to: workflow_verification_results.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:262"
      ]
    },
    "Verify API keys": {
      "value": "Verify API keys",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:138"
      ]
    },
    "Verify API keys in test environment": {
      "value": "Verify API keys in test environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:271"
      ]
    },
    "Verify GitHub workflow status": {
      "value": "Verify GitHub workflow status",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:37",
        "scripts/test_verify_workflow_status_corrected.py:90"
      ]
    },
    "Verify Redis configuration": {
      "value": "Verify Redis configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:131"
      ]
    },
    "Verify all dependencies are preserved": {
      "value": "Verify all dependencies are preserved",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:582"
      ]
    },
    "Verify all functions are included in the split": {
      "value": "Verify all functions are included in the split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:639"
      ]
    },
    "Verify help text displays correctly": {
      "value": "Verify help text displays correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:80"
      ]
    },
    "Verify port configuration": {
      "value": "Verify port configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:89",
        "scripts/test_failure_analyzer.py:204"
      ]
    },
    "Verify test service port configuration is correct.": {
      "value": "Verify test service port configuration is correct.",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:2"
      ]
    },
    "Verify that refresh tokens cannot be reused (prevents loops)": {
      "value": "Verify that refresh tokens cannot be reused (prevents loops)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:78"
      ]
    },
    "Verify user data remains consistent across multiple refreshes": {
      "value": "Verify user data remains consistent across multiple refreshes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:253"
      ]
    },
    "Verifying failures...": {
      "value": "Verifying failures...",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:229"
      ]
    },
    "Verifying staging is configured to use Google Secret Manager only...": {
      "value": "Verifying staging is configured to use Google Secret Manager only...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:95"
      ]
    },
    "Verifying:": {
      "value": "Verifying:",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:63"
      ]
    },
    "Version:": {
      "value": "Version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:34"
      ]
    },
    "Very low success rate (": {
      "value": "Very low success rate (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:303"
      ]
    },
    "Violations (": {
      "value": "Violations (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:344"
      ]
    },
    "Violations found:": {
      "value": "Violations found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:41"
      ]
    },
    "Violations:": {
      "value": "Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:38"
      ]
    },
    "Volume Mounts": {
      "value": "Volume Mounts",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:204"
      ]
    },
    "WARNING": {
      "value": "WARNING",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:74",
        "netra_backend/app/services/realistic_test_data/log_generator.py:81",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/test_backend_ORIGINAL.py:96",
        "scripts/test_error_monitor_logic.py:37",
        "scripts/test_error_monitor_logic.py:65"
      ]
    },
    "WARNING:": {
      "value": "WARNING:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:268",
        "scripts/auto_fix_test_violations.py:723",
        "scripts/pytest_resource_monitor.py:215"
      ]
    },
    "WARNING: 'type' field has typo: 'acess' instead of 'access'": {
      "value": "WARNING: 'type' field has typo: 'acess' instead of 'access'",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:89"
      ]
    },
    "WARNING: Auto-fix capabilities are DANGEROUS and disabled by default!": {
      "value": "WARNING: Auto-fix capabilities are DANGEROUS and disabled by default!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:917"
      ]
    },
    "WARNING: Could not load auth service configuration:": {
      "value": "WARNING: Could not load auth service configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:193"
      ]
    },
    "WARNING: Could not load backend configuration:": {
      "value": "WARNING: Could not load backend configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:179"
      ]
    },
    "WARNING: Expected valid URL to pass validation": {
      "value": "WARNING: Expected valid URL to pass validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:184"
      ]
    },
    "WARNING: Fix the issues above before deploying to staging.": {
      "value": "WARNING: Fix the issues above before deploying to staging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:127"
      ]
    },
    "WARNING: Found": {
      "value": "WARNING: Found",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "WARNING: Found naming conflicts in": {
      "value": "WARNING: Found naming conflicts in",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:239"
      ]
    },
    "WARNING: New file": {
      "value": "WARNING: New file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:838"
      ]
    },
    "WARNING: Reload message not found in logs": {
      "value": "WARNING: Reload message not found in logs",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:86"
      ]
    },
    "WARNING: Socket path does not exist:": {
      "value": "WARNING: Socket path does not exist:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:246"
      ]
    },
    "WARNING: Some tests failed. Please review the issues above.": {
      "value": "WARNING: Some tests failed. Please review the issues above.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:253"
      ]
    },
    "WARNING: Some tests failed. Review the issues above before deployment.": {
      "value": "WARNING: Some tests failed. Review the issues above before deployment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:117"
      ]
    },
    "WARNINGS (": {
      "value": "WARNINGS (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:296"
      ]
    },
    "WARNINGS (service can still start):": {
      "value": "WARNINGS (service can still start):",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:62"
      ]
    },
    "WARNINGS:": {
      "value": "WARNINGS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:56"
      ]
    },
    "WATCHFILES_FORCE_POLLING": {
      "value": "WATCHFILES_FORCE_POLLING",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:131",
        "scripts/test_docker_config.py:131"
      ]
    },
    "WATCHPACK_POLLING": {
      "value": "WATCHPACK_POLLING",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:139",
        "scripts/test_docker_config.py:139"
      ]
    },
    "WEBSOCKET": {
      "value": "WEBSOCKET",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:114",
        "scripts/test_chat_errors.py:115"
      ]
    },
    "WEBSOCKET DEV MODE FUNCTIONAL TEST REPORT": {
      "value": "WEBSOCKET DEV MODE FUNCTIONAL TEST REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:289"
      ]
    },
    "WEBSOCKET EVENT ANALYSIS": {
      "value": "WEBSOCKET EVENT ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:389"
      ]
    },
    "WEBSOCKET EVENT VALIDATION": {
      "value": "WEBSOCKET EVENT VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:299"
      ]
    },
    "WEBSOCKET INJECTION FIX - COMPLETE VALIDATION SUMMARY": {
      "value": "WEBSOCKET INJECTION FIX - COMPLETE VALIDATION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:642"
      ]
    },
    "WEBSOCKET MIGRATION TEST SUMMARY": {
      "value": "WEBSOCKET MIGRATION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:199"
      ]
    },
    "WEBSOCKET_AUTH_BYPASS": {
      "value": "WEBSOCKET_AUTH_BYPASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:41",
        "scripts/test_docker_websocket_fix.py:212"
      ]
    },
    "WEBSOCKET_AUTH_BYPASS: true": {
      "value": "WEBSOCKET_AUTH_BYPASS: true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:160"
      ]
    },
    "WEBSOCKET_AUTH_BYPASS=true": {
      "value": "WEBSOCKET_AUTH_BYPASS=true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:175"
      ]
    },
    "WEBSOCKET_URL": {
      "value": "WEBSOCKET_URL",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:156"
      ]
    },
    "WORKING": {
      "value": "WORKING",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:269"
      ]
    },
    "WS_BASE_URL": {
      "value": "WS_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:33"
      ]
    },
    "Wait for all services to be healthy.": {
      "value": "Wait for all services to be healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:144"
      ]
    },
    "Wait for all services to be ready.": {
      "value": "Wait for all services to be ready.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:58"
      ]
    },
    "Wait for services to be available": {
      "value": "Wait for services to be available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:57"
      ]
    },
    "Wait for services to be healthy": {
      "value": "Wait for services to be healthy",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:201"
      ]
    },
    "Waiting 2 seconds before next iteration...": {
      "value": "Waiting 2 seconds before next iteration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:187"
      ]
    },
    "Waiting 30 seconds before next test run...": {
      "value": "Waiting 30 seconds before next test run...",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:359"
      ]
    },
    "Waiting for ClickHouse (attempt": {
      "value": "Waiting for ClickHouse (attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:104"
      ]
    },
    "Waiting for Docker services to be healthy...": {
      "value": "Waiting for Docker services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:200"
      ]
    },
    "Waiting for PostgreSQL (attempt": {
      "value": "Waiting for PostgreSQL (attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:74"
      ]
    },
    "Waiting for Redis (attempt": {
      "value": "Waiting for Redis (attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:89"
      ]
    },
    "Waiting for services to be available...": {
      "value": "Waiting for services to be available...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:99"
      ]
    },
    "Waiting for services to be healthy...": {
      "value": "Waiting for services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:124"
      ]
    },
    "Waiting for services to be ready...": {
      "value": "Waiting for services to be ready...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:114",
        "scripts/test_seed_data.py:59"
      ]
    },
    "Waiting... (": {
      "value": "Waiting... (",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:144"
      ]
    },
    "Warning 1": {
      "value": "Warning 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:466"
      ]
    },
    "Warning 2": {
      "value": "Warning 2",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:466"
      ]
    },
    "Warning 3": {
      "value": "Warning 3",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:466"
      ]
    },
    "Warning:": {
      "value": "Warning:",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:25"
      ]
    },
    "Warning: Could not find LLMTestModel enum definition": {
      "value": "Warning: Could not find LLMTestModel enum definition",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:102"
      ]
    },
    "Warning: Could not load failed tests cache:": {
      "value": "Warning: Could not load failed tests cache:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:53"
      ]
    },
    "Warning: Could not save failed tests cache:": {
      "value": "Warning: Could not save failed tests cache:",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:64"
      ]
    },
    "Warning: Expected model": {
      "value": "Warning: Expected model",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:117"
      ]
    },
    "Warning: File not found:": {
      "value": "Warning: File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:138"
      ]
    },
    "Warning: Known failing file not found:": {
      "value": "Warning: Known failing file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:258"
      ]
    },
    "Warning: LLMTestModel enum file not found at": {
      "value": "Warning: LLMTestModel enum file not found at",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:91"
      ]
    },
    "Warning: Services may not be fully ready": {
      "value": "Warning: Services may not be fully ready",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:146"
      ]
    },
    "Warning: python-dotenv not installed, using default test environment": {
      "value": "Warning: python-dotenv not installed, using default test environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:77"
      ]
    },
    "Warnings:": {
      "value": "Warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:734",
        "scripts/test_secret_manager_debug.py:71",
        "scripts/test_service_startup_with_missing_optionals.py:52",
        "scripts/test_staging_websocket_comprehensive.py:323"
      ]
    },
    "We use RAG to synthesize information from many source documents. Searches and LLM calls are getting expensive. How can we optimize recall-quality trade-off?": {
      "value": "We use RAG to synthesize information from many source documents. Searches and LLM calls are getting expensive. How can we optimize recall-quality trade-off?",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:24"
      ]
    },
    "We're expanding our medical LLM across 5 new specialties with <500ms inference latency at 100 concurrent requests": {
      "value": "We're expanding our medical LLM across 5 new specialties with <500ms inference latency at 100 concurrent requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:27"
      ]
    },
    "We're using LLMs for customer service with about 5000 daily requests. Response times feel slow. Need to reduce costs but maintain quality. What optimizations do you recommend?": {
      "value": "We're using LLMs for customer service with about 5000 daily requests. Response times feel slow. Need to reduce costs but maintain quality. What optimizations do you recommend?",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:97"
      ]
    },
    "We're using LLMs for customer service with about 5000 daily requests. Response times feel slow. Need to reduce costs.": {
      "value": "We're using LLMs for customer service with about 5000 daily requests. Response times feel slow. Need to reduce costs.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:324",
        "scripts/test_adaptive_workflow_direct.py:169"
      ]
    },
    "Weak Password": {
      "value": "Weak Password",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:79"
      ]
    },
    "WebSocket": {
      "value": "WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:71",
        "scripts/test_staging_deployment.py:173",
        "scripts/test_staging_login_automated.py:183"
      ]
    },
    "WebSocket Async Serialization Blocking Analysis": {
      "value": "WebSocket Async Serialization Blocking Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:318"
      ]
    },
    "WebSocket Async Serialization Blocking Demonstration": {
      "value": "WebSocket Async Serialization Blocking Demonstration",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:231"
      ]
    },
    "WebSocket Async Serialization Direct Test": {
      "value": "WebSocket Async Serialization Direct Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:232"
      ]
    },
    "WebSocket Connection": {
      "value": "WebSocket Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:149",
        "scripts/test_staging_env.py:149"
      ]
    },
    "WebSocket JWT test failed:": {
      "value": "WebSocket JWT test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:161"
      ]
    },
    "WebSocket Load Simulation": {
      "value": "WebSocket Load Simulation",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:172"
      ]
    },
    "WebSocket Notifier": {
      "value": "WebSocket Notifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:426",
        "scripts/test_websocket_chat_standalone.py:411"
      ]
    },
    "WebSocket Real JWT Authentication": {
      "value": "WebSocket Real JWT Authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:133"
      ]
    },
    "WebSocket Serialization Blocking Analysis": {
      "value": "WebSocket Serialization Blocking Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:224"
      ]
    },
    "WebSocket Test": {
      "value": "WebSocket Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:42"
      ]
    },
    "WebSocket URL not found": {
      "value": "WebSocket URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:268",
        "scripts/test_cold_start_e2e.py:377"
      ]
    },
    "WebSocket auth failed:": {
      "value": "WebSocket auth failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:302"
      ]
    },
    "WebSocket auth properly rejected invalid token - GOOD!": {
      "value": "WebSocket auth properly rejected invalid token - GOOD!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:218"
      ]
    },
    "WebSocket closed unexpectedly:": {
      "value": "WebSocket closed unexpectedly:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:223"
      ]
    },
    "WebSocket config endpoint test PASSED": {
      "value": "WebSocket config endpoint test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:98"
      ]
    },
    "WebSocket config retrieved:": {
      "value": "WebSocket config retrieved:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:46"
      ]
    },
    "WebSocket connected successfully": {
      "value": "WebSocket connected successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:189"
      ]
    },
    "WebSocket connection successful": {
      "value": "WebSocket connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:95"
      ]
    },
    "WebSocket connection tests failed (services may not be running):": {
      "value": "WebSocket connection tests failed (services may not be running):",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:251"
      ]
    },
    "WebSocket core imports successful": {
      "value": "WebSocket core imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:62"
      ]
    },
    "WebSocket endpoint": {
      "value": "WebSocket endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:129",
        "scripts/test_agent_recovery_simple.py:131"
      ]
    },
    "WebSocket endpoint not detected (may require authentication)": {
      "value": "WebSocket endpoint not detected (may require authentication)",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:113"
      ]
    },
    "WebSocket endpoint to test (default: /ws)": {
      "value": "WebSocket endpoint to test (default: /ws)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:433"
      ]
    },
    "WebSocket event validation failed": {
      "value": "WebSocket event validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:183"
      ]
    },
    "WebSocket events": {
      "value": "WebSocket events",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:387",
        "scripts/test_websocket_chat_standalone.py:372"
      ]
    },
    "WebSocket events:": {
      "value": "WebSocket events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:166"
      ]
    },
    "WebSocket health endpoint test PASSED": {
      "value": "WebSocket health endpoint test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:128"
      ]
    },
    "WebSocket implementation is working correctly in DEV MODE!": {
      "value": "WebSocket implementation is working correctly in DEV MODE!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:311"
      ]
    },
    "WebSocket infrastructure is ready for production use.": {
      "value": "WebSocket infrastructure is ready for production use.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:328"
      ]
    },
    "WebSocket integration not working": {
      "value": "WebSocket integration not working",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:197"
      ]
    },
    "WebSocket integration partially working": {
      "value": "WebSocket integration partially working",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:193"
      ]
    },
    "WebSocket is closed": {
      "value": "WebSocket is closed",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:42"
      ]
    },
    "WebSocket manager not set": {
      "value": "WebSocket manager not set",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:50"
      ]
    },
    "WebSocket message:": {
      "value": "WebSocket message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:28",
        "scripts/test_standalone_websocket.py:39"
      ]
    },
    "WebSocket received:": {
      "value": "WebSocket received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:51",
        "scripts/test_websocket_standalone.py:64"
      ]
    },
    "WebSocket test FAILED!": {
      "value": "WebSocket test FAILED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:125"
      ]
    },
    "WebSocket test PASSED!": {
      "value": "WebSocket test PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:123"
      ]
    },
    "WebSocket test failed:": {
      "value": "WebSocket test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:306",
        "scripts/test_staging_env.py:99",
        "scripts/test_websocket_dev_mode.py:232"
      ]
    },
    "WebSocket-related tests": {
      "value": "WebSocket-related tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:87"
      ]
    },
    "WebSocket/DependencyInjection": {
      "value": "WebSocket/DependencyInjection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:90"
      ]
    },
    "WebSocket:": {
      "value": "WebSocket:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:533"
      ]
    },
    "WebSocketTester/1.0": {
      "value": "WebSocketTester/1.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:104"
      ]
    },
    "Welcome message:": {
      "value": "Welcome message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:67"
      ]
    },
    "What is the system status?": {
      "value": "What is the system status?",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:105",
        "scripts/test_websocket_chat_simple.py:346",
        "scripts/test_websocket_chat_standalone.py:338"
      ]
    },
    "When SecretManagerBuilder is implemented, this test will pass completely": {
      "value": "When SecretManagerBuilder is implemented, this test will pass completely",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:841"
      ]
    },
    "Windows Process Cleanup Test": {
      "value": "Windows Process Cleanup Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:54"
      ]
    },
    "With CORS origin header only": {
      "value": "With CORS origin header only",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:31"
      ]
    },
    "With dev token in subprotocol": {
      "value": "With dev token in subprotocol",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:39"
      ]
    },
    "Worker Utilization:": {
      "value": "Worker Utilization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:353"
      ]
    },
    "Workflow Status Verification Script - Corrected Test Suite": {
      "value": "Workflow Status Verification Script - Corrected Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:178"
      ]
    },
    "Working directory:": {
      "value": "Working directory:",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:88"
      ]
    },
    "Workload Analysis": {
      "value": "Workload Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:64"
      ]
    },
    "Workload Simulator\n\nThis module generates realistic workload patterns with seasonality and business logic.": {
      "value": "Workload Simulator\n\nThis module generates realistic workload patterns with seasonality and business logic.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:1"
      ]
    },
    "Workload optimized. Performance improved by 25%.": {
      "value": "Workload optimized. Performance improved by 25%.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:216"
      ]
    },
    "WorkloadSimulator": {
      "value": "WorkloadSimulator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:86"
      ]
    },
    "Would add to": {
      "value": "Would add to",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:221"
      ]
    },
    "Would split": {
      "value": "Would split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:830"
      ]
    },
    "Would you like to create this account? (y/n):": {
      "value": "Would you like to create this account? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:161"
      ]
    },
    "Writing tests to disk...": {
      "value": "Writing tests to disk...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:530"
      ]
    },
    "WrongPassword123!": {
      "value": "WrongPassword123!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:247",
        "scripts/test_signup_flow_manual.py:159"
      ]
    },
    "X-API-Key": {
      "value": "X-API-Key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:191",
        "scripts/test_staging_login_automated.py:139"
      ]
    },
    "X-Content-Type-Options": {
      "value": "X-Content-Type-Options",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:593"
      ]
    },
    "X-Frame-Options": {
      "value": "X-Frame-Options",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:594"
      ]
    },
    "X-Mock-User": {
      "value": "X-Mock-User",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:75"
      ]
    },
    "X-RateLimit-Limit": {
      "value": "X-RateLimit-Limit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:239"
      ]
    },
    "X-RateLimit-Remaining": {
      "value": "X-RateLimit-Remaining",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:240",
        "auth_service/tests/utils/assertion_helpers.py:243"
      ]
    },
    "X-RateLimit-Reset": {
      "value": "X-RateLimit-Reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:241"
      ]
    },
    "X-Response-Time": {
      "value": "X-Response-Time",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:88"
      ]
    },
    "X-Service-ID": {
      "value": "X-Service-ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:115",
        "scripts/test_auth_service_integration_fix.py:96",
        "scripts/test_staging_jwt_validation.py:117"
      ]
    },
    "X-Service-ID:": {
      "value": "X-Service-ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:96"
      ]
    },
    "X-Service-Secret": {
      "value": "X-Service-Secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:116",
        "scripts/test_auth_service_integration_fix.py:97"
      ]
    },
    "X-Service-Secret:": {
      "value": "X-Service-Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:97"
      ]
    },
    "X-Test-Mode": {
      "value": "X-Test-Mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:76"
      ]
    },
    "YES": {
      "value": "YES",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:179",
        "scripts/test_improved_environment_validation.py:242",
        "scripts/test_service_startup_with_missing_optionals.py:91",
        "scripts/test_service_startup_with_missing_optionals.py:92",
        "scripts/test_service_startup_with_missing_optionals.py:93",
        "scripts/test_service_startup_with_missing_optionals.py:188",
        "scripts/test_verify_workflow_status_corrected.py:49",
        "scripts/test_websocket_injection_fix_complete.py:646"
      ]
    },
    "YES I UNDERSTAND THE RISKS": {
      "value": "YES I UNDERSTAND THE RISKS",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:957"
      ]
    },
    "Yes": {
      "value": "Yes",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:153",
        "scripts/test_async_serialization_direct.py:132",
        "scripts/test_dashboard.py:169"
      ]
    },
    "You are a helpful customer support assistant.": {
      "value": "You are a helpful customer support assistant.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:200"
      ]
    },
    "You are a sales assistant.": {
      "value": "You are a sales assistant.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:216"
      ]
    },
    "You are an expert code reviewer.": {
      "value": "You are an expert code reviewer.",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:208"
      ]
    },
    "You can disable auth: export AUTH_SERVICE_ENABLED=false": {
      "value": "You can disable auth: export AUTH_SERVICE_ENABLED=false",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:207"
      ]
    },
    "You can start it with: npm run dev (in the frontend directory)": {
      "value": "You can start it with: npm run dev (in the frontend directory)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:262"
      ]
    },
    "You can update ga4_config.json with:": {
      "value": "You can update ga4_config.json with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:88"
      ]
    },
    "Z": {
      "value": "Z",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:127",
        "auth_service/tests/utils/assertion_helpers.py:129"
      ]
    },
    "Zero message loss during normal operation:": {
      "value": "Zero message loss during normal operation:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:320"
      ]
    },
    "ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg=": {
      "value": "ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg=",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:35",
        "scripts/test/test_clickhouse_staging_fix.py:75",
        "scripts/test/test_clickhouse_staging_fix.py:126"
      ]
    },
    "ZmVybmV0LXRlc3Qta2V5LXBsYWNlaG9sZGVyLTEyMw==": {
      "value": "ZmVybmV0LXRlc3Qta2V5LXBsYWNlaG9sZGVyLTEyMw==",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:57",
        "scripts/test_staging_config.py:138"
      ]
    },
    "[": {
      "value": "[",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:391",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166",
        "scripts/comprehensive_test_fixer.py:304",
        "scripts/staging_comprehensive_test.py:71",
        "scripts/standardize_l3_test_names.py:273",
        "scripts/test/test_docker_stability.py:74",
        "scripts/test/test_docker_stability.py:91",
        "scripts/test_agent_pipeline_simple.py:86",
        "scripts/test_chat_errors.py:10"
      ]
    },
    "[!] Action Required: Fix violations to improve test quality": {
      "value": "[!] Action Required: Fix violations to improve test quality",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:192"
      ]
    },
    "[\"\\']([^\"\\']+)[\"\\']": {
      "value": "[\"\\']([^\"\\']+)[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:94"
      ]
    },
    "[\"\\']run_id[\"\\']\\s*:\\s*[\"\\']test-run[\"\\']": {
      "value": "[\"\\']run_id[\"\\']\\s*:\\s*[\"\\']test-run[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:29"
      ]
    },
    "[+] CORS validation implemented": {
      "value": "[+] CORS validation implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:320"
      ]
    },
    "[+] Configuration and health endpoints working": {
      "value": "[+] Configuration and health endpoints working",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:319"
      ]
    },
    "[+] Connection management working": {
      "value": "[+] Connection management working",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:322"
      ]
    },
    "[+] JWT authentication enforced": {
      "value": "[+] JWT authentication enforced",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:321"
      ]
    },
    "[+] Message processing implemented": {
      "value": "[+] Message processing implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:323"
      ]
    },
    "[+] Resource cleanup functioning": {
      "value": "[+] Resource cleanup functioning",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:324"
      ]
    },
    "[+] Secure WebSocket endpoints registered": {
      "value": "[+] Secure WebSocket endpoints registered",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:318"
      ]
    },
    "[--]": {
      "value": "[--]",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:157"
      ]
    },
    "[/cyan]": {
      "value": "[/cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:60",
        "scripts/test_oauth_local.py:310",
        "scripts/test_oauth_local.py:438",
        "scripts/test_oauth_local.py:439"
      ]
    },
    "[/green]": {
      "value": "[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:46",
        "scripts/test_oauth_local.py:463"
      ]
    },
    "[/red]": {
      "value": "[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:53",
        "scripts/test_oauth_local.py:117",
        "scripts/test_oauth_local.py:132",
        "scripts/test_oauth_local.py:466"
      ]
    },
    "[1] Testing Service Availability Checker...": {
      "value": "[1] Testing Service Availability Checker...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:149"
      ]
    },
    "[2] Testing E2E Environment Validator...": {
      "value": "[2] Testing E2E Environment Validator...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:153"
      ]
    },
    "[AUDIT] Starting Test Collection Audit...": {
      "value": "[AUDIT] Starting Test Collection Audit...",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:70"
      ]
    },
    "[AUTO-FIX] Applying automatic improvements...": {
      "value": "[AUTO-FIX] Applying automatic improvements...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:63",
        "scripts/autonomous_review/test_reviewer.py:274"
      ]
    },
    "[CANCEL] Test execution cancelled by user": {
      "value": "[CANCEL] Test execution cancelled by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:280"
      ]
    },
    "[CLEANUP] Cleaned up WebSocket connection": {
      "value": "[CLEANUP] Cleaned up WebSocket connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:241"
      ]
    },
    "[CLEANUP] Cleaned up resources": {
      "value": "[CLEANUP] Cleaned up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:405"
      ]
    },
    "[COMPLETE] SQLAlchemy 2.0 Migration: ALL TESTS PASSED!": {
      "value": "[COMPLETE] SQLAlchemy 2.0 Migration: ALL TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:73"
      ]
    },
    "[CONN] Connected user": {
      "value": "[CONN] Connected user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:184",
        "scripts/test_websocket_chat_simple.py:293"
      ]
    },
    "[CONTENT] Contains '": {
      "value": "[CONTENT] Contains '",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "[COVERAGE] Analyzing test coverage...": {
      "value": "[COVERAGE] Analyzing test coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:46"
      ]
    },
    "[CRASH] Test suite crashed:": {
      "value": "[CRASH] Test suite crashed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:356"
      ]
    },
    "[CRITICAL]": {
      "value": "[CRITICAL]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[CRITICAL] Configuration Status:": {
      "value": "[CRITICAL] Configuration Status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:71",
        "scripts/test_staging_config.py:92"
      ]
    },
    "[CRITICAL] Majority of test files violate limits. Consider systematic refactoring.": {
      "value": "[CRITICAL] Majority of test files violate limits. Consider systematic refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:56"
      ]
    },
    "[Complete] Coverage System Test Complete!": {
      "value": "[Complete] Coverage System Test Complete!",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:102"
      ]
    },
    "[Coverage Test] Testing Coverage System...": {
      "value": "[Coverage Test] Testing Coverage System...",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:17"
      ]
    },
    "[Coverage] Coverage Report: reports/coverage/html/index.html": {
      "value": "[Coverage] Coverage Report: reports/coverage/html/index.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:423"
      ]
    },
    "[Coverage] Total Coverage:": {
      "value": "[Coverage] Total Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:416"
      ]
    },
    "[DEBUG] Complete flow capture called with:": {
      "value": "[DEBUG] Complete flow capture called with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:273"
      ]
    },
    "[DEBUG] Full error details:": {
      "value": "[DEBUG] Full error details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:135",
        "scripts/test_staging_config.py:152"
      ]
    },
    "[DEBUG] Mock WebSocket capture called with:": {
      "value": "[DEBUG] Mock WebSocket capture called with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:169"
      ]
    },
    "[DEBUG] Notifier has websocket_manager:": {
      "value": "[DEBUG] Notifier has websocket_manager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:204"
      ]
    },
    "[DEBUG] WebSocket manager has connections:": {
      "value": "[DEBUG] WebSocket manager has connections:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:205"
      ]
    },
    "[DEFAULT]": {
      "value": "[DEFAULT]",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:716"
      ]
    },
    "[DEPRECATION WARNING] This script is deprecated!": {
      "value": "[DEPRECATION WARNING] This script is deprecated!",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:20",
        "scripts/test_frontend.py:20"
      ]
    },
    "[DEV-DOCKER] Warning: Could not discover ports:": {
      "value": "[DEV-DOCKER] Warning: Could not discover ports:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:154"
      ]
    },
    "[DIR]": {
      "value": "[DIR]",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:143"
      ]
    },
    "[DONE] Created test infrastructure improvements": {
      "value": "[DONE] Created test infrastructure improvements",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:127"
      ]
    },
    "[DONE] Enhanced first-time user critical path validation": {
      "value": "[DONE] Enhanced first-time user critical path validation",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:124"
      ]
    },
    "[DONE] Ensured E2E health checks are working": {
      "value": "[DONE] Ensured E2E health checks are working",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:126"
      ]
    },
    "[DONE] Fixed Redis connection issues for Python 3.12 compatibility": {
      "value": "[DONE] Fixed Redis connection issues for Python 3.12 compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:119"
      ]
    },
    "[DONE] Fixed circuit breaker and migration handling tests": {
      "value": "[DONE] Fixed circuit breaker and migration handling tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:122"
      ]
    },
    "[DONE] Generated comprehensive test status reporting": {
      "value": "[DONE] Generated comprehensive test status reporting",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:128"
      ]
    },
    "[DONE] Implemented proper mocking for database-dependent tests": {
      "value": "[DONE] Implemented proper mocking for database-dependent tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:121"
      ]
    },
    "[DONE] Improved test isolation and reduced dependencies": {
      "value": "[DONE] Improved test isolation and reduced dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:123"
      ]
    },
    "[DONE] Resolved alembic version state recovery problems": {
      "value": "[DONE] Resolved alembic version state recovery problems",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:120"
      ]
    },
    "[DONE] Stabilized auth service configuration tests": {
      "value": "[DONE] Stabilized auth service configuration tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:125"
      ]
    },
    "[DRY RUN]": {
      "value": "[DRY RUN]",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:129"
      ]
    },
    "[DRY RUN] No changes were made. Run without --dry-run to apply changes.": {
      "value": "[DRY RUN] No changes were made. Run without --dry-run to apply changes.",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:377"
      ]
    },
    "[DRY RUN] Would rename to:": {
      "value": "[DRY RUN] Would rename to:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:178"
      ]
    },
    "[Direct API Access Test]": {
      "value": "[Direct API Access Test]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:118"
      ]
    },
    "[ERROR]": {
      "value": "[ERROR]",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:202",
        "scripts/manage_test_services.py:102",
        "scripts/manage_test_services.py:223",
        "scripts/simple_test_fix_loop.py:78",
        "scripts/test_auth_client_debug.py:92",
        "scripts/test_auth_client_debug.py:103",
        "scripts/test_auth_client_debug.py:131",
        "scripts/test_backend_auth_config.py:40",
        "scripts/test_backend_auth_config.py:60",
        "scripts/test_backend_auth_config.py:92"
      ]
    },
    "[ERROR] Auth database connection failed": {
      "value": "[ERROR] Auth database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:82"
      ]
    },
    "[ERROR] Auth database test failed:": {
      "value": "[ERROR] Auth database test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:103"
      ]
    },
    "[ERROR] Backend database connection failed": {
      "value": "[ERROR] Backend database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:39"
      ]
    },
    "[ERROR] Backend database test failed:": {
      "value": "[ERROR] Backend database test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:60"
      ]
    },
    "[ERROR] Backend is not healthy. Skipping WebSocket tests.": {
      "value": "[ERROR] Backend is not healthy. Skipping WebSocket tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:180"
      ]
    },
    "[ERROR] Backend unhealthy:": {
      "value": "[ERROR] Backend unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:159"
      ]
    },
    "[ERROR] Basic query execution failed": {
      "value": "[ERROR] Basic query execution failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:46"
      ]
    },
    "[ERROR] CRITICAL ERROR DURING TESTING:": {
      "value": "[ERROR] CRITICAL ERROR DURING TESTING:",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:524"
      ]
    },
    "[ERROR] Config error:": {
      "value": "[ERROR] Config error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:41"
      ]
    },
    "[ERROR] Configuration loading failed:": {
      "value": "[ERROR] Configuration loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:134",
        "scripts/test_staging_config.py:151"
      ]
    },
    "[ERROR] Connection closed:": {
      "value": "[ERROR] Connection closed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:125"
      ]
    },
    "[ERROR] Connection failed:": {
      "value": "[ERROR] Connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:58"
      ]
    },
    "[ERROR] Could not validate token with any known secrets": {
      "value": "[ERROR] Could not validate token with any known secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:114"
      ]
    },
    "[ERROR] Database Session Manager error:": {
      "value": "[ERROR] Database Session Manager error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:61"
      ]
    },
    "[ERROR] Database connection failed": {
      "value": "[ERROR] Database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:30"
      ]
    },
    "[ERROR] Dev-minimal configuration: SOME CHECKS FAILED": {
      "value": "[ERROR] Dev-minimal configuration: SOME CHECKS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:173"
      ]
    },
    "[ERROR] Error:": {
      "value": "[ERROR] Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:60",
        "scripts/test_websocket_cors_comprehensive.py:129"
      ]
    },
    "[ERROR] Errors:": {
      "value": "[ERROR] Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:126"
      ]
    },
    "[ERROR] Failed": {
      "value": "[ERROR] Failed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:142",
        "scripts/fix_authentication_test_tokens.py:146"
      ]
    },
    "[ERROR] Failed to decode JWT payload:": {
      "value": "[ERROR] Failed to decode JWT payload:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:52"
      ]
    },
    "[ERROR] Failed to run frontend tests:": {
      "value": "[ERROR] Failed to run frontend tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:44",
        "scripts/test_frontend_simple.py:66"
      ]
    },
    "[ERROR] Failed to run tests:": {
      "value": "[ERROR] Failed to run tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:70"
      ]
    },
    "[ERROR] Failed to start test services:": {
      "value": "[ERROR] Failed to start test services:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:72"
      ]
    },
    "[ERROR] Failed to stop test services:": {
      "value": "[ERROR] Failed to stop test services:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:89"
      ]
    },
    "[ERROR] File not found:": {
      "value": "[ERROR] File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:95"
      ]
    },
    "[ERROR] Found": {
      "value": "[ERROR] Found",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:164"
      ]
    },
    "[ERROR] Frontend tests timed out after 30 seconds": {
      "value": "[ERROR] Frontend tests timed out after 30 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:41"
      ]
    },
    "[ERROR] HTTP Error:": {
      "value": "[ERROR] HTTP Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:121"
      ]
    },
    "[ERROR] Health check failed:": {
      "value": "[ERROR] Health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:165"
      ]
    },
    "[ERROR] Health check timed out after 30s": {
      "value": "[ERROR] Health check timed out after 30s",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:162"
      ]
    },
    "[ERROR] Iteration": {
      "value": "[ERROR] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:96"
      ]
    },
    "[ERROR] LLM Manager error:": {
      "value": "[ERROR] LLM Manager error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:51"
      ]
    },
    "[ERROR] LLMTestModel enum contains deprecated models": {
      "value": "[ERROR] LLMTestModel enum contains deprecated models",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:161"
      ]
    },
    "[ERROR] Migration test failed:": {
      "value": "[ERROR] Migration test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:77"
      ]
    },
    "[ERROR] Missing": {
      "value": "[ERROR] Missing",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:130",
        "scripts/fix_authentication_test_tokens.py:135"
      ]
    },
    "[ERROR] Missing required package:": {
      "value": "[ERROR] Missing required package:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:367"
      ]
    },
    "[ERROR] PostgreSQL not available:": {
      "value": "[ERROR] PostgreSQL not available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:158"
      ]
    },
    "[ERROR] Request failed:": {
      "value": "[ERROR] Request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:47",
        "scripts/test_staging_refresh_format.py:71",
        "scripts/test_staging_refresh_format.py:93",
        "scripts/test_staging_refresh_format.py:120",
        "scripts/test_staging_refresh_format.py:143"
      ]
    },
    "[ERROR] SOME TESTS FAILED - Critical chat functionality may be broken!": {
      "value": "[ERROR] SOME TESTS FAILED - Critical chat functionality may be broken!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:455"
      ]
    },
    "[ERROR] Scanning": {
      "value": "[ERROR] Scanning",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:93"
      ]
    },
    "[ERROR] Supervisor error:": {
      "value": "[ERROR] Supervisor error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:123"
      ]
    },
    "[ERROR] Supervisor execution error:": {
      "value": "[ERROR] Supervisor execution error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:118"
      ]
    },
    "[ERROR] Test execution failed:": {
      "value": "[ERROR] Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:283"
      ]
    },
    "[ERROR] Too short": {
      "value": "[ERROR] Too short",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "[ERROR] Tool Dispatcher error:": {
      "value": "[ERROR] Tool Dispatcher error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:81"
      ]
    },
    "[ERROR] Unhealthy": {
      "value": "[ERROR] Unhealthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:297"
      ]
    },
    "[ERROR] WebSocket Manager error:": {
      "value": "[ERROR] WebSocket Manager error:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:71"
      ]
    },
    "[ERROR] Windows configuration: SOME CHECKS FAILED": {
      "value": "[ERROR] Windows configuration: SOME CHECKS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:149"
      ]
    },
    "[ERROR] websockets library not found. Install with: pip install websockets": {
      "value": "[ERROR] websockets library not found. Install with: pip install websockets",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:105"
      ]
    },
    "[ERR]": {
      "value": "[ERR]",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:179"
      ]
    },
    "[ERR] ERROR:": {
      "value": "[ERR] ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:32"
      ]
    },
    "[Error] .coveragerc configuration not found": {
      "value": "[Error] .coveragerc configuration not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:118"
      ]
    },
    "[Error] Error running pytest:": {
      "value": "[Error] Error running pytest:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:51"
      ]
    },
    "[Error] HTML coverage report not found": {
      "value": "[Error] HTML coverage report not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:70"
      ]
    },
    "[Error] JSON coverage report not found": {
      "value": "[Error] JSON coverage report not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:100"
      ]
    },
    "[Error] Stderr:": {
      "value": "[Error] Stderr:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:46"
      ]
    },
    "[Error] XML coverage report not found": {
      "value": "[Error] XML coverage report not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:85"
      ]
    },
    "[FAILED]": {
      "value": "[FAILED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:184",
        "scripts/test_cors_ssot_compliance.py:212"
      ]
    },
    "[FAILED] SQLAlchemy 2.0 migration needs fixes!": {
      "value": "[FAILED] SQLAlchemy 2.0 migration needs fixes!",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:87"
      ]
    },
    "[FAILED] STAGING STARTUP TESTS FAILED": {
      "value": "[FAILED] STAGING STARTUP TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:279"
      ]
    },
    "[FAILURES] Failed Tests:": {
      "value": "[FAILURES] Failed Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:304"
      ]
    },
    "[FAILURE] SOME TESTS FAILED": {
      "value": "[FAILURE] SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:216"
      ]
    },
    "[FAILURE] Some tests failed. Please check the errors above.": {
      "value": "[FAILURE] Some tests failed. Please check the errors above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:192"
      ]
    },
    "[FAIL]": {
      "value": "[FAIL]",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:188",
        "scripts/final_test_status_check.py:109",
        "scripts/test/test_supervisor_import.py:73",
        "scripts/test/test_supervisor_import.py:85",
        "scripts/test_cors_ssot_compliance.py:161",
        "scripts/test_cors_ssot_compliance.py:164",
        "scripts/test_cors_ssot_compliance.py:182",
        "scripts/test_docker_config.py:35",
        "scripts/test_docker_websocket_fix.py:265",
        "scripts/test_docker_websocket_fix.py:272"
      ]
    },
    "[FAIL] ANSI codes found in traceback!": {
      "value": "[FAIL] ANSI codes found in traceback!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:46"
      ]
    },
    "[FAIL] API call error:": {
      "value": "[FAIL] API call error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:225"
      ]
    },
    "[FAIL] API call failed: HTTP": {
      "value": "[FAIL] API call failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:220"
      ]
    },
    "[FAIL] Agent completed event not sent": {
      "value": "[FAIL] Agent completed event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:236"
      ]
    },
    "[FAIL] Agent started event not sent": {
      "value": "[FAIL] Agent started event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:223"
      ]
    },
    "[FAIL] Authentication failed: HTTP 403 Forbidden": {
      "value": "[FAIL] Authentication failed: HTTP 403 Forbidden",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:216"
      ]
    },
    "[FAIL] Backend Health Failed:": {
      "value": "[FAIL] Backend Health Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:21"
      ]
    },
    "[FAIL] Backend rejected token (401)": {
      "value": "[FAIL] Backend rejected token (401)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:155",
        "scripts/test_staging_jwt_validation.py:96"
      ]
    },
    "[FAIL] Build failed.": {
      "value": "[FAIL] Build failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:508"
      ]
    },
    "[FAIL] CHECKS FAILED with exit code": {
      "value": "[FAIL] CHECKS FAILED with exit code",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:518"
      ]
    },
    "[FAIL] CRITICAL CHAT FLOW TEST FAILED": {
      "value": "[FAIL] CRITICAL CHAT FLOW TEST FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:410"
      ]
    },
    "[FAIL] CRITICAL: No WebSocket events at all!": {
      "value": "[FAIL] CRITICAL: No WebSocket events at all!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:111"
      ]
    },
    "[FAIL] Error creating supervisor:": {
      "value": "[FAIL] Error creating supervisor:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:75"
      ]
    },
    "[FAIL] Error handling test failed:": {
      "value": "[FAIL] Error handling test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:118"
      ]
    },
    "[FAIL] Error testing OAUTH SIMULATION:": {
      "value": "[FAIL] Error testing OAUTH SIMULATION:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:278"
      ]
    },
    "[FAIL] Error testing startup_module:": {
      "value": "[FAIL] Error testing startup_module:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:46"
      ]
    },
    "[FAIL] Error:": {
      "value": "[FAIL] Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:279"
      ]
    },
    "[FAIL] FAIL": {
      "value": "[FAIL] FAIL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:370"
      ]
    },
    "[FAIL] FAILED:": {
      "value": "[FAIL] FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:26"
      ]
    },
    "[FAIL] Failed to import required modules:": {
      "value": "[FAIL] Failed to import required modules:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:94"
      ]
    },
    "[FAIL] Failed:": {
      "value": "[FAIL] Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:217"
      ]
    },
    "[FAIL] Got 422 Unprocessable Entity - field not accepted!": {
      "value": "[FAIL] Got 422 Unprocessable Entity - field not accepted!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:41",
        "scripts/test_staging_refresh_format.py:64",
        "scripts/test_staging_refresh_format.py:87"
      ]
    },
    "[FAIL] Import error:": {
      "value": "[FAIL] Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:82"
      ]
    },
    "[FAIL] Import failed:": {
      "value": "[FAIL] Import failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:18",
        "scripts/test_websocket_chat_simple.py:54",
        "scripts/test_websocket_chat_standalone.py:54"
      ]
    },
    "[FAIL] Instantiation failed:": {
      "value": "[FAIL] Instantiation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:40"
      ]
    },
    "[FAIL] Invalid JSON test failed:": {
      "value": "[FAIL] Invalid JSON test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:124"
      ]
    },
    "[FAIL] Invalid token test failed:": {
      "value": "[FAIL] Invalid token test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:130"
      ]
    },
    "[FAIL] Iteration": {
      "value": "[FAIL] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:88"
      ]
    },
    "[FAIL] Linting failed. Use --fix to auto-fix issues.": {
      "value": "[FAIL] Linting failed. Use --fix to auto-fix issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:472"
      ]
    },
    "[FAIL] Login error:": {
      "value": "[FAIL] Login error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:90"
      ]
    },
    "[FAIL] Login failed": {
      "value": "[FAIL] Login failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:101"
      ]
    },
    "[FAIL] Login failed:": {
      "value": "[FAIL] Login failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:62"
      ]
    },
    "[FAIL] Login failed: HTTP": {
      "value": "[FAIL] Login failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:84"
      ]
    },
    "[FAIL] Logout error:": {
      "value": "[FAIL] Logout error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:326"
      ]
    },
    "[FAIL] Logout failed: HTTP": {
      "value": "[FAIL] Logout failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:322"
      ]
    },
    "[FAIL] Missing": {
      "value": "[FAIL] Missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:129"
      ]
    },
    "[FAIL] Missing attribute:": {
      "value": "[FAIL] Missing attribute:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:57"
      ]
    },
    "[FAIL] Multiple formats test failed:": {
      "value": "[FAIL] Multiple formats test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:112"
      ]
    },
    "[FAIL] New token validation failed": {
      "value": "[FAIL] New token validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:272"
      ]
    },
    "[FAIL] No WebSocket events were sent! Total sent messages:": {
      "value": "[FAIL] No WebSocket events were sent! Total sent messages:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:384"
      ]
    },
    "[FAIL] No access token available": {
      "value": "[FAIL] No access token available",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:98",
        "scripts/test_staging_auth_e2e.py:196",
        "scripts/test_staging_auth_e2e.py:294"
      ]
    },
    "[FAIL] No agent start indication": {
      "value": "[FAIL] No agent start indication",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:391"
      ]
    },
    "[FAIL] No agent_started event - User won't know processing began": {
      "value": "[FAIL] No agent_started event - User won't know processing began",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:105"
      ]
    },
    "[FAIL] No completion event - User won't know when done": {
      "value": "[FAIL] No completion event - User won't know when done",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:108"
      ]
    },
    "[FAIL] No completion indication": {
      "value": "[FAIL] No completion indication",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:398"
      ]
    },
    "[FAIL] No refresh token available": {
      "value": "[FAIL] No refresh token available",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:127",
        "scripts/test_staging_auth_e2e.py:161",
        "scripts/test_staging_auth_e2e.py:233"
      ]
    },
    "[FAIL] Refresh error:": {
      "value": "[FAIL] Refresh error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:153",
        "scripts/test_staging_auth_e2e.py:188"
      ]
    },
    "[FAIL] Refresh failed: HTTP": {
      "value": "[FAIL] Refresh failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:148",
        "scripts/test_staging_auth_e2e.py:183",
        "scripts/test_staging_auth_e2e.py:275"
      ]
    },
    "[FAIL] Registration failed": {
      "value": "[FAIL] Registration failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:51"
      ]
    },
    "[FAIL] Registration failed:": {
      "value": "[FAIL] Registration failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:47"
      ]
    },
    "[FAIL] Result doesn't match expectation. Expected:": {
      "value": "[FAIL] Result doesn't match expectation. Expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:135"
      ]
    },
    "[FAIL] STAGING ENVIRONMENT CRITICAL ISSUES (": {
      "value": "[FAIL] STAGING ENVIRONMENT CRITICAL ISSUES (",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:520"
      ]
    },
    "[FAIL] Service availability test error:": {
      "value": "[FAIL] Service availability test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:137"
      ]
    },
    "[FAIL] Some critical checks failed. Please review the configuration.": {
      "value": "[FAIL] Some critical checks failed. Please review the configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:327"
      ]
    },
    "[FAIL] Supervisor execution failed:": {
      "value": "[FAIL] Supervisor execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:369"
      ]
    },
    "[FAIL] SupervisorAgent import not found in startup_module": {
      "value": "[FAIL] SupervisorAgent import not found in startup_module",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:42"
      ]
    },
    "[FAIL] SupervisorAgent is from wrong module:": {
      "value": "[FAIL] SupervisorAgent is from wrong module:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:31"
      ]
    },
    "[FAIL] System Info Failed:": {
      "value": "[FAIL] System Info Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:33"
      ]
    },
    "[FAIL] TEST FAILED:": {
      "value": "[FAIL] TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:178"
      ]
    },
    "[FAIL] TESTS FAILED with exit code": {
      "value": "[FAIL] TESTS FAILED with exit code",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:400"
      ]
    },
    "[FAIL] Test error:": {
      "value": "[FAIL] Test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:87"
      ]
    },
    "[FAIL] Test execution failed:": {
      "value": "[FAIL] Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:434"
      ]
    },
    "[FAIL] Test failed with error:": {
      "value": "[FAIL] Test failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:100"
      ]
    },
    "[FAIL] Test failed:": {
      "value": "[FAIL] Test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:98",
        "scripts/test_oauth_dev_config.py:100"
      ]
    },
    "[FAIL] Tests failed": {
      "value": "[FAIL] Tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:71"
      ]
    },
    "[FAIL] Tests failed. Found": {
      "value": "[FAIL] Tests failed. Found",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:115"
      ]
    },
    "[FAIL] Token still valid after logout!": {
      "value": "[FAIL] Token still valid after logout!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:319"
      ]
    },
    "[FAIL] Token validation failed": {
      "value": "[FAIL] Token validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:89"
      ]
    },
    "[FAIL] Token validation failed: HTTP": {
      "value": "[FAIL] Token validation failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:115"
      ]
    },
    "[FAIL] Type checking failed.": {
      "value": "[FAIL] Type checking failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:483"
      ]
    },
    "[FAIL] UNAVAILABLE": {
      "value": "[FAIL] UNAVAILABLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:54"
      ]
    },
    "[FAIL] UNEXPECTED ERROR:": {
      "value": "[FAIL] UNEXPECTED ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:181"
      ]
    },
    "[FAIL] Unavailable": {
      "value": "[FAIL] Unavailable",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:46",
        "scripts/test_service_health.py:54",
        "scripts/test_service_health.py:119"
      ]
    },
    "[FAIL] Unexpected status code": {
      "value": "[FAIL] Unexpected status code",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:100"
      ]
    },
    "[FAIL] Unexpected status code:": {
      "value": "[FAIL] Unexpected status code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:166"
      ]
    },
    "[FAIL] Unhealthy": {
      "value": "[FAIL] Unhealthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:79"
      ]
    },
    "[FAIL] Validation error:": {
      "value": "[FAIL] Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:119"
      ]
    },
    "[FAIL] Validation failed": {
      "value": "[FAIL] Validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:128",
        "scripts/test_staging_jwt_validation.py:73"
      ]
    },
    "[FAIL] Validator test failed:": {
      "value": "[FAIL] Validator test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:140"
      ]
    },
    "[FAIL] WebSocket Connection Failed:": {
      "value": "[FAIL] WebSocket Connection Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:53"
      ]
    },
    "[FAIL] WebSocket Connection:": {
      "value": "[FAIL] WebSocket Connection:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:180"
      ]
    },
    "[FAIL] WebSocket auth failed": {
      "value": "[FAIL] WebSocket auth failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:195"
      ]
    },
    "[FAIL] WebSocket notifier test FAILED": {
      "value": "[FAIL] WebSocket notifier test FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:246"
      ]
    },
    "[FATAL] Fatal error:": {
      "value": "[FATAL] Fatal error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:469"
      ]
    },
    "[FIXED]": {
      "value": "[FIXED]",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:91"
      ]
    },
    "[FIXED] Fixed and verified": {
      "value": "[FIXED] Fixed and verified",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:328"
      ]
    },
    "[FOUND]": {
      "value": "[FOUND]",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:105"
      ]
    },
    "[GAPS] Identifying test gaps...": {
      "value": "[GAPS] Identifying test gaps...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:54"
      ]
    },
    "[GOOD] Most test files comply. Address remaining violations.": {
      "value": "[GOOD] Most test files comply. Address remaining violations.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:60"
      ]
    },
    "[HEALTH] Testing HTTP Health:": {
      "value": "[HEALTH] Testing HTTP Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:148"
      ]
    },
    "[INFO] Auth service may require service authentication": {
      "value": "[INFO] Auth service may require service authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:124"
      ]
    },
    "[INFO] Cloud SQL connector not installed (optional for local dev):": {
      "value": "[INFO] Cloud SQL connector not installed (optional for local dev):",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:118"
      ]
    },
    "[INFO] Environment Variables:": {
      "value": "[INFO] Environment Variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:35"
      ]
    },
    "[INFO] Executing:": {
      "value": "[INFO] Executing:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:148"
      ]
    },
    "[INFO] Got status": {
      "value": "[INFO] Got status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:44",
        "scripts/test_staging_refresh_format.py:68",
        "scripts/test_staging_refresh_format.py:90",
        "scripts/test_staging_refresh_format.py:117",
        "scripts/test_staging_refresh_format.py:141"
      ]
    },
    "[INFO] Including ClickHouse service...": {
      "value": "[INFO] Including ClickHouse service...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:59"
      ]
    },
    "[INFO] No ENVIRONMENT set, using test values for local testing": {
      "value": "[INFO] No ENVIRONMENT set, using test values for local testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:142"
      ]
    },
    "[INFO] No frontend tests found - passing": {
      "value": "[INFO] No frontend tests found - passing",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:31"
      ]
    },
    "[INFO] No processes cleaned for port": {
      "value": "[INFO] No processes cleaned for port",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:162"
      ]
    },
    "[INFO] No services are currently running": {
      "value": "[INFO] No services are currently running",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:131"
      ]
    },
    "[INFO] No token replacements needed in": {
      "value": "[INFO] No token replacements needed in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:115"
      ]
    },
    "[INFO] Operation cancelled by user": {
      "value": "[INFO] Operation cancelled by user",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:220"
      ]
    },
    "[INFO] Running frontend tests:": {
      "value": "[INFO] Running frontend tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:50"
      ]
    },
    "[INFO] Running full staging test suite...": {
      "value": "[INFO] Running full staging test suite...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:104"
      ]
    },
    "[INFO] Running quick staging health checks...": {
      "value": "[INFO] Running quick staging health checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:101"
      ]
    },
    "[INFO] Running standard staging tests...": {
      "value": "[INFO] Running standard staging tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:107"
      ]
    },
    "[INFO] Running tests with Docker infrastructure...": {
      "value": "[INFO] Running tests with Docker infrastructure...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:135"
      ]
    },
    "[INFO] Some tests had issues, but this may be expected.": {
      "value": "[INFO] Some tests had issues, but this may be expected.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:176"
      ]
    },
    "[INFO] Starting E2E service stack...": {
      "value": "[INFO] Starting E2E service stack...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:55"
      ]
    },
    "[INFO] Starting test services...": {
      "value": "[INFO] Starting test services...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:46"
      ]
    },
    "[INFO] Stopping test services...": {
      "value": "[INFO] Stopping test services...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:77"
      ]
    },
    "[INFO] To run frontend tests, install dependencies with: cd frontend && npm install": {
      "value": "[INFO] To run frontend tests, install dependencies with: cd frontend && npm install",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:24"
      ]
    },
    "[INIT] Created agent registry with WebSocket manager": {
      "value": "[INIT] Created agent registry with WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:320"
      ]
    },
    "[INIT] Created execution engine": {
      "value": "[INIT] Created execution engine",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:333"
      ]
    },
    "[INIT] Created mock LLM manager": {
      "value": "[INIT] Created mock LLM manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:305"
      ]
    },
    "[INIT] Created supervisor agent": {
      "value": "[INIT] Created supervisor agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:343"
      ]
    },
    "[INIT] Execution context created": {
      "value": "[INIT] Execution context created",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:200"
      ]
    },
    "[INIT] Registered default agents": {
      "value": "[INIT] Registered default agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:329"
      ]
    },
    "[INIT] Registered test tool": {
      "value": "[INIT] Registered test tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:315"
      ]
    },
    "[INIT] WebSocket notifier created": {
      "value": "[INIT] WebSocket notifier created",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:188"
      ]
    },
    "[INTERRUPTED] Test run cancelled by user": {
      "value": "[INTERRUPTED] Test run cancelled by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:67"
      ]
    },
    "[INTERRUPT] Test interrupted by user": {
      "value": "[INTERRUPT] Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:353"
      ]
    },
    "[INTERRUPT] Tests interrupted by user": {
      "value": "[INTERRUPT] Tests interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:466"
      ]
    },
    "[ISSUE]": {
      "value": "[ISSUE]",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:482"
      ]
    },
    "[ISSUE] UNHEALTHY": {
      "value": "[ISSUE] UNHEALTHY",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:54"
      ]
    },
    "[LIVE MODE - Testing real connections]": {
      "value": "[LIVE MODE - Testing real connections]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:234"
      ]
    },
    "[LLM CALL] First 200 chars:": {
      "value": "[LLM CALL] First 200 chars:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:99"
      ]
    },
    "[LLM CALL] Prompt length:": {
      "value": "[LLM CALL] Prompt length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:98"
      ]
    },
    "[MAIN] Simple WebSocket Connection Test": {
      "value": "[MAIN] Simple WebSocket Connection Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:64"
      ]
    },
    "[MAIN] WebSocket CORS Comprehensive Test Suite": {
      "value": "[MAIN] WebSocket CORS Comprehensive Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:319"
      ]
    },
    "[MAJOR]": {
      "value": "[MAJOR]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[MINOR]": {
      "value": "[MINOR]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[MISSING]": {
      "value": "[MISSING]",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:350",
        "scripts/test_frontend_ORIGINAL.py:453"
      ]
    },
    "[MSG] WebSocket captured:": {
      "value": "[MSG] WebSocket captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:283"
      ]
    },
    "[MSG] WebSocket message captured:": {
      "value": "[MSG] WebSocket message captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:175"
      ]
    },
    "[Mock Login Test]": {
      "value": "[Mock Login Test]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:50"
      ]
    },
    "[NOT SET]": {
      "value": "[NOT SET]",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:35",
        "scripts/test_auth_service_integration_fix.py:38",
        "scripts/test_auth_service_integration_fix.py:96",
        "scripts/test_auth_service_integration_fix.py:97"
      ]
    },
    "[OAuth Redirect Test]": {
      "value": "[OAuth Redirect Test]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:245"
      ]
    },
    "[OK]": {
      "value": "[OK]",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:186",
        "scripts/add_pytest_markers.py:153",
        "scripts/apply_fast_test_decorators.py:177",
        "scripts/test_backend_ORIGINAL.py:350",
        "scripts/test_discovery_report.py:77",
        "scripts/test_discovery_report.py:146",
        "scripts/test_docker_websocket_fix.py:265",
        "scripts/test_docker_websocket_fix.py:272",
        "scripts/test_docker_websocket_fix.py:284",
        "scripts/test_docker_websocket_fix.py:286"
      ]
    },
    "[OK] Access token: ...": {
      "value": "[OK] Access token: ...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:79"
      ]
    },
    "[OK] Agent completed event received:": {
      "value": "[OK] Agent completed event received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:98",
        "scripts/test_websocket_chat_standalone.py:98"
      ]
    },
    "[OK] Agent start indication found": {
      "value": "[OK] Agent start indication found",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:394"
      ]
    },
    "[OK] Agent started event received:": {
      "value": "[OK] Agent started event received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:78",
        "scripts/test_websocket_chat_standalone.py:78"
      ]
    },
    "[OK] Agent thinking event received:": {
      "value": "[OK] Agent thinking event received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:82",
        "scripts/test_websocket_chat_standalone.py:82"
      ]
    },
    "[OK] All critical checks passed! WebSocket should work in Docker development environment.": {
      "value": "[OK] All critical checks passed! WebSocket should work in Docker development environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:324"
      ]
    },
    "[OK] All critical imports successful": {
      "value": "[OK] All critical imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:52",
        "scripts/test_websocket_chat_standalone.py:52"
      ]
    },
    "[OK] All dependencies resolved": {
      "value": "[OK] All dependencies resolved",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:104"
      ]
    },
    "[OK] All project tests comply with real test requirements!": {
      "value": "[OK] All project tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:310"
      ]
    },
    "[OK] All required configuration loaded": {
      "value": "[OK] All required configuration loaded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:135"
      ]
    },
    "[OK] All secrets accessible": {
      "value": "[OK] All secrets accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:169"
      ]
    },
    "[OK] All test files are compliant!": {
      "value": "[OK] All test files are compliant!",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:190"
      ]
    },
    "[OK] All test processes cleaned up": {
      "value": "[OK] All test processes cleaned up",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:116"
      ]
    },
    "[OK] All tests completed successfully!": {
      "value": "[OK] All tests completed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:65"
      ]
    },
    "[OK] All tests comply with real test requirements!": {
      "value": "[OK] All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:472"
      ]
    },
    "[OK] All validation checks passed!": {
      "value": "[OK] All validation checks passed!",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:194"
      ]
    },
    "[OK] Async test configuration already updated": {
      "value": "[OK] Async test configuration already updated",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:17"
      ]
    },
    "[OK] Auth database connection closed": {
      "value": "[OK] Auth database connection closed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:98"
      ]
    },
    "[OK] Auth database connection successful": {
      "value": "[OK] Auth database connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:80"
      ]
    },
    "[OK] Auth database initialized": {
      "value": "[OK] Auth database initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:75"
      ]
    },
    "[OK] Auth database status:": {
      "value": "[OK] Auth database status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:87"
      ]
    },
    "[OK] Auth service is healthy": {
      "value": "[OK] Auth service is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:55"
      ]
    },
    "[OK] Auth service is independent": {
      "value": "[OK] Auth service is independent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:197"
      ]
    },
    "[OK] Authenticated API call successful": {
      "value": "[OK] Authenticated API call successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:212"
      ]
    },
    "[OK] Available": {
      "value": "[OK] Available",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:46",
        "scripts/test_service_health.py:54",
        "scripts/test_service_health.py:119"
      ]
    },
    "[OK] Backend Health:": {
      "value": "[OK] Backend Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:18"
      ]
    },
    "[OK] Backend accepted token": {
      "value": "[OK] Backend accepted token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:151",
        "scripts/test_staging_jwt_validation.py:94"
      ]
    },
    "[OK] Backend database connection closed": {
      "value": "[OK] Backend database connection closed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:55"
      ]
    },
    "[OK] Backend database connection successful": {
      "value": "[OK] Backend database connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:37"
      ]
    },
    "[OK] Backend database initialized": {
      "value": "[OK] Backend database initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:32"
      ]
    },
    "[OK] Backend database status:": {
      "value": "[OK] Backend database status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:44"
      ]
    },
    "[OK] Backend healthy": {
      "value": "[OK] Backend healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:32"
      ]
    },
    "[OK] Backend healthy:": {
      "value": "[OK] Backend healthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:156"
      ]
    },
    "[OK] Backend is healthy": {
      "value": "[OK] Backend is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:41"
      ]
    },
    "[OK] CORS headers present": {
      "value": "[OK] CORS headers present",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:91"
      ]
    },
    "[OK] Cleaned": {
      "value": "[OK] Cleaned",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:160"
      ]
    },
    "[OK] Client ID loaded correctly": {
      "value": "[OK] Client ID loaded correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:91"
      ]
    },
    "[OK] Client Secret loaded correctly": {
      "value": "[OK] Client Secret loaded correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:97"
      ]
    },
    "[OK] Cloud SQL connector is available": {
      "value": "[OK] Cloud SQL connector is available",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:115"
      ]
    },
    "[OK] Completion indication found": {
      "value": "[OK] Completion indication found",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:401"
      ]
    },
    "[OK] Config endpoint not exposed (expected in staging/prod)": {
      "value": "[OK] Config endpoint not exposed (expected in staging/prod)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:58"
      ]
    },
    "[OK] Config import successful": {
      "value": "[OK] Config import successful",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:35"
      ]
    },
    "[OK] Config loaded:": {
      "value": "[OK] Config loaded:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:37"
      ]
    },
    "[OK] Connected in": {
      "value": "[OK] Connected in",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:96",
        "scripts/test_websocket_simple.py:37"
      ]
    },
    "[OK] Connected to database:": {
      "value": "[OK] Connected to database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:94"
      ]
    },
    "[OK] Container ID:": {
      "value": "[OK] Container ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:120"
      ]
    },
    "[OK] Corpus admin agent created": {
      "value": "[OK] Corpus admin agent created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:38"
      ]
    },
    "[OK] DataLayer:": {
      "value": "[OK] DataLayer:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:123"
      ]
    },
    "[OK] Database Session Manager created successfully": {
      "value": "[OK] Database Session Manager created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:59"
      ]
    },
    "[OK] Database Session Manager import successful": {
      "value": "[OK] Database Session Manager import successful",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:57"
      ]
    },
    "[OK] Deep state created": {
      "value": "[OK] Deep state created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:56"
      ]
    },
    "[OK] Endpoint accepted camelCase format!": {
      "value": "[OK] Endpoint accepted camelCase format!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:60"
      ]
    },
    "[OK] Endpoint accepted simple token format": {
      "value": "[OK] Endpoint accepted simple token format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:84"
      ]
    },
    "[OK] Endpoint accepted snake_case format": {
      "value": "[OK] Endpoint accepted snake_case format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:38"
      ]
    },
    "[OK] Exit code:": {
      "value": "[OK] Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:56"
      ]
    },
    "[OK] Fixed": {
      "value": "[OK] Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:113"
      ]
    },
    "[OK] Frontend is accessible": {
      "value": "[OK] Frontend is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:27"
      ]
    },
    "[OK] GTM Found:": {
      "value": "[OK] GTM Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:119"
      ]
    },
    "[OK] Good": {
      "value": "[OK] Good",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "[OK] Got 401 as expected": {
      "value": "[OK] Got 401 as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:78"
      ]
    },
    "[OK] Got expected 422 for empty body": {
      "value": "[OK] Got expected 422 for empty body",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:106"
      ]
    },
    "[OK] Got expected 422 for wrong field": {
      "value": "[OK] Got expected 422 for wrong field",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:133"
      ]
    },
    "[OK] Got token:": {
      "value": "[OK] Got token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:67"
      ]
    },
    "[OK] HEALTHY": {
      "value": "[OK] HEALTHY",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:49"
      ]
    },
    "[OK] Health Check:": {
      "value": "[OK] Health Check:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:130"
      ]
    },
    "[OK] Health endpoints configured": {
      "value": "[OK] Health endpoints configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:193"
      ]
    },
    "[OK] Health status retrieved:": {
      "value": "[OK] Health status retrieved:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:103"
      ]
    },
    "[OK] Healthy": {
      "value": "[OK] Healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:79",
        "scripts/test_websocket_cors_comprehensive.py:297"
      ]
    },
    "[OK] LLM Manager created successfully": {
      "value": "[OK] LLM Manager created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:49"
      ]
    },
    "[OK] LLM Manager import successful": {
      "value": "[OK] LLM Manager import successful",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:47"
      ]
    },
    "[OK] Login successful": {
      "value": "[OK] Login successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:78",
        "scripts/test_staging_auth_live.py:76"
      ]
    },
    "[OK] Logout successful": {
      "value": "[OK] Logout successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:307"
      ]
    },
    "[OK] Mock LLM manager created": {
      "value": "[OK] Mock LLM manager created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:25"
      ]
    },
    "[OK] No changes needed:": {
      "value": "[OK] No changes needed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:93"
      ]
    },
    "[OK] No deprecated model references found in test files": {
      "value": "[OK] No deprecated model references found in test files",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:177"
      ]
    },
    "[OK] No size violations found!": {
      "value": "[OK] No size violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:446"
      ]
    },
    "[OK] NoScript Tag:": {
      "value": "[OK] NoScript Tag:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:122"
      ]
    },
    "[OK] PASS": {
      "value": "[OK] PASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:370"
      ]
    },
    "[OK] Partial result event received:": {
      "value": "[OK] Partial result event received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:94",
        "scripts/test_websocket_chat_standalone.py:94"
      ]
    },
    "[OK] Port": {
      "value": "[OK] Port",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:164"
      ]
    },
    "[OK] PostgreSQL is running on localhost:": {
      "value": "[OK] PostgreSQL is running on localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:146"
      ]
    },
    "[OK] PostgreSQL version:": {
      "value": "[OK] PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:51"
      ]
    },
    "[OK] Process successfully cleaned up": {
      "value": "[OK] Process successfully cleaned up",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:101"
      ]
    },
    "[OK] Protected endpoints require authentication (expected)": {
      "value": "[OK] Protected endpoints require authentication (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:65"
      ]
    },
    "[OK] Received": {
      "value": "[OK] Received",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:387"
      ]
    },
    "[OK] Refresh token: ...": {
      "value": "[OK] Refresh token: ...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:80"
      ]
    },
    "[OK] Script Tag:": {
      "value": "[OK] Script Tag:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:121"
      ]
    },
    "[OK] Service healthy": {
      "value": "[OK] Service healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:216"
      ]
    },
    "[OK] Service initialization order correct": {
      "value": "[OK] Service initialization order correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:71"
      ]
    },
    "[OK] Session persisted across": {
      "value": "[OK] Session persisted across",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:284"
      ]
    },
    "[OK] Set": {
      "value": "[OK] Set",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:130",
        "scripts/fix_authentication_test_tokens.py:135",
        "scripts/test_service_health.py:129"
      ]
    },
    "[OK] Skipping test - not on Windows": {
      "value": "[OK] Skipping test - not on Windows",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:58",
        "scripts/test_windows_process_cleanup.py:136"
      ]
    },
    "[OK] Startup completed in": {
      "value": "[OK] Startup completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:211"
      ]
    },
    "[OK] Supervisor created successfully": {
      "value": "[OK] Supervisor created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:99"
      ]
    },
    "[OK] Supervisor execution completed successfully": {
      "value": "[OK] Supervisor execution completed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:116"
      ]
    },
    "[OK] Supervisor execution completed:": {
      "value": "[OK] Supervisor execution completed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:366"
      ]
    },
    "[OK] Supervisor import successful": {
      "value": "[OK] Supervisor import successful",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:91"
      ]
    },
    "[OK] System Info:": {
      "value": "[OK] System Info:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:31"
      ]
    },
    "[OK] Token is VALID (expires in": {
      "value": "[OK] Token is VALID (expires in",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:82"
      ]
    },
    "[OK] Token is valid": {
      "value": "[OK] Token is valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:110"
      ]
    },
    "[OK] Token properly invalidated after logout": {
      "value": "[OK] Token properly invalidated after logout",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:316"
      ]
    },
    "[OK] Token refreshed and valid": {
      "value": "[OK] Token refreshed and valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:269"
      ]
    },
    "[OK] Token refreshed successfully (camelCase)": {
      "value": "[OK] Token refreshed successfully (camelCase)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:178"
      ]
    },
    "[OK] Token refreshed successfully (snake_case)": {
      "value": "[OK] Token refreshed successfully (snake_case)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:143"
      ]
    },
    "[OK] Token valid until:": {
      "value": "[OK] Token valid until:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:49"
      ]
    },
    "[OK] Token validated successfully": {
      "value": "[OK] Token validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:85",
        "scripts/test_staging_auth_live.py:123",
        "scripts/test_staging_jwt_validation.py:69"
      ]
    },
    "[OK] Token validated successfully with provided secret": {
      "value": "[OK] Token validated successfully with provided secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:38"
      ]
    },
    "[OK] Tool Dispatcher created successfully": {
      "value": "[OK] Tool Dispatcher created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:79"
      ]
    },
    "[OK] Tool Dispatcher import successful": {
      "value": "[OK] Tool Dispatcher import successful",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:77"
      ]
    },
    "[OK] Tool completed event received:": {
      "value": "[OK] Tool completed event received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:90",
        "scripts/test_websocket_chat_standalone.py:90"
      ]
    },
    "[OK] Tool dispatcher created": {
      "value": "[OK] Tool dispatcher created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_simple.py:30"
      ]
    },
    "[OK] Tool dispatcher was enhanced with WebSocket notifications": {
      "value": "[OK] Tool dispatcher was enhanced with WebSocket notifications",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:324"
      ]
    },
    "[OK] Tool executing event received:": {
      "value": "[OK] Tool executing event received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:86",
        "scripts/test_websocket_chat_standalone.py:86"
      ]
    },
    "[OK] User ID:": {
      "value": "[OK] User ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:81"
      ]
    },
    "[OK] User registered": {
      "value": "[OK] User registered",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:49"
      ]
    },
    "[OK] User registered successfully": {
      "value": "[OK] User registered successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:47"
      ]
    },
    "[OK] Using correct JWT_SECRET_KEY": {
      "value": "[OK] Using correct JWT_SECRET_KEY",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:202"
      ]
    },
    "[OK] Validation successful without service secret": {
      "value": "[OK] Validation successful without service secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:127"
      ]
    },
    "[OK] WebSocket Manager created successfully": {
      "value": "[OK] WebSocket Manager created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:69"
      ]
    },
    "[OK] WebSocket Manager import successful": {
      "value": "[OK] WebSocket Manager import successful",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:67"
      ]
    },
    "[OK] WebSocket endpoint exists (auth required)": {
      "value": "[OK] WebSocket endpoint exists (auth required)",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:51"
      ]
    },
    "[OK] WebSocket endpoint found at": {
      "value": "[OK] WebSocket endpoint found at",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:106"
      ]
    },
    "[OK] WebSocket endpoint reachable": {
      "value": "[OK] WebSocket endpoint reachable",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:47"
      ]
    },
    "[OK] WebSocket upgrade required (expected)": {
      "value": "[OK] WebSocket upgrade required (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:193"
      ]
    },
    "[OK] Working": {
      "value": "[OK] Working",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:142",
        "scripts/fix_authentication_test_tokens.py:146"
      ]
    },
    "[OUTPUT]": {
      "value": "[OUTPUT]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:52"
      ]
    },
    "[OUTPUT] Output:": {
      "value": "[OUTPUT] Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:58"
      ]
    },
    "[Output] Coverage output preview:": {
      "value": "[Output] Coverage output preview:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:41"
      ]
    },
    "[Output] Output:": {
      "value": "[Output] Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:44"
      ]
    },
    "[PASSED]": {
      "value": "[PASSED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:184",
        "scripts/test_cors_ssot_compliance.py:212"
      ]
    },
    "[PASS]": {
      "value": "[PASS]",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:109",
        "scripts/test/test_supervisor_import.py:71",
        "scripts/test/test_supervisor_import.py:88",
        "scripts/test_cors_ssot_compliance.py:159",
        "scripts/test_docker_config.py:35",
        "scripts/test_service_health.py:167",
        "scripts/test_service_health_simple.py:164",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139"
      ]
    },
    "[PASS] ALL ENVIRONMENT DETECTION TESTS PASSED!": {
      "value": "[PASS] ALL ENVIRONMENT DETECTION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:169"
      ]
    },
    "[PASS] ALL TESTS PASSED in": {
      "value": "[PASS] ALL TESTS PASSED in",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:398"
      ]
    },
    "[PASS] Activity recording works": {
      "value": "[PASS] Activity recording works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:45"
      ]
    },
    "[PASS] All": {
      "value": "[PASS] All",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:180"
      ]
    },
    "[PASS] All OAuth config tests passed!": {
      "value": "[PASS] All OAuth config tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:153"
      ]
    },
    "[PASS] All auth client environment detection tests passed!": {
      "value": "[PASS] All auth client environment detection tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:64"
      ]
    },
    "[PASS] All middleware environment default tests passed!": {
      "value": "[PASS] All middleware environment default tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:106"
      ]
    },
    "[PASS] All schema default tests passed!": {
      "value": "[PASS] All schema default tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:124"
      ]
    },
    "[PASS] All tests passed - real JWT integration successful!": {
      "value": "[PASS] All tests passed - real JWT integration successful!",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:258"
      ]
    },
    "[PASS] Already passing": {
      "value": "[PASS] Already passing",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:310"
      ]
    },
    "[PASS] CRITICAL CHAT FLOW TEST PASSED": {
      "value": "[PASS] CRITICAL CHAT FLOW TEST PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:408"
      ]
    },
    "[PASS] Connection registration works": {
      "value": "[PASS] Connection registration works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:40"
      ]
    },
    "[PASS] Connection resurrection works": {
      "value": "[PASS] Connection resurrection works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:74"
      ]
    },
    "[PASS] Connection unregistration works": {
      "value": "[PASS] Connection unregistration works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:55"
      ]
    },
    "[PASS] Correctly defaults to STAGING when no env vars": {
      "value": "[PASS] Correctly defaults to STAGING when no env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:33"
      ]
    },
    "[PASS] Correctly defaults to staging for ambiguous service name": {
      "value": "[PASS] Correctly defaults to staging for ambiguous service name",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:55"
      ]
    },
    "[PASS] Correctly detects production when explicitly specified": {
      "value": "[PASS] Correctly detects production when explicitly specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:62"
      ]
    },
    "[PASS] Correctly detects staging from ENVIRONMENT var": {
      "value": "[PASS] Correctly detects staging from ENVIRONMENT var",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:40"
      ]
    },
    "[PASS] Correctly detects staging from K_SERVICE": {
      "value": "[PASS] Correctly detects staging from K_SERVICE",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:48"
      ]
    },
    "[PASS] Default config works": {
      "value": "[PASS] Default config works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:25"
      ]
    },
    "[PASS] Duplicate registration handled": {
      "value": "[PASS] Duplicate registration handled",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:64"
      ]
    },
    "[PASS] Enhanced statistics tracking works": {
      "value": "[PASS] Enhanced statistics tracking works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:80"
      ]
    },
    "[PASS] Error handling test passed": {
      "value": "[PASS] Error handling test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:116"
      ]
    },
    "[PASS] Factory compliance defaults to staging": {
      "value": "[PASS] Factory compliance defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:93"
      ]
    },
    "[PASS] Factory status integration defaults to staging": {
      "value": "[PASS] Factory status integration defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:102"
      ]
    },
    "[PASS] Has attribute:": {
      "value": "[PASS] Has attribute:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:55"
      ]
    },
    "[PASS] Health check works": {
      "value": "[PASS] Health check works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:50"
      ]
    },
    "[PASS] Import statement found in startup_module.py": {
      "value": "[PASS] Import statement found in startup_module.py",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:39"
      ]
    },
    "[PASS] Import successful from supervisor_consolidated": {
      "value": "[PASS] Import successful from supervisor_consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:16"
      ]
    },
    "[PASS] Invalid JSON test passed": {
      "value": "[PASS] Invalid JSON test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:122"
      ]
    },
    "[PASS] Invalid token test passed": {
      "value": "[PASS] Invalid token test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:128"
      ]
    },
    "[PASS] Iteration": {
      "value": "[PASS] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:86"
      ]
    },
    "[PASS] Multiple field formats test passed": {
      "value": "[PASS] Multiple field formats test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:110"
      ]
    },
    "[PASS] No ANSI codes in traceback": {
      "value": "[PASS] No ANSI codes in traceback",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:50"
      ]
    },
    "[PASS] No legacy CORS code found": {
      "value": "[PASS] No legacy CORS code found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:188"
      ]
    },
    "[PASS] OAuth config correctly configured for staging": {
      "value": "[PASS] OAuth config correctly configured for staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:151"
      ]
    },
    "[PASS] PASSED:": {
      "value": "[PASS] PASSED:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:23"
      ]
    },
    "[PASS] Passed:": {
      "value": "[PASS] Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:216"
      ]
    },
    "[PASS] PermissionRequest schema defaults to staging": {
      "value": "[PASS] PermissionRequest schema defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:120"
      ]
    },
    "[PASS] Result matches expectation:": {
      "value": "[PASS] Result matches expectation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:133"
      ]
    },
    "[PASS] STAGING ENVIRONMENT HEALTHY (": {
      "value": "[PASS] STAGING ENVIRONMENT HEALTHY (",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:514"
      ]
    },
    "[PASS] Staging config works": {
      "value": "[PASS] Staging config works",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:29"
      ]
    },
    "[PASS] SupervisorAgent created successfully": {
      "value": "[PASS] SupervisorAgent created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:70"
      ]
    },
    "[PASS] SupervisorAgent found in startup_module": {
      "value": "[PASS] SupervisorAgent found in startup_module",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:24"
      ]
    },
    "[PASS] SupervisorAgent instance created:": {
      "value": "[PASS] SupervisorAgent instance created:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:37"
      ]
    },
    "[PASS] SupervisorAgent is from correct module (supervisor_consolidated)": {
      "value": "[PASS] SupervisorAgent is from correct module (supervisor_consolidated)",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:29"
      ]
    },
    "[PASS] Tests passed!": {
      "value": "[PASS] Tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:68"
      ]
    },
    "[PASS] Tests passed! (Run": {
      "value": "[PASS] Tests passed! (Run",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:113"
      ]
    },
    "[PASS] ToolPermissionMiddleware defaults to staging": {
      "value": "[PASS] ToolPermissionMiddleware defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:84"
      ]
    },
    "[PASS] WebSocket Connection: Connected": {
      "value": "[PASS] WebSocket Connection: Connected",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:177"
      ]
    },
    "[PASS] WebSocket notifier test PASSED": {
      "value": "[PASS] WebSocket notifier test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:244"
      ]
    },
    "[PASS] startup_module imported successfully": {
      "value": "[PASS] startup_module imported successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:20"
      ]
    },
    "[Pytest] Running pytest with coverage...": {
      "value": "[Pytest] Running pytest with coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:20"
      ]
    },
    "[QUALITY] Assessing test quality...": {
      "value": "[QUALITY] Assessing test quality...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:50"
      ]
    },
    "[READY] SQLAlchemy 2.0 migration is ready!": {
      "value": "[READY] SQLAlchemy 2.0 migration is ready!",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:85"
      ]
    },
    "[REAL E2E] TESTS WITH ACTUAL LLM/SERVICES": {
      "value": "[REAL E2E] TESTS WITH ACTUAL LLM/SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71"
      ]
    },
    "[RECOMMEND] Generating improvement recommendations...": {
      "value": "[RECOMMEND] Generating improvement recommendations...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:58"
      ]
    },
    "[RECV] Received response:": {
      "value": "[RECV] Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:113"
      ]
    },
    "[RECV] Received:": {
      "value": "[RECV] Received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:51"
      ]
    },
    "[REPORT] Detailed report saved to:": {
      "value": "[REPORT] Detailed report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:230"
      ]
    },
    "[RESULT] Exit code:": {
      "value": "[RESULT] Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "[REVIEW] Running Autonomous Test Review in": {
      "value": "[REVIEW] Running Autonomous Test Review in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:35"
      ]
    },
    "[RUN] Processing message through supervisor...": {
      "value": "[RUN] Processing message through supervisor...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:358"
      ]
    },
    "[Report] HTML Report: reports/tests/report.html": {
      "value": "[Report] HTML Report: reports/tests/report.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:421"
      ]
    },
    "[Runner": {
      "value": "[Runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:47",
        "scripts/test_parallel_docker_manager.py:57",
        "scripts/test_parallel_docker_manager.py:61",
        "scripts/test_parallel_docker_manager.py:65",
        "scripts/test_parallel_docker_manager.py:71",
        "scripts/test_parallel_docker_manager.py:76",
        "scripts/test_parallel_docker_manager.py:78",
        "scripts/test_parallel_docker_manager.py:94",
        "scripts/test_parallel_docker_manager.py:100",
        "scripts/test_parallel_docker_manager.py:105"
      ]
    },
    "[SAVE] Detailed results saved to:": {
      "value": "[SAVE] Detailed results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:340"
      ]
    },
    "[SEND] Sending WebSocket events...": {
      "value": "[SEND] Sending WebSocket events...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:203"
      ]
    },
    "[SEND] Sent ping message": {
      "value": "[SEND] Sent ping message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:106"
      ]
    },
    "[SEND] Sent test message": {
      "value": "[SEND] Sent test message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:46"
      ]
    },
    "[SERVICE URLS]": {
      "value": "[SERVICE URLS]",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:124"
      ]
    },
    "[SERVICE] Auditing": {
      "value": "[SERVICE] Auditing",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:75"
      ]
    },
    "[SERVICE] Auditing E2E tests...": {
      "value": "[SERVICE] Auditing E2E tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:83"
      ]
    },
    "[SERVICE] Auditing FRONTEND service...": {
      "value": "[SERVICE] Auditing FRONTEND service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:79"
      ]
    },
    "[SETUP] Environment variables set:": {
      "value": "[SETUP] Environment variables set:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:64"
      ]
    },
    "[SETUP] Setting staging environment variables...": {
      "value": "[SETUP] Setting staging environment variables...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:34"
      ]
    },
    "[SET]": {
      "value": "[SET]",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:35",
        "scripts/test_auth_service_integration_fix.py:38",
        "scripts/test_auth_service_integration_fix.py:97"
      ]
    },
    "[SIMULATE] Checking configuration...": {
      "value": "[SIMULATE] Checking configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:120"
      ]
    },
    "[SIMULATE] Checking dependencies...": {
      "value": "[SIMULATE] Checking dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:90"
      ]
    },
    "[SIMULATE] Checking health endpoints...": {
      "value": "[SIMULATE] Checking health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:187"
      ]
    },
    "[SIMULATE] Checking initialization order...": {
      "value": "[SIMULATE] Checking initialization order...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:52"
      ]
    },
    "[SIMULATE] Checking secrets...": {
      "value": "[SIMULATE] Checking secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:150"
      ]
    },
    "[SIMULATE] Startup time: 12s (limit:": {
      "value": "[SIMULATE] Startup time: 12s (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:203"
      ]
    },
    "[SIMULATION MODE - Not connecting to real services]": {
      "value": "[SIMULATION MODE - Not connecting to real services]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:232"
      ]
    },
    "[SKIPPED]": {
      "value": "[SKIPPED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:184"
      ]
    },
    "[SKIP]": {
      "value": "[SKIP]",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:114",
        "scripts/test_service_health_simple.py:122"
      ]
    },
    "[SKIP] Cannot auto-fix:": {
      "value": "[SKIP] Cannot auto-fix:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:336"
      ]
    },
    "[SKIP] Connection tests skipped:": {
      "value": "[SKIP] Connection tests skipped:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:294"
      ]
    },
    "[START] Starting Comprehensive WebSocket CORS Tests": {
      "value": "[START] Starting Comprehensive WebSocket CORS Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:174"
      ]
    },
    "[START] Starting Critical Chat Flow Tests": {
      "value": "[START] Starting Critical Chat Flow Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:417"
      ]
    },
    "[STATUS]": {
      "value": "[STATUS]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:57"
      ]
    },
    "[STEP 1] Checking entry conditions...": {
      "value": "[STEP 1] Checking entry conditions...",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:135"
      ]
    },
    "[STEP 2] Executing triage workflow...": {
      "value": "[STEP 2] Executing triage workflow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:144"
      ]
    },
    "[STEP 3] Triage Result:": {
      "value": "[STEP 3] Triage Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:154"
      ]
    },
    "[STRUCTURED LLM CALL] Using schema:": {
      "value": "[STRUCTURED LLM CALL] Using schema:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:104"
      ]
    },
    "[SUCCESS]": {
      "value": "[SUCCESS]",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:134"
      ]
    },
    "[SUCCESS] - Token was signed with this secret!": {
      "value": "[SUCCESS] - Token was signed with this secret!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:111"
      ]
    },
    "[SUCCESS] ALL CHECKS PASSED": {
      "value": "[SUCCESS] ALL CHECKS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:516"
      ]
    },
    "[SUCCESS] ALL TESTS PASSED": {
      "value": "[SUCCESS] ALL TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:216"
      ]
    },
    "[SUCCESS] ALL TESTS PASSED - Critical chat functionality is working!": {
      "value": "[SUCCESS] ALL TESTS PASSED - Critical chat functionality is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:453"
      ]
    },
    "[SUCCESS] ALL TESTS PASSED!": {
      "value": "[SUCCESS] ALL TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:83"
      ]
    },
    "[SUCCESS] ALL TESTS PASSED! Authentication is working correctly.": {
      "value": "[SUCCESS] ALL TESTS PASSED! Authentication is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:376"
      ]
    },
    "[SUCCESS] All OAuth credential loading tests passed!": {
      "value": "[SUCCESS] All OAuth credential loading tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:108"
      ]
    },
    "[SUCCESS] All configuration checks completed": {
      "value": "[SUCCESS] All configuration checks completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:129"
      ]
    },
    "[SUCCESS] All files processed successfully": {
      "value": "[SUCCESS] All files processed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:205"
      ]
    },
    "[SUCCESS] All models imported successfully with SQLAlchemy 2.0 patterns": {
      "value": "[SUCCESS] All models imported successfully with SQLAlchemy 2.0 patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:21"
      ]
    },
    "[SUCCESS] All tests passed!": {
      "value": "[SUCCESS] All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:98",
        "scripts/test_service_health_simple.py:171",
        "scripts/test_websocket_cors_comprehensive.py:345",
        "scripts/test_websocket_simple.py:94"
      ]
    },
    "[SUCCESS] All tests passed! Async PostgreSQL configuration is working.": {
      "value": "[SUCCESS] All tests passed! Async PostgreSQL configuration is working.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:190"
      ]
    },
    "[SUCCESS] All tests passed! Service health checking mechanism is working correctly.": {
      "value": "[SUCCESS] All tests passed! Service health checking mechanism is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:173"
      ]
    },
    "[SUCCESS] All tests passed! Staging deployment is healthy.": {
      "value": "[SUCCESS] All tests passed! Staging deployment is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:237"
      ]
    },
    "[SUCCESS] All tests passed! WebSocket CORS is working correctly.": {
      "value": "[SUCCESS] All tests passed! WebSocket CORS is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:310"
      ]
    },
    "[SUCCESS] Applied": {
      "value": "[SUCCESS] Applied",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:299"
      ]
    },
    "[SUCCESS] Auth service models are working": {
      "value": "[SUCCESS] Auth service models are working",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:71"
      ]
    },
    "[SUCCESS] Basic query execution works": {
      "value": "[SUCCESS] Basic query execution works",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:44"
      ]
    },
    "[SUCCESS] Basic unit tests are passing!": {
      "value": "[SUCCESS] Basic unit tests are passing!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:85"
      ]
    },
    "[SUCCESS] Configuration loaded successfully!": {
      "value": "[SUCCESS] Configuration loaded successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:66",
        "scripts/test_staging_config.py:80"
      ]
    },
    "[SUCCESS] Database connection works with SQLAlchemy 2.0": {
      "value": "[SUCCESS] Database connection works with SQLAlchemy 2.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:28"
      ]
    },
    "[SUCCESS] Dev-minimal configuration: ALL CHECKS PASSED": {
      "value": "[SUCCESS] Dev-minimal configuration: ALL CHECKS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:171"
      ]
    },
    "[SUCCESS] Environment detection is properly configured!": {
      "value": "[SUCCESS] Environment detection is properly configured!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:175"
      ]
    },
    "[SUCCESS] Metrics written to": {
      "value": "[SUCCESS] Metrics written to",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:452"
      ]
    },
    "[SUCCESS] Model type annotations are working": {
      "value": "[SUCCESS] Model type annotations are working",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:61"
      ]
    },
    "[SUCCESS] No critical issues found": {
      "value": "[SUCCESS] No critical issues found",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:464"
      ]
    },
    "[SUCCESS] STAGING STARTUP TESTS PASSED": {
      "value": "[SUCCESS] STAGING STARTUP TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:277"
      ]
    },
    "[SUCCESS] Service health checking is working correctly!": {
      "value": "[SUCCESS] Service health checking is working correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:69"
      ]
    },
    "[SUCCESS] Staging configuration test completed": {
      "value": "[SUCCESS] Staging configuration test completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:146"
      ]
    },
    "[SUCCESS] Test services started successfully!": {
      "value": "[SUCCESS] Test services started successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:69"
      ]
    },
    "[SUCCESS] Test services stopped and data cleaned!": {
      "value": "[SUCCESS] Test services stopped and data cleaned!",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:85"
      ]
    },
    "[SUCCESS] Test services stopped!": {
      "value": "[SUCCESS] Test services stopped!",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:87"
      ]
    },
    "[SUCCESS] Windows configuration: ALL CHECKS PASSED": {
      "value": "[SUCCESS] Windows configuration: ALL CHECKS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:147"
      ]
    },
    "[SUMMARY] Test Results": {
      "value": "[SUMMARY] Test Results",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:89"
      ]
    },
    "[SUMMARY] Test Summary": {
      "value": "[SUMMARY] Test Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:295"
      ]
    },
    "[SUMMARY] Test Summary:": {
      "value": "[SUMMARY] Test Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:246"
      ]
    },
    "[Service Health Check]": {
      "value": "[Service Health Check]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:176"
      ]
    },
    "[Success] .coveragerc configuration file exists": {
      "value": "[Success] .coveragerc configuration file exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:108"
      ]
    },
    "[Success] .coveragerc configured for netra_backend/app": {
      "value": "[Success] .coveragerc configured for netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:112"
      ]
    },
    "[Success] .coveragerc configured for reports/coverage output": {
      "value": "[Success] .coveragerc configured for reports/coverage output",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:114"
      ]
    },
    "[Success] HTML coverage report generated": {
      "value": "[Success] HTML coverage report generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:61"
      ]
    },
    "[Success] HTML report contains coverage percentage": {
      "value": "[Success] HTML report contains coverage percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:66"
      ]
    },
    "[Success] JSON coverage report generated": {
      "value": "[Success] JSON coverage report generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:90"
      ]
    },
    "[Success] JSON coverage total:": {
      "value": "[Success] JSON coverage total:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:96"
      ]
    },
    "[Success] Pytest with coverage completed successfully": {
      "value": "[Success] Pytest with coverage completed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:40"
      ]
    },
    "[Success] XML coverage line-rate:": {
      "value": "[Success] XML coverage line-rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:81"
      ]
    },
    "[Success] XML coverage report generated": {
      "value": "[Success] XML coverage report generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:75"
      ]
    },
    "[TEST 1] Service Availability Checker": {
      "value": "[TEST 1] Service Availability Checker",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:146"
      ]
    },
    "[TEST 2] HTTP Service Health Checker": {
      "value": "[TEST 2] HTTP Service Health Checker",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:150"
      ]
    },
    "[TEST SERVICE STATUS]": {
      "value": "[TEST SERVICE STATUS]",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:94"
      ]
    },
    "[TEST-DOCKER] Resetting test data without container restart": {
      "value": "[TEST-DOCKER] Resetting test data without container restart",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:92"
      ]
    },
    "[TEST-DOCKER] Warning: Could not discover ports:": {
      "value": "[TEST-DOCKER] Warning: Could not discover ports:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:182"
      ]
    },
    "[TEST-DOCKER] ✓ PostgreSQL data reset": {
      "value": "[TEST-DOCKER] ✓ PostgreSQL data reset",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:113"
      ]
    },
    "[TEST-DOCKER] ✓ Redis data reset": {
      "value": "[TEST-DOCKER] ✓ Redis data reset",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:125"
      ]
    },
    "[TEST-DOCKER] ✗ Failed to reset PostgreSQL:": {
      "value": "[TEST-DOCKER] ✗ Failed to reset PostgreSQL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:115"
      ]
    },
    "[TEST-DOCKER] ✗ Failed to reset Redis:": {
      "value": "[TEST-DOCKER] ✗ Failed to reset Redis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:127"
      ]
    },
    "[TEST]": {
      "value": "[TEST]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:23"
      ]
    },
    "[TEST] Origin:": {
      "value": "[TEST] Origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:24"
      ]
    },
    "[TEST] Running Real JWT Token E2E Validation Tests...": {
      "value": "[TEST] Running Real JWT Token E2E Validation Tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:205"
      ]
    },
    "[TEST] Running test:": {
      "value": "[TEST] Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:35"
      ]
    },
    "[TEST] Test message:": {
      "value": "[TEST] Test message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:347"
      ]
    },
    "[TEST] Testing API Endpoints...": {
      "value": "[TEST] Testing API Endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:199"
      ]
    },
    "[TEST] Testing Authentication Flow...": {
      "value": "[TEST] Testing Authentication Flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:203"
      ]
    },
    "[TEST] Testing Service Health Endpoints...": {
      "value": "[TEST] Testing Service Health Endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:195"
      ]
    },
    "[TEST] Testing WebSocket Connectivity...": {
      "value": "[TEST] Testing WebSocket Connectivity...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:207"
      ]
    },
    "[TEST] Testing WebSocket connection to:": {
      "value": "[TEST] Testing WebSocket connection to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:23"
      ]
    },
    "[TEST] Testing:": {
      "value": "[TEST] Testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:55"
      ]
    },
    "[TIMEOUT] Frontend tests timed out": {
      "value": "[TIMEOUT] Frontend tests timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:63"
      ]
    },
    "[TIMEOUT] Iteration": {
      "value": "[TIMEOUT] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:93"
      ]
    },
    "[TIMEOUT] No response (but connection successful)": {
      "value": "[TIMEOUT] No response (but connection successful)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:54"
      ]
    },
    "[TIMEOUT] No response within 5 seconds (but connection successful)": {
      "value": "[TIMEOUT] No response within 5 seconds (but connection successful)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:116"
      ]
    },
    "[TIMEOUT] Skipping remaining tests in": {
      "value": "[TIMEOUT] Skipping remaining tests in",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:90"
      ]
    },
    "[TIMEOUT] Test execution timed out": {
      "value": "[TIMEOUT] Test execution timed out",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:75"
      ]
    },
    "[TIMEOUT] Test timed out": {
      "value": "[TIMEOUT] Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:71",
        "scripts/test_verify_workflow_status_corrected.py:70"
      ]
    },
    "[TIME] TIMEOUT:": {
      "value": "[TIME] TIMEOUT:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:29"
      ]
    },
    "[Timeout] Pytest timed out - this is expected for complex tests": {
      "value": "[Timeout] Pytest timed out - this is expected for complex tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:49"
      ]
    },
    "[ULTRA-THINK] Performing deep semantic analysis...": {
      "value": "[ULTRA-THINK] Performing deep semantic analysis...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:42"
      ]
    },
    "[Verify] Verifying coverage reports...": {
      "value": "[Verify] Verifying coverage reports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:54"
      ]
    },
    "[WAIT] Waiting for async events to complete...": {
      "value": "[WAIT] Waiting for async events to complete...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:374"
      ]
    },
    "[WARNING]": {
      "value": "[WARNING]",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:312",
        "scripts/test_windows_process_cleanup.py:119"
      ]
    },
    "[WARNING]  Some tests failed. Review the output above for details.": {
      "value": "[WARNING]  Some tests failed. Review the output above for details.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:378"
      ]
    },
    "[WARNING] Backend returned 403 - Forbidden": {
      "value": "[WARNING] Backend returned 403 - Forbidden",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:162"
      ]
    },
    "[WARNING] Backend server is not running. Starting it...": {
      "value": "[WARNING] Backend server is not running. Starting it...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:212"
      ]
    },
    "[WARNING] ClickHouse tests require running ClickHouse instance - these are integration tests": {
      "value": "[WARNING] ClickHouse tests require running ClickHouse instance - these are integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:23"
      ]
    },
    "[WARNING] Collection Errors:": {
      "value": "[WARNING] Collection Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:341"
      ]
    },
    "[WARNING] Config endpoint exposed (should be dev only)": {
      "value": "[WARNING] Config endpoint exposed (should be dev only)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:54"
      ]
    },
    "[WARNING] Could not find property with measurement ID": {
      "value": "[WARNING] Could not find property with measurement ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:92"
      ]
    },
    "[WARNING] Duplicate Tests:": {
      "value": "[WARNING] Duplicate Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:346"
      ]
    },
    "[WARNING] Error checking port": {
      "value": "[WARNING] Error checking port",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:166"
      ]
    },
    "[WARNING] Failed to start test process:": {
      "value": "[WARNING] Failed to start test process:",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:88"
      ]
    },
    "[WARNING] Found": {
      "value": "[WARNING] Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:461"
      ]
    },
    "[WARNING] Frontend dev server is not running. Starting it...": {
      "value": "[WARNING] Frontend dev server is not running. Starting it...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:217"
      ]
    },
    "[WARNING] Orphaned Tests:": {
      "value": "[WARNING] Orphaned Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:356"
      ]
    },
    "[WARNING] Process may not have been cleaned up": {
      "value": "[WARNING] Process may not have been cleaned up",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:103"
      ]
    },
    "[WARNING] Production logging still contains ANSI codes!": {
      "value": "[WARNING] Production logging still contains ANSI codes!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:94"
      ]
    },
    "[WARNING] Significant test limit violations. Prioritize cleanup.": {
      "value": "[WARNING] Significant test limit violations. Prioritize cleanup.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:58"
      ]
    },
    "[WARNING] Some critical services are completely unavailable": {
      "value": "[WARNING] Some critical services are completely unavailable",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health_simple.py:74"
      ]
    },
    "[WARNING] Some tests failed. Check the report for details.": {
      "value": "[WARNING] Some tests failed. Check the report for details.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:234"
      ]
    },
    "[WARNING] Some tests failed. Please check the output above for details.": {
      "value": "[WARNING] Some tests failed. Please check the output above for details.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:176"
      ]
    },
    "[WARNING] Some tests still failing - check individual test output above": {
      "value": "[WARNING] Some tests still failing - check individual test output above",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:87"
      ]
    },
    "[WARNING] Test process may not have started properly": {
      "value": "[WARNING] Test process may not have started properly",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:86"
      ]
    },
    "[WARNING] Tests Missing Markers:": {
      "value": "[WARNING] Tests Missing Markers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:351"
      ]
    },
    "[WARNING] Token is expired!": {
      "value": "[WARNING] Token is expired!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:45"
      ]
    },
    "[WARNING] node_modules not found. Skipping frontend tests.": {
      "value": "[WARNING] node_modules not found. Skipping frontend tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:23"
      ]
    },
    "[WARNING] npm not available. Skipping frontend tests.": {
      "value": "[WARNING] npm not available. Skipping frontend tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:31"
      ]
    },
    "[WARN]": {
      "value": "[WARN]",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:128",
        "scripts/test_websocket_chat_simple.py:129",
        "scripts/test_websocket_chat_simple.py:130",
        "scripts/test_websocket_chat_simple.py:131"
      ]
    },
    "[WARN] Added function but test still fails": {
      "value": "[WARN] Added function but test still fails",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:331"
      ]
    },
    "[WARN] Agent thinking event not sent": {
      "value": "[WARN] Agent thinking event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:227"
      ]
    },
    "[WARN] All tests skipped - JWT library may not be available": {
      "value": "[WARN] All tests skipped - JWT library may not be available",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:255"
      ]
    },
    "[WARN] Failed to capture message:": {
      "value": "[WARN] Failed to capture message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:177",
        "scripts/test_websocket_chat_simple.py:285"
      ]
    },
    "[WARN] STAGING ENVIRONMENT ISSUES DETECTED (": {
      "value": "[WARN] STAGING ENVIRONMENT ISSUES DETECTED (",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:517"
      ]
    },
    "[WARN] Tool completed event not sent": {
      "value": "[WARN] Tool completed event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:233"
      ]
    },
    "[WARN] Tool dispatcher may not be properly enhanced": {
      "value": "[WARN] Tool dispatcher may not be properly enhanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:326"
      ]
    },
    "[WARN] Tool executing event not sent": {
      "value": "[WARN] Tool executing event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:230"
      ]
    },
    "[Warning] Could not parse JSON report:": {
      "value": "[Warning] Could not parse JSON report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:98"
      ]
    },
    "[Warning] Could not parse XML report:": {
      "value": "[Warning] Could not parse XML report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:83"
      ]
    },
    "[Warning] Could not read .coveragerc:": {
      "value": "[Warning] Could not read .coveragerc:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:116"
      ]
    },
    "[Warning] Could not read HTML report:": {
      "value": "[Warning] Could not read HTML report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:68"
      ]
    },
    "[Warning] Pytest completed with warnings (exit code:": {
      "value": "[Warning] Pytest completed with warnings (exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:43"
      ]
    },
    "[WebSocket Event]": {
      "value": "[WebSocket Event]",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:89"
      ]
    },
    "[X]": {
      "value": "[X]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:440"
      ]
    },
    "[X] Decode error:": {
      "value": "[X] Decode error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:44"
      ]
    },
    "[X] FILES EXCEEDING 300 LINES (": {
      "value": "[X] FILES EXCEEDING 300 LINES (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:165"
      ]
    },
    "[X] FILES WITH FUNCTIONS > 8 LINES (": {
      "value": "[X] FILES WITH FUNCTIONS > 8 LINES (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:173"
      ]
    },
    "[X] FILES WITH MOCK COMPONENTS (": {
      "value": "[X] FILES WITH MOCK COMPONENTS (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:183"
      ]
    },
    "[X] Invalid signature with provided secret": {
      "value": "[X] Invalid signature with provided secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:41"
      ]
    },
    "[X] Token is EXPIRED (expired": {
      "value": "[X] Token is EXPIRED (expired",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:80"
      ]
    },
    "[X] Unexpected error:": {
      "value": "[X] Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:47"
      ]
    },
    "[]": {
      "value": "[]",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:373"
      ]
    },
    "[^:]*:)": {
      "value": "[^:]*:)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:65"
      ]
    },
    "[bold blue]Starting Local OAuth Testing[/bold blue]": {
      "value": "[bold blue]Starting Local OAuth Testing[/bold blue]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:437"
      ]
    },
    "[bold cyan]1. Checking Environment Configuration[/bold cyan]": {
      "value": "[bold cyan]1. Checking Environment Configuration[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:58"
      ]
    },
    "[bold cyan]2. Checking Service Health[/bold cyan]": {
      "value": "[bold cyan]2. Checking Service Health[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:100"
      ]
    },
    "[bold cyan]3. Testing OAuth Config Endpoint[/bold cyan]": {
      "value": "[bold cyan]3. Testing OAuth Config Endpoint[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:141"
      ]
    },
    "[bold cyan]4. Testing OAuth Login Initiation[/bold cyan]": {
      "value": "[bold cyan]4. Testing OAuth Login Initiation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:182"
      ]
    },
    "[bold cyan]5. Testing Token Generation[/bold cyan]": {
      "value": "[bold cyan]5. Testing Token Generation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:238"
      ]
    },
    "[bold cyan]6. Testing Token Validation[/bold cyan]": {
      "value": "[bold cyan]6. Testing Token Validation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:298"
      ]
    },
    "[bold cyan]═══ OAuth Local Test Report ═══[/bold cyan]": {
      "value": "[bold cyan]═══ OAuth Local Test Report ═══[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:347"
      ]
    },
    "[bold green]📋 Recommendations:[/bold green]": {
      "value": "[bold green]📋 Recommendations:[/bold green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:392"
      ]
    },
    "[bold]Auth URL:[/bold]": {
      "value": "[bold]Auth URL:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:152"
      ]
    },
    "[bold]Client ID:[/bold]": {
      "value": "[bold]Client ID:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:153"
      ]
    },
    "[bold]Provider:[/bold]": {
      "value": "[bold]Provider:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:152"
      ]
    },
    "[cyan]ℹ️": {
      "value": "[cyan]ℹ️",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:60"
      ]
    },
    "[data-testid='loading']": {
      "value": "[data-testid='loading']",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:54"
      ]
    },
    "[data-testid='main-chat']": {
      "value": "[data-testid='main-chat']",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:63"
      ]
    },
    "[green]✅": {
      "value": "[green]✅",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:46"
      ]
    },
    "[green]✓ Results exported to": {
      "value": "[green]✓ Results exported to",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:463"
      ]
    },
    "[green]✓[/green]": {
      "value": "[green]✓[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:76",
        "scripts/test_oauth_local.py:360",
        "scripts/test_oauth_local.py:363",
        "scripts/test_oauth_local.py:366",
        "scripts/test_oauth_local.py:425"
      ]
    },
    "[green]✓[/green] All tests passed! OAuth is properly configured.": {
      "value": "[green]✓[/green] All tests passed! OAuth is properly configured.",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:427"
      ]
    },
    "[green]✓[/green] Config endpoint returned successfully": {
      "value": "[green]✓[/green] Config endpoint returned successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:148"
      ]
    },
    "[green]✓[/green] Correctly redirecting to auth service": {
      "value": "[green]✓[/green] Correctly redirecting to auth service",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:198"
      ]
    },
    "[green]✓[/green] Login endpoint redirects correctly": {
      "value": "[green]✓[/green] Login endpoint redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:193"
      ]
    },
    "[green]✓[/green] Token generated successfully": {
      "value": "[green]✓[/green] Token generated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:254"
      ]
    },
    "[green]✓[/green] Token validated successfully": {
      "value": "[green]✓[/green] Token validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:309"
      ]
    },
    "[red]Error during testing:": {
      "value": "[red]Error during testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:466"
      ]
    },
    "[red]✗[/red]": {
      "value": "[red]✗[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:83",
        "scripts/test_oauth_local.py:369"
      ]
    },
    "[red]✗[/red] Config endpoint failed:": {
      "value": "[red]✗[/red] Config endpoint failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:166"
      ]
    },
    "[red]✗[/red] Dev login failed:": {
      "value": "[red]✗[/red] Dev login failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:273"
      ]
    },
    "[red]✗[/red] Error fetching config:": {
      "value": "[red]✗[/red] Error fetching config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:174"
      ]
    },
    "[red]✗[/red] Error testing login flow:": {
      "value": "[red]✗[/red] Error testing login flow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:226"
      ]
    },
    "[red]✗[/red] Error testing token generation:": {
      "value": "[red]✗[/red] Error testing token generation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:282"
      ]
    },
    "[red]✗[/red] Error validating token:": {
      "value": "[red]✗[/red] Error validating token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:335"
      ]
    },
    "[red]✗[/red] Login endpoint didn't redirect:": {
      "value": "[red]✗[/red] Login endpoint didn't redirect:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:212"
      ]
    },
    "[red]✗[/red] No token in response": {
      "value": "[red]✗[/red] No token in response",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:270"
      ]
    },
    "[red]✗[/red] Token validation failed:": {
      "value": "[red]✗[/red] Token validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:322"
      ]
    },
    "[red]❌": {
      "value": "[red]❌",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:53"
      ]
    },
    "[yellow]⊘[/yellow]": {
      "value": "[yellow]⊘[/yellow]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:357"
      ]
    },
    "[yellow]⚠[/yellow] Dev login not enabled - skipping token generation test": {
      "value": "[yellow]⚠[/yellow] Dev login not enabled - skipping token generation test",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:288"
      ]
    },
    "[yellow]⚠[/yellow] Unexpected redirect location": {
      "value": "[yellow]⚠[/yellow] Unexpected redirect location",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:200"
      ]
    },
    "\\": {
      "value": "\\",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_violations.py:118",
        "scripts/batch_test_generator.py:395",
        "scripts/business_value_test_index.py:148",
        "scripts/business_value_test_index.py:284",
        "scripts/business_value_test_index.py:353",
        "scripts/check_conftest_violations.py:55",
        "scripts/ci/check_test_stubs.py:95",
        "scripts/test_docker_config.py:79",
        "scripts/test_docker_config.py:82"
      ]
    },
    "\\.execute\\(": {
      "value": "\\.execute\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:34"
      ]
    },
    "\\.read\\(": {
      "value": "\\.read\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "\\.return_value\\s*=": {
      "value": "\\.return_value\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:275",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "\\.side_effect\\s*=": {
      "value": "\\.side_effect\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:275"
      ]
    },
    "\\.write\\(": {
      "value": "\\.write\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "\\1": {
      "value": "\\1",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:110"
      ]
    },
    "\\1# @patch(...) - Removed: No mocks in e2e tests": {
      "value": "\\1# @patch(...) - Removed: No mocks in e2e tests",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:176"
      ]
    },
    "\\1,\\n      exportConversation: jest.fn()": {
      "value": "\\1,\\n      exportConversation: jest.fn()",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:632"
      ]
    },
    "\\1\\2": {
      "value": "\\1\\2",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:228"
      ]
    },
    "\\1\\n    \\2": {
      "value": "\\1\\n    \\2",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:60",
        "scripts/batch_fix_and_test.py:30",
        "scripts/batch_fix_and_test.py:36",
        "scripts/simple_test_fix_loop.py:54"
      ]
    },
    "\\1def setup_method(self):\\n\\2\"\"\"Setup method for test class.\"\"\"\\n": {
      "value": "\\1def setup_method(self):\\n\\2\"\"\"Setup method for test class.\"\"\"\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:23"
      ]
    },
    "\\2": {
      "value": "\\2",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:110"
      ]
    },
    "\\[\\s*[\"\\']Part 1[\"\\']\\s*,\\s*[\"\\']Part 2[\"\\']\\s*,\\s*[\"\\']Part 3[\"\\']\\s*\\]": {
      "value": "\\[\\s*[\"\\']Part 1[\"\\']\\s*,\\s*[\"\\']Part 2[\"\\']\\s*,\\s*[\"\\']Part 3[\"\\']\\s*\\]",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:59"
      ]
    },
    "\\b(Mock|MagicMock|AsyncMock)\\(.*?\\)": {
      "value": "\\b(Mock|MagicMock|AsyncMock)\\(.*?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:113"
      ]
    },
    "\\migrations\\": {
      "value": "\\migrations\\",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:38"
      ]
    },
    "\\n\\n\\n+": {
      "value": "\\n\\n\\n+",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:40"
      ]
    },
    "\\tests\\": {
      "value": "\\tests\\",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:36"
      ]
    },
    "\\x1b\\[[0-9;]*m": {
      "value": "\\x1b\\[[0-9;]*m",
      "category": "test_literals",
      "locations": [
        "scripts/test_ansi_logging.py:43"
      ]
    },
    "]": {
      "value": "]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:392",
        "scripts/align_test_imports.py:394",
        "scripts/run_all_test_categories.py:152",
        "scripts/setup_test_environment.py:291",
        "scripts/setup_test_environment.py:298",
        "scripts/setup_test_environment.py:305",
        "scripts/staging_comprehensive_test.py:71",
        "scripts/standardize_l3_test_names.py:273",
        "scripts/test/test_docker_stability.py:91",
        "scripts/test_chat_errors.py:10"
      ]
    },
    "] Acquired environment:": {
      "value": "] Acquired environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:61"
      ]
    },
    "] Acquiring Docker environment...": {
      "value": "] Acquiring Docker environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:57"
      ]
    },
    "] Completed": {
      "value": "] Completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:100"
      ]
    },
    "] Failed with error:": {
      "value": "] Failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:105"
      ]
    },
    "] PID": {
      "value": "] PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166"
      ]
    },
    "] Processing:": {
      "value": "] Processing:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:304"
      ]
    },
    "] Releasing environment...": {
      "value": "] Releasing environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:94"
      ]
    },
    "] Restart blocked by rate limiting for": {
      "value": "] Restart blocked by rate limiting for",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:78"
      ]
    },
    "] Running tests for": {
      "value": "] Running tests for",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:65"
      ]
    },
    "] Service": {
      "value": "] Service",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:324"
      ]
    },
    "] Simulating": {
      "value": "] Simulating",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:71"
      ]
    },
    "] Starting with": {
      "value": "] Starting with",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:47"
      ]
    },
    "] Successfully restarted": {
      "value": "] Successfully restarted",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:76"
      ]
    },
    "] Test #": {
      "value": "] Test #",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:74"
      ]
    },
    "^(\\s*)@patch\\([^)]+\\)": {
      "value": "^(\\s*)@patch\\([^)]+\\)",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:176"
      ]
    },
    "^(def |class |@)": {
      "value": "^(def |class |@)",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:40"
      ]
    },
    "^(import |from .+ import)": {
      "value": "^(import |from .+ import)",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:62"
      ]
    },
    "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$": {
      "value": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:29"
      ]
    },
    "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$": {
      "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:22"
      ]
    },
    "^[a-zA-Z_]+:[a-zA-Z_]+$": {
      "value": "^[a-zA-Z_]+:[a-zA-Z_]+$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:214"
      ]
    },
    "^\\s*(?:const|let|var)\\s+(\\w+)\\s*=\\s*(?:async\\s+)?(?:function|\\()": {
      "value": "^\\s*(?:const|let|var)\\s+(\\w+)\\s*=\\s*(?:async\\s+)?(?:function|\\()",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:32"
      ]
    },
    "^\\s*(?:export\\s+)?(?:async\\s+)?function\\s+(\\w+)": {
      "value": "^\\s*(?:export\\s+)?(?:async\\s+)?function\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:31"
      ]
    },
    "^\\s*(?:it|test|describe)\\s*\\([\\'\"`]([^\\'\"`]+)": {
      "value": "^\\s*(?:it|test|describe)\\s*\\([\\'\"`]([^\\'\"`]+)",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:34"
      ]
    },
    "^\\s*(\\w+)\\s*:\\s*(?:async\\s+)?(?:function|\\()": {
      "value": "^\\s*(\\w+)\\s*:\\s*(?:async\\s+)?(?:function|\\()",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:33"
      ]
    },
    "^\\s*(async\\s+)?def\\s+\\w+": {
      "value": "^\\s*(async\\s+)?def\\s+\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:264"
      ]
    },
    "^async def test_": {
      "value": "^async def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:52"
      ]
    },
    "^class Test": {
      "value": "^class Test",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:51"
      ]
    },
    "^def test_": {
      "value": "^def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:50"
      ]
    },
    "^from \\. import": {
      "value": "^from \\. import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:133"
      ]
    },
    "^from \\.\\. import": {
      "value": "^from \\.\\. import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:120"
      ]
    },
    "^from helpers\\.": {
      "value": "^from helpers\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:75"
      ]
    },
    "_": {
      "value": "_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:161",
        "auth_service/tests/test_auth_comprehensive_audit.py:396",
        "auth_service/tests/test_critical_bugs.py:373",
        "auth_service/tests/test_critical_bugs.py:375",
        "scripts/auto_fix_test_sizes.py:277",
        "scripts/auto_fix_test_sizes.py:328",
        "scripts/auto_fix_test_sizes.py:472",
        "scripts/auto_fix_test_sizes.py:496",
        "scripts/auto_fix_test_violations.py:374",
        "scripts/auto_fix_test_violations.py:886"
      ]
    },
    "__": {
      "value": "__",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:95"
      ]
    },
    "__annotations__": {
      "value": "__annotations__",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:60"
      ]
    },
    "__init__": {
      "value": "__init__",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:69"
      ]
    },
    "__init__.py": {
      "value": "__init__.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:70",
        "scripts/test_collection_audit.py:268"
      ]
    },
    "__main__": {
      "value": "__main__",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:76",
        "auth_service/test_actual_staging_credentials.py:183",
        "auth_service/test_auth_direct.py:258",
        "auth_service/test_staging_db_connection.py:329",
        "auth_service/test_url_construction.py:249",
        "auth_service/tests/test_all_imports.py:171",
        "auth_service/tests/test_auth_comprehensive.py:583",
        "auth_service/tests/test_auth_comprehensive_audit.py:617",
        "auth_service/tests/test_auth_port_configuration.py:457",
        "auth_service/tests/test_auth_real_services_comprehensive.py:518"
      ]
    },
    "__pycache__": {
      "value": "__pycache__",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:34",
        "scripts/add_pytest_markers.py:145",
        "scripts/align_test_imports.py:78",
        "scripts/auto_fix_test_violations.py:103",
        "scripts/autonomous_review/test_reviewer.py:75",
        "scripts/autonomous_review/test_reviewer.py:194",
        "scripts/business_value_test_index.py:130",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133"
      ]
    },
    "__tests__": {
      "value": "__tests__",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:33",
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/autonomous_review/test_reviewer.py:205",
        "scripts/autonomous_review/test_reviewer.py:321",
        "scripts/compliance/test_size_validator.py:130",
        "scripts/frontend_iterative_test_runner.py:591",
        "scripts/frontend_iterative_test_runner.py:594",
        "scripts/remove_test_stubs.py:78",
        "scripts/standardize_l3_test_names.py:60",
        "scripts/test_collection_audit.py:61"
      ]
    },
    "__tests__/auth": {
      "value": "__tests__/auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:37"
      ]
    },
    "__tests__/components": {
      "value": "__tests__/components",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:31",
        "scripts/test_frontend_ORIGINAL.py:33"
      ]
    },
    "__tests__/hooks": {
      "value": "__tests__/hooks",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:31",
        "scripts/test_frontend_ORIGINAL.py:34"
      ]
    },
    "__tests__/integration": {
      "value": "__tests__/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:32"
      ]
    },
    "__tests__/integration/critical-integration.test.tsx": {
      "value": "__tests__/integration/critical-integration.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:39"
      ]
    },
    "__tests__/lib": {
      "value": "__tests__/lib",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:31"
      ]
    },
    "__tests__/services": {
      "value": "__tests__/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:31"
      ]
    },
    "__tests__/services/webSocketService.test.ts": {
      "value": "__tests__/services/webSocketService.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:36"
      ]
    },
    "__tests__/store": {
      "value": "__tests__/store",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:31",
        "scripts/test_frontend_ORIGINAL.py:35"
      ]
    },
    "__tests__/system/startup.test.tsx": {
      "value": "__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:39"
      ]
    },
    "__tests__/utils": {
      "value": "__tests__/utils",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:31"
      ]
    },
    "_assertions() - Common assertions": {
      "value": "_assertions() - Common assertions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:219"
      ]
    },
    "_basic(self):\n        \"\"\"Test basic functionality of": {
      "value": "_basic(self):\n        \"\"\"Test basic functionality of",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:152"
      ]
    },
    "_capture_time": {
      "value": "_capture_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:80"
      ]
    },
    "_comprehensive": {
      "value": "_comprehensive",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:102"
      ]
    },
    "_core.py": {
      "value": "_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:419"
      ]
    },
    "_cpu_critical": {
      "value": "_cpu_critical",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:223"
      ]
    },
    "_create_message_handler_service": {
      "value": "_create_message_handler_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:61"
      ]
    },
    "_critical": {
      "value": "_critical",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:100"
      ]
    },
    "_current_file_path": {
      "value": "_current_file_path",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:352"
      ]
    },
    "_e2e.py": {
      "value": "_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:372"
      ]
    },
    "_edge_cases(self):\n        \"\"\"Test edge cases for": {
      "value": "_edge_cases(self):\n        \"\"\"Test edge cases for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:165"
      ]
    },
    "_error_handling(self):\n        \"\"\"Test error handling in": {
      "value": "_error_handling(self):\n        \"\"\"Test error handling in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:175"
      ]
    },
    "_extended.py": {
      "value": "_extended.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:426"
      ]
    },
    "_feature1.py": {
      "value": "_feature1.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:387"
      ]
    },
    "_feature2.py": {
      "value": "_feature2.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:388"
      ]
    },
    "_fixtures.py": {
      "value": "_fixtures.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:273",
        "scripts/compliance/test_refactor_helper.py:432"
      ]
    },
    "_functions.py": {
      "value": "_functions.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:472"
      ]
    },
    "_helper": {
      "value": "_helper",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:206"
      ]
    },
    "_helper_": {
      "value": "_helper_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:284"
      ]
    },
    "_helpers.py": {
      "value": "_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:275",
        "scripts/compliance/test_limits_checker.py:202",
        "scripts/compliance/test_size_validator.py:383"
      ]
    },
    "_integration.py": {
      "value": "_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:201",
        "scripts/compliance/test_size_validator.py:371"
      ]
    },
    "_integration_": {
      "value": "_integration_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:343"
      ]
    },
    "_l3": {
      "value": "_l3",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:98"
      ]
    },
    "_l3.py": {
      "value": "_l3.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:30"
      ]
    },
    "_latency_avg": {
      "value": "_latency_avg",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:106",
        "scripts/real_service_test_metrics.py:161"
      ]
    },
    "_latency_p95": {
      "value": "_latency_p95",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:107"
      ]
    },
    "_memory_critical": {
      "value": "_memory_critical",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:204"
      ]
    },
    "_memory_warning": {
      "value": "_memory_warning",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:213"
      ]
    },
    "_method": {
      "value": "_method",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:94"
      ]
    },
    "_original_getvalue": {
      "value": "_original_getvalue",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:145",
        "scripts/pytest_plugins.py:208",
        "scripts/pytest_plugins.py:214"
      ]
    },
    "_original_getvalue_patched": {
      "value": "_original_getvalue_patched",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:166",
        "scripts/pytest_plugins.py:214",
        "scripts/pytest_plugins.py:216"
      ]
    },
    "_original_pop_outerr_to_orig": {
      "value": "_original_pop_outerr_to_orig",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:202"
      ]
    },
    "_original_resume_capturing": {
      "value": "_original_resume_capturing",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:66",
        "scripts/pytest_plugins.py:198"
      ]
    },
    "_original_snap": {
      "value": "_original_snap",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:19",
        "scripts/pytest_plugins.py:129",
        "scripts/pytest_plugins.py:193",
        "scripts/pytest_plugins.py:205"
      ]
    },
    "_part": {
      "value": "_part",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:182",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "_part_": {
      "value": "_part_",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:472"
      ]
    },
    "_real": {
      "value": "_real",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:44"
      ]
    },
    "_redis_builder": {
      "value": "_redis_builder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:262",
        "scripts/test_redis_config_critical_failure.py:283"
      ]
    },
    "_refresh_with_race_protection": {
      "value": "_refresh_with_race_protection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:71"
      ]
    },
    "_relative_time": {
      "value": "_relative_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:81"
      ]
    },
    "_scenario_1() - First test case": {
      "value": "_scenario_1() - First test case",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:217"
      ]
    },
    "_scenario_2() - Second test case": {
      "value": "_scenario_2() - Second test case",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:218"
      ]
    },
    "_serialization_executor": {
      "value": "_serialization_executor",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:260",
        "scripts/test_intensive_serialization.py:357"
      ]
    },
    "_serialize_message_safely_async": {
      "value": "_serialize_message_safely_async",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:107",
        "scripts/test_async_serialization_direct.py:169",
        "scripts/test_async_serialization_direct.py:192",
        "scripts/test_async_serialization_direct.py:258",
        "scripts/test_intensive_serialization.py:177",
        "scripts/test_intensive_serialization.py:260",
        "scripts/test_intensive_serialization.py:355"
      ]
    },
    "_setup() - Test setup logic": {
      "value": "_setup() - Test setup logic",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:216"
      ]
    },
    "_test": {
      "value": "_test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121",
        "scripts/compliance/real_test_linter.py:237",
        "scripts/remove_test_stubs.py:99"
      ]
    },
    "_test.py": {
      "value": "_test.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:40",
        "scripts/autonomous_review/test_generator.py:89",
        "scripts/autonomous_review/test_reviewer.py:308",
        "scripts/business_value_test_index.py:184",
        "scripts/compliance/project_test_validator.py:121",
        "scripts/compliance/test_size_validator.py:163"
      ]
    },
    "_test_": {
      "value": "_test_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:121"
      ]
    },
    "_unit.py": {
      "value": "_unit.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:200",
        "scripts/compliance/test_size_validator.py:370"
      ]
    },
    "_user_": {
      "value": "_user_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:82"
      ]
    },
    "_user_id": {
      "value": "_user_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:82"
      ]
    },
    "_utilities.py": {
      "value": "_utilities.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:570"
      ]
    },
    "_utils.py": {
      "value": "_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:383",
        "scripts/auto_fix_test_violations.py:457"
      ]
    },
    "_websocket_enhanced": {
      "value": "_websocket_enhanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:60",
        "scripts/test_websocket_chat_simple.py:323",
        "scripts/test_websocket_chat_standalone.py:318"
      ]
    },
    "`": {
      "value": "`",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:591",
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:606",
        "scripts/analyze_test_overlap.py:607",
        "scripts/auto_fix_test_violations.py:885"
      ]
    },
    "` (line": {
      "value": "` (line",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "` (similarity:": {
      "value": "` (similarity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "` ↔ `": {
      "value": "` ↔ `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "```": {
      "value": "```",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:533",
        "scripts/compliance/real_test_requirements_enforcer.py:535",
        "scripts/continuous_e2e_test_runner.py:325",
        "scripts/continuous_e2e_test_runner.py:325",
        "scripts/test_failure_analyzer.py:402",
        "scripts/test_failure_analyzer.py:402",
        "scripts/test_failure_analyzer.py:405",
        "scripts/test_failure_analyzer.py:407",
        "scripts/test_verify_workflow_status.py:187",
        "scripts/test_verify_workflow_status.py:190"
      ]
    },
    "a": {
      "value": "a",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:313",
        "scripts/fix_test_batch.py:210",
        "scripts/test_failure_analyzer.py:410"
      ]
    },
    "a.b.c": {
      "value": "a.b.c",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:108",
        "auth_service/tests/test_auth_comprehensive_audit.py:151",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:173"
      ]
    },
    "a.b.c.d": {
      "value": "a.b.c.d",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:111"
      ]
    },
    "ab_testing_service.py": {
      "value": "ab_testing_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:127"
      ]
    },
    "abc": {
      "value": "abc",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:395"
      ]
    },
    "abc123": {
      "value": "abc123",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:192"
      ]
    },
    "abstractmethod": {
      "value": "abstractmethod",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211"
      ]
    },
    "access": {
      "value": "access",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:67",
        "auth_service/test_auth_direct.py:98",
        "auth_service/test_auth_direct.py:114",
        "auth_service/test_auth_direct.py:124",
        "auth_service/test_auth_direct.py:142",
        "auth_service/test_auth_direct.py:196",
        "auth_service/tests/test_auth_comprehensive_audit.py:74",
        "auth_service/tests/test_auth_comprehensive_audit.py:114",
        "auth_service/tests/test_auth_comprehensive_audit.py:133",
        "auth_service/tests/test_auth_comprehensive_audit.py:140"
      ]
    },
    "access-control": {
      "value": "access-control",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:79",
        "scripts/debug_cors_test.py:97",
        "scripts/test_cors_issue.py:24",
        "scripts/test_cors_issue.py:45",
        "scripts/test_cors_issue.py:67",
        "scripts/test_staging_cors.py:30",
        "scripts/test_staging_cors.py:57",
        "scripts/test_staging_cors.py:80"
      ]
    },
    "access-control-allow-credentials": {
      "value": "access-control-allow-credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:223"
      ]
    },
    "access-control-allow-headers": {
      "value": "access-control-allow-headers",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:269",
        "scripts/test_cors.py:234"
      ]
    },
    "access-control-allow-methods": {
      "value": "access-control-allow-methods",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:311",
        "scripts/staging_comprehensive_test.py:268",
        "scripts/staging_comprehensive_test.py:281",
        "scripts/test_cors.py:230"
      ]
    },
    "access-control-allow-origin": {
      "value": "access-control-allow-origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:310",
        "scripts/staging_comprehensive_test.py:267",
        "scripts/staging_comprehensive_test.py:280",
        "scripts/test_auth_integration.py:117",
        "scripts/test_cors.py:210",
        "scripts/test_staging_cors.py:61"
      ]
    },
    "access-control-max-age": {
      "value": "access-control-max-age",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:270",
        "scripts/test_cors.py:238"
      ]
    },
    "access_denied": {
      "value": "access_denied",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:250"
      ]
    },
    "access_token": {
      "value": "access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:193",
        "auth_service/tests/factories/token_factory.py:218",
        "auth_service/tests/test_auth_comprehensive_audit.py:533",
        "auth_service/tests/test_auth_comprehensive_audit.py:554",
        "auth_service/tests/test_auth_real_services_comprehensive.py:317",
        "auth_service/tests/test_auth_real_services_comprehensive.py:350",
        "auth_service/tests/test_auth_real_services_comprehensive.py:351",
        "auth_service/tests/test_auth_real_services_comprehensive.py:391",
        "auth_service/tests/test_auth_real_services_comprehensive.py:392",
        "auth_service/tests/test_critical_bugs.py:73"
      ]
    },
    "access_token=": {
      "value": "access_token=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:299"
      ]
    },
    "account_locked": {
      "value": "account_locked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:24"
      ]
    },
    "account_unlocked": {
      "value": "account_unlocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:25"
      ]
    },
    "accounts": {
      "value": "accounts",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:252",
        "scripts/setup_staging_test_account.py:316",
        "scripts/setup_staging_test_account.py:320",
        "scripts/test_staging_login_automated.py:137",
        "scripts/test_staging_login_automated.py:137",
        "scripts/test_staging_login_automated.py:138"
      ]
    },
    "accounts.google.com": {
      "value": "accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:239",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:385",
        "auth_service/tests/test_auth_comprehensive.py:174",
        "auth_service/tests/test_oauth_state_validation.py:91",
        "scripts/test_staging_auth_flow.py:125",
        "scripts/test_staging_login_automated.py:266"
      ]
    },
    "acess": {
      "value": "acess",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:88"
      ]
    },
    "acme-corp": {
      "value": "acme-corp",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:157"
      ]
    },
    "across": {
      "value": "across",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/test_secret_manager_builder_critical.py:219"
      ]
    },
    "act": {
      "value": "act",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:39",
        "scripts/test_workflows_with_act.py:113",
        "scripts/test_workflows_with_act.py:152"
      ]
    },
    "act-event-": {
      "value": "act-event-",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:198"
      ]
    },
    "action": {
      "value": "action",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:59",
        "auth_service/tests/test_session_security_cycles_36_40.py:231",
        "auth_service/tests/test_session_security_cycles_36_40.py:232",
        "auth_service/tests/test_session_security_cycles_36_40.py:233",
        "auth_service/tests/test_session_security_cycles_36_40.py:239",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "auth_service/tests/test_session_security_cycles_36_40.py:258",
        "scripts/test_dashboard.py:105"
      ]
    },
    "action_required": {
      "value": "action_required",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:53"
      ]
    },
    "actions": {
      "value": "actions",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:128",
        "scripts/test_adaptive_workflow_direct.py:130",
        "scripts/test_failure_analyzer.py:194",
        "scripts/test_failure_analyzer.py:202",
        "scripts/test_failure_analyzer.py:216",
        "scripts/test_failure_analyzer.py:228",
        "scripts/test_failure_analyzer.py:239",
        "scripts/test_failure_analyzer.py:246",
        "scripts/test_failure_analyzer.py:258",
        "scripts/test_failure_analyzer.py:270"
      ]
    },
    "actual": {
      "value": "actual",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:26",
        "scripts/test/verify_test_ports.py:27",
        "scripts/test/verify_test_ports.py:28",
        "scripts/test/verify_test_ports.py:29",
        "scripts/test/verify_test_ports.py:30",
        "scripts/test/verify_test_ports.py:36",
        "scripts/test/verify_test_ports.py:37",
        "scripts/test/verify_test_ports.py:38",
        "scripts/test/verify_test_ports.py:45",
        "scripts/test/verify_test_ports.py:47"
      ]
    },
    "actual_value": {
      "value": "actual_value",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:634",
        "scripts/auto_fix_test_sizes.py:637",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "add": {
      "value": "add",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:84"
      ]
    },
    "add_function": {
      "value": "add_function",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:45",
        "scripts/comprehensive_test_fixer.py:57",
        "scripts/comprehensive_test_fixer.py:317"
      ]
    },
    "additional variables available)": {
      "value": "additional variables available)",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:214"
      ]
    },
    "additional_headers": {
      "value": "additional_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:62",
        "scripts/test_websocket_cors_comprehensive.py:88"
      ]
    },
    "admin": {
      "value": "admin",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:175",
        "auth_service/tests/factories/permission_factory.py:224",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:68",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:76",
        "auth_service/tests/test_refresh_critical_fix.py:70",
        "auth_service/tests/test_refresh_critical_fix.py:94",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:123",
        "auth_service/tests/test_refresh_token_fix.py:93",
        "auth_service/tests/test_refresh_token_fix.py:151",
        "auth_service/tests/test_refresh_token_fix.py:166"
      ]
    },
    "admin'--": {
      "value": "admin'--",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:337"
      ]
    },
    "admin.py": {
      "value": "admin.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:75"
      ]
    },
    "admin:delete_users": {
      "value": "admin:delete_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:28"
      ]
    },
    "admin:read_users": {
      "value": "admin:read_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:26"
      ]
    },
    "admin:update_users": {
      "value": "admin:update_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:27"
      ]
    },
    "admin@netra.local": {
      "value": "admin@netra.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:116",
        "scripts/test_seed_data.py:249",
        "scripts/test_seed_data.py:270"
      ]
    },
    "administrative": {
      "value": "administrative",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "affected_services": {
      "value": "affected_services",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:42",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:465",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:474"
      ]
    },
    "after": {
      "value": "after",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:400"
      ]
    },
    "agent": {
      "value": "agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "scripts/analyze_test_mocks.py:40",
        "scripts/auto_fix_test_sizes.py:354",
        "scripts/auto_fix_test_sizes.py:355",
        "scripts/auto_fix_test_violations.py:499",
        "scripts/auto_fix_test_violations.py:500",
        "scripts/continuous_e2e_test_runner.py:27",
        "scripts/migrate_test_ids.py:90",
        "scripts/test_adaptive_workflow_direct.py:93",
        "scripts/test_agent_pipeline_simple.py:297"
      ]
    },
    "agent...": {
      "value": "agent...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:49"
      ]
    },
    "agent.test@staging.netrasystems.ai": {
      "value": "agent.test@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:90"
      ]
    },
    "agent_": {
      "value": "agent_",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:186"
      ]
    },
    "agent_completed": {
      "value": "agent_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:204",
        "scripts/test_agent_execution_websocket_integration.py:226",
        "scripts/test_agent_pipeline_simple.py:107",
        "scripts/test_cold_start_e2e.py:411",
        "scripts/test_standalone_websocket.py:105",
        "scripts/test_supervisor_execution_flow.py:140",
        "scripts/test_websocket_chat_simple.py:96",
        "scripts/test_websocket_chat_standalone.py:96",
        "scripts/test_websocket_direct.py:37",
        "scripts/test_websocket_direct.py:287"
      ]
    },
    "agent_create": {
      "value": "agent_create",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:309"
      ]
    },
    "agent_execute": {
      "value": "agent_execute",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:54"
      ]
    },
    "agent_flow": {
      "value": "agent_flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:154"
      ]
    },
    "agent_id": {
      "value": "agent_id",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:88",
        "scripts/websocket_performance_standalone_test.py:186"
      ]
    },
    "agent_name": {
      "value": "agent_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:95",
        "scripts/test_agent_execution_websocket_integration.py:177",
        "scripts/test_agent_pipeline_simple.py:75",
        "scripts/test_supervisor_execution_flow.py:42",
        "scripts/test_supervisor_execution_flow.py:43"
      ]
    },
    "agent_orchestration": {
      "value": "agent_orchestration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:97",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:468",
        "scripts/business_value_test_index.py:491",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:705"
      ]
    },
    "agent_started": {
      "value": "agent_started",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:200",
        "scripts/test_agent_execution_websocket_integration.py:223",
        "scripts/test_agent_pipeline_simple.py:106",
        "scripts/test_cold_start_e2e.py:411",
        "scripts/test_standalone_websocket.py:105",
        "scripts/test_supervisor_execution_flow.py:136",
        "scripts/test_websocket_chat_simple.py:76",
        "scripts/test_websocket_chat_standalone.py:76",
        "scripts/test_websocket_direct.py:33",
        "scripts/test_websocket_direct.py:283"
      ]
    },
    "agent_test": {
      "value": "agent_test",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:91"
      ]
    },
    "agent_thinking": {
      "value": "agent_thinking",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:201",
        "scripts/test_standalone_websocket.py:105",
        "scripts/test_supervisor_execution_flow.py:137",
        "scripts/test_websocket_chat_simple.py:80",
        "scripts/test_websocket_chat_standalone.py:80",
        "scripts/test_websocket_direct.py:34",
        "scripts/test_websocket_injection_fix_complete.py:99",
        "scripts/test_websocket_standalone.py:82",
        "scripts/websocket_performance_standalone_test.py:237"
      ]
    },
    "agent_type": {
      "value": "agent_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:243",
        "scripts/test_agent_pipeline_simple.py:250",
        "scripts/test_agent_pipeline_simple.py:257",
        "scripts/test_agent_pipeline_simple.py:264"
      ]
    },
    "agent_update": {
      "value": "agent_update",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:21"
      ]
    },
    "agents": {
      "value": "agents",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:67",
        "scripts/rapid_test_consolidation.py:28",
        "scripts/test/test_supervisor_import.py:48",
        "scripts/test_agent_pipeline_simple.py:350",
        "scripts/test_backend_optimized.py:65",
        "scripts/test_staging_startup.py:86",
        "scripts/unified_test_config.py:63",
        "scripts/unified_test_config.py:65",
        "scripts/unified_test_config.py:69",
        "scripts/unified_test_config.py:116"
      ]
    },
    "agents...": {
      "value": "agents...",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:287"
      ]
    },
    "agents.py": {
      "value": "agents.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:71"
      ]
    },
    "agents/corpus_admin": {
      "value": "agents/corpus_admin",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:381"
      ]
    },
    "agents/test_example_prompts_e2e_real.py": {
      "value": "agents/test_example_prompts_e2e_real.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:206"
      ]
    },
    "agents_executed": {
      "value": "agents_executed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:317",
        "scripts/test_agent_pipeline_simple.py:378",
        "scripts/test_agent_pipeline_simple.py:380"
      ]
    },
    "agents_involved": {
      "value": "agents_involved",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:103",
        "scripts/test_agent_pipeline_simple.py:395",
        "scripts/test_agent_pipeline_simple.py:411",
        "scripts/test_agent_pipeline_simple.py:411"
      ]
    },
    "agent|supervisor|executor|chain": {
      "value": "agent|supervisor|executor|chain",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:97"
      ]
    },
    "aggressive": {
      "value": "aggressive",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:55",
        "scripts/test_backend_optimized.py:175",
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "ai": {
      "value": "ai",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:354"
      ]
    },
    "aiohttp not available, falling back to port test for": {
      "value": "aiohttp not available, falling back to port test for",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:171"
      ]
    },
    "alembic": {
      "value": "alembic",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:126",
        "scripts/test_staging_migrations.py:148",
        "scripts/test_staging_migrations.py:248",
        "scripts/test_staging_migrations.py:249",
        "scripts/test_staging_migrations.py:250"
      ]
    },
    "alembic.ini": {
      "value": "alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:107"
      ]
    },
    "alembic/alembic.ini": {
      "value": "alembic/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:109"
      ]
    },
    "alerting_service.py": {
      "value": "alerting_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:133"
      ]
    },
    "algo-test": {
      "value": "algo-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:428"
      ]
    },
    "alignment_report.json": {
      "value": "alignment_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:415"
      ]
    },
    "all": {
      "value": "all",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:417",
        "scripts/business_value_test_index.py:459",
        "scripts/test_backend_ORIGINAL.py:368",
        "scripts/test_staging_login_automated.py:396",
        "scripts/test_staging_login_automated.py:397",
        "scripts/test_staging_login_automated.py:410",
        "scripts/test_staging_login_automated.py:425"
      ]
    },
    "all_failures": {
      "value": "all_failures",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:127"
      ]
    },
    "all_passed": {
      "value": "all_passed",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:115"
      ]
    },
    "allergy_season": {
      "value": "allergy_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "allow_dev_bypass": {
      "value": "allow_dev_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:219",
        "scripts/test_docker_websocket_fix.py:275"
      ]
    },
    "already exists in": {
      "value": "already exists in",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:192"
      ]
    },
    "already.used.token": {
      "value": "already.used.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:305",
        "auth_service/tests/unit/test_refresh_endpoint.py:307"
      ]
    },
    "also_not_a_number": {
      "value": "also_not_a_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:276"
      ]
    },
    "alternation_score": {
      "value": "alternation_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:84",
        "scripts/test_dashboard.py:85",
        "scripts/test_execution_tracker.py:448",
        "scripts/test_execution_tracker.py:741",
        "scripts/test_execution_tracker.py:742"
      ]
    },
    "alternative": {
      "value": "alternative",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:411"
      ]
    },
    "alternative_methods": {
      "value": "alternative_methods",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:415"
      ]
    },
    "always": {
      "value": "always",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:170"
      ]
    },
    "analysis": {
      "value": "analysis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:35",
        "scripts/test_agent_execution_websocket_integration.py:366",
        "scripts/test_agent_recovery_simple.py:45"
      ]
    },
    "analysis_completed": {
      "value": "analysis_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:251"
      ]
    },
    "analysis_result": {
      "value": "analysis_result",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:366"
      ]
    },
    "analysis_tool": {
      "value": "analysis_tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:359",
        "scripts/test_agent_execution_websocket_integration.py:379",
        "scripts/test_websocket_standalone.py:145",
        "scripts/test_websocket_standalone.py:149"
      ]
    },
    "analysis_type": {
      "value": "analysis_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:380",
        "scripts/test_agent_pipeline_simple.py:193"
      ]
    },
    "analytics": {
      "value": "analytics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:100",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:471",
        "scripts/business_value_test_index.py:494"
      ]
    },
    "analytics.py": {
      "value": "analytics.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:73"
      ]
    },
    "analytics_service": {
      "value": "analytics_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:30"
      ]
    },
    "analytics|metrics|dashboard|reporting": {
      "value": "analytics|metrics|dashboard|reporting",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:100"
      ]
    },
    "analyze": {
      "value": "analyze",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:672",
        "scripts/compliance/test_refactor_helper.py:699"
      ]
    },
    "analyzed": {
      "value": "analyzed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:377"
      ]
    },
    "analyzing:": {
      "value": "analyzing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:138"
      ]
    },
    "and": {
      "value": "and",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:360"
      ]
    },
    "and root directory": {
      "value": "and root directory",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:489"
      ]
    },
    "anomaly_detected": {
      "value": "anomaly_detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:246",
        "auth_service/tests/test_session_security_cycles_36_40.py:266"
      ]
    },
    "anomaly_types": {
      "value": "anomaly_types",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:267",
        "auth_service/tests/test_session_security_cycles_36_40.py:268"
      ]
    },
    "anonymous": {
      "value": "anonymous",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:47"
      ]
    },
    "another temp": {
      "value": "another temp",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:291"
      ]
    },
    "anthropic": {
      "value": "anthropic",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "api": {
      "value": "api",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49",
        "scripts/add_pytest_markers.py:27",
        "scripts/auto_fix_test_sizes.py:344",
        "scripts/auto_fix_test_sizes.py:345",
        "scripts/auto_fix_test_violations.py:501",
        "scripts/auto_fix_test_violations.py:502",
        "scripts/autonomous_review/test_reviewer.py:225",
        "scripts/batch_test_generator.py:82"
      ]
    },
    "api key": {
      "value": "api key",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:135"
      ]
    },
    "api_base": {
      "value": "api_base",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:132",
        "scripts/unified_test_config.py:140",
        "scripts/unified_test_config.py:148",
        "scripts/unified_test_config.py:156",
        "scripts/unified_test_config.py:313",
        "scripts/unified_test_config.py:314"
      ]
    },
    "api_call": {
      "value": "api_call",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:233",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "scripts/test_seed_data.py:352"
      ]
    },
    "api_endpoint_": {
      "value": "api_endpoint_",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:212"
      ]
    },
    "api_key": {
      "value": "api_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/setup_staging_test_account.py:88",
        "scripts/setup_staging_test_account.py:87",
        "scripts/setup_staging_test_account.py:191",
        "scripts/setup_staging_test_account.py:194",
        "scripts/setup_staging_test_account.py:199",
        "scripts/setup_staging_test_account.py:231",
        "scripts/setup_staging_test_account.py:253",
        "scripts/setup_staging_test_account.py:316",
        "scripts/setup_staging_test_account.py:316"
      ]
    },
    "api_keys": {
      "value": "api_keys",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:134"
      ]
    },
    "api_response_time_ms": {
      "value": "api_response_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:300"
      ]
    },
    "api_routes": {
      "value": "api_routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:46"
      ]
    },
    "api_url": {
      "value": "api_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:193",
        "scripts/test_cold_start_e2e.py:194",
        "scripts/test_cold_start_e2e.py:436",
        "scripts/test_cold_start_e2e.py:441"
      ]
    },
    "app": {
      "value": "app",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:91",
        "scripts/autonomous_review/test_reviewer.py:187",
        "scripts/autonomous_review/test_reviewer.py:310",
        "scripts/batch_test_generator.py:376",
        "scripts/business_value_test_index.py:404",
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:67",
        "scripts/compliance/demo_test_size_enforcement.py:68",
        "scripts/compliance/demo_test_size_enforcement.py:69",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "app.": {
      "value": "app.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:129",
        "scripts/comprehensive_test_fixer.py:225"
      ]
    },
    "app.config": {
      "value": "app.config",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:85",
        "scripts/test_staging_config.py:86"
      ]
    },
    "app.core.secret_manager": {
      "value": "app.core.secret_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:87",
        "scripts/test_staging_config.py:88"
      ]
    },
    "app.main:app": {
      "value": "app.main:app",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:55"
      ]
    },
    "app.staging.netra.ai": {
      "value": "app.staging.netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:144"
      ]
    },
    "app/": {
      "value": "app/",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:233",
        "scripts/comprehensive_test_fixer.py:235"
      ]
    },
    "app/agents/corpus_admin/": {
      "value": "app/agents/corpus_admin/",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:62"
      ]
    },
    "app/api/v1/endpoints/": {
      "value": "app/api/v1/endpoints/",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:80"
      ]
    },
    "app/auth": {
      "value": "app/auth",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/core": {
      "value": "app/core",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/core/": {
      "value": "app/core/",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:115"
      ]
    },
    "app/db": {
      "value": "app/db",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/db/base.py": {
      "value": "app/db/base.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:155"
      ]
    },
    "app/db/connection_pool.py": {
      "value": "app/db/connection_pool.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:156"
      ]
    },
    "app/db/migrations.py": {
      "value": "app/db/migrations.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:155"
      ]
    },
    "app/db/query_builder.py": {
      "value": "app/db/query_builder.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:156"
      ]
    },
    "app/db/session.py": {
      "value": "app/db/session.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:155"
      ]
    },
    "app/llm": {
      "value": "app/llm",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/middleware/tool_permission_middleware.py": {
      "value": "app/middleware/tool_permission_middleware.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:80"
      ]
    },
    "app/models/agent.py": {
      "value": "app/models/agent.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:150"
      ]
    },
    "app/models/corpus.py": {
      "value": "app/models/corpus.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:150"
      ]
    },
    "app/models/document.py": {
      "value": "app/models/document.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:150"
      ]
    },
    "app/models/message.py": {
      "value": "app/models/message.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:149"
      ]
    },
    "app/models/run.py": {
      "value": "app/models/run.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:149"
      ]
    },
    "app/models/thread.py": {
      "value": "app/models/thread.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:149"
      ]
    },
    "app/pytest.ini": {
      "value": "app/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:13"
      ]
    },
    "app/routes/factory_compliance.py": {
      "value": "app/routes/factory_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:89"
      ]
    },
    "app/schemas/ToolPermission.py": {
      "value": "app/schemas/ToolPermission.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:115"
      ]
    },
    "app/schemas/agent.py": {
      "value": "app/schemas/agent.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:152"
      ]
    },
    "app/schemas/corpus.py": {
      "value": "app/schemas/corpus.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:152"
      ]
    },
    "app/schemas/document.py": {
      "value": "app/schemas/document.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:152"
      ]
    },
    "app/schemas/message.py": {
      "value": "app/schemas/message.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:151"
      ]
    },
    "app/schemas/run.py": {
      "value": "app/schemas/run.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:151"
      ]
    },
    "app/schemas/thread.py": {
      "value": "app/schemas/thread.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:151"
      ]
    },
    "app/services/": {
      "value": "app/services/",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:140"
      ]
    },
    "app/services/factory_status/factory_status_integration.py": {
      "value": "app/services/factory_status/factory_status_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:98"
      ]
    },
    "app/tests": {
      "value": "app/tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:123",
        "scripts/compliance/project_test_validator.py:60",
        "scripts/fix_test_syntax_errors.py:225"
      ]
    },
    "app/tests/**/*.py": {
      "value": "app/tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:54"
      ]
    },
    "app/tests/agents": {
      "value": "app/tests/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:66",
        "scripts/test_failure_scanner.py:42"
      ]
    },
    "app/tests/core": {
      "value": "app/tests/core",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_failure_scanner.py:38"
      ]
    },
    "app/tests/core/test_config_manager.py": {
      "value": "app/tests/core/test_config_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:32"
      ]
    },
    "app/tests/core/test_config_manager.py::TestConfigManager::test_initialization": {
      "value": "app/tests/core/test_config_manager.py::TestConfigManager::test_initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:87"
      ]
    },
    "app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error": {
      "value": "app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:86"
      ]
    },
    "app/tests/e2e": {
      "value": "app/tests/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:78"
      ]
    },
    "app/tests/integration": {
      "value": "app/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:60",
        "scripts/test_failure_scanner.py:45"
      ]
    },
    "app/tests/models": {
      "value": "app/tests/models",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:46"
      ]
    },
    "app/tests/performance": {
      "value": "app/tests/performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:72"
      ]
    },
    "app/tests/routes": {
      "value": "app/tests/routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:60",
        "scripts/test_failure_scanner.py:39"
      ]
    },
    "app/tests/routes/test_health_route.py": {
      "value": "app/tests/routes/test_health_route.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:85"
      ]
    },
    "app/tests/services": {
      "value": "app/tests/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_failure_scanner.py:44"
      ]
    },
    "app/tests/services/agents/test_sub_agent.py::test_agent_node_is_coroutine": {
      "value": "app/tests/services/agents/test_sub_agent.py::test_agent_node_is_coroutine",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:28"
      ]
    },
    "app/tests/services/agents/test_supervisor_service.py::test_supervisor_end_to_end": {
      "value": "app/tests/services/agents/test_supervisor_service.py::test_supervisor_end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:29"
      ]
    },
    "app/tests/services/agents/test_tools.py": {
      "value": "app/tests/services/agents/test_tools.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:30"
      ]
    },
    "app/tests/services/apex_optimizer_agent/test_tool_builder.py": {
      "value": "app/tests/services/apex_optimizer_agent/test_tool_builder.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:31"
      ]
    },
    "app/tests/services/database": {
      "value": "app/tests/services/database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:41"
      ]
    },
    "app/tests/services/test_security_service.py": {
      "value": "app/tests/services/test_security_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:40"
      ]
    },
    "app/tests/test_agent_service_critical.py": {
      "value": "app/tests/test_agent_service_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:96"
      ]
    },
    "app/tests/test_api_endpoints_critical.py": {
      "value": "app/tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:95"
      ]
    },
    "app/tests/unit": {
      "value": "app/tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54"
      ]
    },
    "app/tests/utils": {
      "value": "app/tests/utils",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:47"
      ]
    },
    "app/tests/websocket": {
      "value": "app/tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:43"
      ]
    },
    "app/utils/crypto_utils.py": {
      "value": "app/utils/crypto_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:154"
      ]
    },
    "app/utils/datetime_utils.py": {
      "value": "app/utils/datetime_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:153"
      ]
    },
    "app/utils/file_utils.py": {
      "value": "app/utils/file_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:153"
      ]
    },
    "app/utils/json_utils.py": {
      "value": "app/utils/json_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:154"
      ]
    },
    "app/utils/string_utils.py": {
      "value": "app/utils/string_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:153"
      ]
    },
    "app/utils/validation_utils.py": {
      "value": "app/utils/validation_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:154"
      ]
    },
    "app/websocket": {
      "value": "app/websocket",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:25",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:23"
      ]
    },
    "app/websocket/": {
      "value": "app/websocket/",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:97"
      ]
    },
    "append": {
      "value": "append",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:426"
      ]
    },
    "application/json": {
      "value": "application/json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:136",
        "auth_service/tests/test_auth_comprehensive.py:490",
        "auth_service/tests/test_auth_comprehensive_audit.py:285",
        "auth_service/tests/test_auth_real_services_comprehensive.py:445",
        "auth_service/tests/test_critical_bugs.py:101",
        "auth_service/tests/test_critical_bugs.py:146",
        "auth_service/tests/test_critical_bugs.py:194",
        "auth_service/tests/test_critical_bugs.py:224",
        "auth_service/tests/test_critical_bugs.py:272",
        "auth_service/tests/test_critical_bugs.py:314"
      ]
    },
    "application/json; charset=utf-8": {
      "value": "application/json; charset=utf-8",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:109"
      ]
    },
    "applied": {
      "value": "applied",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:123"
      ]
    },
    "approach": {
      "value": "approach",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:54",
        "scripts/test_failure_analyzer.py:193",
        "scripts/test_failure_analyzer.py:201",
        "scripts/test_failure_analyzer.py:215",
        "scripts/test_failure_analyzer.py:227",
        "scripts/test_failure_analyzer.py:238",
        "scripts/test_failure_analyzer.py:245",
        "scripts/test_failure_analyzer.py:257",
        "scripts/test_failure_analyzer.py:269",
        "scripts/test_failure_analyzer.py:294"
      ]
    },
    "archive": {
      "value": "archive",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:23"
      ]
    },
    "are critical/high severity - immediate action required": {
      "value": "are critical/high severity - immediate action required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:448"
      ]
    },
    "args": {
      "value": "args",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:155",
        "scripts/test_frontend_simple.py:78"
      ]
    },
    "args_kwargs_stub": {
      "value": "args_kwargs_stub",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:196"
      ]
    },
    "args_kwargs_stubs": {
      "value": "args_kwargs_stubs",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:61",
        "scripts/remove_test_stubs.py:188"
      ]
    },
    "arr_impact": {
      "value": "arr_impact",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:98",
        "scripts/test_websocket_injection_fix_complete.py:506",
        "scripts/test_websocket_injection_fix_complete.py:510"
      ]
    },
    "array": {
      "value": "array",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:124"
      ]
    },
    "array_": {
      "value": "array_",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:38"
      ]
    },
    "arrays": {
      "value": "arrays",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:49"
      ]
    },
    "asgi3": {
      "value": "asgi3",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:135"
      ]
    },
    "assert": {
      "value": "assert",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:211",
        "scripts/analyze_test_overlap.py:215",
        "scripts/auto_fix_test_sizes.py:503",
        "scripts/auto_fix_test_violations.py:638",
        "scripts/compliance/test_fixer.py:280",
        "scripts/team_updates_test_analyzer.py:128"
      ]
    },
    "assert (.+)": {
      "value": "assert (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:179"
      ]
    },
    "assert \\\\1": {
      "value": "assert \\\\1",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:250"
      ]
    },
    "assert \\\\1 != \\\\2": {
      "value": "assert \\\\1 != \\\\2",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:249"
      ]
    },
    "assert \\\\1 == \\\\2": {
      "value": "assert \\\\1 == \\\\2",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:248"
      ]
    },
    "assert \\\\1 is None": {
      "value": "assert \\\\1 is None",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:252"
      ]
    },
    "assert \\\\1 is not None": {
      "value": "assert \\\\1 is not None",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:253"
      ]
    },
    "assert not \\\\1": {
      "value": "assert not \\\\1",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:251"
      ]
    },
    "assertion": {
      "value": "assertion",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:162",
        "scripts/test_failure_analyzer.py:102",
        "scripts/test_failure_analyzer.py:104"
      ]
    },
    "assertion failed": {
      "value": "assertion failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:188"
      ]
    },
    "assertion_error": {
      "value": "assertion_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:103",
        "scripts/test_failure_analyzer.py:226"
      ]
    },
    "assertion_similarity": {
      "value": "assertion_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:634"
      ]
    },
    "assistant": {
      "value": "assistant",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:82"
      ]
    },
    "async": {
      "value": "async",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:569",
        "scripts/batch_test_generator.py:100",
        "scripts/batch_test_generator.py:176",
        "scripts/comprehensive_test_fixer.py:98",
        "scripts/comprehensive_test_fixer.py:108",
        "scripts/comprehensive_test_fixer.py:117",
        "scripts/comprehensive_test_fixer.py:126",
        "scripts/comprehensive_test_fixer.py:135",
        "scripts/comprehensive_test_fixer.py:144",
        "scripts/comprehensive_test_fixer.py:161"
      ]
    },
    "async def": {
      "value": "async def",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:570",
        "scripts/comprehensive_test_fixer.py:153",
        "scripts/comprehensive_test_fixer.py:191",
        "scripts/comprehensive_test_fixer.py:248"
      ]
    },
    "async def test_": {
      "value": "async def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:90",
        "scripts/e2e_test_fixer.py:145"
      ]
    },
    "async def test_\\w+": {
      "value": "async def test_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:91"
      ]
    },
    "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$": {
      "value": "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:69"
      ]
    },
    "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$": {
      "value": "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:67"
      ]
    },
    "async\\s+def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{": {
      "value": "async\\s+def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:62"
      ]
    },
    "async_tests": {
      "value": "async_tests",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:96"
      ]
    },
    "async_timing_issues": {
      "value": "async_timing_issues",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:106",
        "scripts/frontend_iterative_test_runner.py:422",
        "scripts/frontend_iterative_test_runner.py:462",
        "scripts/frontend_iterative_test_runner.py:490"
      ]
    },
    "asyncio": {
      "value": "asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:533",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "asyncio.sleep": {
      "value": "asyncio.sleep",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:106",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:126"
      ]
    },
    "asyncio\\.sleep\\(": {
      "value": "asyncio\\.sleep\\(",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:21"
      ]
    },
    "asyncio\\.sleep\\(([^)]+)\\)": {
      "value": "asyncio\\.sleep\\(([^)]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:32"
      ]
    },
    "asyncpg": {
      "value": "asyncpg",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_database_url_builder_comprehensive.py:169",
        "scripts/test_ssl_certificates_staging.py:175",
        "scripts/test_ssl_certificates_staging.py:245"
      ]
    },
    "asyncpg.connect": {
      "value": "asyncpg.connect",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:173"
      ]
    },
    "at +": {
      "value": "at +",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:89"
      ]
    },
    "at line": {
      "value": "at line",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:192"
      ]
    },
    "at line 810 in websocket_core/manager.py with the async version:": {
      "value": "at line 810 in websocket_core/manager.py with the async version:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:177"
      ]
    },
    "attacker-controlled-session": {
      "value": "attacker-controlled-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:146"
      ]
    },
    "attempt": {
      "value": "attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:194",
        "scripts/test_agent_orchestration_recovery.py:203",
        "scripts/test_agent_orchestration_recovery.py:210"
      ]
    },
    "attempt_number": {
      "value": "attempt_number",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:94"
      ]
    },
    "attempts": {
      "value": "attempts",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:217"
      ]
    },
    "attempts:": {
      "value": "attempts:",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:72",
        "scripts/test_seed_data.py:87",
        "scripts/test_seed_data.py:102"
      ]
    },
    "attr": {
      "value": "attr",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:193",
        "scripts/analyze_test_overlap.py:213"
      ]
    },
    "aud": {
      "value": "aud",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:66"
      ]
    },
    "audit_service.py": {
      "value": "audit_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:126"
      ]
    },
    "auth": {
      "value": "auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:175",
        "scripts/analyze_test_mocks.py:44",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/auto_fix_test_sizes.py:339",
        "scripts/auto_fix_test_violations.py:493",
        "scripts/autonomous_review/test_reviewer.py:231",
        "scripts/e2e_test_fixer.py:126",
        "scripts/manage_test_services.py:54",
        "scripts/setup_e2e_test_ports.py:88",
        "scripts/setup_e2e_test_ports.py:100"
      ]
    },
    "auth-service": {
      "value": "auth-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:218",
        "auth_service/tests/auth-service-down-critical-scenarios.py:240",
        "auth_service/tests/auth-service-down-critical-scenarios.py:512"
      ]
    },
    "auth-service-staging": {
      "value": "auth-service-staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:41",
        "auth_service/test_url_construction.py:42"
      ]
    },
    "auth-service-test": {
      "value": "auth-service-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:61"
      ]
    },
    "auth.py": {
      "value": "auth.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:71"
      ]
    },
    "auth.staging": {
      "value": "auth.staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:197"
      ]
    },
    "auth@example.com": {
      "value": "auth@example.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:66"
      ]
    },
    "authUrl": {
      "value": "authUrl",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:153"
      ]
    },
    "auth_bypass": {
      "value": "auth_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:76"
      ]
    },
    "auth_bypass_tests": {
      "value": "auth_bypass_tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:30",
        "scripts/test_docker_websocket_fix.py:218",
        "scripts/test_docker_websocket_fix.py:232",
        "scripts/test_docker_websocket_fix.py:270",
        "scripts/test_docker_websocket_fix.py:317"
      ]
    },
    "auth_code_": {
      "value": "auth_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:238"
      ]
    },
    "auth_conftest_real": {
      "value": "auth_conftest_real",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:57",
        "auth_service/tests/conftest.py:58",
        "auth_service/tests/conftest.py:59",
        "auth_service/tests/conftest.py:60",
        "auth_service/tests/conftest.py:61",
        "auth_service/tests/conftest.py:64",
        "auth_service/tests/conftest.py:65",
        "auth_service/tests/conftest.py:66",
        "auth_service/tests/conftest.py:67",
        "auth_service/tests/conftest.py:68"
      ]
    },
    "auth_core.fake_module": {
      "value": "auth_core.fake_module",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:223"
      ]
    },
    "auth_core.test_utils": {
      "value": "auth_core.test_utils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:90"
      ]
    },
    "auth_handler.py": {
      "value": "auth_handler.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:89"
      ]
    },
    "auth_issue": {
      "value": "auth_issue",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:179"
      ]
    },
    "auth_load_time": {
      "value": "auth_load_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:418"
      ]
    },
    "auth_provider": {
      "value": "auth_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:74",
        "auth_service/tests/factories/user_factory.py:40",
        "auth_service/tests/utils/assertion_helpers.py:92",
        "auth_service/tests/utils/assertion_helpers.py:105",
        "auth_service/tests/utils/assertion_helpers.py:106"
      ]
    },
    "auth_required": {
      "value": "auth_required",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:57"
      ]
    },
    "auth_routes import not found": {
      "value": "auth_routes import not found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:348"
      ]
    },
    "auth_routes is missing critical import:": {
      "value": "auth_routes is missing critical import:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:144"
      ]
    },
    "auth_service": {
      "value": "auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:218",
        "auth_service/tests/auth-service-down-critical-scenarios.py:240",
        "auth_service/tests/auth-service-down-critical-scenarios.py:512",
        "auth_service/tests/auth-service-down-critical-scenarios.py:526",
        "auth_service/tests/auth-service-down-critical-scenarios.py:547",
        "scripts/auto_fix_test_violations.py:93",
        "scripts/business_value_test_index.py:443",
        "scripts/compliance/fake_test_scanner.py:56",
        "scripts/compliance/test_size_validator.py:129",
        "scripts/remove_duplicate_test_setup.py:39"
      ]
    },
    "auth_service.auth_core.config.AuthConfig.get_google_client_id": {
      "value": "auth_service.auth_core.config.AuthConfig.get_google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:85",
        "auth_service/tests/test_oauth_state_validation.py:108",
        "auth_service/tests/test_oauth_state_validation.py:152",
        "auth_service/tests/test_oauth_state_validation.py:171",
        "auth_service/tests/test_oauth_state_validation.py:233"
      ]
    },
    "auth_service.auth_core.config.AuthConfig.get_google_client_secret": {
      "value": "auth_service.auth_core.config.AuthConfig.get_google_client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:86",
        "auth_service/tests/test_oauth_state_validation.py:109",
        "auth_service/tests/test_oauth_state_validation.py:153",
        "auth_service/tests/test_oauth_state_validation.py:172",
        "auth_service/tests/test_oauth_state_validation.py:234"
      ]
    },
    "auth_service.auth_core.database.connection.auth_db": {
      "value": "auth_service.auth_core.database.connection.auth_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:32"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.AuthUserRepository": {
      "value": "auth_service.auth_core.routes.auth_routes.AuthUserRepository",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:281"
      ]
    },
    "auth_service.auth_core.routes.auth_routes._sync_user_to_main_db": {
      "value": "auth_service.auth_core.routes.auth_routes._sync_user_to_main_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:135",
        "auth_service/tests/test_oauth_state_validation.py:289"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_db.create_tables": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_db.create_tables",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:133",
        "auth_service/tests/test_oauth_state_validation.py:279"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_db.get_session": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_db.get_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:134",
        "auth_service/tests/test_oauth_state_validation.py:280"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_service": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:22"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_service.refresh_tokens": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_service.refresh_tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:50",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:67",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:82",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:119",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:133",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:181",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:208",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:297"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.get_db_session": {
      "value": "auth_service.auth_core.routes.auth_routes.get_db_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:56"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.jwt_manager": {
      "value": "auth_service.auth_core.routes.auth_routes.jwt_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:36",
        "auth_service/tests/test_refresh_endpoint_integration.py:99"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.logger": {
      "value": "auth_service.auth_core.routes.auth_routes.logger",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:312"
      ]
    },
    "auth_service.auth_core.secret_loader.AuthSecretLoader._load_from_secret_manager": {
      "value": "auth_service.auth_core.secret_loader.AuthSecretLoader._load_from_secret_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:85",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:322"
      ]
    },
    "auth_service.auth_core.secret_loader.secretmanager": {
      "value": "auth_service.auth_core.secret_loader.secretmanager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:38",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:294"
      ]
    },
    "auth_service.auth_core.security.oauth_security.time": {
      "value": "auth_service.auth_core.security.oauth_security.time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:193"
      ]
    },
    "auth_service.auth_core.services.auth_service.AuthUserRepository": {
      "value": "auth_service.auth_core.services.auth_service.AuthUserRepository",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:123",
        "auth_service/tests/test_signup_flow_comprehensive.py:152",
        "auth_service/tests/test_signup_flow_comprehensive.py:200",
        "auth_service/tests/test_signup_flow_comprehensive.py:339",
        "auth_service/tests/test_signup_flow_comprehensive.py:376"
      ]
    },
    "auth_service.main": {
      "value": "auth_service.main",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:534"
      ]
    },
    "auth_service.nonexistent.module": {
      "value": "auth_service.nonexistent.module",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:222"
      ]
    },
    "auth_service.test_framework.test_managers": {
      "value": "auth_service.test_framework.test_managers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:88"
      ]
    },
    "auth_service.tests.conftest.initialize_test_database": {
      "value": "auth_service.tests.conftest.initialize_test_database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:41"
      ]
    },
    "auth_service/app": {
      "value": "auth_service/app",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:177"
      ]
    },
    "auth_service/main.py": {
      "value": "auth_service/main.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:148"
      ]
    },
    "auth_service/test_hot_reload_marker.py": {
      "value": "auth_service/test_hot_reload_marker.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:106"
      ]
    },
    "auth_service/tests": {
      "value": "auth_service/tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:42",
        "scripts/compliance/project_test_validator.py:62",
        "scripts/fix_test_syntax_errors.py:227",
        "scripts/migrate_test_environment_access.py:366",
        "scripts/validate_llm_test_models.py:43"
      ]
    },
    "auth_service/tests/conftest.py": {
      "value": "auth_service/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:14"
      ]
    },
    "auth_service/tests/test_auth_port_configuration.py": {
      "value": "auth_service/tests/test_auth_port_configuration.py",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:95"
      ]
    },
    "auth_service_health": {
      "value": "auth_service_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:49",
        "scripts/test_oauth_local.py:134",
        "scripts/test_oauth_local.py:407",
        "scripts/test_oauth_local.py:407"
      ]
    },
    "auth_service_url": {
      "value": "auth_service_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:37",
        "scripts/test_backend_auth_config.py:38",
        "scripts/test_backend_auth_config.py:55",
        "scripts/test_backend_auth_config.py:56",
        "scripts/test_backend_auth_config.py:107",
        "scripts/test_backend_auth_config.py:108"
      ]
    },
    "auth_services": {
      "value": "auth_services",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:45"
      ]
    },
    "auth_service|AuthService": {
      "value": "auth_service|AuthService",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:443"
      ]
    },
    "auth_status": {
      "value": "auth_status",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:168"
      ]
    },
    "auth_success": {
      "value": "auth_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:298"
      ]
    },
    "auth_test_db": {
      "value": "auth_test_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:69"
      ]
    },
    "auth_token": {
      "value": "auth_token",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:55",
        "scripts/setup_staging_test_account.py:170"
      ]
    },
    "auth_url": {
      "value": "auth_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:288",
        "scripts/test_oauth_local.py:460"
      ]
    },
    "auth_working": {
      "value": "auth_working",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:364"
      ]
    },
    "authenticated": {
      "value": "authenticated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:582",
        "scripts/setup_staging_test_account.py:142",
        "scripts/test_staging_login_automated.py:127",
        "scripts/test_staging_login_automated.py:140"
      ]
    },
    "authentication": {
      "value": "authentication",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:95",
        "scripts/business_value_test_index.py:421",
        "scripts/business_value_test_index.py:468",
        "scripts/business_value_test_index.py:490",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:705",
        "scripts/test_websocket_dev_mode.py:43",
        "scripts/test_websocket_dev_mode.py:219"
      ]
    },
    "authorization,content-type": {
      "value": "authorization,content-type",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:61"
      ]
    },
    "auth|login|jwt|session|token": {
      "value": "auth|login|jwt|session|token",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:95"
      ]
    },
    "auto": {
      "value": "auto",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:50",
        "scripts/setup_e2e_test_ports.py:51",
        "scripts/setup_e2e_test_ports.py:62",
        "scripts/test_backend_ORIGINAL.py:232",
        "scripts/test_backend_ORIGINAL.py:233",
        "scripts/test_backend_ORIGINAL.py:363",
        "scripts/unified_test_config.py:195",
        "scripts/unified_test_config.py:366"
      ]
    },
    "auto_adjust": {
      "value": "auto_adjust",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:65",
        "scripts/pytest_resource_monitor.py:71",
        "scripts/pytest_resource_monitor.py:77",
        "scripts/pytest_resource_monitor.py:83",
        "scripts/pytest_resource_monitor.py:89",
        "scripts/pytest_resource_monitor.py:243"
      ]
    },
    "automated": {
      "value": "automated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:194"
      ]
    },
    "automatic fixes": {
      "value": "automatic fixes",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:299"
      ]
    },
    "availability": {
      "value": "availability",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "available": {
      "value": "available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:195",
        "scripts/setup_staging_test_account.py:210",
        "scripts/setup_staging_test_account.py:231",
        "scripts/setup_staging_test_account.py:236",
        "scripts/test_clickhouse_startup_fix.py:252",
        "scripts/test_staging_login_automated.py:159"
      ]
    },
    "available_urls": {
      "value": "available_urls",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:62",
        "scripts/test_database_url_builder_comprehensive.py:65"
      ]
    },
    "avatar_url": {
      "value": "avatar_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:226"
      ]
    },
    "average": {
      "value": "average",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:93",
        "scripts/real_service_test_metrics.py:185"
      ]
    },
    "average_connection_time": {
      "value": "average_connection_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:124",
        "scripts/test_staging_websocket_comprehensive.py:124"
      ]
    },
    "average_duration": {
      "value": "average_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:121",
        "scripts/test_dashboard.py:125",
        "scripts/test_dashboard.py:190",
        "scripts/test_dashboard.py:377",
        "scripts/test_dashboard.py:399",
        "scripts/test_dashboard.py:400",
        "scripts/test_execution_tracker.py:751"
      ]
    },
    "average_response_time_ms": {
      "value": "average_response_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:380",
        "scripts/staging_comprehensive_test.py:423",
        "scripts/staging_comprehensive_test.py:465"
      ]
    },
    "average_rps": {
      "value": "average_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "average_value_score": {
      "value": "average_value_score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:597",
        "scripts/business_value_test_index.py:621",
        "scripts/business_value_test_index.py:738",
        "scripts/business_value_test_index.py:743"
      ]
    },
    "avg_business_value": {
      "value": "avg_business_value",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:558"
      ]
    },
    "avg_complexity": {
      "value": "avg_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:64",
        "scripts/analyze_test_overlap.py:408",
        "scripts/analyze_test_overlap.py:463",
        "scripts/analyze_test_overlap.py:465",
        "scripts/analyze_test_overlap.py:563"
      ]
    },
    "avg_duration": {
      "value": "avg_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:51",
        "scripts/test_dashboard.py:168",
        "scripts/test_dashboard.py:324",
        "scripts/test_execution_tracker.py:556",
        "scripts/test_execution_tracker.py:721"
      ]
    },
    "avg_error_rate": {
      "value": "avg_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_failure_rate": {
      "value": "avg_failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:51",
        "scripts/test_dashboard.py:166",
        "scripts/test_dashboard.py:279",
        "scripts/test_dashboard.py:316",
        "scripts/test_dashboard.py:322",
        "scripts/test_execution_tracker.py:555",
        "scripts/test_execution_tracker.py:719",
        "scripts/test_execution_tracker.py:801"
      ]
    },
    "avg_latency_p50_ms": {
      "value": "avg_latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_latency_p95_ms": {
      "value": "avg_latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_time_ms": {
      "value": "avg_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:587",
        "scripts/test_secret_manager_builder_critical.py:610",
        "scripts/test_secret_manager_builder_critical.py:623",
        "scripts/test_secret_manager_builder_critical.py:635",
        "scripts/test_secret_manager_builder_critical.py:636"
      ]
    },
    "avg_tokens_per_request": {
      "value": "avg_tokens_per_request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "await": {
      "value": "await",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:99",
        "scripts/frontend_iterative_test_runner.py:743"
      ]
    },
    "back_to_school": {
      "value": "back_to_school",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:144"
      ]
    },
    "backend": {
      "value": "backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:31",
        "scripts/align_test_imports.py:69",
        "scripts/align_test_imports.py:70",
        "scripts/align_test_imports.py:71",
        "scripts/business_value_test_index.py:405",
        "scripts/manage_test_services.py:54",
        "scripts/setup_e2e_test_ports.py:87",
        "scripts/setup_e2e_test_ports.py:100",
        "scripts/staging_comprehensive_test.py:26",
        "scripts/staging_comprehensive_test.py:81"
      ]
    },
    "backend-authentication-integration-failures.py": {
      "value": "backend-authentication-integration-failures.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:29"
      ]
    },
    "backend-staging-pr-123": {
      "value": "backend-staging-pr-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:44"
      ]
    },
    "backend_health": {
      "value": "backend_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:50",
        "scripts/test_oauth_local.py:135",
        "scripts/test_oauth_local.py:410",
        "scripts/test_oauth_local.py:410"
      ]
    },
    "backend_healthy": {
      "value": "backend_healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:182",
        "scripts/test_websocket_cors_comprehensive.py:285"
      ]
    },
    "backend_issue": {
      "value": "backend_issue",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:177"
      ]
    },
    "backend_load_time": {
      "value": "backend_load_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:417"
      ]
    },
    "backend_service_connection": {
      "value": "backend_service_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:127"
      ]
    },
    "backend_status": {
      "value": "backend_status",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:167"
      ]
    },
    "backend_url": {
      "value": "backend_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:30",
        "scripts/test_and_fix_cors.py:49",
        "scripts/test_and_fix_cors.py:72",
        "scripts/test_and_fix_cors.py:85",
        "scripts/test_oauth_local.py:459"
      ]
    },
    "background_tasks": {
      "value": "background_tasks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:48"
      ]
    },
    "backslashes in uvicorn command (syntax error)": {
      "value": "backslashes in uvicorn command (syntax error)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:84"
      ]
    },
    "backup_service.py": {
      "value": "backup_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:126"
      ]
    },
    "bad_test": {
      "value": "bad_test",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:113"
      ]
    },
    "bad_tests": {
      "value": "bad_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:240"
      ]
    },
    "bad_tests.json": {
      "value": "bad_tests.json",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:127",
        "scripts/team_updates_test_analyzer.py:153"
      ]
    },
    "balanced": {
      "value": "balanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:61",
        "scripts/test_backend_optimized.py:123",
        "scripts/test_backend_optimized.py:189",
        "scripts/test_backend_optimized.py:374",
        "scripts/test_backend_optimized.py:375"
      ]
    },
    "base": {
      "value": "base",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_ssl_certificates_staging.py:175"
      ]
    },
    "base_rps": {
      "value": "base_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:112"
      ]
    },
    "base_url": {
      "value": "base_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:206"
      ]
    },
    "base_warnings": {
      "value": "base_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:164"
      ]
    },
    "basic": {
      "value": "basic",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:361",
        "scripts/test_example_message_flow.py:286",
        "scripts/test_example_message_flow.py:408"
      ]
    },
    "basic_connectivity": {
      "value": "basic_connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:112"
      ]
    },
    "batch": {
      "value": "batch",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:311"
      ]
    },
    "batch_fix_results_": {
      "value": "batch_fix_results_",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:372"
      ]
    },
    "benchmark": {
      "value": "benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:229",
        "scripts/unified_test_config.py:103"
      ]
    },
    "beta-inc": {
      "value": "beta-inc",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:158"
      ]
    },
    "billing.py": {
      "value": "billing.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:74"
      ]
    },
    "billing_service.py": {
      "value": "billing_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:130"
      ]
    },
    "bin": {
      "value": "bin",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "black_friday": {
      "value": "black_friday",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:146"
      ]
    },
    "blacklist-test": {
      "value": "blacklist-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:126",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:239"
      ]
    },
    "blacklist-user": {
      "value": "blacklist-user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:121"
      ]
    },
    "blacklist:token:": {
      "value": "blacklist:token:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:182",
        "auth_service/tests/test_refresh_endpoint.py:167"
      ]
    },
    "blacklist@example.com": {
      "value": "blacklist@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:121",
        "auth_service/tests/test_auth_comprehensive_audit.py:127"
      ]
    },
    "blacklist@test.com": {
      "value": "blacklist@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:240"
      ]
    },
    "blacklisted": {
      "value": "blacklisted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:183",
        "auth_service/tests/test_critical_bugs.py:201",
        "auth_service/tests/test_refresh_endpoint.py:168"
      ]
    },
    "blacklisted_token_": {
      "value": "blacklisted_token_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:396"
      ]
    },
    "blocked_count": {
      "value": "blocked_count",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:108",
        "scripts/simple_websocket_blocking_test.py:164"
      ]
    },
    "blocking_errors": {
      "value": "blocking_errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:116",
        "scripts/test_service_startup_with_missing_optionals.py:189"
      ]
    },
    "blocking_issues": {
      "value": "blocking_issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:114",
        "scripts/test_environment_validation_clean.py:152",
        "scripts/test_improved_environment_validation.py:115",
        "scripts/test_improved_environment_validation.py:152"
      ]
    },
    "blocking_nightmare": {
      "value": "blocking_nightmare",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:23"
      ]
    },
    "body": {
      "value": "body",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:51",
        "scripts/test_staging_deployment.py:65",
        "scripts/test_staging_deployment.py:67",
        "scripts/test_staging_deployment.py:71"
      ]
    },
    "body() should not return a coroutine": {
      "value": "body() should not return a coroutine",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:30"
      ]
    },
    "body_type": {
      "value": "body_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:133",
        "auth_service/tests/test_refresh_endpoint_integration.py:152"
      ]
    },
    "bold cyan": {
      "value": "bold cyan",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:37",
        "scripts/test_adaptive_workflow.py:351"
      ]
    },
    "bold magenta": {
      "value": "bold magenta",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:68",
        "scripts/test_oauth_local.py:350"
      ]
    },
    "branch_name": {
      "value": "branch_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:191"
      ]
    },
    "broadcast_manager.py": {
      "value": "broadcast_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:92"
      ]
    },
    "browser": {
      "value": "browser",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:77"
      ]
    },
    "browser.test@staging.netrasystems.ai": {
      "value": "browser.test@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:141"
      ]
    },
    "browser_automation": {
      "value": "browser_automation",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:151"
      ]
    },
    "browser_script": {
      "value": "browser_script",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:261"
      ]
    },
    "browser_session": {
      "value": "browser_session",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:225",
        "scripts/setup_staging_test_account.py:256"
      ]
    },
    "budget": {
      "value": "budget",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:57"
      ]
    },
    "buffer": {
      "value": "buffer",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:152"
      ]
    },
    "buffer_test_user": {
      "value": "buffer_test_user",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:179"
      ]
    },
    "bug": {
      "value": "bug",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:210"
      ]
    },
    "build": {
      "value": "build",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:25",
        "scripts/test_frontend_ORIGINAL.py:302"
      ]
    },
    "businessValue": {
      "value": "businessValue",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:287",
        "scripts/test_example_message_flow.py:409"
      ]
    },
    "business_impact": {
      "value": "business_impact",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "business_value_coverage.json": {
      "value": "business_value_coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:719"
      ]
    },
    "business_value_test_coverage": {
      "value": "business_value_test_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:118"
      ]
    },
    "business_value_test_coverage.xml": {
      "value": "business_value_test_coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:115"
      ]
    },
    "but URL configured for port": {
      "value": "but URL configured for port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:60"
      ]
    },
    "by_category": {
      "value": "by_category",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:448",
        "scripts/batch_test_generator.py:496"
      ]
    },
    "by_priority": {
      "value": "by_priority",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:447",
        "scripts/batch_test_generator.py:493",
        "scripts/batch_test_generator.py:499",
        "scripts/batch_test_generator.py:500",
        "scripts/batch_test_generator.py:501",
        "scripts/batch_test_generator.py:502"
      ]
    },
    "by_service": {
      "value": "by_service",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:425",
        "scripts/staging_comprehensive_test.py:468"
      ]
    },
    "by_type": {
      "value": "by_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:281",
        "scripts/test_cors.py:464",
        "scripts/test_cors.py:466"
      ]
    },
    "bypass_should_work": {
      "value": "bypass_should_work",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:222",
        "scripts/test_docker_websocket_fix.py:272",
        "scripts/test_docker_websocket_fix.py:273",
        "scripts/test_docker_websocket_fix.py:317"
      ]
    },
    "bypass_token": {
      "value": "bypass_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:121",
        "scripts/setup_staging_test_account.py:209",
        "scripts/setup_staging_test_account.py:214",
        "scripts/setup_staging_test_account.py:236",
        "scripts/setup_staging_test_account.py:254",
        "scripts/setup_staging_test_account.py:320"
      ]
    },
    "bytes": {
      "value": "bytes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:152"
      ]
    },
    "cache": {
      "value": "cache",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "auth_service/tests/auth-service-down-critical-scenarios.py:453",
        "scripts/analyze_test_mocks.py:52",
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/auto_fix_test_sizes.py:353"
      ]
    },
    "cache.py": {
      "value": "cache.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:107"
      ]
    },
    "cache:organization:acme-corp": {
      "value": "cache:organization:acme-corp",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:273"
      ]
    },
    "cache:user_profile:test-user-1": {
      "value": "cache:user_profile:test-user-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:268"
      ]
    },
    "cache_enabled": {
      "value": "cache_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:169"
      ]
    },
    "cache_hit": {
      "value": "cache_hit",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:80"
      ]
    },
    "cache_hit_rate": {
      "value": "cache_hit_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:234"
      ]
    },
    "cache_hits": {
      "value": "cache_hits",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:213",
        "scripts/test_backend_optimized.py:213",
        "scripts/test_backend_optimized.py:234",
        "scripts/test_backend_optimized.py:271",
        "scripts/test_backend_optimized.py:337"
      ]
    },
    "cache_stats": {
      "value": "cache_stats",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:58",
        "scripts/real_service_test_metrics.py:60",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "cache_status": {
      "value": "cache_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:453"
      ]
    },
    "cache_ttl_hours": {
      "value": "cache_ttl_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:179",
        "scripts/test_backend_optimized.py:186",
        "scripts/test_backend_optimized.py:193"
      ]
    },
    "cached": {
      "value": "cached",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:258"
      ]
    },
    "cached_at": {
      "value": "cached_at",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:271",
        "scripts/test_seed_data.py:277"
      ]
    },
    "call_count": {
      "value": "call_count",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:360"
      ]
    },
    "callback_result": {
      "value": "callback_result",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:176"
      ]
    },
    "can_start": {
      "value": "can_start",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:113",
        "scripts/test_environment_validation_clean.py:151",
        "scripts/test_improved_environment_validation.py:114",
        "scripts/test_improved_environment_validation.py:151",
        "scripts/test_service_startup_with_missing_optionals.py:112",
        "scripts/test_service_startup_with_missing_optionals.py:188",
        "scripts/test_service_startup_with_missing_optionals.py:193",
        "scripts/test_service_startup_with_missing_optionals.py:209"
      ]
    },
    "cannot import name ([^\\s]+)": {
      "value": "cannot import name ([^\\s]+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:164"
      ]
    },
    "cannot read properties of undefined (reading 'mock')": {
      "value": "cannot read properties of undefined (reading 'mock')",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:558"
      ]
    },
    "cascade_probability": {
      "value": "cascade_probability",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:463",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:475"
      ]
    },
    "cascading_failure": {
      "value": "cascading_failure",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:23",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:82"
      ]
    },
    "cat app/tests/examples/test_size_compliance_examples.py": {
      "value": "cat app/tests/examples/test_size_compliance_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:197"
      ]
    },
    "categories": {
      "value": "categories",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:36",
        "scripts/add_test_markers.py:142",
        "scripts/add_test_markers.py:142",
        "scripts/add_test_markers.py:215",
        "scripts/analyze_test_overlap.py:356",
        "scripts/analyze_test_overlap.py:405",
        "scripts/analyze_test_overlap.py:456",
        "scripts/analyze_test_overlap.py:473",
        "scripts/analyze_test_overlap.py:552",
        "scripts/run_all_test_categories.py:106"
      ]
    },
    "categories_scanned": {
      "value": "categories_scanned",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:197"
      ]
    },
    "categories_tested": {
      "value": "categories_tested",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:124"
      ]
    },
    "category": {
      "value": "category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:108",
        "scripts/analyze_test_mocks.py:129",
        "scripts/analyze_test_mocks.py:164",
        "scripts/analyze_test_mocks.py:179",
        "scripts/compliance/test_refactor_helper.py:423",
        "scripts/compliance/test_refactor_helper.py:433",
        "scripts/compliance/test_refactor_helper.py:462",
        "scripts/compliance/test_refactor_helper.py:473",
        "scripts/compliance/test_refactor_helper.py:505",
        "scripts/compliance/test_refactor_helper.py:571"
      ]
    },
    "category1": {
      "value": "category1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:375"
      ]
    },
    "category2": {
      "value": "category2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:376"
      ]
    },
    "category_identified": {
      "value": "category_identified",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:244"
      ]
    },
    "category_results": {
      "value": "category_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:199"
      ]
    },
    "category_summary": {
      "value": "category_summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:697"
      ]
    },
    "cd auth_service && python -m pytest tests/test_auth_comprehensive.py::TestAuthConfiguration -v": {
      "value": "cd auth_service && python -m pytest tests/test_auth_comprehensive.py::TestAuthConfiguration -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:70"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_alembic_version_state_recovery.py::TestMigrationStateRecovery::test_initialize_alembic_version_for_existing_schema -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_alembic_version_state_recovery.py::TestMigrationStateRecovery::test_initialize_alembic_version_for_existing_schema -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:54"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_idempotent_migration_handling.py::TestErrorRecoveryAndResilience::test_circuit_breaker_prevents_cascading_failures -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_idempotent_migration_handling.py::TestErrorRecoveryAndResilience::test_circuit_breaker_prevents_cascading_failures -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:58"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_redis_connection_fix_verified.py -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_redis_connection_fix_verified.py -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:44"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_redis_connection_python312.py -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_redis_connection_python312.py -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:48"
      ]
    },
    "cd netra_backend && python -m pytest tests/unit/test_first_time_user_real_critical.py -x": {
      "value": "cd netra_backend && python -m pytest tests/unit/test_first_time_user_real_critical.py -x",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:64"
      ]
    },
    "cd tests/e2e && python -m pytest test_simple_health.py -v": {
      "value": "cd tests/e2e && python -m pytest test_simple_health.py -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:76"
      ]
    },
    "center": {
      "value": "center",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:70",
        "scripts/test_oauth_local.py:352"
      ]
    },
    "certificate": {
      "value": "certificate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:377"
      ]
    },
    "certificate verify failed: certificate has expired": {
      "value": "certificate verify failed: certificate has expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:365"
      ]
    },
    "ch-staging-password": {
      "value": "ch-staging-password",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:139"
      ]
    },
    "change": {
      "value": "change",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:83"
      ]
    },
    "change-me": {
      "value": "change-me",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:426"
      ]
    },
    "change_method": {
      "value": "change_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:122"
      ]
    },
    "changed test files...": {
      "value": "changed test files...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:243"
      ]
    },
    "changeme": {
      "value": "changeme",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:98"
      ]
    },
    "changes": {
      "value": "changes",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:307"
      ]
    },
    "changes applied": {
      "value": "changes applied",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:180"
      ]
    },
    "changes)": {
      "value": "changes)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:299"
      ]
    },
    "characters": {
      "value": "characters",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:62",
        "scripts/test_clickhouse_staging.py:76"
      ]
    },
    "characters (": {
      "value": "characters (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "characters required": {
      "value": "characters required",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:75"
      ]
    },
    "chars": {
      "value": "chars",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:164",
        "scripts/test_async_serialization_direct.py:176",
        "scripts/test_real_jwt_e2e.py:61",
        "scripts/test_real_jwt_e2e.py:92",
        "scripts/test_real_jwt_e2e.py:156",
        "scripts/test_staging_auth.py:109",
        "scripts/test_triage_flow.py:98"
      ]
    },
    "chars)": {
      "value": "chars)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:184"
      ]
    },
    "chars, min": {
      "value": "chars, min",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:815"
      ]
    },
    "chars, min 32)": {
      "value": "chars, min 32)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:741"
      ]
    },
    "chat-conn": {
      "value": "chat-conn",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:263"
      ]
    },
    "chat:create": {
      "value": "chat:create",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:21"
      ]
    },
    "chat:read_own": {
      "value": "chat:read_own",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:22",
        "auth_service/tests/factories/permission_factory.py:186"
      ]
    },
    "chat_thread_id": {
      "value": "chat_thread_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:69"
      ]
    },
    "check": {
      "value": "check",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:251",
        "scripts/test_staging_migrations.py:250"
      ]
    },
    "check_and_fix_attribute": {
      "value": "check_and_fix_attribute",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:60"
      ]
    },
    "check_and_fix_import": {
      "value": "check_and_fix_import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:49",
        "scripts/fix_test_batch.py:307"
      ]
    },
    "checked_at": {
      "value": "checked_at",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:74",
        "scripts/test_service_monitor.py:82",
        "scripts/test_service_monitor.py:110",
        "scripts/test_service_monitor.py:118",
        "scripts/test_service_monitor.py:136",
        "scripts/test_service_monitor.py:144",
        "scripts/test_service_monitor.py:176",
        "scripts/test_service_monitor.py:213"
      ]
    },
    "checks": {
      "value": "checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:158",
        "scripts/test_docker_websocket_fix.py:166",
        "scripts/test_docker_websocket_fix.py:173",
        "scripts/test_docker_websocket_fix.py:182",
        "scripts/test_docker_websocket_fix.py:186",
        "scripts/test_docker_websocket_fix.py:196",
        "scripts/test_docker_websocket_fix.py:285"
      ]
    },
    "checks passed": {
      "value": "checks passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:192"
      ]
    },
    "children": {
      "value": "children",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:42",
        "scripts/test_blocking_analysis.py:54",
        "scripts/test_intensive_serialization.py:43",
        "scripts/test_intensive_serialization.py:58"
      ]
    },
    "ci": {
      "value": "ci",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:50",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "circuit_breaker.py": {
      "value": "circuit_breaker.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:110"
      ]
    },
    "circuit_breaker_activation": {
      "value": "circuit_breaker_activation",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:242"
      ]
    },
    "circuit_breaker_state": {
      "value": "circuit_breaker_state",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:119"
      ]
    },
    "circular": {
      "value": "circular",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:273"
      ]
    },
    "class": {
      "value": "class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:679",
        "scripts/e2e_test_fixer.py:96",
        "scripts/fix_test_batch.py:115",
        "scripts/fix_test_syntax_errors.py:64",
        "scripts/fix_test_syntax_errors.py:141",
        "scripts/fix_test_syntax_errors.py:172"
      ]
    },
    "class (Test\\w+)[^:]*:": {
      "value": "class (Test\\w+)[^:]*:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:155"
      ]
    },
    "class LLMTestModel.*?(?=class|\\Z)": {
      "value": "class LLMTestModel.*?(?=class|\\Z)",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:99"
      ]
    },
    "class Test": {
      "value": "class Test",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:91",
        "scripts/autonomous_review/test_generator.py:120",
        "scripts/autonomous_review/test_generator.py:196",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/compliance/test_size_validator.py:170"
      ]
    },
    "class TestSyntaxFix": {
      "value": "class TestSyntaxFix",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:47"
      ]
    },
    "class TestSyntaxFix:": {
      "value": "class TestSyntaxFix:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:94"
      ]
    },
    "class \\\\g<0>:": {
      "value": "class \\\\g<0>:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:247"
      ]
    },
    "class \\\\w+\\\\(unittest\\\\.TestCase\\\\):": {
      "value": "class \\\\w+\\\\(unittest\\\\.TestCase\\\\):",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:247"
      ]
    },
    "class\"\"\"\n    \n    def test_initialization(self):\n        \"\"\"Test": {
      "value": "class\"\"\"\n    \n    def test_initialization(self):\n        \"\"\"Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:198"
      ]
    },
    "class\\s+(\\w*[Tt]est\\w*)\\s*(\\([^)]*\\))?:": {
      "value": "class\\s+(\\w*[Tt]est\\w*)\\s*(\\([^)]*\\))?:",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:82"
      ]
    },
    "class\\s+(\\w+)\\s*[\\(:]": {
      "value": "class\\s+(\\w+)\\s*[\\(:]",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:136"
      ]
    },
    "class\\s+Mock\\w*:": {
      "value": "class\\s+Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:52"
      ]
    },
    "class\\s+Mock\\w*Component": {
      "value": "class\\s+Mock\\w*Component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:149"
      ]
    },
    "class\\s+Test\\w*Component\\w*:": {
      "value": "class\\s+Test\\w*Component\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:55"
      ]
    },
    "class\\s+\\w*Component\\w*Mock\\w*:": {
      "value": "class\\s+\\w*Component\\w*Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:54"
      ]
    },
    "class\\s+\\w*Mock\\w*:": {
      "value": "class\\s+\\w*Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:53"
      ]
    },
    "class_based": {
      "value": "class_based",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:462"
      ]
    },
    "class_names_fixed": {
      "value": "class_names_fixed",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:209",
        "scripts/e2e_test_fixer.py:217"
      ]
    },
    "class_to_function": {
      "value": "class_to_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:331"
      ]
    },
    "class_without_test_prefix": {
      "value": "class_without_test_prefix",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:29",
        "scripts/e2e_test_fixer.py:53"
      ]
    },
    "classes": {
      "value": "classes",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:58",
        "scripts/autonomous_review/test_reviewer.py:99",
        "scripts/autonomous_review/test_reviewer.py:99",
        "scripts/compliance/demo_test_size_enforcement.py:90",
        "scripts/compliance/test_refactor_helper.py:102",
        "scripts/compliance/test_refactor_helper.py:463",
        "scripts/compliance/test_refactor_helper.py:708"
      ]
    },
    "claude-3-opus": {
      "value": "claude-3-opus",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:33"
      ]
    },
    "claude-3-sonnet": {
      "value": "claude-3-sonnet",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:35"
      ]
    },
    "clean": {
      "value": "clean",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:181",
        "scripts/manage_test_services.py:205"
      ]
    },
    "cleanup": {
      "value": "cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:48",
        "scripts/test_docker_manager.py:207",
        "scripts/test_docker_manager.py:235",
        "scripts/test_websocket_dev_mode.py:44",
        "scripts/test_websocket_dev_mode.py:253"
      ]
    },
    "cleanup                   → Resource management validation": {
      "value": "cleanup                   → Resource management validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:398"
      ]
    },
    "cleanup_test_processes.py": {
      "value": "cleanup_test_processes.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:526"
      ]
    },
    "cli": {
      "value": "cli",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:355"
      ]
    },
    "click": {
      "value": "click",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:667"
      ]
    },
    "clickhouse": {
      "value": "clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:440",
        "scripts/manage_test_services.py:58",
        "scripts/setup_e2e_test_ports.py:92",
        "scripts/test_comprehensive_scanner.py:115",
        "scripts/test_service_monitor.py:164",
        "scripts/test_service_monitor.py:222",
        "scripts/test_service_monitor.py:257",
        "scripts/test_service_monitor.py:258"
      ]
    },
    "clickhouse-database": {
      "value": "clickhouse-database",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:68",
        "scripts/test_staging_clickhouse.py:130",
        "scripts/test_staging_clickhouse.py:156"
      ]
    },
    "clickhouse-host": {
      "value": "clickhouse-host",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:64",
        "scripts/test_staging_clickhouse.py:106",
        "scripts/test_staging_clickhouse.py:152"
      ]
    },
    "clickhouse-password": {
      "value": "clickhouse-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:67",
        "scripts/test_staging_clickhouse.py:137",
        "scripts/test_staging_clickhouse.py:155",
        "scripts/test_staging_startup.py:146"
      ]
    },
    "clickhouse-port": {
      "value": "clickhouse-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:65",
        "scripts/test_staging_clickhouse.py:116",
        "scripts/test_staging_clickhouse.py:153"
      ]
    },
    "clickhouse-user": {
      "value": "clickhouse-user",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:66",
        "scripts/test_staging_clickhouse.py:123",
        "scripts/test_staging_clickhouse.py:154"
      ]
    },
    "clickhouse.netra": {
      "value": "clickhouse.netra",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:100"
      ]
    },
    "clickhouse/test_realistic_clickhouse_operations.py": {
      "value": "clickhouse/test_realistic_clickhouse_operations.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:209"
      ]
    },
    "clickhouse://default:@xedvrr4c3r.us-central1.gcp.clickhouse.cloud:8443/default?secure=1": {
      "value": "clickhouse://default:@xedvrr4c3r.us-central1.gcp.clickhouse.cloud:8443/default?secure=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:27"
      ]
    },
    "clickhouse://localhost:9000/test": {
      "value": "clickhouse://localhost:9000/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:84"
      ]
    },
    "clickhouse_connection": {
      "value": "clickhouse_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:44"
      ]
    },
    "clickhouse_native": {
      "value": "clickhouse_native",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:151"
      ]
    },
    "clickhouse_url": {
      "value": "clickhouse_url",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:39"
      ]
    },
    "clickhouse|ClickHouse": {
      "value": "clickhouse|ClickHouse",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:440"
      ]
    },
    "client": {
      "value": "client",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:194",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261"
      ]
    },
    "client.get": {
      "value": "client.get",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "client.post": {
      "value": "client.post",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "clientId": {
      "value": "clientId",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:154"
      ]
    },
    "client_available": {
      "value": "client_available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:219"
      ]
    },
    "client_id": {
      "value": "client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:291",
        "scripts/test_config_loading.py:104"
      ]
    },
    "client_id=": {
      "value": "client_id=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:241",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:386"
      ]
    },
    "client_secret": {
      "value": "client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:292",
        "scripts/test_config_loading.py:105"
      ]
    },
    "closed": {
      "value": "closed",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:37",
        "scripts/pytest_plugins.py:50",
        "scripts/pytest_plugins.py:152",
        "scripts/pytest_plugins.py:173"
      ]
    },
    "closed file": {
      "value": "closed file",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:29",
        "scripts/pytest_plugins.py:42",
        "scripts/pytest_plugins.py:55",
        "scripts/pytest_plugins.py:78",
        "scripts/pytest_plugins.py:99",
        "scripts/pytest_plugins.py:108",
        "scripts/pytest_plugins.py:117",
        "scripts/pytest_plugins.py:137",
        "scripts/pytest_plugins.py:157",
        "scripts/pytest_plugins.py:177"
      ]
    },
    "cloud_run": {
      "value": "cloud_run",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:306",
        "scripts/test_cors.py:320"
      ]
    },
    "cloudsql": {
      "value": "cloudsql",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:233"
      ]
    },
    "cls": {
      "value": "cls",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:200"
      ]
    },
    "cmdline": {
      "value": "cmdline",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:217",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:239",
        "auth_service/tests/auth-service-down-critical-scenarios.py:509",
        "auth_service/tests/auth-service-down-critical-scenarios.py:511",
        "auth_service/tests/auth-service-down-critical-scenarios.py:523",
        "auth_service/tests/auth-service-down-critical-scenarios.py:525",
        "auth_service/tests/auth-service-down-critical-scenarios.py:544",
        "auth_service/tests/auth-service-down-critical-scenarios.py:546"
      ]
    },
    "code": {
      "value": "code",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:70",
        "auth_service/tests/test_auth_comprehensive.py:233",
        "scripts/test_staging_login_automated.py:100",
        "scripts/test_staging_login_automated.py:103",
        "scripts/test_staging_login_automated.py:106",
        "scripts/test_staging_login_automated.py:164",
        "scripts/test_staging_login_automated.py:209",
        "scripts/test_staging_login_automated.py:216",
        "scripts/test_staging_login_automated.py:288"
      ]
    },
    "code_execution": {
      "value": "code_execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:335",
        "scripts/test_seed_data.py:352"
      ]
    },
    "code_lines": {
      "value": "code_lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:312"
      ]
    },
    "collection_time": {
      "value": "collection_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:406"
      ]
    },
    "collection_warnings": {
      "value": "collection_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:115"
      ]
    },
    "column does not exist": {
      "value": "column does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:363"
      ]
    },
    "combined_recommendations": {
      "value": "combined_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:241"
      ]
    },
    "comes AFTER first import at line": {
      "value": "comes AFTER first import at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:60"
      ]
    },
    "command": {
      "value": "command",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:669",
        "scripts/final_test_status_check.py:44",
        "scripts/final_test_status_check.py:48",
        "scripts/final_test_status_check.py:54",
        "scripts/final_test_status_check.py:58",
        "scripts/final_test_status_check.py:64",
        "scripts/final_test_status_check.py:70",
        "scripts/final_test_status_check.py:76",
        "scripts/final_test_status_check.py:86",
        "scripts/manage_test_services.py:161"
      ]
    },
    "commands": {
      "value": "commands",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:196",
        "scripts/test_failure_analyzer.py:207",
        "scripts/test_failure_analyzer.py:221",
        "scripts/test_failure_analyzer.py:251",
        "scripts/test_failure_analyzer.py:263",
        "scripts/test_failure_analyzer.py:299"
      ]
    },
    "commit_sha": {
      "value": "commit_sha",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:192"
      ]
    },
    "complet": {
      "value": "complet",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:397",
        "scripts/test_websocket_chat_standalone.py:382"
      ]
    },
    "complete_": {
      "value": "complete_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "complete_workflow": {
      "value": "complete_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:47"
      ]
    },
    "complete_workflow         → End-to-end integration validation": {
      "value": "complete_workflow         → End-to-end integration validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:397"
      ]
    },
    "completed": {
      "value": "completed",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:175",
        "scripts/test_adaptive_workflow_direct.py:93",
        "scripts/test_agent_pipeline_simple.py:236",
        "scripts/test_websocket_direct.py:121",
        "scripts/test_websocket_standalone.py:158"
      ]
    },
    "completely-invalid": {
      "value": "completely-invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:462"
      ]
    },
    "completes_correctly": {
      "value": "completes_correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:240",
        "scripts/test_agent_execution_websocket_integration.py:317"
      ]
    },
    "completion": {
      "value": "completion",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "completion_tokens": {
      "value": "completion_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:77",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:110",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:118"
      ]
    },
    "complex": {
      "value": "complex",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:13",
        "scripts/test_intensive_serialization.py:314",
        "scripts/test_triage_flow.py:35"
      ]
    },
    "complex GCP + environment fallback": {
      "value": "complex GCP + environment fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:275"
      ]
    },
    "complex messages...": {
      "value": "complex messages...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:196"
      ]
    },
    "complex objects for stress testing": {
      "value": "complex objects for stress testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:237"
      ]
    },
    "complex_": {
      "value": "complex_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:113"
      ]
    },
    "complex_agent_state": {
      "value": "complex_agent_state",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:22"
      ]
    },
    "complex_data": {
      "value": "complex_data",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:36"
      ]
    },
    "complex_secure_password_123!@#": {
      "value": "complex_secure_password_123!@#",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:266"
      ]
    },
    "complex_staging_password_123!": {
      "value": "complex_staging_password_123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:130"
      ]
    },
    "complex_tool_": {
      "value": "complex_tool_",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:52",
        "scripts/test_intensive_serialization.py:96"
      ]
    },
    "complexity": {
      "value": "complexity",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:145",
        "scripts/autonomous_review/test_generator.py:157",
        "scripts/autonomous_review/test_reviewer.py:91",
        "scripts/compliance/test_size_validator.py:313",
        "scripts/simple_websocket_blocking_test.py:28",
        "scripts/test_agent_pipeline_simple.py:176",
        "scripts/test_example_message_flow.py:286",
        "scripts/test_example_message_flow.py:408",
        "scripts/test_intensive_serialization.py:113",
        "scripts/test_triage_flow.py:35"
      ]
    },
    "compliance": {
      "value": "compliance",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:423"
      ]
    },
    "compliance_rate": {
      "value": "compliance_rate",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:136",
        "scripts/check_test_compliance.py:161",
        "scripts/check_test_compliance.py:189",
        "scripts/check_test_compliance.py:214"
      ]
    },
    "compliance_service.py": {
      "value": "compliance_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:134"
      ]
    },
    "component": {
      "value": "component",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:661",
        "scripts/business_value_test_index.py:669",
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261",
        "scripts/compliance/real_test_validator.py:125",
        "scripts/compliance/real_test_validator.py:136",
        "scripts/test_collection_audit.py:304",
        "scripts/test_collection_audit.py:305"
      ]
    },
    "component_coverage": {
      "value": "component_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:624"
      ]
    },
    "component_props_data": {
      "value": "component_props_data",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:101",
        "scripts/frontend_iterative_test_runner.py:337",
        "scripts/frontend_iterative_test_runner.py:452",
        "scripts/frontend_iterative_test_runner.py:480"
      ]
    },
    "components": {
      "value": "components",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:76",
        "scripts/business_value_test_index.py:541",
        "scripts/business_value_test_index.py:598",
        "scripts/test_frontend_ORIGINAL.py:33"
      ]
    },
    "components_covered": {
      "value": "components_covered",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:598"
      ]
    },
    "compose": {
      "value": "compose",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375"
      ]
    },
    "comprehensive": {
      "value": "comprehensive",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:39",
        "scripts/test_frontend_simple.py:76",
        "scripts/unified_test_config.py:47",
        "scripts/unified_test_config.py:121",
        "scripts/unified_test_config.py:228",
        "scripts/unified_test_config.py:233",
        "scripts/unified_test_config.py:238"
      ]
    },
    "comprehensive_fix_": {
      "value": "comprehensive_fix_",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:404"
      ]
    },
    "comprehensive_report_": {
      "value": "comprehensive_report_",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:120"
      ]
    },
    "comprehensive_scan_": {
      "value": "comprehensive_scan_",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:202"
      ]
    },
    "computed_at": {
      "value": "computed_at",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:111"
      ]
    },
    "concurrent": {
      "value": "concurrent",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348"
      ]
    },
    "concurrent execution": {
      "value": "concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:217"
      ]
    },
    "concurrent-test": {
      "value": "concurrent-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:316",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:188"
      ]
    },
    "concurrent@example.com": {
      "value": "concurrent@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:317"
      ]
    },
    "concurrent@test.com": {
      "value": "concurrent@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:189"
      ]
    },
    "concurrent_count": {
      "value": "concurrent_count",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:393"
      ]
    },
    "concurrent_requests": {
      "value": "concurrent_requests",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:301",
        "scripts/staging_comprehensive_test.py:342",
        "scripts/staging_comprehensive_test.py:376"
      ]
    },
    "concurrent_requests_performance": {
      "value": "concurrent_requests_performance",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:385",
        "scripts/staging_comprehensive_test.py:392"
      ]
    },
    "concurrent_test_token_35": {
      "value": "concurrent_test_token_35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:221",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:272"
      ]
    },
    "concurrent_tools": {
      "value": "concurrent_tools",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:102"
      ]
    },
    "concurrent_users": {
      "value": "concurrent_users",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:288"
      ]
    },
    "concurrent_writes": {
      "value": "concurrent_writes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:38"
      ]
    },
    "confidence": {
      "value": "confidence",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:168",
        "scripts/test_agent_execution_websocket_integration.py:367",
        "scripts/test_agent_pipeline_simple.py:175",
        "scripts/test_agent_pipeline_simple.py:245",
        "scripts/test_websocket_chat_simple.py:302",
        "scripts/test_websocket_chat_standalone.py:297"
      ]
    },
    "confidence_score": {
      "value": "confidence_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:34"
      ]
    },
    "config": {
      "value": "config",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:702",
        "scripts/test_docker_config.py:11",
        "scripts/test_oauth_local.py:163"
      ]
    },
    "config.py": {
      "value": "config.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:106"
      ]
    },
    "config/alembic.ini": {
      "value": "config/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:108"
      ]
    },
    "config/netra-staging-service-account.json": {
      "value": "config/netra-staging-service-account.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:122"
      ]
    },
    "config/pytest.ini": {
      "value": "config/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:14"
      ]
    },
    "config_check": {
      "value": "config_check",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:48",
        "scripts/test_oauth_local.py:91",
        "scripts/test_oauth_local.py:397",
        "scripts/test_oauth_local.py:397",
        "scripts/test_oauth_local.py:398"
      ]
    },
    "config_endpoint": {
      "value": "config_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:38",
        "scripts/test_websocket_dev_mode.py:99"
      ]
    },
    "config_file": {
      "value": "config_file",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:165",
        "scripts/unified_test_config.py:174",
        "scripts/unified_test_config.py:183",
        "scripts/unified_test_config.py:415"
      ]
    },
    "config_fixes": {
      "value": "config_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:406"
      ]
    },
    "config_test": {
      "value": "config_test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:150",
        "auth_service/tests/test_redis_staging_fixes.py:151",
        "auth_service/tests/test_redis_staging_fixes.py:152"
      ]
    },
    "config_valid": {
      "value": "config_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:286",
        "scripts/test_cors.py:462",
        "scripts/test_staging_websocket_comprehensive.py:360"
      ]
    },
    "config_value": {
      "value": "config_value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:150",
        "auth_service/tests/test_redis_staging_fixes.py:152"
      ]
    },
    "configuration": {
      "value": "configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:265",
        "scripts/test_cors.py:274"
      ]
    },
    "configuration_loading": {
      "value": "configuration_loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:40"
      ]
    },
    "configuration_validation": {
      "value": "configuration_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:31",
        "scripts/test_docker_websocket_fix.py:203",
        "scripts/test_docker_websocket_fix.py:282",
        "scripts/test_docker_websocket_fix.py:320"
      ]
    },
    "configure_test_environment() is deprecated. Use configure_environment_for_testing() instead": {
      "value": "configure_test_environment() is deprecated. Use configure_environment_for_testing() instead",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:333"
      ]
    },
    "configured": {
      "value": "configured",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:219",
        "scripts/setup_staging_test_account.py:226",
        "scripts/test_staging_login_automated.py:269",
        "scripts/test_staging_login_automated.py:275",
        "scripts/test_staging_login_automated.py:352"
      ]
    },
    "configured_providers": {
      "value": "configured_providers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:290"
      ]
    },
    "confirm_password": {
      "value": "confirm_password",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:181",
        "scripts/test_auth_client_debug.py:42",
        "scripts/test_data_pipeline_simple.py:28",
        "scripts/test_signup_flow_manual.py:25",
        "scripts/test_signup_flow_manual.py:44",
        "scripts/test_signup_flow_manual.py:61",
        "scripts/test_signup_flow_manual.py:78",
        "scripts/test_signup_flow_manual.py:95",
        "scripts/test_signup_flow_manual.py:126",
        "scripts/test_staging_auth_live.py:39"
      ]
    },
    "confirmation": {
      "value": "confirmation",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:246"
      ]
    },
    "confirmation_test_user": {
      "value": "confirmation_test_user",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:230"
      ]
    },
    "conflict": {
      "value": "conflict",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:717"
      ]
    },
    "conftest.py": {
      "value": "conftest.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:41",
        "scripts/check_conftest_violations.py:35",
        "scripts/check_conftest_violations.py:36",
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_validator.py:69",
        "scripts/generate_test_audit.py:79"
      ]
    },
    "conftest.py files** for pytest configuration\n- **": {
      "value": "conftest.py files** for pytest configuration\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:159"
      ]
    },
    "conftest_files": {
      "value": "conftest_files",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:64",
        "scripts/generate_test_audit.py:81",
        "scripts/generate_test_audit.py:146",
        "scripts/generate_test_audit.py:281"
      ]
    },
    "conn-test": {
      "value": "conn-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:113"
      ]
    },
    "conn_": {
      "value": "conn_",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:202"
      ]
    },
    "connect to (\\w+)": {
      "value": "connect to (\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:148"
      ]
    },
    "connected": {
      "value": "connected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:193",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:205",
        "scripts/test_clickhouse_startup_fix.py:242",
        "scripts/test_supervisor_execution_flow.py:53",
        "scripts/test_supervisor_execution_flow.py:58",
        "scripts/test_websocket_cors_comprehensive.py:65",
        "scripts/test_websocket_cors_comprehensive.py:92"
      ]
    },
    "connected_clients": {
      "value": "connected_clients",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:108",
        "scripts/test_service_monitor.py:108",
        "scripts/test_service_monitor.py:250"
      ]
    },
    "connection": {
      "value": "connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:499",
        "auth_service/tests/test_auth_real_services_comprehensive.py:515",
        "auth_service/tests/test_critical_bugs.py:388",
        "auth_service/tests/test_critical_bugs_real.py:93",
        "auth_service/tests/test_critical_bugs_real.py:197",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/test_staging_websocket_comprehensive.py:122"
      ]
    },
    "connection failed": {
      "value": "connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:97",
        "auth_service/tests/test_auth_comprehensive.py:361"
      ]
    },
    "connection refused": {
      "value": "connection refused",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:96",
        "scripts/test_failure_analyzer.py:84"
      ]
    },
    "connection_attempts": {
      "value": "connection_attempts",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:117",
        "scripts/test_clickhouse_startup_fix.py:117",
        "scripts/test_staging_websocket_comprehensive.py:125",
        "scripts/test_staging_websocket_comprehensive.py:125"
      ]
    },
    "connection_duration": {
      "value": "connection_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:66",
        "scripts/test_websocket_cors_comprehensive.py:94",
        "scripts/test_websocket_cors_comprehensive.py:96"
      ]
    },
    "connection_error": {
      "value": "connection_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:85",
        "scripts/test_failure_analyzer.py:199"
      ]
    },
    "connection_established": {
      "value": "connection_established",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:44"
      ]
    },
    "connection_info": {
      "value": "connection_info",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:220"
      ]
    },
    "connection_lost": {
      "value": "connection_lost",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:144"
      ]
    },
    "connection_manager.py": {
      "value": "connection_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:89"
      ]
    },
    "connection_recovery": {
      "value": "connection_recovery",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:293"
      ]
    },
    "connection_state": {
      "value": "connection_state",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:65"
      ]
    },
    "connection_status_endpoint": {
      "value": "connection_status_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:240"
      ]
    },
    "connection_successful": {
      "value": "connection_successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:158",
        "scripts/test_cors.py:168",
        "scripts/test_cors.py:178",
        "scripts/test_cors.py:187"
      ]
    },
    "connection_test": {
      "value": "connection_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:111"
      ]
    },
    "connection_tests": {
      "value": "connection_tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:29",
        "scripts/test_docker_websocket_fix.py:139",
        "scripts/test_docker_websocket_fix.py:144",
        "scripts/test_docker_websocket_fix.py:252",
        "scripts/test_docker_websocket_fix.py:293",
        "scripts/test_docker_websocket_fix.py:294",
        "scripts/test_docker_websocket_fix.py:296"
      ]
    },
    "connection_time": {
      "value": "connection_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:159",
        "scripts/test_cors.py:169"
      ]
    },
    "conservative": {
      "value": "conservative",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "consistency": {
      "value": "consistency",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:201",
        "scripts/test_secret_manager_builder_critical.py:503"
      ]
    },
    "consistency-test-": {
      "value": "consistency-test-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:254"
      ]
    },
    "consistency@staging.netrasystems.ai": {
      "value": "consistency@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:255"
      ]
    },
    "consistency_issues": {
      "value": "consistency_issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:415",
        "scripts/test_secret_manager_builder_critical.py:458",
        "scripts/test_secret_manager_builder_critical.py:459",
        "scripts/test_secret_manager_builder_critical.py:504",
        "scripts/test_secret_manager_builder_critical.py:505",
        "scripts/test_secret_manager_builder_critical.py:506"
      ]
    },
    "consistency_results": {
      "value": "consistency_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:184"
      ]
    },
    "consistent": {
      "value": "consistent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:118"
      ]
    },
    "consistent latency": {
      "value": "consistent latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:106"
      ]
    },
    "consistently failing tests": {
      "value": "consistently failing tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "consistently_failing": {
      "value": "consistently_failing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:296",
        "scripts/compliance/fake_test_scanner.py:327",
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "const\\s+Mock\\w*\\s*=": {
      "value": "const\\s+Mock\\w*\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:61"
      ]
    },
    "const\\s+Mock\\w+\\s*=.*?return\\s*<": {
      "value": "const\\s+Mock\\w+\\s*=.*?return\\s*<",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:75"
      ]
    },
    "const\\s+\\w+Form\\s*=.*?return\\s*<div": {
      "value": "const\\s+\\w+Form\\s*=.*?return\\s*<div",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:76"
      ]
    },
    "const\\s+mock\\w*\\s*=": {
      "value": "const\\s+mock\\w*\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:62"
      ]
    },
    "constraint": {
      "value": "constraint",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:422"
      ]
    },
    "constraints": {
      "value": "constraints",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:41"
      ]
    },
    "container_id": {
      "value": "container_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:17",
        "scripts/test_gtm_loading.py:35",
        "scripts/test_gtm_loading.py:61",
        "scripts/test_gtm_loading.py:120",
        "scripts/test_gtm_loading.py:146",
        "scripts/test_gtm_loading.py:147"
      ]
    },
    "containers": {
      "value": "containers",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:275",
        "scripts/pytest_resource_monitor.py:279"
      ]
    },
    "contains '": {
      "value": "contains '",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:438"
      ]
    },
    "content": {
      "value": "content",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:531",
        "scripts/simple_serialization_test.py:19",
        "scripts/simple_websocket_blocking_test.py:30",
        "scripts/test_agent_execution_websocket_integration.py:95",
        "scripts/test_async_serialization_direct.py:49",
        "scripts/test_cold_start_e2e.py:348",
        "scripts/test_cold_start_e2e.py:416",
        "scripts/test_example_message_flow.py:281",
        "scripts/test_example_message_flow.py:403",
        "scripts/test_intensive_serialization.py:50"
      ]
    },
    "content-type": {
      "value": "content-type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:136",
        "auth_service/tests/test_auth_real_services_comprehensive.py:445",
        "scripts/test_staging_login_automated.py:160"
      ]
    },
    "content_generation": {
      "value": "content_generation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30"
      ]
    },
    "content_preview": {
      "value": "content_preview",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:603"
      ]
    },
    "content_similarity": {
      "value": "content_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:373",
        "scripts/analyze_test_overlap.py:630"
      ]
    },
    "context": {
      "value": "context",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:89",
        "scripts/test_intensive_serialization.py:119",
        "scripts/test_staging_cors.py:44"
      ]
    },
    "context.py": {
      "value": "context.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:114"
      ]
    },
    "context_": {
      "value": "context_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:118"
      ]
    },
    "context_data": {
      "value": "context_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:57",
        "scripts/test_intensive_serialization.py:75",
        "scripts/test_intensive_serialization.py:118"
      ]
    },
    "conversation events": {
      "value": "conversation events",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:344"
      ]
    },
    "conversation_history": {
      "value": "conversation_history",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:72",
        "scripts/test_intensive_serialization.py:81"
      ]
    },
    "conversation_start": {
      "value": "conversation_start",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:330"
      ]
    },
    "conversion": {
      "value": "conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:287",
        "scripts/test_example_message_flow.py:409"
      ]
    },
    "convert_database_url": {
      "value": "convert_database_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:42"
      ]
    },
    "cookie": {
      "value": "cookie",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:125"
      ]
    },
    "cookies": {
      "value": "cookies",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:152"
      ]
    },
    "copied_from_dev": {
      "value": "copied_from_dev",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:253"
      ]
    },
    "core": {
      "value": "core",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:359",
        "scripts/auto_fix_test_sizes.py:372",
        "scripts/auto_fix_test_violations.py:403",
        "scripts/auto_fix_test_violations.py:504",
        "scripts/batch_test_generator.py:117",
        "scripts/batch_test_generator.py:384",
        "scripts/batch_test_generator.py:384",
        "scripts/run_all_test_categories.py:99",
        "scripts/standardize_l3_test_names.py:206",
        "scripts/test_comprehensive_scanner.py:118"
      ]
    },
    "corpus.py": {
      "value": "corpus.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:71"
      ]
    },
    "corpus_admin": {
      "value": "corpus_admin",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:64",
        "scripts/batch_test_generator.py:381"
      ]
    },
    "corpus_creation_helpers.py": {
      "value": "corpus_creation_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:46"
      ]
    },
    "corpus_creation_io.py": {
      "value": "corpus_creation_io.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:47"
      ]
    },
    "corpus_creation_storage.py": {
      "value": "corpus_creation_storage.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:48"
      ]
    },
    "corpus_error_types.py": {
      "value": "corpus_error_types.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:45"
      ]
    },
    "corpus_indexing_handlers.py": {
      "value": "corpus_indexing_handlers.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:49"
      ]
    },
    "corpus_upload_handlers.py": {
      "value": "corpus_upload_handlers.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:50"
      ]
    },
    "corpus_validation_handlers.py": {
      "value": "corpus_validation_handlers.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:51"
      ]
    },
    "correctly removed": {
      "value": "correctly removed",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:88"
      ]
    },
    "cors_analysis": {
      "value": "cors_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:87",
        "scripts/test_cors.py:125",
        "scripts/test_cors.py:376",
        "scripts/test_cors.py:547",
        "scripts/test_cors.py:548"
      ]
    },
    "cors_configuration": {
      "value": "cors_configuration",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:285",
        "scripts/staging_comprehensive_test.py:290"
      ]
    },
    "cors_headers": {
      "value": "cors_headers",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:275",
        "scripts/test_and_fix_cors.py:32",
        "scripts/test_and_fix_cors.py:74",
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141"
      ]
    },
    "cors_test": {
      "value": "cors_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:149"
      ]
    },
    "cors_validation": {
      "value": "cors_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:40",
        "scripts/test_websocket_dev_mode.py:162"
      ]
    },
    "cost": {
      "value": "cost",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:69",
        "scripts/test_agent_pipeline_simple.py:194",
        "scripts/test_cold_start_e2e.py:54",
        "scripts/test_triage_flow.py:38"
      ]
    },
    "cost-optimization": {
      "value": "cost-optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:285",
        "scripts/test_example_message_flow.py:407"
      ]
    },
    "cost_analyzer": {
      "value": "cost_analyzer",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:62"
      ]
    },
    "cost_cents": {
      "value": "cost_cents",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:46",
        "scripts/test_data_validator_backup.py:72",
        "scripts/test_data_validator_backup.py:136",
        "scripts/test_data_validator_backup.py:176",
        "scripts/test_data_validator_backup.py:184",
        "scripts/test_data_validator_backup.py:257",
        "scripts/test_data_validator_backup.py:262",
        "scripts/test_data_validator_backup.py:267",
        "scripts/test_data_validator_backup.py:621",
        "scripts/test_data_validator_backup.py:625"
      ]
    },
    "cost_data": {
      "value": "cost_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "scripts/test_triage_flow.py:57"
      ]
    },
    "cost_optimization": {
      "value": "cost_optimization",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:99",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:471",
        "scripts/business_value_test_index.py:493",
        "scripts/test_data_validator_backup.py:146"
      ]
    },
    "cost_per_1k_input": {
      "value": "cost_per_1k_input",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:98",
        "netra_backend/app/services/realistic_test_data/models.py:37",
        "netra_backend/app/services/realistic_test_data/models.py:47",
        "netra_backend/app/services/realistic_test_data/models.py:57",
        "netra_backend/app/services/realistic_test_data/models.py:67",
        "netra_backend/app/services/realistic_test_data/models.py:77"
      ]
    },
    "cost_per_1k_output": {
      "value": "cost_per_1k_output",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:99",
        "netra_backend/app/services/realistic_test_data/models.py:38",
        "netra_backend/app/services/realistic_test_data/models.py:48",
        "netra_backend/app/services/realistic_test_data/models.py:58",
        "netra_backend/app/services/realistic_test_data/models.py:68",
        "netra_backend/app/services/realistic_test_data/models.py:78"
      ]
    },
    "cost_per_1k_tokens": {
      "value": "cost_per_1k_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "cost_per_request_usd": {
      "value": "cost_per_request_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "cost_per_token_usd": {
      "value": "cost_per_token_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "cost_performance": {
      "value": "cost_performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:193"
      ]
    },
    "cost_reduction": {
      "value": "cost_reduction",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:48"
      ]
    },
    "cost_savings": {
      "value": "cost_savings",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:328",
        "scripts/test_data_validator_backup.py:399",
        "scripts/test_data_validator_backup.py:416"
      ]
    },
    "cost_usd": {
      "value": "cost_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:79",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:113"
      ]
    },
    "cost|optimization|pricing|billing": {
      "value": "cost|optimization|pricing|billing",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:99"
      ]
    },
    "count": {
      "value": "count",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:96",
        "scripts/real_service_test_metrics.py:188",
        "scripts/test_cors.py:279",
        "scripts/test_cors.py:461"
      ]
    },
    "coverage": {
      "value": "coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:74",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:561",
        "scripts/remove_test_stubs.py:80",
        "scripts/team_updates_test_analyzer.py:75",
        "scripts/team_updates_test_analyzer.py:76",
        "scripts/test_backend_ORIGINAL.py:326",
        "scripts/test_backend_ORIGINAL.py:406",
        "scripts/test_coverage_system.py:56",
        "scripts/test_coverage_system.py:79"
      ]
    },
    "coverage-final.json": {
      "value": "coverage-final.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:561"
      ]
    },
    "coverage.json": {
      "value": "coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:120",
        "scripts/autonomous_review/test_reviewer.py:121",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:551",
        "scripts/test_backend_ORIGINAL.py:406",
        "scripts/test_coverage_system.py:88"
      ]
    },
    "coverage.xml": {
      "value": "coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:73"
      ]
    },
    "coverage_full.json": {
      "value": "coverage_full.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:219",
        "scripts/run_supervisor_test_coverage.py:220"
      ]
    },
    "coverage_gaps": {
      "value": "coverage_gaps",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:646",
        "scripts/business_value_test_index.py:757",
        "scripts/business_value_test_index.py:759"
      ]
    },
    "coverage_info": {
      "value": "coverage_info",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:29"
      ]
    },
    "coverage_percentage": {
      "value": "coverage_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:599",
        "scripts/run_supervisor_test_coverage.py:60",
        "scripts/run_supervisor_test_coverage.py:223",
        "scripts/run_supervisor_test_coverage.py:295",
        "scripts/run_supervisor_test_coverage.py:301",
        "scripts/run_supervisor_test_coverage.py:303",
        "scripts/run_supervisor_test_coverage.py:305"
      ]
    },
    "coverage_source": {
      "value": "coverage_source",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:168",
        "scripts/unified_test_config.py:177",
        "scripts/unified_test_config.py:186",
        "scripts/unified_test_config.py:374"
      ]
    },
    "coverage_target": {
      "value": "coverage_target",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:28",
        "scripts/unified_test_config.py:36",
        "scripts/unified_test_config.py:44",
        "scripts/unified_test_config.py:52",
        "scripts/unified_test_config.py:60",
        "scripts/unified_test_config.py:68"
      ]
    },
    "cpu_bottleneck": {
      "value": "cpu_bottleneck",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:363",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:438"
      ]
    },
    "cpu_intensive": {
      "value": "cpu_intensive",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:73"
      ]
    },
    "cpu_percent": {
      "value": "cpu_percent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:150",
        "netra_backend/app/services/realistic_test_data/log_generator.py:177",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:207",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:318",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:319",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:362",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:385",
        "scripts/pytest_resource_monitor.py:283"
      ]
    },
    "crashed:": {
      "value": "crashed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:182"
      ]
    },
    "create": {
      "value": "create",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:84"
      ]
    },
    "createMockComponent": {
      "value": "createMockComponent",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:71"
      ]
    },
    "create_access_token": {
      "value": "create_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:270",
        "auth_service/tests/unit/test_refresh_endpoint.py:314"
      ]
    },
    "create_async_engine": {
      "value": "create_async_engine",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:43"
      ]
    },
    "create_module": {
      "value": "create_module",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:68"
      ]
    },
    "create_refresh_token": {
      "value": "create_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:271",
        "auth_service/tests/unit/test_refresh_endpoint.py:315"
      ]
    },
    "created": {
      "value": "created",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:50",
        "scripts/test_intensive_serialization.py:39"
      ]
    },
    "created_at": {
      "value": "created_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:58",
        "auth_service/tests/factories/session_factory.py:38",
        "auth_service/tests/factories/user_factory.py:43",
        "auth_service/tests/test_auth_real_services_comprehensive.py:177",
        "auth_service/tests/test_critical_bugs_simple.py:65",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:123",
        "auth_service/tests/utils/assertion_helpers.py:258",
        "scripts/setup_staging_test_account.py:93",
        "scripts/setup_staging_test_account.py:250"
      ]
    },
    "created_by": {
      "value": "created_by",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:202",
        "scripts/test_seed_data.py:210",
        "scripts/test_seed_data.py:218",
        "scripts/test_seed_data.py:229"
      ]
    },
    "creation_method": {
      "value": "creation_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:139"
      ]
    },
    "credentials_allowed": {
      "value": "credentials_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:200",
        "scripts/test_cors.py:225",
        "scripts/test_cors.py:252"
      ]
    },
    "criteria_failed": {
      "value": "criteria_failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:496",
        "scripts/test_websocket_injection_fix_complete.py:509",
        "scripts/test_websocket_injection_fix_complete.py:523",
        "scripts/test_websocket_injection_fix_complete.py:534",
        "scripts/test_websocket_injection_fix_complete.py:548",
        "scripts/test_websocket_injection_fix_complete.py:556",
        "scripts/test_websocket_injection_fix_complete.py:558"
      ]
    },
    "criteria_met": {
      "value": "criteria_met",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:496",
        "scripts/test_websocket_injection_fix_complete.py:505",
        "scripts/test_websocket_injection_fix_complete.py:519",
        "scripts/test_websocket_injection_fix_complete.py:530",
        "scripts/test_websocket_injection_fix_complete.py:547",
        "scripts/test_websocket_injection_fix_complete.py:553"
      ]
    },
    "critical": {
      "value": "critical",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:233",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:336",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:431",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "scripts/auto_fix_test_violations.py:403",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760",
        "scripts/compliance/fake_test_scanner.py:159",
        "scripts/compliance/fake_test_scanner.py:195",
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "critical modules with security/data operations": {
      "value": "critical modules with security/data operations",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:252"
      ]
    },
    "critical modules...": {
      "value": "critical modules...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:280"
      ]
    },
    "critical violations found": {
      "value": "critical violations found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:605"
      ]
    },
    "critical violations requiring immediate fix": {
      "value": "critical violations requiring immediate fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:555"
      ]
    },
    "critical-error": {
      "value": "critical-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:150"
      ]
    },
    "critical/high severity fake tests": {
      "value": "critical/high severity fake tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:460"
      ]
    },
    "critical_files": {
      "value": "critical_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:87",
        "scripts/compliance/fake_test_scanner.py:278",
        "scripts/compliance/fake_test_scanner.py:283",
        "scripts/compliance/fake_test_scanner.py:419"
      ]
    },
    "critical_issues": {
      "value": "critical_issues",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:437",
        "scripts/staging_comprehensive_test.py:479",
        "scripts/staging_comprehensive_test.py:480",
        "scripts/staging_comprehensive_test.py:481"
      ]
    },
    "critical_paths": {
      "value": "critical_paths",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:59",
        "scripts/autonomous_review/test_reviewer.py:88",
        "scripts/standardize_l3_test_names.py:200"
      ]
    },
    "critical_secrets_found": {
      "value": "critical_secrets_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:272",
        "scripts/test_secret_manager_builder_critical.py:349"
      ]
    },
    "critical_test_count": {
      "value": "critical_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:634",
        "scripts/business_value_test_index.py:750"
      ]
    },
    "critical_test_percentage": {
      "value": "critical_test_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:635",
        "scripts/business_value_test_index.py:751"
      ]
    },
    "criticality": {
      "value": "criticality",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:97",
        "scripts/autonomous_review/test_reviewer.py:103"
      ]
    },
    "cross-category duplicates/highly similar tests. Consider creating shared test utilities or fixtures.": {
      "value": "cross-category duplicates/highly similar tests. Consider creating shared test utilities or fixtures.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:489"
      ]
    },
    "cross_category_overlaps": {
      "value": "cross_category_overlaps",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:410",
        "scripts/analyze_test_overlap.py:565"
      ]
    },
    "csv": {
      "value": "csv",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:269",
        "scripts/remove_test_stubs.py:358"
      ]
    },
    "curl -H \"Authorization: Bearer": {
      "value": "curl -H \"Authorization: Bearer",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:321"
      ]
    },
    "curl -H \"Authorization: Bearer YOUR_TOKEN\" https://api.staging.netrasystems.ai/health": {
      "value": "curl -H \"Authorization: Bearer YOUR_TOKEN\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:260"
      ]
    },
    "curl -H \"X-API-Key:": {
      "value": "curl -H \"X-API-Key:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:317"
      ]
    },
    "curl -H \"X-API-Key: YOUR_KEY\" https://api.staging.netrasystems.ai/health": {
      "value": "curl -H \"X-API-Key: YOUR_KEY\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:259"
      ]
    },
    "curl/7.68.0": {
      "value": "curl/7.68.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:90"
      ]
    },
    "curl_api_key": {
      "value": "curl_api_key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:259"
      ]
    },
    "curl_bearer": {
      "value": "curl_bearer",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:260"
      ]
    },
    "current": {
      "value": "current",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:78",
        "scripts/team_updates_test_analyzer.py:85",
        "scripts/test_staging_migrations.py:148",
        "scripts/test_staging_migrations.py:248"
      ]
    },
    "current_failures.json": {
      "value": "current_failures.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:149"
      ]
    },
    "current_iteration": {
      "value": "current_iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:174"
      ]
    },
    "custom": {
      "value": "custom",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:169",
        "auth_service/tests/test_refresh_token_fix.py:250"
      ]
    },
    "custom-db-host.example.com": {
      "value": "custom-db-host.example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:157"
      ]
    },
    "customer_service": {
      "value": "customer_service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "customer_value_features": {
      "value": "customer_value_features",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:428"
      ]
    },
    "customers": {
      "value": "customers",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:491",
        "scripts/business_value_test_index.py:493"
      ]
    },
    "cy:run": {
      "value": "cy:run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:225"
      ]
    },
    "cyan": {
      "value": "cyan",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:352",
        "scripts/test_oauth_local.py:69",
        "scripts/test_oauth_local.py:351"
      ]
    },
    "cypress": {
      "value": "cypress",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/test_collection_audit.py:63",
        "scripts/test_collection_audit.py:63",
        "scripts/test_collection_audit.py:182",
        "scripts/test_collection_audit.py:185",
        "scripts/test_discovery_report.py:48",
        "scripts/test_frontend_ORIGINAL.py:75",
        "scripts/test_frontend_ORIGINAL.py:103",
        "scripts/test_frontend_ORIGINAL.py:103"
      ]
    },
    "cypress/e2e": {
      "value": "cypress/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:38"
      ]
    },
    "cypress/e2e/**/*.cy.ts": {
      "value": "cypress/e2e/**/*.cy.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:231"
      ]
    },
    "cypress:open": {
      "value": "cypress:open",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:223"
      ]
    },
    "dGhlIHNhbXBsZSBub25jZQ==": {
      "value": "dGhlIHNhbXBsZSBub25jZQ==",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:186"
      ]
    },
    "daily_stats": {
      "value": "daily_stats",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:56",
        "scripts/test_dashboard.py:60",
        "scripts/test_execution_tracker.py:527",
        "scripts/test_execution_tracker.py:725",
        "scripts/test_execution_tracker.py:728"
      ]
    },
    "dashboard.html": {
      "value": "dashboard.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:232"
      ]
    },
    "dashboard.md": {
      "value": "dashboard.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:39"
      ]
    },
    "data": {
      "value": "data",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:13",
        "scripts/simple_serialization_test.py:16",
        "scripts/simple_websocket_blocking_test.py:35",
        "scripts/test_adaptive_workflow_direct.py:128",
        "scripts/test_adaptive_workflow_direct.py:136",
        "scripts/test_agent_pipeline_simple.py:147",
        "scripts/test_agent_pipeline_simple.py:248",
        "scripts/test_agent_pipeline_simple.py:250",
        "scripts/test_agent_recovery_simple.py:45",
        "scripts/test_async_serialization_direct.py:22"
      ]
    },
    "data:text/html,<script>alert('xss')</script>": {
      "value": "data:text/html,<script>alert('xss')</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:102"
      ]
    },
    "data_accessible": {
      "value": "data_accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:187",
        "scripts/test_clickhouse_startup_fix.py:187"
      ]
    },
    "data_agent": {
      "value": "data_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:347"
      ]
    },
    "data_agent_fallback": {
      "value": "data_agent_fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:109"
      ]
    },
    "data_analyzer": {
      "value": "data_analyzer",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:188",
        "scripts/test_agent_pipeline_simple.py:197"
      ]
    },
    "data_helper": {
      "value": "data_helper",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:75",
        "scripts/test_adaptive_workflow_direct.py:86",
        "scripts/test_adaptive_workflow_direct.py:130",
        "scripts/test_adaptive_workflow_direct.py:132"
      ]
    },
    "data_layer_found": {
      "value": "data_layer_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:20",
        "scripts/test_gtm_loading.py:51",
        "scripts/test_gtm_loading.py:123"
      ]
    },
    "data_points": {
      "value": "data_points",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:190",
        "scripts/test_data_validator_backup.py:201",
        "scripts/test_data_validator_backup.py:441",
        "scripts/test_data_validator_backup.py:454",
        "scripts/test_data_validator_backup.py:467",
        "scripts/test_data_validator_backup.py:480"
      ]
    },
    "data_quality": {
      "value": "data_quality",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:195"
      ]
    },
    "data_request": {
      "value": "data_request",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:79"
      ]
    },
    "data_sufficiency": {
      "value": "data_sufficiency",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:65"
      ]
    },
    "data_validators": {
      "value": "data_validators",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:90"
      ]
    },
    "database": {
      "value": "database",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:42",
        "auth_service/test_staging_db_connection.py:57",
        "auth_service/test_staging_db_connection.py:94",
        "auth_service/tests/auth-service-down-critical-scenarios.py:190",
        "auth_service/tests/auth-service-down-critical-scenarios.py:195",
        "scripts/add_pytest_markers.py:29",
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "database error": {
      "value": "database error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:360"
      ]
    },
    "database.py": {
      "value": "database.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:106"
      ]
    },
    "database_connection": {
      "value": "database_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:42"
      ]
    },
    "database_deadlock": {
      "value": "database_deadlock",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:37"
      ]
    },
    "database_error": {
      "value": "database_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:120",
        "scripts/test_failure_analyzer.py:244"
      ]
    },
    "database_operations": {
      "value": "database_operations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:34"
      ]
    },
    "database_scripts": {
      "value": "database_scripts",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:128"
      ]
    },
    "database_url": {
      "value": "database_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:133",
        "scripts/debug_supervisor_test.py:38",
        "scripts/test_config_loading.py:112",
        "scripts/unified_test_config.py:128",
        "scripts/unified_test_config.py:136",
        "scripts/unified_test_config.py:144",
        "scripts/unified_test_config.py:152",
        "scripts/unified_test_config.py:307",
        "scripts/unified_test_config.py:308"
      ]
    },
    "database|db|postgres|clickhouse|orm": {
      "value": "database|db|postgres|clickhouse|orm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:98"
      ]
    },
    "date": {
      "value": "date",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:504",
        "scripts/test_execution_tracker.py:729"
      ]
    },
    "datetime": {
      "value": "datetime",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60",
        "scripts/compliance/test_refactor_helper.py:131",
        "scripts/test_intensive_serialization.py:312"
      ]
    },
    "datetime\\.now\\(\\)": {
      "value": "datetime\\.now\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:220"
      ]
    },
    "day_of_week": {
      "value": "day_of_week",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "days)": {
      "value": "days)",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:195"
      ]
    },
    "db": {
      "value": "db",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340",
        "scripts/auto_fix_test_violations.py:497"
      ]
    },
    "db_latencies": {
      "value": "db_latencies",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:51",
        "scripts/real_service_test_metrics.py:52",
        "scripts/real_service_test_metrics.py:53",
        "scripts/real_service_test_metrics.py:103",
        "scripts/real_service_test_metrics.py:104"
      ]
    },
    "db_manager": {
      "value": "db_manager",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:128"
      ]
    },
    "db_queries": {
      "value": "db_queries",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:23",
        "scripts/real_service_test_metrics.py:50",
        "scripts/real_service_test_metrics.py:156",
        "scripts/real_service_test_metrics.py:159",
        "scripts/real_service_test_metrics.py:160"
      ]
    },
    "debug": {
      "value": "debug",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:194",
        "scripts/unified_test_config.py:207"
      ]
    },
    "debug.py": {
      "value": "debug.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:75"
      ]
    },
    "debug_": {
      "value": "debug_",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:31"
      ]
    },
    "debug_script": {
      "value": "debug_script",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:11",
        "auth_service/debug_db_test.py:12",
        "auth_service/debug_db_test.py:13"
      ]
    },
    "decorator spacing": {
      "value": "decorator spacing",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:31"
      ]
    },
    "decorator spacing for sync functions": {
      "value": "decorator spacing for sync functions",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:37"
      ]
    },
    "deep": {
      "value": "deep",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:479"
      ]
    },
    "def": {
      "value": "def",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:572",
        "scripts/compliance/project_test_validator.py:230",
        "scripts/compliance/real_test_requirements_enforcer.py:320",
        "scripts/compliance/real_test_validator.py:205",
        "scripts/compliance/test_fixer.py:230",
        "scripts/compliance/test_fixer.py:285",
        "scripts/comprehensive_test_fixer.py:102",
        "scripts/comprehensive_test_fixer.py:111",
        "scripts/comprehensive_test_fixer.py:120",
        "scripts/comprehensive_test_fixer.py:129"
      ]
    },
    "def (test_\\w+)": {
      "value": "def (test_\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:249"
      ]
    },
    "def __init__(self):": {
      "value": "def __init__(self):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:47"
      ]
    },
    "def _get_cors_origins": {
      "value": "def _get_cors_origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:171"
      ]
    },
    "def _setup_test_data(self):\n        \"\"\"Setup test data and configurations\"\"\"": {
      "value": "def _setup_test_data(self):\n        \"\"\"Setup test data and configurations\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:658"
      ]
    },
    "def _verify_results(self, results):\n        \"\"\"Verify test results and assertions\"\"\"": {
      "value": "def _verify_results(self, results):\n        \"\"\"Verify test results and assertions\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:666"
      ]
    },
    "def get_allowed_origins": {
      "value": "def get_allowed_origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:170"
      ]
    },
    "def mock_components": {
      "value": "def mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:36",
        "scripts/compliance/test_fixer.py:38"
      ]
    },
    "def real_components": {
      "value": "def real_components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:38"
      ]
    },
    "def test_": {
      "value": "def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:89",
        "scripts/autonomous_review/test_generator.py:152",
        "scripts/autonomous_review/test_generator.py:165",
        "scripts/autonomous_review/test_generator.py:175",
        "scripts/autonomous_review/test_generator.py:215",
        "scripts/compliance/demo_test_size_enforcement.py:155",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/compliance/test_size_validator.py:170",
        "scripts/e2e_test_fixer.py:145"
      ]
    },
    "def test_\\\\w+\\\\([^)]*\\\\):[^{]*?(?:pass|return)": {
      "value": "def test_\\\\w+\\\\([^)]*\\\\):[^{]*?(?:pass|return)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:276"
      ]
    },
    "def test_\\w+": {
      "value": "def test_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:90"
      ]
    },
    "def test_{name}(self):\\n        \"\"\"Test {path}\"\"\"\\n        # Critical path that must be tested\\n        # TODO: Implement comprehensive test\\n        pass\\n    \\n": {
      "value": "def test_{name}(self):\\n        \"\"\"Test {path}\"\"\"\\n        # Critical path that must be tested\\n        # TODO: Implement comprehensive test\\n        pass\\n    \\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:240"
      ]
    },
    "def\\s+(\\w+)": {
      "value": "def\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:278"
      ]
    },
    "def\\s+(\\w+)\\s*\\(": {
      "value": "def\\s+(\\w+)\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:135"
      ]
    },
    "def\\s+\\w*_mock\\w*": {
      "value": "def\\s+\\w*_mock\\w*",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:60"
      ]
    },
    "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$": {
      "value": "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:68"
      ]
    },
    "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$": {
      "value": "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:66"
      ]
    },
    "def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{": {
      "value": "def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:63"
      ]
    },
    "def\\s+__init__\\s*\\([^)]*websocket_manager": {
      "value": "def\\s+__init__\\s*\\([^)]*websocket_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:208"
      ]
    },
    "def\\s+create_mock_\\w*component": {
      "value": "def\\s+create_mock_\\w*component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:150"
      ]
    },
    "def\\s+mock_\\w*_component": {
      "value": "def\\s+mock_\\w*_component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:151"
      ]
    },
    "def\\s+mock_\\w+": {
      "value": "def\\s+mock_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:59"
      ]
    },
    "default": {
      "value": "default",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:84",
        "scripts/test/test_clickhouse_staging_fix.py:138",
        "scripts/test_clickhouse_staging.py:30",
        "scripts/test_clickhouse_staging.py:31",
        "scripts/test_execution_tracker.py:89",
        "scripts/test_execution_tracker.py:94",
        "scripts/test_execution_tracker.py:99",
        "scripts/test_execution_tracker.py:104",
        "scripts/test_execution_tracker.py:109",
        "scripts/test_execution_tracker.py:114"
      ]
    },
    "defaultProps": {
      "value": "defaultProps",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:678"
      ]
    },
    "degradation_factor": {
      "value": "degradation_factor",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:123"
      ]
    },
    "degraded": {
      "value": "degraded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:191",
        "auth_service/tests/test_auth_comprehensive_audit.py:47",
        "scripts/team_updates_test_analyzer.py:98",
        "scripts/test_service_monitor.py:174",
        "scripts/test_service_monitor.py:211",
        "scripts/test_staging_login_automated.py:237"
      ]
    },
    "del os.environ item": {
      "value": "del os.environ item",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:85"
      ]
    },
    "del\\s+os\\.environ\\[([\\'\"][^\\'\\\"]+[\\'\"])\\]": {
      "value": "del\\s+os\\.environ\\[([\\'\"][^\\'\\\"]+[\\'\"])\\]",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:83"
      ]
    },
    "delete": {
      "value": "delete",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:256",
        "scripts/comprehensive_test_fixer.py:86"
      ]
    },
    "delta": {
      "value": "delta",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:80",
        "scripts/team_updates_test_analyzer.py:85"
      ]
    },
    "dep_": {
      "value": "dep_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:112"
      ]
    },
    "dependencies": {
      "value": "dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:105",
        "scripts/setup_test_environment.py:169",
        "scripts/setup_test_environment.py:194",
        "scripts/staging_comprehensive_test.py:163",
        "scripts/test_frontend_ORIGINAL.py:101",
        "scripts/test_intensive_serialization.py:112"
      ]
    },
    "dependencies.py": {
      "value": "dependencies.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:108"
      ]
    },
    "dependency_issues": {
      "value": "dependency_issues",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:104",
        "scripts/frontend_iterative_test_runner.py:388",
        "scripts/frontend_iterative_test_runner.py:458",
        "scripts/frontend_iterative_test_runner.py:486"
      ]
    },
    "dependency_resolution": {
      "value": "dependency_resolution",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:42"
      ]
    },
    "dependency_resolution     → test_06_services_starting_before_dependencies": {
      "value": "dependency_resolution     → test_06_services_starting_before_dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:392"
      ]
    },
    "deploy": {
      "value": "deploy",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:45"
      ]
    },
    "deploy_to_gcp.py": {
      "value": "deploy_to_gcp.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:62"
      ]
    },
    "deployment_related": {
      "value": "deployment_related",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:78",
        "scripts/test_error_monitor_logic.py:94",
        "scripts/test_error_monitor_logic.py:170",
        "scripts/test_error_monitor_logic.py:176",
        "scripts/test_error_monitor_logic.py:194",
        "scripts/test_error_monitor_logic.py:200",
        "scripts/test_error_monitor_logic.py:221",
        "scripts/test_error_monitor_logic.py:224"
      ]
    },
    "deployment_service.py": {
      "value": "deployment_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:132"
      ]
    },
    "deprecated": {
      "value": "deprecated",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:160"
      ]
    },
    "deprecation warnings:": {
      "value": "deprecation warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:146"
      ]
    },
    "describe(": {
      "value": "describe(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "describe\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "describe\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:421"
      ]
    },
    "description": {
      "value": "description",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:25",
        "scripts/batch_fix_and_test.py:31",
        "scripts/batch_fix_and_test.py:37",
        "scripts/compliance/test_size_validator.py:442",
        "scripts/final_test_status_check.py:45",
        "scripts/final_test_status_check.py:49",
        "scripts/final_test_status_check.py:55",
        "scripts/final_test_status_check.py:59",
        "scripts/final_test_status_check.py:65",
        "scripts/final_test_status_check.py:71"
      ]
    },
    "detail": {
      "value": "detail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:297",
        "auth_service/tests/test_critical_bugs.py:234",
        "auth_service/tests/test_critical_bugs_real.py:57",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:101",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:102",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:113",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:129",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:143"
      ]
    },
    "detailed_analysis": {
      "value": "detailed_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:290",
        "scripts/fix_test_import_errors.py:327",
        "scripts/fix_test_import_errors.py:329"
      ]
    },
    "detailed_metrics": {
      "value": "detailed_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:219",
        "scripts/test_backend_optimized.py:348"
      ]
    },
    "detailed_results": {
      "value": "detailed_results",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:427"
      ]
    },
    "details": {
      "value": "details",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:147",
        "scripts/comprehensive_test_fixer.py:341",
        "scripts/fix_test_batch.py:37",
        "scripts/fix_test_batch.py:45",
        "scripts/fix_test_batch.py:56",
        "scripts/fix_test_batch.py:73",
        "scripts/fix_test_batch.py:232",
        "scripts/fix_test_batch.py:245",
        "scripts/fix_test_batch.py:301",
        "scripts/fix_test_batch.py:302"
      ]
    },
    "detected": {
      "value": "detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:83"
      ]
    },
    "dev": {
      "value": "dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:11",
        "scripts/test_docker_manager.py:33",
        "scripts/test_docker_manager.py:133",
        "scripts/test_docker_manager.py:209",
        "scripts/test_frontend_ORIGINAL.py:291",
        "scripts/test_oauth_local.py:247",
        "scripts/unified_test_config.py:96",
        "scripts/unified_test_config.py:134"
      ]
    },
    "dev containers running": {
      "value": "dev containers running",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:197"
      ]
    },
    "dev-auth": {
      "value": "dev-auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:38"
      ]
    },
    "dev-backend": {
      "value": "dev-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:128",
        "scripts/test_docker_config.py:159",
        "scripts/test_docker_manager.py:38"
      ]
    },
    "dev-clickhouse": {
      "value": "dev-clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:37"
      ]
    },
    "dev-client-id": {
      "value": "dev-client-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:55"
      ]
    },
    "dev-client-id.apps.googleusercontent.com": {
      "value": "dev-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:27",
        "scripts/test_oauth_dev_config.py:34"
      ]
    },
    "dev-client-secret-123456": {
      "value": "dev-client-secret-123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:28",
        "scripts/test_oauth_dev_config.py:35"
      ]
    },
    "dev-frontend": {
      "value": "dev-frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:137",
        "scripts/test_docker_config.py:165"
      ]
    },
    "dev-jwt-secret-123": {
      "value": "dev-jwt-secret-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:129"
      ]
    },
    "dev-postgres": {
      "value": "dev-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:48",
        "auth_service/tests/integration/test_database_connection.py:143",
        "scripts/test_docker_manager.py:36"
      ]
    },
    "dev-redis": {
      "value": "dev-redis",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:36"
      ]
    },
    "dev-secret-key": {
      "value": "dev-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:427"
      ]
    },
    "dev123": {
      "value": "dev123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:237",
        "scripts/test_staging_auth_e2e.py:68"
      ]
    },
    "dev@example.com": {
      "value": "dev@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:237",
        "scripts/test_staging_auth_e2e.py:67"
      ]
    },
    "devDependencies": {
      "value": "devDependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:101"
      ]
    },
    "dev_launcher": {
      "value": "dev_launcher",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:33"
      ]
    },
    "dev_launcher/tests": {
      "value": "dev_launcher/tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:123",
        "scripts/migrate_test_environment_access.py:366"
      ]
    },
    "dev_password": {
      "value": "dev_password",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:130"
      ]
    },
    "dev_validation": {
      "value": "dev_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:122",
        "scripts/test_improved_environment_validation.py:122"
      ]
    },
    "development": {
      "value": "development",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:19",
        "netra_backend/app/api/test_endpoints.py:27",
        "auth_service/tests/integration/test_database_connection.py:42",
        "auth_service/tests/integration/test_database_connection.py:72",
        "auth_service/tests/integration/test_database_connection.py:88",
        "auth_service/tests/integration/test_database_connection.py:122",
        "auth_service/tests/integration/test_database_connection.py:140",
        "auth_service/tests/integration/test_database_connection.py:148",
        "auth_service/tests/integration/test_database_connection.py:160",
        "auth_service/tests/integration/test_database_connection.py:199"
      ]
    },
    "development with fallback": {
      "value": "development with fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:38"
      ]
    },
    "development_mode": {
      "value": "development_mode",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:56",
        "auth_service/tests/test_auth_comprehensive_audit.py:525"
      ]
    },
    "device_": {
      "value": "device_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:37",
        "auth_service/tests/factories/session_factory.py:161",
        "auth_service/tests/test_session_security_cycles_36_40.py:135",
        "auth_service/tests/test_session_security_cycles_36_40.py:295"
      ]
    },
    "device_id": {
      "value": "device_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:37",
        "auth_service/tests/factories/session_factory.py:161",
        "auth_service/tests/test_auth_real_services_comprehensive.py:119"
      ]
    },
    "diagnosis_assistance": {
      "value": "diagnosis_assistance",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "diff": {
      "value": "diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "different secret loading patterns": {
      "value": "different secret loading patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:534"
      ]
    },
    "different-session-456": {
      "value": "different-session-456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:51"
      ]
    },
    "different@example.com": {
      "value": "different@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:409"
      ]
    },
    "different_provider_id": {
      "value": "different_provider_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:411"
      ]
    },
    "dim": {
      "value": "dim",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:71"
      ]
    },
    "direct_api": {
      "value": "direct_api",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:126",
        "scripts/test_staging_login_automated.py:320"
      ]
    },
    "direct_test_tool": {
      "value": "direct_test_tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:115",
        "scripts/test_websocket_direct.py:151",
        "scripts/test_websocket_direct.py:152",
        "scripts/test_websocket_direct.py:201"
      ]
    },
    "directories": {
      "value": "directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:228"
      ]
    },
    "directories:": {
      "value": "directories:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:239"
      ]
    },
    "directory": {
      "value": "directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:113"
      ]
    },
    "disabled": {
      "value": "disabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:363",
        "scripts/test_backend_ORIGINAL.py:370",
        "scripts/test_backend_ORIGINAL.py:371",
        "scripts/test_backend_port_binding.py:126"
      ]
    },
    "dist": {
      "value": "dist",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:25"
      ]
    },
    "dist-packages": {
      "value": "dist-packages",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:130",
        "scripts/generate_test_audit.py:24",
        "scripts/test_exclusion_check.py:20"
      ]
    },
    "docker": {
      "value": "docker",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375",
        "scripts/launch_test_env.py:23",
        "scripts/pytest_resource_monitor.py:118",
        "scripts/pytest_resource_monitor.py:261",
        "scripts/setup_e2e_test_ports.py:33",
        "scripts/setup_e2e_test_ports.py:50",
        "scripts/start_test_services.py:24",
        "scripts/test_docker_manager.py:97",
        "scripts/test_docker_manager.py:120",
        "scripts/test_docker_manager.py:137"
      ]
    },
    "docker exec netra-dev-auth cat /app/auth_service/test_hot_reload_marker.py 2>/dev/null": {
      "value": "docker exec netra-dev-auth cat /app/auth_service/test_hot_reload_marker.py 2>/dev/null",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:123"
      ]
    },
    "docker exec netra-dev-backend cat /app/netra_backend/app/test_hot_reload_marker.py 2>/dev/null": {
      "value": "docker exec netra-dev-backend cat /app/netra_backend/app/test_hot_reload_marker.py 2>/dev/null",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:85"
      ]
    },
    "docker exec netra-dev-frontend cat /app/auth/test_hot_reload_marker.ts 2>/dev/null": {
      "value": "docker exec netra-dev-frontend cat /app/auth/test_hot_reload_marker.ts 2>/dev/null",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:45"
      ]
    },
    "docker exec netra-test-backend alembic upgrade head": {
      "value": "docker exec netra-test-backend alembic upgrade head",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:252"
      ]
    },
    "docker exec netra-test-redis redis-cli FLUSHALL": {
      "value": "docker exec netra-test-redis redis-cli FLUSHALL",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:265"
      ]
    },
    "docker inspect": {
      "value": "docker inspect",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:152"
      ]
    },
    "docker logs netra-test-": {
      "value": "docker logs netra-test-",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:209"
      ]
    },
    "docker logs netra-test-postgres": {
      "value": "docker logs netra-test-postgres",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:253"
      ]
    },
    "docker ps": {
      "value": "docker ps",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:208"
      ]
    },
    "docker ps --filter \"name=netra-dev\" --format \"{{.Names}}\"": {
      "value": "docker ps --filter \"name=netra-dev\" --format \"{{.Names}}\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:189"
      ]
    },
    "docker restart netra-test-redis": {
      "value": "docker restart netra-test-redis",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:264"
      ]
    },
    "docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres": {
      "value": "docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:160"
      ]
    },
    "docker-compose": {
      "value": "docker-compose",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:24",
        "scripts/launch_test_env.py:45",
        "scripts/launch_test_env.py:85",
        "scripts/start_test_services.py:45",
        "scripts/test_docker_config.py:11"
      ]
    },
    "docker-compose -f docker-compose.dev.yml up -d": {
      "value": "docker-compose -f docker-compose.dev.yml up -d",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:194"
      ]
    },
    "docker-compose -f docker-compose.dev.yml up backend": {
      "value": "docker-compose -f docker-compose.dev.yml up backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:29"
      ]
    },
    "docker-compose ps --services --filter status=running": {
      "value": "docker-compose ps --services --filter status=running",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:78"
      ]
    },
    "docker-compose up -d": {
      "value": "docker-compose up -d",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:89"
      ]
    },
    "docker-compose.dev-minimal.yml": {
      "value": "docker-compose.dev-minimal.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:153"
      ]
    },
    "docker-compose.dev.yml": {
      "value": "docker-compose.dev.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:157"
      ]
    },
    "docker-compose.pytest.yml": {
      "value": "docker-compose.pytest.yml",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:52",
        "scripts/pytest_resource_monitor.py:370"
      ]
    },
    "docker-compose.test.yml": {
      "value": "docker-compose.test.yml",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:46",
        "scripts/launch_test_env.py:86",
        "scripts/start_test_services.py:37",
        "scripts/test_docker_manager.py:40"
      ]
    },
    "docker-compose.windows.yml": {
      "value": "docker-compose.windows.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:122"
      ]
    },
    "docker-compose.yml": {
      "value": "docker-compose.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:122",
        "scripts/test_docker_config.py:153",
        "scripts/test_docker_manager.py:34"
      ]
    },
    "docs/testing": {
      "value": "docs/testing",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:41"
      ]
    },
    "document_analysis": {
      "value": "document_analysis",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "documents.py": {
      "value": "documents.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:73"
      ]
    },
    "does not exist": {
      "value": "does not exist",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:143",
        "scripts/compliance/test_refactor_helper.py:696",
        "scripts/fix_test_import_errors.py:143",
        "scripts/optimize_test_performance.py:354"
      ]
    },
    "does not exist (OK if service has no tests)": {
      "value": "does not exist (OK if service has no tests)",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:108"
      ]
    },
    "does not exist, skipping.": {
      "value": "does not exist, skipping.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:110"
      ]
    },
    "doesn't need splitting (": {
      "value": "doesn't need splitting (",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256"
      ]
    },
    "domain": {
      "value": "domain",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:156",
        "scripts/setup_staging_test_account.py:164"
      ]
    },
    "done": {
      "value": "done",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:210",
        "scripts/test_websocket_chat_standalone.py:206"
      ]
    },
    "down": {
      "value": "down",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:48"
      ]
    },
    "dry_run": {
      "value": "dry_run",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:592"
      ]
    },
    "dummy": {
      "value": "dummy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238"
      ]
    },
    "dup_test": {
      "value": "dup_test",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:61",
        "scripts/test/test_presence_detection.py:62",
        "scripts/test/test_presence_detection.py:63"
      ]
    },
    "duplicate": {
      "value": "duplicate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:422",
        "scripts/analyze_test_overlap.py:323",
        "scripts/analyze_test_overlap.py:351",
        "scripts/analyze_test_overlap.py:379",
        "scripts/analyze_test_overlap.py:411",
        "scripts/analyze_test_overlap.py:442",
        "scripts/analyze_test_overlap.py:444",
        "scripts/analyze_test_overlap.py:485",
        "scripts/analyze_test_overlap.py:529",
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "duplicate MagicMock import": {
      "value": "duplicate MagicMock import",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:25"
      ]
    },
    "duplicate tests": {
      "value": "duplicate tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:212"
      ]
    },
    "duplicates": {
      "value": "duplicates",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:65",
        "scripts/analyze_test_overlap.py:357",
        "scripts/analyze_test_overlap.py:380",
        "scripts/analyze_test_overlap.py:411",
        "scripts/analyze_test_overlap.py:566",
        "scripts/analyze_test_overlap.py:582",
        "scripts/analyze_test_overlap.py:590",
        "scripts/test_collection_audit.py:408"
      ]
    },
    "duration": {
      "value": "duration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:280",
        "scripts/real_service_test_metrics.py:20",
        "scripts/real_service_test_metrics.py:79",
        "scripts/real_service_test_metrics.py:87",
        "scripts/real_service_test_metrics.py:125",
        "scripts/run_all_test_categories.py:84",
        "scripts/run_all_test_categories.py:146",
        "scripts/test_agent_execution_websocket_integration.py:119",
        "scripts/test_agent_execution_websocket_integration.py:309",
        "scripts/test_agent_pipeline_simple.py:108"
      ]
    },
    "duration_days": {
      "value": "duration_days",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "duration_ms": {
      "value": "duration_ms",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:432"
      ]
    },
    "duration_seconds": {
      "value": "duration_seconds",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:83"
      ]
    },
    "e2e": {
      "value": "e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:21",
        "scripts/add_pytest_markers.py:30",
        "scripts/add_pytest_markers.py:31",
        "scripts/add_pytest_markers.py:32",
        "scripts/add_pytest_markers.py:33",
        "scripts/add_pytest_markers.py:34",
        "scripts/add_pytest_markers.py:35",
        "scripts/add_pytest_markers.py:36",
        "scripts/add_pytest_markers.py:37",
        "scripts/add_test_markers.py:57"
      ]
    },
    "e2e_coverage": {
      "value": "e2e_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:631",
        "scripts/business_value_test_index.py:748"
      ]
    },
    "e2e_critical": {
      "value": "e2e_critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:101"
      ]
    },
    "e2e_test": {
      "value": "e2e_test",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:87"
      ]
    },
    "e2e_test_scan_report.md": {
      "value": "e2e_test_scan_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:303"
      ]
    },
    "early": {
      "value": "early",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:108",
        "scripts/business_value_test_index.py:459"
      ]
    },
    "early|starter|standard": {
      "value": "early|starter|standard",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:108"
      ]
    },
    "echo": {
      "value": "echo",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:75"
      ]
    },
    "ecommerce": {
      "value": "ecommerce",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:52",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:257"
      ]
    },
    "edge case": {
      "value": "edge case",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:732"
      ]
    },
    "efficiency": {
      "value": "efficiency",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "element": {
      "value": "element",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "email": {
      "value": "email",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:53",
        "auth_service/test_auth_direct.py:68",
        "auth_service/test_auth_direct.py:69",
        "auth_service/test_auth_direct.py:197",
        "auth_service/test_auth_direct.py:198",
        "auth_service/tests/conftest.py:233",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:432",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:433",
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/token_factory.py:224"
      ]
    },
    "email_service.py": {
      "value": "email_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:124"
      ]
    },
    "email_verified": {
      "value": "email_verified",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:63"
      ]
    },
    "embedded in _load_from_secret_manager()": {
      "value": "embedded in _load_from_secret_manager()",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:351"
      ]
    },
    "embedding_service.py": {
      "value": "embedding_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:129"
      ]
    },
    "empty/auto-pass tests immediately": {
      "value": "empty/auto-pass tests immediately",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "empty_implementation": {
      "value": "empty_implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:230"
      ]
    },
    "empty_implementations": {
      "value": "empty_implementations",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:65",
        "scripts/remove_test_stubs.py:214"
      ]
    },
    "enable-logging": {
      "value": "enable-logging",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:22"
      ]
    },
    "enabled": {
      "value": "enabled",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:192",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:204",
        "scripts/test_backend_ORIGINAL.py:370",
        "scripts/test_backend_ORIGINAL.py:371"
      ]
    },
    "encryption_service.py": {
      "value": "encryption_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:135"
      ]
    },
    "end-to-end": {
      "value": "end-to-end",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:264",
        "scripts/compliance/real_test_validator.py:226"
      ]
    },
    "end_line": {
      "value": "end_line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:60"
      ]
    },
    "end_lineno": {
      "value": "end_lineno",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:151",
        "scripts/auto_fix_test_violations.py:173",
        "scripts/compliance/project_test_validator.py:214",
        "scripts/compliance/real_test_requirements_enforcer.py:297",
        "scripts/compliance/real_test_validator.py:182",
        "scripts/compliance/test_fixer.py:157",
        "scripts/compliance/test_limits_checker.py:187",
        "scripts/compliance/test_refactor_helper.py:151",
        "scripts/compliance/test_refactor_helper.py:268",
        "scripts/compliance/test_size_validator.py:288"
      ]
    },
    "end_of_quarter": {
      "value": "end_of_quarter",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "end_time": {
      "value": "end_time",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:82",
        "scripts/frontend_iterative_test_runner.py:142",
        "scripts/frontend_iterative_test_runner.py:143",
        "scripts/real_service_test_metrics.py:19",
        "scripts/real_service_test_metrics.py:84",
        "scripts/real_service_test_metrics.py:86",
        "scripts/real_service_test_metrics.py:124"
      ]
    },
    "end_to_end": {
      "value": "end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_violations.py:489",
        "scripts/autonomous_review/test_reviewer.py:227",
        "scripts/compliance/real_test_requirements_enforcer.py:343",
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "endpoint": {
      "value": "endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:344",
        "scripts/staging_comprehensive_test.py:221",
        "scripts/staging_comprehensive_test.py:244",
        "scripts/test_agent_orchestration_recovery.py:130",
        "scripts/test_agent_orchestration_recovery.py:137",
        "scripts/test_agent_orchestration_recovery.py:216",
        "scripts/test_agent_recovery_simple.py:64",
        "scripts/test_agent_recovery_simple.py:78",
        "scripts/test_agent_recovery_simple.py:87",
        "scripts/test_agent_recovery_simple.py:95"
      ]
    },
    "endpoint_responses": {
      "value": "endpoint_responses",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:141"
      ]
    },
    "endpoints": {
      "value": "endpoints",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:54",
        "auth_service/tests/test_auth_real_services_comprehensive.py:425",
        "scripts/test_staging_deployment.py:29",
        "scripts/test_staging_deployment.py:114",
        "scripts/test_staging_deployment.py:135",
        "scripts/test_staging_deployment.py:173",
        "scripts/test_staging_login_automated.py:89",
        "scripts/test_staging_login_automated.py:100",
        "scripts/test_staging_login_automated.py:103",
        "scripts/test_staging_login_automated.py:106"
      ]
    },
    "endpoints_successful": {
      "value": "endpoints_successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:258"
      ]
    },
    "endpoints_tested": {
      "value": "endpoints_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:257"
      ]
    },
    "engine": {
      "value": "engine",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:68",
        "scripts/test_supervisor_websocket_integration.py:83",
        "scripts/test_supervisor_websocket_integration.py:116",
        "scripts/test_supervisor_websocket_integration.py:130",
        "scripts/test_supervisor_websocket_integration.py:133"
      ]
    },
    "english": {
      "value": "english",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:250"
      ]
    },
    "enhanced_validation": {
      "value": "enhanced_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:121",
        "scripts/test_improved_environment_validation.py:121"
      ]
    },
    "enterprise": {
      "value": "enterprise",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:226",
        "scripts/business_value_test_index.py:110",
        "scripts/business_value_test_index.py:459",
        "scripts/business_value_test_index.py:675",
        "scripts/business_value_test_index.py:680",
        "scripts/test_seed_data.py:157",
        "scripts/test_seed_data.py:276",
        "scripts/test_websocket_dev_mode.py:126"
      ]
    },
    "enterprise:api_access": {
      "value": "enterprise:api_access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:44"
      ]
    },
    "enterprise:manage_billing": {
      "value": "enterprise:manage_billing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:43"
      ]
    },
    "enterprise:manage_teams": {
      "value": "enterprise:manage_teams",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:41"
      ]
    },
    "enterprise:view_analytics": {
      "value": "enterprise:view_analytics",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:42"
      ]
    },
    "enterprise|premium|sso|saml|sla": {
      "value": "enterprise|premium|sso|saml|sla",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:110"
      ]
    },
    "env": {
      "value": "env",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:131",
        "scripts/compliance/project_test_validator.py:42",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:22",
        "scripts/migrate_test_ids.py:172",
        "scripts/test_oauth_dev_config.py:24",
        "scripts/test_oauth_dev_config.py:38",
        "scripts/test_oauth_dev_config.py:50",
        "scripts/test_oauth_dev_config.py:66"
      ]
    },
    "env = get_env()\nAutomated staging login test script for agent testing.\nThis script provides multiple methods for testing staging login without manual OAuth flow.": {
      "value": "env = get_env()\nAutomated staging login test script for agent testing.\nThis script provides multiple methods for testing staging login without manual OAuth flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:3"
      ]
    },
    "env = get_env()\nCRITICAL FAILING TEST: Redis Configuration Inconsistency Across Services and Environments\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: System Reliability, Development Velocity, Operational Cost Reduction\n- Value Impact: Prevents cache degradation that causes 3-5x slower response times affecting all users\n- Strategic Impact: $200K/year in prevented operational incidents + 40% faster development cycles\n\nTHE SINGLE MOST IMPORTANT REDIS CONFIGURATION PROBLEM:\nConfiguration inconsistency across services leads to silent failures in staging that become\ncritical outages in production. Current system has 30+ duplicate Redis configuration \nimplementations with different fallback behaviors, SSL settings, and connection pooling.\n\nCORE BUSINESS PAIN POINTS THIS TEST EXPOSES:\n1. Silent fallback behavior masks production readiness issues (costs $50K per incident)\n2. Development debugging is 5x slower due to inconsistent configuration patterns\n3. Redis connection failures cause service degradation rather than clear errors\n4. Different services use different Redis configuration patterns (SSOT violation)\n\nCRITICAL PRODUCTION SCENARIO THIS TEST VALIDATES:\nWhen Redis is unavailable in staging, some services fallback gracefully while others fail.\nThis inconsistency means staging doesn't validate production behavior, leading to:\n- Cache misses causing 300% slower response times for Premium/Enterprise customers\n- Session loss requiring user re-authentication (impacts conversion rates)  \n- Background job failures that appear to work but silently drop tasks\n\nTHIS TEST MUST FAIL because current implementation has:\n- RedisManager with localhost fallback in development\n- Background jobs with separate redis_config parameter\n- Different SSL/TLS handling across services  \n- No unified Secret Manager integration for Redis credentials\n- Inconsistent connection pooling across services": {
      "value": "env = get_env()\nCRITICAL FAILING TEST: Redis Configuration Inconsistency Across Services and Environments\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: System Reliability, Development Velocity, Operational Cost Reduction\n- Value Impact: Prevents cache degradation that causes 3-5x slower response times affecting all users\n- Strategic Impact: $200K/year in prevented operational incidents + 40% faster development cycles\n\nTHE SINGLE MOST IMPORTANT REDIS CONFIGURATION PROBLEM:\nConfiguration inconsistency across services leads to silent failures in staging that become\ncritical outages in production. Current system has 30+ duplicate Redis configuration \nimplementations with different fallback behaviors, SSL settings, and connection pooling.\n\nCORE BUSINESS PAIN POINTS THIS TEST EXPOSES:\n1. Silent fallback behavior masks production readiness issues (costs $50K per incident)\n2. Development debugging is 5x slower due to inconsistent configuration patterns\n3. Redis connection failures cause service degradation rather than clear errors\n4. Different services use different Redis configuration patterns (SSOT violation)\n\nCRITICAL PRODUCTION SCENARIO THIS TEST VALIDATES:\nWhen Redis is unavailable in staging, some services fallback gracefully while others fail.\nThis inconsistency means staging doesn't validate production behavior, leading to:\n- Cache misses causing 300% slower response times for Premium/Enterprise customers\n- Session loss requiring user re-authentication (impacts conversion rates)  \n- Background job failures that appear to work but silently drop tasks\n\nTHIS TEST MUST FAIL because current implementation has:\n- RedisManager with localhost fallback in development\n- Background jobs with separate redis_config parameter\n- Different SSL/TLS handling across services  \n- No unified Secret Manager integration for Redis credentials\n- Inconsistent connection pooling across services",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:2"
      ]
    },
    "env = get_env()\nComprehensive Test Suite for Netra Adaptive Workflow\nCombines authentication, direct testing, and integration tests": {
      "value": "env = get_env()\nComprehensive Test Suite for Netra Adaptive Workflow\nCombines authentication, direct testing, and integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:3"
      ]
    },
    "env = get_env()\nComprehensive backend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution": {
      "value": "env = get_env()\nComprehensive backend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:3"
      ]
    },
    "env = get_env()\nComprehensive frontend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution": {
      "value": "env = get_env()\nComprehensive frontend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:3"
      ]
    },
    "env = get_env()\nDebug script to test SecretManagerBuilder implementation and identify issues.": {
      "value": "env = get_env()\nDebug script to test SecretManagerBuilder implementation and identify issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:2"
      ]
    },
    "env = get_env()\nDebug the auth client validation issue": {
      "value": "env = get_env()\nDebug the auth client validation issue",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_client_debug.py:3"
      ]
    },
    "env = get_env()\nTest script to verify ClickHouse graceful failure handling": {
      "value": "env = get_env()\nTest script to verify ClickHouse graceful failure handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:3"
      ]
    },
    "env = get_env()\nTests for Auth Service Port Configuration Mismatch Issue\n\nThis test suite exposes the critical port configuration mismatch where:\n- Auth service binds to port 8081 (from AUTH_PORT env var) \n- But internally configures its URL as http://127.0.0.1:8001\n- This mismatch prevents startup completion and causes connection failures\n\nRoot Cause: Dual configuration sources without validation\n- Port binding uses AUTH_PORT correctly  \n- URL configuration hardcoded or incorrectly derived\n\nThese tests MUST fail initially to demonstrate the issue before fixes are applied.": {
      "value": "env = get_env()\nTests for Auth Service Port Configuration Mismatch Issue\n\nThis test suite exposes the critical port configuration mismatch where:\n- Auth service binds to port 8081 (from AUTH_PORT env var) \n- But internally configures its URL as http://127.0.0.1:8001\n- This mismatch prevents startup completion and causes connection failures\n\nRoot Cause: Dual configuration sources without validation\n- Port binding uses AUTH_PORT correctly  \n- URL configuration hardcoded or incorrectly derived\n\nThese tests MUST fail initially to demonstrate the issue before fixes are applied.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:1"
      ]
    },
    "env vars": {
      "value": "env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:114",
        "scripts/test_staging_config.py:129",
        "scripts/test_staging_config.py:138"
      ]
    },
    "env.ACT": {
      "value": "env.ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:241"
      ]
    },
    "env_file": {
      "value": "env_file",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:167",
        "scripts/unified_test_config.py:176",
        "scripts/unified_test_config.py:185",
        "scripts/unified_test_config.py:319",
        "scripts/unified_test_config.py:320"
      ]
    },
    "env_vars": {
      "value": "env_vars",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:139",
        "auth_service/tests/integration/test_database_connection.py:147",
        "auth_service/tests/integration/test_database_connection.py:159",
        "auth_service/tests/integration/test_database_connection.py:174",
        "scripts/test_database_url_builder_comprehensive.py:185",
        "scripts/test_database_url_builder_comprehensive.py:190",
        "scripts/test_database_url_builder_comprehensive.py:201",
        "scripts/test_database_url_builder_comprehensive.py:212",
        "scripts/test_database_url_builder_comprehensive.py:223",
        "scripts/test_database_url_builder_comprehensive.py:236"
      ]
    },
    "env_vars_referenced": {
      "value": "env_vars_referenced",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:56"
      ]
    },
    "environ_contains": {
      "value": "environ_contains",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:75"
      ]
    },
    "environ_delitem": {
      "value": "environ_delitem",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:82"
      ]
    },
    "environ_get": {
      "value": "environ_get",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:61"
      ]
    },
    "environ_getitem": {
      "value": "environ_getitem",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:68"
      ]
    },
    "environ_setitem": {
      "value": "environ_setitem",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:54"
      ]
    },
    "environment": {
      "value": "environment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:63",
        "auth_service/tests/test_auth_real_services_comprehensive.py:426",
        "auth_service/tests/test_auth_real_services_comprehensive.py:427",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:221",
        "scripts/frontend_iterative_test_runner.py:704",
        "scripts/manage_test_services.py:105",
        "scripts/setup_staging_test_account.py:113",
        "scripts/setup_staging_test_account.py:251",
        "scripts/setup_test_environment.py:104",
        "scripts/test_backend_auth_config.py:33"
      ]
    },
    "environment in ['staging', 'production', 'prod']": {
      "value": "environment in ['staging', 'production', 'prod']",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:35",
        "scripts/test_staging_simplified.py:52"
      ]
    },
    "environment-specific with GCP fallback": {
      "value": "environment-specific with GCP fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:352"
      ]
    },
    "environment. URL:": {
      "value": "environment. URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:372"
      ]
    },
    "environment...": {
      "value": "environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:106"
      ]
    },
    "environment_config": {
      "value": "environment_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:202"
      ]
    },
    "environment_controlled": {
      "value": "environment_controlled",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:269",
        "scripts/test_redis_config_critical_failure.py:290"
      ]
    },
    "environment_name": {
      "value": "environment_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:189"
      ]
    },
    "environment_vars": {
      "value": "environment_vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:28",
        "scripts/test_docker_websocket_fix.py:53",
        "scripts/test_docker_websocket_fix.py:61",
        "scripts/test_docker_websocket_fix.py:264"
      ]
    },
    "environments\n\n🔥 CRITICAL FAILURES (": {
      "value": "environments\n\n🔥 CRITICAL FAILURES (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:219"
      ]
    },
    "err": {
      "value": "err",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:85"
      ]
    },
    "error": {
      "value": "error",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:68",
        "auth_service/tests/auth-service-down-critical-scenarios.py:195",
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/factories/audit_factory.py:176",
        "auth_service/tests/test_auth_comprehensive.py:250",
        "auth_service/tests/test_auth_real_services_comprehensive.py:499",
        "auth_service/tests/test_auth_real_services_comprehensive.py:515",
        "auth_service/tests/test_critical_bugs.py:234",
        "auth_service/tests/test_critical_bugs_real.py:57"
      ]
    },
    "error rate": {
      "value": "error rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:101"
      ]
    },
    "error(s) in": {
      "value": "error(s) in",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:276"
      ]
    },
    "error(s) must be fixed": {
      "value": "error(s) must be fixed",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:313"
      ]
    },
    "error:": {
      "value": "error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "scripts/test_workflows_with_act.py:206"
      ]
    },
    "error_cascade": {
      "value": "error_cascade",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:68",
        "netra_backend/app/services/realistic_test_data/log_generator.py:94",
        "netra_backend/app/services/realistic_test_data/log_generator.py:153",
        "netra_backend/app/services/realistic_test_data/models.py:94"
      ]
    },
    "error_cascades": {
      "value": "error_cascades",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:17"
      ]
    },
    "error_code": {
      "value": "error_code",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:70",
        "netra_backend/app/services/realistic_test_data/models.py:114",
        "netra_backend/app/services/realistic_test_data/models.py:120",
        "netra_backend/app/services/realistic_test_data/models.py:125",
        "netra_backend/app/services/realistic_test_data/models.py:131",
        "netra_backend/app/services/realistic_test_data/models.py:136",
        "auth_service/tests/utils/assertion_helpers.py:159",
        "auth_service/tests/utils/assertion_helpers.py:169",
        "auth_service/tests/utils/assertion_helpers.py:170"
      ]
    },
    "error_description": {
      "value": "error_description",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:251"
      ]
    },
    "error_details": {
      "value": "error_details",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:259",
        "scripts/continuous_e2e_test_runner.py:324",
        "scripts/continuous_e2e_test_runner.py:325",
        "scripts/test_failure_analyzer.py:75",
        "scripts/test_failure_analyzer.py:429",
        "scripts/test_staging_websocket_comprehensive.py:348",
        "scripts/test_staging_websocket_comprehensive.py:352",
        "scripts/test_staging_websocket_comprehensive.py:354",
        "scripts/test_triage_flow.py:83"
      ]
    },
    "error_handler.py": {
      "value": "error_handler.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:91"
      ]
    },
    "error_handlers": {
      "value": "error_handlers",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:89"
      ]
    },
    "error_handling": {
      "value": "error_handling",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:351"
      ]
    },
    "error_line": {
      "value": "error_line",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:258"
      ]
    },
    "error_message": {
      "value": "error_message",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:56",
        "scripts/frontend_iterative_test_runner.py:519",
        "scripts/frontend_iterative_test_runner.py:528",
        "scripts/frontend_iterative_test_runner.py:555",
        "scripts/frontend_iterative_test_runner.py:571",
        "scripts/manage_test_services.py:120",
        "scripts/manage_test_services.py:121",
        "scripts/staging_comprehensive_test.py:433",
        "scripts/test_backend_optimized.py:276"
      ]
    },
    "error_rate": {
      "value": "error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:55",
        "netra_backend/app/services/realistic_test_data/log_generator.py:156",
        "netra_backend/app/services/realistic_test_data/log_generator.py:168",
        "netra_backend/app/services/realistic_test_data/log_generator.py:176",
        "netra_backend/app/services/realistic_test_data/models.py:39",
        "netra_backend/app/services/realistic_test_data/models.py:49",
        "netra_backend/app/services/realistic_test_data/models.py:59",
        "netra_backend/app/services/realistic_test_data/models.py:69",
        "netra_backend/app/services/realistic_test_data/models.py:79",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:203"
      ]
    },
    "error_score": {
      "value": "error_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:95",
        "scripts/test_error_monitor_logic.py:170",
        "scripts/test_error_monitor_logic.py:177",
        "scripts/test_error_monitor_logic.py:194",
        "scripts/test_error_monitor_logic.py:201"
      ]
    },
    "error_type": {
      "value": "error_type",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:30",
        "scripts/comprehensive_test_fixer.py:42",
        "scripts/comprehensive_test_fixer.py:54",
        "scripts/comprehensive_test_fixer.py:66",
        "scripts/comprehensive_test_fixer.py:336",
        "scripts/comprehensive_test_fixer.py:340",
        "scripts/fix_test_batch.py:36",
        "scripts/fix_test_batch.py:44",
        "scripts/fix_test_batch.py:55",
        "scripts/fix_test_batch.py:65"
      ]
    },
    "errors": {
      "value": "errors",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:621",
        "scripts/auto_fix_test_sizes.py:675",
        "scripts/auto_fix_test_sizes.py:753",
        "scripts/auto_fix_test_sizes.py:754",
        "scripts/auto_fix_test_sizes.py:755",
        "scripts/batch_test_generator.py:431",
        "scripts/batch_test_generator.py:440",
        "scripts/batch_test_generator.py:446",
        "scripts/batch_test_generator.py:446",
        "scripts/batch_test_generator.py:490"
      ]
    },
    "errors,": {
      "value": "errors,",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:48",
        "scripts/test_environment_validation_clean.py:85",
        "scripts/test_improved_environment_validation.py:49",
        "scripts/test_improved_environment_validation.py:86"
      ]
    },
    "estimatedTime": {
      "value": "estimatedTime",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:288",
        "scripts/test_example_message_flow.py:410"
      ]
    },
    "estimated_duration_ms": {
      "value": "estimated_duration_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:58"
      ]
    },
    "estimated_impact": {
      "value": "estimated_impact",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:259"
      ]
    },
    "estimated_improvement": {
      "value": "estimated_improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "estimated_lines": {
      "value": "estimated_lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:425",
        "scripts/compliance/test_refactor_helper.py:435",
        "scripts/compliance/test_refactor_helper.py:465",
        "scripts/compliance/test_refactor_helper.py:475",
        "scripts/compliance/test_refactor_helper.py:508",
        "scripts/compliance/test_refactor_helper.py:573",
        "scripts/compliance/test_refactor_helper.py:604",
        "scripts/compliance/test_refactor_helper.py:604",
        "scripts/compliance/test_refactor_helper.py:624"
      ]
    },
    "estimated_revenue_usd": {
      "value": "estimated_revenue_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "estimated_savings": {
      "value": "estimated_savings",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:218"
      ]
    },
    "event": {
      "value": "event",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:665",
        "scripts/test_gtm_tracking.py:45",
        "scripts/test_gtm_tracking.py:56",
        "scripts/test_gtm_tracking.py:94",
        "scripts/test_gtm_tracking.py:127",
        "scripts/test_gtm_tracking.py:129"
      ]
    },
    "event(s)": {
      "value": "event(s)",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:130"
      ]
    },
    "event_action": {
      "value": "event_action",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:57"
      ]
    },
    "event_confirmation": {
      "value": "event_confirmation",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:303"
      ]
    },
    "event_count": {
      "value": "event_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:135",
        "scripts/test_service_monitor.py:258"
      ]
    },
    "event_dispatcher.py": {
      "value": "event_dispatcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:90"
      ]
    },
    "event_handling_problems": {
      "value": "event_handling_problems",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:100",
        "scripts/frontend_iterative_test_runner.py:320",
        "scripts/frontend_iterative_test_runner.py:450",
        "scripts/frontend_iterative_test_runner.py:478"
      ]
    },
    "event_metadata": {
      "value": "event_metadata",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:57"
      ]
    },
    "event_order": {
      "value": "event_order",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:238",
        "scripts/test_agent_execution_websocket_integration.py:315"
      ]
    },
    "event_timeline": {
      "value": "event_timeline",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:105",
        "scripts/test_agent_pipeline_simple.py:402",
        "scripts/test_agent_pipeline_simple.py:404",
        "scripts/test_agent_pipeline_simple.py:405"
      ]
    },
    "event_type": {
      "value": "event_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:51",
        "auth_service/tests/utils/assertion_helpers.py:258",
        "auth_service/tests/utils/assertion_helpers.py:263",
        "auth_service/tests/utils/assertion_helpers.py:264",
        "scripts/test_seed_data.py:309",
        "scripts/test_seed_data.py:318"
      ]
    },
    "event_types": {
      "value": "event_types",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:117",
        "scripts/test_websocket_standalone.py:98",
        "scripts/test_websocket_standalone.py:175"
      ]
    },
    "event_types_received": {
      "value": "event_types_received",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:235"
      ]
    },
    "events": {
      "value": "events",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:150"
      ]
    },
    "events in": {
      "value": "events in",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:68"
      ]
    },
    "events.py": {
      "value": "events.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:75",
        "scripts/batch_test_generator.py:107"
      ]
    },
    "events_count": {
      "value": "events_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:156"
      ]
    },
    "events_per_agent": {
      "value": "events_per_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:104",
        "scripts/test_agent_pipeline_simple.py:396"
      ]
    },
    "events_per_second": {
      "value": "events_per_second",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:120",
        "scripts/test_agent_execution_websocket_integration.py:310",
        "scripts/test_websocket_injection_fix_complete.py:101"
      ]
    },
    "events_validated": {
      "value": "events_validated",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:157",
        "scripts/test_staging_websocket_comprehensive.py:157"
      ]
    },
    "exact duplicate test pairs. These should be immediately reviewed and consolidated.": {
      "value": "exact duplicate test pairs. These should be immediately reviewed and consolidated.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:444"
      ]
    },
    "example_message_id": {
      "value": "example_message_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:282",
        "scripts/test_example_message_flow.py:404"
      ]
    },
    "example_message_metadata": {
      "value": "example_message_metadata",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:283",
        "scripts/test_example_message_flow.py:405"
      ]
    },
    "examples": {
      "value": "examples",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "exception": {
      "value": "exception",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:350",
        "scripts/test_gtm_tracking.py:94"
      ]
    },
    "exception:": {
      "value": "exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:258"
      ]
    },
    "exceptions.py": {
      "value": "exceptions.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:107"
      ]
    },
    "excess_device": {
      "value": "excess_device",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:149"
      ]
    },
    "excessive_mocking": {
      "value": "excessive_mocking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:286",
        "scripts/compliance/real_test_linter.py:164",
        "scripts/compliance/real_test_requirements_enforcer.py:368",
        "scripts/compliance/real_test_requirements_enforcer.py:516",
        "scripts/compliance/real_test_validator.py:247",
        "scripts/compliance/test_fixer.py:368"
      ]
    },
    "excludeSwitches": {
      "value": "excludeSwitches",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:22"
      ]
    },
    "excluded_paths = [\"/health\", \"/metrics\", \"/\", \"/docs\", \"/openapi.json\", \"/redoc\", \"/ws\", \"/websocket\", \"/ws/test\"]": {
      "value": "excluded_paths = [\"/health\", \"/metrics\", \"/\", \"/docs\", \"/openapi.json\", \"/redoc\", \"/ws\", \"/websocket\", \"/ws/test\"]",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:193"
      ]
    },
    "exec": {
      "value": "exec",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:97",
        "scripts/test_docker_manager.py:120"
      ]
    },
    "execute": {
      "value": "execute",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:72",
        "scripts/test/test_supervisor_import.py:46"
      ]
    },
    "execution failed:": {
      "value": "execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:185"
      ]
    },
    "execution_engine": {
      "value": "execution_engine",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:50"
      ]
    },
    "execution_results": {
      "value": "execution_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:216",
        "scripts/test_backend_optimized.py:274"
      ]
    },
    "execution_time": {
      "value": "execution_time",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:62",
        "scripts/run_supervisor_test_coverage.py:298",
        "scripts/run_supervisor_test_coverage.py:346",
        "scripts/test_intensive_serialization.py:97",
        "scripts/test_real_jwt_e2e.py:41",
        "scripts/test_real_jwt_e2e.py:68",
        "scripts/test_real_jwt_e2e.py:78",
        "scripts/test_real_jwt_e2e.py:99",
        "scripts/test_real_jwt_e2e.py:109",
        "scripts/test_real_jwt_e2e.py:126"
      ]
    },
    "executive_summary": {
      "value": "executive_summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:84"
      ]
    },
    "existing@example.com": {
      "value": "existing@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:147",
        "auth_service/tests/test_signup_flow_comprehensive.py:156"
      ]
    },
    "exists": {
      "value": "exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:185",
        "scripts/test_docker_websocket_fix.py:191",
        "scripts/test_docker_websocket_fix.py:283",
        "scripts/test_docker_websocket_fix.py:319"
      ]
    },
    "exists in": {
      "value": "exists in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:116"
      ]
    },
    "exit_code": {
      "value": "exit_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:63",
        "scripts/test_verify_workflow_status_corrected.py:75",
        "scripts/test_websocket_injection_fix_complete.py:272",
        "scripts/test_websocket_injection_fix_complete.py:306",
        "scripts/test_websocket_injection_fix_complete.py:316",
        "scripts/test_websocket_injection_fix_complete.py:322",
        "scripts/test_websocket_injection_fix_complete.py:349",
        "scripts/test_websocket_injection_fix_complete.py:350"
      ]
    },
    "exp": {
      "value": "exp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:41",
        "auth_service/tests/factories/token_factory.py:135",
        "auth_service/tests/test_auth_comprehensive.py:152",
        "auth_service/tests/test_auth_comprehensive_audit.py:189",
        "auth_service/tests/test_auth_comprehensive_audit.py:258",
        "auth_service/tests/test_auth_comprehensive_audit.py:434",
        "auth_service/tests/test_auth_comprehensive_audit.py:455",
        "auth_service/tests/test_refresh_endpoint.py:114",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:31",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:43"
      ]
    },
    "expect": {
      "value": "expect",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:198",
        "scripts/test_websocket_cors_comprehensive.py:204",
        "scripts/test_websocket_cors_comprehensive.py:210",
        "scripts/test_websocket_cors_comprehensive.py:218",
        "scripts/test_websocket_cors_comprehensive.py:224",
        "scripts/test_websocket_cors_comprehensive.py:230",
        "scripts/test_websocket_cors_comprehensive.py:238",
        "scripts/test_websocket_cors_comprehensive.py:246",
        "scripts/test_websocket_cors_comprehensive.py:254",
        "scripts/test_websocket_cors_comprehensive.py:262"
      ]
    },
    "expect(": {
      "value": "expect(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "expect_success": {
      "value": "expect_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:63",
        "scripts/test_websocket_cors_comprehensive.py:281",
        "scripts/test_websocket_cors_comprehensive.py:306"
      ]
    },
    "expected": {
      "value": "expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:320",
        "scripts/test_adaptive_workflow.py:326",
        "scripts/test_adaptive_workflow.py:331",
        "scripts/test_adaptive_workflow.py:339",
        "scripts/test_adaptive_workflow_direct.py:165",
        "scripts/test_adaptive_workflow_direct.py:171",
        "scripts/test_adaptive_workflow_direct.py:176",
        "scripts/test_adaptive_workflow_direct.py:185",
        "scripts/test_adaptive_workflow_local.py:93",
        "scripts/test_adaptive_workflow_local.py:101"
      ]
    },
    "expected_contains": {
      "value": "expected_contains",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:143",
        "auth_service/tests/integration/test_database_connection.py:155",
        "auth_service/tests/integration/test_database_connection.py:165",
        "auth_service/tests/integration/test_database_connection.py:181"
      ]
    },
    "expected_exit_code": {
      "value": "expected_exit_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:64",
        "scripts/test_verify_workflow_status_corrected.py:76"
      ]
    },
    "expected_id": {
      "value": "expected_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:34",
        "scripts/test_oauth_dev_config.py:46",
        "scripts/test_oauth_dev_config.py:60",
        "scripts/test_oauth_dev_config.py:90",
        "scripts/test_oauth_dev_config.py:90"
      ]
    },
    "expected_id_log": {
      "value": "expected_id_log",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:32",
        "scripts/test_oauth_dev_config.py:44",
        "scripts/test_oauth_dev_config.py:58"
      ]
    },
    "expected_patterns": {
      "value": "expected_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:53",
        "scripts/test_cold_start_e2e.py:418"
      ]
    },
    "expected_secret": {
      "value": "expected_secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:35",
        "scripts/test_oauth_dev_config.py:47",
        "scripts/test_oauth_dev_config.py:61",
        "scripts/test_oauth_dev_config.py:96",
        "scripts/test_oauth_dev_config.py:96"
      ]
    },
    "expected_secret_log": {
      "value": "expected_secret_log",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:33",
        "scripts/test_oauth_dev_config.py:45",
        "scripts/test_oauth_dev_config.py:59"
      ]
    },
    "expected_sufficiency": {
      "value": "expected_sufficiency",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:48"
      ]
    },
    "expected_support": {
      "value": "expected_support",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:125"
      ]
    },
    "expected_value": {
      "value": "expected_value",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "expired": {
      "value": "expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:378",
        "auth_service/tests/test_refresh_endpoint.py:138",
        "auth_service/tests/utils/assertion_helpers.py:56",
        "auth_service/tests/utils/assertion_helpers.py:68"
      ]
    },
    "expired-test": {
      "value": "expired-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:182"
      ]
    },
    "expired@example.com": {
      "value": "expired@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:191"
      ]
    },
    "expired_token": {
      "value": "expired_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:105"
      ]
    },
    "expires": {
      "value": "expires",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:143"
      ]
    },
    "expires_at": {
      "value": "expires_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:39",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:124",
        "scripts/setup_staging_test_account.py:51",
        "scripts/test_seed_data.py:250",
        "scripts/test_seed_data.py:255"
      ]
    },
    "expires_in": {
      "value": "expires_in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:196",
        "auth_service/tests/test_oauth_state_validation.py:116",
        "auth_service/tests/test_oauth_state_validation.py:261",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:63",
        "auth_service/tests/test_refresh_endpoint_integration.py:49",
        "auth_service/tests/unit/test_refresh_endpoint.py:55",
        "scripts/test_staging_auth_e2e.py:112"
      ]
    },
    "exponential": {
      "value": "exponential",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:141",
        "netra_backend/app/services/realistic_test_data/models.py:75"
      ]
    },
    "exponential_spread": {
      "value": "exponential_spread",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:95"
      ]
    },
    "export": {
      "value": "export",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:693"
      ]
    },
    "export const HOT_RELOAD_TEST =": {
      "value": "export const HOT_RELOAD_TEST =",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:30"
      ]
    },
    "exportConversation: jest.fn()": {
      "value": "exportConversation: jest.fn()",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:626"
      ]
    },
    "export_service.py": {
      "value": "export_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:125"
      ]
    },
    "exportconversation": {
      "value": "exportconversation",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:571"
      ]
    },
    "expose_headers": {
      "value": "expose_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:355"
      ]
    },
    "extended": {
      "value": "extended",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:163",
        "scripts/batch_test_generator.py:386"
      ]
    },
    "external_services": {
      "value": "external_services",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49"
      ]
    },
    "extra Node.js processes remain": {
      "value": "extra Node.js processes remain",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:119"
      ]
    },
    "extract_utilities": {
      "value": "extract_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:579",
        "scripts/compliance/test_refactor_helper.py:632"
      ]
    },
    "extracted_entities": {
      "value": "extracted_entities",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:43"
      ]
    },
    "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9": {
      "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:109",
        "auth_service/tests/test_auth_comprehensive_audit.py:150",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:174"
      ]
    },
    "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.invalid": {
      "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:193"
      ]
    },
    "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.invalid.signature": {
      "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.invalid.signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:302"
      ]
    },
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY0MTQxMDMsImV4cCI6MTc1NjQxNTAwMywidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2Nlc3MiLCJpc3MiOiJuZXRyYS1hdXRoLXNlcnZpY2UiLCJhdWQiOiJuZXRyYS1wbGF0Zm9ybSIsImp0aSI6Ijc2ZmZiYTg4LWJjNDctNDkyNS04MWJkLTRlMWQxMDlhMjRjYiIsImVudiI6InN0YWdpbmciLCJzdmNfaWQiOiJuZXRyYS1hdXRoLXN0YWdpbmctMTc1NjQwOTIxMyIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsInBlcm1pc3Npb25zIjpbXX0.KNIAy-aqKIyPy3rv69zMbCGqpmwNOm78KfX9ThRBUFE": {
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY0MTQxMDMsImV4cCI6MTc1NjQxNTAwMywidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2Nlc3MiLCJpc3MiOiJuZXRyYS1hdXRoLXNlcnZpY2UiLCJhdWQiOiJuZXRyYS1wbGF0Zm9ybSIsImp0aSI6Ijc2ZmZiYTg4LWJjNDctNDkyNS04MWJkLTRlMWQxMDlhMjRjYiIsImVudiI6InN0YWdpbmciLCJzdmNfaWQiOiJuZXRyYS1hdXRoLXN0YWdpbmctMTc1NjQwOTIxMyIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsInBlcm1pc3Npb25zIjpbXX0.KNIAy-aqKIyPy3rv69zMbCGqpmwNOm78KfX9ThRBUFE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:14"
      ]
    },
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY0NzIzNjYsImV4cCI6MTc1NjQ3MzI2NiwidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2VzcyIsImlzcyI6Im5ldHJhLWF1dGgtc2VydmljZSIsImF1ZCI6Im5ldHJhLXBsYXRmb3JtIiwianRpIjoiNjRmMjQ4MzQtNjdlMi00NjViLWFjNWQtOWY3NzIyZDdlYjgyIiwiZW52Ijoic3RhZ2luZyIsInN2Y19pZCI6Im5ldHJhLWF1dGgtc3RhZ2luZy0xNzU2NDY0NjkxIiwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIiwicGVybWlzc2lvbnMiOltdfQ.abVn9LBJSqFp1yCglnWqXrQoMjCxUdvFIjGcxV0GbXA": {
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY0NzIzNjYsImV4cCI6MTc1NjQ3MzI2NiwidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2VzcyIsImlzcyI6Im5ldHJhLWF1dGgtc2VydmljZSIsImF1ZCI6Im5ldHJhLXBsYXRmb3JtIiwianRpIjoiNjRmMjQ4MzQtNjdlMi00NjViLWFjNWQtOWY3NzIyZDdlYjgyIiwiZW52Ijoic3RhZ2luZyIsInN2Y19pZCI6Im5ldHJhLWF1dGgtc3RhZ2luZy0xNzU2NDY0NjkxIiwiZW1haWwiOiJ1c2VyQGV4YW1wbGUuY29tIiwicGVybWlzc2lvbnMiOltdfQ.abVn9LBJSqFp1yCglnWqXrQoMjCxUdvFIjGcxV0GbXA",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:54"
      ]
    },
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY1MzMzOTUsImV4cCI6MTc1NjUzNDI5NSwidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2Nlc3MiLCJpc3MiOiJuZXRyYS1hdXRoLXNlcnZpY2UiLCJhdWQiOiJuZXRyYS1wbGF0Zm9ybSIsImp0aSI6IjYwMTZmMWM3LTA5ZmYtNDg0NS1hMzZmLWFiYTc1MzNmNDc1ZSIsImVudiI6InN0YWdpbmciLCJzdmNfaWQiOiJuZXRyYS1hdXRoLXN0YWdpbmctMTc1NjUzMjA5NyIsImVtYWlsIjoiYW50aG9ueS5jaGF1ZGhhcnlAbmV0cmFzeXN0ZW1zLmFpIiwicGVybWlzc2lvbnMiOltdfQ.9fRfYmOTvB1bnr07GT1o-F36KEl7tJuTRTdLPyfuAsI": {
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY1MzMzOTUsImV4cCI6MTc1NjUzNDI5NSwidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2Nlc3MiLCJpc3MiOiJuZXRyYS1hdXRoLXNlcnZpY2UiLCJhdWQiOiJuZXRyYS1wbGF0Zm9ybSIsImp0aSI6IjYwMTZmMWM3LTA5ZmYtNDg0NS1hMzZmLWFiYTc1MzNmNDc1ZSIsImVudiI6InN0YWdpbmciLCJzdmNfaWQiOiJuZXRyYS1hdXRoLXN0YWdpbmctMTc1NjUzMjA5NyIsImVtYWlsIjoiYW50aG9ueS5jaGF1ZGhhcnlAbmV0cmFzeXN0ZW1zLmFpIiwicGVybWlzc2lvbnMiOltdfQ.9fRfYmOTvB1bnr07GT1o-F36KEl7tJuTRTdLPyfuAsI",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:20"
      ]
    },
    "f": {
      "value": "f",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "fail": {
      "value": "fail",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:728",
        "scripts/test_agent_orchestration_recovery.py:95",
        "scripts/test_agent_orchestration_recovery.py:153",
        "scripts/test_agent_orchestration_recovery.py:228",
        "scripts/test_agent_orchestration_recovery.py:345",
        "scripts/test_agent_orchestration_recovery.py:356",
        "scripts/test_agent_orchestration_recovery.py:368"
      ]
    },
    "fail_fast": {
      "value": "fail_fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:98",
        "scripts/unified_test_config.py:196",
        "scripts/unified_test_config.py:203",
        "scripts/unified_test_config.py:210",
        "scripts/unified_test_config.py:217",
        "scripts/unified_test_config.py:391"
      ]
    },
    "fail_fast_enabled": {
      "value": "fail_fast_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:170"
      ]
    },
    "fail_fast_threshold": {
      "value": "fail_fast_threshold",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:180",
        "scripts/test_backend_optimized.py:187",
        "scripts/test_backend_optimized.py:194"
      ]
    },
    "failed": {
      "value": "failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:102",
        "auth_service/tests/test_auth_comprehensive_audit.py:345",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:207",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:265",
        "scripts/batch_fix_and_test.py:143",
        "scripts/comprehensive_test_fixer.py:282",
        "scripts/comprehensive_test_fixer.py:332",
        "scripts/comprehensive_test_fixer.py:334",
        "scripts/comprehensive_test_fixer.py:337",
        "scripts/comprehensive_test_fixer.py:393"
      ]
    },
    "failed with exception:": {
      "value": "failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:407"
      ]
    },
    "failed!": {
      "value": "failed!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:50"
      ]
    },
    "failed)": {
      "value": "failed)",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:220"
      ]
    },
    "failed:": {
      "value": "failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:312",
        "scripts/test_auth_integration.py:55"
      ]
    },
    "failed_files": {
      "value": "failed_files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:292",
        "scripts/fix_test_import_errors.py:312",
        "scripts/fix_test_import_errors.py:321",
        "scripts/fix_test_import_errors.py:322",
        "scripts/fix_test_import_errors.py:323"
      ]
    },
    "failed_requests": {
      "value": "failed_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265",
        "scripts/staging_comprehensive_test.py:378"
      ]
    },
    "failed_tests": {
      "value": "failed_tests",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:50",
        "scripts/continuous_e2e_test_runner.py:60",
        "scripts/team_updates_test_analyzer.py:145",
        "scripts/test_failure_scanner.py:160"
      ]
    },
    "failed_with_fixes": {
      "value": "failed_with_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:809"
      ]
    },
    "failing": {
      "value": "failing",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:234"
      ]
    },
    "failing tests": {
      "value": "failing tests",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:117"
      ]
    },
    "failing tests to process": {
      "value": "failing tests to process",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:300"
      ]
    },
    "failing tests** tracked in bad_tests.json": {
      "value": "failing tests** tracked in bad_tests.json",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:165"
      ]
    },
    "failing_tests": {
      "value": "failing_tests",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:116",
        "scripts/generate_test_audit.py:132",
        "scripts/generate_test_audit.py:164",
        "scripts/generate_test_audit.py:165"
      ]
    },
    "failover@example.com": {
      "value": "failover@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:45"
      ]
    },
    "failure": {
      "value": "failure",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:350",
        "scripts/team_updates_test_analyzer.py:61"
      ]
    },
    "failure rate": {
      "value": "failure rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:796"
      ]
    },
    "failure_rate": {
      "value": "failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:71",
        "scripts/test_dashboard.py:72",
        "scripts/test_dashboard.py:83",
        "scripts/test_dashboard.py:351",
        "scripts/test_execution_tracker.py:508",
        "scripts/test_execution_tracker.py:731",
        "scripts/test_execution_tracker.py:740",
        "scripts/test_execution_tracker.py:796",
        "scripts/test_failure_scanner.py:196",
        "scripts/test_failure_scanner.py:226"
      ]
    },
    "failure_reason": {
      "value": "failure_reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:95"
      ]
    },
    "failure_responses": {
      "value": "failure_responses",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:280"
      ]
    },
    "failure_scan.json": {
      "value": "failure_scan.json",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:349",
        "scripts/fix_test_batch.py:349",
        "scripts/test_failure_scanner.py:211"
      ]
    },
    "failure_start": {
      "value": "failure_start",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:114"
      ]
    },
    "failure_trends": {
      "value": "failure_trends",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:698"
      ]
    },
    "failures": {
      "value": "failures",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:88",
        "scripts/frontend_iterative_test_runner.py:149",
        "scripts/run_all_test_categories.py:85",
        "scripts/run_all_test_categories.py:111",
        "scripts/run_all_test_categories.py:146",
        "scripts/run_all_test_categories.py:146",
        "scripts/team_updates_test_analyzer.py:56",
        "scripts/team_updates_test_analyzer.py:90",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:116"
      ]
    },
    "failures (": {
      "value": "failures (",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:730"
      ]
    },
    "failures_found": {
      "value": "failures_found",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:97",
        "scripts/iterative_test_fix_loop.py:111"
      ]
    },
    "fake": {
      "value": "fake",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238"
      ]
    },
    "fake tests found": {
      "value": "fake tests found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:463"
      ]
    },
    "fake tests found in": {
      "value": "fake tests found in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:91"
      ]
    },
    "fake tests in": {
      "value": "fake tests in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:74"
      ]
    },
    "fake tests requiring attention": {
      "value": "fake tests requiring attention",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:444"
      ]
    },
    "fake tests, severity:": {
      "value": "fake tests, severity:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:286"
      ]
    },
    "fake_test_count": {
      "value": "fake_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:174",
        "scripts/compliance/fake_test_scanner.py:179",
        "scripts/compliance/fake_test_scanner.py:286"
      ]
    },
    "fake_tests": {
      "value": "fake_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:164",
        "scripts/compliance/fake_test_scanner.py:168",
        "scripts/compliance/fake_test_scanner.py:174",
        "scripts/compliance/fake_test_scanner.py:239"
      ]
    },
    "fake_tests_by_directory": {
      "value": "fake_tests_by_directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:84"
      ]
    },
    "fake_tests_by_severity": {
      "value": "fake_tests_by_severity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:86",
        "scripts/compliance/fake_test_scanner.py:117",
        "scripts/compliance/fake_test_scanner.py:263",
        "scripts/compliance/fake_test_scanner.py:266",
        "scripts/compliance/fake_test_scanner.py:418"
      ]
    },
    "fake_tests_by_type": {
      "value": "fake_tests_by_type",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:85",
        "scripts/compliance/fake_test_scanner.py:116",
        "scripts/compliance/fake_test_scanner.py:271",
        "scripts/compliance/fake_test_scanner.py:273",
        "scripts/compliance/fake_test_scanner.py:417"
      ]
    },
    "fake_token": {
      "value": "fake_token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163",
        "scripts/test_verify_workflow_status_corrected.py:171"
      ]
    },
    "fallback": {
      "value": "fallback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:156",
        "auth_service/tests/auth-service-down-critical-scenarios.py:415",
        "scripts/test_async_serialization_direct.py:58"
      ]
    },
    "fallback-client-id": {
      "value": "fallback-client-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:29",
        "scripts/test_oauth_dev_config.py:56"
      ]
    },
    "fallback-client-id.apps.googleusercontent.com": {
      "value": "fallback-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:41",
        "scripts/test_oauth_dev_config.py:46"
      ]
    },
    "fallback-secret": {
      "value": "fallback-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:30"
      ]
    },
    "fallback-secret-789012": {
      "value": "fallback-secret-789012",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:42",
        "scripts/test_oauth_dev_config.py:47"
      ]
    },
    "fallback-user-789": {
      "value": "fallback-user-789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:125",
        "auth_service/tests/test_refresh_token_fix.py:142"
      ]
    },
    "fallback@example.com": {
      "value": "fallback@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:126",
        "auth_service/tests/test_refresh_token_fix.py:143"
      ]
    },
    "fallback_logic": {
      "value": "fallback_logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:275",
        "scripts/test_secret_manager_builder_critical.py:352"
      ]
    },
    "fallback_mode": {
      "value": "fallback_mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:275",
        "scripts/test_redis_config_critical_failure.py:269",
        "scripts/test_redis_config_critical_failure.py:290"
      ]
    },
    "fallback_used": {
      "value": "fallback_used",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:81"
      ]
    },
    "false": {
      "value": "false",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:58",
        "auth_service/tests/conftest.py:82",
        "auth_service/tests/test_redis_staging_fixes.py:23",
        "auth_service/tests/test_redis_staging_fixes.py:24",
        "auth_service/tests/test_redis_staging_fixes.py:45",
        "auth_service/tests/test_redis_staging_fixes.py:66",
        "auth_service/tests/test_redis_staging_fixes.py:86",
        "auth_service/tests/test_redis_staging_fixes.py:136",
        "auth_service/tests/test_redis_staging_fixes.py:162",
        "scripts/debug_supervisor_test.py:17"
      ]
    },
    "family_name": {
      "value": "family_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:238"
      ]
    },
    "fast": {
      "value": "fast",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:193"
      ]
    },
    "fast_first": {
      "value": "fast_first",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:629"
      ]
    },
    "feature": {
      "value": "feature",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:506",
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "feature_based": {
      "value": "feature_based",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:505"
      ]
    },
    "feature_flag_service.py": {
      "value": "feature_flag_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:127"
      ]
    },
    "fernet-key": {
      "value": "fernet-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:144"
      ]
    },
    "fernet_key": {
      "value": "fernet_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:96",
        "scripts/test_staging_config.py:136"
      ]
    },
    "fewer warnings": {
      "value": "fewer warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:160",
        "scripts/test_service_startup_with_missing_optionals.py:191"
      ]
    },
    "fewer warnings after adding important variables": {
      "value": "fewer warnings after adding important variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:86",
        "scripts/test_improved_environment_validation.py:87"
      ]
    },
    "field (but tests expect it)": {
      "value": "field (but tests expect it)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:67"
      ]
    },
    "field1": {
      "value": "field1",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:299"
      ]
    },
    "field2": {
      "value": "field2",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:300"
      ]
    },
    "fields_received": {
      "value": "fields_received",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:136",
        "auth_service/tests/test_refresh_endpoint_integration.py:151"
      ]
    },
    "file": {
      "value": "file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64",
        "scripts/analyze_test_mocks.py:154",
        "scripts/analyze_test_mocks.py:177",
        "scripts/analyze_test_mocks.py:188",
        "scripts/analyze_test_mocks.py:188",
        "scripts/autonomous_review/test_reviewer.py:96",
        "scripts/autonomous_review/test_reviewer.py:104",
        "scripts/autonomous_review/test_reviewer.py:105",
        "scripts/business_value_test_index.py:640",
        "scripts/check_test_compliance.py:110"
      ]
    },
    "file=": {
      "value": "file=",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:100"
      ]
    },
    "file_analyses": {
      "value": "file_analyses",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:78",
        "scripts/compliance/test_size_validator.py:91",
        "scripts/compliance/test_size_validator.py:494"
      ]
    },
    "file_error": {
      "value": "file_error",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:147",
        "scripts/compliance/real_test_requirements_enforcer.py:179",
        "scripts/compliance/real_test_validator.py:102"
      ]
    },
    "file_fixes": {
      "value": "file_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:407"
      ]
    },
    "file_operations": {
      "value": "file_operations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "file_path": {
      "value": "file_path",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:633",
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_sizes.py:673",
        "scripts/compliance/test_refactor_helper.py:99",
        "scripts/compliance/test_size_validator.py:440",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/frontend_iterative_test_runner.py:520",
        "scripts/test_dashboard.py:350"
      ]
    },
    "file_path,line_number,violation_type,severity,description,recommended_action": {
      "value": "file_path,line_number,violation_type,severity,description,recommended_action",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:291",
        "scripts/remove_test_stubs.py:294"
      ]
    },
    "file_pattern": {
      "value": "file_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:246",
        "scripts/unified_test_config.py:251",
        "scripts/unified_test_config.py:256",
        "scripts/unified_test_config.py:261",
        "scripts/unified_test_config.py:266"
      ]
    },
    "file_read": {
      "value": "file_read",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:352"
      ]
    },
    "file_size": {
      "value": "file_size",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:627",
        "scripts/auto_fix_test_violations.py:210",
        "scripts/auto_fix_test_violations.py:809",
        "scripts/auto_fix_test_violations.py:863",
        "scripts/auto_fix_test_violations.py:890",
        "scripts/compliance/project_test_validator.py:155",
        "scripts/compliance/real_test_linter.py:171",
        "scripts/compliance/real_test_requirements_enforcer.py:221",
        "scripts/compliance/real_test_requirements_enforcer.py:516",
        "scripts/compliance/real_test_validator.py:110"
      ]
    },
    "file_splits": {
      "value": "file_splits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:199",
        "scripts/compliance/real_test_linter.py:202",
        "scripts/compliance/test_fixer.py:350",
        "scripts/compliance/test_fixer.py:361"
      ]
    },
    "file_system": {
      "value": "file_system",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:65"
      ]
    },
    "files": {
      "value": "files",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75",
        "scripts/auto_fix_test_violations.py:718",
        "scripts/auto_fix_test_violations.py:831",
        "scripts/business_value_test_index.py:554",
        "scripts/compliance/fake_test_scanner.py:74",
        "scripts/compliance/fake_test_scanner.py:91",
        "scripts/compliance/real_test_linter.py:137",
        "scripts/compliance/real_test_linter.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/e2e_test_fixer.py:292"
      ]
    },
    "files\n\n## Next Steps\n1. Review generated tests\n2. Customize for specific business logic\n3. Run full test suite\n4. Validate coverage improvements\n5. Deploy to staging": {
      "value": "files\n\n## Next Steps\n1. Review generated tests\n2. Customize for specific business logic\n3. Run full test suite\n4. Validate coverage improvements\n5. Deploy to staging",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:502"
      ]
    },
    "files\n- **High (Customer-facing)**:": {
      "value": "files\n- **High (Customer-facing)**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:499"
      ]
    },
    "files\n- **Medium (Stability)**:": {
      "value": "files\n- **Medium (Stability)**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:500"
      ]
    },
    "files\n- **Standard (Maintenance)**:": {
      "value": "files\n- **Standard (Maintenance)**:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:501"
      ]
    },
    "files (already correct or no setup_test_path)": {
      "value": "files (already correct or no setup_test_path)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:109"
      ]
    },
    "files (use --limit=N to change)": {
      "value": "files (use --limit=N to change)",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:261"
      ]
    },
    "files don't use setup_test_path": {
      "value": "files don't use setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:84"
      ]
    },
    "files fixed:": {
      "value": "files fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:97"
      ]
    },
    "files have correct import order": {
      "value": "files have correct import order",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:83"
      ]
    },
    "files have import order issues": {
      "value": "files have import order issues",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:85"
      ]
    },
    "files in priority order:": {
      "value": "files in priority order:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:266"
      ]
    },
    "files needing tests": {
      "value": "files needing tests",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:521"
      ]
    },
    "files with": {
      "value": "files with",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:307"
      ]
    },
    "files with issues": {
      "value": "files with issues",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:115"
      ]
    },
    "files with references:": {
      "value": "files with references:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:171"
      ]
    },
    "files with size violations addressed": {
      "value": "files with size violations addressed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:268"
      ]
    },
    "files with syntax errors": {
      "value": "files with syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:245",
        "scripts/fix_test_syntax_errors.py:245"
      ]
    },
    "files)": {
      "value": "files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:521",
        "scripts/compliance/test_violations_reporter.py:75"
      ]
    },
    "files):": {
      "value": "files):",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:165",
        "scripts/check_test_compliance.py:173",
        "scripts/check_test_compliance.py:183",
        "scripts/fix_test_import_errors.py:315"
      ]
    },
    "files** in test_framework directory": {
      "value": "files** in test_framework directory",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:161"
      ]
    },
    "files, modified": {
      "value": "files, modified",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:63"
      ]
    },
    "files...": {
      "value": "files...",
      "category": "test_literals",
      "locations": [
        "scripts/test_remediation_sample.py:27"
      ]
    },
    "files:": {
      "value": "files:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:164"
      ]
    },
    "files_affected": {
      "value": "files_affected",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:263",
        "scripts/remove_test_stubs.py:311"
      ]
    },
    "files_analyzed": {
      "value": "files_analyzed",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:47",
        "scripts/optimize_test_performance.py:51",
        "scripts/optimize_test_performance.py:276",
        "scripts/optimize_test_performance.py:400"
      ]
    },
    "files_created": {
      "value": "files_created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:694",
        "scripts/auto_fix_test_sizes.py:701"
      ]
    },
    "files_exceeding_300_lines": {
      "value": "files_exceeding_300_lines",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:133"
      ]
    },
    "files_exceeding_limit": {
      "value": "files_exceeding_limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:80",
        "scripts/compliance/test_size_validator.py:96",
        "scripts/compliance/test_size_validator.py:421",
        "scripts/compliance/test_size_validator.py:460"
      ]
    },
    "files_fixed": {
      "value": "files_fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:289",
        "scripts/fix_test_import_errors.py:311"
      ]
    },
    "files_over_300": {
      "value": "files_over_300",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:90",
        "scripts/check_test_compliance.py:109",
        "scripts/check_test_compliance.py:133",
        "scripts/check_test_compliance.py:147",
        "scripts/check_test_compliance.py:164",
        "scripts/check_test_compliance.py:165",
        "scripts/check_test_compliance.py:166",
        "scripts/check_test_compliance.py:168",
        "scripts/check_test_compliance.py:169"
      ]
    },
    "files_processed": {
      "value": "files_processed",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:617",
        "scripts/auto_fix_test_sizes.py:657",
        "scripts/auto_fix_test_sizes.py:748"
      ]
    },
    "files_split": {
      "value": "files_split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:618",
        "scripts/auto_fix_test_sizes.py:662",
        "scripts/auto_fix_test_sizes.py:749"
      ]
    },
    "files_to_modify": {
      "value": "files_to_modify",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:195",
        "scripts/test_failure_analyzer.py:235",
        "scripts/test_failure_analyzer.py:324"
      ]
    },
    "files_with_errors": {
      "value": "files_with_errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:288",
        "scripts/fix_test_import_errors.py:310"
      ]
    },
    "files_with_long_functions": {
      "value": "files_with_long_functions",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:134"
      ]
    },
    "files_with_mock_components": {
      "value": "files_with_mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:135"
      ]
    },
    "filters.py": {
      "value": "filters.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:109"
      ]
    },
    "final": {
      "value": "final",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:397",
        "scripts/test_websocket_chat_standalone.py:382"
      ]
    },
    "final_report": {
      "value": "final_report",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:96",
        "scripts/test_websocket_chat_standalone.py:96"
      ]
    },
    "final_warnings": {
      "value": "final_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:165"
      ]
    },
    "find": {
      "value": "find",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "findings": {
      "value": "findings",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:320",
        "scripts/test_data_validator_backup.py:358",
        "scripts/test_data_validator_backup.py:371",
        "scripts/test_data_validator_backup.py:384",
        "scripts/test_data_validator_backup.py:397",
        "scripts/test_data_validator_backup.py:414"
      ]
    },
    "fingerprint_mismatch": {
      "value": "fingerprint_mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:103"
      ]
    },
    "finish_reason": {
      "value": "finish_reason",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115"
      ]
    },
    "fintech": {
      "value": "fintech",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256"
      ]
    },
    "fireEvent": {
      "value": "fireEvent",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:663"
      ]
    },
    "first_event": {
      "value": "first_event",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:121"
      ]
    },
    "fix_applied": {
      "value": "fix_applied",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:264",
        "scripts/fix_test_batch.py:310"
      ]
    },
    "fix_attempted": {
      "value": "fix_attempted",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:98",
        "scripts/iterative_test_fix_loop.py:123"
      ]
    },
    "fix_command": {
      "value": "fix_command",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:99",
        "scripts/iterative_test_fix_loop.py:128"
      ]
    },
    "fix_database": {
      "value": "fix_database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:245"
      ]
    },
    "fix_delegated": {
      "value": "fix_delegated",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:129"
      ]
    },
    "fix_import_": {
      "value": "fix_import_",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:215"
      ]
    },
    "fix_llm_config": {
      "value": "fix_llm_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:269"
      ]
    },
    "fix_module_import": {
      "value": "fix_module_import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:76"
      ]
    },
    "fix_needed": {
      "value": "fix_needed",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:33",
        "scripts/comprehensive_test_fixer.py:45",
        "scripts/comprehensive_test_fixer.py:57",
        "scripts/comprehensive_test_fixer.py:68",
        "scripts/comprehensive_test_fixer.py:317"
      ]
    },
    "fix_redis": {
      "value": "fix_redis",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:257"
      ]
    },
    "fix_service_connection_": {
      "value": "fix_service_connection_",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:201"
      ]
    },
    "fix_strategy": {
      "value": "fix_strategy",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:38",
        "scripts/fix_test_batch.py:49",
        "scripts/fix_test_batch.py:60",
        "scripts/fix_test_batch.py:66",
        "scripts/fix_test_batch.py:76",
        "scripts/fix_test_batch.py:80",
        "scripts/fix_test_batch.py:307"
      ]
    },
    "fix_suggestion": {
      "value": "fix_suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:443",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "fix_test_assertion": {
      "value": "fix_test_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:227"
      ]
    },
    "fix_timeout": {
      "value": "fix_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:238"
      ]
    },
    "fixed": {
      "value": "fixed",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:281",
        "scripts/comprehensive_test_fixer.py:311",
        "scripts/comprehensive_test_fixer.py:329",
        "scripts/comprehensive_test_fixer.py:392",
        "scripts/comprehensive_test_fixer.py:395",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/fix_test_batch.py:230",
        "scripts/fix_test_batch.py:248",
        "scripts/fix_test_batch.py:249",
        "scripts/fix_test_batch.py:309"
      ]
    },
    "fixes": {
      "value": "fixes",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:106",
        "scripts/e2e_test_fixer.py:297"
      ]
    },
    "fixes_applied": {
      "value": "fixes_applied",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:144",
        "scripts/comprehensive_test_fixer.py:411",
        "scripts/fix_test_import_errors.py:291",
        "scripts/fix_test_import_errors.py:314",
        "scripts/fix_test_import_errors.py:315",
        "scripts/fix_test_import_errors.py:316",
        "scripts/frontend_iterative_test_runner.py:89",
        "scripts/frontend_iterative_test_runner.py:150"
      ]
    },
    "fixture": {
      "value": "fixture",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:190",
        "scripts/analyze_test_overlap.py:191",
        "scripts/auto_fix_test_sizes.py:183",
        "scripts/auto_fix_test_sizes.py:183",
        "scripts/auto_fix_test_violations.py:446",
        "scripts/auto_fix_test_violations.py:510",
        "scripts/compliance/test_refactor_helper.py:190",
        "scripts/compliance/test_refactor_helper.py:192",
        "scripts/compliance/test_refactor_helper.py:316",
        "scripts/compliance/test_refactor_helper.py:319"
      ]
    },
    "fixture_similarity": {
      "value": "fixture_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:633"
      ]
    },
    "fixtures": {
      "value": "fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:272",
        "scripts/auto_fix_test_sizes.py:301",
        "scripts/compliance/demo_test_size_enforcement.py:91",
        "scripts/compliance/test_refactor_helper.py:103",
        "scripts/compliance/test_refactor_helper.py:709",
        "scripts/optimize_test_performance.py:97"
      ]
    },
    "fixtures.py": {
      "value": "fixtures.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_validator.py:69"
      ]
    },
    "flaky": {
      "value": "flaky",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:777",
        "scripts/test_execution_tracker.py:793",
        "scripts/unified_test_config.py:112"
      ]
    },
    "flaky tests to improve reliability": {
      "value": "flaky tests to improve reliability",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:397"
      ]
    },
    "flaky_tests": {
      "value": "flaky_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:147",
        "scripts/team_updates_test_analyzer.py:157",
        "scripts/test_execution_tracker.py:699"
      ]
    },
    "float": {
      "value": "float",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:53",
        "scripts/test_data_validator_backup.py:503"
      ]
    },
    "flow_duration": {
      "value": "flow_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:155",
        "scripts/test_staging_websocket_comprehensive.py:169"
      ]
    },
    "flu_season": {
      "value": "flu_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "focus_area": {
      "value": "focus_area",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:80",
        "scripts/frontend_iterative_test_runner.py:140"
      ]
    },
    "focused test functions or use helper methods": {
      "value": "focused test functions or use helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:157"
      ]
    },
    "focused test modules": {
      "value": "focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:113",
        "scripts/compliance/test_size_validator.py:194"
      ]
    },
    "for": {
      "value": "for",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:89"
      ]
    },
    "for functions to implement": {
      "value": "for functions to implement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:392"
      ]
    },
    "for invalid test IDs...": {
      "value": "for invalid test IDs...",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:244"
      ]
    },
    "for pipeline testing": {
      "value": "for pipeline testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:340"
      ]
    },
    "for splitting opportunities...": {
      "value": "for splitting opportunities...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:73"
      ]
    },
    "form": {
      "value": "form",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:730"
      ]
    },
    "found in container": {
      "value": "found in container",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:49",
        "scripts/test_docker_hot_reload.py:89",
        "scripts/test_docker_hot_reload.py:127"
      ]
    },
    "framework": {
      "value": "framework",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:32",
        "scripts/align_test_imports.py:74",
        "scripts/align_test_imports.py:75"
      ]
    },
    "fraud_detection": {
      "value": "fraud_detection",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:191"
      ]
    },
    "free": {
      "value": "free",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:107",
        "scripts/business_value_test_index.py:459",
        "scripts/test_seed_data.py:159"
      ]
    },
    "free|trial|basic|onboarding": {
      "value": "free|trial|basic|onboarding",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:107"
      ]
    },
    "frequent_failures": {
      "value": "frequent_failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:528"
      ]
    },
    "fresh": {
      "value": "fresh",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:204"
      ]
    },
    "from": {
      "value": "from",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:169",
        "scripts/apply_fast_test_decorators.py:67",
        "scripts/auto_fix_test_violations.py:585",
        "scripts/compliance/test_fixer.py:192",
        "scripts/comprehensive_test_fixer.py:265",
        "scripts/fix_all_test_issues.py:44",
        "scripts/fix_all_test_issues.py:46",
        "scripts/fix_all_test_issues.py:140",
        "scripts/fix_test_batch.py:185",
        "scripts/fix_test_batch.py:185"
      ]
    },
    "from .": {
      "value": "from .",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:579",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "from .env to test environment": {
      "value": "from .env to test environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:254"
      ]
    },
    "from app\\.": {
      "value": "from app\\.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:194"
      ]
    },
    "from auth_service.auth_core.config import AuthConfig": {
      "value": "from auth_service.auth_core.config import AuthConfig",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:351"
      ]
    },
    "from auth_service.auth_core.routes.auth_routes": {
      "value": "from auth_service.auth_core.routes.auth_routes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:347"
      ]
    },
    "from conftest import": {
      "value": "from conftest import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:200"
      ]
    },
    "from mock import.*\\n": {
      "value": "from mock import.*\\n",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:173"
      ]
    },
    "from netra_backend": {
      "value": "from netra_backend",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:121",
        "scripts/align_test_imports.py:158",
        "scripts/fix_test_import_order.py:32"
      ]
    },
    "from netra_backend.": {
      "value": "from netra_backend.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:128",
        "scripts/align_test_imports.py:141"
      ]
    },
    "from netra_backend.app.": {
      "value": "from netra_backend.app.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:194"
      ]
    },
    "from netra_backend.app.agents import supervisor_consolidated": {
      "value": "from netra_backend.app.agents import supervisor_consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:64"
      ]
    },
    "from netra_backend.app.agents.supervisor_agent import SupervisorAgent": {
      "value": "from netra_backend.app.agents.supervisor_agent import SupervisorAgent",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:78"
      ]
    },
    "from netra_backend.app.agents.supervisor_agent_modern import SupervisorAgent": {
      "value": "from netra_backend.app.agents.supervisor_agent_modern import SupervisorAgent",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:79"
      ]
    },
    "from netra_backend.app.agents.supervisor_consolidated import SupervisorAgent": {
      "value": "from netra_backend.app.agents.supervisor_consolidated import SupervisorAgent",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:38"
      ]
    },
    "from netra_backend.app.agents.supervisor_consolidated import SupervisorAgent as S1": {
      "value": "from netra_backend.app.agents.supervisor_consolidated import SupervisorAgent as S1",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:63"
      ]
    },
    "from netra_backend.app.agents.tool_dispatcher import ToolDispatcher": {
      "value": "from netra_backend.app.agents.tool_dispatcher import ToolDispatcher",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:53"
      ]
    },
    "from netra_backend.app.llm.llm_manager import LLMManager": {
      "value": "from netra_backend.app.llm.llm_manager import LLMManager",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:49",
        "scripts/compliance/test_fixer.py:333",
        "scripts/compliance/test_fixer.py:334"
      ]
    },
    "from netra_backend.app.models.session import Session as UserSession": {
      "value": "from netra_backend.app.models.session import Session as UserSession",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:65"
      ]
    },
    "from netra_backend.app.models.user import User\n# UserPlan not yet implemented - using placeholder\nUserPlan = type('UserPlan', (), {'FREE': 'free', 'EARLY': 'early', 'MID': 'mid', 'ENTERPRISE': 'enterprise'})": {
      "value": "from netra_backend.app.models.user import User\n# UserPlan not yet implemented - using placeholder\nUserPlan = type('UserPlan', (), {'FREE': 'free', 'EARLY': 'early', 'MID': 'mid', 'ENTERPRISE': 'enterprise'})",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:72"
      ]
    },
    "from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketConnectionManager": {
      "value": "from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:58"
      ]
    },
    "from netra_backend.app.websocket_core.manager import WebSocketManager as UnifiedWebSocketManager": {
      "value": "from netra_backend.app.websocket_core.manager import WebSocketManager as UnifiedWebSocketManager",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:57"
      ]
    },
    "from netra_backend.tests.conftest import": {
      "value": "from netra_backend.tests.conftest import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:200"
      ]
    },
    "from netra_backend.tests.fixtures": {
      "value": "from netra_backend.tests.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:198"
      ]
    },
    "from netra_backend.tests.helpers": {
      "value": "from netra_backend.tests.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:197"
      ]
    },
    "from netra_backend.tests.test_utils import setup_test_path": {
      "value": "from netra_backend.tests.test_utils import setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:23",
        "scripts/fix_test_utils_imports.py:80"
      ]
    },
    "from netra_backend\\.app\\.db\\.clickhouse import ClickHouseManager": {
      "value": "from netra_backend\\.app\\.db\\.clickhouse import ClickHouseManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:78"
      ]
    },
    "from netra_backend\\.app\\.db\\.models_agent import Agent, AgentRun": {
      "value": "from netra_backend\\.app\\.db\\.models_agent import Agent, AgentRun",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:132"
      ]
    },
    "from netra_backend\\.app\\.db\\.models_agent import AgentRun": {
      "value": "from netra_backend\\.app\\.db\\.models_agent import AgentRun",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:127"
      ]
    },
    "from netra_backend\\.app\\.models\\.conversion_event import ConversionEvent": {
      "value": "from netra_backend\\.app\\.models\\.conversion_event import ConversionEvent",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:85"
      ]
    },
    "from netra_backend\\.app\\.models\\.message import Message": {
      "value": "from netra_backend\\.app\\.models\\.message import Message",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:114"
      ]
    },
    "from netra_backend\\.app\\.models\\.session import UserSession": {
      "value": "from netra_backend\\.app\\.models\\.session import UserSession",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:64"
      ]
    },
    "from netra_backend\\.app\\.models\\.team import Team": {
      "value": "from netra_backend\\.app\\.models\\.team import Team",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:90"
      ]
    },
    "from netra_backend\\.app\\.models\\.thread import Thread": {
      "value": "from netra_backend\\.app\\.models\\.thread import Thread",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:109"
      ]
    },
    "from netra_backend\\.app\\.models\\.user import User, UserPlan": {
      "value": "from netra_backend\\.app\\.models\\.user import User, UserPlan",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:71"
      ]
    },
    "from netra_backend\\.app\\.websocket\\.connection_manager import WebSocketConnectionManager": {
      "value": "from netra_backend\\.app\\.websocket\\.connection_manager import WebSocketConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:57"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.data": {
      "value": "from netra_backend\\.tests\\.e2e\\.data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:45"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.fixtures": {
      "value": "from netra_backend\\.tests\\.e2e\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:44"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.helpers": {
      "value": "from netra_backend\\.tests\\.e2e\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:43"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.infrastructure": {
      "value": "from netra_backend\\.tests\\.e2e\\.infrastructure",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:47"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.validators": {
      "value": "from netra_backend\\.tests\\.e2e\\.validators",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:46"
      ]
    },
    "from netra_backend\\.tests\\.integration\\.database_test_fixtures import.*": {
      "value": "from netra_backend\\.tests\\.integration\\.database_test_fixtures import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:97"
      ]
    },
    "from netra_backend\\.tests\\.test_utils": {
      "value": "from netra_backend\\.tests\\.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:50"
      ]
    },
    "from netra_backend\\.tests\\.test_utils import setup_test_path\\n": {
      "value": "from netra_backend\\.tests\\.test_utils import setup_test_path\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:34"
      ]
    },
    "from netra_backend\\.tests\\.user_flow_base import.*": {
      "value": "from netra_backend\\.tests\\.user_flow_base import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:102"
      ]
    },
    "from netra_backend\\.tests\\.user_journey_data import.*": {
      "value": "from netra_backend\\.tests\\.user_journey_data import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:119"
      ]
    },
    "from pathlib import Path": {
      "value": "from pathlib import Path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:178"
      ]
    },
    "from protected endpoint": {
      "value": "from protected endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:71"
      ]
    },
    "from selenium import webdriver\ndriver = webdriver.Chrome()\ndriver.get('https://app.staging.netrasystems.ai')\n# Add cookies from browser_session.cookies\nfor cookie in credentials['accounts']['browser_session']['cookies']:\n    driver.add_cookie(cookie)\ndriver.refresh()\n# Now logged in": {
      "value": "from selenium import webdriver\ndriver = webdriver.Chrome()\ndriver.get('https://app.staging.netrasystems.ai')\n# Add cookies from browser_session.cookies\nfor cookie in credentials['accounts']['browser_session']['cookies']:\n    driver.add_cookie(cookie)\ndriver.refresh()\n# Now logged in",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:261"
      ]
    },
    "from shared.cors_config_builder import get_fastapi_cors_config": {
      "value": "from shared.cors_config_builder import get_fastapi_cors_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:147",
        "scripts/test_cors_ssot_compliance.py:148"
      ]
    },
    "from shared.cors_config_builder import get_websocket_cors_origins": {
      "value": "from shared.cors_config_builder import get_websocket_cors_origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:149"
      ]
    },
    "from shared.isolated_environment import": {
      "value": "from shared.isolated_environment import",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:150"
      ]
    },
    "from shared.isolated_environment import get_env": {
      "value": "from shared.isolated_environment import get_env",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:247"
      ]
    },
    "from test_framework.\\1 import": {
      "value": "from test_framework.\\1 import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:192"
      ]
    },
    "from test_framework.performance_helpers import": {
      "value": "from test_framework.performance_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:59"
      ]
    },
    "from test_framework.performance_helpers import fast_test\nimport time\\n\\1# time.sleep": {
      "value": "from test_framework.performance_helpers import fast_test\nimport time\\n\\1# time.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:183"
      ]
    },
    "from test_framework.performance_helpers import fast_test, timeout_override": {
      "value": "from test_framework.performance_helpers import fast_test, timeout_override",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:73"
      ]
    },
    "from test_framework\\.(\\w+) import": {
      "value": "from test_framework\\.(\\w+) import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:192"
      ]
    },
    "from tests.e2e.account_deletion_flow_manager": {
      "value": "from tests.e2e.account_deletion_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:59"
      ]
    },
    "from tests.e2e.agent_conversation_helpers": {
      "value": "from tests.e2e.agent_conversation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:60"
      ]
    },
    "from tests.e2e.auth_flow_testers": {
      "value": "from tests.e2e.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:56"
      ]
    },
    "from tests.e2e.config": {
      "value": "from tests.e2e.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:55"
      ]
    },
    "from tests.e2e.config import": {
      "value": "from tests.e2e.config import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:93"
      ]
    },
    "from tests.e2e.data": {
      "value": "from tests.e2e.data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:45"
      ]
    },
    "from tests.e2e.fixtures": {
      "value": "from tests.e2e.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:40",
        "scripts/fix_e2e_test_imports.py:44"
      ]
    },
    "from tests.e2e.fixtures.core.thread_test_fixtures_core": {
      "value": "from tests.e2e.fixtures.core.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:65",
        "scripts/fix_e2e_test_imports.py:66"
      ]
    },
    "from tests.e2e.fixtures.high_volume_data": {
      "value": "from tests.e2e.fixtures.high_volume_data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:69"
      ]
    },
    "from tests.e2e.helpers": {
      "value": "from tests.e2e.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:39",
        "scripts/fix_e2e_test_imports.py:43"
      ]
    },
    "from tests.e2e.helpers.": {
      "value": "from tests.e2e.helpers.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:75"
      ]
    },
    "from tests.e2e.helpers.auth.oauth_journey_helpers": {
      "value": "from tests.e2e.helpers.auth.oauth_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:102"
      ]
    },
    "from tests.e2e.helpers.chat_helpers": {
      "value": "from tests.e2e.helpers.chat_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:103"
      ]
    },
    "from tests.e2e.helpers.core.chat_helpers": {
      "value": "from tests.e2e.helpers.core.chat_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:103"
      ]
    },
    "from tests.e2e.helpers.core.unified_flow_helpers": {
      "value": "from tests.e2e.helpers.core.unified_flow_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:104"
      ]
    },
    "from tests.e2e.helpers.database.database_sync_helpers": {
      "value": "from tests.e2e.helpers.database.database_sync_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:106"
      ]
    },
    "from tests.e2e.helpers.database_sync_helpers": {
      "value": "from tests.e2e.helpers.database_sync_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:106"
      ]
    },
    "from tests.e2e.helpers.journey.journey_validation_helpers": {
      "value": "from tests.e2e.helpers.journey.journey_validation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:101"
      ]
    },
    "from tests.e2e.helpers.journey.new_user_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.new_user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:99"
      ]
    },
    "from tests.e2e.helpers.journey.real_service_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.real_service_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:100"
      ]
    },
    "from tests.e2e.helpers.journey.user_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:98"
      ]
    },
    "from tests.e2e.helpers.journey_validation_helpers": {
      "value": "from tests.e2e.helpers.journey_validation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:101"
      ]
    },
    "from tests.e2e.helpers.new_user_journey_helpers": {
      "value": "from tests.e2e.helpers.new_user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:99"
      ]
    },
    "from tests.e2e.helpers.oauth_journey_helpers": {
      "value": "from tests.e2e.helpers.oauth_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:102"
      ]
    },
    "from tests.e2e.helpers.real_service_journey_helpers": {
      "value": "from tests.e2e.helpers.real_service_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:100"
      ]
    },
    "from tests.e2e.helpers.unified_flow_helpers": {
      "value": "from tests.e2e.helpers.unified_flow_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:104"
      ]
    },
    "from tests.e2e.helpers.user_journey_helpers": {
      "value": "from tests.e2e.helpers.user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:98"
      ]
    },
    "from tests.e2e.helpers.websocket.websocket_test_helpers": {
      "value": "from tests.e2e.helpers.websocket.websocket_test_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:105"
      ]
    },
    "from tests.e2e.helpers.websocket_test_helpers": {
      "value": "from tests.e2e.helpers.websocket_test_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:105"
      ]
    },
    "from tests.e2e.infrastructure": {
      "value": "from tests.e2e.infrastructure",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:47"
      ]
    },
    "from tests.e2e.integration.auth_flow_manager": {
      "value": "from tests.e2e.integration.auth_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:61"
      ]
    },
    "from tests.e2e.jwt_token_helpers": {
      "value": "from tests.e2e.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:53"
      ]
    },
    "from tests.e2e.jwt_token_helpers import": {
      "value": "from tests.e2e.jwt_token_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:91"
      ]
    },
    "from tests.e2e.oauth_test_providers": {
      "value": "from tests.e2e.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:54"
      ]
    },
    "from tests.e2e.oauth_test_providers import": {
      "value": "from tests.e2e.oauth_test_providers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:92"
      ]
    },
    "from tests.e2e.onboarding_flow_executor": {
      "value": "from tests.e2e.onboarding_flow_executor",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:62"
      ]
    },
    "from tests.e2e.test_helpers.performance_base": {
      "value": "from tests.e2e.test_helpers.performance_base",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:72"
      ]
    },
    "from tests.e2e.validators": {
      "value": "from tests.e2e.validators",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:46"
      ]
    },
    "from tests.test_utils": {
      "value": "from tests.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:50"
      ]
    },
    "from tests\\.config": {
      "value": "from tests\\.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:55"
      ]
    },
    "from tests\\.config import": {
      "value": "from tests\\.config import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:93"
      ]
    },
    "from tests\\.e2e\\.auth_flow_testers": {
      "value": "from tests\\.e2e\\.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:56"
      ]
    },
    "from tests\\.e2e\\.high_volume_data": {
      "value": "from tests\\.e2e\\.high_volume_data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:69"
      ]
    },
    "from tests\\.e2e\\.integration\\.account_deletion_flow_manager": {
      "value": "from tests\\.e2e\\.integration\\.account_deletion_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:59"
      ]
    },
    "from tests\\.e2e\\.integration\\.agent_conversation_helpers": {
      "value": "from tests\\.e2e\\.integration\\.agent_conversation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:60"
      ]
    },
    "from tests\\.e2e\\.integration\\.auth_flow_manager": {
      "value": "from tests\\.e2e\\.integration\\.auth_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:61"
      ]
    },
    "from tests\\.e2e\\.integration\\.onboarding_flow_executor": {
      "value": "from tests\\.e2e\\.integration\\.onboarding_flow_executor",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:62"
      ]
    },
    "from tests\\.e2e\\.integration\\.thread_test_fixtures_core": {
      "value": "from tests\\.e2e\\.integration\\.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:65"
      ]
    },
    "from tests\\.e2e\\.performance_base": {
      "value": "from tests\\.e2e\\.performance_base",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:72"
      ]
    },
    "from tests\\.e2e\\.thread_test_fixtures_core": {
      "value": "from tests\\.e2e\\.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:66"
      ]
    },
    "from tests\\.fixtures": {
      "value": "from tests\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:198"
      ]
    },
    "from tests\\.helpers": {
      "value": "from tests\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:197"
      ]
    },
    "from tests\\.jwt_token_helpers": {
      "value": "from tests\\.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:53"
      ]
    },
    "from tests\\.jwt_token_helpers import": {
      "value": "from tests\\.jwt_token_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:91"
      ]
    },
    "from tests\\.oauth_test_providers": {
      "value": "from tests\\.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:54"
      ]
    },
    "from tests\\.oauth_test_providers import": {
      "value": "from tests\\.oauth_test_providers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:92"
      ]
    },
    "from tests\\.unified\\.e2e\\.fixtures": {
      "value": "from tests\\.unified\\.e2e\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:40"
      ]
    },
    "from tests\\.unified\\.e2e\\.helpers": {
      "value": "from tests\\.unified\\.e2e\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:39"
      ]
    },
    "from typing import": {
      "value": "from typing import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:229"
      ]
    },
    "from typing import Dict, Any, List, Optional": {
      "value": "from typing import Dict, Any, List, Optional",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:203"
      ]
    },
    "from typing import List, Dict, Tuple, Optional, Any": {
      "value": "from typing import List, Dict, Tuple, Optional, Any",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:230"
      ]
    },
    "from unittest.mock import": {
      "value": "from unittest.mock import",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:69",
        "scripts/automated_test_fix_loop.py:78",
        "scripts/fix_test_import_errors.py:235",
        "scripts/simple_test_fix_loop.py:42",
        "scripts/simple_test_fix_loop.py:45"
      ]
    },
    "from unittest.mock import AsyncMock, MagicMock, Mock, patch": {
      "value": "from unittest.mock import AsyncMock, MagicMock, Mock, patch",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:24",
        "scripts/simple_test_fix_loop.py:46"
      ]
    },
    "from unittest.mock import Mock, MagicMock, patch": {
      "value": "from unittest.mock import Mock, MagicMock, patch",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:236"
      ]
    },
    "from unittest\\.mock import.*MagicMock.*MagicMock": {
      "value": "from unittest\\.mock import.*MagicMock.*MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:23"
      ]
    },
    "from unittest\\.mock import.*\\n": {
      "value": "from unittest\\.mock import.*\\n",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:172"
      ]
    },
    "frontend": {
      "value": "frontend",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:28",
        "scripts/align_test_imports.py:33",
        "scripts/align_test_imports.py:33",
        "scripts/auto_fix_test_violations.py:94",
        "scripts/autonomous_review/test_reviewer.py:188",
        "scripts/business_value_test_index.py:193",
        "scripts/business_value_test_index.py:402",
        "scripts/business_value_test_index.py:403",
        "scripts/business_value_test_index.py:561",
        "scripts/check_test_compliance.py:200"
      ]
    },
    "frontend-user": {
      "value": "frontend-user",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:43",
        "scripts/test_jwt_fix.py:20"
      ]
    },
    "frontend/.env.local": {
      "value": "frontend/.env.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:165"
      ]
    },
    "frontend/__tests__": {
      "value": "frontend/__tests__",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:44"
      ]
    },
    "frontend/auth/test_hot_reload_marker.ts": {
      "value": "frontend/auth/test_hot_reload_marker.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:28"
      ]
    },
    "frontend/components/chat": {
      "value": "frontend/components/chat",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:25",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:23"
      ]
    },
    "frontend/tests": {
      "value": "frontend/tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:63"
      ]
    },
    "frontend/tests/conftest.py": {
      "value": "frontend/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:17"
      ]
    },
    "frontend@netra.com": {
      "value": "frontend@netra.com",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:44",
        "scripts/test_jwt_fix.py:21"
      ]
    },
    "frontend_coverage": {
      "value": "frontend_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:137"
      ]
    },
    "frontend_response": {
      "value": "frontend_response",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:166"
      ]
    },
    "frontend_service_dependencies": {
      "value": "frontend_service_dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:182",
        "scripts/staging_comprehensive_test.py:187",
        "scripts/staging_comprehensive_test.py:195"
      ]
    },
    "frontend_test_iterations.log": {
      "value": "frontend_test_iterations.log",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:46"
      ]
    },
    "full_": {
      "value": "full_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "full_access": {
      "value": "full_access",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:110"
      ]
    },
    "full_error": {
      "value": "full_error",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:522",
        "scripts/frontend_iterative_test_runner.py:529",
        "scripts/frontend_iterative_test_runner.py:588"
      ]
    },
    "full_name": {
      "value": "full_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:39",
        "auth_service/tests/test_auth_real_services_comprehensive.py:320",
        "scripts/test_adaptive_workflow.py:182",
        "scripts/test_data_pipeline_simple.py:26",
        "scripts/test_signup_flow_manual.py:26",
        "scripts/test_signup_flow_manual.py:45",
        "scripts/test_signup_flow_manual.py:62",
        "scripts/test_signup_flow_manual.py:79",
        "scripts/test_signup_flow_manual.py:96",
        "scripts/test_signup_flow_manual.py:127"
      ]
    },
    "full_path": {
      "value": "full_path",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:135"
      ]
    },
    "function": {
      "value": "function",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:137",
        "auth_service/tests/conftest.py:159",
        "auth_service/tests/conftest.py:192",
        "auth_service/tests/conftest.py:259",
        "auth_service/tests/conftest.py:280",
        "scripts/check_test_compliance.py:58",
        "scripts/check_test_compliance.py:177",
        "scripts/comprehensive_test_fixer.py:215",
        "scripts/comprehensive_test_fixer.py:401",
        "scripts/optimize_test_performance.py:257"
      ]
    },
    "function\\s+mock\\w*\\s*\\(": {
      "value": "function\\s+mock\\w*\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:63"
      ]
    },
    "function_name": {
      "value": "function_name",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "function_refactors": {
      "value": "function_refactors",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:206",
        "scripts/compliance/real_test_linter.py:209",
        "scripts/compliance/real_test_linter.py:211",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/test_fixer.py:351",
        "scripts/compliance/test_fixer.py:365"
      ]
    },
    "function_size": {
      "value": "function_size",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:234",
        "scripts/auto_fix_test_violations.py:246",
        "scripts/auto_fix_test_violations.py:271",
        "scripts/auto_fix_test_violations.py:291",
        "scripts/auto_fix_test_violations.py:304",
        "scripts/auto_fix_test_violations.py:810",
        "scripts/compliance/project_test_validator.py:250",
        "scripts/compliance/real_test_linter.py:174",
        "scripts/compliance/real_test_requirements_enforcer.py:328",
        "scripts/compliance/real_test_requirements_enforcer.py:516"
      ]
    },
    "function_to_fixture": {
      "value": "function_to_fixture",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:330",
        "scripts/compliance/test_refactor_helper.py:346"
      ]
    },
    "function_to_function": {
      "value": "function_to_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:329",
        "scripts/compliance/test_refactor_helper.py:339",
        "scripts/compliance/test_refactor_helper.py:647"
      ]
    },
    "function_without_test_prefix": {
      "value": "function_without_test_prefix",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:30",
        "scripts/e2e_test_fixer.py:49"
      ]
    },
    "functionality tests.\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom typing import Dict, List, Any, Optional": {
      "value": "functionality tests.\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom typing import Dict, List, Any, Optional",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:208"
      ]
    },
    "functionality_warnings": {
      "value": "functionality_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:115",
        "scripts/test_environment_validation_clean.py:153",
        "scripts/test_improved_environment_validation.py:116",
        "scripts/test_improved_environment_validation.py:153"
      ]
    },
    "functions": {
      "value": "functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283",
        "scripts/autonomous_review/test_generator.py:57",
        "scripts/autonomous_review/test_reviewer.py:98",
        "scripts/autonomous_review/test_reviewer.py:98",
        "scripts/compliance/demo_test_size_enforcement.py:89",
        "scripts/compliance/test_refactor_helper.py:101",
        "scripts/compliance/test_refactor_helper.py:424",
        "scripts/compliance/test_refactor_helper.py:434",
        "scripts/compliance/test_refactor_helper.py:464",
        "scripts/compliance/test_refactor_helper.py:474"
      ]
    },
    "functions)": {
      "value": "functions)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:94"
      ]
    },
    "functions:": {
      "value": "functions:",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:124"
      ]
    },
    "functions_exceeding_limit": {
      "value": "functions_exceeding_limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:81",
        "scripts/compliance/test_size_validator.py:106",
        "scripts/compliance/test_size_validator.py:422",
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "functions_optimized": {
      "value": "functions_optimized",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:619",
        "scripts/auto_fix_test_sizes.py:670",
        "scripts/auto_fix_test_sizes.py:695",
        "scripts/auto_fix_test_sizes.py:708",
        "scripts/auto_fix_test_sizes.py:750"
      ]
    },
    "functions_over_8": {
      "value": "functions_over_8",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:91",
        "scripts/check_test_compliance.py:117",
        "scripts/check_test_compliance.py:134",
        "scripts/check_test_compliance.py:148",
        "scripts/check_test_compliance.py:172",
        "scripts/check_test_compliance.py:173",
        "scripts/check_test_compliance.py:174",
        "scripts/check_test_compliance.py:178",
        "scripts/check_test_compliance.py:179"
      ]
    },
    "functions_to_implement.txt": {
      "value": "functions_to_implement.txt",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:207",
        "scripts/fix_test_batch.py:390"
      ]
    },
    "future-test": {
      "value": "future-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:449"
      ]
    },
    "future@example.com": {
      "value": "future@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:457"
      ]
    },
    "g": {
      "value": "g",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:261"
      ]
    },
    "gamma": {
      "value": "gamma",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:134",
        "netra_backend/app/services/realistic_test_data/models.py:55"
      ]
    },
    "gamma-llc": {
      "value": "gamma-llc",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:159"
      ]
    },
    "gc_count": {
      "value": "gc_count",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:148"
      ]
    },
    "gcloud secrets versions add postgres-db-staging --data-file=<new_db_name>": {
      "value": "gcloud secrets versions add postgres-db-staging --data-file=<new_db_name>",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:126"
      ]
    },
    "gcp-staging-sa-key.json": {
      "value": "gcp-staging-sa-key.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:11"
      ]
    },
    "gdpr_service.py": {
      "value": "gdpr_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:134"
      ]
    },
    "gemini": {
      "value": "gemini",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "gemini-1.5-flash": {
      "value": "gemini-1.5-flash",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "gemini-2.5-pro": {
      "value": "gemini-2.5-pro",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:37"
      ]
    },
    "gemini-api-key": {
      "value": "gemini-api-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:145"
      ]
    },
    "gemini-pro": {
      "value": "gemini-pro",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:63"
      ]
    },
    "gemini\\.": {
      "value": "gemini\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35"
      ]
    },
    "generated": {
      "value": "generated",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:430",
        "scripts/batch_test_generator.py:438",
        "scripts/batch_test_generator.py:445",
        "scripts/batch_test_generator.py:470",
        "scripts/batch_test_generator.py:526"
      ]
    },
    "generated_at": {
      "value": "generated_at",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:618",
        "scripts/test_execution_tracker.py:701"
      ]
    },
    "generated_files": {
      "value": "generated_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:590",
        "scripts/compliance/test_refactor_helper.py:601"
      ]
    },
    "generic": {
      "value": "generic",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:264"
      ]
    },
    "generic_processor": {
      "value": "generic_processor",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:232",
        "scripts/test_agent_pipeline_simple.py:237"
      ]
    },
    "get_all": {
      "value": "get_all",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:80"
      ]
    },
    "get_auth_service_url": {
      "value": "get_auth_service_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:320",
        "auth_service/tests/test_auth_port_configuration.py:405"
      ]
    },
    "get_connection": {
      "value": "get_connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:49"
      ]
    },
    "get_database_url": {
      "value": "get_database_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:489",
        "scripts/test_auth_database_sessions.py:44"
      ]
    },
    "get_env().delete(\\1)": {
      "value": "get_env().delete(\\1)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:84"
      ]
    },
    "get_env().enable_isolation()\n        with get_env():\n            get_env().update(": {
      "value": "get_env().enable_isolation()\n        with get_env():\n            get_env().update(",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:103"
      ]
    },
    "get_env().exists(\\1)": {
      "value": "get_env().exists(\\1)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:77"
      ]
    },
    "get_env().get(\"ENVIRONMENT\", \"staging\")": {
      "value": "get_env().get(\"ENVIRONMENT\", \"staging\")",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:83",
        "scripts/test_environment_detection.py:92",
        "scripts/test_environment_detection.py:101"
      ]
    },
    "get_env().get(\\1)": {
      "value": "get_env().get(\\1)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:63",
        "scripts/migrate_test_environment_access.py:70"
      ]
    },
    "get_env().set(\\1, \\2, \"test_setup\")": {
      "value": "get_env().set(\\1, \\2, \"test_setup\")",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:56"
      ]
    },
    "get_message_handler_service": {
      "value": "get_message_handler_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:53"
      ]
    },
    "get_websocket_manager": {
      "value": "get_websocket_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:47",
        "scripts/test_websocket_injection_fix_complete.py:56",
        "scripts/test_websocket_injection_fix_complete.py:64"
      ]
    },
    "git": {
      "value": "git",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228",
        "scripts/standardize_l3_test_names.py:133"
      ]
    },
    "git add -A && git commit -m \"feat: add pytest markers to all test files for proper categorization\"": {
      "value": "git add -A && git commit -m \"feat: add pytest markers to all test files for proper categorization\"",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:216"
      ]
    },
    "github": {
      "value": "github",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:73",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/test_staging_login_automated.py:253",
        "scripts/test_staging_login_automated.py:272",
        "scripts/test_staging_login_automated.py:274"
      ]
    },
    "github.com": {
      "value": "github.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:272"
      ]
    },
    "github_access_": {
      "value": "github_access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:218"
      ]
    },
    "given_name": {
      "value": "given_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:237"
      ]
    },
    "global": {
      "value": "global",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:706"
      ]
    },
    "global.mockStore": {
      "value": "global.mockStore",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:629"
      ]
    },
    "good": {
      "value": "good",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:195"
      ]
    },
    "google": {
      "value": "google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:235",
        "auth_service/tests/conftest.py:287",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:283",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:286",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:344",
        "auth_service/tests/test_auth_comprehensive.py:72",
        "auth_service/tests/test_critical_bugs.py:49",
        "auth_service/tests/test_critical_bugs.py:86",
        "auth_service/tests/test_critical_bugs.py:123",
        "auth_service/tests/test_critical_bugs.py:171"
      ]
    },
    "google-12345": {
      "value": "google-12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:269"
      ]
    },
    "google_access_": {
      "value": "google_access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:193"
      ]
    },
    "google_client_id": {
      "value": "google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:55"
      ]
    },
    "google_refresh_": {
      "value": "google_refresh_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:194"
      ]
    },
    "google_user_": {
      "value": "google_user_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:375"
      ]
    },
    "googletagmanager\\.com/gtm\\.js\\?id=GTM-[A-Z0-9]+": {
      "value": "googletagmanager\\.com/gtm\\.js\\?id=GTM-[A-Z0-9]+",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:39"
      ]
    },
    "googletagmanager\\.com/ns\\.html\\?id=GTM-[A-Z0-9]+": {
      "value": "googletagmanager\\.com/ns\\.html\\?id=GTM-[A-Z0-9]+",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:44"
      ]
    },
    "gpt-3.5-turbo": {
      "value": "gpt-3.5-turbo",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:33",
        "scripts/test_seed_data.py:217",
        "scripts/validate_llm_test_models.py:32"
      ]
    },
    "gpt-4": {
      "value": "gpt-4",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:34",
        "scripts/test_intensive_serialization.py:87",
        "scripts/test_seed_data.py:201",
        "scripts/test_seed_data.py:209",
        "scripts/test_seed_data.py:334",
        "scripts/validate_llm_test_models.py:31"
      ]
    },
    "graceful_degradation": {
      "value": "graceful_degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:46"
      ]
    },
    "graceful_degradation      → test_10_graceful_degradation_optional_services": {
      "value": "graceful_degradation      → test_10_graceful_degradation_optional_services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:396"
      ]
    },
    "gradual_increase": {
      "value": "gradual_increase",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:90"
      ]
    },
    "grant_method": {
      "value": "grant_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:214"
      ]
    },
    "granted_at": {
      "value": "granted_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:60"
      ]
    },
    "granted_by": {
      "value": "granted_by",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:213",
        "auth_service/tests/factories/permission_factory.py:61"
      ]
    },
    "green": {
      "value": "green",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:353",
        "scripts/test_oauth_local.py:157"
      ]
    },
    "greeting": {
      "value": "greeting",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:254"
      ]
    },
    "greeting_agent": {
      "value": "greeting_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:242"
      ]
    },
    "greeting_tool": {
      "value": "greeting_tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:253",
        "scripts/test_websocket_direct.py:254"
      ]
    },
    "grid": {
      "value": "grid",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:398"
      ]
    },
    "gtm_config_endpoint": {
      "value": "gtm_config_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:78"
      ]
    },
    "gtm_found": {
      "value": "gtm_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:16",
        "scripts/test_gtm_loading.py:36",
        "scripts/test_gtm_loading.py:59",
        "scripts/test_gtm_loading.py:119",
        "scripts/test_gtm_loading.py:144",
        "scripts/test_gtm_loading.py:157"
      ]
    },
    "handler": {
      "value": "handler",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:369",
        "scripts/frontend_iterative_test_runner.py:667"
      ]
    },
    "handlers": {
      "value": "handlers",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:370"
      ]
    },
    "hanging Node.js processes": {
      "value": "hanging Node.js processes",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:108"
      ]
    },
    "hardcoded in _initialize_project_id()": {
      "value": "hardcoded in _initialize_project_id()",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:274"
      ]
    },
    "hardcoded_test_data": {
      "value": "hardcoded_test_data",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:55",
        "scripts/remove_test_stubs.py:165",
        "scripts/remove_test_stubs.py:174"
      ]
    },
    "hardcoded_wait": {
      "value": "hardcoded_wait",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:165",
        "scripts/autonomous_review/test_reviewer.py:179",
        "scripts/autonomous_review/test_reviewer.py:181"
      ]
    },
    "harness.py": {
      "value": "harness.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113"
      ]
    },
    "has": {
      "value": "has",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610",
        "scripts/optimize_test_performance.py:129",
        "scripts/optimize_test_performance.py:134"
      ]
    },
    "has failing tests!": {
      "value": "has failing tests!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:838"
      ]
    },
    "has no end-to-end tests": {
      "value": "has no end-to-end tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:671"
      ]
    },
    "has only": {
      "value": "has only",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:663"
      ]
    },
    "has_all_critical": {
      "value": "has_all_critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:100",
        "scripts/test_websocket_standalone.py:177",
        "scripts/test_websocket_standalone.py:182"
      ]
    },
    "has_all_critical_events": {
      "value": "has_all_critical_events",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:237",
        "scripts/test_agent_execution_websocket_integration.py:313",
        "scripts/test_agent_execution_websocket_integration.py:323"
      ]
    },
    "has_cloud_sql": {
      "value": "has_cloud_sql",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "has_docstring": {
      "value": "has_docstring",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:314"
      ]
    },
    "has_fallbacks": {
      "value": "has_fallbacks",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:114"
      ]
    },
    "has_pipeline_completion": {
      "value": "has_pipeline_completion",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:107",
        "scripts/test_agent_pipeline_simple.py:398",
        "scripts/test_agent_pipeline_simple.py:413"
      ]
    },
    "has_pipeline_start": {
      "value": "has_pipeline_start",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:106",
        "scripts/test_agent_pipeline_simple.py:397",
        "scripts/test_agent_pipeline_simple.py:412"
      ]
    },
    "has_return": {
      "value": "has_return",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:156"
      ]
    },
    "has_ssl": {
      "value": "has_ssl",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:82"
      ]
    },
    "has_warnings": {
      "value": "has_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:113"
      ]
    },
    "hashed_password": {
      "value": "hashed_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:62",
        "auth_service/tests/factories/user_factory.py:83"
      ]
    },
    "header": {
      "value": "header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:305",
        "scripts/setup_staging_test_account.py:124"
      ]
    },
    "header.payload": {
      "value": "header.payload",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:303"
      ]
    },
    "headers": {
      "value": "headers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:237",
        "scripts/debug_cors_test.py:24",
        "scripts/debug_cors_test.py:38",
        "scripts/debug_cors_test.py:78",
        "scripts/debug_cors_test.py:96",
        "scripts/staging_comprehensive_test.py:105",
        "scripts/staging_comprehensive_test.py:291",
        "scripts/test_agent_orchestration_recovery.py:265",
        "scripts/test_agent_orchestration_recovery.py:286",
        "scripts/test_cors.py:107"
      ]
    },
    "headers_allowed": {
      "value": "headers_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:202",
        "scripts/test_cors.py:235"
      ]
    },
    "health": {
      "value": "health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:117",
        "scripts/manage_test_services.py:113",
        "scripts/remove_test_stubs.py:168",
        "scripts/test_cors.py:290",
        "scripts/test_staging_login_automated.py:318",
        "scripts/test_staging_login_automated.py:339",
        "scripts/test_staging_login_automated.py:426"
      ]
    },
    "health.py": {
      "value": "health.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:72"
      ]
    },
    "health_check": {
      "value": "health_check",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:77",
        "scripts/test_gtm_loading.py:85",
        "scripts/test_gtm_loading.py:130",
        "scripts/test_service_monitor.py:95",
        "scripts/test_service_monitor.py:96",
        "scripts/test_service_monitor.py:97",
        "scripts/test_staging_login_automated.py:187"
      ]
    },
    "health_checks.py": {
      "value": "health_checks.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:110"
      ]
    },
    "health_endpoint": {
      "value": "health_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:230",
        "scripts/test_websocket_dev_mode.py:39",
        "scripts/test_websocket_dev_mode.py:129"
      ]
    },
    "health_endpoint_": {
      "value": "health_endpoint_",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:94"
      ]
    },
    "health_response_time_ms": {
      "value": "health_response_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:299",
        "scripts/staging_comprehensive_test.py:318",
        "scripts/staging_comprehensive_test.py:322"
      ]
    },
    "health_status": {
      "value": "health_status",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:126"
      ]
    },
    "healthcare": {
      "value": "healthcare",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256"
      ]
    },
    "healthy": {
      "value": "healthy",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:62",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:229",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:294",
        "auth_service/tests/test_auth_comprehensive.py:277",
        "auth_service/tests/test_auth_comprehensive_audit.py:47",
        "auth_service/tests/test_auth_real_services_comprehensive.py:416",
        "scripts/setup_test_environment.py:76",
        "scripts/setup_test_environment.py:273",
        "scripts/staging_comprehensive_test.py:172",
        "scripts/staging_comprehensive_test.py:173"
      ]
    },
    "healthy services, starting missing ones": {
      "value": "healthy services, starting missing ones",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:64"
      ]
    },
    "heap size": {
      "value": "heap size",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91"
      ]
    },
    "hello": {
      "value": "hello",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:149"
      ]
    },
    "hello-run": {
      "value": "hello-run",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:239"
      ]
    },
    "hello-thread": {
      "value": "hello-thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:233"
      ]
    },
    "hello-user": {
      "value": "hello-user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:232"
      ]
    },
    "help_display": {
      "value": "help_display",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:79",
        "scripts/test_verify_workflow_status_corrected.py:86"
      ]
    },
    "helper": {
      "value": "helper",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:447",
        "scripts/auto_fix_test_violations.py:509",
        "scripts/compliance/test_refactor_helper.py:207",
        "scripts/compliance/test_refactor_helper.py:429",
        "scripts/compliance/test_refactor_helper.py:563"
      ]
    },
    "helpers)": {
      "value": "helpers)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:383"
      ]
    },
    "helpers.py": {
      "value": "helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:69"
      ]
    },
    "high": {
      "value": "high",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:335",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:490",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:670",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760",
        "scripts/compliance/fake_test_scanner.py:159",
        "scripts/compliance/fake_test_scanner.py:200",
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "high failure rate tests": {
      "value": "high failure rate tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "high_error_rate": {
      "value": "high_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:356"
      ]
    },
    "high_failure_rate": {
      "value": "high_failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:297",
        "scripts/compliance/fake_test_scanner.py:332",
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "high_latency": {
      "value": "high_latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:350"
      ]
    },
    "high_load": {
      "value": "high_load",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:24",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:163"
      ]
    },
    "high_null_fields": {
      "value": "high_null_fields",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:247",
        "scripts/test_data_validator_backup.py:248"
      ]
    },
    "high_risk": {
      "value": "high_risk",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:272"
      ]
    },
    "high_value_test_count": {
      "value": "high_value_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:633"
      ]
    },
    "highlight": {
      "value": "highlight",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:92"
      ]
    },
    "highly similar test pairs. Consider refactoring these using parametrized tests or test utilities.": {
      "value": "highly similar test pairs. Consider refactoring these using parametrized tests or test utilities.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "highly_similar": {
      "value": "highly_similar",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:66",
        "scripts/analyze_test_overlap.py:325",
        "scripts/analyze_test_overlap.py:358",
        "scripts/analyze_test_overlap.py:352",
        "scripts/analyze_test_overlap.py:381",
        "scripts/analyze_test_overlap.py:382",
        "scripts/analyze_test_overlap.py:412",
        "scripts/analyze_test_overlap.py:412",
        "scripts/analyze_test_overlap.py:449",
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "history": {
      "value": "history",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:444",
        "scripts/test_dashboard.py:463",
        "scripts/test_execution_tracker.py:772",
        "scripts/test_execution_tracker.py:789",
        "scripts/test_staging_migrations.py:249"
      ]
    },
    "hit_rate": {
      "value": "hit_rate",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    "hits": {
      "value": "hits",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:58",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "holiday_season": {
      "value": "holiday_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:142"
      ]
    },
    "hooks": {
      "value": "hooks",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:34"
      ]
    },
    "host": {
      "value": "host",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:55",
        "auth_service/test_staging_db_connection.py:92",
        "scripts/test_backend_port_binding.py:137",
        "scripts/test_clickhouse_staging.py:62",
        "scripts/test_redis_config_critical_failure.py:266",
        "scripts/test_redis_config_critical_failure.py:287",
        "scripts/test_seed_data.py:50",
        "scripts/test_service_monitor.py:53",
        "scripts/test_ssl_certificates_staging.py:110",
        "scripts/test_ssl_certificates_staging.py:115"
      ]
    },
    "hour_of_day": {
      "value": "hour_of_day",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "html": {
      "value": "html",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:777",
        "scripts/real_service_test_metrics.py:115",
        "scripts/test_coverage_system.py:59",
        "scripts/test_dashboard.py:449",
        "scripts/test_dashboard.py:465"
      ]
    },
    "htmlcov": {
      "value": "htmlcov",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/generate_test_audit.py:26",
        "scripts/remove_test_stubs.py:80"
      ]
    },
    "http": {
      "value": "http",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:308",
        "scripts/test_cors.py:324"
      ]
    },
    "http://": {
      "value": "http://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:69",
        "auth_service/tests/test_critical_bugs_real.py:181",
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_cors.py:137",
        "scripts/test_cors.py:323",
        "scripts/test_cors.py:340",
        "scripts/test_service_orchestration.py:164"
      ]
    },
    "http://127.0.0.1:12345": {
      "value": "http://127.0.0.1:12345",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:36"
      ]
    },
    "http://127.0.0.1:3000": {
      "value": "http://127.0.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:51",
        "scripts/test_and_fix_cors.py:100",
        "scripts/test_and_fix_cors.py:107",
        "scripts/test_chat_errors.py:83",
        "scripts/test_cors.py:491",
        "scripts/test_cors_issue.py:17",
        "scripts/test_cors_issue.py:59",
        "scripts/test_cors_ssot_compliance.py:32",
        "scripts/test_websocket_cors_comprehensive.py:208",
        "scripts/test_websocket_middleware.py:96"
      ]
    },
    "http://127.0.0.1:3000/": {
      "value": "http://127.0.0.1:3000/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:18"
      ]
    },
    "http://127.0.0.1:3000/chat": {
      "value": "http://127.0.0.1:3000/chat",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:21"
      ]
    },
    "http://127.0.0.1:8000": {
      "value": "http://127.0.0.1:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:102",
        "scripts/test_cors_ssot_compliance.py:33"
      ]
    },
    "http://127.0.0.1:8000/api/threads": {
      "value": "http://127.0.0.1:8000/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:103",
        "scripts/test_and_fix_cors.py:107",
        "scripts/test_chat_errors.py:63",
        "scripts/test_chat_errors.py:82"
      ]
    },
    "http://127.0.0.1:8000/health": {
      "value": "http://127.0.0.1:8000/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:35"
      ]
    },
    "http://127.0.0.1:8000/test": {
      "value": "http://127.0.0.1:8000/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:93"
      ]
    },
    "http://127.0.0.1:8081/health": {
      "value": "http://127.0.0.1:8081/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:49"
      ]
    },
    "http://172.18.0.1:3000": {
      "value": "http://172.18.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:236"
      ]
    },
    "http://attacker.com/steal-tokens": {
      "value": "http://attacker.com/steal-tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:100"
      ]
    },
    "http://backend:8000": {
      "value": "http://backend:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:222"
      ]
    },
    "http://evil-site.com": {
      "value": "http://evil-site.com",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:53"
      ]
    },
    "http://frontend:3000": {
      "value": "http://frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:216",
        "scripts/test_websocket_simple.py:70"
      ]
    },
    "http://localhost": {
      "value": "http://localhost",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:21",
        "scripts/test_staging_env.py:209"
      ]
    },
    "http://localhost:": {
      "value": "http://localhost:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:85",
        "auth_service/tests/test_auth_port_configuration.py:446",
        "scripts/test_coordination_fixes.py:306",
        "scripts/test_coordination_fixes.py:318",
        "scripts/test_frontend_ORIGINAL.py:258",
        "scripts/test_frontend_ORIGINAL.py:272"
      ]
    },
    "http://localhost:18001": {
      "value": "http://localhost:18001",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:209"
      ]
    },
    "http://localhost:3000": {
      "value": "http://localhost:3000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:301",
        "scripts/debug_cors_test.py:48",
        "scripts/test_and_fix_cors.py:103",
        "scripts/test_and_fix_cors.py:106",
        "scripts/test_auth_integration.py:108",
        "scripts/test_backend_ORIGINAL.py:97",
        "scripts/test_cors.py:491",
        "scripts/test_cors.py:493",
        "scripts/test_cors_implementation.py:30",
        "scripts/test_cors_implementation.py:33"
      ]
    },
    "http://localhost:3000/": {
      "value": "http://localhost:3000/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:39"
      ]
    },
    "http://localhost:3000/auth/callback": {
      "value": "http://localhost:3000/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:188",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:90"
      ]
    },
    "http://localhost:3000/chat": {
      "value": "http://localhost:3000/chat",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:45"
      ]
    },
    "http://localhost:3000/health": {
      "value": "http://localhost:3000/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:20"
      ]
    },
    "http://localhost:3001": {
      "value": "http://localhost:3001",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:49",
        "scripts/test_cors_ssot_compliance.py:29",
        "scripts/test_gtm_loading.py:99",
        "scripts/test_websocket_middleware.py:95"
      ]
    },
    "http://localhost:3002": {
      "value": "http://localhost:3002",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:40",
        "scripts/test_gtm_tracking.py:73"
      ]
    },
    "http://localhost:3002/chat": {
      "value": "http://localhost:3002/chat",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:51"
      ]
    },
    "http://localhost:5173": {
      "value": "http://localhost:5173",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:252"
      ]
    },
    "http://localhost:8000": {
      "value": "http://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:46",
        "scripts/debug_cors_test.py:50",
        "scripts/start_test_services.py:154",
        "scripts/test_adaptive_workflow.py:69",
        "scripts/test_adaptive_workflow_local.py:15",
        "scripts/test_auth_integration.py:21",
        "scripts/test_auth_integration.py:175",
        "scripts/test_cors.py:419",
        "scripts/test_cors_implementation.py:34",
        "scripts/test_cors_ssot_compliance.py:30"
      ]
    },
    "http://localhost:8000/api/threads": {
      "value": "http://localhost:8000/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:100",
        "scripts/test_and_fix_cors.py:106",
        "scripts/test_cors_issue.py:57"
      ]
    },
    "http://localhost:8000/api/threads?limit=20&offset=0": {
      "value": "http://localhost:8000/api/threads?limit=20&offset=0",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:15",
        "scripts/test_cors_issue.py:36"
      ]
    },
    "http://localhost:8000/health": {
      "value": "http://localhost:8000/health",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:118",
        "scripts/test_websocket_cors_comprehensive.py:139"
      ]
    },
    "http://localhost:8000/ws": {
      "value": "http://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:122"
      ]
    },
    "http://localhost:8001": {
      "value": "http://localhost:8001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:273",
        "auth_service/tests/test_auth_port_configuration.py:320",
        "auth_service/tests/test_auth_port_configuration.py:405",
        "scripts/test/verify_test_ports.py:30",
        "scripts/test_agent_orchestration_recovery.py:18",
        "scripts/test_agent_recovery_simple.py:44"
      ]
    },
    "http://localhost:8001/api/ws": {
      "value": "http://localhost:8001/api/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:121"
      ]
    },
    "http://localhost:8001/health": {
      "value": "http://localhost:8001/health",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:131",
        "scripts/test_agent_recovery_simple.py:16"
      ]
    },
    "http://localhost:8001/ws": {
      "value": "http://localhost:8001/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_recovery_simple.py:120"
      ]
    },
    "http://localhost:8080": {
      "value": "http://localhost:8080",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:63",
        "scripts/test_cors_ssot_compliance.py:31"
      ]
    },
    "http://localhost:8081": {
      "value": "http://localhost:8081",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:155",
        "scripts/test_adaptive_workflow.py:70",
        "scripts/test_agent_orchestration_recovery.py:19",
        "scripts/test_auth_integration.py:20",
        "scripts/test_auth_integration.py:170",
        "scripts/test_data_pipeline_simple.py:17",
        "scripts/test_oauth_local.py:43",
        "scripts/test_signup_flow_manual.py:10"
      ]
    },
    "http://localhost:8081/health": {
      "value": "http://localhost:8081/health",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:124",
        "scripts/test/test_docker_stability.py:42",
        "scripts/test_agent_recovery_simple.py:30"
      ]
    },
    "http://localhost:8082": {
      "value": "http://localhost:8082",
      "category": "test_literals",
      "locations": [
        "scripts/test/verify_test_ports.py:29"
      ]
    },
    "http://localhost:8082/health": {
      "value": "http://localhost:8082/health",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:136"
      ]
    },
    "http://localhost:8083": {
      "value": "http://localhost:8083",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:441"
      ]
    },
    "http://localhost:8123/test": {
      "value": "http://localhost:8123/test",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:15"
      ]
    },
    "http://localhost:8124/ping": {
      "value": "http://localhost:8124/ping",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:53"
      ]
    },
    "http://localhost:9999": {
      "value": "http://localhost:9999",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:35",
        "scripts/test_cors_ssot_compliance.py:70"
      ]
    },
    "http://malicious-site.com": {
      "value": "http://malicious-site.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:68",
        "scripts/test_cors_ssot_compliance.py:114",
        "scripts/test_websocket_dev_mode.py:156"
      ]
    },
    "http://netra-frontend:3000": {
      "value": "http://netra-frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:228"
      ]
    },
    "http://netrasystems.ai": {
      "value": "http://netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:116"
      ]
    },
    "http://test": {
      "value": "http://test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:432",
        "auth_service/tests/test_critical_bugs.py:60",
        "auth_service/tests/test_critical_bugs.py:96",
        "auth_service/tests/test_refresh_endpoint_simple.py:27",
        "auth_service/tests/test_refresh_endpoint_simple.py:55",
        "auth_service/tests/test_refresh_endpoint_simple.py:74",
        "auth_service/tests/test_refresh_endpoint_simple.py:97"
      ]
    },
    "http://test.example.com:3000": {
      "value": "http://test.example.com:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:260"
      ]
    },
    "httpOnly": {
      "value": "httpOnly",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:159"
      ]
    },
    "http_client": {
      "value": "http_client",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:57"
      ]
    },
    "https": {
      "value": "https",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:307",
        "scripts/test_cors.py:322"
      ]
    },
    "https://": {
      "value": "https://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:532",
        "scripts/test_cors.py:137",
        "scripts/test_cors.py:321"
      ]
    },
    "https://accounts.google.com": {
      "value": "https://accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:201",
        "scripts/setup_staging_test_account.py:67"
      ]
    },
    "https://accounts.google.com/o/oauth2/v2/auth": {
      "value": "https://accounts.google.com/o/oauth2/v2/auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:288"
      ]
    },
    "https://api.netra.systems": {
      "value": "https://api.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:156"
      ]
    },
    "https://api.netrasystems.ai": {
      "value": "https://api.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:106"
      ]
    },
    "https://api.staging.netrasystems.ai": {
      "value": "https://api.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:35",
        "scripts/test_backend_auth_config.py:19",
        "scripts/test_cors_ssot_compliance.py:61",
        "scripts/test_staging.py:26",
        "scripts/test_staging.py:30",
        "scripts/test_staging_auth_flow.py:11",
        "scripts/test_staging_auth_live.py:26",
        "scripts/test_staging_cors.py:11",
        "scripts/test_staging_deployment.py:20",
        "scripts/test_staging_jwt.py:15"
      ]
    },
    "https://api.staging.netrasystems.ai/api/threads": {
      "value": "https://api.staging.netrasystems.ai/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:23"
      ]
    },
    "https://app.netra.ai": {
      "value": "https://app.netra.ai",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:255"
      ]
    },
    "https://app.netra.ai.evil.com/callback": {
      "value": "https://app.netra.ai.evil.com/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:103"
      ]
    },
    "https://app.netra.ai/auth/callback": {
      "value": "https://app.netra.ai/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:186",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:88"
      ]
    },
    "https://app.netrasystems.ai": {
      "value": "https://app.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:495",
        "scripts/test_cors_ssot_compliance.py:105"
      ]
    },
    "https://app.staging.netra.ai/auth/callback": {
      "value": "https://app.staging.netra.ai/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:187",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:89"
      ]
    },
    "https://app.staging.netrasystems.ai": {
      "value": "https://app.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:52",
        "scripts/test_cors.py:493",
        "scripts/test_cors_implementation.py:35",
        "scripts/test_cors_ssot_compliance.py:59",
        "scripts/test_staging.py:25",
        "scripts/test_staging.py:28",
        "scripts/test_staging.py:29",
        "scripts/test_staging.py:32",
        "scripts/test_staging_auth_flow.py:13",
        "scripts/test_staging_cors.py:12"
      ]
    },
    "https://auth-service-staging-pnovr5vsba-uc.a.run.app": {
      "value": "https://auth-service-staging-pnovr5vsba-uc.a.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:10"
      ]
    },
    "https://auth.netrasystems.ai": {
      "value": "https://auth.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:107"
      ]
    },
    "https://auth.staging.netrasystems.ai": {
      "value": "https://auth.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:36",
        "scripts/test_auth_client_debug.py:14",
        "scripts/test_auth_client_debug.py:30",
        "scripts/test_auth_fix_simple.py:25",
        "scripts/test_auth_fix_simple.py:69",
        "scripts/test_auth_service_integration_fix.py:28",
        "scripts/test_auth_service_integration_fix.py:131",
        "scripts/test_cors_ssot_compliance.py:60",
        "scripts/test_staging.py:27",
        "scripts/test_staging.py:31"
      ]
    },
    "https://avatars.githubusercontent.com/": {
      "value": "https://avatars.githubusercontent.com/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:226"
      ]
    },
    "https://dev.netra.systems": {
      "value": "https://dev.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:140"
      ]
    },
    "https://evil.com/callback": {
      "value": "https://evil.com/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:99"
      ]
    },
    "https://example.com/avatar/": {
      "value": "https://example.com/avatar/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87"
      ]
    },
    "https://frontend-fzr7uxqpxq-uc.a.run.app": {
      "value": "https://frontend-fzr7uxqpxq-uc.a.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:100"
      ]
    },
    "https://lh3.googleusercontent.com/a/default-user": {
      "value": "https://lh3.googleusercontent.com/a/default-user",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:62"
      ]
    },
    "https://malicious.com/callback": {
      "value": "https://malicious.com/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:189"
      ]
    },
    "https://netra-auth-service-701982941522.us-central1.run.app": {
      "value": "https://netra-auth-service-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:20",
        "scripts/test_staging_refresh_format.py:15"
      ]
    },
    "https://netra-auth-service-701982941522.us-central1.run.app/auth/validate": {
      "value": "https://netra-auth-service-701982941522.us-central1.run.app/auth/validate",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:60",
        "scripts/test_staging_jwt_validation.py:113"
      ]
    },
    "https://netra-auth-service-pnovr5vsba-uc.a.run.app": {
      "value": "https://netra-auth-service-pnovr5vsba-uc.a.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:27"
      ]
    },
    "https://netra-auth-service-staging.run.app/auth/oauth/callback": {
      "value": "https://netra-auth-service-staging.run.app/auth/oauth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:233"
      ]
    },
    "https://netra-backend-staging-701982941522.us-central1.run.app": {
      "value": "https://netra-backend-staging-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:19"
      ]
    },
    "https://netra-backend-staging-701982941522.us-central1.run.app/api/threads?limit=20&offset=0": {
      "value": "https://netra-backend-staging-701982941522.us-central1.run.app/api/threads?limit=20&offset=0",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:85"
      ]
    },
    "https://netra-backend-staging-pnovr5vsba-uc.a.run.app": {
      "value": "https://netra-backend-staging-pnovr5vsba-uc.a.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:26",
        "scripts/test/test_staging_quick.py:9"
      ]
    },
    "https://netra-frontend-701982941522.us-central1.run.app": {
      "value": "https://netra-frontend-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:36"
      ]
    },
    "https://netra-frontend-staging-701982941522.us-central1.run.app": {
      "value": "https://netra-frontend-staging-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:18"
      ]
    },
    "https://netra-frontend-staging-pnovr5vsba-uc.a.run.app": {
      "value": "https://netra-frontend-staging-pnovr5vsba-uc.a.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:25"
      ]
    },
    "https://netrasystems.ai": {
      "value": "https://netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:103"
      ]
    },
    "https://oauth2.googleapis.com/token": {
      "value": "https://oauth2.googleapis.com/token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:289"
      ]
    },
    "https://random-domain.com": {
      "value": "https://random-domain.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:69",
        "scripts/test_cors_ssot_compliance.py:115"
      ]
    },
    "https://staging.netra.systems": {
      "value": "https://staging.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:148"
      ]
    },
    "https://ui-avatars.com/api/?name=Test+Agent": {
      "value": "https://ui-avatars.com/api/?name=Test+Agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:58"
      ]
    },
    "https://www.googleapis.com/auth/analytics.edit": {
      "value": "https://www.googleapis.com/auth/analytics.edit",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:15"
      ]
    },
    "https://www.googleapis.com/oauth2/v2/userinfo": {
      "value": "https://www.googleapis.com/oauth2/v2/userinfo",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:290"
      ]
    },
    "https://www.netrasystems.ai": {
      "value": "https://www.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:104"
      ]
    },
    "httpx": {
      "value": "httpx",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "httpx.AsyncClient": {
      "value": "httpx.AsyncClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:252"
      ]
    },
    "httpx.AsyncClient.get": {
      "value": "httpx.AsyncClient.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:122"
      ]
    },
    "httpx.AsyncClient.post": {
      "value": "httpx.AsyncClient.post",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:132",
        "auth_service/tests/auth-service-down-critical-scenarios.py:319",
        "auth_service/tests/auth-service-down-critical-scenarios.py:396",
        "auth_service/tests/test_oauth_state_validation.py:111"
      ]
    },
    "httpx\\.(?:get|post|put|delete)": {
      "value": "httpx\\.(?:get|post|put|delete)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:33"
      ]
    },
    "iat": {
      "value": "iat",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:40",
        "auth_service/tests/factories/token_factory.py:134",
        "auth_service/tests/test_auth_comprehensive_audit.py:188",
        "auth_service/tests/test_auth_comprehensive_audit.py:257",
        "auth_service/tests/test_auth_comprehensive_audit.py:433",
        "auth_service/tests/test_auth_comprehensive_audit.py:454",
        "auth_service/tests/test_refresh_endpoint.py:115",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:32",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:44",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:116"
      ]
    },
    "id": {
      "value": "id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:232",
        "auth_service/tests/factories/audit_factory.py:50",
        "auth_service/tests/factories/session_factory.py:33",
        "auth_service/tests/factories/token_factory.py:222",
        "auth_service/tests/factories/user_factory.py:37",
        "auth_service/tests/factories/user_factory.py:87",
        "auth_service/tests/test_auth_comprehensive_audit.py:583",
        "auth_service/tests/test_critical_bugs.py:50",
        "auth_service/tests/test_critical_bugs.py:87",
        "auth_service/tests/test_critical_bugs.py:124"
      ]
    },
    "id_token": {
      "value": "id_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:198"
      ]
    },
    "identified_bottlenecks": {
      "value": "identified_bottlenecks",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:252",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:255",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:262",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:281"
      ]
    },
    "if missing": {
      "value": "if missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:217"
      ]
    },
    "ignore": {
      "value": "ignore",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:114",
        "scripts/pytest_plugins.py:227",
        "scripts/pytest_plugins.py:234",
        "scripts/pytest_plugins.py:240",
        "scripts/pytest_plugins.py:267",
        "scripts/pytest_plugins.py:279"
      ]
    },
    "ignored": {
      "value": "ignored",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:162",
        "auth_service/tests/integration/test_database_connection.py:163"
      ]
    },
    "immediate_fixes": {
      "value": "immediate_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:193",
        "scripts/compliance/real_test_linter.py:195",
        "scripts/compliance/test_fixer.py:349",
        "scripts/compliance/test_fixer.py:357"
      ]
    },
    "impact_analysis": {
      "value": "impact_analysis",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:254",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:265"
      ]
    },
    "impact_level": {
      "value": "impact_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "impact_multiplier": {
      "value": "impact_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:27",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:34",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:41",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:48",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:185"
      ]
    },
    "implementation": {
      "value": "implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:270",
        "scripts/test_secret_manager_builder_critical.py:347",
        "scripts/test_secret_manager_builder_critical.py:526",
        "scripts/test_secret_manager_builder_critical.py:590",
        "scripts/test_secret_manager_builder_critical.py:613"
      ]
    },
    "implementation_details": {
      "value": "implementation_details",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:84"
      ]
    },
    "implementation_difficulty": {
      "value": "implementation_difficulty",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:219"
      ]
    },
    "import": {
      "value": "import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:127",
        "scripts/align_test_imports.py:128",
        "scripts/align_test_imports.py:140",
        "scripts/align_test_imports.py:141",
        "scripts/align_test_imports.py:169",
        "scripts/apply_fast_test_decorators.py:67",
        "scripts/auto_fix_test_violations.py:579",
        "scripts/auto_fix_test_violations.py:585",
        "scripts/compliance/test_fixer.py:191",
        "scripts/comprehensive_test_fixer.py:265"
      ]
    },
    "import (": {
      "value": "import (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:163"
      ]
    },
    "import *": {
      "value": "import *",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:113",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "import app\\.": {
      "value": "import app\\.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:195"
      ]
    },
    "import error": {
      "value": "import error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:93"
      ]
    },
    "import netra_backend": {
      "value": "import netra_backend",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:121",
        "scripts/align_test_imports.py:158",
        "scripts/fix_test_import_order.py:34"
      ]
    },
    "import netra_backend.app.": {
      "value": "import netra_backend.app.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:195"
      ]
    },
    "import netra_backend.app.agents.supervisor_consolidated": {
      "value": "import netra_backend.app.agents.supervisor_consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:65"
      ]
    },
    "import os\nimport sys\nfrom pathlib import Path\n\n# Add auth service to path\nauth_service_path = Path(\"": {
      "value": "import os\nimport sys\nfrom pathlib import Path\n\n# Add auth service to path\nauth_service_path = Path(\"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:42",
        "auth_service/tests/test_environment_loading.py:88",
        "auth_service/tests/test_environment_loading.py:242",
        "auth_service/tests/test_environment_loading.py:286"
      ]
    },
    "import os\nimport sys\nfrom pathlib import Path\n\n# Add auth service to path\nauth_service_path = Path(__file__).parent.parent\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Clear any existing variables\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.delete(\"SERVICE_SECRET\", \"test_script\")\nenv.delete(\"SERVICE_ID\", \"test_script\")\n\n# Load the test .env file BEFORE importing auth modules\nfrom dotenv import load_dotenv\nload_dotenv(\"": {
      "value": "import os\nimport sys\nfrom pathlib import Path\n\n# Add auth service to path\nauth_service_path = Path(__file__).parent.parent\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Clear any existing variables\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.delete(\"SERVICE_SECRET\", \"test_script\")\nenv.delete(\"SERVICE_ID\", \"test_script\")\n\n# Load the test .env file BEFORE importing auth modules\nfrom dotenv import load_dotenv\nload_dotenv(\"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:134"
      ]
    },
    "import os\nimport sys\nfrom pathlib import Path\n\n# Add auth service to path\nauth_service_path = Path(__file__).parent.parent\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Clear any existing variables to simulate fresh start\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.delete(\"SERVICE_SECRET\", \"test_script\")\nenv.delete(\"SERVICE_ID\", \"test_script\")\nenv.set(\"ENVIRONMENT\", \"development\", \"test_script\")\n\n# WRONG ORDER: Try to import config BEFORE loading .env\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    secret = AuthConfig.get_service_secret()\n    print(f\"ERROR: Should have failed but got secret\")\n    sys.exit(1)\nexcept ValueError as e:\n    if \"SERVICE_SECRET must be set\" in str(e):\n        print(\"SUCCESS: Correctly detected missing environment variable\")\n        # Now demonstrate fix by loading .env\n        from dotenv import load_dotenv\n        load_dotenv(\"": {
      "value": "import os\nimport sys\nfrom pathlib import Path\n\n# Add auth service to path\nauth_service_path = Path(__file__).parent.parent\nsys.path.insert(0, str(auth_service_path.parent))\n\n# Clear any existing variables to simulate fresh start\nfrom shared.isolated_environment import get_env\nenv = get_env()\nenv.delete(\"SERVICE_SECRET\", \"test_script\")\nenv.delete(\"SERVICE_ID\", \"test_script\")\nenv.set(\"ENVIRONMENT\", \"development\", \"test_script\")\n\n# WRONG ORDER: Try to import config BEFORE loading .env\ntry:\n    from auth_service.auth_core.config import AuthConfig\n    secret = AuthConfig.get_service_secret()\n    print(f\"ERROR: Should have failed but got secret\")\n    sys.exit(1)\nexcept ValueError as e:\n    if \"SERVICE_SECRET must be set\" in str(e):\n        print(\"SUCCESS: Correctly detected missing environment variable\")\n        # Now demonstrate fix by loading .env\n        from dotenv import load_dotenv\n        load_dotenv(\"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:184"
      ]
    },
    "import pytest": {
      "value": "import pytest",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:60",
        "scripts/add_pytest_markers.py:69",
        "scripts/add_pytest_markers.py:74",
        "scripts/add_pytest_markers.py:76",
        "scripts/compliance/test_fixer.py:335",
        "scripts/compliance/test_fixer.py:335",
        "scripts/e2e_test_fixer.py:67"
      ]
    },
    "import pytest\\n": {
      "value": "import pytest\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:246"
      ]
    },
    "import sys": {
      "value": "import sys",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:177"
      ]
    },
    "import tests.e2e.auth_flow_testers": {
      "value": "import tests.e2e.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:88"
      ]
    },
    "import tests.e2e.config": {
      "value": "import tests.e2e.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:87"
      ]
    },
    "import tests.e2e.jwt_token_helpers": {
      "value": "import tests.e2e.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:85"
      ]
    },
    "import tests.e2e.oauth_test_providers": {
      "value": "import tests.e2e.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:86"
      ]
    },
    "import tests\\.config": {
      "value": "import tests\\.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:87"
      ]
    },
    "import tests\\.e2e\\.auth_flow_testers": {
      "value": "import tests\\.e2e\\.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:88"
      ]
    },
    "import tests\\.jwt_token_helpers": {
      "value": "import tests\\.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:85"
      ]
    },
    "import tests\\.oauth_test_providers": {
      "value": "import tests\\.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:86"
      ]
    },
    "import time\\n(.*?)time\\.sleep": {
      "value": "import time\\n(.*?)time\\.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:182"
      ]
    },
    "import unittest": {
      "value": "import unittest",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:242",
        "scripts/fix_test_import_errors.py:243"
      ]
    },
    "import unittest\\\\n": {
      "value": "import unittest\\\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:246"
      ]
    },
    "import\\s+(.+)": {
      "value": "import\\s+(.+)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:70"
      ]
    },
    "import_correction": {
      "value": "import_correction",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:310"
      ]
    },
    "import_error": {
      "value": "import_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:94",
        "scripts/test_failure_analyzer.py:213"
      ]
    },
    "import_errors": {
      "value": "import_errors",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:114"
      ]
    },
    "import_export_problems": {
      "value": "import_export_problems",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:102",
        "scripts/frontend_iterative_test_runner.py:354",
        "scripts/frontend_iterative_test_runner.py:454",
        "scripts/frontend_iterative_test_runner.py:482"
      ]
    },
    "import_fixes": {
      "value": "import_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:405"
      ]
    },
    "import_service.py": {
      "value": "import_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:125"
      ]
    },
    "import_similarity": {
      "value": "import_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:632"
      ]
    },
    "important": {
      "value": "important",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:176",
        "scripts/test_improved_environment_validation.py:185",
        "scripts/test_improved_environment_validation.py:199",
        "scripts/test_improved_environment_validation.py:207"
      ]
    },
    "imports": {
      "value": "imports",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:104"
      ]
    },
    "improvement": {
      "value": "improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:166",
        "scripts/test_service_startup_with_missing_optionals.py:191"
      ]
    },
    "improvement_test": {
      "value": "improvement_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:134",
        "scripts/test_service_startup_with_missing_optionals.py:135",
        "scripts/test_service_startup_with_missing_optionals.py:143",
        "scripts/test_service_startup_with_missing_optionals.py:151",
        "scripts/test_service_startup_with_missing_optionals.py:152"
      ]
    },
    "in": {
      "value": "in",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619",
        "scripts/compliance/real_test_linter.py:178",
        "scripts/compliance/test_fixer.py:260",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/comprehensive_test_fixer.py:401",
        "scripts/fix_test_batch.py:204",
        "scripts/fix_test_batch.py:211"
      ]
    },
    "in .env.mock with a longer value": {
      "value": "in .env.mock with a longer value",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:113"
      ]
    },
    "in LLMTestModel enum": {
      "value": "in LLMTestModel enum",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:111"
      ]
    },
    "in iteration": {
      "value": "in iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:441"
      ]
    },
    "in uvicorn config": {
      "value": "in uvicorn config",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:133"
      ]
    },
    "inactive@netra.local": {
      "value": "inactive@netra.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:130"
      ]
    },
    "incident_service.py": {
      "value": "incident_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:133"
      ]
    },
    "include": {
      "value": "include",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:28"
      ]
    },
    "inconsistent": {
      "value": "inconsistent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:119",
        "auth_service/tests/test_auth_port_configuration.py:120",
        "auth_service/tests/test_auth_port_configuration.py:135"
      ]
    },
    "index.html": {
      "value": "index.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:59"
      ]
    },
    "indicators": {
      "value": "indicators",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91",
        "netra_backend/app/services/realistic_test_data/models.py:96",
        "netra_backend/app/services/realistic_test_data/models.py:101",
        "netra_backend/app/services/realistic_test_data/models.py:106",
        "scripts/optimize_test_performance.py:259",
        "scripts/optimize_test_performance.py:320"
      ]
    },
    "inf": {
      "value": "inf",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:370",
        "scripts/test_execution_tracker.py:655"
      ]
    },
    "inference": {
      "value": "inference",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:68",
        "scripts/test_triage_flow.py:37"
      ]
    },
    "info": {
      "value": "info",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:193",
        "scripts/setup_test_environment.py:286",
        "scripts/start_test_services.py:24",
        "scripts/test_backend_port_binding.py:69"
      ]
    },
    "infrastructure_costs_usd": {
      "value": "infrastructure_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "infrastructure_plumbing": {
      "value": "infrastructure_plumbing",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:426"
      ]
    },
    "init": {
      "value": "init",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640"
      ]
    },
    "initialization": {
      "value": "initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:78"
      ]
    },
    "initialization\"\"\"\n        # TODO: Test class instantiation\n        pass": {
      "value": "initialization\"\"\"\n        # TODO: Test class instantiation\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:201"
      ]
    },
    "initialization_success": {
      "value": "initialization_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:63"
      ]
    },
    "initialization_time": {
      "value": "initialization_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:64"
      ]
    },
    "initializing": {
      "value": "initializing",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:199"
      ]
    },
    "input": {
      "value": "input",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:47",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76",
        "scripts/real_service_test_metrics.py:33",
        "scripts/real_service_test_metrics.py:34",
        "scripts/real_service_test_metrics.py:35",
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "input_text": {
      "value": "input_text",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:380"
      ]
    },
    "inputs": {
      "value": "inputs",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:188"
      ]
    },
    "install": {
      "value": "install",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:54"
      ]
    },
    "instead of": {
      "value": "instead of",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:191"
      ]
    },
    "instead of 8000": {
      "value": "instead of 8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:143"
      ]
    },
    "insufficient": {
      "value": "insufficient",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:59",
        "scripts/test_adaptive_workflow_direct.py:176",
        "scripts/test_adaptive_workflow_local.py:106"
      ]
    },
    "int": {
      "value": "int",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:503"
      ]
    },
    "integration": {
      "value": "integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:22",
        "scripts/add_test_markers.py:55",
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_sizes.py:347",
        "scripts/auto_fix_test_sizes.py:633",
        "scripts/auto_fix_test_violations.py:487",
        "scripts/auto_fix_test_violations.py:488",
        "scripts/automated_test_fix_loop.py:17",
        "scripts/autonomous_review/test_reviewer.py:214",
        "scripts/autonomous_review/test_reviewer.py:225"
      ]
    },
    "integration tests passed": {
      "value": "integration tests passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:263"
      ]
    },
    "integration_test": {
      "value": "integration_test",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:85"
      ]
    },
    "integration_tests": {
      "value": "integration_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:59",
        "scripts/compliance/project_test_validator.py:64",
        "scripts/fix_test_syntax_errors.py:228",
        "scripts/test_backend_ORIGINAL.py:207"
      ]
    },
    "integrity": {
      "value": "integrity",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:422"
      ]
    },
    "intensive_serialization": {
      "value": "intensive_serialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:26"
      ]
    },
    "interface": {
      "value": "interface",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:680",
        "scripts/test_modern_websocket_migration.py:129",
        "scripts/test_modern_websocket_migration.py:135"
      ]
    },
    "intermediate_results": {
      "value": "intermediate_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:74",
        "scripts/test_intensive_serialization.py:109"
      ]
    },
    "internal overlaps. Consider reorganizing tests or extracting common test utilities.": {
      "value": "internal overlaps. Consider reorganizing tests or extracting common test utilities.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459"
      ]
    },
    "internal_overlaps": {
      "value": "internal_overlaps",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:409",
        "scripts/analyze_test_overlap.py:457",
        "scripts/analyze_test_overlap.py:459",
        "scripts/analyze_test_overlap.py:553",
        "scripts/analyze_test_overlap.py:564"
      ]
    },
    "into": {
      "value": "into",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:831",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "invalid": {
      "value": "invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:107",
        "auth_service/tests/test_auth_comprehensive.py:110",
        "auth_service/tests/test_auth_comprehensive.py:479",
        "auth_service/tests/test_auth_comprehensive_audit.py:147",
        "auth_service/tests/test_critical_bugs.py:201",
        "auth_service/tests/test_refresh_endpoint.py:138",
        "auth_service/tests/test_refresh_endpoint_simple.py:81",
        "auth_service/tests/test_refresh_endpoint_simple.py:98",
        "auth_service/tests/test_refresh_endpoint_simple.py:100",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:172"
      ]
    },
    "invalid json": {
      "value": "invalid json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:318",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:171"
      ]
    },
    "invalid syntax": {
      "value": "invalid syntax",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:236"
      ]
    },
    "invalid-email": {
      "value": "invalid-email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:321",
        "auth_service/tests/test_signup_flow_comprehensive.py:171"
      ]
    },
    "invalid-json": {
      "value": "invalid-json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:478"
      ]
    },
    "invalid-state-12345": {
      "value": "invalid-state-12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:213"
      ]
    },
    "invalid-state-parameter": {
      "value": "invalid-state-parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:150"
      ]
    },
    "invalid.jwt.token": {
      "value": "invalid.jwt.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:149"
      ]
    },
    "invalid.token": {
      "value": "invalid.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:109",
        "auth_service/tests/test_auth_comprehensive_audit.py:148",
        "auth_service/tests/unit/test_refresh_endpoint.py:126",
        "auth_service/tests/unit/test_refresh_endpoint.py:295"
      ]
    },
    "invalid.token.format": {
      "value": "invalid.token.format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:191"
      ]
    },
    "invalid.token.format.with.too.many.parts": {
      "value": "invalid.token.format.with.too.many.parts",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:149"
      ]
    },
    "invalid.token.here": {
      "value": "invalid.token.here",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:461"
      ]
    },
    "invalid_combination": {
      "value": "invalid_combination",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:104"
      ]
    },
    "invalid_metric": {
      "value": "invalid_metric",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:136"
      ]
    },
    "invalid_run_id": {
      "value": "invalid_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:148"
      ]
    },
    "invalid_test_code_": {
      "value": "invalid_test_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:227"
      ]
    },
    "invalid_timestamp": {
      "value": "invalid_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:592"
      ]
    },
    "invalid_token": {
      "value": "invalid_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:124",
        "scripts/test_verify_workflow_status.py:111",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status_corrected.py:126",
        "scripts/test_verify_workflow_status_corrected.py:128"
      ]
    },
    "invalid_type": {
      "value": "invalid_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:105"
      ]
    },
    "invalid_url": {
      "value": "invalid_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:191"
      ]
    },
    "invalid_wait": {
      "value": "invalid_wait",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:95"
      ]
    },
    "io_bound": {
      "value": "io_bound",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:79"
      ]
    },
    "ios_": {
      "value": "ios_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:83"
      ]
    },
    "ip": {
      "value": "ip",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:117",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "auth_service/tests/test_session_security_cycles_36_40.py:260"
      ]
    },
    "ip_address": {
      "value": "ip_address",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:54",
        "auth_service/tests/factories/session_factory.py:35"
      ]
    },
    "ip_change": {
      "value": "ip_change",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:267"
      ]
    },
    "is already failing!": {
      "value": "is already failing!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:742"
      ]
    },
    "is available": {
      "value": "is available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:105"
      ]
    },
    "is available for binding, but auth service URL configured for port": {
      "value": "is available for binding, but auth service URL configured for port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:253"
      ]
    },
    "is connectable": {
      "value": "is connectable",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:122"
      ]
    },
    "is free": {
      "value": "is free",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:164"
      ]
    },
    "is in use": {
      "value": "is in use",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:156"
      ]
    },
    "is not available": {
      "value": "is not available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:107"
      ]
    },
    "is not connectable": {
      "value": "is not connectable",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:124"
      ]
    },
    "is not responsive": {
      "value": "is not responsive",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:134"
      ]
    },
    "is responsive": {
      "value": "is responsive",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:132"
      ]
    },
    "is too short (must be at least 32 characters)": {
      "value": "is too short (must be at least 32 characters)",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:112"
      ]
    },
    "is_active": {
      "value": "is_active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:41",
        "auth_service/tests/factories/user_factory.py:41",
        "auth_service/tests/test_critical_bugs_simple.py:65",
        "auth_service/tests/utils/assertion_helpers.py:92",
        "auth_service/tests/utils/assertion_helpers.py:100",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:119",
        "scripts/test_seed_data.py:119",
        "scripts/test_seed_data.py:126",
        "scripts/test_seed_data.py:133"
      ]
    },
    "is_active must be boolean": {
      "value": "is_active must be boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:101",
        "auth_service/tests/utils/assertion_helpers.py:120"
      ]
    },
    "is_admin_mode": {
      "value": "is_admin_mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:85"
      ]
    },
    "is_default": {
      "value": "is_default",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:49",
        "scripts/test_dashboard.py:169",
        "scripts/test_dashboard.py:278",
        "scripts/test_dashboard.py:315",
        "scripts/test_execution_tracker.py:559",
        "scripts/test_execution_tracker.py:716"
      ]
    },
    "is_development": {
      "value": "is_development",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:221"
      ]
    },
    "is_healthy": {
      "value": "is_healthy",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:114"
      ]
    },
    "is_superuser": {
      "value": "is_superuser",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:120",
        "scripts/test_seed_data.py:127",
        "scripts/test_seed_data.py:134",
        "scripts/test_seed_data.py:150"
      ]
    },
    "is_valid": {
      "value": "is_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:73"
      ]
    },
    "is_verified": {
      "value": "is_verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:42"
      ]
    },
    "is_weekend": {
      "value": "is_weekend",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "isolated": {
      "value": "isolated",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:200"
      ]
    },
    "isolation": {
      "value": "isolation",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:108"
      ]
    },
    "iss": {
      "value": "iss",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:67",
        "scripts/test_staging_jwt.py:26"
      ]
    },
    "issue": {
      "value": "issue",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:295",
        "scripts/test_workflows_with_act.py:340"
      ]
    },
    "issuer": {
      "value": "issuer",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:78"
      ]
    },
    "issues": {
      "value": "issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:264",
        "scripts/test_cors.py:205",
        "scripts/test_cors.py:218",
        "scripts/test_cors.py:220",
        "scripts/test_cors.py:227",
        "scripts/test_cors.py:243",
        "scripts/test_cors.py:253",
        "scripts/test_cors.py:379",
        "scripts/test_cors.py:547",
        "scripts/test_cors.py:548"
      ]
    },
    "issues requiring attention": {
      "value": "issues requiring attention",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:461"
      ]
    },
    "it may indicate JWT secret mismatches between services.": {
      "value": "it may indicate JWT secret mismatches between services.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:182"
      ]
    },
    "it(": {
      "value": "it(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "it\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "it\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:419"
      ]
    },
    "item_": {
      "value": "item_",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:24"
      ]
    },
    "item_id": {
      "value": "item_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:49"
      ]
    },
    "items": {
      "value": "items",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:19",
        "scripts/test_async_serialization_direct.py:29",
        "scripts/test_intensive_serialization.py:37",
        "scripts/test_intensive_serialization.py:48"
      ]
    },
    "items)": {
      "value": "items)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:142"
      ]
    },
    "items_per_level": {
      "value": "items_per_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:26"
      ]
    },
    "iteration": {
      "value": "iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:79",
        "scripts/frontend_iterative_test_runner.py:79",
        "scripts/frontend_iterative_test_runner.py:140",
        "scripts/iterative_test_fix_loop.py:94",
        "scripts/test_failure_tracker.py:107"
      ]
    },
    "iteration test-fix loop": {
      "value": "iteration test-fix loop",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:142"
      ]
    },
    "iterations": {
      "value": "iterations",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:141"
      ]
    },
    "iterations!": {
      "value": "iterations!",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:150"
      ]
    },
    "javascript:alert('xss')": {
      "value": "javascript:alert('xss')",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:101"
      ]
    },
    "jest": {
      "value": "jest",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/cleanup_test_processes.py:129",
        "scripts/frontend_iterative_test_runner.py:702",
        "scripts/test_frontend_ORIGINAL.py:74",
        "scripts/test_frontend_ORIGINAL.py:102",
        "scripts/test_frontend_ORIGINAL.py:102",
        "scripts/unified_test_config.py:184"
      ]
    },
    "jest mocks (jest.fn:": {
      "value": "jest mocks (jest.fn:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:401"
      ]
    },
    "jest.config.*": {
      "value": "jest.config.*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    "jest.config.cjs": {
      "value": "jest.config.cjs",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:183"
      ]
    },
    "jest.fn()": {
      "value": "jest.fn()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:393",
        "scripts/frontend_iterative_test_runner.py:562",
        "scripts/frontend_iterative_test_runner.py:652"
      ]
    },
    "jest.mock(": {
      "value": "jest.mock(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:394"
      ]
    },
    "jest\\.fn\\(\\)": {
      "value": "jest\\.fn\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:69"
      ]
    },
    "jest\\.mock\\(": {
      "value": "jest\\.mock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:70"
      ]
    },
    "jest\\.mock\\([\\'\"`][^\\'\"`]+[\\'\"`],\\s*\\(\\)\\s*=>\\s*\\(\\{[\\s\\S]+?return\\s*<div": {
      "value": "jest\\.mock\\([\\'\"`][^\\'\"`]+[\\'\"`],\\s*\\(\\)\\s*=>\\s*\\(\\{[\\s\\S]+?return\\s*<div",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:77"
      ]
    },
    "journeys": {
      "value": "journeys",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:112"
      ]
    },
    "js_excessive_mocking": {
      "value": "js_excessive_mocking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:400",
        "scripts/compliance/real_test_requirements_enforcer.py:516"
      ]
    },
    "js_function_size": {
      "value": "js_function_size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:447"
      ]
    },
    "js_mock_component": {
      "value": "js_mock_component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:382",
        "scripts/compliance/real_test_requirements_enforcer.py:515"
      ]
    },
    "json": {
      "value": "json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:352",
        "auth_service/tests/test_refresh_endpoint_simple.py:81",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:777",
        "scripts/business_value_test_index.py:796",
        "scripts/compliance/fake_test_scanner.py:236",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/fake_test_scanner.py:429",
        "scripts/compliance/test_refactor_helper.py:131",
        "scripts/compliance/test_refactor_helper.py:674"
      ]
    },
    "json_output": {
      "value": "json_output",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:145"
      ]
    },
    "json_output_format": {
      "value": "json_output_format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:169"
      ]
    },
    "jti": {
      "value": "jti",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:148",
        "auth_service/tests/factories/token_factory.py:42",
        "auth_service/tests/factories/token_factory.py:136",
        "auth_service/tests/test_auth_comprehensive_audit.py:502",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:117",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:117",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:219",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:219",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:229",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:147"
      ]
    },
    "justification": {
      "value": "justification",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:642"
      ]
    },
    "justified": {
      "value": "justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:107",
        "scripts/analyze_test_mocks.py:128",
        "scripts/analyze_test_mocks.py:158"
      ]
    },
    "jwt": {
      "value": "jwt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:136",
        "scripts/analyze_test_mocks.py:44",
        "scripts/test_secret_manager_builder_critical.py:745"
      ]
    },
    "jwt-auth": {
      "value": "jwt-auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:44"
      ]
    },
    "jwt-secret-key": {
      "value": "jwt-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:143"
      ]
    },
    "jwt-test-user": {
      "value": "jwt-test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:68"
      ]
    },
    "jwt-user-101": {
      "value": "jwt-user-101",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:149",
        "auth_service/tests/test_refresh_token_fix.py:164"
      ]
    },
    "jwt@example.com": {
      "value": "jwt@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:150",
        "auth_service/tests/test_refresh_token_fix.py:165"
      ]
    },
    "jwt@staging.netrasystems.ai": {
      "value": "jwt@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:69",
        "auth_service/tests/test_refresh_critical_fix.py:85",
        "auth_service/tests/test_refresh_critical_fix.py:87"
      ]
    },
    "jwt_secret": {
      "value": "jwt_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:132",
        "scripts/test_staging_auth.py:172"
      ]
    },
    "jwt_secret_key": {
      "value": "jwt_secret_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:95",
        "scripts/test_staging_auth.py:172",
        "scripts/test_staging_config.py:127"
      ]
    },
    "jwt_token": {
      "value": "jwt_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:122",
        "scripts/setup_staging_test_account.py:206",
        "scripts/setup_staging_test_account.py:320"
      ]
    },
    "key": {
      "value": "key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:745"
      ]
    },
    "key_": {
      "value": "key_",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:23",
        "scripts/test_intensive_serialization.py:89"
      ]
    },
    "key_management_service.py": {
      "value": "key_management_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:135"
      ]
    },
    "key_parameters": {
      "value": "key_parameters",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:67",
        "scripts/test_triage_flow.py:36"
      ]
    },
    "keyboard": {
      "value": "keyboard",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:665"
      ]
    },
    "known failed tests": {
      "value": "known failed tests",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:211"
      ]
    },
    "known failed tests from cache": {
      "value": "known failed tests from cache",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:51"
      ]
    },
    "known failures": {
      "value": "known failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:86"
      ]
    },
    "large test files (>50KB). Consider splitting into smaller, focused test files.": {
      "value": "large test files (>50KB). Consider splitting into smaller, focused test files.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:163"
      ]
    },
    "large-perms-test": {
      "value": "large-perms-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:352"
      ]
    },
    "large_blob": {
      "value": "large_blob",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:76"
      ]
    },
    "large_state": {
      "value": "large_state",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:58"
      ]
    },
    "largeperms@example.com": {
      "value": "largeperms@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:353"
      ]
    },
    "largest_file": {
      "value": "largest_file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:83",
        "scripts/compliance/test_size_validator.py:98",
        "scripts/compliance/test_size_validator.py:99",
        "scripts/compliance/test_size_validator.py:426",
        "scripts/compliance/test_size_validator.py:428",
        "scripts/compliance/test_size_validator.py:428"
      ]
    },
    "largest_function": {
      "value": "largest_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:84",
        "scripts/compliance/test_size_validator.py:108",
        "scripts/compliance/test_size_validator.py:109",
        "scripts/compliance/test_size_validator.py:430",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/compliance/test_size_validator.py:432"
      ]
    },
    "last_30_days": {
      "value": "last_30_days",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:64"
      ]
    },
    "last_activity": {
      "value": "last_activity",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:40"
      ]
    },
    "last_event": {
      "value": "last_event",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:122"
      ]
    },
    "last_updated": {
      "value": "last_updated",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:61",
        "scripts/frontend_iterative_test_runner.py:176"
      ]
    },
    "latency": {
      "value": "latency",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:194",
        "scripts/test_triage_flow.py:47",
        "scripts/test_triage_flow.py:69"
      ]
    },
    "latency_distribution": {
      "value": "latency_distribution",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:93",
        "netra_backend/app/services/realistic_test_data/models.py:35",
        "netra_backend/app/services/realistic_test_data/models.py:45",
        "netra_backend/app/services/realistic_test_data/models.py:55",
        "netra_backend/app/services/realistic_test_data/models.py:65",
        "netra_backend/app/services/realistic_test_data/models.py:75"
      ]
    },
    "latency_ms": {
      "value": "latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:112",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:306",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:307",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:349",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:403",
        "scripts/test_data_validator_backup.py:45",
        "scripts/test_data_validator_backup.py:50",
        "scripts/test_data_validator_backup.py:72",
        "scripts/test_data_validator_backup.py:136"
      ]
    },
    "latency_p50_ms": {
      "value": "latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:206"
      ]
    },
    "latency_p95_ms": {
      "value": "latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:207"
      ]
    },
    "latency_range_ms": {
      "value": "latency_range_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:92",
        "netra_backend/app/services/realistic_test_data/models.py:34",
        "netra_backend/app/services/realistic_test_data/models.py:44",
        "netra_backend/app/services/realistic_test_data/models.py:54",
        "netra_backend/app/services/realistic_test_data/models.py:64",
        "netra_backend/app/services/realistic_test_data/models.py:74"
      ]
    },
    "latest/unit_report.md": {
      "value": "latest/unit_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:38"
      ]
    },
    "latin-1": {
      "value": "latin-1",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:230",
        "scripts/fix_all_test_issues.py:257",
        "scripts/fix_all_test_issues.py:280"
      ]
    },
    "legacy": {
      "value": "legacy",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:226"
      ]
    },
    "legacy test files...": {
      "value": "legacy test files...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:287"
      ]
    },
    "legacy_config": {
      "value": "legacy_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:273",
        "scripts/test_redis_config_critical_failure.py:294"
      ]
    },
    "legacy_framework": {
      "value": "legacy_framework",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:161",
        "scripts/autonomous_review/test_reviewer.py:170"
      ]
    },
    "legitimate-user-123": {
      "value": "legitimate-user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:147"
      ]
    },
    "length": {
      "value": "length",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115",
        "scripts/check_test_compliance.py:61",
        "scripts/check_test_compliance.py:177"
      ]
    },
    "lessons_learned": {
      "value": "lessons_learned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:85"
      ]
    },
    "level": {
      "value": "level",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:51",
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24"
      ]
    },
    "level_": {
      "value": "level_",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:18",
        "scripts/simple_serialization_test.py:23",
        "scripts/test_async_serialization_direct.py:28",
        "scripts/test_async_serialization_direct.py:32",
        "scripts/test_blocking_analysis.py:53",
        "scripts/test_intensive_serialization.py:40",
        "scripts/test_intensive_serialization.py:57"
      ]
    },
    "level_id": {
      "value": "level_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:35",
        "scripts/test_intensive_serialization.py:36"
      ]
    },
    "level_type": {
      "value": "level_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:40"
      ]
    },
    "lib": {
      "value": "lib",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "lib64": {
      "value": "lib64",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "license_service.py": {
      "value": "license_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:131"
      ]
    },
    "limit": {
      "value": "limit",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:145"
      ]
    },
    "limits": {
      "value": "limits",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:47"
      ]
    },
    "line": {
      "value": "line",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:106",
        "scripts/analyze_test_mocks.py:127",
        "scripts/analyze_test_mocks.py:178",
        "scripts/optimize_test_performance.py:83",
        "scripts/optimize_test_performance.py:243",
        "scripts/optimize_test_performance.py:253",
        "scripts/optimize_test_performance.py:258",
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "line limit": {
      "value": "line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:193",
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "line limit (SPEC/testing.xml)": {
      "value": "line limit (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:112"
      ]
    },
    "line limit:": {
      "value": "line limit:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:421",
        "scripts/compliance/test_size_validator.py:422"
      ]
    },
    "line limit:**": {
      "value": "line limit:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:460",
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "line-rate": {
      "value": "line-rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:80"
      ]
    },
    "line1": {
      "value": "line1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:295"
      ]
    },
    "line2": {
      "value": "line2",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:295"
      ]
    },
    "line3": {
      "value": "line3",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:324"
      ]
    },
    "line_number": {
      "value": "line_number",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:310",
        "scripts/compliance/test_size_validator.py:328",
        "scripts/frontend_iterative_test_runner.py:521",
        "scripts/frontend_iterative_test_runner.py:535"
      ]
    },
    "linear_decline": {
      "value": "linear_decline",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:100"
      ]
    },
    "lineno": {
      "value": "lineno",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:135",
        "scripts/compliance/project_test_validator.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:200",
        "scripts/compliance/real_test_validator.py:96"
      ]
    },
    "lines": {
      "value": "lines",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:249",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/check_test_compliance.py:111",
        "scripts/check_test_compliance.py:167",
        "scripts/check_test_compliance.py:167",
        "scripts/check_test_compliance.py:177",
        "scripts/compliance/demo_test_size_enforcement.py:88"
      ]
    },
    "lines (+": {
      "value": "lines (+",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83",
        "scripts/compliance/test_violations_reporter.py:123"
      ]
    },
    "lines (limit:": {
      "value": "lines (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:193",
        "scripts/compliance/test_limits_checker.py:209",
        "scripts/compliance/test_size_validator.py:364"
      ]
    },
    "lines (max:": {
      "value": "lines (max:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    "lines and should be manually reviewed.": {
      "value": "lines and should be manually reviewed.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "lines)": {
      "value": "lines)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256",
        "scripts/auto_fix_test_sizes.py:259",
        "scripts/auto_fix_test_sizes.py:445",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_fixer.py:362",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    "lines) manually": {
      "value": "lines) manually",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:622"
      ]
    },
    "lines):": {
      "value": "lines):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:261"
      ]
    },
    "lines, exceeds 25-line limit": {
      "value": "lines, exceeds 25-line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_validator.py:213"
      ]
    },
    "lines, exceeds 450-line limit": {
      "value": "lines, exceeds 450-line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:156",
        "scripts/compliance/real_test_requirements_enforcer.py:222",
        "scripts/compliance/real_test_validator.py:111"
      ]
    },
    "lines, exceeds reasonable limit": {
      "value": "lines, exceeds reasonable limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:448"
      ]
    },
    "lines, limit is": {
      "value": "lines, limit is",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:213"
      ]
    },
    "lint": {
      "value": "lint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:316"
      ]
    },
    "llama-2-70b": {
      "value": "llama-2-70b",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:73"
      ]
    },
    "llm": {
      "value": "llm",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40",
        "scripts/auto_fix_test_sizes.py:354",
        "scripts/business_value_test_index.py:441",
        "scripts/test_failure_analyzer.py:135"
      ]
    },
    "llm_calls": {
      "value": "llm_calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35",
        "scripts/optimize_test_performance.py:148",
        "scripts/real_service_test_metrics.py:21",
        "scripts/real_service_test_metrics.py:42",
        "scripts/real_service_test_metrics.py:144",
        "scripts/real_service_test_metrics.py:147",
        "scripts/real_service_test_metrics.py:148"
      ]
    },
    "llm_configs": {
      "value": "llm_configs",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:79",
        "scripts/test_staging_config.py:104"
      ]
    },
    "llm_costs": {
      "value": "llm_costs",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:22",
        "scripts/real_service_test_metrics.py:46",
        "scripts/real_service_test_metrics.py:100",
        "scripts/real_service_test_metrics.py:149"
      ]
    },
    "llm_error": {
      "value": "llm_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:136",
        "scripts/test_failure_analyzer.py:268"
      ]
    },
    "llm_manager = LLMManager()": {
      "value": "llm_manager = LLMManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:50"
      ]
    },
    "llm_manager = Mock()": {
      "value": "llm_manager = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:48"
      ]
    },
    "llm_manager\\.": {
      "value": "llm_manager\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35"
      ]
    },
    "llm_responses": {
      "value": "llm_responses",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:14"
      ]
    },
    "llm_services": {
      "value": "llm_services",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:41"
      ]
    },
    "llm_tokens_used": {
      "value": "llm_tokens_used",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:79"
      ]
    },
    "load": {
      "value": "load",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348",
        "scripts/business_value_test_index.py:90",
        "scripts/business_value_test_index.py:464"
      ]
    },
    "load-test": {
      "value": "load-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:371"
      ]
    },
    "load@example.com": {
      "value": "load@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:372"
      ]
    },
    "load_dotenv": {
      "value": "load_dotenv",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:343"
      ]
    },
    "load_dotenv must come BEFORE AuthConfig import to prevent race condition": {
      "value": "load_dotenv must come BEFORE AuthConfig import to prevent race condition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:358"
      ]
    },
    "load_dotenv must come BEFORE auth_routes import to prevent race condition": {
      "value": "load_dotenv must come BEFORE auth_routes import to prevent race condition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:356"
      ]
    },
    "load_dotenv not found in main.py": {
      "value": "load_dotenv not found in main.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:344"
      ]
    },
    "load_test_config": {
      "value": "load_test_config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "local": {
      "value": "local",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:75",
        "auth_service/tests/test_auth_comprehensive.py:74",
        "auth_service/tests/test_auth_real_services_comprehensive.py:101",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/compliance/test_refactor_helper.py:114",
        "scripts/compliance/test_refactor_helper.py:130",
        "scripts/run_agent_pipeline_test.py:41",
        "scripts/setup_e2e_test_ports.py:50",
        "scripts/test_sqlalchemy_2_migration.py:67",
        "scripts/test_sqlalchemy_2_migration.py:70"
      ]
    },
    "local_storage": {
      "value": "local_storage",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:169"
      ]
    },
    "localhost": {
      "value": "localhost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:65",
        "auth_service/tests/conftest.py:73",
        "auth_service/tests/integration/test_database_connection.py:73",
        "auth_service/tests/test_auth_port_configuration.py:51",
        "auth_service/tests/test_auth_port_configuration.py:243",
        "auth_service/tests/test_critical_bugs_real.py:67",
        "auth_service/tests/test_critical_bugs_real.py:179",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:47",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:104",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:130"
      ]
    },
    "localhost:": {
      "value": "localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:376"
      ]
    },
    "localhost_connection": {
      "value": "localhost_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:122"
      ]
    },
    "location": {
      "value": "location",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:173",
        "auth_service/tests/test_auth_comprehensive.py:203",
        "auth_service/tests/test_oauth_state_validation.py:91",
        "auth_service/tests/test_oauth_state_validation.py:144",
        "auth_service/tests/test_oauth_state_validation.py:239",
        "auth_service/tests/test_oauth_state_validation.py:298",
        "scripts/test_oauth_local.py:192"
      ]
    },
    "lock_reason": {
      "value": "lock_reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:193"
      ]
    },
    "log lines from": {
      "value": "log lines from",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:273"
      ]
    },
    "log_patterns": {
      "value": "log_patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:15"
      ]
    },
    "logging_config.py": {
      "value": "logging_config.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:106"
      ]
    },
    "login": {
      "value": "login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:139",
        "auth_service/tests/factories/token_factory.py:223",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/test_seed_data.py:309"
      ]
    },
    "login_failed": {
      "value": "login_failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:20"
      ]
    },
    "login_method": {
      "value": "login_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:75"
      ]
    },
    "login_success": {
      "value": "login_success",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:19"
      ]
    },
    "lognormal": {
      "value": "lognormal",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:127",
        "netra_backend/app/services/realistic_test_data/models.py:35",
        "netra_backend/app/services/realistic_test_data/models.py:45"
      ]
    },
    "logout": {
      "value": "logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:21"
      ]
    },
    "logout@example.com": {
      "value": "logout@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:91"
      ]
    },
    "logout_type": {
      "value": "logout_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:107"
      ]
    },
    "logs": {
      "value": "logs",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:74",
        "scripts/test_intensive_serialization.py:101",
        "scripts/test_log_introspection.py:276"
      ]
    },
    "long-running-token-for-shutdown-test": {
      "value": "long-running-token-for-shutdown-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:476"
      ]
    },
    "loop-test-user": {
      "value": "loop-test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:176"
      ]
    },
    "looptest@example.com": {
      "value": "looptest@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:177"
      ]
    },
    "low": {
      "value": "low",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:331",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:473",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:493",
        "scripts/compliance/fake_test_scanner.py:210",
        "scripts/compliance/fake_test_scanner.py:212",
        "scripts/compliance/fake_test_scanner.py:265"
      ]
    },
    "low error rate": {
      "value": "low error rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:106"
      ]
    },
    "low_test_count": {
      "value": "low_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:660"
      ]
    },
    "low_throughput": {
      "value": "low_throughput",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:371"
      ]
    },
    "low_tier_coverage": {
      "value": "low_tier_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:678"
      ]
    },
    "main.py": {
      "value": "main.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_environment_loading.py:336",
        "scripts/test_staging_simplified.py:30",
        "scripts/test_staging_simplified.py:47"
      ]
    },
    "maintain latency under 100ms": {
      "value": "maintain latency under 100ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:41"
      ]
    },
    "maintain_performance": {
      "value": "maintain_performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:52"
      ]
    },
    "major": {
      "value": "major",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:157",
        "scripts/compliance/project_test_validator.py:252",
        "scripts/compliance/project_test_validator.py:288",
        "scripts/compliance/project_test_validator.py:313",
        "scripts/compliance/project_test_validator.py:327",
        "scripts/compliance/project_test_validator.py:339",
        "scripts/compliance/real_test_linter.py:109",
        "scripts/compliance/real_test_linter.py:114",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:222"
      ]
    },
    "major violations to address soon": {
      "value": "major violations to address soon",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:557"
      ]
    },
    "malformed_response": {
      "value": "malformed_response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:130"
      ]
    },
    "manager": {
      "value": "manager",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:365"
      ]
    },
    "manager_created": {
      "value": "manager_created",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:55"
      ]
    },
    "manager_enabled": {
      "value": "manager_enabled",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:218"
      ]
    },
    "managers": {
      "value": "managers",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:366"
      ]
    },
    "manipulated-challenge-by-attacker": {
      "value": "manipulated-challenge-by-attacker",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:130"
      ]
    },
    "manual_review": {
      "value": "manual_review",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:80",
        "scripts/fix_test_batch.py:312"
      ]
    },
    "mark": {
      "value": "mark",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:194",
        "scripts/business_value_test_index.py:233",
        "scripts/business_value_test_index.py:245"
      ]
    },
    "markdown": {
      "value": "markdown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:407",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/real_service_test_metrics.py:113"
      ]
    },
    "marker_distribution": {
      "value": "marker_distribution",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:412"
      ]
    },
    "markers": {
      "value": "markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:88",
        "scripts/test_execution_tracker.py:93",
        "scripts/test_execution_tracker.py:98",
        "scripts/test_execution_tracker.py:103",
        "scripts/test_execution_tracker.py:108",
        "scripts/test_execution_tracker.py:113",
        "scripts/test_execution_tracker.py:118",
        "scripts/test_execution_tracker.py:123",
        "scripts/test_execution_tracker.py:128",
        "scripts/unified_test_config.py:25"
      ]
    },
    "markers_added": {
      "value": "markers_added",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:210",
        "scripts/e2e_test_fixer.py:221"
      ]
    },
    "match": {
      "value": "match",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:84",
        "scripts/optimize_test_performance.py:244"
      ]
    },
    "matches": {
      "value": "matches",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:59",
        "scripts/optimize_test_performance.py:114",
        "scripts/optimize_test_performance.py:117",
        "scripts/optimize_test_performance.py:148",
        "scripts/optimize_test_performance.py:278",
        "scripts/optimize_test_performance.py:300",
        "scripts/optimize_test_performance.py:301",
        "scripts/optimize_test_performance.py:395",
        "scripts/test_docker_websocket_fix.py:56",
        "scripts/test_docker_websocket_fix.py:64"
      ]
    },
    "max": {
      "value": "max",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:95",
        "scripts/real_service_test_metrics.py:187",
        "scripts/test_data_validator_backup.py:52",
        "scripts/test_data_validator_backup.py:501",
        "scripts/test_data_validator_backup.py:505",
        "scripts/test_data_validator_backup.py:506"
      ]
    },
    "max_age": {
      "value": "max_age",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:203",
        "scripts/test_cors.py:241",
        "scripts/test_cors.py:351"
      ]
    },
    "max_block_ms": {
      "value": "max_block_ms",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:107",
        "scripts/simple_websocket_blocking_test.py:161",
        "scripts/simple_websocket_blocking_test.py:215"
      ]
    },
    "max_connections": {
      "value": "max_connections",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:206"
      ]
    },
    "max_error_rate": {
      "value": "max_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_iterations": {
      "value": "max_iterations",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:173"
      ]
    },
    "max_latency_p50_ms": {
      "value": "max_latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_latency_p95_ms": {
      "value": "max_latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_load_time_ms": {
      "value": "max_load_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:135",
        "scripts/test_secret_manager_builder_critical.py:149",
        "scripts/test_secret_manager_builder_critical.py:165",
        "scripts/test_secret_manager_builder_critical.py:177",
        "scripts/test_secret_manager_builder_critical.py:462"
      ]
    },
    "max_null_percentage": {
      "value": "max_null_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:40"
      ]
    },
    "max_outlier_percentage": {
      "value": "max_outlier_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:42"
      ]
    },
    "max_time_ms": {
      "value": "max_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:589",
        "scripts/test_secret_manager_builder_critical.py:612",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "max_workers": {
      "value": "max_workers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:177",
        "scripts/test_backend_optimized.py:184",
        "scripts/test_backend_optimized.py:191"
      ]
    },
    "may still exceed line limits": {
      "value": "may still exceed line limits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:628"
      ]
    },
    "medical_qa": {
      "value": "medical_qa",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "medium": {
      "value": "medium",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:333",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:492",
        "scripts/business_value_test_index.py:662",
        "scripts/compliance/fake_test_scanner.py:205",
        "scripts/compliance/fake_test_scanner.py:207",
        "scripts/compliance/fake_test_scanner.py:265",
        "scripts/test_agent_pipeline_simple.py:176",
        "scripts/test_agent_pipeline_simple.py:219"
      ]
    },
    "member": {
      "value": "member",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:179",
        "scripts/test_seed_data.py:181"
      ]
    },
    "memory": {
      "value": "memory",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/test_docker_config.py:48"
      ]
    },
    "memory limit:": {
      "value": "memory limit:",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:256"
      ]
    },
    "memory usage at": {
      "value": "memory usage at",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:206",
        "scripts/pytest_resource_monitor.py:215"
      ]
    },
    "memory_aware": {
      "value": "memory_aware",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:67"
      ]
    },
    "memory_base": {
      "value": "memory_base",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:63",
        "scripts/pytest_resource_monitor.py:69",
        "scripts/pytest_resource_monitor.py:75",
        "scripts/pytest_resource_monitor.py:81",
        "scripts/pytest_resource_monitor.py:87"
      ]
    },
    "memory_leak": {
      "value": "memory_leak",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:78",
        "netra_backend/app/services/realistic_test_data/log_generator.py:115",
        "netra_backend/app/services/realistic_test_data/log_generator.py:145",
        "netra_backend/app/services/realistic_test_data/models.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:30"
      ]
    },
    "memory_limit_gb": {
      "value": "memory_limit_gb",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:281"
      ]
    },
    "memory_max": {
      "value": "memory_max",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:64",
        "scripts/pytest_resource_monitor.py:70",
        "scripts/pytest_resource_monitor.py:76",
        "scripts/pytest_resource_monitor.py:82",
        "scripts/pytest_resource_monitor.py:88",
        "scripts/pytest_resource_monitor.py:249"
      ]
    },
    "memory_mb": {
      "value": "memory_mb",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:147",
        "netra_backend/app/services/realistic_test_data/log_generator.py:178",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:207",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:324",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:325",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:364",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:394"
      ]
    },
    "memory_per_worker_mb": {
      "value": "memory_per_worker_mb",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:178",
        "scripts/test_backend_optimized.py:185",
        "scripts/test_backend_optimized.py:192"
      ]
    },
    "memory_percent": {
      "value": "memory_percent",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:282"
      ]
    },
    "memory_pressure": {
      "value": "memory_pressure",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:365",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:445"
      ]
    },
    "memory_usage_gb": {
      "value": "memory_usage_gb",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:280"
      ]
    },
    "message": {
      "value": "message",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:71",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:71",
        "netra_backend/app/services/realistic_test_data/log_generator.py:53",
        "netra_backend/app/services/realistic_test_data/models.py:115",
        "netra_backend/app/services/realistic_test_data/models.py:121",
        "netra_backend/app/services/realistic_test_data/models.py:126",
        "netra_backend/app/services/realistic_test_data/models.py:132",
        "netra_backend/app/services/realistic_test_data/models.py:137",
        "auth_service/tests/auth-service-down-critical-scenarios.py:156",
        "auth_service/tests/auth-service-down-critical-scenarios.py:337"
      ]
    },
    "message_": {
      "value": "message_",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:198"
      ]
    },
    "message_dict = await self._serialize_message_safely_async(message)": {
      "value": "message_dict = await self._serialize_message_safely_async(message)",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:178"
      ]
    },
    "message_flow": {
      "value": "message_flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:42",
        "scripts/test_websocket_dev_mode.py:207"
      ]
    },
    "message_handler.py": {
      "value": "message_handler.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:89"
      ]
    },
    "message_handlers.py": {
      "value": "message_handlers.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:213",
        "scripts/test_websocket_injection_fix_complete.py:221"
      ]
    },
    "message_id": {
      "value": "message_id",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:247"
      ]
    },
    "message_send": {
      "value": "message_send",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:309"
      ]
    },
    "message_sent": {
      "value": "message_sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:330"
      ]
    },
    "messages": {
      "value": "messages",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:38",
        "scripts/test_data_pipeline_simple.py:116"
      ]
    },
    "messages found": {
      "value": "messages found",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:117"
      ]
    },
    "messages.py": {
      "value": "messages.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:74"
      ]
    },
    "messages_exchanged": {
      "value": "messages_exchanged",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:68",
        "scripts/test_websocket_cors_comprehensive.py:105",
        "scripts/test_websocket_cors_comprehensive.py:111"
      ]
    },
    "messages_sent": {
      "value": "messages_sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:212"
      ]
    },
    "metadata": {
      "value": "metadata",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:36",
        "scripts/business_value_test_index.py:617",
        "scripts/business_value_test_index.py:737",
        "scripts/business_value_test_index.py:738",
        "scripts/test_adaptive_workflow.py:229",
        "scripts/test_adaptive_workflow_local.py:46",
        "scripts/test_blocking_analysis.py:24",
        "scripts/test_blocking_analysis.py:50",
        "scripts/test_data_pipeline_simple.py:66",
        "scripts/test_intensive_serialization.py:23"
      ]
    },
    "metadata.google.internal": {
      "value": "metadata.google.internal",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:228"
      ]
    },
    "method": {
      "value": "method",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:102",
        "scripts/staging_comprehensive_test.py:135",
        "scripts/test_agent_recovery_simple.py:65",
        "scripts/test_agent_recovery_simple.py:79",
        "scripts/test_agent_recovery_simple.py:88",
        "scripts/test_agent_recovery_simple.py:96",
        "scripts/test_agent_recovery_simple.py:104",
        "scripts/test_agent_recovery_simple.py:170",
        "scripts/test_cors_implementation.py:214",
        "scripts/test_staging_deployment.py:46"
      ]
    },
    "method available": {
      "value": "method available",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:96"
      ]
    },
    "method exists": {
      "value": "method exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:50"
      ]
    },
    "method missing": {
      "value": "method missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:52",
        "scripts/test_supervisor_websocket_integration.py:99"
      ]
    },
    "method\"\"\"\n        # TODO: Implement method test\n        pass": {
      "value": "method\"\"\"\n        # TODO: Implement method test\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:216"
      ]
    },
    "method_names": {
      "value": "method_names",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:331"
      ]
    },
    "methods": {
      "value": "methods",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:212",
        "scripts/setup_staging_test_account.py:182",
        "scripts/setup_staging_test_account.py:194",
        "scripts/setup_staging_test_account.py:199",
        "scripts/setup_staging_test_account.py:209",
        "scripts/setup_staging_test_account.py:214",
        "scripts/setup_staging_test_account.py:218",
        "scripts/setup_staging_test_account.py:225",
        "scripts/setup_staging_test_account.py:231",
        "scripts/setup_staging_test_account.py:236"
      ]
    },
    "methods_allowed": {
      "value": "methods_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:201",
        "scripts/test_cors.py:231"
      ]
    },
    "metric": {
      "value": "metric",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:47",
        "scripts/test_triage_flow.py:48",
        "scripts/test_triage_flow.py:69"
      ]
    },
    "metric_": {
      "value": "metric_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:102"
      ]
    },
    "metrics": {
      "value": "metrics",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:54",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:125",
        "scripts/team_updates_test_analyzer.py:18",
        "scripts/test_backend_optimized.py:219",
        "scripts/test_clickhouse_startup_fix.py:66",
        "scripts/test_data_validator_backup.py:72",
        "scripts/test_data_validator_backup.py:136",
        "scripts/test_data_validator_backup.py:264",
        "scripts/test_data_validator_backup.py:284",
        "scripts/test_intensive_serialization.py:102"
      ]
    },
    "metrics.py": {
      "value": "metrics.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:75",
        "scripts/batch_test_generator.py:106"
      ]
    },
    "metrics_analyzed": {
      "value": "metrics_analyzed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:252"
      ]
    },
    "metrics_endpoint": {
      "value": "metrics_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:250"
      ]
    },
    "metrics_found": {
      "value": "metrics_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:194"
      ]
    },
    "metrics_mentioned": {
      "value": "metrics_mentioned",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:45"
      ]
    },
    "microsoft/vscode": {
      "value": "microsoft/vscode",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "mid": {
      "value": "mid",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:109",
        "scripts/business_value_test_index.py:459",
        "scripts/business_value_test_index.py:675"
      ]
    },
    "middleware.py": {
      "value": "middleware.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:108"
      ]
    },
    "mid|professional|advanced": {
      "value": "mid|professional|advanced",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:109"
      ]
    },
    "migrated_test": {
      "value": "migrated_test",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:100",
        "scripts/migrate_test_ids.py:102"
      ]
    },
    "migration": {
      "value": "migration",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340"
      ]
    },
    "migration_service.py": {
      "value": "migration_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:126"
      ]
    },
    "min": {
      "value": "min",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:94",
        "scripts/real_service_test_metrics.py:186",
        "scripts/test_data_validator_backup.py:51",
        "scripts/test_data_validator_backup.py:500",
        "scripts/test_data_validator_backup.py:504",
        "scripts/test_data_validator_backup.py:506"
      ]
    },
    "min_data_points": {
      "value": "min_data_points",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:39"
      ]
    },
    "min_time_ms": {
      "value": "min_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:588",
        "scripts/test_secret_manager_builder_critical.py:611",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "min_time_span_hours": {
      "value": "min_time_span_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:41"
      ]
    },
    "minimal_validation": {
      "value": "minimal_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:120",
        "scripts/test_improved_environment_validation.py:120"
      ]
    },
    "minor": {
      "value": "minor",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:313",
        "scripts/compliance/project_test_validator.py:328",
        "scripts/compliance/project_test_validator.py:339",
        "scripts/compliance/real_test_linter.py:55",
        "scripts/compliance/real_test_linter.py:71",
        "scripts/compliance/real_test_linter.py:109",
        "scripts/compliance/real_test_linter.py:115",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:490",
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "minor_issues": {
      "value": "minor_issues",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:96"
      ]
    },
    "minute": {
      "value": "minute",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:122"
      ]
    },
    "mirrored_from_gemini": {
      "value": "mirrored_from_gemini",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:259"
      ]
    },
    "misc": {
      "value": "misc",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:555"
      ]
    },
    "misconfigured": {
      "value": "misconfigured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:281"
      ]
    },
    "mismatch@example.com": {
      "value": "mismatch@example.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:93"
      ]
    },
    "misses": {
      "value": "misses",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:60",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:174"
      ]
    },
    "missing": {
      "value": "missing",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:676",
        "scripts/test_websocket_injection_fix_complete.py:157",
        "scripts/test_websocket_injection_fix_complete.py:247",
        "scripts/test_websocket_injection_fix_complete.py:435",
        "scripts/test_websocket_injection_fix_complete.py:482"
      ]
    },
    "missing (required for production)": {
      "value": "missing (required for production)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:809"
      ]
    },
    "missing dependency:": {
      "value": "missing dependency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:100"
      ]
    },
    "missing jti claim": {
      "value": "missing jti claim",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:150"
      ]
    },
    "missing):": {
      "value": "missing):",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:67",
        "scripts/test_improved_environment_validation.py:68"
      ]
    },
    "missing@example.com": {
      "value": "missing@example.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:110"
      ]
    },
    "missing_args": {
      "value": "missing_args",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:88"
      ]
    },
    "missing_assertion": {
      "value": "missing_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:163",
        "scripts/autonomous_review/test_reviewer.py:175",
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "missing_attr": {
      "value": "missing_attr",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:58"
      ]
    },
    "missing_critical_events": {
      "value": "missing_critical_events",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:236",
        "scripts/test_agent_execution_websocket_integration.py:314",
        "scripts/test_agent_execution_websocket_integration.py:323",
        "scripts/test_websocket_standalone.py:99",
        "scripts/test_websocket_standalone.py:176",
        "scripts/test_websocket_standalone.py:182"
      ]
    },
    "missing_e2e": {
      "value": "missing_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:668"
      ]
    },
    "missing_events": {
      "value": "missing_events",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:162"
      ]
    },
    "missing_fields": {
      "value": "missing_fields",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:231",
        "scripts/test_data_validator_backup.py:231"
      ]
    },
    "missing_imports": {
      "value": "missing_imports",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:31",
        "scripts/e2e_test_fixer.py:68"
      ]
    },
    "missing_item": {
      "value": "missing_item",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:32",
        "scripts/comprehensive_test_fixer.py:43",
        "scripts/comprehensive_test_fixer.py:56",
        "scripts/comprehensive_test_fixer.py:321"
      ]
    },
    "missing_markers": {
      "value": "missing_markers",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:28",
        "scripts/e2e_test_fixer.py:60",
        "scripts/test_collection_audit.py:409"
      ]
    },
    "missing_module": {
      "value": "missing_module",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:74"
      ]
    },
    "missing_name": {
      "value": "missing_name",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:46",
        "scripts/fix_test_batch.py:301"
      ]
    },
    "missing_required_args": {
      "value": "missing_required_args",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:95"
      ]
    },
    "missing_token": {
      "value": "missing_token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:104",
        "scripts/test_verify_workflow_status_corrected.py:117"
      ]
    },
    "ml_service.py": {
      "value": "ml_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:128"
      ]
    },
    "mock": {
      "value": "mock",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:385",
        "scripts/compliance/project_test_validator.py:171",
        "scripts/compliance/project_test_validator.py:183",
        "scripts/compliance/real_test_requirements_enforcer.py:238",
        "scripts/compliance/real_test_requirements_enforcer.py:260",
        "scripts/compliance/real_test_validator.py:125",
        "scripts/compliance/real_test_validator.py:135",
        "scripts/compliance/test_refactor_helper.py:200",
        "scripts/debug_supervisor_test.py:21",
        "scripts/frontend_iterative_test_runner.py:560"
      ]
    },
    "mock patterns found": {
      "value": "mock patterns found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:185"
      ]
    },
    "mock usages, should use real components": {
      "value": "mock usages, should use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:287",
        "scripts/compliance/real_test_validator.py:248"
      ]
    },
    "mock violations found": {
      "value": "mock violations found",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:98"
      ]
    },
    "mock-only tests in current sprint": {
      "value": "mock-only tests in current sprint",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "mock-token-": {
      "value": "mock-token-",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:72"
      ]
    },
    "mock-user-001": {
      "value": "mock-user-001",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:55"
      ]
    },
    "mockStore.exportConversation.mock.calls": {
      "value": "mockStore.exportConversation.mock.calls",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:618",
        "scripts/frontend_iterative_test_runner.py:621"
      ]
    },
    "mock\\w*Context\\s*=": {
      "value": "mock\\w*Context\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:73"
      ]
    },
    "mock_": {
      "value": "mock_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358",
        "scripts/test_real_jwt_e2e.py:90"
      ]
    },
    "mock_\\w+\\s*=": {
      "value": "mock_\\w+\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "mock_analysis.json": {
      "value": "mock_analysis.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:185"
      ]
    },
    "mock_component_class": {
      "value": "mock_component_class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:174",
        "scripts/compliance/real_test_requirements_enforcer.py:247",
        "scripts/compliance/real_test_requirements_enforcer.py:515",
        "scripts/compliance/real_test_validator.py:127"
      ]
    },
    "mock_component_function": {
      "value": "mock_component_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:186",
        "scripts/compliance/real_test_linter.py:158",
        "scripts/compliance/real_test_requirements_enforcer.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:515",
        "scripts/compliance/real_test_validator.py:138",
        "scripts/compliance/test_fixer.py:356"
      ]
    },
    "mock_component_pattern": {
      "value": "mock_component_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:158"
      ]
    },
    "mock_components": {
      "value": "mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:92",
        "scripts/check_test_compliance.py:125",
        "scripts/check_test_compliance.py:135",
        "scripts/check_test_compliance.py:149",
        "scripts/check_test_compliance.py:182",
        "scripts/check_test_compliance.py:183",
        "scripts/check_test_compliance.py:184",
        "scripts/check_test_compliance.py:186",
        "scripts/check_test_compliance.py:187"
      ]
    },
    "mock_count": {
      "value": "mock_count",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:127",
        "scripts/check_test_compliance.py:185"
      ]
    },
    "mock_implementation_comment": {
      "value": "mock_implementation_comment",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:150"
      ]
    },
    "mock_implementation_comments": {
      "value": "mock_implementation_comments",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:47",
        "scripts/remove_test_stubs.py:145"
      ]
    },
    "mock_login": {
      "value": "mock_login",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:87",
        "scripts/test_staging_login_automated.py:321"
      ]
    },
    "mock_only": {
      "value": "mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:51",
        "scripts/add_test_markers.py:142",
        "scripts/unified_test_config.py:94"
      ]
    },
    "mock_reductions": {
      "value": "mock_reductions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:215",
        "scripts/compliance/real_test_linter.py:218",
        "scripts/compliance/test_fixer.py:352",
        "scripts/compliance/test_fixer.py:369"
      ]
    },
    "mock_refresh_token": {
      "value": "mock_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:175"
      ]
    },
    "mock_setup_configuration": {
      "value": "mock_setup_configuration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:99",
        "scripts/frontend_iterative_test_runner.py:303",
        "scripts/frontend_iterative_test_runner.py:448",
        "scripts/frontend_iterative_test_runner.py:476"
      ]
    },
    "mock_usage_in_e2e": {
      "value": "mock_usage_in_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:32",
        "scripts/e2e_test_fixer.py:64"
      ]
    },
    "mocks (should be": {
      "value": "mocks (should be",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:172"
      ]
    },
    "mocks, should use real components": {
      "value": "mocks, should use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:369"
      ]
    },
    "mocks_removed": {
      "value": "mocks_removed",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:211",
        "scripts/e2e_test_fixer.py:225"
      ]
    },
    "mode": {
      "value": "mode",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:35",
        "scripts/setup_e2e_test_ports.py:78",
        "scripts/test_intensive_serialization.py:301",
        "scripts/test_intensive_serialization.py:301"
      ]
    },
    "mode):": {
      "value": "mode):",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:86"
      ]
    },
    "model": {
      "value": "model",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:74",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:107",
        "scripts/test_intensive_serialization.py:87",
        "scripts/test_seed_data.py:201",
        "scripts/test_seed_data.py:209",
        "scripts/test_seed_data.py:217",
        "scripts/test_triage_flow.py:64"
      ]
    },
    "model_config": {
      "value": "model_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:201",
        "scripts/test_seed_data.py:209",
        "scripts/test_seed_data.py:217",
        "scripts/test_seed_data.py:229"
      ]
    },
    "model_costs_usd": {
      "value": "model_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "model_type": {
      "value": "model_type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "model_usage": {
      "value": "model_usage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:179"
      ]
    },
    "models_mentioned": {
      "value": "models_mentioned",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:44"
      ]
    },
    "moderate blocking events": {
      "value": "moderate blocking events",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:220"
      ]
    },
    "modern_abstraction_import": {
      "value": "modern_abstraction_import",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:157"
      ]
    },
    "modern_websocket_manager": {
      "value": "modern_websocket_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:159"
      ]
    },
    "module": {
      "value": "module",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:31",
        "scripts/comprehensive_test_fixer.py:44",
        "scripts/comprehensive_test_fixer.py:55",
        "scripts/comprehensive_test_fixer.py:67",
        "scripts/comprehensive_test_fixer.py:320",
        "scripts/fix_test_batch.py:47",
        "scripts/fix_test_batch.py:302",
        "scripts/test_failure_analyzer.py:95",
        "scripts/test_failure_analyzer.py:214"
      ]
    },
    "modulenotfounderror": {
      "value": "modulenotfounderror",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:93"
      ]
    },
    "modules failed to import:": {
      "value": "modules failed to import:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:205"
      ]
    },
    "modules imported successfully!": {
      "value": "modules imported successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:210"
      ]
    },
    "modules to validate": {
      "value": "modules to validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:177"
      ]
    },
    "monitoring.py": {
      "value": "monitoring.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:72",
        "scripts/batch_test_generator.py:110"
      ]
    },
    "monitoring_service.py": {
      "value": "monitoring_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:133"
      ]
    },
    "more": {
      "value": "more",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:437",
        "scripts/align_test_imports.py:449",
        "scripts/check_test_compliance.py:169",
        "scripts/check_test_compliance.py:187",
        "scripts/compliance/project_test_validator.py:361",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/real_test_validator.py:305",
        "scripts/e2e_test_fixer.py:265",
        "scripts/optimize_test_performance.py:391",
        "scripts/run_all_test_categories.py:78"
      ]
    },
    "more errors": {
      "value": "more errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:117"
      ]
    },
    "more events": {
      "value": "more events",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:405",
        "scripts/test_supervisor_execution_flow.py:163"
      ]
    },
    "more files": {
      "value": "more files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:179",
        "scripts/check_test_import_order.py:93",
        "scripts/compliance/real_test_requirements_enforcer.py:539",
        "scripts/compliance/test_violations_reporter.py:86",
        "scripts/compliance/test_violations_reporter.py:134"
      ]
    },
    "more functions": {
      "value": "more functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:127"
      ]
    },
    "more suggestions": {
      "value": "more suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:148"
      ]
    },
    "more violations": {
      "value": "more violations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:52",
        "scripts/validate_llm_test_models.py:175"
      ]
    },
    "more violations in": {
      "value": "more violations in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:134"
      ]
    },
    "more warnings": {
      "value": "more warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:60",
        "scripts/test_improved_environment_validation.py:61",
        "scripts/test_service_startup_with_missing_optionals.py:66"
      ]
    },
    "more_data": {
      "value": "more_data",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:26"
      ]
    },
    "ms": {
      "value": "ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:118",
        "scripts/manage_test_services.py:118",
        "scripts/simple_serialization_test.py:77",
        "scripts/simple_serialization_test.py:89",
        "scripts/simple_serialization_test.py:101",
        "scripts/simple_serialization_test.py:113",
        "scripts/simple_serialization_test.py:114",
        "scripts/simple_serialization_test.py:147",
        "scripts/simple_serialization_test.py:157",
        "scripts/simple_serialization_test.py:162"
      ]
    },
    "ms\n   • Performance improvement needed:": {
      "value": "ms\n   • Performance improvement needed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:661"
      ]
    },
    "ms\n   • Target with SecretManagerBuilder: <": {
      "value": "ms\n   • Target with SecretManagerBuilder: <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:660"
      ]
    },
    "ms -": {
      "value": "ms -",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:94",
        "scripts/test_blocking_analysis.py:107"
      ]
    },
    "ms - Error:": {
      "value": "ms - Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:257",
        "scripts/test_intensive_serialization.py:268"
      ]
    },
    "ms - Success": {
      "value": "ms - Success",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:254",
        "scripts/test_intensive_serialization.py:265"
      ]
    },
    "ms >": {
      "value": "ms >",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:466"
      ]
    },
    "ms exceeds": {
      "value": "ms exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:630"
      ]
    },
    "ms limit": {
      "value": "ms limit",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:466"
      ]
    },
    "ms per deployment": {
      "value": "ms per deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:650"
      ]
    },
    "ms per service):": {
      "value": "ms per service):",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:619"
      ]
    },
    "ms requirement:": {
      "value": "ms requirement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:657"
      ]
    },
    "ms target": {
      "value": "ms target",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:630"
      ]
    },
    "ms vs": {
      "value": "ms vs",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:411"
      ]
    },
    "ms |": {
      "value": "ms |",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:496"
      ]
    },
    "ms | Max:": {
      "value": "ms | Max:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "ms | Min:": {
      "value": "ms | Min:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "ms)": {
      "value": "ms)",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:183"
      ]
    },
    "ms:": {
      "value": "ms:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:169",
        "scripts/test_intensive_serialization.py:186"
      ]
    },
    "msg/s": {
      "value": "msg/s",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:230",
        "scripts/test_staging_websocket_comprehensive.py:237"
      ]
    },
    "msg_": {
      "value": "msg_",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:243"
      ]
    },
    "multi_service_coverage": {
      "value": "multi_service_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:632",
        "scripts/business_value_test_index.py:749"
      ]
    },
    "multiprocessing\\.": {
      "value": "multiprocessing\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:222"
      ]
    },
    "must generate new token": {
      "value": "must generate new token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:133"
      ]
    },
    "mv": {
      "value": "mv",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:133"
      ]
    },
    "mydb": {
      "value": "mydb",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:152",
        "auth_service/tests/integration/test_database_connection.py:155"
      ]
    },
    "myhost": {
      "value": "myhost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:149",
        "auth_service/tests/integration/test_database_connection.py:155"
      ]
    },
    "mypass": {
      "value": "mypass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:151"
      ]
    },
    "mysql://user:pass@host/db": {
      "value": "mysql://user:pass@host/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:272"
      ]
    },
    "myuser": {
      "value": "myuser",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:150"
      ]
    },
    "name": {
      "value": "name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:509",
        "auth_service/tests/auth-service-down-critical-scenarios.py:523",
        "auth_service/tests/auth-service-down-critical-scenarios.py:544",
        "auth_service/tests/conftest.py:234",
        "auth_service/tests/factories/token_factory.py:225",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:148",
        "auth_service/tests/test_oauth_state_validation.py:128",
        "auth_service/tests/test_oauth_state_validation.py:271"
      ]
    },
    "name=netra-dev-backend": {
      "value": "name=netra-dev-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:22"
      ]
    },
    "name=netra-test": {
      "value": "name=netra-test",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:33"
      ]
    },
    "naming_patterns": {
      "value": "naming_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:67",
        "scripts/generate_test_audit.py:99",
        "scripts/generate_test_audit.py:101",
        "scripts/generate_test_audit.py:103",
        "scripts/generate_test_audit.py:105",
        "scripts/generate_test_audit.py:107",
        "scripts/generate_test_audit.py:184",
        "scripts/generate_test_audit.py:220",
        "scripts/generate_test_audit.py:221",
        "scripts/generate_test_audit.py:223"
      ]
    },
    "needs_implementation": {
      "value": "needs_implementation",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:309",
        "scripts/fix_test_batch.py:387"
      ]
    },
    "nested": {
      "value": "nested",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:479",
        "scripts/simple_serialization_test.py:21",
        "scripts/simple_serialization_test.py:23",
        "scripts/simple_websocket_blocking_test.py:24",
        "scripts/test_async_serialization_direct.py:30",
        "scripts/test_async_serialization_direct.py:32",
        "scripts/test_intensive_serialization.py:121"
      ]
    },
    "nested objects...": {
      "value": "nested objects...",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:144"
      ]
    },
    "nested_": {
      "value": "nested_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:122"
      ]
    },
    "nested_levels": {
      "value": "nested_levels",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:25"
      ]
    },
    "nested_objects": {
      "value": "nested_objects",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:41",
        "scripts/test_blocking_analysis.py:47"
      ]
    },
    "nested_value": {
      "value": "nested_value",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:123"
      ]
    },
    "netra": {
      "value": "netra",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:17",
        "scripts/test_async_postgres.py:148"
      ]
    },
    "netra-ai-staging": {
      "value": "netra-ai-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:34"
      ]
    },
    "netra-backend": {
      "value": "netra-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:27",
        "scripts/test_auth_service_integration_fix.py:30",
        "scripts/test_auth_service_integration_fix.py:108",
        "scripts/test_environment_detection.py:51",
        "scripts/test_error_monitor_logic.py:115",
        "scripts/test_error_monitor_logic.py:125",
        "scripts/test_error_monitor_logic.py:135",
        "scripts/test_error_monitor_logic.py:152",
        "scripts/test_staging_jwt_validation.py:117"
      ]
    },
    "netra-backend-staging": {
      "value": "netra-backend-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:91"
      ]
    },
    "netra-dev": {
      "value": "netra-dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:192",
        "scripts/test_docker_manager.py:34"
      ]
    },
    "netra-dev-auth": {
      "value": "netra-dev-auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:146",
        "scripts/test_docker_hot_reload.py:213"
      ]
    },
    "netra-dev-backend": {
      "value": "netra-dev-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:145",
        "scripts/test_docker_hot_reload.py:210",
        "scripts/test_hot_reload.py:27",
        "scripts/test_hot_reload.py:74"
      ]
    },
    "netra-dev-frontend": {
      "value": "netra-dev-frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:144",
        "scripts/test_docker_hot_reload.py:207"
      ]
    },
    "netra-dev-postgres": {
      "value": "netra-dev-postgres",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:137"
      ]
    },
    "netra-dev-redis": {
      "value": "netra-dev-redis",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:141"
      ]
    },
    "netra-frontend": {
      "value": "netra-frontend",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:49",
        "scripts/test_jwt_fix.py:26"
      ]
    },
    "netra-prod-backend": {
      "value": "netra-prod-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:58"
      ]
    },
    "netra-production-service": {
      "value": "netra-production-service",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:156"
      ]
    },
    "netra-staging": {
      "value": "netra-staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:65",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:82",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:290",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:319",
        "scripts/test/test_clickhouse_staging_fix.py:128",
        "scripts/test_redis_config_critical_failure.py:93",
        "scripts/test_staging_config.py:46"
      ]
    },
    "netra-staging-backend": {
      "value": "netra-staging-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:44"
      ]
    },
    "netra-staging-service": {
      "value": "netra-staging-service",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:142"
      ]
    },
    "netra-test": {
      "value": "netra-test",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:47",
        "scripts/test_docker_manager.py:40",
        "scripts/test_staging_jwt.py:26"
      ]
    },
    "netra-test-auth": {
      "value": "netra-test-auth",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:40"
      ]
    },
    "netra-test-backend": {
      "value": "netra-test-backend",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:40"
      ]
    },
    "netra-test-postgres": {
      "value": "netra-test-postgres",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:40",
        "scripts/test_docker_manager.py:97",
        "scripts/test_docker_manager.py:165"
      ]
    },
    "netra-test-redis": {
      "value": "netra-test-redis",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:120",
        "scripts/test_docker_manager.py:169"
      ]
    },
    "netra.test.agent@gmail.com": {
      "value": "netra.test.agent@gmail.com",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:46",
        "scripts/setup_staging_test_account.py:60"
      ]
    },
    "netra123": {
      "value": "netra123",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:18"
      ]
    },
    "netra_analytics": {
      "value": "netra_analytics",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:86",
        "scripts/test/test_clickhouse_staging_fix.py:140"
      ]
    },
    "netra_app": {
      "value": "netra_app",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:79",
        "scripts/test/test_clickhouse_staging_fix.py:131"
      ]
    },
    "netra_backend": {
      "value": "netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:29",
        "scripts/batch_test_generator.py:34",
        "scripts/check_test_import_order.py:39",
        "scripts/check_test_import_order.py:44",
        "scripts/fix_authentication_test_tokens.py:29",
        "scripts/fix_test_import_errors.py:25",
        "scripts/fix_test_utils_imports.py:64",
        "scripts/remove_duplicate_test_setup.py:38",
        "scripts/standardize_l3_test_names.py:59",
        "scripts/test/test_presence_detection.py:11"
      ]
    },
    "netra_backend.app": {
      "value": "netra_backend.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:71"
      ]
    },
    "netra_backend.app.agents.supervisor_consolidated": {
      "value": "netra_backend.app.agents.supervisor_consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:28"
      ]
    },
    "netra_backend.tests.test_utils": {
      "value": "netra_backend.tests.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:25"
      ]
    },
    "netra_backend/alembic": {
      "value": "netra_backend/alembic",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:127"
      ]
    },
    "netra_backend/alembic.ini": {
      "value": "netra_backend/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:110"
      ]
    },
    "netra_backend/app": {
      "value": "netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:111",
        "scripts/unified_test_config.py:168"
      ]
    },
    "netra_backend/app/agents/supervisor/*.py": {
      "value": "netra_backend/app/agents/supervisor/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:53"
      ]
    },
    "netra_backend/app/agents/supervisor_agent.py": {
      "value": "netra_backend/app/agents/supervisor_agent.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:52"
      ]
    },
    "netra_backend/app/agents/supervisor_agent_modern.py": {
      "value": "netra_backend/app/agents/supervisor_agent_modern.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:51"
      ]
    },
    "netra_backend/app/core/middleware_setup.py": {
      "value": "netra_backend/app/core/middleware_setup.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:147"
      ]
    },
    "netra_backend/app/core/websocket_cors.py": {
      "value": "netra_backend/app/core/websocket_cors.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:149"
      ]
    },
    "netra_backend/app/dependencies.py": {
      "value": "netra_backend/app/dependencies.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:46"
      ]
    },
    "netra_backend/app/services/agent_service_core.py": {
      "value": "netra_backend/app/services/agent_service_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:63"
      ]
    },
    "netra_backend/app/services/message_handlers.py": {
      "value": "netra_backend/app/services/message_handlers.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:185"
      ]
    },
    "netra_backend/app/services/service_factory.py": {
      "value": "netra_backend/app/services/service_factory.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:55"
      ]
    },
    "netra_backend/app/startup_module.py": {
      "value": "netra_backend/app/startup_module.py",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_startup_module.py:36"
      ]
    },
    "netra_backend/app/test_hot_reload.py": {
      "value": "netra_backend/app/test_hot_reload.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:35"
      ]
    },
    "netra_backend/app/test_hot_reload_marker.py": {
      "value": "netra_backend/app/test_hot_reload_marker.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:68"
      ]
    },
    "netra_backend/tests": {
      "value": "netra_backend/tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/apply_fast_test_decorators.py:134",
        "scripts/batch_fix_and_test.py:41",
        "scripts/check_test_import_order.py:64",
        "scripts/fix_test_import_order.py:89",
        "scripts/migrate_test_environment_access.py:366",
        "scripts/optimize_test_performance.py:343",
        "scripts/test_backend_ORIGINAL.py:207",
        "scripts/validate_llm_test_models.py:42"
      ]
    },
    "netra_backend/tests/agents": {
      "value": "netra_backend/tests/agents",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:28",
        "scripts/test_backend_ORIGINAL.py:32"
      ]
    },
    "netra_backend/tests/agents/test_supervisor*.py": {
      "value": "netra_backend/tests/agents/test_supervisor*.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:203"
      ]
    },
    "netra_backend/tests/agents/test_supervisor_advanced.py": {
      "value": "netra_backend/tests/agents/test_supervisor_advanced.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:45"
      ]
    },
    "netra_backend/tests/agents/test_supervisor_basic.py": {
      "value": "netra_backend/tests/agents/test_supervisor_basic.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:44"
      ]
    },
    "netra_backend/tests/agents/test_supervisor_bulletproof.py": {
      "value": "netra_backend/tests/agents/test_supervisor_bulletproof.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:29",
        "scripts/run_supervisor_test_coverage.py:73"
      ]
    },
    "netra_backend/tests/agents/test_supervisor_error_handling.py": {
      "value": "netra_backend/tests/agents/test_supervisor_error_handling.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:46"
      ]
    },
    "netra_backend/tests/agents/test_supervisor_orchestration.py": {
      "value": "netra_backend/tests/agents/test_supervisor_orchestration.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:47"
      ]
    },
    "netra_backend/tests/api": {
      "value": "netra_backend/tests/api",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:31",
        "scripts/rapid_test_consolidation.py:31"
      ]
    },
    "netra_backend/tests/compliance/test_websocket_serialization_blocking.py": {
      "value": "netra_backend/tests/compliance/test_websocket_serialization_blocking.py",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:254"
      ]
    },
    "netra_backend/tests/conftest.py": {
      "value": "netra_backend/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:15"
      ]
    },
    "netra_backend/tests/core": {
      "value": "netra_backend/tests/core",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:30"
      ]
    },
    "netra_backend/tests/core/test_config_manager.py::TestSecretManager::test_initialization": {
      "value": "netra_backend/tests/core/test_config_manager.py::TestSecretManager::test_initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:40"
      ]
    },
    "netra_backend/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error": {
      "value": "netra_backend/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:39"
      ]
    },
    "netra_backend/tests/database": {
      "value": "netra_backend/tests/database",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:30",
        "scripts/rapid_test_consolidation.py:30"
      ]
    },
    "netra_backend/tests/e2e/infrastructure/llm_test_manager.py": {
      "value": "netra_backend/tests/e2e/infrastructure/llm_test_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:88"
      ]
    },
    "netra_backend/tests/e2e/test_system_startup.py::TestSystemStartup": {
      "value": "netra_backend/tests/e2e/test_system_startup.py::TestSystemStartup",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:42"
      ]
    },
    "netra_backend/tests/integration": {
      "value": "netra_backend/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:31"
      ]
    },
    "netra_backend/tests/integration/test_logging_audit_integration_core.py": {
      "value": "netra_backend/tests/integration/test_logging_audit_integration_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:79"
      ]
    },
    "netra_backend/tests/integration/test_logging_audit_integration_helpers.py": {
      "value": "netra_backend/tests/integration/test_logging_audit_integration_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:78"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_auth_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_auth_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:77"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_errors_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_errors_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:72"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_errors_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_errors_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:71"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_performance_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_performance_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:76"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_performance_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_performance_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:75"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_routing_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_routing_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:70"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_routing_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_routing_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:69"
      ]
    },
    "netra_backend/tests/integration/test_supervisor*.py": {
      "value": "netra_backend/tests/integration/test_supervisor*.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:204"
      ]
    },
    "netra_backend/tests/integration/test_supervisor_agent_coordination.py": {
      "value": "netra_backend/tests/integration/test_supervisor_agent_coordination.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:32",
        "scripts/run_supervisor_test_coverage.py:101"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow_core.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:74"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow_helpers.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:73"
      ]
    },
    "netra_backend/tests/routes": {
      "value": "netra_backend/tests/routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:31"
      ]
    },
    "netra_backend/tests/routes/test_*auth*.py": {
      "value": "netra_backend/tests/routes/test_*auth*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:34"
      ]
    },
    "netra_backend/tests/routes/test_health_route.py": {
      "value": "netra_backend/tests/routes/test_health_route.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:38"
      ]
    },
    "netra_backend/tests/routes/test_websocket_*.py": {
      "value": "netra_backend/tests/routes/test_websocket_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:33"
      ]
    },
    "netra_backend/tests/services": {
      "value": "netra_backend/tests/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:30"
      ]
    },
    "netra_backend/tests/services/agents": {
      "value": "netra_backend/tests/services/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:32"
      ]
    },
    "netra_backend/tests/services/apex_optimizer_agent": {
      "value": "netra_backend/tests/services/apex_optimizer_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:32"
      ]
    },
    "netra_backend/tests/services/database": {
      "value": "netra_backend/tests/services/database",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:35"
      ]
    },
    "netra_backend/tests/services/test_security_service.py::test_encrypt_and_decrypt": {
      "value": "netra_backend/tests/services/test_security_service.py::test_encrypt_and_decrypt",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:41"
      ]
    },
    "netra_backend/tests/test_agent_service_critical.py": {
      "value": "netra_backend/tests/test_agent_service_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:36"
      ]
    },
    "netra_backend/tests/test_api_endpoints_critical.py": {
      "value": "netra_backend/tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:36"
      ]
    },
    "netra_backend/tests/test_auth*.py": {
      "value": "netra_backend/tests/test_auth*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:34"
      ]
    },
    "netra_backend/tests/test_database*.py": {
      "value": "netra_backend/tests/test_database*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:35"
      ]
    },
    "netra_backend/tests/test_websocket.py": {
      "value": "netra_backend/tests/test_websocket.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:33"
      ]
    },
    "netra_backend/tests/unit/test_cors_architecture_compliance.py": {
      "value": "netra_backend/tests/unit/test_cors_architecture_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:26",
        "scripts/test_coverage_system.py:26"
      ]
    },
    "netra_backend/tests/unit/test_secret_key_validation.py": {
      "value": "netra_backend/tests/unit/test_secret_key_validation.py",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:94"
      ]
    },
    "netra_backend/tests/websocket": {
      "value": "netra_backend/tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:29",
        "scripts/rapid_test_consolidation.py:29"
      ]
    },
    "netra_backend\\.tests\\.e2e\\.": {
      "value": "netra_backend\\.tests\\.e2e\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:79"
      ]
    },
    "netra_dev": {
      "value": "netra_dev",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:143",
        "scripts/test/test_docker_stability.py:19",
        "scripts/test_async_postgres.py:148",
        "scripts/test_database_url_builder_comprehensive.py:81"
      ]
    },
    "netra_prod_user": {
      "value": "netra_prod_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:265"
      ]
    },
    "netra_production": {
      "value": "netra_production",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:264"
      ]
    },
    "netra_staging": {
      "value": "netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:41",
        "auth_service/test_staging_db_connection.py:57",
        "auth_service/test_staging_db_connection.py:94",
        "auth_service/test_url_construction.py:37",
        "scripts/test/test_clickhouse_staging_fix.py:81",
        "scripts/test/test_clickhouse_staging_fix.py:133"
      ]
    },
    "netra_test": {
      "value": "netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:217",
        "scripts/test_docker_manager.py:98",
        "scripts/test_seed_data.py:38",
        "scripts/test_service_monitor.py:41"
      ]
    },
    "netra_test_analytics": {
      "value": "netra_test_analytics",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:54",
        "scripts/test_service_monitor.py:57"
      ]
    },
    "netrasystems.ai": {
      "value": "netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:317"
      ]
    },
    "netstat -an | findstr LISTENING": {
      "value": "netstat -an | findstr LISTENING",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:210"
      ]
    },
    "netstat -ano | findstr :": {
      "value": "netstat -ano | findstr :",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:148"
      ]
    },
    "network_calls": {
      "value": "network_calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:33",
        "scripts/optimize_test_performance.py:139"
      ]
    },
    "network_partition": {
      "value": "network_partition",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:44"
      ]
    },
    "new failures": {
      "value": "new failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:183"
      ]
    },
    "new failures...": {
      "value": "new failures...",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:352"
      ]
    },
    "new files.": {
      "value": "new files.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1005",
        "scripts/auto_fix_test_violations.py:1008"
      ]
    },
    "new.access.token": {
      "value": "new.access.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:40",
        "auth_service/tests/unit/test_refresh_endpoint.py:52",
        "auth_service/tests/unit/test_refresh_endpoint.py:63",
        "auth_service/tests/unit/test_refresh_endpoint.py:80",
        "auth_service/tests/unit/test_refresh_endpoint.py:274",
        "auth_service/tests/unit/test_refresh_endpoint.py:284",
        "auth_service/tests/unit/test_refresh_endpoint.py:317",
        "auth_service/tests/unit/test_refresh_endpoint.py:327"
      ]
    },
    "new.refresh.token": {
      "value": "new.refresh.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:41",
        "auth_service/tests/unit/test_refresh_endpoint.py:53",
        "auth_service/tests/unit/test_refresh_endpoint.py:64",
        "auth_service/tests/unit/test_refresh_endpoint.py:81",
        "auth_service/tests/unit/test_refresh_endpoint.py:275",
        "auth_service/tests/unit/test_refresh_endpoint.py:285",
        "auth_service/tests/unit/test_refresh_endpoint.py:318",
        "auth_service/tests/unit/test_refresh_endpoint.py:328"
      ]
    },
    "new_access_token": {
      "value": "new_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:51",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:68",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:83",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:182",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:210",
        "auth_service/tests/test_refresh_endpoint_integration.py:47"
      ]
    },
    "new_device": {
      "value": "new_device",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:158"
      ]
    },
    "new_failures": {
      "value": "new_failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:111"
      ]
    },
    "new_files_created": {
      "value": "new_files_created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:620",
        "scripts/auto_fix_test_sizes.py:663",
        "scripts/auto_fix_test_sizes.py:751"
      ]
    },
    "new_refresh_token": {
      "value": "new_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:51",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:68",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:83",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:182",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:210",
        "auth_service/tests/test_refresh_endpoint_integration.py:48"
      ]
    },
    "new_secret_found": {
      "value": "new_secret_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:273",
        "scripts/test_secret_manager_builder_critical.py:350"
      ]
    },
    "next": {
      "value": "next",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/test_frontend_ORIGINAL.py:76",
        "scripts/test_frontend_ORIGINAL.py:104",
        "scripts/test_frontend_ORIGINAL.py:104"
      ]
    },
    "next_agent": {
      "value": "next_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:56"
      ]
    },
    "next_execution_config": {
      "value": "next_execution_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:220",
        "scripts/test_backend_optimized.py:220"
      ]
    },
    "nlp_service.py": {
      "value": "nlp_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:128"
      ]
    },
    "no:warnings": {
      "value": "no:warnings",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:47",
        "scripts/test_backend_ORIGINAL.py:291"
      ]
    },
    "no_deprecation_warnings": {
      "value": "no_deprecation_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:188"
      ]
    },
    "no_legacy_imports": {
      "value": "no_legacy_imports",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:160"
      ]
    },
    "no_specific_test_found": {
      "value": "no_specific_test_found",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:133"
      ]
    },
    "no_test_functions": {
      "value": "no_test_functions",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:27",
        "scripts/e2e_test_fixer.py:56",
        "scripts/e2e_test_fixer.py:274"
      ]
    },
    "noclaim@example.com": {
      "value": "noclaim@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:260"
      ]
    },
    "node": {
      "value": "node",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:68",
        "scripts/cleanup_test_processes.py:74",
        "scripts/test_frontend_ORIGINAL.py:72",
        "scripts/test_frontend_ORIGINAL.py:82",
        "scripts/test_frontend_ORIGINAL.py:84"
      ]
    },
    "node -e \"setTimeout(() => {}, 60000)\"": {
      "value": "node -e \"setTimeout(() => {}, 60000)\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:75"
      ]
    },
    "node.exe": {
      "value": "node.exe",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:43"
      ]
    },
    "node_modules": {
      "value": "node_modules",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/check_test_compliance.py:101",
        "scripts/cleanup_test_processes.py:129",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/fix_all_test_issues.py:16"
      ]
    },
    "non-critical violations found": {
      "value": "non-critical violations found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:608"
      ]
    },
    "none": {
      "value": "none",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:440",
        "scripts/test_redis_config_critical_failure.py:326"
      ]
    },
    "nonexistent-workflow": {
      "value": "nonexistent-workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:131"
      ]
    },
    "nonexistent/repo123456": {
      "value": "nonexistent/repo123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:122"
      ]
    },
    "nonexistent/repo123456789": {
      "value": "nonexistent/repo123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:141"
      ]
    },
    "nonexistent@example.com": {
      "value": "nonexistent@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:71"
      ]
    },
    "nonexistent_auth_package.anything": {
      "value": "nonexistent_auth_package.anything",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:224"
      ]
    },
    "nonexistent_repo": {
      "value": "nonexistent_repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:120",
        "scripts/test_verify_workflow_status_corrected.py:139"
      ]
    },
    "nonexistent_workflow": {
      "value": "nonexistent_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:129"
      ]
    },
    "normal": {
      "value": "normal",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:65"
      ]
    },
    "normal_operation": {
      "value": "normal_operation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:104"
      ]
    },
    "noscript_tag_found": {
      "value": "noscript_tag_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:19",
        "scripts/test_gtm_loading.py:46",
        "scripts/test_gtm_loading.py:122"
      ]
    },
    "not": {
      "value": "not",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:81"
      ]
    },
    "not defined": {
      "value": "not defined",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:652"
      ]
    },
    "not e2e": {
      "value": "not e2e",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:33",
        "scripts/unified_test_config.py:41"
      ]
    },
    "not found": {
      "value": "not found",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:693",
        "scripts/frontend_iterative_test_runner.py:719",
        "scripts/run_agent_pipeline_test.py:25"
      ]
    },
    "not found in LLMTestModel enum": {
      "value": "not found in LLMTestModel enum",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:117"
      ]
    },
    "not found in database": {
      "value": "not found in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:180",
        "auth_service/tests/utils/assertion_helpers.py:196"
      ]
    },
    "not found!": {
      "value": "not found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:28"
      ]
    },
    "not healthy:": {
      "value": "not healthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:87"
      ]
    },
    "not integration": {
      "value": "not integration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:33"
      ]
    },
    "not running": {
      "value": "not running",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:156"
      ]
    },
    "not set": {
      "value": "not set",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:284",
        "scripts/test_docker_config.py:94"
      ]
    },
    "not slow": {
      "value": "not slow",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:41"
      ]
    },
    "not test_sustained_load": {
      "value": "not test_sustained_load",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:156"
      ]
    },
    "not valid json": {
      "value": "not valid json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:111"
      ]
    },
    "not-a-jwt-token": {
      "value": "not-a-jwt-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint.py:192"
      ]
    },
    "not-a-url": {
      "value": "not-a-url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:273"
      ]
    },
    "not-an-email": {
      "value": "not-an-email",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:59"
      ]
    },
    "not.a.jwt.token.format": {
      "value": "not.a.jwt.token.format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:304"
      ]
    },
    "not.a.valid.jwt.token": {
      "value": "not.a.valid.jwt.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:220"
      ]
    },
    "notAfter": {
      "value": "notAfter",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:82"
      ]
    },
    "not_a_number": {
      "value": "not_a_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:275"
      ]
    },
    "not_configured": {
      "value": "not_configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:287"
      ]
    },
    "note": {
      "value": "note",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:172"
      ]
    },
    "notes": {
      "value": "notes",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:91",
        "scripts/frontend_iterative_test_runner.py:152"
      ]
    },
    "notification_service.py": {
      "value": "notification_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:124"
      ]
    },
    "notifier-test": {
      "value": "notifier-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:161"
      ]
    },
    "npm": {
      "value": "npm",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/frontend_iterative_test_runner.py:284",
        "scripts/test_collection_audit.py:154",
        "scripts/test_frontend_ORIGINAL.py:54",
        "scripts/test_frontend_ORIGINAL.py:73",
        "scripts/test_frontend_ORIGINAL.py:89",
        "scripts/test_frontend_ORIGINAL.py:91",
        "scripts/test_frontend_ORIGINAL.py:121",
        "scripts/test_frontend_ORIGINAL.py:223",
        "scripts/test_frontend_ORIGINAL.py:225"
      ]
    },
    "npm test -- --passWithNoTests --ci --silent": {
      "value": "npm test -- --passWithNoTests --ci --silent",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:17"
      ]
    },
    "npm.cmd": {
      "value": "npm.cmd",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58"
      ]
    },
    "npx": {
      "value": "npx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:337"
      ]
    },
    "nt": {
      "value": "nt",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:63",
        "scripts/test_websocket_dev_mode.py:241"
      ]
    },
    "oauth": {
      "value": "oauth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/factories/audit_factory.py:75",
        "scripts/analyze_test_mocks.py:44",
        "scripts/test_staging_login_automated.py:396",
        "scripts/test_staging_login_automated.py:416",
        "scripts/unified_test_config.py:107"
      ]
    },
    "oauth2": {
      "value": "oauth2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:175"
      ]
    },
    "oauth_callback": {
      "value": "oauth_callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:33"
      ]
    },
    "oauth_config": {
      "value": "oauth_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:102"
      ]
    },
    "oauth_error": {
      "value": "oauth_error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:34"
      ]
    },
    "oauth_initiation": {
      "value": "oauth_initiation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:51",
        "scripts/test_oauth_local.py:202",
        "scripts/test_oauth_local.py:215",
        "scripts/test_oauth_local.py:227",
        "scripts/test_oauth_local.py:414",
        "scripts/test_oauth_local.py:414"
      ]
    },
    "oauth_mock": {
      "value": "oauth_mock",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:218",
        "scripts/setup_staging_test_account.py:255"
      ]
    },
    "oauth_provider": {
      "value": "oauth_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:175"
      ]
    },
    "oauth_redirect": {
      "value": "oauth_redirect",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:249",
        "scripts/test_staging_login_automated.py:319",
        "scripts/test_staging_login_automated.py:349"
      ]
    },
    "oauth_state_": {
      "value": "oauth_state_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:233"
      ]
    },
    "oauth_token": {
      "value": "oauth_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:49"
      ]
    },
    "obj": {
      "value": "obj",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:50"
      ]
    },
    "obj_": {
      "value": "obj_",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:47"
      ]
    },
    "object_type": {
      "value": "object_type",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:57"
      ]
    },
    "observability": {
      "value": "observability",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:102",
        "scripts/business_value_test_index.py:421",
        "scripts/business_value_test_index.py:497"
      ]
    },
    "observability|monitoring|logging|tracing|metrics": {
      "value": "observability|monitoring|logging|tracing|metrics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:102"
      ]
    },
    "occurrence_rate": {
      "value": "occurrence_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:117",
        "netra_backend/app/services/realistic_test_data/models.py:122",
        "netra_backend/app/services/realistic_test_data/models.py:128",
        "netra_backend/app/services/realistic_test_data/models.py:133",
        "netra_backend/app/services/realistic_test_data/models.py:138"
      ]
    },
    "occurrences": {
      "value": "occurrences",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:71"
      ]
    },
    "offset": {
      "value": "offset",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:145"
      ]
    },
    "ok": {
      "value": "ok",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:61",
        "scripts/test_service_monitor.py:95",
        "scripts/test_staging_login_automated.py:204",
        "scripts/test_staging_login_automated.py:235",
        "scripts/test_staging_login_automated.py:345"
      ]
    },
    "old.refresh.token": {
      "value": "old.refresh.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:280",
        "auth_service/tests/unit/test_refresh_endpoint.py:287",
        "auth_service/tests/unit/test_refresh_endpoint.py:323",
        "auth_service/tests/unit/test_refresh_endpoint.py:330"
      ]
    },
    "onboard": {
      "value": "onboard",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:356"
      ]
    },
    "open": {
      "value": "open",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64"
      ]
    },
    "open\\(": {
      "value": "open\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "openai": {
      "value": "openai",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "openai\\.": {
      "value": "openai\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35"
      ]
    },
    "openai|anthropic|gemini|gpt|claude": {
      "value": "openai|anthropic|gemini|gpt|claude",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:441"
      ]
    },
    "openid email profile": {
      "value": "openid email profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:197"
      ]
    },
    "operations.py": {
      "value": "operations.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:54"
      ]
    },
    "operations_analysis.py": {
      "value": "operations_analysis.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:52"
      ]
    },
    "operations_crud.py": {
      "value": "operations_crud.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:53"
      ]
    },
    "optimization": {
      "value": "optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:128",
        "scripts/test_adaptive_workflow_direct.py:130",
        "scripts/test_agent_pipeline_simple.py:149",
        "scripts/test_agent_pipeline_simple.py:255",
        "scripts/test_agent_pipeline_simple.py:257",
        "scripts/test_agent_recovery_simple.py:45",
        "scripts/test_backend_optimized.py:55",
        "scripts/test_backend_optimized.py:61",
        "scripts/test_backend_optimized.py:67",
        "scripts/test_backend_optimized.py:73"
      ]
    },
    "optimization_agent": {
      "value": "optimization_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:348"
      ]
    },
    "optimization_agent_retry": {
      "value": "optimization_agent_retry",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:167"
      ]
    },
    "optimization_focus": {
      "value": "optimization_focus",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:69",
        "scripts/test_triage_flow.py:38"
      ]
    },
    "optimization_generator": {
      "value": "optimization_generator",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:208",
        "scripts/test_agent_pipeline_simple.py:221"
      ]
    },
    "optimization_level": {
      "value": "optimization_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:166"
      ]
    },
    "optimization_recommendations": {
      "value": "optimization_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:218",
        "scripts/test_backend_optimized.py:340"
      ]
    },
    "optimization_request": {
      "value": "optimization_request",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:174",
        "scripts/test_agent_pipeline_simple.py:183",
        "scripts/test_agent_pipeline_simple.py:244"
      ]
    },
    "optimization_suggestions": {
      "value": "optimization_suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:46",
        "scripts/optimize_test_performance.py:65",
        "scripts/optimize_test_performance.py:289",
        "scripts/optimize_test_performance.py:291",
        "scripts/optimize_test_performance.py:403"
      ]
    },
    "optimize": {
      "value": "optimize",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "optimize_costs": {
      "value": "optimize_costs",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:51"
      ]
    },
    "optimized_test_cache": {
      "value": "optimized_test_cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:109",
        "scripts/test_backend_optimized.py:403"
      ]
    },
    "optional": {
      "value": "optional",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:178",
        "scripts/test_improved_environment_validation.py:189",
        "scripts/test_improved_environment_validation.py:214"
      ]
    },
    "optional missing": {
      "value": "optional missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:48",
        "scripts/test_environment_validation_clean.py:85",
        "scripts/test_improved_environment_validation.py:49",
        "scripts/test_improved_environment_validation.py:86"
      ]
    },
    "optional_missing": {
      "value": "optional_missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:116",
        "scripts/test_environment_validation_clean.py:154",
        "scripts/test_improved_environment_validation.py:117",
        "scripts/test_improved_environment_validation.py:154"
      ]
    },
    "or": {
      "value": "or",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:81"
      ]
    },
    "or no tests": {
      "value": "or no tests",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:114"
      ]
    },
    "organization memberships": {
      "value": "organization memberships",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:192"
      ]
    },
    "organization_id": {
      "value": "organization_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:197",
        "scripts/test_seed_data.py:205",
        "scripts/test_seed_data.py:213",
        "scripts/test_seed_data.py:228"
      ]
    },
    "organizations": {
      "value": "organizations",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:496"
      ]
    },
    "organizations.py": {
      "value": "organizations.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:74"
      ]
    },
    "origin": {
      "value": "origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:29",
        "scripts/test_and_fix_cors.py:48",
        "scripts/test_and_fix_cors.py:71",
        "scripts/test_and_fix_cors.py:84",
        "scripts/test_cors.py:160",
        "scripts/test_cors.py:170",
        "scripts/test_cors.py:180",
        "scripts/test_cors.py:188",
        "scripts/test_cors.py:247",
        "scripts/test_websocket_cors_comprehensive.py:62"
      ]
    },
    "origin_allowed": {
      "value": "origin_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:199",
        "scripts/test_cors.py:213",
        "scripts/test_cors.py:215",
        "scripts/test_cors.py:378"
      ]
    },
    "original_file": {
      "value": "original_file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:588",
        "scripts/compliance/test_size_validator.py:397"
      ]
    },
    "original_functions": {
      "value": "original_functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:693"
      ]
    },
    "original_lines": {
      "value": "original_lines",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:692"
      ]
    },
    "original_timestamp": {
      "value": "original_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:96"
      ]
    },
    "origins": {
      "value": "origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:266",
        "scripts/test_cors.py:278",
        "scripts/test_cors.py:280",
        "scripts/test_cors.py:461",
        "scripts/test_cors.py:464",
        "scripts/test_cors.py:466",
        "scripts/test_cors_implementation.py:146"
      ]
    },
    "origins_tested": {
      "value": "origins_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:210"
      ]
    },
    "orphaned": {
      "value": "orphaned",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:410"
      ]
    },
    "os": {
      "value": "os",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "os.environ": {
      "value": "os.environ",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:149"
      ]
    },
    "os.environ item assignment": {
      "value": "os.environ item assignment",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:57"
      ]
    },
    "os.environ.get() calls": {
      "value": "os.environ.get() calls",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:64"
      ]
    },
    "os\\.environ": {
      "value": "os\\.environ",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:224"
      ]
    },
    "os\\.environ\\.get\\(([^)]+)\\)": {
      "value": "os\\.environ\\.get\\(([^)]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:62"
      ]
    },
    "os\\.environ\\[([\\'\"][^\\'\\\"]+[\\'\"])\\]": {
      "value": "os\\.environ\\[([\\'\"][^\\'\\\"]+[\\'\"])\\]",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:69"
      ]
    },
    "os\\.environ\\[([\\'\"][^\\'\\\"]+[\\'\"])\\]\\s*=\\s*([^\\n]+)": {
      "value": "os\\.environ\\[([\\'\"][^\\'\\\"]+[\\'\"])\\]\\s*=\\s*([^\\n]+)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:55"
      ]
    },
    "other": {
      "value": "other",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:24",
        "scripts/analyze_test_mocks.py:31",
        "scripts/analyze_test_mocks.py:67",
        "scripts/business_value_test_index.py:407",
        "scripts/business_value_test_index.py:432",
        "scripts/compliance/test_refactor_helper.py:213",
        "scripts/test_collection_audit.py:309",
        "scripts/test_cors.py:309",
        "scripts/test_cors.py:326"
      ]
    },
    "out": {
      "value": "out",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:81"
      ]
    },
    "outliers": {
      "value": "outliers",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:265",
        "scripts/test_data_validator_backup.py:266",
        "scripts/test_data_validator_backup.py:267",
        "scripts/test_data_validator_backup.py:532",
        "scripts/test_data_validator_backup.py:537"
      ]
    },
    "output": {
      "value": "output",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:51",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76",
        "scripts/final_test_status_check.py:90",
        "scripts/final_test_status_check.py:111",
        "scripts/final_test_status_check.py:112",
        "scripts/real_service_test_metrics.py:33"
      ]
    },
    "overall_consistent": {
      "value": "overall_consistent",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:185",
        "scripts/test_clickhouse_startup_fix.py:185"
      ]
    },
    "overall_health": {
      "value": "overall_health",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:106",
        "scripts/test_clickhouse_startup_fix.py:150",
        "scripts/test_clickhouse_startup_fix.py:150",
        "scripts/test_staging_login_automated.py:237",
        "scripts/test_staging_login_automated.py:340",
        "scripts/test_staging_login_automated.py:367",
        "scripts/test_staging_login_automated.py:426"
      ]
    },
    "overall_similarity": {
      "value": "overall_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:372",
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608",
        "scripts/analyze_test_overlap.py:629",
        "scripts/analyze_test_overlap.py:643"
      ]
    },
    "overall_status": {
      "value": "overall_status",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:174",
        "scripts/test_service_monitor.py:208"
      ]
    },
    "overload-test-token-": {
      "value": "overload-test-token-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:271"
      ]
    },
    "oversized files": {
      "value": "oversized files",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:643"
      ]
    },
    "overview": {
      "value": "overview",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:434",
        "scripts/test_dashboard.py:456"
      ]
    },
    "p50": {
      "value": "p50",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:151"
      ]
    },
    "p50_latency_ms": {
      "value": "p50_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:164"
      ]
    },
    "p95": {
      "value": "p95",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:151"
      ]
    },
    "p95_latency_ms": {
      "value": "p95_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:165",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199"
      ]
    },
    "p99 latency": {
      "value": "p99 latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:101"
      ]
    },
    "p99_latency_ms": {
      "value": "p99_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:166"
      ]
    },
    "package": {
      "value": "package",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:719"
      ]
    },
    "package.json": {
      "value": "package.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:97"
      ]
    },
    "page_view": {
      "value": "page_view",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:231",
        "auth_service/tests/test_session_security_cycles_36_40.py:232",
        "scripts/test_gtm_tracking.py:45",
        "scripts/test_seed_data.py:309"
      ]
    },
    "pagination.py": {
      "value": "pagination.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:109"
      ]
    },
    "pandemic_surge": {
      "value": "pandemic_surge",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "parallel": {
      "value": "parallel",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:27",
        "scripts/unified_test_config.py:35",
        "scripts/unified_test_config.py:43",
        "scripts/unified_test_config.py:51",
        "scripts/unified_test_config.py:59",
        "scripts/unified_test_config.py:67",
        "scripts/unified_test_config.py:194",
        "scripts/unified_test_config.py:201",
        "scripts/unified_test_config.py:208",
        "scripts/unified_test_config.py:215"
      ]
    },
    "parallel_factor": {
      "value": "parallel_factor",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:57",
        "scripts/test_backend_optimized.py:63",
        "scripts/test_backend_optimized.py:69",
        "scripts/test_backend_optimized.py:75",
        "scripts/test_backend_optimized.py:81",
        "scripts/test_backend_optimized.py:91",
        "scripts/test_backend_optimized.py:100",
        "scripts/test_backend_optimized.py:168",
        "scripts/test_backend_optimized.py:168"
      ]
    },
    "parameters": {
      "value": "parameters",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:64",
        "scripts/test_triage_flow.py:69"
      ]
    },
    "parametrize": {
      "value": "parametrize",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:194"
      ]
    },
    "parent:": {
      "value": "parent:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:51"
      ]
    },
    "parsed_successfully": {
      "value": "parsed_successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:134",
        "auth_service/tests/test_refresh_endpoint_integration.py:149"
      ]
    },
    "parsers.py": {
      "value": "parsers.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:55"
      ]
    },
    "partial": {
      "value": "partial",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:57",
        "scripts/test_adaptive_workflow_direct.py:129",
        "scripts/test_adaptive_workflow_direct.py:171",
        "scripts/test_adaptive_workflow_local.py:101"
      ]
    },
    "partial_result": {
      "value": "partial_result",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411",
        "scripts/test_websocket_chat_simple.py:92",
        "scripts/test_websocket_chat_standalone.py:92"
      ]
    },
    "partition": {
      "value": "partition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:337"
      ]
    },
    "partition-test-token-": {
      "value": "partition-test-token-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:330"
      ]
    },
    "parts": {
      "value": "parts",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "pass": {
      "value": "pass",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:579",
        "scripts/autonomous_review/test_generator.py:157",
        "scripts/test_agent_orchestration_recovery.py:92",
        "scripts/test_agent_orchestration_recovery.py:150",
        "scripts/test_agent_orchestration_recovery.py:225",
        "scripts/test_agent_orchestration_recovery.py:291",
        "scripts/test_agent_orchestration_recovery.py:294",
        "scripts/test_agent_orchestration_recovery.py:344"
      ]
    },
    "pass_rate": {
      "value": "pass_rate",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:146",
        "scripts/test_execution_tracker.py:384"
      ]
    },
    "passed": {
      "value": "passed",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:142",
        "scripts/fix_test_batch.py:284",
        "scripts/frontend_iterative_test_runner.py:218",
        "scripts/frontend_iterative_test_runner.py:221",
        "scripts/frontend_iterative_test_runner.py:225",
        "scripts/frontend_iterative_test_runner.py:239",
        "scripts/frontend_iterative_test_runner.py:240",
        "scripts/frontend_iterative_test_runner.py:774",
        "scripts/frontend_iterative_test_runner.py:792",
        "scripts/frontend_iterative_test_runner.py:797"
      ]
    },
    "passed)": {
      "value": "passed)",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:373"
      ]
    },
    "passed,": {
      "value": "passed,",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:156",
        "scripts/test_dashboard.py:220",
        "scripts/test_log_introspection.py:102",
        "scripts/test_log_introspection.py:422",
        "scripts/test_staging_startup.py:273"
      ]
    },
    "passed_tests": {
      "value": "passed_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:144",
        "scripts/test_cors_implementation.py:208"
      ]
    },
    "passes": {
      "value": "passes",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:507"
      ]
    },
    "password": {
      "value": "password",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:59",
        "auth_service/test_staging_db_connection.py:96",
        "auth_service/tests/factories/audit_factory.py:75",
        "auth_service/tests/test_auth_comprehensive.py:323",
        "auth_service/tests/test_auth_comprehensive.py:345",
        "auth_service/tests/test_auth_comprehensive.py:379",
        "auth_service/tests/test_auth_comprehensive.py:394",
        "auth_service/tests/test_auth_comprehensive.py:402",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:237",
        "scripts/compliance/test_limits_examples.py:11"
      ]
    },
    "password123": {
      "value": "password123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:345"
      ]
    },
    "password_change": {
      "value": "password_change",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:22"
      ]
    },
    "password_changed": {
      "value": "password_changed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:306",
        "auth_service/tests/test_session_security_cycles_36_40.py:333"
      ]
    },
    "password_hash": {
      "value": "password_hash",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:118",
        "scripts/test_seed_data.py:125",
        "scripts/test_seed_data.py:132",
        "scripts/test_seed_data.py:149"
      ]
    },
    "password_reset": {
      "value": "password_reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:23"
      ]
    },
    "patch": {
      "value": "patch",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:104",
        "scripts/compliance/test_refactor_helper.py:200"
      ]
    },
    "patch(": {
      "value": "patch(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    "patch.dict(os.environ) calls": {
      "value": "patch.dict(os.environ) calls",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:50"
      ]
    },
    "patch\\(": {
      "value": "patch\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "patch\\.dict\\(os\\.environ,\\s*([^,)]+)(?:,\\s*clear=(?:True|False))?\\)": {
      "value": "patch\\.dict\\(os\\.environ,\\s*([^,)]+)(?:,\\s*clear=(?:True|False))?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:48"
      ]
    },
    "patch_dict_simple": {
      "value": "patch_dict_simple",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:47",
        "scripts/migrate_test_environment_access.py:121",
        "scripts/migrate_test_environment_access.py:155",
        "scripts/migrate_test_environment_access.py:215"
      ]
    },
    "path": {
      "value": "path",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:83",
        "scripts/compliance/test_size_validator.py:84",
        "scripts/compliance/test_size_validator.py:100",
        "scripts/compliance/test_size_validator.py:110",
        "scripts/compliance/test_size_validator.py:428",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/setup_staging_test_account.py:157",
        "scripts/setup_staging_test_account.py:165",
        "scripts/test_docker_websocket_fix.py:157",
        "scripts/test_docker_websocket_fix.py:165"
      ]
    },
    "path.exists": {
      "value": "path.exists",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64"
      ]
    },
    "path_comparison_blocking": {
      "value": "path_comparison_blocking",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:323",
        "scripts/test_blocking_analysis.py:332",
        "scripts/test_blocking_analysis.py:350"
      ]
    },
    "path_pattern": {
      "value": "path_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:245",
        "scripts/unified_test_config.py:250",
        "scripts/unified_test_config.py:255",
        "scripts/unified_test_config.py:260",
        "scripts/unified_test_config.py:265"
      ]
    },
    "paths": {
      "value": "paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_backend_optimized.py:60",
        "scripts/test_backend_optimized.py:66",
        "scripts/test_backend_optimized.py:72",
        "scripts/test_backend_optimized.py:78",
        "scripts/test_backend_optimized.py:84",
        "scripts/test_backend_optimized.py:94",
        "scripts/test_backend_optimized.py:300",
        "scripts/test_execution_tracker.py:87",
        "scripts/test_execution_tracker.py:92"
      ]
    },
    "pattern": {
      "value": "pattern",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:89",
        "netra_backend/app/services/realistic_test_data/models.py:94",
        "netra_backend/app/services/realistic_test_data/models.py:99",
        "netra_backend/app/services/realistic_test_data/models.py:104",
        "netra_backend/app/services/realistic_test_data/models.py:149",
        "scripts/batch_fix_and_test.py:23",
        "scripts/batch_fix_and_test.py:29",
        "scripts/batch_fix_and_test.py:35",
        "scripts/batch_fix_and_test.py:51",
        "scripts/batch_fix_and_test.py:52"
      ]
    },
    "patterns": {
      "value": "patterns",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:57",
        "scripts/optimize_test_performance.py:75",
        "scripts/optimize_test_performance.py:103"
      ]
    },
    "payload": {
      "value": "payload",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:92",
        "scripts/test_agent_pipeline_simple.py:74",
        "scripts/test_cold_start_e2e.py:285",
        "scripts/test_cold_start_e2e.py:392",
        "scripts/test_cold_start_e2e.py:415",
        "scripts/test_supervisor_execution_flow.py:39",
        "scripts/test_supervisor_execution_flow.py:40",
        "scripts/websocket_performance_standalone_test.py:88",
        "scripts/websocket_performance_standalone_test.py:186",
        "scripts/websocket_performance_standalone_test.py:200"
      ]
    },
    "payload-test": {
      "value": "payload-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:92"
      ]
    },
    "payload-test-user": {
      "value": "payload-test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:232"
      ]
    },
    "payload@example.com": {
      "value": "payload@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:233"
      ]
    },
    "payloadtest@staging.netrasystems.ai": {
      "value": "payloadtest@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:93"
      ]
    },
    "payment_service.py": {
      "value": "payment_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:130"
      ]
    },
    "pc_cov": {
      "value": "pc_cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:65"
      ]
    },
    "peak_hours": {
      "value": "peak_hours",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:113"
      ]
    },
    "peak_multiplier": {
      "value": "peak_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:114"
      ]
    },
    "peak_rps": {
      "value": "peak_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "peer dep": {
      "value": "peer dep",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:715"
      ]
    },
    "peerDependencies": {
      "value": "peerDependencies",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:715"
      ]
    },
    "pending": {
      "value": "pending",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:263",
        "scripts/frontend_iterative_test_runner.py:745"
      ]
    },
    "pending_fixes": {
      "value": "pending_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:223"
      ]
    },
    "percent": {
      "value": "percent",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:48"
      ]
    },
    "percent_covered": {
      "value": "percent_covered",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:123",
        "scripts/run_supervisor_test_coverage.py:222",
        "scripts/test_backend_ORIGINAL.py:415",
        "scripts/test_coverage_system.py:95"
      ]
    },
    "percentage": {
      "value": "percentage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "perf": {
      "value": "perf",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:491"
      ]
    },
    "perf-": {
      "value": "perf-",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:199"
      ]
    },
    "perf-test": {
      "value": "perf-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:401"
      ]
    },
    "perf@example.com": {
      "value": "perf@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:401"
      ]
    },
    "perf_user_": {
      "value": "perf_user_",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:64"
      ]
    },
    "performance": {
      "value": "performance",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:25",
        "scripts/auto_fix_test_sizes.py:348",
        "scripts/auto_fix_test_sizes.py:349",
        "scripts/auto_fix_test_violations.py:491",
        "scripts/auto_fix_test_violations.py:492",
        "scripts/autonomous_review/test_reviewer.py:216",
        "scripts/autonomous_review/test_reviewer.py:229",
        "scripts/autonomous_review/test_reviewer.py:230",
        "scripts/business_value_test_index.py:88",
        "scripts/business_value_test_index.py:423"
      ]
    },
    "performance_analysis": {
      "value": "performance_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:217"
      ]
    },
    "performance_cost": {
      "value": "performance_cost",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:226"
      ]
    },
    "performance_data": {
      "value": "performance_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "performance_degradation": {
      "value": "performance_degradation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:162",
        "netra_backend/app/services/realistic_test_data/models.py:99"
      ]
    },
    "performance_grade": {
      "value": "performance_grade",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:214",
        "scripts/test_backend_optimized.py:214",
        "scripts/test_backend_optimized.py:272",
        "scripts/test_backend_optimized.py:331"
      ]
    },
    "performance_metrics": {
      "value": "performance_metrics",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:16",
        "scripts/test_staging_websocket_comprehensive.py:65",
        "scripts/test_staging_websocket_comprehensive.py:122",
        "scripts/test_staging_websocket_comprehensive.py:154",
        "scripts/test_staging_websocket_comprehensive.py:211",
        "scripts/test_staging_websocket_comprehensive.py:306",
        "scripts/test_staging_websocket_comprehensive.py:308"
      ]
    },
    "performance_profiler": {
      "value": "performance_profiler",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:67"
      ]
    },
    "performance_requirements": {
      "value": "performance_requirements",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:100"
      ]
    },
    "performance_scores": {
      "value": "performance_scores",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:263",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:275"
      ]
    },
    "performance_test": {
      "value": "performance_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:197",
        "scripts/websocket_performance_standalone_test.py:88"
      ]
    },
    "period": {
      "value": "period",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:64"
      ]
    },
    "permission": {
      "value": "permission",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:212",
        "scripts/analyze_test_mocks.py:44"
      ]
    },
    "permission_": {
      "value": "permission_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:356"
      ]
    },
    "permission_granted": {
      "value": "permission_granted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:31"
      ]
    },
    "permission_id": {
      "value": "permission_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:57",
        "auth_service/tests/factories/permission_factory.py:198",
        "auth_service/tests/factories/permission_factory.py:216"
      ]
    },
    "permission_revoked": {
      "value": "permission_revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:32"
      ]
    },
    "permissions": {
      "value": "permissions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:39",
        "auth_service/tests/factories/token_factory.py:265",
        "auth_service/tests/test_auth_comprehensive_audit.py:366",
        "auth_service/tests/test_auth_real_services_comprehensive.py:238",
        "auth_service/tests/test_refresh_critical_fix.py:104",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:139",
        "auth_service/tests/test_refresh_token_fix.py:80",
        "auth_service/tests/test_refresh_token_fix.py:144",
        "auth_service/tests/test_refresh_token_fix.py:166",
        "auth_service/tests/test_refresh_token_fix.py:170"
      ]
    },
    "permissions.py": {
      "value": "permissions.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:109"
      ]
    },
    "picture": {
      "value": "picture",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87",
        "scripts/setup_staging_test_account.py:62",
        "scripts/test_staging_login_automated.py:58"
      ]
    },
    "pid": {
      "value": "pid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:219",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:241",
        "auth_service/tests/auth-service-down-critical-scenarios.py:509",
        "auth_service/tests/auth-service-down-critical-scenarios.py:513",
        "auth_service/tests/auth-service-down-critical-scenarios.py:523",
        "auth_service/tests/auth-service-down-critical-scenarios.py:544",
        "auth_service/tests/auth-service-down-critical-scenarios.py:548",
        "scripts/cleanup_test_processes.py:61"
      ]
    },
    "ping": {
      "value": "ping",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:85",
        "scripts/test_websocket_connection.py:73",
        "scripts/test_websocket_connection.py:92",
        "scripts/test_websocket_cors_comprehensive.py:100",
        "scripts/test_websocket_dev_mode.py:194",
        "scripts/test_websocket_manual.py:29",
        "scripts/test_websocket_manual.py:81",
        "scripts/test_websocket_middleware.py:70",
        "scripts/test_websocket_simple.py:41"
      ]
    },
    "ping_interval": {
      "value": "ping_interval",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:83"
      ]
    },
    "ping_with_timeout": {
      "value": "ping_with_timeout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:307"
      ]
    },
    "pip freeze | findstr {module}": {
      "value": "pip freeze | findstr {module}",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:223"
      ]
    },
    "pip install": {
      "value": "pip install",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:222"
      ]
    },
    "pip install psycopg2-binary": {
      "value": "pip install psycopg2-binary",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:171"
      ]
    },
    "pip install redis": {
      "value": "pip install redis",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:196"
      ]
    },
    "pipeline-": {
      "value": "pipeline-",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:292"
      ]
    },
    "pipeline-test-001": {
      "value": "pipeline-test-001",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:357"
      ]
    },
    "pipeline-test-thread": {
      "value": "pipeline-test-thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:334"
      ]
    },
    "pipeline-test-user": {
      "value": "pipeline-test-user",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:333"
      ]
    },
    "pipeline_completed": {
      "value": "pipeline_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:316",
        "scripts/test_agent_pipeline_simple.py:377",
        "scripts/test_agent_pipeline_simple.py:408"
      ]
    },
    "pk_test_public_key": {
      "value": "pk_test_public_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:152"
      ]
    },
    "placeholder": {
      "value": "placeholder",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:425",
        "scripts/test_staging_clickhouse.py:96"
      ]
    },
    "plan": {
      "value": "plan",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:157",
        "scripts/test_seed_data.py:158",
        "scripts/test_seed_data.py:159",
        "scripts/test_seed_data.py:171",
        "scripts/test_seed_data.py:276"
      ]
    },
    "pong": {
      "value": "pong",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:94",
        "scripts/test_websocket_dev_mode.py:205",
        "scripts/test_websocket_manual.py:44",
        "scripts/test_websocket_manual.py:94"
      ]
    },
    "pool": {
      "value": "pool",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:388"
      ]
    },
    "pop_outerr_to_orig": {
      "value": "pop_outerr_to_orig",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:70",
        "scripts/pytest_plugins.py:124"
      ]
    },
    "port": {
      "value": "port",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:56",
        "auth_service/test_staging_db_connection.py:93",
        "scripts/manage_test_services.py:115",
        "scripts/test/verify_test_ports.py:26",
        "scripts/test/verify_test_ports.py:27",
        "scripts/test/verify_test_ports.py:28",
        "scripts/test/verify_test_ports.py:36",
        "scripts/test/verify_test_ports.py:37",
        "scripts/test/verify_test_ports.py:38",
        "scripts/test/verify_test_ports.py:44"
      ]
    },
    "port_allocation": {
      "value": "port_allocation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:44"
      ]
    },
    "port_allocation           → test_08_port_binding_race_conditions": {
      "value": "port_allocation           → test_08_port_binding_race_conditions",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:394"
      ]
    },
    "ports": {
      "value": "ports",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:87",
        "scripts/setup_e2e_test_ports.py:88",
        "scripts/setup_e2e_test_ports.py:89",
        "scripts/setup_e2e_test_ports.py:90",
        "scripts/setup_e2e_test_ports.py:91",
        "scripts/setup_e2e_test_ports.py:92",
        "scripts/test_parallel_docker_manager.py:60"
      ]
    },
    "post-deploy-error": {
      "value": "post-deploy-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:133"
      ]
    },
    "post-deploy-warning": {
      "value": "post-deploy-warning",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:123"
      ]
    },
    "postgres": {
      "value": "postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:36",
        "auth_service/test_actual_staging_credentials.py:37",
        "auth_service/test_staging_db_connection.py:42",
        "auth_service/test_staging_db_connection.py:58",
        "auth_service/test_staging_db_connection.py:95",
        "auth_service/test_url_construction.py:38",
        "auth_service/test_url_construction.py:176",
        "scripts/analyze_test_mocks.py:36",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:439"
      ]
    },
    "postgres-db-staging": {
      "value": "postgres-db-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:228",
        "scripts/test_ssl_certificates_staging.py:210",
        "scripts/test_staging_db_direct.py:40",
        "scripts/test_staging_migrations.py:41",
        "scripts/test_staging_migrations.py:229"
      ]
    },
    "postgres-host-staging": {
      "value": "postgres-host-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:226",
        "scripts/test_ssl_certificates_staging.py:36",
        "scripts/test_ssl_certificates_staging.py:208",
        "scripts/test_staging_db_direct.py:38",
        "scripts/test_staging_migrations.py:39",
        "scripts/test_staging_migrations.py:227"
      ]
    },
    "postgres-password-staging": {
      "value": "postgres-password-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:230",
        "scripts/test_ssl_certificates_staging.py:212",
        "scripts/test_staging_db_direct.py:42",
        "scripts/test_staging_migrations.py:43",
        "scripts/test_staging_migrations.py:231"
      ]
    },
    "postgres-port-staging": {
      "value": "postgres-port-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:227",
        "scripts/test_ssl_certificates_staging.py:37",
        "scripts/test_ssl_certificates_staging.py:209",
        "scripts/test_staging_db_direct.py:39",
        "scripts/test_staging_migrations.py:40",
        "scripts/test_staging_migrations.py:228"
      ]
    },
    "postgres-test": {
      "value": "postgres-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:95"
      ]
    },
    "postgres-user-staging": {
      "value": "postgres-user-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:229",
        "scripts/test_ssl_certificates_staging.py:211",
        "scripts/test_staging_db_direct.py:41",
        "scripts/test_staging_migrations.py:42",
        "scripts/test_staging_migrations.py:230"
      ]
    },
    "postgres:": {
      "value": "postgres:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:74"
      ]
    },
    "postgresql": {
      "value": "postgresql",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:366",
        "scripts/test_backend_ORIGINAL.py:119",
        "scripts/test_backend_ORIGINAL.py:149"
      ]
    },
    "postgresql+asyncpg://": {
      "value": "postgresql+asyncpg://",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:71",
        "auth_service/test_staging_db_connection.py:200",
        "auth_service/test_staging_db_connection.py:202",
        "auth_service/test_url_construction.py:105",
        "auth_service/test_url_construction.py:142",
        "auth_service/tests/integration/test_database_connection.py:47",
        "auth_service/tests/integration/test_database_connection.py:80",
        "auth_service/tests/integration/test_database_connection.py:129",
        "auth_service/tests/integration/test_database_connection.py:143",
        "auth_service/tests/integration/test_database_connection.py:155"
      ]
    },
    "postgresql+asyncpg://postgres:": {
      "value": "postgresql+asyncpg://postgres:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:149"
      ]
    },
    "postgresql+asyncpg://postgres:DTprdt5KoQXlEG4Gh9lF@localhost:5433/netra_dev": {
      "value": "postgresql+asyncpg://postgres:DTprdt5KoQXlEG4Gh9lF@localhost:5433/netra_dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:19"
      ]
    },
    "postgresql+asyncpg://postgres:password@localhost:5432/netra_staging": {
      "value": "postgresql+asyncpg://postgres:password@localhost:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:42",
        "scripts/test_improved_environment_validation.py:43"
      ]
    },
    "postgresql+asyncpg://postgres:staging_password@staging-db:5432/netra_staging": {
      "value": "postgresql+asyncpg://postgres:staging_password@staging-db:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:38"
      ]
    },
    "postgresql+asyncpg://test_user:test_pass@localhost:5434/auth_test_db": {
      "value": "postgresql+asyncpg://test_user:test_pass@localhost:5434/auth_test_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:64"
      ]
    },
    "postgresql+asyncpg://user:pass@host/db": {
      "value": "postgresql+asyncpg://user:pass@host/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:263"
      ]
    },
    "postgresql+asyncpg://user:pass@host:5432/db": {
      "value": "postgresql+asyncpg://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:210"
      ]
    },
    "postgresql+asyncpg://user:pass@localhost:5432/db": {
      "value": "postgresql+asyncpg://user:pass@localhost:5432/db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:193"
      ]
    },
    "postgresql://": {
      "value": "postgresql://",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:202",
        "auth_service/test_url_construction.py:106",
        "auth_service/tests/integration/test_database_connection.py:215",
        "scripts/test_auth_database_sessions.py:93",
        "scripts/test_auth_database_sessions.py:251",
        "scripts/test_seed_data.py:39",
        "scripts/test_service_monitor.py:42"
      ]
    },
    "postgresql://custom_user:custom_pass@custom_host:5433/custom_db": {
      "value": "postgresql://custom_user:custom_pass@custom_host:5433/custom_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:190"
      ]
    },
    "postgresql://invalid:invalid@localhost:9999/invalid": {
      "value": "postgresql://invalid:invalid@localhost:9999/invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:489"
      ]
    },
    "postgresql://netra:netra123@localhost:": {
      "value": "postgresql://netra:netra123@localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:148"
      ]
    },
    "postgresql://netra:netra123@localhost:5433/netra": {
      "value": "postgresql://netra:netra123@localhost:5433/netra",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:156"
      ]
    },
    "postgresql://netra_dev:netra_dev@dev-postgres:5432/netra_dev": {
      "value": "postgresql://netra_dev:netra_dev@dev-postgres:5432/netra_dev",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:43",
        "auth_service/tests/integration/test_database_connection.py:141"
      ]
    },
    "postgresql://netra_test:test_password@localhost:5433/netra_test": {
      "value": "postgresql://netra_test:test_password@localhost:5433/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:157"
      ]
    },
    "postgresql://postgres:password@localhost:5432/testdb": {
      "value": "postgresql://postgres:password@localhost:5432/testdb",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:120"
      ]
    },
    "postgresql://priority:pass@priority-host:5432/priority-db": {
      "value": "postgresql://priority:pass@priority-host:5432/priority-db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:161"
      ]
    },
    "postgresql://test:test@localhost:5432/netra_test": {
      "value": "postgresql://test:test@localhost:5432/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:83"
      ]
    },
    "postgresql://test_user:test_pass@localhost:": {
      "value": "postgresql://test_user:test_pass@localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:176"
      ]
    },
    "postgresql://test_user:test_pass@localhost:5434/netra_test": {
      "value": "postgresql://test_user:test_pass@localhost:5434/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:184"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/project:region:instance": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:81"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:147",
        "scripts/test_ssl_certificates_staging.py:172"
      ]
    },
    "postgresql://user:pass@/netra_staging?host=/cloudsql/project:region:instance": {
      "value": "postgresql://user:pass@/netra_staging?host=/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:129"
      ]
    },
    "postgresql://user:pass@host/db": {
      "value": "postgresql://user:pass@host/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:262"
      ]
    },
    "postgresql://user:pass@host:5432/db": {
      "value": "postgresql://user:pass@host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:123",
        "auth_service/tests/integration/test_database_connection.py:200"
      ]
    },
    "postgresql://user:pass@localhost:5432/db": {
      "value": "postgresql://user:pass@localhost:5432/db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:79",
        "scripts/test_auth_database_sessions.py:173",
        "scripts/test_auth_database_sessions.py:333"
      ]
    },
    "postgresql://user:pass@localhost:5432/db?ssl=require": {
      "value": "postgresql://user:pass@localhost:5432/db?ssl=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:155",
        "scripts/test_ssl_certificates_staging.py:171"
      ]
    },
    "postgresql://user:pass@localhost:5432/db?sslmode=require": {
      "value": "postgresql://user:pass@localhost:5432/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:80",
        "scripts/test_database_url_builder_comprehensive.py:151",
        "scripts/test_ssl_certificates_staging.py:170"
      ]
    },
    "postgresql://user:pass@localhost:5432/test_db": {
      "value": "postgresql://user:pass@localhost:5432/test_db",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:198"
      ]
    },
    "postgresql://user:pass@nonexistent-host:5432/db": {
      "value": "postgresql://user:pass@nonexistent-host:5432/db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:89"
      ]
    },
    "postgresql://user:pass@staging-db:5432/netra_staging": {
      "value": "postgresql://user:pass@staging-db:5432/netra_staging",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:37"
      ]
    },
    "postgresql://user:pass@staging-db:5432/netra_staging?sslmode=require": {
      "value": "postgresql://user:pass@staging-db:5432/netra_staging?sslmode=require",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:77"
      ]
    },
    "postgres|PostgreSQL|psycopg": {
      "value": "postgres|PostgreSQL|psycopg",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:439"
      ]
    },
    "potentially failing test files": {
      "value": "potentially failing test files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:268"
      ]
    },
    "pr_number": {
      "value": "pr_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:190"
      ]
    },
    "pre-deploy-1": {
      "value": "pre-deploy-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:113"
      ]
    },
    "pre_existing": {
      "value": "pre_existing",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:78",
        "scripts/test_error_monitor_logic.py:220",
        "scripts/test_error_monitor_logic.py:223"
      ]
    },
    "predictable patterns": {
      "value": "predictable patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:106"
      ]
    },
    "preflight": {
      "value": "preflight",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:514"
      ]
    },
    "prepare": {
      "value": "prepare",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640"
      ]
    },
    "preserve-test": {
      "value": "preserve-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:121"
      ]
    },
    "preserve@staging.netrasystems.ai": {
      "value": "preserve@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:122"
      ]
    },
    "previous": {
      "value": "previous",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:79",
        "scripts/team_updates_test_analyzer.py:85"
      ]
    },
    "primary_intent": {
      "value": "primary_intent",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:51"
      ]
    },
    "primary_issues": {
      "value": "primary_issues",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:291",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:438",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:445"
      ]
    },
    "priority": {
      "value": "priority",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24",
        "scripts/analyze_test_mocks.py:109"
      ]
    },
    "priority failures to process": {
      "value": "priority failures to process",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:365"
      ]
    },
    "priority-db": {
      "value": "priority-db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:165"
      ]
    },
    "priority-host": {
      "value": "priority-host",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:165"
      ]
    },
    "priority_failure_count": {
      "value": "priority_failure_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:198",
        "scripts/test_failure_scanner.py:227"
      ]
    },
    "priority_failures": {
      "value": "priority_failures",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:356",
        "scripts/fix_test_batch.py:359",
        "scripts/test_failure_scanner.py:31",
        "scripts/test_failure_scanner.py:168",
        "scripts/test_failure_scanner.py:198",
        "scripts/test_failure_scanner.py:233",
        "scripts/test_failure_scanner.py:238"
      ]
    },
    "privilege_escalation": {
      "value": "privilege_escalation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:268"
      ]
    },
    "pro": {
      "value": "pro",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:158"
      ]
    },
    "process": {
      "value": "process",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:90"
      ]
    },
    "process(es).": {
      "value": "process(es).",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:126"
      ]
    },
    "process_id": {
      "value": "process_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:244"
      ]
    },
    "processed": {
      "value": "processed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:229",
        "scripts/fix_test_batch.py:246",
        "scripts/fix_test_batch.py:254",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:381",
        "scripts/test_agent_pipeline_simple.py:236",
        "scripts/test_websocket_direct.py:258"
      ]
    },
    "processes using port": {
      "value": "processes using port",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:160"
      ]
    },
    "processing_completed": {
      "value": "processing_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:265"
      ]
    },
    "processing_stage": {
      "value": "processing_stage",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:26"
      ]
    },
    "processing_time": {
      "value": "processing_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:169",
        "scripts/test_intensive_serialization.py:88"
      ]
    },
    "processing_time_ms": {
      "value": "processing_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:368",
        "scripts/test_websocket_standalone.py:152",
        "scripts/test_websocket_standalone.py:159"
      ]
    },
    "prod": {
      "value": "prod",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:150"
      ]
    },
    "prod-clickhouse-password-secure": {
      "value": "prod-clickhouse-password-secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:160"
      ]
    },
    "prod-fernet-key-32-chars-minimum-required": {
      "value": "prod-fernet-key-32-chars-minimum-required",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:161"
      ]
    },
    "prod-jwt-secret-from-secret-manager": {
      "value": "prod-jwt-secret-from-secret-manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:157"
      ]
    },
    "prod-jwt-secret-from-secret-manager-very-long-secure-key": {
      "value": "prod-jwt-secret-from-secret-manager-very-long-secure-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:564"
      ]
    },
    "prod-postgres-password-from-gcp-secrets": {
      "value": "prod-postgres-password-from-gcp-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:158"
      ]
    },
    "prod-postgres-password-from-gcp-secrets-very-secure": {
      "value": "prod-postgres-password-from-gcp-secrets-very-secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:565"
      ]
    },
    "prod-redis-password-from-gcp-secrets": {
      "value": "prod-redis-password-from-gcp-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:159"
      ]
    },
    "prod-redis-password-from-gcp-secrets-secure-key": {
      "value": "prod-redis-password-from-gcp-secrets-secure-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:566"
      ]
    },
    "prod_db": {
      "value": "prod_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:214"
      ]
    },
    "prod_pass": {
      "value": "prod_pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:216"
      ]
    },
    "prod_user": {
      "value": "prod_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:215"
      ]
    },
    "production": {
      "value": "production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:348",
        "auth_service/tests/test_auth_port_configuration.py:369",
        "auth_service/tests/test_auth_port_configuration.py:378",
        "auth_service/tests/test_auth_real_services_comprehensive.py:427",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:217",
        "scripts/test_ansi_logging.py:18",
        "scripts/test_cors.py:305",
        "scripts/test_cors.py:318",
        "scripts/test_cors.py:339",
        "scripts/test_cors.py:345"
      ]
    },
    "production-clickhouse-maximum-security-password-for-analytics-database": {
      "value": "production-clickhouse-maximum-security-password-for-analytics-database",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:704"
      ]
    },
    "production-fernet-key-exactly-32-chars-required-for-strong-encryption": {
      "value": "production-fernet-key-exactly-32-chars-required-for-strong-encryption",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:703"
      ]
    },
    "production-jwt-secret-very-long-secure-key-minimum-32-characters-required": {
      "value": "production-jwt-secret-very-long-secure-key-minimum-32-characters-required",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:700"
      ]
    },
    "production-postgres-highly-secure-password-with-special-chars-numbers-123!": {
      "value": "production-postgres-highly-secure-password-with-special-chars-numbers-123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:701"
      ]
    },
    "production-redis-extremely-secure-password-for-production-deployment": {
      "value": "production-redis-extremely-secure-password-for-production-deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:702"
      ]
    },
    "productivity_gain": {
      "value": "productivity_gain",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:212",
        "scripts/test_backend_optimized.py:212",
        "scripts/test_backend_optimized.py:232",
        "scripts/test_backend_optimized.py:232",
        "scripts/test_backend_optimized.py:270",
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "progression_rate": {
      "value": "progression_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:32",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:39",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:46",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:161"
      ]
    },
    "project_id_method": {
      "value": "project_id_method",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:274",
        "scripts/test_secret_manager_builder_critical.py:351"
      ]
    },
    "projects/": {
      "value": "projects/",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:19",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_clickhouse.py:52",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:20"
      ]
    },
    "prompt": {
      "value": "prompt",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:198",
        "scripts/test_triage_flow.py:215"
      ]
    },
    "prompt_tokens": {
      "value": "prompt_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:76",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:109",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:117"
      ]
    },
    "prop": {
      "value": "prop",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:676"
      ]
    },
    "prop_": {
      "value": "prop_",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:48",
        "scripts/test_intensive_serialization.py:53"
      ]
    },
    "properties": {
      "value": "properties",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:48",
        "scripts/test_intensive_serialization.py:52",
        "scripts/test_seed_data.py:311",
        "scripts/test_seed_data.py:318"
      ]
    },
    "property": {
      "value": "property",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:680"
      ]
    },
    "proposed_files": {
      "value": "proposed_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:399"
      ]
    },
    "protocol.py": {
      "value": "protocol.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:90"
      ]
    },
    "provider": {
      "value": "provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/conftest.py:235",
        "auth_service/tests/factories/user_factory.py:85",
        "auth_service/tests/test_critical_bugs.py:137",
        "scripts/setup_staging_test_account.py:45",
        "scripts/setup_staging_test_account.py:87",
        "scripts/test_oauth_local.py:152",
        "scripts/test_oauth_local.py:247"
      ]
    },
    "provider_data": {
      "value": "provider_data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:84"
      ]
    },
    "provider_user_id": {
      "value": "provider_user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:82"
      ]
    },
    "providers": {
      "value": "providers",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:250",
        "scripts/test_staging_login_automated.py:268",
        "scripts/test_staging_login_automated.py:274",
        "scripts/test_staging_login_automated.py:280",
        "scripts/test_staging_login_automated.py:286",
        "scripts/test_staging_login_automated.py:293",
        "scripts/test_staging_login_automated.py:351"
      ]
    },
    "provides more rigorous testing with actual WebSocket manager components.": {
      "value": "provides more rigorous testing with actual WebSocket manager components.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:255"
      ]
    },
    "provisioning_service.py": {
      "value": "provisioning_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:132"
      ]
    },
    "ps": {
      "value": "ps",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:33",
        "scripts/test_hot_reload.py:22",
        "scripts/test_log_introspection.py:263"
      ]
    },
    "psql": {
      "value": "psql",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:98"
      ]
    },
    "psycopg": {
      "value": "psycopg",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_ssl_certificates_staging.py:175"
      ]
    },
    "psycopg2": {
      "value": "psycopg2",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_database_url_builder_comprehensive.py:169",
        "scripts/test_ssl_certificates_staging.py:175",
        "scripts/test_ssl_certificates_staging.py:245",
        "scripts/test_staging_migrations.py:72",
        "scripts/test_staging_migrations.py:76",
        "scripts/test_staging_migrations.py:202",
        "scripts/test_staging_migrations.py:208",
        "scripts/test_staging_migrations.py:239"
      ]
    },
    "psycopg2 URL valid:": {
      "value": "psycopg2 URL valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:77"
      ]
    },
    "psycopg2 not installed, cannot test database connectivity": {
      "value": "psycopg2 not installed, cannot test database connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:170"
      ]
    },
    "psycopg2.OperationalError: connection refused": {
      "value": "psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:194"
      ]
    },
    "psycopg2.OperationalError: could not connect": {
      "value": "psycopg2.OperationalError: could not connect",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:185"
      ]
    },
    "push": {
      "value": "push",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:152"
      ]
    },
    "pyproject.toml": {
      "value": "pyproject.toml",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    "pytest": {
      "value": "pytest",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:52",
        "scripts/analyze_test_overlap.py:218",
        "scripts/analyze_test_overlap.py:219",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/business_value_test_index.py:232",
        "scripts/business_value_test_index.py:244",
        "scripts/cleanup_test_processes.py:80",
        "scripts/compliance/test_refactor_helper.py:315",
        "scripts/compliance/test_size_validator.py:267"
      ]
    },
    "pytest-asyncio": {
      "value": "pytest-asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:118",
        "scripts/test_backend_ORIGINAL.py:155"
      ]
    },
    "pytest-auth": {
      "value": "pytest-auth",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:67"
      ]
    },
    "pytest-backend": {
      "value": "pytest-backend",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:61"
      ]
    },
    "pytest-clickhouse": {
      "value": "pytest-clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:85"
      ]
    },
    "pytest-cov": {
      "value": "pytest-cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:119",
        "scripts/test_backend_ORIGINAL.py:156"
      ]
    },
    "pytest-mock": {
      "value": "pytest-mock",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:118",
        "scripts/test_backend_ORIGINAL.py:156"
      ]
    },
    "pytest-postgres": {
      "value": "pytest-postgres",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:73"
      ]
    },
    "pytest-redis": {
      "value": "pytest-redis",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:79"
      ]
    },
    "pytest-xdist": {
      "value": "pytest-xdist",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:119",
        "scripts/test_backend_ORIGINAL.py:157"
      ]
    },
    "pytest.ini": {
      "value": "pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89",
        "scripts/test_backend_ORIGINAL.py:191",
        "scripts/test_backend_ORIGINAL.py:192",
        "scripts/unified_test_config.py:165",
        "scripts/unified_test_config.py:174"
      ]
    },
    "pytest.mark": {
      "value": "pytest.mark",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:59",
        "scripts/test_collection_audit.py:246"
      ]
    },
    "pytest.mark.": {
      "value": "pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:234",
        "scripts/business_value_test_index.py:246"
      ]
    },
    "pytest.mark.api": {
      "value": "pytest.mark.api",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:113"
      ]
    },
    "pytest.mark.asyncio": {
      "value": "pytest.mark.asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:533"
      ]
    },
    "pytest.mark.e2e": {
      "value": "pytest.mark.e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:98"
      ]
    },
    "pytest.mark.e2e_critical": {
      "value": "pytest.mark.e2e_critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:103"
      ]
    },
    "pytest.mark.integration": {
      "value": "pytest.mark.integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:93"
      ]
    },
    "pytest.mark.performance": {
      "value": "pytest.mark.performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:123"
      ]
    },
    "pytest.mark.real_llm": {
      "value": "pytest.mark.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:278"
      ]
    },
    "pytest.mark.security": {
      "value": "pytest.mark.security",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:128"
      ]
    },
    "pytest.mark.smoke": {
      "value": "pytest.mark.smoke",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:108"
      ]
    },
    "pytest.mark.unit": {
      "value": "pytest.mark.unit",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:88"
      ]
    },
    "pytest.mark.websocket": {
      "value": "pytest.mark.websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:118"
      ]
    },
    "pytest_": {
      "value": "pytest_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:133",
        "scripts/compliance/test_size_validator.py:261"
      ]
    },
    "pytest_asyncio": {
      "value": "pytest_asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:155"
      ]
    },
    "pytest_cov": {
      "value": "pytest_cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:156"
      ]
    },
    "pytest_mock": {
      "value": "pytest_mock",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:156"
      ]
    },
    "pytest_resource_monitor.log": {
      "value": "pytest_resource_monitor.log",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:25"
      ]
    },
    "pytest_resource_report_": {
      "value": "pytest_resource_report_",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:288"
      ]
    },
    "pytest_skip_markers.txt": {
      "value": "pytest_skip_markers.txt",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:81"
      ]
    },
    "python": {
      "value": "python",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/cleanup_test_processes.py:79",
        "scripts/cleanup_test_processes.py:84",
        "scripts/continuous_e2e_test_runner.py:26",
        "scripts/continuous_e2e_test_runner.py:108",
        "scripts/e2e_test_fixer.py:311",
        "scripts/launch_test_env.py:155",
        "scripts/manage_test_services.py:141"
      ]
    },
    "python -m pytest netra_backend/tests/integration/test_adaptive_workflow.py -v --tb=short": {
      "value": "python -m pytest netra_backend/tests/integration/test_adaptive_workflow.py -v --tb=short",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:254"
      ]
    },
    "python scripts/check_architecture_compliance.py": {
      "value": "python scripts/check_architecture_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:214"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py analyze app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py analyze app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:185"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py suggest app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py suggest app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:186"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py validate app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py validate app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:187"
      ]
    },
    "python scripts/compliance/test_size_validator.py": {
      "value": "python scripts/compliance/test_size_validator.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:179"
      ]
    },
    "python scripts/compliance/test_size_validator.py --format markdown": {
      "value": "python scripts/compliance/test_size_validator.py --format markdown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:180"
      ]
    },
    "python scripts/compliance/test_size_validator.py --output report.md": {
      "value": "python scripts/compliance/test_size_validator.py --output report.md",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:181"
      ]
    },
    "python scripts/migrate_test_ids.py --apply": {
      "value": "python scripts/migrate_test_ids.py --apply",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:200"
      ]
    },
    "python test_adaptive_workflow_direct.py": {
      "value": "python test_adaptive_workflow_direct.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:277"
      ]
    },
    "python test_runner.py --level real_e2e": {
      "value": "python test_runner.py --level real_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:152"
      ]
    },
    "python test_runner.py --level real_e2e --real-llm": {
      "value": "python test_runner.py --level real_e2e --real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:84",
        "scripts/test_discovery_report.py:155"
      ]
    },
    "python test_runner.py --level real_e2e --real-llm --llm-model gemini-2.5-pro": {
      "value": "python test_runner.py --level real_e2e --real-llm --llm-model gemini-2.5-pro",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:158"
      ]
    },
    "python tests/unified_test_runner.py --service backend [your args]": {
      "value": "python tests/unified_test_runner.py --service backend [your args]",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:25"
      ]
    },
    "python tests/unified_test_runner.py --service frontend [your args]": {
      "value": "python tests/unified_test_runner.py --service frontend [your args]",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:25"
      ]
    },
    "python unified_test_runner.py --category": {
      "value": "python unified_test_runner.py --category",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:105"
      ]
    },
    "python unified_test_runner.py --category e2e --list-tests": {
      "value": "python unified_test_runner.py --category e2e --list-tests",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:212"
      ]
    },
    "python unified_test_runner.py --category frontend --real-services": {
      "value": "python unified_test_runner.py --category frontend --real-services",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:209"
      ]
    },
    "python unified_test_runner.py --category integration --real-services --real-llm": {
      "value": "python unified_test_runner.py --category integration --real-services --real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:211"
      ]
    },
    "python unified_test_runner.py --level integration": {
      "value": "python unified_test_runner.py --level integration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:191"
      ]
    },
    "python unified_test_runner.py --skip-size-validation": {
      "value": "python unified_test_runner.py --skip-size-validation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:129",
        "scripts/compliance/demo_test_size_enforcement.py:193"
      ]
    },
    "python unified_test_runner.py --strict-size": {
      "value": "python unified_test_runner.py --strict-size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:128",
        "scripts/compliance/demo_test_size_enforcement.py:192"
      ]
    },
    "quality_gates": {
      "value": "quality_gates",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:430"
      ]
    },
    "quality_metrics": {
      "value": "quality_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:629",
        "scripts/business_value_test_index.py:746",
        "scripts/test_data_validator_backup.py:229",
        "scripts/test_data_validator_backup.py:246",
        "scripts/test_data_validator_backup.py:264",
        "scripts/test_data_validator_backup.py:284",
        "scripts/test_data_validator_backup.py:302"
      ]
    },
    "quality_score": {
      "value": "quality_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:191"
      ]
    },
    "quality_scores": {
      "value": "quality_scores",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:25",
        "scripts/real_service_test_metrics.py:68",
        "scripts/real_service_test_metrics.py:90",
        "scripts/real_service_test_metrics.py:91"
      ]
    },
    "quality_summary": {
      "value": "quality_summary",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:92",
        "scripts/real_service_test_metrics.py:180",
        "scripts/real_service_test_metrics.py:182"
      ]
    },
    "query": {
      "value": "query",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:126"
      ]
    },
    "query_execution": {
      "value": "query_execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:301",
        "scripts/test_clickhouse_startup_fix.py:303"
      ]
    },
    "queue_depth": {
      "value": "queue_depth",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:159"
      ]
    },
    "queue_service.py": {
      "value": "queue_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:124"
      ]
    },
    "quick_test": {
      "value": "quick_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:404"
      ]
    },
    "quick_user": {
      "value": "quick_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:412"
      ]
    },
    "quota_service.py": {
      "value": "quota_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:131"
      ]
    },
    "r": {
      "value": "r",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:113",
        "auth_service/tests/test_all_imports.py:155",
        "auth_service/tests/test_environment_loading.py:339",
        "scripts/add_pytest_markers.py:110",
        "scripts/add_test_markers.py:26",
        "scripts/analyze_test_mocks.py:92",
        "scripts/analyze_test_overlap.py:105",
        "scripts/apply_fast_test_decorators.py:104",
        "scripts/auto_fix_test_sizes.py:81",
        "scripts/auto_fix_test_sizes.py:607"
      ]
    },
    "race-test-user": {
      "value": "race-test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:214"
      ]
    },
    "race@example.com": {
      "value": "race@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:215"
      ]
    },
    "random": {
      "value": "random",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:45"
      ]
    },
    "random\\.": {
      "value": "random\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:218"
      ]
    },
    "ranking_service.py": {
      "value": "ranking_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:129"
      ]
    },
    "rapid-test": {
      "value": "rapid-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:337",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:149"
      ]
    },
    "rapid@example.com": {
      "value": "rapid@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:338"
      ]
    },
    "rapid@test.com": {
      "value": "rapid@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:150"
      ]
    },
    "rate": {
      "value": "rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:286"
      ]
    },
    "rate_limit": {
      "value": "rate_limit",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:40",
        "netra_backend/app/services/realistic_test_data/models.py:50",
        "netra_backend/app/services/realistic_test_data/models.py:60",
        "netra_backend/app/services/realistic_test_data/models.py:70",
        "netra_backend/app/services/realistic_test_data/models.py:80"
      ]
    },
    "rate_limit:api:test-user-1": {
      "value": "rate_limit:api:test-user-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:261"
      ]
    },
    "rate_limit:api:test-user-2": {
      "value": "rate_limit:api:test-user-2",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:262"
      ]
    },
    "rate_limit:websocket:test-session-1": {
      "value": "rate_limit:websocket:test-session-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:263"
      ]
    },
    "rate_limiter.py": {
      "value": "rate_limiter.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:91"
      ]
    },
    "rate_limiting": {
      "value": "rate_limiting",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:113",
        "scripts/unified_test_config.py:109"
      ]
    },
    "rate_limiting.py": {
      "value": "rate_limiting.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:109"
      ]
    },
    "raw": {
      "value": "raw",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:279",
        "scripts/test_websocket_chat_standalone.py:274"
      ]
    },
    "raw body": {
      "value": "raw body",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:322"
      ]
    },
    "read": {
      "value": "read",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:34",
        "auth_service/tests/test_auth_comprehensive_audit.py:63",
        "auth_service/tests/test_auth_comprehensive_audit.py:88",
        "auth_service/tests/test_auth_real_services_comprehensive.py:219",
        "auth_service/tests/test_refresh_critical_fix.py:30",
        "auth_service/tests/test_refresh_critical_fix.py:94",
        "auth_service/tests/test_refresh_critical_fix.py:114",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:42",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:123",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:256"
      ]
    },
    "readiness_score": {
      "value": "readiness_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:117",
        "scripts/test_environment_validation_clean.py:155",
        "scripts/test_improved_environment_validation.py:155"
      ]
    },
    "readiness_separation": {
      "value": "readiness_separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:43"
      ]
    },
    "readiness_separation      → test_07_health_check_false_positives_during_init": {
      "value": "readiness_separation      → test_07_health_check_false_positives_during_init",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:393"
      ]
    },
    "ready": {
      "value": "ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:145"
      ]
    },
    "real": {
      "value": "real",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:33",
        "scripts/run_critical_test.py:30",
        "scripts/start_test_services.py:159"
      ]
    },
    "real e2e tests:": {
      "value": "real e2e tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:74"
      ]
    },
    "real fixes:": {
      "value": "real fixes:",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:271"
      ]
    },
    "real-data-user": {
      "value": "real-data-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:248"
      ]
    },
    "real-user-456": {
      "value": "real-user-456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:67",
        "auth_service/tests/test_refresh_token_fix.py:91",
        "auth_service/tests/test_refresh_token_fix.py:108",
        "auth_service/tests/test_refresh_token_fix.py:115"
      ]
    },
    "real_": {
      "value": "real_",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:44"
      ]
    },
    "real_data_pipeline_integrity": {
      "value": "real_data_pipeline_integrity",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:66"
      ]
    },
    "real_database": {
      "value": "real_database",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:93"
      ]
    },
    "real_e2e": {
      "value": "real_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:105"
      ]
    },
    "real_llm": {
      "value": "real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:87",
        "scripts/business_value_test_index.py:279",
        "scripts/business_value_test_index.py:280",
        "scripts/business_value_test_index.py:281",
        "scripts/business_value_test_index.py:463",
        "scripts/business_value_test_index.py:504",
        "scripts/unified_test_config.py:65",
        "scripts/unified_test_config.py:92",
        "scripts/unified_test_config.py:131",
        "scripts/unified_test_config.py:139"
      ]
    },
    "real_llm_coverage": {
      "value": "real_llm_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:630",
        "scripts/business_value_test_index.py:747"
      ]
    },
    "real_services": {
      "value": "real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:49",
        "scripts/add_test_markers.py:215",
        "scripts/test_discovery_report.py:105",
        "scripts/unified_test_config.py:91"
      ]
    },
    "real_websocket": {
      "value": "real_websocket",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:376"
      ]
    },
    "realdata@example.com": {
      "value": "realdata@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:249"
      ]
    },
    "realistic_test_data_service": {
      "value": "realistic_test_data_service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "realuser@example.com": {
      "value": "realuser@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:68",
        "auth_service/tests/test_refresh_token_fix.py:92",
        "auth_service/tests/test_refresh_token_fix.py:109",
        "auth_service/tests/test_refresh_token_fix.py:116"
      ]
    },
    "reason": {
      "value": "reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:333",
        "scripts/team_updates_test_analyzer.py:59",
        "scripts/test_oauth_local.py:291",
        "scripts/test_oauth_local.py:375",
        "scripts/test_oauth_local.py:376",
        "scripts/test_oauth_local.py:418"
      ]
    },
    "reasoning": {
      "value": "reasoning",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:84",
        "scripts/test_websocket_chat_simple.py:301",
        "scripts/test_websocket_chat_standalone.py:296"
      ]
    },
    "received_keys": {
      "value": "received_keys",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/unit/test_refresh_endpoint.py:105",
        "scripts/test_staging_refresh_format.py:112",
        "scripts/test_staging_refresh_format.py:113",
        "scripts/test_staging_refresh_format.py:137",
        "scripts/test_staging_refresh_format.py:138"
      ]
    },
    "recent test reports": {
      "value": "recent test reports",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:95"
      ]
    },
    "recent_failure_rate": {
      "value": "recent_failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:100",
        "scripts/test_dashboard.py:104",
        "scripts/test_dashboard.py:167",
        "scripts/test_dashboard.py:323",
        "scripts/test_dashboard.py:393",
        "scripts/test_dashboard.py:394",
        "scripts/test_execution_tracker.py:449",
        "scripts/test_execution_tracker.py:574",
        "scripts/test_execution_tracker.py:576",
        "scripts/test_execution_tracker.py:720"
      ]
    },
    "recent_failures": {
      "value": "recent_failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:633"
      ]
    },
    "recent_runs": {
      "value": "recent_runs",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:73"
      ]
    },
    "recommendation": {
      "value": "recommendation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:187",
        "scripts/test_backend_optimized.py:344"
      ]
    },
    "recommendation_service.py": {
      "value": "recommendation_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:128"
      ]
    },
    "recommendations": {
      "value": "recommendations",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:251",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:264",
        "scripts/analyze_test_overlap.py:361",
        "scripts/analyze_test_overlap.py:433",
        "scripts/analyze_test_overlap.py:538",
        "scripts/analyze_test_overlap.py:539",
        "scripts/analyze_test_overlap.py:661",
        "scripts/business_value_test_index.py:647",
        "scripts/business_value_test_index.py:763",
        "scripts/business_value_test_index.py:765"
      ]
    },
    "recommendations_count": {
      "value": "recommendations_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:258"
      ]
    },
    "recommended": {
      "value": "recommended",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:177",
        "scripts/test_improved_environment_validation.py:187",
        "scripts/test_improved_environment_validation.py:211"
      ]
    },
    "reconfigure": {
      "value": "reconfigure",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:343"
      ]
    },
    "recovery": {
      "value": "recovery",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:122"
      ]
    },
    "recovery_start": {
      "value": "recovery_start",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:115"
      ]
    },
    "recovery_time_minutes": {
      "value": "recovery_time_minutes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:26",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:33",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:40",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:47",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:88"
      ]
    },
    "redirectUri": {
      "value": "redirectUri",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:155"
      ]
    },
    "redirect_url": {
      "value": "redirect_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:204",
        "scripts/test_oauth_local.py:209",
        "scripts/test_staging_login_automated.py:270",
        "scripts/test_staging_login_automated.py:276",
        "scripts/test_staging_login_automated.py:282"
      ]
    },
    "redis": {
      "value": "redis",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:52",
        "scripts/analyze_test_mocks.py:53",
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:438",
        "scripts/manage_test_services.py:51",
        "scripts/run_supervisor_test_coverage.py:247",
        "scripts/setup_e2e_test_ports.py:91",
        "scripts/setup_e2e_test_ports.py:100"
      ]
    },
    "redis not installed, skipping Redis connectivity check": {
      "value": "redis not installed, skipping Redis connectivity check",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:195"
      ]
    },
    "redis-cli": {
      "value": "redis-cli",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:121"
      ]
    },
    "redis-test": {
      "value": "redis-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:118"
      ]
    },
    "redis.Redis.get": {
      "value": "redis.Redis.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:435"
      ]
    },
    "redis.Redis.ping": {
      "value": "redis.Redis.ping",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:177",
        "auth_service/tests/auth-service-down-critical-scenarios.py:431"
      ]
    },
    "redis://": {
      "value": "redis://",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:45",
        "scripts/test_service_monitor.py:48"
      ]
    },
    "redis://invalid:9999": {
      "value": "redis://invalid:9999",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:506"
      ]
    },
    "redis://localhost:": {
      "value": "redis://localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:149",
        "scripts/test_docker_manager.py:177"
      ]
    },
    "redis://localhost:6379": {
      "value": "redis://localhost:6379",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:43"
      ]
    },
    "redis://localhost:6379/0": {
      "value": "redis://localhost:6379/0",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:18",
        "scripts/unified_test_config.py:129"
      ]
    },
    "redis://localhost:6379/1": {
      "value": "redis://localhost:6379/1",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:179",
        "scripts/test_backend_ORIGINAL.py:85",
        "scripts/test_environment_validation_clean.py:80",
        "scripts/test_improved_environment_validation.py:81"
      ]
    },
    "redis://localhost:6380": {
      "value": "redis://localhost:6380",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:158",
        "scripts/test_docker_manager.py:157"
      ]
    },
    "redis://localhost:6380/0": {
      "value": "redis://localhost:6380/0",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:31"
      ]
    },
    "redis://localhost:6380/2": {
      "value": "redis://localhost:6380/2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:72"
      ]
    },
    "redis://localhost:6381/1": {
      "value": "redis://localhost:6381/1",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:185"
      ]
    },
    "redis://localhost:6381/3": {
      "value": "redis://localhost:6381/3",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:110",
        "auth_service/tests/test_redis_staging_fixes.py:135",
        "auth_service/tests/test_redis_staging_fixes.py:161"
      ]
    },
    "redis://nonexistent-redis-host:6379/0": {
      "value": "redis://nonexistent-redis-host:6379/0",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:98"
      ]
    },
    "redis://staging-redis:6379": {
      "value": "redis://staging-redis:6379",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:58",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:69",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:297",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:323",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:329"
      ]
    },
    "redis://staging-redis:6379/0": {
      "value": "redis://staging-redis:6379/0",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:151"
      ]
    },
    "redis://test-redis:6379": {
      "value": "redis://test-redis:6379",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:47",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:52"
      ]
    },
    "redis://test:6379": {
      "value": "redis://test:6379",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:107",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:128",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:213"
      ]
    },
    "redis_connection": {
      "value": "redis_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:43"
      ]
    },
    "redis_error": {
      "value": "redis_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:128",
        "scripts/test_failure_analyzer.py:256"
      ]
    },
    "redis_url": {
      "value": "redis_url",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:129",
        "scripts/unified_test_config.py:137",
        "scripts/unified_test_config.py:145",
        "scripts/unified_test_config.py:153",
        "scripts/unified_test_config.py:310",
        "scripts/unified_test_config.py:311"
      ]
    },
    "redis_url_configured": {
      "value": "redis_url_configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:222"
      ]
    },
    "redis|Redis|REDIS": {
      "value": "redis|Redis|REDIS",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:438"
      ]
    },
    "redundant tests...": {
      "value": "redundant tests...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:294"
      ]
    },
    "refresh": {
      "value": "refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:75",
        "auth_service/tests/test_auth_comprehensive_audit.py:190",
        "auth_service/tests/test_auth_comprehensive_audit.py:484",
        "auth_service/tests/test_auth_comprehensive_audit.py:492",
        "auth_service/tests/test_auth_real_services_comprehensive.py:252",
        "auth_service/tests/test_auth_real_services_comprehensive.py:256",
        "auth_service/tests/test_refresh_critical_fix.py:82",
        "auth_service/tests/test_refresh_critical_fix.py:100",
        "auth_service/tests/test_refresh_endpoint.py:116",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:30"
      ]
    },
    "refresh-test-1": {
      "value": "refresh-test-1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:86"
      ]
    },
    "refresh1@example.com": {
      "value": "refresh1@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:87"
      ]
    },
    "refreshToken": {
      "value": "refreshToken",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:72",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:194",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:273",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:294",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:315",
        "auth_service/tests/test_refresh_endpoint_integration.py:86",
        "auth_service/tests/test_refresh_endpoint_integration.py:128",
        "auth_service/tests/test_refresh_endpoint_simple.py:34",
        "auth_service/tests/unit/test_refresh_endpoint.py:70",
        "scripts/test_staging_auth_e2e.py:169"
      ]
    },
    "refresh_token": {
      "value": "refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:194",
        "auth_service/tests/test_auth_comprehensive_audit.py:534",
        "auth_service/tests/test_auth_comprehensive_audit.py:549",
        "auth_service/tests/test_auth_comprehensive_audit.py:555",
        "auth_service/tests/test_auth_real_services_comprehensive.py:352",
        "auth_service/tests/test_auth_real_services_comprehensive.py:353",
        "auth_service/tests/test_auth_real_services_comprehensive.py:380",
        "auth_service/tests/test_auth_real_services_comprehensive.py:381",
        "auth_service/tests/test_critical_bugs.py:64",
        "auth_service/tests/test_critical_bugs.py:64"
      ]
    },
    "refresh_token field is required": {
      "value": "refresh_token field is required",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:297",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:102",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/unit/test_refresh_endpoint.py:104"
      ]
    },
    "refresh_token_": {
      "value": "refresh_token_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:110",
        "auth_service/tests/factories/session_factory.py:181"
      ]
    },
    "refresh_token_hash": {
      "value": "refresh_token_hash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:113"
      ]
    },
    "refreshes": {
      "value": "refreshes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:284"
      ]
    },
    "region": {
      "value": "region",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:57"
      ]
    },
    "register_agent": {
      "value": "register_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:47"
      ]
    },
    "registry": {
      "value": "registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:128"
      ]
    },
    "reject": {
      "value": "reject",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:745"
      ]
    },
    "related": {
      "value": "related",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:329",
        "scripts/analyze_test_overlap.py:354",
        "scripts/analyze_test_overlap.py:532"
      ]
    },
    "relevance_score": {
      "value": "relevance_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:63",
        "scripts/test_triage_flow.py:68"
      ]
    },
    "reload": {
      "value": "reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:83"
      ]
    },
    "remaining requests, got": {
      "value": "remaining requests, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:248"
      ]
    },
    "remove": {
      "value": "remove",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:86"
      ]
    },
    "render": {
      "value": "render",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:86"
      ]
    },
    "render-related warnings": {
      "value": "render-related warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:90"
      ]
    },
    "replace": {
      "value": "replace",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:46",
        "scripts/autonomous_review/test_generator.py:66",
        "scripts/autonomous_review/test_reviewer.py:146",
        "scripts/autonomous_review/test_reviewer.py:222",
        "scripts/test_frontend_ORIGINAL.py:59",
        "scripts/test_frontend_ORIGINAL.py:82",
        "scripts/test_frontend_ORIGINAL.py:89",
        "scripts/test_frontend_ORIGINAL.py:200",
        "scripts/test_frontend_ORIGINAL.py:243",
        "scripts/test_frontend_ORIGINAL.py:307"
      ]
    },
    "replacement": {
      "value": "replacement",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:24",
        "scripts/batch_fix_and_test.py:30",
        "scripts/batch_fix_and_test.py:36",
        "scripts/batch_fix_and_test.py:52",
        "scripts/migrate_test_environment_access.py:49",
        "scripts/migrate_test_environment_access.py:56",
        "scripts/migrate_test_environment_access.py:63",
        "scripts/migrate_test_environment_access.py:70",
        "scripts/migrate_test_environment_access.py:77",
        "scripts/migrate_test_environment_access.py:84"
      ]
    },
    "replay": {
      "value": "replay",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:244"
      ]
    },
    "report": {
      "value": "report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:214",
        "scripts/test_execution_tracker.py:768",
        "scripts/test_execution_tracker.py:787"
      ]
    },
    "reporting": {
      "value": "reporting",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:128",
        "scripts/test_adaptive_workflow_direct.py:130",
        "scripts/test_agent_recovery_simple.py:45"
      ]
    },
    "reports": {
      "value": "reports",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:25",
        "scripts/remove_test_stubs.py:343",
        "scripts/test_backend_ORIGINAL.py:317",
        "scripts/test_backend_ORIGINAL.py:317",
        "scripts/test_backend_ORIGINAL.py:318",
        "scripts/test_backend_ORIGINAL.py:406",
        "scripts/test_coverage_system.py:56"
      ]
    },
    "reports/coverage": {
      "value": "reports/coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:113"
      ]
    },
    "reports/test_health": {
      "value": "reports/test_health",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:285"
      ]
    },
    "repository": {
      "value": "repository",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "req-456": {
      "value": "req-456",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:163",
        "scripts/test_websocket_chat_standalone.py:163"
      ]
    },
    "request": {
      "value": "request",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:74",
        "scripts/test_adaptive_workflow.py:317",
        "scripts/test_adaptive_workflow.py:324",
        "scripts/test_adaptive_workflow.py:330",
        "scripts/test_adaptive_workflow.py:338",
        "scripts/test_adaptive_workflow_direct.py:162",
        "scripts/test_adaptive_workflow_direct.py:169",
        "scripts/test_adaptive_workflow_direct.py:175",
        "scripts/test_adaptive_workflow_direct.py:184",
        "scripts/test_adaptive_workflow_local.py:88"
      ]
    },
    "request_classifier": {
      "value": "request_classifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:169",
        "scripts/test_agent_pipeline_simple.py:178"
      ]
    },
    "request_headers": {
      "value": "request_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:85",
        "scripts/test_cors.py:95",
        "scripts/test_cors.py:122",
        "scripts/test_cors.py:132",
        "scripts/test_cors.py:383",
        "scripts/test_cors.py:391"
      ]
    },
    "request_id": {
      "value": "request_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:278",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "scripts/staging_comprehensive_test.py:349",
        "scripts/staging_comprehensive_test.py:355"
      ]
    },
    "request_success_rate": {
      "value": "request_success_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "request_timeout": {
      "value": "request_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:45",
        "scripts/test_cold_start_e2e.py:239",
        "scripts/test_cold_start_e2e.py:334",
        "scripts/test_cold_start_e2e.py:356"
      ]
    },
    "requests": {
      "value": "requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:170",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:226",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:248",
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "requests\\.(?:get|post|put|delete)": {
      "value": "requests\\.(?:get|post|put|delete)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:33"
      ]
    },
    "require_approval": {
      "value": "require_approval",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:86"
      ]
    },
    "required WebSocket events validated": {
      "value": "required WebSocket events validated",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:520"
      ]
    },
    "required_data_sources": {
      "value": "required_data_sources",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:57"
      ]
    },
    "required_events": {
      "value": "required_events",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:99",
        "scripts/test_websocket_injection_fix_complete.py:515"
      ]
    },
    "required_imports": {
      "value": "required_imports",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:47",
        "scripts/test_websocket_injection_fix_complete.py:56",
        "scripts/test_websocket_injection_fix_complete.py:64",
        "scripts/test_websocket_injection_fix_complete.py:151"
      ]
    },
    "required_patterns": {
      "value": "required_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:48",
        "scripts/test_websocket_injection_fix_complete.py:57",
        "scripts/test_websocket_injection_fix_complete.py:65",
        "scripts/test_websocket_injection_fix_complete.py:89",
        "scripts/test_websocket_injection_fix_complete.py:161",
        "scripts/test_websocket_injection_fix_complete.py:439"
      ]
    },
    "required_sections": {
      "value": "required_sections",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:83",
        "scripts/test_websocket_injection_fix_complete.py:429"
      ]
    },
    "required_services": {
      "value": "required_services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:169",
        "scripts/unified_test_config.py:178",
        "scripts/unified_test_config.py:187"
      ]
    },
    "requires_data_gathering": {
      "value": "requires_data_gathering",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:159"
      ]
    },
    "requires_verification": {
      "value": "requires_verification",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:135"
      ]
    },
    "research": {
      "value": "research",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "reset": {
      "value": "reset",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:207",
        "scripts/test_docker_manager.py:228"
      ]
    },
    "resilience": {
      "value": "resilience",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:122",
        "scripts/fix_e2e_test_imports.py:115",
        "scripts/unified_test_config.py:120"
      ]
    },
    "resource": {
      "value": "resource",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:58",
        "auth_service/tests/factories/permission_factory.py:210",
        "auth_service/tests/test_session_security_cycles_36_40.py:231",
        "auth_service/tests/test_session_security_cycles_36_40.py:232",
        "auth_service/tests/test_session_security_cycles_36_40.py:233",
        "auth_service/tests/test_session_security_cycles_36_40.py:240",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "auth_service/tests/test_session_security_cycles_36_40.py:259"
      ]
    },
    "resource_monitoring": {
      "value": "resource_monitoring",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:171"
      ]
    },
    "resources": {
      "value": "resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:46"
      ]
    },
    "response": {
      "value": "response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:114",
        "scripts/test_agent_execution_websocket_integration.py:167",
        "scripts/test_agent_execution_websocket_integration.py:175",
        "scripts/test_agent_execution_websocket_integration.py:175",
        "scripts/test_agent_execution_websocket_integration.py:188",
        "scripts/test_chat_errors.py:72",
        "scripts/test_docker_websocket_fix.py:75",
        "scripts/test_docker_websocket_fix.py:102",
        "scripts/test_docker_websocket_fix.py:107",
        "scripts/test_oauth_local.py:111"
      ]
    },
    "response time degradation": {
      "value": "response time degradation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91"
      ]
    },
    "response_data": {
      "value": "response_data",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:112",
        "scripts/staging_comprehensive_test.py:234",
        "scripts/test_cors.py:124",
        "scripts/test_websocket_cors_comprehensive.py:69",
        "scripts/test_websocket_cors_comprehensive.py:112"
      ]
    },
    "response_generator": {
      "value": "response_generator",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:158"
      ]
    },
    "response_headers": {
      "value": "response_headers",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:276",
        "scripts/test_cors.py:86",
        "scripts/test_cors.py:123",
        "scripts/test_cors_implementation.py:217"
      ]
    },
    "response_text": {
      "value": "response_text",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:114",
        "scripts/staging_comprehensive_test.py:236"
      ]
    },
    "response_time": {
      "value": "response_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:132",
        "scripts/test_agent_orchestration_recovery.py:196",
        "scripts/test_agent_orchestration_recovery.py:205",
        "scripts/test_agent_orchestration_recovery.py:264",
        "scripts/test_cors.py:88",
        "scripts/test_staging_deployment.py:48",
        "scripts/test_staging_deployment.py:58",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139"
      ]
    },
    "response_time_ms": {
      "value": "response_time_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:149",
        "netra_backend/app/services/realistic_test_data/log_generator.py:158",
        "netra_backend/app/services/realistic_test_data/log_generator.py:174",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199",
        "scripts/manage_test_services.py:116",
        "scripts/staging_comprehensive_test.py:106",
        "scripts/staging_comprehensive_test.py:224",
        "scripts/staging_comprehensive_test.py:321",
        "scripts/staging_comprehensive_test.py:351",
        "scripts/staging_comprehensive_test.py:357"
      ]
    },
    "restart_counts": {
      "value": "restart_counts",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:176",
        "scripts/test_parallel_docker_manager.py:177"
      ]
    },
    "result": {
      "value": "result",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:120",
        "scripts/test_adaptive_workflow_local.py:131",
        "scripts/test_adaptive_workflow_local.py:133",
        "scripts/test_adaptive_workflow_local.py:133",
        "scripts/test_adaptive_workflow_local.py:134",
        "scripts/test_adaptive_workflow_local.py:145",
        "scripts/test_agent_pipeline_simple.py:298",
        "scripts/test_agent_pipeline_simple.py:308",
        "scripts/test_agent_pipeline_simple.py:385",
        "scripts/test_clickhouse_startup_fix.py:301"
      ]
    },
    "result_": {
      "value": "result_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:109"
      ]
    },
    "results": {
      "value": "results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:118",
        "scripts/compliance/fake_test_scanner.py:141",
        "scripts/comprehensive_test_fixer.py:410",
        "scripts/frontend_iterative_test_runner.py:139",
        "scripts/frontend_iterative_test_runner.py:177",
        "scripts/iterative_test_fix_loop.py:86",
        "scripts/run_all_test_categories.py:126",
        "scripts/staging_comprehensive_test.py:381",
        "scripts/test_agent_pipeline_simple.py:319",
        "scripts/test_agent_pipeline_simple.py:383"
      ]
    },
    "results, starting from iteration": {
      "value": "results, starting from iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:163"
      ]
    },
    "resurrect_test": {
      "value": "resurrect_test",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:67",
        "scripts/test/test_presence_detection.py:68",
        "scripts/test/test_presence_detection.py:69",
        "scripts/test/test_presence_detection.py:71",
        "scripts/test/test_presence_detection.py:72"
      ]
    },
    "resurrection_count": {
      "value": "resurrection_count",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:73",
        "scripts/test/test_presence_detection.py:79"
      ]
    },
    "retry": {
      "value": "retry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:411"
      ]
    },
    "retry_after": {
      "value": "retry_after",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:72",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:72",
        "netra_backend/app/services/realistic_test_data/models.py:116",
        "netra_backend/app/services/realistic_test_data/models.py:127",
        "auth_service/tests/auth-service-down-critical-scenarios.py:155"
      ]
    },
    "retry_attempt_success": {
      "value": "retry_attempt_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:115"
      ]
    },
    "retry_attempts": {
      "value": "retry_attempts",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:118",
        "scripts/test_clickhouse_startup_fix.py:118"
      ]
    },
    "retry_count": {
      "value": "retry_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:82"
      ]
    },
    "retry_logic.py": {
      "value": "retry_logic.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:110"
      ]
    },
    "retry_results": {
      "value": "retry_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:220"
      ]
    },
    "retry_time": {
      "value": "retry_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:116"
      ]
    },
    "return window.dataLayer ? window.dataLayer.filter(item => \n            item.event && !['gtm.dom', 'gtm.load', 'gtm.js'].includes(item.event)\n        ) : [];": {
      "value": "return window.dataLayer ? window.dataLayer.filter(item => \n            item.event && !['gtm.dom', 'gtm.load', 'gtm.js'].includes(item.event)\n        ) : [];",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:27"
      ]
    },
    "return\\s*\\[\\s*\\{\\s*[\"\\']id[\"\\']\\s*:\\s*[\"\\']1[\"\\']": {
      "value": "return\\s*\\[\\s*\\{\\s*[\"\\']id[\"\\']\\s*:\\s*[\"\\']1[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:56"
      ]
    },
    "return\\s*\\{\\s*[\"\\']status[\"\\']\\s*:\\s*[\"\\']ok[\"\\']\\s*\\}": {
      "value": "return\\s*\\{\\s*[\"\\']status[\"\\']\\s*:\\s*[\"\\']ok[\"\\']\\s*\\}",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:58"
      ]
    },
    "return\\s*\\{\\s*[\"\\']test[\"\\']\\s*:\\s*[\"\\']data[\"\\']\\s*\\}": {
      "value": "return\\s*\\{\\s*[\"\\']test[\"\\']\\s*:\\s*[\"\\']data[\"\\']\\s*\\}",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:57"
      ]
    },
    "return_code": {
      "value": "return_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:110"
      ]
    },
    "reuse-test": {
      "value": "reuse-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:220",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:79"
      ]
    },
    "reuse@example.com": {
      "value": "reuse@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:221"
      ]
    },
    "reuse@test.com": {
      "value": "reuse@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:80"
      ]
    },
    "revenue_to_cost_ratio": {
      "value": "revenue_to_cost_ratio",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "review_assertion": {
      "value": "review_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:66"
      ]
    },
    "revocation_test_token_34": {
      "value": "revocation_test_token_34",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:183"
      ]
    },
    "revoked": {
      "value": "revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:243"
      ]
    },
    "risk_assessment": {
      "value": "risk_assessment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "risk_level": {
      "value": "risk_level",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:464",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:473"
      ]
    },
    "role": {
      "value": "role",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:65",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:64",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:73",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:87",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:115",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:146",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:182",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:220",
        "scripts/test_async_serialization_direct.py:49",
        "scripts/test_cold_start_e2e.py:349"
      ]
    },
    "role_assignment": {
      "value": "role_assignment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:214"
      ]
    },
    "root": {
      "value": "root",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:114",
        "scripts/staging_comprehensive_test.py:212",
        "scripts/test_collection_audit.py:199",
        "scripts/test_collection_audit.py:213",
        "scripts/test_staging_jwt.py:12",
        "scripts/unified_test_config.py:163",
        "scripts/unified_test_config.py:172",
        "scripts/unified_test_config.py:181",
        "scripts/unified_test_config.py:320",
        "scripts/unified_test_config.py:415"
      ]
    },
    "root_cause_analysis": {
      "value": "root_cause_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:84"
      ]
    },
    "route": {
      "value": "route",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:344",
        "scripts/test_cors_implementation.py:213"
      ]
    },
    "router": {
      "value": "router",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:138"
      ]
    },
    "routes with": {
      "value": "routes with",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:146"
      ]
    },
    "routes_tested": {
      "value": "routes_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:209"
      ]
    },
    "rps": {
      "value": "rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:231"
      ]
    },
    "rsWwwvq8X6mCSuNv-TMXHDCfb96Xc-Dbay9MZy6EDCU": {
      "value": "rsWwwvq8X6mCSuNv-TMXHDCfb96Xc-Dbay9MZy6EDCU",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:34",
        "scripts/test_staging_jwt.py:12"
      ]
    },
    "run": {
      "value": "run",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:218",
        "scripts/frontend_iterative_test_runner.py:221",
        "scripts/frontend_iterative_test_runner.py:225",
        "scripts/frontend_iterative_test_runner.py:242",
        "scripts/frontend_iterative_test_runner.py:284",
        "scripts/frontend_iterative_test_runner.py:791",
        "scripts/frontend_iterative_test_runner.py:797",
        "scripts/frontend_iterative_test_runner.py:809",
        "scripts/frontend_iterative_test_runner.py:812",
        "scripts/test_frontend_ORIGINAL.py:121"
      ]
    },
    "run-": {
      "value": "run-",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:354"
      ]
    },
    "run-HYPHENATED": {
      "value": "run-HYPHENATED",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:28"
      ]
    },
    "run.app": {
      "value": "run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:319",
        "scripts/test_gtm_loading.py:111"
      ]
    },
    "run_": {
      "value": "run_",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:98"
      ]
    },
    "run_456": {
      "value": "run_456",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:101"
      ]
    },
    "run_id": {
      "value": "run_id",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:108",
        "scripts/test_agent_execution_websocket_integration.py:95"
      ]
    },
    "run_id\\s*=\\s*[\"\\']run-[\\w-]+[\"\\']": {
      "value": "run_id\\s*=\\s*[\"\\']run-[\\w-]+[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:28"
      ]
    },
    "run_id\\s*=\\s*[\"\\']test-run[\"\\']": {
      "value": "run_id\\s*=\\s*[\"\\']test-run[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:25"
      ]
    },
    "run_id\\s*=\\s*[\"\\']test_run[\"\\']": {
      "value": "run_id\\s*=\\s*[\"\\']test_run[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:26"
      ]
    },
    "run_id\\s*=\\s*[\"\\']test_run_\\d+[\"\\']": {
      "value": "run_id\\s*=\\s*[\"\\']test_run_\\d+[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:27"
      ]
    },
    "run_server.py": {
      "value": "run_server.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:281"
      ]
    },
    "runner": {
      "value": "runner",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:85",
        "scripts/unified_test_config.py:166",
        "scripts/unified_test_config.py:175",
        "scripts/unified_test_config.py:184"
      ]
    },
    "runner_": {
      "value": "runner_",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:52"
      ]
    },
    "runner_id": {
      "value": "runner_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:37",
        "scripts/test_parallel_docker_manager.py:171"
      ]
    },
    "runners": {
      "value": "runners",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:114",
        "scripts/test_parallel_docker_manager.py:164"
      ]
    },
    "runners.py": {
      "value": "runners.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:114"
      ]
    },
    "running": {
      "value": "running",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:60",
        "scripts/frontend_iterative_test_runner.py:159"
      ]
    },
    "running service(s):": {
      "value": "running service(s):",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:268"
      ]
    },
    "runs-on:": {
      "value": "runs-on:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:233",
        "scripts/test_workflows_with_act.py:236"
      ]
    },
    "runs.py": {
      "value": "runs.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:73"
      ]
    },
    "s": {
      "value": "s",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:346",
        "auth_service/tests/auth-service-down-critical-scenarios.py:353",
        "auth_service/tests/auth-service-down-critical-scenarios.py:496",
        "auth_service/tests/test_auth_comprehensive_audit.py:410",
        "scripts/run_all_test_categories.py:51",
        "scripts/test_agent_execution_websocket_integration.py:89",
        "scripts/test_agent_execution_websocket_integration.py:291",
        "scripts/test_agent_execution_websocket_integration.py:309",
        "scripts/test_agent_execution_websocket_integration.py:324",
        "scripts/test_agent_execution_websocket_integration.py:385"
      ]
    },
    "s (limit:": {
      "value": "s (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:208"
      ]
    },
    "s (requirement: <2s)": {
      "value": "s (requirement: <2s)",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:112"
      ]
    },
    "s (requirement: <5s)": {
      "value": "s (requirement: <5s)",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:157"
      ]
    },
    "s - no fallback mechanism implemented": {
      "value": "s - no fallback mechanism implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:121"
      ]
    },
    "s of sleep calls. Consider optimizing with performance helpers.": {
      "value": "s of sleep calls. Consider optimizing with performance helpers.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:134"
      ]
    },
    "s of sleep calls. Consider using fast_test decorator or mocking time.sleep.": {
      "value": "s of sleep calls. Consider using fast_test decorator or mocking time.sleep.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:129"
      ]
    },
    "s)": {
      "value": "s)",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:17",
        "scripts/test_agent_orchestration_recovery.py:199",
        "scripts/test_coordination_fixes.py:63",
        "scripts/test_coordination_fixes.py:65",
        "scripts/test_execution_tracker.py:792",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139",
        "scripts/test_staging_startup.py:203",
        "scripts/test_staging_startup.py:208"
      ]
    },
    "s) -": {
      "value": "s) -",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:146"
      ]
    },
    "s):": {
      "value": "s):",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70"
      ]
    },
    "s, should fail quickly with fallback": {
      "value": "s, should fail quickly with fallback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:111"
      ]
    },
    "s:": {
      "value": "s:",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:170"
      ]
    },
    "s</td>\n                <td>": {
      "value": "s</td>\n                <td>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:377"
      ]
    },
    "s</td>\n            </tr>": {
      "value": "s</td>\n            </tr>",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:324"
      ]
    },
    "s] Message #": {
      "value": "s] Message #",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:152"
      ]
    },
    "s] WebSocket:": {
      "value": "s] WebSocket:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:86"
      ]
    },
    "savings_percentage": {
      "value": "savings_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:329",
        "scripts/test_data_validator_backup.py:400",
        "scripts/test_data_validator_backup.py:417"
      ]
    },
    "scaling_service.py": {
      "value": "scaling_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:132"
      ]
    },
    "scan_duration": {
      "value": "scan_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:196"
      ]
    },
    "scan_timestamp": {
      "value": "scan_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:259",
        "scripts/remove_test_stubs.py:309"
      ]
    },
    "scenario": {
      "value": "scenario",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:124",
        "scripts/test_adaptive_workflow.py:229",
        "scripts/test_adaptive_workflow_local.py:118",
        "scripts/test_adaptive_workflow_local.py:132"
      ]
    },
    "scheduler": {
      "value": "scheduler",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35"
      ]
    },
    "scheduler_service.py": {
      "value": "scheduler_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:125"
      ]
    },
    "schema": {
      "value": "schema",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340"
      ]
    },
    "scope": {
      "value": "scope",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:197",
        "auth_service/tests/factories/token_factory.py:220",
        "scripts/test_triage_flow.py:40"
      ]
    },
    "score": {
      "value": "score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:641",
        "scripts/business_value_test_index.py:755",
        "scripts/real_service_test_metrics.py:70",
        "scripts/real_service_test_metrics.py:91"
      ]
    },
    "script_tag_found": {
      "value": "script_tag_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:18",
        "scripts/test_gtm_loading.py:41",
        "scripts/test_gtm_loading.py:60",
        "scripts/test_gtm_loading.py:121",
        "scripts/test_gtm_loading.py:144",
        "scripts/test_gtm_loading.py:157"
      ]
    },
    "scripts": {
      "value": "scripts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:26",
        "scripts/standardize_l3_test_names.py:57",
        "scripts/test_frontend_ORIGINAL.py:526",
        "scripts/test_parallel_docker_manager.py:209",
        "scripts/test_staging_simplified.py:62"
      ]
    },
    "scripts/dev_launcher.py": {
      "value": "scripts/dev_launcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:100",
        "scripts/start_test_services.py:108",
        "scripts/test_cold_start_e2e.py:116"
      ]
    },
    "scripts/verify_workflow_status.py": {
      "value": "scripts/verify_workflow_status.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:34",
        "scripts/test_verify_workflow.py:46",
        "scripts/test_verify_workflow.py:63",
        "scripts/test_verify_workflow_status.py:30",
        "scripts/test_verify_workflow_status_corrected.py:18"
      ]
    },
    "search": {
      "value": "search",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:189"
      ]
    },
    "search.py": {
      "value": "search.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:73"
      ]
    },
    "seasonality": {
      "value": "seasonality",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:132"
      ]
    },
    "secondary_categories": {
      "value": "secondary_categories",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:32"
      ]
    },
    "secondary_intents": {
      "value": "secondary_intents",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:52"
      ]
    },
    "seconds": {
      "value": "seconds",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:295",
        "scripts/real_service_test_metrics.py:125",
        "scripts/run_all_test_categories.py:42",
        "scripts/run_supervisor_test_coverage.py:298",
        "scripts/test_backend_optimized.py:329",
        "scripts/test_glitch_fixes.py:66",
        "scripts/test_secret_manager_builder_critical.py:651",
        "scripts/test_secret_manager_builder_critical.py:652",
        "scripts/test_staging_auth_e2e.py:112",
        "scripts/test_staging_auth_live.py:96"
      ]
    },
    "seconds\n\n✅ SOLUTION: SecretManagerBuilder with optimized loading\n   🚀 Single GCP call per service instead of multiple individual calls\n   💾 Intelligent caching and connection pooling\n   ⚡ Parallel secret loading for non-dependent secrets\n   📊 Built-in performance monitoring and alerting": {
      "value": "seconds\n\n✅ SOLUTION: SecretManagerBuilder with optimized loading\n   🚀 Single GCP call per service instead of multiple individual calls\n   💾 Intelligent caching and connection pooling\n   ⚡ Parallel secret loading for non-dependent secrets\n   📊 Built-in performance monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:663"
      ]
    },
    "seconds ago)": {
      "value": "seconds ago)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:80"
      ]
    },
    "seconds)": {
      "value": "seconds)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:82"
      ]
    },
    "seconds...": {
      "value": "seconds...",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_docker_stability.py:63",
        "scripts/test_parallel_docker_manager.py:65"
      ]
    },
    "secret": {
      "value": "secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:745"
      ]
    },
    "secret may be correct (or endpoint doesn't validate JWT)": {
      "value": "secret may be correct (or endpoint doesn't validate JWT)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:44"
      ]
    },
    "secret test inconclusive:": {
      "value": "secret test inconclusive:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:46"
      ]
    },
    "secret:": {
      "value": "secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:51"
      ]
    },
    "secret_manager": {
      "value": "secret_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:177"
      ]
    },
    "secrets": {
      "value": "secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:496",
        "scripts/test_secret_manager_debug.py:46",
        "scripts/test_secret_manager_debug.py:146"
      ]
    },
    "secrets_loading": {
      "value": "secrets_loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:41"
      ]
    },
    "sections completed": {
      "value": "sections completed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:172"
      ]
    },
    "secure": {
      "value": "secure",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:158",
        "scripts/setup_staging_test_account.py:166"
      ]
    },
    "secure-staging-password-123": {
      "value": "secure-staging-password-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:96"
      ]
    },
    "secure_password": {
      "value": "secure_password",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:11",
        "scripts/compliance/test_limits_examples.py:31",
        "scripts/compliance/test_limits_examples.py:39",
        "scripts/compliance/test_limits_examples.py:57",
        "scripts/compliance/test_limits_examples.py:62"
      ]
    },
    "secure_websocket": {
      "value": "secure_websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:125"
      ]
    },
    "security": {
      "value": "security",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:493",
        "scripts/auto_fix_test_violations.py:494",
        "scripts/autonomous_review/test_reviewer.py:217",
        "scripts/autonomous_review/test_reviewer.py:231",
        "scripts/autonomous_review/test_reviewer.py:232",
        "scripts/business_value_test_index.py:89",
        "scripts/business_value_test_index.py:423",
        "scripts/business_value_test_index.py:464",
        "scripts/setup_test_environment.py:111",
        "scripts/test_execution_tracker.py:126"
      ]
    },
    "security violations": {
      "value": "security violations",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:765"
      ]
    },
    "security.py": {
      "value": "security.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:107"
      ]
    },
    "security_audit_service.py": {
      "value": "security_audit_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:134"
      ]
    },
    "security_breach": {
      "value": "security_breach",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:194"
      ]
    },
    "security_level": {
      "value": "security_level",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:272",
        "scripts/test_websocket_dev_mode.py:126"
      ]
    },
    "seed_data": {
      "value": "seed_data",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:311"
      ]
    },
    "self": {
      "value": "self",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:200",
        "scripts/test_intensive_serialization.py:274"
      ]
    },
    "self.": {
      "value": "self.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:291"
      ]
    },
    "self.assertEqual": {
      "value": "self.assertEqual",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:271"
      ]
    },
    "self\\.(\\w+)": {
      "value": "self\\.(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:224"
      ]
    },
    "self\\\\.assertEqual\\\\((.*?),\\\\s*(.*?)\\\\)": {
      "value": "self\\\\.assertEqual\\\\((.*?),\\\\s*(.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:248"
      ]
    },
    "self\\\\.assertFalse\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertFalse\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:251"
      ]
    },
    "self\\\\.assertIsNone\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertIsNone\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:252"
      ]
    },
    "self\\\\.assertIsNotNone\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertIsNotNone\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:253"
      ]
    },
    "self\\\\.assertNotEqual\\\\((.*?),\\\\s*(.*?)\\\\)": {
      "value": "self\\\\.assertNotEqual\\\\((.*?),\\\\s*(.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:249"
      ]
    },
    "self\\\\.assertTrue\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertTrue\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:250"
      ]
    },
    "send_agent_completed": {
      "value": "send_agent_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:90"
      ]
    },
    "send_agent_started": {
      "value": "send_agent_started",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:86"
      ]
    },
    "send_agent_thinking": {
      "value": "send_agent_thinking",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:87"
      ]
    },
    "send_to_thread blocks:": {
      "value": "send_to_thread blocks:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:215"
      ]
    },
    "send_to_thread result:": {
      "value": "send_to_thread result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:208"
      ]
    },
    "send_to_thread time:": {
      "value": "send_to_thread time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:209"
      ]
    },
    "send_to_user blocks:": {
      "value": "send_to_user blocks:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:214"
      ]
    },
    "send_to_user result:": {
      "value": "send_to_user result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:181"
      ]
    },
    "send_to_user time:": {
      "value": "send_to_user time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:182"
      ]
    },
    "send_tool_completed": {
      "value": "send_tool_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:89"
      ]
    },
    "send_tool_executing": {
      "value": "send_tool_executing",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:88"
      ]
    },
    "sensitive_": {
      "value": "sensitive_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:56"
      ]
    },
    "sensitive_data": {
      "value": "sensitive_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:56"
      ]
    },
    "sentiment": {
      "value": "sentiment",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:380"
      ]
    },
    "seq-": {
      "value": "seq-",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:219"
      ]
    },
    "sequence": {
      "value": "sequence",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:198",
        "scripts/websocket_performance_standalone_test.py:186",
        "scripts/websocket_performance_standalone_test.py:200"
      ]
    },
    "serial execution": {
      "value": "serial execution",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:217"
      ]
    },
    "serializers.py": {
      "value": "serializers.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:108"
      ]
    },
    "server_startup": {
      "value": "server_startup",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:37",
        "scripts/test_websocket_dev_mode.py:72"
      ]
    },
    "service": {
      "value": "service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:289",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:500",
        "auth_service/tests/factories/permission_factory.py:225",
        "scripts/auto_fix_test_sizes.py:367",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/staging_comprehensive_test.py:430",
        "scripts/staging_comprehensive_test.py:440",
        "scripts/staging_comprehensive_test.py:482",
        "scripts/test_auth_service_integration_fix.py:142"
      ]
    },
    "service health check failed:": {
      "value": "service health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:213"
      ]
    },
    "service is healthy": {
      "value": "service is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:206"
      ]
    },
    "service is running": {
      "value": "service is running",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:203"
      ]
    },
    "service issue...": {
      "value": "service issue...",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:71"
      ]
    },
    "service returned": {
      "value": "service returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:209"
      ]
    },
    "service unavailable": {
      "value": "service unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:96"
      ]
    },
    "service-test": {
      "value": "service-test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:173"
      ]
    },
    "service...": {
      "value": "service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:75"
      ]
    },
    "service1": {
      "value": "service1",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:164",
        "scripts/test_coordination_fixes.py:176"
      ]
    },
    "service2": {
      "value": "service2",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:167",
        "scripts/test_coordination_fixes.py:177"
      ]
    },
    "service:": {
      "value": "service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_health.py:76",
        "scripts/test_service_health_simple.py:43"
      ]
    },
    "service:auth_validate": {
      "value": "service:auth_validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:34"
      ]
    },
    "service:read": {
      "value": "service:read",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:108"
      ]
    },
    "service:session_create": {
      "value": "service:session_create",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:36"
      ]
    },
    "service:session_revoke": {
      "value": "service:session_revoke",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:37"
      ]
    },
    "service:user_lookup": {
      "value": "service:user_lookup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:35"
      ]
    },
    "service:write": {
      "value": "service:write",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:108"
      ]
    },
    "service@example.com": {
      "value": "service@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:174"
      ]
    },
    "service[: ]+(\\w+)": {
      "value": "service[: ]+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:150"
      ]
    },
    "service_discovery": {
      "value": "service_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:45"
      ]
    },
    "service_discovery         → test_09_service_discovery_timing_issues": {
      "value": "service_discovery         → test_09_service_discovery_timing_issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:395"
      ]
    },
    "service_health": {
      "value": "service_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:288"
      ]
    },
    "service_id": {
      "value": "service_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:109",
        "scripts/test_backend_auth_config.py:110"
      ]
    },
    "service_metrics": {
      "value": "service_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:292"
      ]
    },
    "service_registry": {
      "value": "service_registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:45"
      ]
    },
    "service_secret_configured": {
      "value": "service_secret_configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:111",
        "scripts/test_backend_auth_config.py:112"
      ]
    },
    "service_unavailable": {
      "value": "service_unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:124"
      ]
    },
    "services": {
      "value": "services",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:368",
        "scripts/batch_test_generator.py:142",
        "scripts/batch_test_generator.py:385",
        "scripts/batch_test_generator.py:385",
        "scripts/compliance/demo_test_size_enforcement.py:68",
        "scripts/manage_test_services.py:110",
        "scripts/test_collection_audit.py:400",
        "scripts/test_collection_audit.py:404",
        "scripts/test_docker_config.py:26",
        "scripts/test_docker_manager.py:72"
      ]
    },
    "services already healthy, reusing containers": {
      "value": "services already healthy, reusing containers",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:61"
      ]
    },
    "services ready": {
      "value": "services ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:70"
      ]
    },
    "services/test_synthetic_data_service_v3.py": {
      "value": "services/test_synthetic_data_service_v3.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:208"
      ]
    },
    "services:": {
      "value": "services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:52"
      ]
    },
    "session": {
      "value": "session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:94",
        "scripts/analyze_test_mocks.py:36",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/standardize_l3_test_names.py:204"
      ]
    },
    "session:": {
      "value": "session:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:173"
      ]
    },
    "session:test-session-1": {
      "value": "session:test-session-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:247"
      ]
    },
    "session:test-session-2": {
      "value": "session:test-session-2",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:252"
      ]
    },
    "session\\.(?:add|commit|query)": {
      "value": "session\\.(?:add|commit|query)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:34"
      ]
    },
    "session_": {
      "value": "session_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:54",
        "scripts/test_execution_tracker.py:212",
        "scripts/test_failure_tracker.py:21",
        "scripts/test_seed_data.py:310"
      ]
    },
    "session_created": {
      "value": "session_created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:29"
      ]
    },
    "session_expired": {
      "value": "session_expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:30"
      ]
    },
    "session_id": {
      "value": "session_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:54",
        "auth_service/tests/factories/audit_factory.py:156",
        "auth_service/tests/test_oauth_state_validation.py:95",
        "auth_service/tests/test_oauth_state_validation.py:96",
        "auth_service/tests/test_oauth_state_validation.py:139",
        "auth_service/tests/test_oauth_state_validation.py:157",
        "auth_service/tests/test_oauth_state_validation.py:247",
        "auth_service/tests/test_oauth_state_validation.py:293",
        "auth_service/tests/test_session_security_cycles_36_40.py:205",
        "scripts/setup_staging_test_account.py:139"
      ]
    },
    "session_manager.py": {
      "value": "session_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:91"
      ]
    },
    "session_type": {
      "value": "session_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:157"
      ]
    },
    "sessions, got": {
      "value": "sessions, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:141"
      ]
    },
    "set": {
      "value": "set",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:313"
      ]
    },
    "setUp": {
      "value": "setUp",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "settings.py": {
      "value": "settings.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:74"
      ]
    },
    "setup": {
      "value": "setup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640",
        "scripts/compliance/test_refactor_helper.py:210",
        "scripts/compliance/test_refactor_helper.py:211"
      ]
    },
    "setup.py": {
      "value": "setup.py",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:42"
      ]
    },
    "setupTests": {
      "value": "setupTests",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:654"
      ]
    },
    "setup_method": {
      "value": "setup_method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "setup_test_path": {
      "value": "setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:27",
        "scripts/check_test_import_order.py:33"
      ]
    },
    "setup_test_path()": {
      "value": "setup_test_path()",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:27"
      ]
    },
    "setup_test_path() not called": {
      "value": "setup_test_path() not called",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:52"
      ]
    },
    "setup_test_path\\(\\)\\n": {
      "value": "setup_test_path\\(\\)\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:36"
      ]
    },
    "severe blocking events!": {
      "value": "severe blocking events!",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:217"
      ]
    },
    "severities": {
      "value": "severities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:165",
        "scripts/compliance/fake_test_scanner.py:169",
        "scripts/compliance/fake_test_scanner.py:175",
        "scripts/compliance/fake_test_scanner.py:175",
        "scripts/compliance/fake_test_scanner.py:287"
      ]
    },
    "severity": {
      "value": "severity",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:290",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:431",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:670",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760"
      ]
    },
    "severity:error": {
      "value": "severity:error",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:211"
      ]
    },
    "severity_breakdown": {
      "value": "severity_breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:261",
        "scripts/remove_test_stubs.py:315"
      ]
    },
    "share": {
      "value": "share",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:28"
      ]
    },
    "shared": {
      "value": "shared",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:38",
        "scripts/test_secret_manager_debug.py:141",
        "scripts/test_secret_manager_debug.py:145",
        "scripts/test_secret_manager_debug.py:149",
        "scripts/test_secret_manager_debug.py:153",
        "scripts/test_secret_manager_debug.py:160"
      ]
    },
    "shared-state-parameter": {
      "value": "shared-state-parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:190"
      ]
    },
    "shared.isolated_environment.get_env": {
      "value": "shared.isolated_environment.get_env",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:45",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:61",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:78",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:210",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:250",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:260",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:270",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:287",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:315"
      ]
    },
    "shared_secrets_tested": {
      "value": "shared_secrets_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:416"
      ]
    },
    "shared_utilities": {
      "value": "shared_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:332",
        "scripts/compliance/test_refactor_helper.py:355",
        "scripts/compliance/test_refactor_helper.py:564"
      ]
    },
    "short": {
      "value": "short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:323",
        "auth_service/tests/test_critical_bugs.py:341"
      ]
    },
    "short test summary info": {
      "value": "short test summary info",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:49"
      ]
    },
    "short-term": {
      "value": "short-term",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:39"
      ]
    },
    "should be refactored manually": {
      "value": "should be refactored manually",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619"
      ]
    },
    "should be rejected": {
      "value": "should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:157"
      ]
    },
    "should be string, got": {
      "value": "should be string, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:285"
      ]
    },
    "should be supported for health endpoints": {
      "value": "should be supported for health endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:125"
      ]
    },
    "should be unique": {
      "value": "should be unique",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:195",
        "auth_service/tests/test_refresh_token_fix.py:196"
      ]
    },
    "should have failed but succeeded": {
      "value": "should have failed but succeeded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:230"
      ]
    },
    "should succeed": {
      "value": "should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:127",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:57",
        "auth_service/tests/test_refresh_token_fix.py:190"
      ]
    },
    "should-be-replaced": {
      "value": "should-be-replaced",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:426"
      ]
    },
    "should_allow_placeholders": {
      "value": "should_allow_placeholders",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:134",
        "scripts/test_secret_manager_builder_critical.py:148",
        "scripts/test_secret_manager_builder_critical.py:164",
        "scripts/test_secret_manager_builder_critical.py:178",
        "scripts/test_secret_manager_builder_critical.py:281",
        "scripts/test_secret_manager_builder_critical.py:356",
        "scripts/test_secret_manager_builder_critical.py:470"
      ]
    },
    "should_be_valid": {
      "value": "should_be_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:186",
        "scripts/test_database_url_builder_comprehensive.py:197",
        "scripts/test_database_url_builder_comprehensive.py:208",
        "scripts/test_database_url_builder_comprehensive.py:219",
        "scripts/test_database_url_builder_comprehensive.py:230",
        "scripts/test_database_url_builder_comprehensive.py:238"
      ]
    },
    "should_have_ssl": {
      "value": "should_have_ssl",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:111",
        "scripts/test_ssl_certificates_staging.py:116",
        "scripts/test_ssl_certificates_staging.py:148",
        "scripts/test_ssl_certificates_staging.py:150"
      ]
    },
    "side_effect =": {
      "value": "side_effect =",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:359"
      ]
    },
    "signature": {
      "value": "signature",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:90",
        "netra_backend/app/services/realistic_test_data/models.py:95",
        "netra_backend/app/services/realistic_test_data/models.py:100",
        "netra_backend/app/services/realistic_test_data/models.py:105"
      ]
    },
    "signup": {
      "value": "signup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:356"
      ]
    },
    "similar": {
      "value": "similar",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:327",
        "scripts/analyze_test_overlap.py:359",
        "scripts/analyze_test_overlap.py:353",
        "scripts/analyze_test_overlap.py:383",
        "scripts/analyze_test_overlap.py:384",
        "scripts/analyze_test_overlap.py:531",
        "scripts/analyze_test_overlap.py:659"
      ]
    },
    "similarity": {
      "value": "similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:426",
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "similarity relationships": {
      "value": "similarity relationships",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:79"
      ]
    },
    "similarity_type": {
      "value": "similarity_type",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:635"
      ]
    },
    "simple_test_tool": {
      "value": "simple_test_tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:92",
        "scripts/test_standalone_websocket.py:95"
      ]
    },
    "single_request_performance": {
      "value": "single_request_performance",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:327",
        "scripts/staging_comprehensive_test.py:334"
      ]
    },
    "site-packages": {
      "value": "site-packages",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:130",
        "scripts/compliance/project_test_validator.py:101",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/generate_test_audit.py:24",
        "scripts/test_exclusion_check.py:20"
      ]
    },
    "size": {
      "value": "size",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:322"
      ]
    },
    "sk-": {
      "value": "sk-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:250"
      ]
    },
    "sk-ant-prod-key-for-performance-test": {
      "value": "sk-ant-prod-key-for-performance-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:567"
      ]
    },
    "sk-ant-test-anthropic-key": {
      "value": "sk-ant-test-anthropic-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:79",
        "scripts/test_improved_environment_validation.py:80",
        "scripts/test_service_startup_with_missing_optionals.py:143"
      ]
    },
    "sk-ant-test-key": {
      "value": "sk-ant-test-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:24"
      ]
    },
    "sk-ant-test-key-for-production-deployment-123456789": {
      "value": "sk-ant-test-key-for-production-deployment-123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:91"
      ]
    },
    "sk-test-": {
      "value": "sk-test-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:84"
      ]
    },
    "skip": {
      "value": "skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:166"
      ]
    },
    "skipped": {
      "value": "skipped",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:421",
        "scripts/staging_comprehensive_test.py:463",
        "scripts/test_execution_tracker.py:292",
        "scripts/test_execution_tracker.py:315",
        "scripts/test_execution_tracker.py:358",
        "scripts/test_execution_tracker.py:383",
        "scripts/test_real_jwt_e2e.py:240",
        "scripts/test_real_jwt_e2e.py:270"
      ]
    },
    "skipped tests": {
      "value": "skipped tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:288"
      ]
    },
    "skipped_count": {
      "value": "skipped_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:113"
      ]
    },
    "skipped_tests": {
      "value": "skipped_tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:167"
      ]
    },
    "skipping all .env file loading (using GSM)": {
      "value": "skipping all .env file loading (using GSM)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:36"
      ]
    },
    "sleep": {
      "value": "sleep",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60",
        "scripts/autonomous_review/test_reviewer.py:164"
      ]
    },
    "sleep(": {
      "value": "sleep(",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:281"
      ]
    },
    "sleep_calls": {
      "value": "sleep_calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:32",
        "scripts/optimize_test_performance.py:113"
      ]
    },
    "slow": {
      "value": "slow",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:100"
      ]
    },
    "slow tests to improve CI/CD speed": {
      "value": "slow tests to improve CI/CD speed",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:269"
      ]
    },
    "slow_patterns": {
      "value": "slow_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:44",
        "scripts/optimize_test_performance.py:58",
        "scripts/optimize_test_performance.py:113",
        "scripts/optimize_test_performance.py:139",
        "scripts/optimize_test_performance.py:148",
        "scripts/optimize_test_performance.py:279",
        "scripts/optimize_test_performance.py:298",
        "scripts/optimize_test_performance.py:396"
      ]
    },
    "slowest_tests": {
      "value": "slowest_tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:700"
      ]
    },
    "slug": {
      "value": "slug",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:157",
        "scripts/test_seed_data.py:158",
        "scripts/test_seed_data.py:159",
        "scripts/test_seed_data.py:171"
      ]
    },
    "smart": {
      "value": "smart",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:587"
      ]
    },
    "smoke": {
      "value": "smoke",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:24",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:31",
        "scripts/run_all_test_categories.py:98",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/test_backend_optimized.py:83",
        "scripts/test_backend_ORIGINAL.py:37",
        "scripts/test_execution_tracker.py:106",
        "scripts/test_frontend_ORIGINAL.py:39",
        "scripts/test_frontend_simple.py:36"
      ]
    },
    "soak": {
      "value": "soak",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:102"
      ]
    },
    "socket": {
      "value": "socket",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:48"
      ]
    },
    "some_token": {
      "value": "some_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:293",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:108"
      ]
    },
    "some_value": {
      "value": "some_value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:163"
      ]
    },
    "source": {
      "value": "source",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:126",
        "scripts/test_redis_config_critical_failure.py:128",
        "scripts/test_redis_config_critical_failure.py:131",
        "scripts/test_redis_config_critical_failure.py:133",
        "scripts/test_redis_config_critical_failure.py:265",
        "scripts/test_redis_config_critical_failure.py:273",
        "scripts/test_redis_config_critical_failure.py:277",
        "scripts/test_redis_config_critical_failure.py:286",
        "scripts/test_redis_config_critical_failure.py:294",
        "scripts/test_redis_config_critical_failure.py:298"
      ]
    },
    "span_id": {
      "value": "span_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:60"
      ]
    },
    "spec.": {
      "value": "spec.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:99"
      ]
    },
    "specific-model": {
      "value": "specific-model",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:40"
      ]
    },
    "specific_run_id": {
      "value": "specific_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:153"
      ]
    },
    "split_by_": {
      "value": "split_by_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:717"
      ]
    },
    "split_by_category": {
      "value": "split_by_category",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:441"
      ]
    },
    "split_by_class": {
      "value": "split_by_class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:481"
      ]
    },
    "split_by_feature": {
      "value": "split_by_feature",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:514"
      ]
    },
    "splitting large file:": {
      "value": "splitting large file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "splitting_suggestions": {
      "value": "splitting_suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:495",
        "scripts/compliance/test_size_validator.py:498"
      ]
    },
    "sql error": {
      "value": "sql error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:359"
      ]
    },
    "sqlalchemy": {
      "value": "sqlalchemy",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:365",
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "sqlite": {
      "value": "sqlite",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:93",
        "auth_service/tests/test_auth_comprehensive.py:367"
      ]
    },
    "sqlite+aiosqlite:///:memory:": {
      "value": "sqlite+aiosqlite:///:memory:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:12",
        "auth_service/tests/integration/test_database_connection.py:55",
        "auth_service/tests/integration/test_database_connection.py:104",
        "auth_service/tests/integration/test_database_connection.py:221",
        "auth_service/tests/integration/test_database_connection.py:238",
        "scripts/run_agent_pipeline_test.py:40",
        "scripts/test_auth_database_sessions.py:129",
        "scripts/test_auth_database_sessions.py:269",
        "scripts/test_auth_database_sessions.py:307"
      ]
    },
    "sqlite:///test.db": {
      "value": "sqlite:///test.db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:174",
        "scripts/test_backend_port_binding.py:127"
      ]
    },
    "src": {
      "value": "src",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:186"
      ]
    },
    "ssl": {
      "value": "ssl",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:377",
        "scripts/test_auth_database_sessions.py:98",
        "scripts/test_auth_database_sessions.py:259",
        "scripts/test_redis_config_critical_failure.py:325",
        "scripts/test_redis_config_critical_failure.py:325",
        "scripts/test_redis_config_critical_failure.py:330",
        "scripts/test_ssl_certificates_staging.py:143",
        "scripts/test_ssl_certificates_staging.py:144"
      ]
    },
    "ssl.create_default_context": {
      "value": "ssl.create_default_context",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:364"
      ]
    },
    "ssl_ca_certs": {
      "value": "ssl_ca_certs",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:327",
        "scripts/test_redis_config_critical_failure.py:327",
        "scripts/test_redis_config_critical_failure.py:330"
      ]
    },
    "ssl_cert_reqs": {
      "value": "ssl_cert_reqs",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:326",
        "scripts/test_redis_config_critical_failure.py:326",
        "scripts/test_redis_config_critical_failure.py:330"
      ]
    },
    "ssl_enabled": {
      "value": "ssl_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:268",
        "scripts/test_redis_config_critical_failure.py:289"
      ]
    },
    "ssl_status": {
      "value": "ssl_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:378",
        "auth_service/tests/auth-service-down-critical-scenarios.py:378"
      ]
    },
    "ssl_valid": {
      "value": "ssl_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:373"
      ]
    },
    "stable_with_noise": {
      "value": "stable_with_noise",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:105"
      ]
    },
    "staging": {
      "value": "staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:31",
        "auth_service/test_staging_db_connection.py:36",
        "auth_service/test_staging_db_connection.py:123",
        "auth_service/test_url_construction.py:32",
        "auth_service/test_url_construction.py:63",
        "auth_service/test_url_construction.py:189",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:70",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:107",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:145",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:197"
      ]
    },
    "staging-clickhouse": {
      "value": "staging-clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:83"
      ]
    },
    "staging-clickhouse-secure-password-production-grade": {
      "value": "staging-clickhouse-secure-password-production-grade",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:693"
      ]
    },
    "staging-clickhouse.netrasystems": {
      "value": "staging-clickhouse.netrasystems",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:99"
      ]
    },
    "staging-client-id.apps.googleusercontent.com": {
      "value": "staging-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:53",
        "scripts/test_oauth_dev_config.py:60",
        "scripts/test_service_startup_with_missing_optionals.py:134"
      ]
    },
    "staging-client-secret": {
      "value": "staging-client-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:135"
      ]
    },
    "staging-db": {
      "value": "staging-db",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:78"
      ]
    },
    "staging-db-password": {
      "value": "staging-db-password",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:132"
      ]
    },
    "staging-fernet-key-32-chars-exactly-required-for-encryption": {
      "value": "staging-fernet-key-32-chars-exactly-required-for-encryption",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:692"
      ]
    },
    "staging-fernet-key-should-be-replaced": {
      "value": "staging-fernet-key-should-be-replaced",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:428"
      ]
    },
    "staging-jwt-secret-key-at-least-32-characters": {
      "value": "staging-jwt-secret-key-at-least-32-characters",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:125"
      ]
    },
    "staging-jwt-secret-key-should-be-replaced": {
      "value": "staging-jwt-secret-key-should-be-replaced",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:427"
      ]
    },
    "staging-jwt-secret-minimum-32-chars-required-for-security": {
      "value": "staging-jwt-secret-minimum-32-chars-required-for-security",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:689"
      ]
    },
    "staging-jwt-secret-should-be-from-secret-manager": {
      "value": "staging-jwt-secret-should-be-from-secret-manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:143"
      ]
    },
    "staging-password": {
      "value": "staging-password",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:80",
        "scripts/test/test_clickhouse_staging_fix.py:85"
      ]
    },
    "staging-postgres-password-from-gcp": {
      "value": "staging-postgres-password-from-gcp",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:144"
      ]
    },
    "staging-postgres-secure-password-with-special-chars!123": {
      "value": "staging-postgres-secure-password-with-special-chars!123",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:690"
      ]
    },
    "staging-quick": {
      "value": "staging-quick",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:100"
      ]
    },
    "staging-real": {
      "value": "staging-real",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:106"
      ]
    },
    "staging-redis": {
      "value": "staging-redis",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:82"
      ]
    },
    "staging-redis-password-from-gcp": {
      "value": "staging-redis-password-from-gcp",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:145"
      ]
    },
    "staging-redis-secure-password-minimum-length": {
      "value": "staging-redis-secure-password-minimum-length",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:691"
      ]
    },
    "staging-redis-url": {
      "value": "staging-redis-url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:74",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:328"
      ]
    },
    "staging-secret-345678": {
      "value": "staging-secret-345678",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:54",
        "scripts/test_oauth_dev_config.py:61"
      ]
    },
    "staging-service-secret-at-least-32-chars": {
      "value": "staging-service-secret-at-least-32-chars",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:127"
      ]
    },
    "staging-shared-postgres.c7vdhks7dj2k.us-central1.gcp.cloud.sql.googleapis.com": {
      "value": "staging-shared-postgres.c7vdhks7dj2k.us-central1.gcp.cloud.sql.googleapis.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:92"
      ]
    },
    "staging-test-secret": {
      "value": "staging-test-secret",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:117"
      ]
    },
    "staging-user": {
      "value": "staging-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:270"
      ]
    },
    "staging-user-001": {
      "value": "staging-user-001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:112"
      ]
    },
    "staging-workflows": {
      "value": "staging-workflows",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:28"
      ]
    },
    "staging@netrasystems.ai": {
      "value": "staging@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_token_fix.py:271",
        "auth_service/tests/test_refresh_token_fix.py:289",
        "auth_service/tests/test_refresh_token_fix.py:294"
      ]
    },
    "staging_auth": {
      "value": "staging_auth",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:162"
      ]
    },
    "staging_bypass": {
      "value": "staging_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:106"
      ]
    },
    "staging_db": {
      "value": "staging_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:241"
      ]
    },
    "staging_login_test_report.json": {
      "value": "staging_login_test_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:382"
      ]
    },
    "staging_pass": {
      "value": "staging_pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:243"
      ]
    },
    "staging_ready": {
      "value": "staging_ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:66",
        "scripts/test_staging_websocket_comprehensive.py:161",
        "scripts/test_staging_websocket_comprehensive.py:285",
        "scripts/test_staging_websocket_comprehensive.py:300",
        "scripts/test_staging_websocket_comprehensive.py:328"
      ]
    },
    "staging_refresh_token_format": {
      "value": "staging_refresh_token_format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:294"
      ]
    },
    "staging_session": {
      "value": "staging_session",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:154"
      ]
    },
    "staging_session=": {
      "value": "staging_session=",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:125"
      ]
    },
    "staging_test_credentials.json": {
      "value": "staging_test_credentials.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:123"
      ]
    },
    "staging_test_key": {
      "value": "staging_test_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:176"
      ]
    },
    "staging_test_report.json": {
      "value": "staging_test_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:506"
      ]
    },
    "staging_test_value": {
      "value": "staging_test_value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:177"
      ]
    },
    "staging_urls": {
      "value": "staging_urls",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:426",
        "scripts/staging_comprehensive_test.py:476"
      ]
    },
    "staging_user": {
      "value": "staging_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:242"
      ]
    },
    "staging_validation": {
      "value": "staging_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:123",
        "scripts/test_environment_validation_clean.py:177",
        "scripts/test_improved_environment_validation.py:123",
        "scripts/test_improved_environment_validation.py:240"
      ]
    },
    "staging_validation_": {
      "value": "staging_validation_",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:225"
      ]
    },
    "standalone": {
      "value": "standalone",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:473"
      ]
    },
    "standalone-chat-conn": {
      "value": "standalone-chat-conn",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:259"
      ]
    },
    "standalone-notifier-test": {
      "value": "standalone-notifier-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:161"
      ]
    },
    "standard": {
      "value": "standard",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:112",
        "scripts/compliance/test_refactor_helper.py:132",
        "scripts/test_service_startup.py:32"
      ]
    },
    "start": {
      "value": "start",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:164",
        "scripts/manage_test_services.py:201",
        "scripts/test_docker_manager.py:207",
        "scripts/test_docker_manager.py:219",
        "scripts/test_websocket_chat_simple.py:390",
        "scripts/test_websocket_chat_standalone.py:375"
      ]
    },
    "start_iteration": {
      "value": "start_iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:172"
      ]
    },
    "start_line": {
      "value": "start_line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:59"
      ]
    },
    "start_time": {
      "value": "start_time",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:81",
        "scripts/frontend_iterative_test_runner.py:141",
        "scripts/real_service_test_metrics.py:18",
        "scripts/real_service_test_metrics.py:85",
        "scripts/test_coordination_fixes.py:69",
        "scripts/test_parallel_docker_manager.py:38"
      ]
    },
    "starts_correctly": {
      "value": "starts_correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:239",
        "scripts/test_agent_execution_websocket_integration.py:316"
      ]
    },
    "startup": {
      "value": "startup",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:128"
      ]
    },
    "startup_readiness": {
      "value": "startup_readiness",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:124",
        "scripts/test_improved_environment_validation.py:124"
      ]
    },
    "startup_test": {
      "value": "startup_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:43"
      ]
    },
    "startup_timeout": {
      "value": "startup_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:44",
        "scripts/test_cold_start_e2e.py:148"
      ]
    },
    "state": {
      "value": "state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:208",
        "auth_service/tests/test_auth_comprehensive.py:209",
        "auth_service/tests/test_auth_comprehensive.py:234",
        "auth_service/tests/test_oauth_state_validation.py:243"
      ]
    },
    "state_manager.py": {
      "value": "state_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:90"
      ]
    },
    "statistics": {
      "value": "statistics",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:62",
        "scripts/optimize_test_performance.py:75",
        "scripts/optimize_test_performance.py:104"
      ]
    },
    "stats": {
      "value": "stats",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:118",
        "scripts/test_parallel_docker_manager.py:91",
        "scripts/test_parallel_docker_manager.py:176",
        "scripts/test_parallel_docker_manager.py:176",
        "scripts/test_parallel_docker_manager.py:177"
      ]
    },
    "status": {
      "value": "status",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:62",
        "auth_service/tests/auth-service-down-critical-scenarios.py:191",
        "auth_service/tests/test_auth_comprehensive.py:277",
        "auth_service/tests/test_auth_comprehensive.py:437",
        "auth_service/tests/test_auth_comprehensive_audit.py:47",
        "auth_service/tests/test_auth_comprehensive_audit.py:582",
        "auth_service/tests/test_auth_real_services_comprehensive.py:416",
        "auth_service/tests/test_critical_bugs_real.py:117",
        "scripts/fix_test_batch.py:248",
        "scripts/fix_test_batch.py:250"
      ]
    },
    "status-fail": {
      "value": "status-fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:316"
      ]
    },
    "status_code": {
      "value": "status_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:279",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "auth_service/tests/auth-service-down-critical-scenarios.py:294",
        "auth_service/tests/auth-service-down-critical-scenarios.py:306",
        "auth_service/tests/utils/assertion_helpers.py:165",
        "auth_service/tests/utils/assertion_helpers.py:166",
        "scripts/debug_cors_test.py:23",
        "scripts/debug_cors_test.py:37",
        "scripts/debug_cors_test.py:76"
      ]
    },
    "status_update": {
      "value": "status_update",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:199"
      ]
    },
    "stderr": {
      "value": "stderr",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:309"
      ]
    },
    "stdout": {
      "value": "stdout",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:308"
      ]
    },
    "step_count": {
      "value": "step_count",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:37",
        "scripts/test_intensive_serialization.py:71"
      ]
    },
    "still exists - SSOT VIOLATION!": {
      "value": "still exists - SSOT VIOLATION!",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:85"
      ]
    },
    "still use _serialize_message_safely (synchronous)": {
      "value": "still use _serialize_message_safely (synchronous)",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:253"
      ]
    },
    "stop": {
      "value": "stop",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115",
        "scripts/manage_test_services.py:177",
        "scripts/manage_test_services.py:203",
        "scripts/test_docker_manager.py:207",
        "scripts/test_docker_manager.py:224"
      ]
    },
    "store": {
      "value": "store",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:35"
      ]
    },
    "store_true": {
      "value": "store_true",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:235",
        "scripts/apply_fast_test_decorators.py:136",
        "scripts/apply_fast_test_decorators.py:137",
        "scripts/auto_fix_test_sizes.py:718",
        "scripts/auto_fix_test_sizes.py:724",
        "scripts/auto_fix_test_violations.py:919",
        "scripts/auto_fix_test_violations.py:921",
        "scripts/auto_fix_test_violations.py:923",
        "scripts/auto_fix_test_violations.py:929",
        "scripts/auto_fix_test_violations.py:931"
      ]
    },
    "strategies": {
      "value": "strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:92",
        "scripts/compliance/demo_test_size_enforcement.py:94",
        "scripts/compliance/demo_test_size_enforcement.py:95",
        "scripts/compliance/test_refactor_helper.py:106",
        "scripts/compliance/test_refactor_helper.py:710",
        "scripts/compliance/test_refactor_helper.py:714",
        "scripts/compliance/test_refactor_helper.py:729"
      ]
    },
    "strategy": {
      "value": "strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:589",
        "scripts/compliance/test_size_validator.py:398"
      ]
    },
    "stream": {
      "value": "stream",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:92"
      ]
    },
    "stress": {
      "value": "stress",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:101"
      ]
    },
    "stress_blocking": {
      "value": "stress_blocking",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:324",
        "scripts/test_blocking_analysis.py:335",
        "scripts/test_blocking_analysis.py:354"
      ]
    },
    "structural_similarity": {
      "value": "structural_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:374",
        "scripts/analyze_test_overlap.py:631"
      ]
    },
    "structure": {
      "value": "structure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:479",
        "scripts/test_data_validator_backup.py:229",
        "scripts/test_data_validator_backup.py:246"
      ]
    },
    "stub": {
      "value": "stub",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238",
        "scripts/comprehensive_test_fixer.py:216"
      ]
    },
    "sub": {
      "value": "sub",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:71",
        "auth_service/test_auth_direct.py:72",
        "auth_service/tests/factories/token_factory.py:36",
        "auth_service/tests/factories/token_factory.py:132",
        "auth_service/tests/factories/token_factory.py:248",
        "auth_service/tests/test_auth_comprehensive_audit.py:79",
        "auth_service/tests/test_auth_comprehensive_audit.py:80",
        "auth_service/tests/test_auth_comprehensive_audit.py:116",
        "auth_service/tests/test_auth_comprehensive_audit.py:187",
        "auth_service/tests/test_auth_comprehensive_audit.py:432"
      ]
    },
    "sub_agent_used": {
      "value": "sub_agent_used",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:90",
        "scripts/frontend_iterative_test_runner.py:151"
      ]
    },
    "subject": {
      "value": "subject",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:77"
      ]
    },
    "subprocess\\.": {
      "value": "subprocess\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:223"
      ]
    },
    "subprotocols": {
      "value": "subprotocols",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:28",
        "scripts/test_websocket_connection.py:36",
        "scripts/test_websocket_connection.py:44",
        "scripts/test_websocket_connection.py:53",
        "scripts/test_websocket_connection.py:63",
        "scripts/test_websocket_connection.py:64",
        "scripts/test_websocket_connection.py:64"
      ]
    },
    "subscription_service.py": {
      "value": "subscription_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:130"
      ]
    },
    "success": {
      "value": "success",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:67",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:106",
        "auth_service/tests/auth-service-down-critical-scenarios.py:281",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "auth_service/tests/auth-service-down-critical-scenarios.py:293",
        "auth_service/tests/auth-service-down-critical-scenarios.py:295",
        "auth_service/tests/factories/audit_factory.py:53",
        "auth_service/tests/factories/audit_factory.py:176",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:242"
      ]
    },
    "success_count": {
      "value": "success_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:210",
        "scripts/test_backend_optimized.py:268",
        "scripts/test_backend_optimized.py:335"
      ]
    },
    "success_rate": {
      "value": "success_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:157",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "scripts/batch_fix_and_test.py:145",
        "scripts/staging_comprehensive_test.py:422",
        "scripts/staging_comprehensive_test.py:464",
        "scripts/staging_comprehensive_test.py:512",
        "scripts/test_backend_optimized.py:211",
        "scripts/test_backend_optimized.py:233",
        "scripts/test_backend_optimized.py:233",
        "scripts/test_backend_optimized.py:269"
      ]
    },
    "successful": {
      "value": "successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:267",
        "scripts/test_blocking_analysis.py:288"
      ]
    },
    "successful validations": {
      "value": "successful validations",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:275"
      ]
    },
    "successful.": {
      "value": "successful.",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:796"
      ]
    },
    "successful_agents": {
      "value": "successful_agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:318",
        "scripts/test_agent_pipeline_simple.py:379",
        "scripts/test_agent_pipeline_simple.py:380",
        "scripts/test_agent_pipeline_simple.py:409",
        "scripts/test_agent_pipeline_simple.py:409"
      ]
    },
    "successful_requests": {
      "value": "successful_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265",
        "scripts/staging_comprehensive_test.py:377"
      ]
    },
    "successfully": {
      "value": "successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:100"
      ]
    },
    "sufficient": {
      "value": "sufficient",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:55",
        "scripts/test_adaptive_workflow_direct.py:127",
        "scripts/test_adaptive_workflow_direct.py:165",
        "scripts/test_adaptive_workflow_local.py:93"
      ]
    },
    "suggest": {
      "value": "suggest",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:677",
        "scripts/compliance/test_refactor_helper.py:712"
      ]
    },
    "suggested_fixes": {
      "value": "suggested_fixes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:292",
        "scripts/test_failure_analyzer.py:80",
        "scripts/test_failure_analyzer.py:87",
        "scripts/test_failure_analyzer.py:96",
        "scripts/test_failure_analyzer.py:105",
        "scripts/test_failure_analyzer.py:113",
        "scripts/test_failure_analyzer.py:121",
        "scripts/test_failure_analyzer.py:129",
        "scripts/test_failure_analyzer.py:137",
        "scripts/test_failure_analyzer.py:391"
      ]
    },
    "suggested_workflow": {
      "value": "suggested_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:55"
      ]
    },
    "suggestion_profiles.py": {
      "value": "suggestion_profiles.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:56"
      ]
    },
    "suggestions": {
      "value": "suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:82"
      ]
    },
    "suites": {
      "value": "suites",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:262",
        "scripts/test_websocket_injection_fix_complete.py:333",
        "scripts/test_websocket_injection_fix_complete.py:372"
      ]
    },
    "summary": {
      "value": "summary",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:408",
        "scripts/analyze_test_mocks.py:191",
        "scripts/analyze_test_overlap.py:347",
        "scripts/analyze_test_overlap.py:366",
        "scripts/analyze_test_overlap.py:442",
        "scripts/analyze_test_overlap.py:444",
        "scripts/analyze_test_overlap.py:449",
        "scripts/analyze_test_overlap.py:451",
        "scripts/analyze_test_overlap.py:470",
        "scripts/analyze_test_overlap.py:523"
      ]
    },
    "super-secret-key-for-jwt-signing-do-not-share": {
      "value": "super-secret-key-for-jwt-signing-do-not-share",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:98"
      ]
    },
    "supervisor_agent": {
      "value": "supervisor_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:78"
      ]
    },
    "supervisor_agent_modern": {
      "value": "supervisor_agent_modern",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:79"
      ]
    },
    "supervisor_test_report.json": {
      "value": "supervisor_test_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:311"
      ]
    },
    "sync@example.com": {
      "value": "sync@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:64"
      ]
    },
    "sync_blocking": {
      "value": "sync_blocking",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:322",
        "scripts/test_blocking_analysis.py:329",
        "scripts/test_blocking_analysis.py:347"
      ]
    },
    "syntax error": {
      "value": "syntax error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:364"
      ]
    },
    "syntax errors remain - manual intervention may be needed": {
      "value": "syntax errors remain - manual intervention may be needed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:295"
      ]
    },
    "syntax errors remain:": {
      "value": "syntax errors remain:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:264"
      ]
    },
    "syntax_error": {
      "value": "syntax_error",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:200",
        "scripts/compliance/real_test_validator.py:96"
      ]
    },
    "syntax_valid": {
      "value": "syntax_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:307",
        "scripts/test_workflows_with_act.py:329",
        "scripts/test_workflows_with_act.py:345"
      ]
    },
    "sys": {
      "value": "sys",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "sys.path": {
      "value": "sys.path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:153"
      ]
    },
    "system": {
      "value": "system",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:213"
      ]
    },
    "system:manage_settings": {
      "value": "system:manage_settings",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:30"
      ]
    },
    "system:view_logs": {
      "value": "system:view_logs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:29"
      ]
    },
    "system:view_status": {
      "value": "system:view_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:187"
      ]
    },
    "system_message": {
      "value": "system_message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:44"
      ]
    },
    "system_prompt": {
      "value": "system_prompt",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:200",
        "scripts/test_seed_data.py:208",
        "scripts/test_seed_data.py:216",
        "scripts/test_seed_data.py:229"
      ]
    },
    "table": {
      "value": "table",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:434",
        "scripts/test_cors.py:434"
      ]
    },
    "table does not exist": {
      "value": "table does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:362"
      ]
    },
    "table {{.Container}}\t{{.MemUsage}}\t{{.MemPerc}}\t{{.CPUPerc}}": {
      "value": "table {{.Container}}\t{{.MemUsage}}\t{{.MemPerc}}\t{{.CPUPerc}}",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_resource_monitor.py:119"
      ]
    },
    "table_output": {
      "value": "table_output",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:138"
      ]
    },
    "table_output_format": {
      "value": "table_output_format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:161"
      ]
    },
    "tables_verified": {
      "value": "tables_verified",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:186",
        "scripts/test_clickhouse_startup_fix.py:186"
      ]
    },
    "tag_": {
      "value": "tag_",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:51"
      ]
    },
    "tags": {
      "value": "tags",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:51"
      ]
    },
    "tamper-test": {
      "value": "tamper-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:236"
      ]
    },
    "tamper@example.com": {
      "value": "tamper@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:237"
      ]
    },
    "target": {
      "value": "target",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:105",
        "scripts/analyze_test_mocks.py:126",
        "scripts/analyze_test_mocks.py:159",
        "scripts/analyze_test_mocks.py:181",
        "scripts/analyze_test_mocks.py:182"
      ]
    },
    "target_duration": {
      "value": "target_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:56",
        "scripts/test_backend_optimized.py:62",
        "scripts/test_backend_optimized.py:68",
        "scripts/test_backend_optimized.py:74",
        "scripts/test_backend_optimized.py:80",
        "scripts/test_backend_optimized.py:90",
        "scripts/test_backend_optimized.py:99",
        "scripts/test_backend_optimized.py:167",
        "scripts/test_backend_optimized.py:167"
      ]
    },
    "target_test": {
      "value": "target_test",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:124"
      ]
    },
    "targets": {
      "value": "targets",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:48"
      ]
    },
    "task": {
      "value": "task",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:88"
      ]
    },
    "tasklist /FI \"IMAGENAME eq node.exe\" /FO CSV": {
      "value": "tasklist /FI \"IMAGENAME eq node.exe\" /FO CSV",
      "category": "test_literals",
      "locations": [
        "scripts/test_windows_process_cleanup.py:29"
      ]
    },
    "tasks": {
      "value": "tasks",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:248"
      ]
    },
    "tax_season": {
      "value": "tax_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "team_collaboration": {
      "value": "team_collaboration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:101",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:496"
      ]
    },
    "team|collaboration|sharing|permissions": {
      "value": "team|collaboration|sharing|permissions",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:101"
      ]
    },
    "tearDown": {
      "value": "tearDown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "teardown": {
      "value": "teardown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "teardown_method": {
      "value": "teardown_method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "telemetry_service.py": {
      "value": "telemetry_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:127"
      ]
    },
    "temp:test-key-1": {
      "value": "temp:test-key-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:290"
      ]
    },
    "temp:test-key-2": {
      "value": "temp:test-key-2",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:291"
      ]
    },
    "temp_analysis_agent_": {
      "value": "temp_analysis_agent_",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:126"
      ]
    },
    "temperature": {
      "value": "temperature",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:201",
        "scripts/test_seed_data.py:209",
        "scripts/test_seed_data.py:217"
      ]
    },
    "tempfile\\.": {
      "value": "tempfile\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:225"
      ]
    },
    "template_generator": {
      "value": "template_generator",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:169"
      ]
    },
    "temporary data": {
      "value": "temporary data",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:290"
      ]
    },
    "test": {
      "value": "test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:16",
        "netra_backend/app/services/test_environment.py:53",
        "auth_service/debug_db_test.py:11",
        "auth_service/test_auth_direct.py:17",
        "auth_service/tests/conftest.py:57",
        "auth_service/tests/integration/test_database_connection.py:54",
        "auth_service/tests/integration/test_database_connection.py:103",
        "auth_service/tests/integration/test_database_connection.py:237",
        "auth_service/tests/integration/test_database_connection.py:288",
        "auth_service/tests/test_auth_comprehensive.py:57"
      ]
    },
    "test agents": {
      "value": "test agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:232"
      ]
    },
    "test categories passing": {
      "value": "test categories passing",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:134"
      ]
    },
    "test directories** identified\n- **": {
      "value": "test directories** identified\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:160"
      ]
    },
    "test failures": {
      "value": "test failures",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:231"
      ]
    },
    "test files": {
      "value": "test files",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:45",
        "scripts/autonomous_review/test_reviewer.py:181",
        "scripts/batch_test_generator.py:526",
        "scripts/compliance/test_size_validator.py:73",
        "scripts/fix_all_test_issues.py:217",
        "scripts/fix_test_syntax_errors.py:236",
        "scripts/generate_test_audit.py:176"
      ]
    },
    "test files are already failing!": {
      "value": "test files are already failing!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:723"
      ]
    },
    "test files for category '": {
      "value": "test files for category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:316"
      ]
    },
    "test files to check": {
      "value": "test files to check",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:144"
      ]
    },
    "test files to validate...": {
      "value": "test files to validate...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:83"
      ]
    },
    "test files** across the project (excluding dependencies)\n- **": {
      "value": "test files** across the project (excluding dependencies)\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:158"
      ]
    },
    "test files, found": {
      "value": "test files, found",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718"
      ]
    },
    "test files. Consider using mock LLM responses for faster testing.": {
      "value": "test files. Consider using mock LLM responses for faster testing.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:151"
      ]
    },
    "test files...": {
      "value": "test files...",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:169"
      ]
    },
    "test files:": {
      "value": "test files:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:82"
      ]
    },
    "test functions from": {
      "value": "test functions from",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75"
      ]
    },
    "test organizations": {
      "value": "test organizations",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:174"
      ]
    },
    "test quality issues": {
      "value": "test quality issues",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:257"
      ]
    },
    "test request": {
      "value": "test request",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:111"
      ]
    },
    "test requirement violations:": {
      "value": "test requirement violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:117"
      ]
    },
    "test stubs in production code": {
      "value": "test stubs in production code",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:48",
        "scripts/ci/check_test_stubs.py:61"
      ]
    },
    "test users": {
      "value": "test users",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:153"
      ]
    },
    "test'; DROP TABLE users; --": {
      "value": "test'; DROP TABLE users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:301",
        "scripts/test_signup_flow_manual.py:124"
      ]
    },
    "test(": {
      "value": "test(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "test(s) failed": {
      "value": "test(s) failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:428"
      ]
    },
    "test(s) failed. WebSocket CORS may need adjustment.": {
      "value": "test(s) failed. WebSocket CORS may need adjustment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:312"
      ]
    },
    "test*": {
      "value": "test*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:72"
      ]
    },
    "test*.py": {
      "value": "test*.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:41",
        "scripts/generate_test_audit.py:95"
      ]
    },
    "test-": {
      "value": "test-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:76",
        "auth_service/tests/test_auth_real_services_comprehensive.py:300",
        "auth_service/tests/test_auth_real_services_comprehensive.py:330",
        "auth_service/tests/test_auth_real_services_comprehensive.py:365",
        "scripts/setup_test_environment.py:127",
        "scripts/setup_test_environment.py:250",
        "scripts/setup_test_environment.py:252",
        "scripts/setup_test_environment.py:258"
      ]
    },
    "test-access-token": {
      "value": "test-access-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:260"
      ]
    },
    "test-act-simple.yml": {
      "value": "test-act-simple.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:284"
      ]
    },
    "test-agent": {
      "value": "test-agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:107"
      ]
    },
    "test-api-key": {
      "value": "test-api-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:88",
        "scripts/test_backend_ORIGINAL.py:94",
        "scripts/test_backend_ORIGINAL.py:95"
      ]
    },
    "test-auth": {
      "value": "test-auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:44"
      ]
    },
    "test-auth-code-12345": {
      "value": "test-auth-code-12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:62"
      ]
    },
    "test-authorization-code": {
      "value": "test-authorization-code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:424"
      ]
    },
    "test-backend": {
      "value": "test-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:44"
      ]
    },
    "test-branch": {
      "value": "test-branch",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:191"
      ]
    },
    "test-browser-user": {
      "value": "test-browser-user",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:140"
      ]
    },
    "test-clickhouse": {
      "value": "test-clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:43",
        "scripts/test_service_monitor.py:53"
      ]
    },
    "test-client-id": {
      "value": "test-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:85",
        "auth_service/tests/test_oauth_state_validation.py:108",
        "auth_service/tests/test_oauth_state_validation.py:152",
        "auth_service/tests/test_oauth_state_validation.py:171",
        "auth_service/tests/test_oauth_state_validation.py:233",
        "scripts/setup_staging_test_account.py:66"
      ]
    },
    "test-code-verifier-1234567890abcdef": {
      "value": "test-code-verifier-1234567890abcdef",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:113"
      ]
    },
    "test-dev-client-id.apps.googleusercontent.com": {
      "value": "test-dev-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:94",
        "scripts/test_improved_environment_validation.py:95"
      ]
    },
    "test-env": {
      "value": "test-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:189"
      ]
    },
    "test-fernet-key-32-chars-exactly": {
      "value": "test-fernet-key-32-chars-exactly",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:23"
      ]
    },
    "test-fernet-key-for-testing-only-base64encode=": {
      "value": "test-fernet-key-for-testing-only-base64encode=",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:87"
      ]
    },
    "test-gemini-key-from-env": {
      "value": "test-gemini-key-from-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:55",
        "scripts/test_staging_config.py:114"
      ]
    },
    "test-google-client": {
      "value": "test-google-client",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:96"
      ]
    },
    "test-google-client-id": {
      "value": "test-google-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:202"
      ]
    },
    "test-google-id": {
      "value": "test-google-id",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:59"
      ]
    },
    "test-google-id-": {
      "value": "test-google-id-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:48"
      ]
    },
    "test-google-secret": {
      "value": "test-google-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:97"
      ]
    },
    "test-jwt-key-from-env": {
      "value": "test-jwt-key-from-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:56",
        "scripts/test_staging_config.py:129"
      ]
    },
    "test-jwt-secret-key": {
      "value": "test-jwt-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:20"
      ]
    },
    "test-jwt-secret-key-64-characters-minimum-for-security": {
      "value": "test-jwt-secret-key-64-characters-minimum-for-security",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:41",
        "scripts/test_improved_environment_validation.py:42"
      ]
    },
    "test-jwt-secret-key-at-least-32-characters-long": {
      "value": "test-jwt-secret-key-at-least-32-characters-long",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:34",
        "scripts/test/test_clickhouse_staging_fix.py:74"
      ]
    },
    "test-jwt-secret-key-for-staging-64-chars-minimum-security": {
      "value": "test-jwt-secret-key-for-staging-64-chars-minimum-security",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:37"
      ]
    },
    "test-jwt-secret-key-that-is-long-enough-for-testing-purposes": {
      "value": "test-jwt-secret-key-that-is-long-enough-for-testing-purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:19"
      ]
    },
    "test-nonce-67890": {
      "value": "test-nonce-67890",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:74"
      ]
    },
    "test-org-1": {
      "value": "test-org-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:274"
      ]
    },
    "test-postgres": {
      "value": "test-postgres",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:42",
        "scripts/test_service_monitor.py:37"
      ]
    },
    "test-postgres-password": {
      "value": "test-postgres-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:21"
      ]
    },
    "test-queue": {
      "value": "test-queue",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:107"
      ]
    },
    "test-redis": {
      "value": "test-redis",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_manager.py:42",
        "scripts/test_service_monitor.py:46"
      ]
    },
    "test-redis-password": {
      "value": "test-redis-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:22"
      ]
    },
    "test-refresh-": {
      "value": "test-refresh-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:77"
      ]
    },
    "test-related process(es):": {
      "value": "test-related process(es):",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:106"
      ]
    },
    "test-run": {
      "value": "test-run",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:25",
        "scripts/migrate_test_ids.py:82"
      ]
    },
    "test-run (dict)": {
      "value": "test-run (dict)",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:29"
      ]
    },
    "test-run-": {
      "value": "test-run-",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:109"
      ]
    },
    "test-run-001": {
      "value": "test-run-001",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:279",
        "scripts/test_agent_execution_websocket_integration.py:282"
      ]
    },
    "test-run-123": {
      "value": "test-run-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:73",
        "scripts/test_websocket_direct.py:138"
      ]
    },
    "test-run-789": {
      "value": "test-run-789",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:127"
      ]
    },
    "test-secret": {
      "value": "test-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:86",
        "auth_service/tests/test_oauth_state_validation.py:109",
        "auth_service/tests/test_oauth_state_validation.py:153",
        "auth_service/tests/test_oauth_state_validation.py:172",
        "auth_service/tests/test_oauth_state_validation.py:234",
        "scripts/fix_authentication_test_tokens.py:36",
        "scripts/test_jwt_fix.py:13"
      ]
    },
    "test-secret-32-characters-or-more": {
      "value": "test-secret-32-characters-or-more",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:28",
        "scripts/test_auth_service_integration_fix.py:31"
      ]
    },
    "test-secret-key": {
      "value": "test-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:97"
      ]
    },
    "test-secret-key-32-characters-min": {
      "value": "test-secret-key-32-characters-min",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:40",
        "scripts/test_improved_environment_validation.py:41"
      ]
    },
    "test-secret-key-for-audit-testing-only-not-for-production": {
      "value": "test-secret-key-for-audit-testing-only-not-for-production",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:14"
      ]
    },
    "test-secret-key-for-staging": {
      "value": "test-secret-key-for-staging",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:72"
      ]
    },
    "test-secret-key-for-staging-32-chars-min": {
      "value": "test-secret-key-for-staging-32-chars-min",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:36"
      ]
    },
    "test-secret-key-for-testing-only-must-be-at-least-32-chars": {
      "value": "test-secret-key-for-testing-only-must-be-at-least-32-chars",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:86"
      ]
    },
    "test-service": {
      "value": "test-service",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:16",
        "auth_service/tests/factories/token_factory.py:106",
        "scripts/test_log_introspection.py:86"
      ]
    },
    "test-service-secret-at-least-32-characters": {
      "value": "test-service-secret-at-least-32-characters",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:36",
        "scripts/test/test_clickhouse_staging_fix.py:76"
      ]
    },
    "test-service-secret-for-audit-only": {
      "value": "test-service-secret-for-audit-only",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:15"
      ]
    },
    "test-service-secret-for-auth-service-32-chars-minimum-required-length-secure": {
      "value": "test-service-secret-for-auth-service-32-chars-minimum-required-length-secure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:60"
      ]
    },
    "test-session": {
      "value": "test-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:171"
      ]
    },
    "test-session-": {
      "value": "test-session-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:135"
      ]
    },
    "test-session-123": {
      "value": "test-session-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:35"
      ]
    },
    "test-staging-client-id": {
      "value": "test-staging-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:45",
        "auth_service/test_url_construction.py:46"
      ]
    },
    "test-staging-client-id.apps.googleusercontent.com": {
      "value": "test-staging-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:78",
        "scripts/test_improved_environment_validation.py:79"
      ]
    },
    "test-staging-client-secret": {
      "value": "test-staging-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:46",
        "auth_service/test_url_construction.py:47"
      ]
    },
    "test-staging-jwt-secret-key-12345678901234567890": {
      "value": "test-staging-jwt-secret-key-12345678901234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:43",
        "auth_service/test_url_construction.py:44"
      ]
    },
    "test-staging-service-secret-12345678901234567890": {
      "value": "test-staging-service-secret-12345678901234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:42",
        "auth_service/test_url_construction.py:43"
      ]
    },
    "test-state": {
      "value": "test-state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:238",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:381",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:425"
      ]
    },
    "test-thread": {
      "value": "test-thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_standalone_websocket.py:63",
        "scripts/test_websocket_direct.py:132"
      ]
    },
    "test-thread-": {
      "value": "test-thread-",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:108"
      ]
    },
    "test-thread-123": {
      "value": "test-thread-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:42"
      ]
    },
    "test-thread-456": {
      "value": "test-thread-456",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:116"
      ]
    },
    "test-thread-agent": {
      "value": "test-thread-agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:262"
      ]
    },
    "test-token": {
      "value": "test-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:115"
      ]
    },
    "test-token-123": {
      "value": "test-token-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:85"
      ]
    },
    "test-token-no-redis": {
      "value": "test-token-no-redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:443"
      ]
    },
    "test-token-server-error": {
      "value": "test-token-server-error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:144"
      ]
    },
    "test-token-when-service-down": {
      "value": "test-token-when-service-down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:99"
      ]
    },
    "test-url": {
      "value": "test-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:232"
      ]
    },
    "test-user": {
      "value": "test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:190",
        "auth_service/tests/unit/test_refresh_endpoint.py:203",
        "auth_service/tests/unit/test_refresh_endpoint.py:227",
        "auth_service/tests/unit/test_refresh_endpoint.py:239",
        "scripts/fix_authentication_test_tokens.py:53",
        "scripts/test_adaptive_workflow_direct.py:111",
        "scripts/test_agent_recovery_simple.py:74",
        "scripts/test_jwt_fix.py:30",
        "scripts/test_staging_jwt.py:23",
        "scripts/test_standalone_websocket.py:62"
      ]
    },
    "test-user-": {
      "value": "test-user-",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:32",
        "scripts/setup_staging_test_account.py:89"
      ]
    },
    "test-user-001": {
      "value": "test-user-001",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:40"
      ]
    },
    "test-user-1": {
      "value": "test-user-1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:61",
        "scripts/test_seed_data.py:248"
      ]
    },
    "test-user-123": {
      "value": "test-user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:134",
        "auth_service/tests/test_auth_comprehensive.py:151",
        "auth_service/tests/test_refresh_critical_fix.py:28",
        "auth_service/tests/test_refresh_token_fix.py:34",
        "auth_service/tests/unit/test_refresh_endpoint.py:157",
        "auth_service/tests/unit/test_refresh_endpoint.py:178",
        "scripts/test_websocket_standalone.py:115"
      ]
    },
    "test-user-2": {
      "value": "test-user-2",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:253"
      ]
    },
    "test-user-456": {
      "value": "test-user-456",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:43"
      ]
    },
    "test-user-agent": {
      "value": "test-user-agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:261"
      ]
    },
    "test-user-id": {
      "value": "test-user-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:115",
        "auth_service/tests/test_signup_flow_comprehensive.py:132",
        "auth_service/tests/test_signup_flow_comprehensive.py:331",
        "auth_service/tests/test_signup_flow_comprehensive.py:346"
      ]
    },
    "test.": {
      "value": "test.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:233"
      ]
    },
    "test.agent@staging.netrasystems.ai": {
      "value": "test.agent@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:108",
        "scripts/test_staging_login_automated.py:56"
      ]
    },
    "test.pipeline.": {
      "value": "test.pipeline.",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:25"
      ]
    },
    "test/repo": {
      "value": "test/repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:46",
        "scripts/test_verify_workflow.py:64",
        "scripts/test_verify_workflow_status.py:90",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106"
      ]
    },
    "test1": {
      "value": "test1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:370",
        "scripts/analyze_test_overlap.py:424",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:591",
        "scripts/analyze_test_overlap.py:606"
      ]
    },
    "test123": {
      "value": "test123",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:58"
      ]
    },
    "test123456": {
      "value": "test123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:49"
      ]
    },
    "test1@example.com": {
      "value": "test1@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:62"
      ]
    },
    "test1_category": {
      "value": "test1_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:625"
      ]
    },
    "test1_complexity": {
      "value": "test1_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:638"
      ]
    },
    "test1_file": {
      "value": "test1_file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:623"
      ]
    },
    "test1_lines": {
      "value": "test1_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:636"
      ]
    },
    "test1_name": {
      "value": "test1_name",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:624"
      ]
    },
    "test2": {
      "value": "test2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:371",
        "scripts/analyze_test_overlap.py:425",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:607"
      ]
    },
    "test2_category": {
      "value": "test2_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:628"
      ]
    },
    "test2_complexity": {
      "value": "test2_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:639"
      ]
    },
    "test2_file": {
      "value": "test2_file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:626"
      ]
    },
    "test2_lines": {
      "value": "test2_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:637"
      ]
    },
    "test2_name": {
      "value": "test2_name",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:627"
      ]
    },
    "test:fast": {
      "value": "test:fast",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:284"
      ]
    },
    "test@example.com": {
      "value": "test@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:33",
        "auth_service/tests/test_auth_comprehensive.py:135",
        "auth_service/tests/test_auth_comprehensive.py:322",
        "auth_service/tests/test_auth_comprehensive.py:378",
        "auth_service/tests/test_auth_comprehensive.py:401",
        "auth_service/tests/test_auth_real_services_comprehensive.py:176",
        "auth_service/tests/test_auth_real_services_comprehensive.py:218",
        "auth_service/tests/test_auth_real_services_comprehensive.py:268",
        "auth_service/tests/test_auth_real_services_comprehensive.py:495",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:26"
      ]
    },
    "test@netra.ai": {
      "value": "test@netra.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:31"
      ]
    },
    "test@netrasystems.ai": {
      "value": "test@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:48"
      ]
    },
    "test@real-validation.com": {
      "value": "test@real-validation.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:154"
      ]
    },
    "test@staging.netrasystems.ai": {
      "value": "test@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:29",
        "auth_service/tests/test_refresh_critical_fix.py:60",
        "auth_service/tests/test_refresh_critical_fix.py:61"
      ]
    },
    "test\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "test\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:420"
      ]
    },
    "test_": {
      "value": "test_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121",
        "auth_service/tests/test_all_imports.py:39",
        "auth_service/tests/test_critical_bugs.py:373",
        "scripts/analyze_test_overlap.py:98",
        "scripts/analyze_test_overlap.py:123",
        "scripts/auto_fix_test_sizes.py:103",
        "scripts/auto_fix_test_sizes.py:448",
        "scripts/auto_fix_test_violations.py:106",
        "scripts/auto_fix_test_violations.py:183"
      ]
    },
    "test_(\\w+)_": {
      "value": "test_(\\w+)_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:527"
      ]
    },
    "test_*.py": {
      "value": "test_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:141",
        "scripts/align_test_imports.py:70",
        "scripts/align_test_imports.py:75",
        "scripts/apply_fast_test_decorators.py:164",
        "scripts/autonomous_review/test_reviewer.py:139",
        "scripts/autonomous_review/test_reviewer.py:221",
        "scripts/check_test_import_order.py:65",
        "scripts/compliance/test_limits_checker.py:56",
        "scripts/compliance/test_size_validator.py:143",
        "scripts/e2e_test_fixer.py:197"
      ]
    },
    "test_.*?(\\w+)_\\w+$": {
      "value": "test_.*?(\\w+)_\\w+$",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:528"
      ]
    },
    "test_.*_e2e|e2e_test_|TestE2E|test_end_to_end": {
      "value": "test_.*_e2e|e2e_test_|TestE2E|test_end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:86"
      ]
    },
    "test_.*_integration|integration_test_|TestIntegration": {
      "value": "test_.*_integration|integration_test_|TestIntegration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:85"
      ]
    },
    "test_.*_load|load_test_|TestLoad": {
      "value": "test_.*_load|load_test_|TestLoad",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:90"
      ]
    },
    "test_.*_performance|performance_test_|TestPerformance|test_.*_perf": {
      "value": "test_.*_performance|performance_test_|TestPerformance|test_.*_perf",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:88"
      ]
    },
    "test_.*_real_llm|real_llm_test_|with_real_llm|@real_llm|@pytest\\.mark\\.real_llm": {
      "value": "test_.*_real_llm|real_llm_test_|with_real_llm|@real_llm|@pytest\\.mark\\.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:87"
      ]
    },
    "test_.*_security|security_test_|TestSecurity": {
      "value": "test_.*_security|security_test_|TestSecurity",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:89"
      ]
    },
    "test_.*_unit|unit_test_|TestUnit": {
      "value": "test_.*_unit|unit_test_|TestUnit",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:84"
      ]
    },
    "test_adaptive_workflow_direct.py": {
      "value": "test_adaptive_workflow_direct.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:276"
      ]
    },
    "test_agent": {
      "value": "test_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:272",
        "scripts/test_standalone_websocket.py:76",
        "scripts/test_websocket_chat_simple.py:195",
        "scripts/test_websocket_chat_standalone.py:194",
        "scripts/test_websocket_direct.py:141",
        "scripts/test_websocket_standalone.py:130",
        "scripts/websocket_performance_standalone_test.py:88"
      ]
    },
    "test_agent_metrics_collection.py": {
      "value": "test_agent_metrics_collection.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:152"
      ]
    },
    "test_agent_priority_queue.py": {
      "value": "test_agent_priority_queue.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:151"
      ]
    },
    "test_async_token": {
      "value": "test_async_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:74"
      ]
    },
    "test_auth_config_": {
      "value": "test_auth_config_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:175"
      ]
    },
    "test_auth_direct": {
      "value": "test_auth_direct",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:14",
        "auth_service/test_auth_direct.py:15",
        "auth_service/test_auth_direct.py:16",
        "auth_service/test_auth_direct.py:17"
      ]
    },
    "test_auth_fix": {
      "value": "test_auth_fix",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_fix_simple.py:24",
        "scripts/test_auth_fix_simple.py:25",
        "scripts/test_auth_fix_simple.py:26",
        "scripts/test_auth_fix_simple.py:27",
        "scripts/test_auth_fix_simple.py:28",
        "scripts/test_auth_service_integration_fix.py:27",
        "scripts/test_auth_service_integration_fix.py:28",
        "scripts/test_auth_service_integration_fix.py:29",
        "scripts/test_auth_service_integration_fix.py:30",
        "scripts/test_auth_service_integration_fix.py:31"
      ]
    },
    "test_backend": {
      "value": "test_backend",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_categories.py": {
      "value": "test_categories.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:205"
      ]
    },
    "test_categorization.json": {
      "value": "test_categorization.json",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:21"
      ]
    },
    "test_clickhouse_event_count": {
      "value": "test_clickhouse_event_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:259"
      ]
    },
    "test_collection_metrics.json": {
      "value": "test_collection_metrics.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:426"
      ]
    },
    "test_config.py": {
      "value": "test_config.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:215",
        "scripts/align_test_imports.py:233"
      ]
    },
    "test_configs": {
      "value": "test_configs",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:66",
        "scripts/generate_test_audit.py:92",
        "scripts/generate_test_audit.py:190",
        "scripts/generate_test_audit.py:210",
        "scripts/generate_test_audit.py:211"
      ]
    },
    "test_conn": {
      "value": "test_conn",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:149",
        "scripts/websocket_performance_standalone_test.py:132"
      ]
    },
    "test_conn_1": {
      "value": "test_conn_1",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:38",
        "scripts/test/test_presence_detection.py:39",
        "scripts/test/test_presence_detection.py:43",
        "scripts/test/test_presence_detection.py:44",
        "scripts/test/test_presence_detection.py:48",
        "scripts/test/test_presence_detection.py:53",
        "scripts/test/test_presence_detection.py:54"
      ]
    },
    "test_connection": {
      "value": "test_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:93"
      ]
    },
    "test_count": {
      "value": "test_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:209",
        "scripts/test_backend_optimized.py:234",
        "scripts/test_backend_optimized.py:267",
        "scripts/test_backend_optimized.py:334"
      ]
    },
    "test_coverage_remediation_report.md": {
      "value": "test_coverage_remediation_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:535"
      ]
    },
    "test_critical_bugs": {
      "value": "test_critical_bugs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:341"
      ]
    },
    "test_critical_bugs_restore": {
      "value": "test_critical_bugs_restore",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:354"
      ]
    },
    "test_data": {
      "value": "test_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:56",
        "scripts/test_execution_tracker.py:73",
        "scripts/test_staging_websocket_comprehensive.py:198"
      ]
    },
    "test_database_connection": {
      "value": "test_database_connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:42",
        "auth_service/tests/integration/test_database_connection.py:43",
        "auth_service/tests/integration/test_database_connection.py:54",
        "auth_service/tests/integration/test_database_connection.py:55",
        "auth_service/tests/integration/test_database_connection.py:56",
        "auth_service/tests/integration/test_database_connection.py:72",
        "auth_service/tests/integration/test_database_connection.py:73",
        "auth_service/tests/integration/test_database_connection.py:74",
        "auth_service/tests/integration/test_database_connection.py:75",
        "auth_service/tests/integration/test_database_connection.py:76"
      ]
    },
    "test_database_manager": {
      "value": "test_database_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:199",
        "auth_service/tests/integration/test_database_connection.py:200",
        "auth_service/tests/integration/test_database_connection.py:209",
        "auth_service/tests/integration/test_database_connection.py:210",
        "auth_service/tests/integration/test_database_connection.py:237",
        "auth_service/tests/integration/test_database_connection.py:238",
        "auth_service/tests/integration/test_database_connection.py:239"
      ]
    },
    "test_db": {
      "value": "test_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_docker_hostname_resolution.py:49",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:77",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:106",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:132",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:159",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:186"
      ]
    },
    "test_deployment_edge_cases.py": {
      "value": "test_deployment_edge_cases.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:148"
      ]
    },
    "test_details": {
      "value": "test_details",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:212"
      ]
    },
    "test_dev": {
      "value": "test_dev",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:124",
        "auth_service/tests/test_redis_staging_fixes.py:125"
      ]
    },
    "test_device": {
      "value": "test_device",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:119"
      ]
    },
    "test_dir": {
      "value": "test_dir",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:164",
        "scripts/unified_test_config.py:173",
        "scripts/unified_test_config.py:182",
        "scripts/unified_test_config.py:356",
        "scripts/unified_test_config.py:411",
        "scripts/unified_test_config.py:422",
        "scripts/unified_test_config.py:423"
      ]
    },
    "test_directories": {
      "value": "test_directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:63",
        "scripts/generate_test_audit.py:76",
        "scripts/generate_test_audit.py:147",
        "scripts/generate_test_audit.py:189",
        "scripts/generate_test_audit.py:197",
        "scripts/generate_test_audit.py:226",
        "scripts/generate_test_audit.py:282"
      ]
    },
    "test_discovery.py": {
      "value": "test_discovery.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:314",
        "scripts/align_test_imports.py:338"
      ]
    },
    "test_distribution": {
      "value": "test_distribution",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:411"
      ]
    },
    "test_email": {
      "value": "test_email",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:46"
      ]
    },
    "test_environment_config": {
      "value": "test_environment_config",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:103",
        "scripts/frontend_iterative_test_runner.py:371",
        "scripts/frontend_iterative_test_runner.py:456",
        "scripts/frontend_iterative_test_runner.py:484"
      ]
    },
    "test_environment_detection": {
      "value": "test_environment_detection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:282",
        "auth_service/tests/integration/test_database_connection.py:288",
        "auth_service/tests/integration/test_database_connection.py:294"
      ]
    },
    "test_environment_isolation_simple.py": {
      "value": "test_environment_isolation_simple.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_remediation_sample.py:20"
      ]
    },
    "test_environment_validator.py": {
      "value": "test_environment_validator.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_remediation_sample.py:21"
      ]
    },
    "test_execution.db": {
      "value": "test_execution.db",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:73"
      ]
    },
    "test_failure_report.md": {
      "value": "test_failure_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:33",
        "scripts/test_failure_analyzer.py:436"
      ]
    },
    "test_failures": {
      "value": "test_failures",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:117",
        "scripts/team_updates_test_analyzer.py:28",
        "scripts/test_comprehensive_scanner.py:19",
        "scripts/test_failure_tracker.py:18"
      ]
    },
    "test_failures/fix_tasks.json": {
      "value": "test_failures/fix_tasks.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:218"
      ]
    },
    "test_failures/process_b_tasks.json": {
      "value": "test_failures/process_b_tasks.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:243"
      ]
    },
    "test_file": {
      "value": "test_file",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:255"
      ]
    },
    "test_file_size": {
      "value": "test_file_size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:42",
        "scripts/compliance/test_limits_checker.py:108",
        "scripts/compliance/test_violations_reporter.py:30"
      ]
    },
    "test_fix_results_": {
      "value": "test_fix_results_",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:22"
      ]
    },
    "test_fixtures": {
      "value": "test_fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:261"
      ]
    },
    "test_framework": {
      "value": "test_framework",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:32",
        "scripts/align_test_imports.py:215",
        "scripts/align_test_imports.py:314",
        "scripts/business_value_test_index.py:123",
        "scripts/compliance/test_size_validator.py:131",
        "scripts/generate_test_audit.py:121",
        "scripts/standardize_l3_test_names.py:58",
        "scripts/unified_test_config.py:15",
        "scripts/validate_llm_test_models.py:46"
      ]
    },
    "test_framework.docker_port_discovery": {
      "value": "test_framework.docker_port_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:43"
      ]
    },
    "test_framework.service_orchestrator": {
      "value": "test_framework.service_orchestrator",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:42"
      ]
    },
    "test_framework.test_managers": {
      "value": "test_framework.test_managers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:87"
      ]
    },
    "test_framework.test_runner": {
      "value": "test_framework.test_runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:56"
      ]
    },
    "test_framework/test_config.py": {
      "value": "test_framework/test_config.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:27"
      ]
    },
    "test_framework_size": {
      "value": "test_framework_size",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:117",
        "scripts/generate_test_audit.py:124",
        "scripts/generate_test_audit.py:161"
      ]
    },
    "test_frameworks": {
      "value": "test_frameworks",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:68"
      ]
    },
    "test_frontend": {
      "value": "test_frontend",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_function_complexity": {
      "value": "test_function_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:44",
        "scripts/compliance/test_limits_checker.py:150",
        "scripts/compliance/test_violations_reporter.py:31"
      ]
    },
    "test_functions": {
      "value": "test_functions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:95"
      ]
    },
    "test_gcp_staging_database_index_creation_skipped.py": {
      "value": "test_gcp_staging_database_index_creation_skipped.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:150"
      ]
    },
    "test_gcp_staging_startup_sequence_robustness.py": {
      "value": "test_gcp_staging_startup_sequence_robustness.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:149"
      ]
    },
    "test_history.json": {
      "value": "test_history.json",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:18"
      ]
    },
    "test_id": {
      "value": "test_id",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:48",
        "scripts/test_execution_tracker.py:442"
      ]
    },
    "test_imports": {
      "value": "test_imports",
      "category": "test_literals",
      "locations": [
        "scripts/test_collection_audit.py:261"
      ]
    },
    "test_integration": {
      "value": "test_integration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:264",
        "scripts/compliance/real_test_validator.py:226"
      ]
    },
    "test_issues.json": {
      "value": "test_issues.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:174"
      ]
    },
    "test_jwt_secret_key_that_is_long_enough_for_testing_purposes": {
      "value": "test_jwt_secret_key_that_is_long_enough_for_testing_purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:13"
      ]
    },
    "test_jwt_secret_key_that_is_long_enough_for_testing_purposes_and_secure": {
      "value": "test_jwt_secret_key_that_is_long_enough_for_testing_purposes_and_secure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:59"
      ]
    },
    "test_key": {
      "value": "test_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:160",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:161",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:162",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:173",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:174",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:175",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:183",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:184",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:185"
      ]
    },
    "test_managers": {
      "value": "test_managers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:80"
      ]
    },
    "test_message": {
      "value": "test_message",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:52",
        "scripts/test_cold_start_e2e.py:348"
      ]
    },
    "test_message_response": {
      "value": "test_message_response",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:162"
      ]
    },
    "test_methods": {
      "value": "test_methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:330"
      ]
    },
    "test_metrics": {
      "value": "test_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:30"
      ]
    },
    "test_mode": {
      "value": "test_mode",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:64"
      ]
    },
    "test_name": {
      "value": "test_name",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:257",
        "scripts/continuous_e2e_test_runner.py:283",
        "scripts/frontend_iterative_test_runner.py:518",
        "scripts/setup_staging_test_account.py:47",
        "scripts/staging_comprehensive_test.py:429",
        "scripts/staging_comprehensive_test.py:439",
        "scripts/staging_comprehensive_test.py:482",
        "scripts/test_agent_orchestration_recovery.py:55",
        "scripts/test_agent_orchestration_recovery.py:109",
        "scripts/test_agent_orchestration_recovery.py:167"
      ]
    },
    "test_oauth_regression": {
      "value": "test_oauth_regression",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:70",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:71",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:74",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:75",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:107",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:108",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:111",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:112",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:145",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:146"
      ]
    },
    "test_overlap_report.json": {
      "value": "test_overlap_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:498"
      ]
    },
    "test_overlap_report.md": {
      "value": "test_overlap_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:506"
      ]
    },
    "test_pass": {
      "value": "test_pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:68",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:51",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:79",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:108",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:134",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:161",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:188",
        "scripts/test_seed_data.py:37",
        "scripts/test_seed_data.py:53",
        "scripts/test_service_monitor.py:40"
      ]
    },
    "test_password_123": {
      "value": "test_password_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:26"
      ]
    },
    "test_postgres_user_count": {
      "value": "test_postgres_user_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:247"
      ]
    },
    "test_priority": {
      "value": "test_priority",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:185"
      ]
    },
    "test_realistic_data_integration.py": {
      "value": "test_realistic_data_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:207"
      ]
    },
    "test_redis_connected_clients": {
      "value": "test_redis_connected_clients",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:253"
      ]
    },
    "test_redis_staging": {
      "value": "test_redis_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:21",
        "auth_service/tests/test_redis_staging_fixes.py:23",
        "auth_service/tests/test_redis_staging_fixes.py:24",
        "auth_service/tests/test_redis_staging_fixes.py:42",
        "auth_service/tests/test_redis_staging_fixes.py:43",
        "auth_service/tests/test_redis_staging_fixes.py:44",
        "auth_service/tests/test_redis_staging_fixes.py:45",
        "auth_service/tests/test_redis_staging_fixes.py:63",
        "auth_service/tests/test_redis_staging_fixes.py:65",
        "auth_service/tests/test_redis_staging_fixes.py:66"
      ]
    },
    "test_redis_used_memory_bytes": {
      "value": "test_redis_used_memory_bytes",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:254"
      ]
    },
    "test_refresh_token_123": {
      "value": "test_refresh_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:38",
        "auth_service/tests/test_refresh_endpoint_simple.py:19"
      ]
    },
    "test_refresh_token_12345": {
      "value": "test_refresh_token_12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_real_services_comprehensive.py:124",
        "scripts/test_staging_refresh_format.py:25"
      ]
    },
    "test_report_*.json": {
      "value": "test_report_*.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:89",
        "scripts/test_comprehensive_scanner.py:140"
      ]
    },
    "test_report_critical.json": {
      "value": "test_report_critical.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:264"
      ]
    },
    "test_report_integration.json": {
      "value": "test_report_integration.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:262"
      ]
    },
    "test_report_stress.json": {
      "value": "test_report_stress.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:263"
      ]
    },
    "test_report_unit.json": {
      "value": "test_report_unit.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:261"
      ]
    },
    "test_reports": {
      "value": "test_reports",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:415",
        "scripts/analyze_test_overlap.py:498",
        "scripts/analyze_test_overlap.py:506",
        "scripts/analyze_test_overlap.py:511",
        "scripts/business_value_test_index.py:573",
        "scripts/business_value_test_index.py:719",
        "scripts/comprehensive_test_fixer.py:349",
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:207",
        "scripts/fix_test_batch.py:349"
      ]
    },
    "test_reports/real_test_violations.json": {
      "value": "test_reports/real_test_violations.json",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:596"
      ]
    },
    "test_results": {
      "value": "test_results",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:26",
        "scripts/real_service_test_metrics.py:76",
        "scripts/real_service_test_metrics.py:130",
        "scripts/real_service_test_metrics.py:131",
        "scripts/real_service_test_metrics.py:194"
      ]
    },
    "test_results.json": {
      "value": "test_results.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:573",
        "scripts/test_example_message_flow.py:133"
      ]
    },
    "test_results_100_iterations.json": {
      "value": "test_results_100_iterations.json",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:137"
      ]
    },
    "test_routes/test_websocket_advanced.py": {
      "value": "test_routes/test_websocket_advanced.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:154"
      ]
    },
    "test_run": {
      "value": "test_run",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:115",
        "scripts/migrate_test_ids.py:26",
        "scripts/migrate_test_ids.py:82",
        "scripts/test_supervisor_websocket_integration.py:113"
      ]
    },
    "test_run_": {
      "value": "test_run_",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:132"
      ]
    },
    "test_run_001": {
      "value": "test_run_001",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:62",
        "scripts/test_corpus_admin_simple.py:61"
      ]
    },
    "test_run_NUM": {
      "value": "test_run_NUM",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:27"
      ]
    },
    "test_runner": {
      "value": "test_runner",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_runners": {
      "value": "test_runners",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:65",
        "scripts/generate_test_audit.py:86",
        "scripts/generate_test_audit.py:191",
        "scripts/generate_test_audit.py:213",
        "scripts/generate_test_audit.py:214"
      ]
    },
    "test_scenario": {
      "value": "test_scenario",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:47"
      ]
    },
    "test_script": {
      "value": "test_script",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:39",
        "scripts/test_environment_validation_clean.py:40",
        "scripts/test_environment_validation_clean.py:41",
        "scripts/test_environment_validation_clean.py:42",
        "scripts/test_environment_validation_clean.py:78",
        "scripts/test_environment_validation_clean.py:79",
        "scripts/test_environment_validation_clean.py:80",
        "scripts/test_environment_validation_clean.py:93",
        "scripts/test_environment_validation_clean.py:94",
        "scripts/test_environment_validation_clean.py:99"
      ]
    },
    "test_secret_minimum_20_characters_long": {
      "value": "test_secret_minimum_20_characters_long",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:27",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:39"
      ]
    },
    "test_server_startup_timeout_fix.py": {
      "value": "test_server_startup_timeout_fix.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:155"
      ]
    },
    "test_service": {
      "value": "test_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:129",
        "scripts/test_coordination_fixes.py:132",
        "scripts/test_coordination_fixes.py:135",
        "scripts/test_coordination_fixes.py:136",
        "scripts/test_coordination_fixes.py:139",
        "scripts/test_coordination_fixes.py:140",
        "scripts/test_coordination_fixes.py:143",
        "scripts/test_coordination_fixes.py:147"
      ]
    },
    "test_service_health{service=\"": {
      "value": "test_service_health{service=\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:240"
      ]
    },
    "test_service_response_time_ms{service=\"": {
      "value": "test_service_response_time_ms{service=\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:241"
      ]
    },
    "test_similarities.csv": {
      "value": "test_similarities.csv",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:511"
      ]
    },
    "test_size_compliance_examples.py": {
      "value": "test_size_compliance_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "test_size_violations.json": {
      "value": "test_size_violations.json",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:601"
      ]
    },
    "test_state_": {
      "value": "test_state_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:228"
      ]
    },
    "test_statistics": {
      "value": "test_statistics",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:45",
        "scripts/optimize_test_performance.py:62",
        "scripts/optimize_test_performance.py:157"
      ]
    },
    "test_status": {
      "value": "test_status",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:27"
      ]
    },
    "test_thread": {
      "value": "test_thread",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:110",
        "scripts/migrate_test_ids.py:83",
        "scripts/test_corpus_admin_direct.py:54",
        "scripts/test_corpus_admin_simple.py:53",
        "scripts/test_supervisor_websocket_integration.py:112"
      ]
    },
    "test_thread_123": {
      "value": "test_thread_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:100"
      ]
    },
    "test_token": {
      "value": "test_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:346",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:315",
        "auth_service/tests/test_refresh_endpoint_integration.py:85",
        "auth_service/tests/test_refresh_endpoint_integration.py:86",
        "auth_service/tests/test_refresh_endpoint_integration.py:87"
      ]
    },
    "test_tool": {
      "value": "test_tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:209",
        "scripts/test_websocket_chat_simple.py:210",
        "scripts/test_websocket_chat_simple.py:314",
        "scripts/test_websocket_chat_standalone.py:205",
        "scripts/test_websocket_chat_standalone.py:206",
        "scripts/test_websocket_chat_standalone.py:309",
        "scripts/test_websocket_standalone.py:221",
        "scripts/test_websocket_standalone.py:232"
      ]
    },
    "test_type": {
      "value": "test_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:514",
        "scripts/test_cors.py:522",
        "scripts/test_cors.py:530",
        "scripts/test_data_pipeline_simple.py:66"
      ]
    },
    "test_type_distribution": {
      "value": "test_type_distribution",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:628"
      ]
    },
    "test_update_spec.xml": {
      "value": "test_update_spec.xml",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:24"
      ]
    },
    "test_user": {
      "value": "test_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:67",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:50",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:78",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:107",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:133",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:160",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:187",
        "scripts/debug_supervisor_test.py:109",
        "scripts/test_cold_start_e2e.py:47",
        "scripts/test_cold_start_e2e.py:232"
      ]
    },
    "test_user:": {
      "value": "test_user:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:67",
        "netra_backend/app/services/test_environment.py:79"
      ]
    },
    "test_user_": {
      "value": "test_user_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:52",
        "auth_service/tests/conftest.py:232"
      ]
    },
    "test_user_123": {
      "value": "test_user_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_real.py:153"
      ]
    },
    "test_user_31": {
      "value": "test_user_31",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:63"
      ]
    },
    "test_user_32": {
      "value": "test_user_32",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:114",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:123"
      ]
    },
    "test_user_33": {
      "value": "test_user_33",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:145"
      ]
    },
    "test_user_34": {
      "value": "test_user_34",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:181",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:191"
      ]
    },
    "test_user_35": {
      "value": "test_user_35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:219"
      ]
    },
    "test_user_36": {
      "value": "test_user_36",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:64"
      ]
    },
    "test_user_37": {
      "value": "test_user_37",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:122"
      ]
    },
    "test_user_38": {
      "value": "test_user_38",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:182"
      ]
    },
    "test_user_39": {
      "value": "test_user_39",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:220"
      ]
    },
    "test_user_40": {
      "value": "test_user_40",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:286"
      ]
    },
    "test_user_creation.py (80 lines)\n- test_user_creation_valid_data()\n- test_user_creation_invalid_email()\n- test_user_creation_duplicate_email()\n\ntest_user_authentication.py (85 lines)  \n- test_authenticate_valid_credentials()\n- test_authenticate_invalid_password()\n- test_authenticate_nonexistent_user()\n\ntest_user_permissions.py (90 lines)\n- test_user_default_permissions()\n- test_admin_permissions()\n- test_permission_inheritance()\n\ntest_user_profile.py (70 lines)\n- test_profile_update()\n- test_profile_validation()\n- test_profile_privacy()\n\ntest_user_helpers.py (50 lines)\n- create_test_user()\n- create_admin_user()\n- get_test_auth_token()": {
      "value": "test_user_creation.py (80 lines)\n- test_user_creation_valid_data()\n- test_user_creation_invalid_email()\n- test_user_creation_duplicate_email()\n\ntest_user_authentication.py (85 lines)  \n- test_authenticate_valid_credentials()\n- test_authenticate_invalid_password()\n- test_authenticate_nonexistent_user()\n\ntest_user_permissions.py (90 lines)\n- test_user_default_permissions()\n- test_admin_permissions()\n- test_permission_inheritance()\n\ntest_user_profile.py (70 lines)\n- test_profile_update()\n- test_profile_validation()\n- test_profile_privacy()\n\ntest_user_helpers.py (50 lines)\n- create_test_user()\n- create_admin_user()\n- get_test_auth_token()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:77"
      ]
    },
    "test_user_helper": {
      "value": "test_user_helper",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:85"
      ]
    },
    "test_user_id": {
      "value": "test_user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:29",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:41"
      ]
    },
    "test_user_validation": {
      "value": "test_user_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:53"
      ]
    },
    "test_utils": {
      "value": "test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:39",
        "scripts/fix_test_import_order.py:32",
        "scripts/test_collection_audit.py:261"
      ]
    },
    "test_utils.py": {
      "value": "test_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:55"
      ]
    },
    "test_value": {
      "value": "test_value",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:112",
        "scripts/test_secret_manager_debug.py:114"
      ]
    },
    "test_violations_report.md": {
      "value": "test_violations_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:982"
      ]
    },
    "test_websocket_auth_cold_start_extended.py": {
      "value": "test_websocket_auth_cold_start_extended.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:153"
      ]
    },
    "testcontainers": {
      "value": "testcontainers",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375"
      ]
    },
    "testdb": {
      "value": "testdb",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:75",
        "auth_service/tests/integration/test_database_connection.py:82"
      ]
    },
    "tested_endpoints": {
      "value": "tested_endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:114"
      ]
    },
    "testing": {
      "value": "testing",
      "category": "test_literals",
      "locations": [
        "scripts/debug_supervisor_test.py:12",
        "scripts/remove_test_stubs.py:78",
        "scripts/run_agent_pipeline_test.py:35",
        "scripts/run_critical_test.py:35",
        "scripts/test_backend_ORIGINAL.py:82",
        "scripts/test_backend_ORIGINAL.py:372"
      ]
    },
    "testing_strategy": {
      "value": "testing_strategy",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:85"
      ]
    },
    "testpass": {
      "value": "testpass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:77"
      ]
    },
    "tests": {
      "value": "tests",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:31",
        "scripts/auto_fix_test_violations.py:91",
        "scripts/auto_fix_test_violations.py:92",
        "scripts/auto_fix_test_violations.py:93",
        "scripts/auto_fix_test_violations.py:94",
        "scripts/autonomous_review/test_generator.py:32",
        "scripts/autonomous_review/test_generator.py:86",
        "scripts/autonomous_review/test_generator.py:88",
        "scripts/autonomous_review/test_generator.py:89",
        "scripts/autonomous_review/test_reviewer.py:309"
      ]
    },
    "tests\u001b[0m": {
      "value": "tests\u001b[0m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:118"
      ]
    },
    "tests (": {
      "value": "tests (",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:220"
      ]
    },
    "tests (timeout:": {
      "value": "tests (timeout:",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:17"
      ]
    },
    "tests -": {
      "value": "tests -",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:104",
        "scripts/test_dashboard.py:394"
      ]
    },
    "tests completed": {
      "value": "tests completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:149"
      ]
    },
    "tests failed": {
      "value": "tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:177",
        "scripts/test_websocket_cors_comprehensive.py:349",
        "scripts/test_websocket_simple.py:97"
      ]
    },
    "tests failed - real JWT integration may have issues": {
      "value": "tests failed - real JWT integration may have issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:252"
      ]
    },
    "tests failed,": {
      "value": "tests failed,",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:266"
      ]
    },
    "tests failed.": {
      "value": "tests failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:126"
      ]
    },
    "tests failed. Review the issues above.": {
      "value": "tests failed. Review the issues above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:392"
      ]
    },
    "tests passed": {
      "value": "tests passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:248",
        "auth_service/test_staging_db_connection.py:317",
        "auth_service/test_url_construction.py:238",
        "scripts/test/test_clickhouse_staging_fix.py:196",
        "scripts/test_adaptive_workflow_direct.py:205",
        "scripts/test_agent_recovery_simple.py:172",
        "scripts/test_cors.py:542",
        "scripts/test_failure_scanner.py:180",
        "scripts/test_staging_auth_e2e.py:373",
        "scripts/test_verify_workflow_status.py:223"
      ]
    },
    "tests passed (": {
      "value": "tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:471",
        "scripts/test_verify_workflow_status_corrected.py:246"
      ]
    },
    "tests passed!": {
      "value": "tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:193"
      ]
    },
    "tests to test suite": {
      "value": "tests to test suite",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:240"
      ]
    },
    "tests without validation": {
      "value": "tests without validation",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "tests)": {
      "value": "tests)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711",
        "scripts/fix_test_batch.py:240"
      ]
    },
    "tests)\u001b[0m -": {
      "value": "tests)\u001b[0m -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:106"
      ]
    },
    "tests) -": {
      "value": "tests) -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:108"
      ]
    },
    "tests,": {
      "value": "tests,",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:800"
      ]
    },
    "tests, avg score:": {
      "value": "tests, avg score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:742"
      ]
    },
    "tests...": {
      "value": "tests...",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:152"
      ]
    },
    "tests.e2e.": {
      "value": "tests.e2e.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:78",
        "scripts/fix_e2e_test_imports.py:79"
      ]
    },
    "tests.test_managers": {
      "value": "tests.test_managers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs_simple.py:89"
      ]
    },
    "tests/": {
      "value": "tests/",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:76"
      ]
    },
    "tests/**/*.py": {
      "value": "tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:55"
      ]
    },
    "tests/**/*_test.py": {
      "value": "tests/**/*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:59"
      ]
    },
    "tests/api": {
      "value": "tests/api",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:27",
        "scripts/test_execution_tracker.py:112"
      ]
    },
    "tests/conftest.py": {
      "value": "tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:16"
      ]
    },
    "tests/database": {
      "value": "tests/database",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:29"
      ]
    },
    "tests/e2e": {
      "value": "tests/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:21",
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:43",
        "scripts/e2e_test_fixer.py:20",
        "scripts/rapid_test_consolidation.py:33",
        "scripts/rapid_test_consolidation.py:33",
        "scripts/validate_llm_test_models.py:45"
      ]
    },
    "tests/e2e/agent_isolation": {
      "value": "tests/e2e/agent_isolation",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:37"
      ]
    },
    "tests/e2e/critical": {
      "value": "tests/e2e/critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:102"
      ]
    },
    "tests/e2e/critical/test_auth_jwt_critical.py": {
      "value": "tests/e2e/critical/test_auth_jwt_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:35"
      ]
    },
    "tests/e2e/integration": {
      "value": "tests/e2e/integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:30",
        "scripts/test_execution_tracker.py:97"
      ]
    },
    "tests/e2e/integration/test_agent_pipeline_real.py": {
      "value": "tests/e2e/integration/test_agent_pipeline_real.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_agent_pipeline_test.py:76"
      ]
    },
    "tests/e2e/journeys": {
      "value": "tests/e2e/journeys",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:31"
      ]
    },
    "tests/e2e/performance": {
      "value": "tests/e2e/performance",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:32"
      ]
    },
    "tests/e2e/rapid_message": {
      "value": "tests/e2e/rapid_message",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:35"
      ]
    },
    "tests/e2e/resilience": {
      "value": "tests/e2e/resilience",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:33"
      ]
    },
    "tests/e2e/resource_isolation": {
      "value": "tests/e2e/resource_isolation",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:36"
      ]
    },
    "tests/e2e/test_agent_pipeline_critical.py": {
      "value": "tests/e2e/test_agent_pipeline_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_critical_test.py:51"
      ]
    },
    "tests/e2e/test_startup_comprehensive_e2e.py": {
      "value": "tests/e2e/test_startup_comprehensive_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:311"
      ]
    },
    "tests/e2e/test_startup_initialization.py": {
      "value": "tests/e2e/test_startup_initialization.py",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:92"
      ]
    },
    "tests/e2e/test_supervisor_orchestration_e2e.py": {
      "value": "tests/e2e/test_supervisor_orchestration_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:35",
        "scripts/run_supervisor_test_coverage.py:130"
      ]
    },
    "tests/e2e/websocket": {
      "value": "tests/e2e/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:34"
      ]
    },
    "tests/frontend": {
      "value": "tests/frontend",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:28"
      ]
    },
    "tests/integration": {
      "value": "tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:22",
        "scripts/rapid_test_consolidation.py:32",
        "scripts/rapid_test_consolidation.py:32",
        "scripts/test_execution_tracker.py:92"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:31"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_api_gateway_rate_limiting_accuracy.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_api_gateway_rate_limiting_accuracy.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:32"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:33"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:34"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:35"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:36"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:37"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:38"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:39"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:40"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_websocket_message_broadcasting.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_websocket_message_broadcasting.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:41"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:42"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:43"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_redis_session_store_consistency.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_redis_session_store_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:44"
      ]
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py": {
      "value": "tests/integration/staging/test_staging_database_connection_resilience.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:45"
      ]
    },
    "tests/integration/test_jwt_secret_sync.py": {
      "value": "tests/integration/test_jwt_secret_sync.py",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:93"
      ]
    },
    "tests/integration/user_flows/test_conversion_paths.py": {
      "value": "tests/integration/user_flows/test_conversion_paths.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:46"
      ]
    },
    "tests/integration/user_flows/test_early_tier_flows.py": {
      "value": "tests/integration/user_flows/test_early_tier_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:47"
      ]
    },
    "tests/integration/user_flows/test_enterprise_flows.py": {
      "value": "tests/integration/user_flows/test_enterprise_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:48"
      ]
    },
    "tests/integration/user_flows/test_free_tier_onboarding.py": {
      "value": "tests/integration/user_flows/test_free_tier_onboarding.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:49"
      ]
    },
    "tests/integration/user_flows/test_mid_tier_flows.py": {
      "value": "tests/integration/user_flows/test_mid_tier_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:50"
      ]
    },
    "tests/mission_critical/test_staging_auth_cross_service_validation.py": {
      "value": "tests/mission_critical/test_staging_auth_cross_service_validation.py",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:91"
      ]
    },
    "tests/mission_critical/test_supervisor*.py": {
      "value": "tests/mission_critical/test_supervisor*.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:205"
      ]
    },
    "tests/mission_critical/test_supervisor_websocket_validation.py": {
      "value": "tests/mission_critical/test_supervisor_websocket_validation.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:41",
        "scripts/run_supervisor_test_coverage.py:179"
      ]
    },
    "tests/mission_critical/test_unified_tool_execution_websocket_events.py": {
      "value": "tests/mission_critical/test_unified_tool_execution_websocket_events.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:76"
      ]
    },
    "tests/mission_critical/test_websocket_agent_events_suite.py": {
      "value": "tests/mission_critical/test_websocket_agent_events_suite.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:77"
      ]
    },
    "tests/mission_critical/test_websocket_injection_fix_comprehensive.py": {
      "value": "tests/mission_critical/test_websocket_injection_fix_comprehensive.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:75"
      ]
    },
    "tests/performance": {
      "value": "tests/performance",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:25",
        "scripts/test_execution_tracker.py:122"
      ]
    },
    "tests/security": {
      "value": "tests/security",
      "category": "test_literals",
      "locations": [
        "scripts/test_execution_tracker.py:127"
      ]
    },
    "tests/smoke": {
      "value": "tests/smoke",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:24",
        "scripts/test_execution_tracker.py:107"
      ]
    },
    "tests/stress/test_supervisor_stress.py": {
      "value": "tests/stress/test_supervisor_stress.py",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:38",
        "scripts/run_supervisor_test_coverage.py:154"
      ]
    },
    "tests/test_example_message_flow.py": {
      "value": "tests/test_example_message_flow.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:47"
      ]
    },
    "tests/test_example_message_integration.py": {
      "value": "tests/test_example_message_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:52"
      ]
    },
    "tests/unified_test_runner.py": {
      "value": "tests/unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:141",
        "scripts/test_backend.py:33",
        "scripts/test_frontend.py:33"
      ]
    },
    "tests/unit": {
      "value": "tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:23",
        "scripts/test_execution_tracker.py:87"
      ]
    },
    "tests/websocket": {
      "value": "tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:26",
        "scripts/test_execution_tracker.py:117"
      ]
    },
    "tests\\.unified\\.e2e\\.": {
      "value": "tests\\.unified\\.e2e\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:78"
      ]
    },
    "tests_failed": {
      "value": "tests_failed",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:87",
        "scripts/frontend_iterative_test_runner.py:148",
        "scripts/run_supervisor_test_coverage.py:59",
        "scripts/run_supervisor_test_coverage.py:285",
        "scripts/test_staging_websocket_comprehensive.py:62",
        "scripts/test_staging_websocket_comprehensive.py:137",
        "scripts/test_staging_websocket_comprehensive.py:165",
        "scripts/test_staging_websocket_comprehensive.py:179",
        "scripts/test_staging_websocket_comprehensive.py:226",
        "scripts/test_staging_websocket_comprehensive.py:246"
      ]
    },
    "tests_generated": {
      "value": "tests_generated",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:445",
        "scripts/batch_test_generator.py:489"
      ]
    },
    "tests_passed": {
      "value": "tests_passed",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:86",
        "scripts/frontend_iterative_test_runner.py:147",
        "scripts/iterative_test_fix_loop.py:96",
        "scripts/iterative_test_fix_loop.py:110",
        "scripts/iterative_test_fix_loop.py:149",
        "scripts/iterative_test_fix_loop.py:162",
        "scripts/run_supervisor_test_coverage.py:58",
        "scripts/run_supervisor_test_coverage.py:284",
        "scripts/test_staging_websocket_comprehensive.py:61",
        "scripts/test_staging_websocket_comprehensive.py:130"
      ]
    },
    "tests_run": {
      "value": "tests_run",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:85",
        "scripts/frontend_iterative_test_runner.py:146",
        "scripts/run_supervisor_test_coverage.py:57",
        "scripts/run_supervisor_test_coverage.py:283",
        "scripts/test_staging_websocket_comprehensive.py:60",
        "scripts/test_staging_websocket_comprehensive.py:102",
        "scripts/test_staging_websocket_comprehensive.py:144",
        "scripts/test_staging_websocket_comprehensive.py:186",
        "scripts/test_staging_websocket_comprehensive.py:303",
        "scripts/test_websocket_cors_comprehensive.py:183"
      ]
    },
    "testuser": {
      "value": "testuser",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:76",
        "auth_service/tests/integration/test_database_connection.py:81"
      ]
    },
    "text": {
      "value": "text",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/fake_test_scanner.py:387",
        "scripts/compliance/fake_test_scanner.py:433",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/compliance/test_size_validator.py:520",
        "scripts/debug_cors_test.py:25",
        "scripts/debug_cors_test.py:39",
        "scripts/debug_cors_test.py:77"
      ]
    },
    "text/plain": {
      "value": "text/plain",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:263"
      ]
    },
    "text_blob": {
      "value": "text_blob",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:40"
      ]
    },
    "third_party": {
      "value": "third_party",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:113",
        "scripts/compliance/test_refactor_helper.py:134"
      ]
    },
    "thorough": {
      "value": "thorough",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:200",
        "scripts/unified_test_config.py:289"
      ]
    },
    "thought": {
      "value": "thought",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:95",
        "scripts/test_supervisor_execution_flow.py:44",
        "scripts/test_supervisor_execution_flow.py:45"
      ]
    },
    "thread-": {
      "value": "thread-",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:69"
      ]
    },
    "thread1": {
      "value": "thread1",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:153"
      ]
    },
    "thread2": {
      "value": "thread2",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:154",
        "scripts/test_blocking_analysis.py:201"
      ]
    },
    "thread_NUM": {
      "value": "thread_NUM",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:30"
      ]
    },
    "thread_id": {
      "value": "thread_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:236",
        "scripts/test_adaptive_workflow_local.py:133",
        "scripts/test_adaptive_workflow_local.py:134",
        "scripts/test_supervisor_execution_flow.py:30",
        "scripts/test_supervisor_execution_flow.py:159"
      ]
    },
    "thread_id\\s*=\\s*[\"\\']thread_\\d+[\"\\']": {
      "value": "thread_id\\s*=\\s*[\"\\']thread_\\d+[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:30"
      ]
    },
    "threading\\.": {
      "value": "threading\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:221"
      ]
    },
    "threads": {
      "value": "threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:213",
        "scripts/test_staging_auth_live.py:153"
      ]
    },
    "threads.py": {
      "value": "threads.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:71"
      ]
    },
    "threshold": {
      "value": "threshold",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:69"
      ]
    },
    "threshold_exceeded": {
      "value": "threshold_exceeded",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:109",
        "scripts/simple_websocket_blocking_test.py:163",
        "scripts/simple_websocket_blocking_test.py:168",
        "scripts/simple_websocket_blocking_test.py:181",
        "scripts/simple_websocket_blocking_test.py:220",
        "scripts/simple_websocket_blocking_test.py:226"
      ]
    },
    "threshold_ms": {
      "value": "threshold_ms",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:322"
      ]
    },
    "thresholds": {
      "value": "thresholds",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:47"
      ]
    },
    "throughput": {
      "value": "throughput",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:101",
        "scripts/test_data_validator_backup.py:47",
        "scripts/test_data_validator_backup.py:177",
        "scripts/test_data_validator_backup.py:184",
        "scripts/test_data_validator_backup.py:622",
        "scripts/test_data_validator_backup.py:625",
        "scripts/test_data_validator_backup.py:641",
        "scripts/test_data_validator_backup.py:645",
        "scripts/test_data_validator_backup.py:663",
        "scripts/test_data_validator_backup.py:664"
      ]
    },
    "throughput_rps": {
      "value": "throughput_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:167",
        "netra_backend/app/services/realistic_test_data/log_generator.py:175",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:370"
      ]
    },
    "tier": {
      "value": "tier",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:492",
        "scripts/business_value_test_index.py:494",
        "scripts/business_value_test_index.py:497",
        "scripts/business_value_test_index.py:679"
      ]
    },
    "tier customer data and access control": {
      "value": "tier customer data and access control",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:490"
      ]
    },
    "tier functionality": {
      "value": "tier functionality",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:500"
      ]
    },
    "tier has insufficient test coverage": {
      "value": "tier has insufficient test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:681"
      ]
    },
    "tier_coverage": {
      "value": "tier_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:623",
        "scripts/business_value_test_index.py:741"
      ]
    },
    "time": {
      "value": "time",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "time.sleep": {
      "value": "time.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:281"
      ]
    },
    "time.time": {
      "value": "time.time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:178",
        "scripts/analyze_test_mocks.py:60"
      ]
    },
    "time\\.sleep\\(": {
      "value": "time\\.sleep\\(",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:21"
      ]
    },
    "time\\.sleep\\(([0-9.]+)\\)": {
      "value": "time\\.sleep\\(([0-9.]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:177"
      ]
    },
    "time\\.sleep\\(([^)]+)\\)": {
      "value": "time\\.sleep\\(([^)]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:32"
      ]
    },
    "time\\.time\\(\\)": {
      "value": "time\\.time\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:219"
      ]
    },
    "time_based": {
      "value": "time_based",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:165"
      ]
    },
    "time_difference": {
      "value": "time_difference",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:419"
      ]
    },
    "time_ranges": {
      "value": "time_ranges",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:46"
      ]
    },
    "time_sensitivity": {
      "value": "time_sensitivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:39"
      ]
    },
    "time_span": {
      "value": "time_span",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:302"
      ]
    },
    "time_span_hours": {
      "value": "time_span_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:559",
        "scripts/test_data_validator_backup.py:599"
      ]
    },
    "time_utilities": {
      "value": "time_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:61"
      ]
    },
    "timed out": {
      "value": "timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:121"
      ]
    },
    "timeframe": {
      "value": "timeframe",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:71",
        "scripts/test_data_validator_backup.py:83",
        "scripts/test_data_validator_backup.py:106",
        "scripts/test_data_validator_backup.py:135",
        "scripts/test_data_validator_backup.py:151"
      ]
    },
    "timeout": {
      "value": "timeout",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:96",
        "netra_backend/app/services/realistic_test_data/models.py:135",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:294",
        "auth_service/tests/test_auth_real_services_comprehensive.py:499",
        "auth_service/tests/test_auth_real_services_comprehensive.py:515",
        "scripts/fix_test_batch.py:317",
        "scripts/frontend_iterative_test_runner.py:741",
        "scripts/test_agent_orchestration_recovery.py:204",
        "scripts/test_failure_analyzer.py:111"
      ]
    },
    "timeout_endpoint": {
      "value": "timeout_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:82"
      ]
    },
    "timeout_error": {
      "value": "timeout_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:112",
        "scripts/test_failure_analyzer.py:237"
      ]
    },
    "timeout_rate": {
      "value": "timeout_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:41",
        "netra_backend/app/services/realistic_test_data/models.py:51",
        "netra_backend/app/services/realistic_test_data/models.py:61",
        "netra_backend/app/services/realistic_test_data/models.py:71",
        "netra_backend/app/services/realistic_test_data/models.py:81"
      ]
    },
    "timeout_used": {
      "value": "timeout_used",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:48"
      ]
    },
    "timestamp": {
      "value": "timestamp",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:75",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:108",
        "netra_backend/app/services/realistic_test_data/log_generator.py:50",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:121",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "auth_service/tests/test_auth_real_services_comprehensive.py:417",
        "scripts/align_test_imports.py:404",
        "scripts/analyze_test_overlap.py:346",
        "scripts/analyze_test_overlap.py:519",
        "scripts/batch_fix_and_test.py:81"
      ]
    },
    "timestamp-test": {
      "value": "timestamp-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:98"
      ]
    },
    "timestamp@test.com": {
      "value": "timestamp@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:99"
      ]
    },
    "timing-test-session": {
      "value": "timing-test-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:209"
      ]
    },
    "timing_test_service": {
      "value": "timing_test_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:196",
        "scripts/test_coordination_fixes.py:213",
        "scripts/test_coordination_fixes.py:214",
        "scripts/test_coordination_fixes.py:220"
      ]
    },
    "title": {
      "value": "title",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:65",
        "scripts/test_data_pipeline_simple.py:84",
        "scripts/test_data_pipeline_simple.py:84",
        "scripts/test_data_pipeline_simple.py:87",
        "scripts/test_data_pipeline_simple.py:87",
        "scripts/test_data_pipeline_simple.py:94",
        "scripts/test_data_pipeline_simple.py:101",
        "scripts/test_data_pipeline_simple.py:101",
        "scripts/test_example_message_flow.py:284",
        "scripts/test_example_message_flow.py:406"
      ]
    },
    "tmpfile": {
      "value": "tmpfile",
      "category": "test_literals",
      "locations": [
        "scripts/pytest_plugins.py:37",
        "scripts/pytest_plugins.py:50",
        "scripts/pytest_plugins.py:81",
        "scripts/pytest_plugins.py:85"
      ]
    },
    "to": {
      "value": "to",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:763",
        "scripts/comprehensive_test_fixer.py:212",
        "scripts/frontend_iterative_test_runner.py:859",
        "scripts/test_staging_cors.py:14"
      ]
    },
    "to .env.mock file": {
      "value": "to .env.mock file",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:106"
      ]
    },
    "to <10 within 2 sprints": {
      "value": "to <10 within 2 sprints",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:570"
      ]
    },
    "to WebSocket manager": {
      "value": "to WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:269",
        "scripts/test_websocket_standalone.py:120"
      ]
    },
    "to_dict": {
      "value": "to_dict",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:53"
      ]
    },
    "todo": {
      "value": "todo",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:97"
      ]
    },
    "token": {
      "value": "token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:99",
        "auth_service/tests/auth-service-down-critical-scenarios.py:144",
        "auth_service/tests/auth-service-down-critical-scenarios.py:271",
        "auth_service/tests/auth-service-down-critical-scenarios.py:330",
        "auth_service/tests/auth-service-down-critical-scenarios.py:443",
        "auth_service/tests/auth-service-down-critical-scenarios.py:476",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:87",
        "auth_service/tests/test_refresh_endpoint_integration.py:87",
        "auth_service/tests/test_refresh_endpoint_integration.py:129",
        "auth_service/tests/test_refresh_endpoint_simple.py:38"
      ]
    },
    "token replacements in": {
      "value": "token replacements in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:113"
      ]
    },
    "token=": {
      "value": "token=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:299"
      ]
    },
    "token_": {
      "value": "token_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:55"
      ]
    },
    "token_created": {
      "value": "token_created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:26"
      ]
    },
    "token_found": {
      "value": "token_found",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:135",
        "auth_service/tests/test_refresh_endpoint_integration.py:150"
      ]
    },
    "token_generation": {
      "value": "token_generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:52",
        "scripts/test_oauth_local.py:257",
        "scripts/test_oauth_local.py:276",
        "scripts/test_oauth_local.py:283",
        "scripts/test_oauth_local.py:289",
        "scripts/test_oauth_local.py:417",
        "scripts/test_oauth_local.py:417",
        "scripts/test_oauth_local.py:418"
      ]
    },
    "token_limit": {
      "value": "token_limit",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:119"
      ]
    },
    "token_limits": {
      "value": "token_limits",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:47",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:51",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76"
      ]
    },
    "token_refreshed": {
      "value": "token_refreshed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:27"
      ]
    },
    "token_revoked": {
      "value": "token_revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:28"
      ]
    },
    "token_type": {
      "value": "token_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:138",
        "auth_service/tests/factories/token_factory.py:195",
        "auth_service/tests/factories/token_factory.py:219",
        "auth_service/tests/test_auth_comprehensive_audit.py:190",
        "auth_service/tests/test_auth_comprehensive_audit.py:259",
        "auth_service/tests/test_auth_comprehensive_audit.py:435",
        "auth_service/tests/test_auth_comprehensive_audit.py:456",
        "auth_service/tests/test_oauth_state_validation.py:117",
        "auth_service/tests/test_oauth_state_validation.py:262",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:62"
      ]
    },
    "token_type: '": {
      "value": "token_type: '",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:86"
      ]
    },
    "token_url": {
      "value": "token_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:289"
      ]
    },
    "token_validation": {
      "value": "token_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:53",
        "scripts/test_oauth_local.py:312",
        "scripts/test_oauth_local.py:325",
        "scripts/test_oauth_local.py:336"
      ]
    },
    "tokens": {
      "value": "tokens",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:86"
      ]
    },
    "tokens are unique!": {
      "value": "tokens are unique!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:83"
      ]
    },
    "tokens_input": {
      "value": "tokens_input",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:276",
        "scripts/test_data_validator_backup.py:281",
        "scripts/test_data_validator_backup.py:516",
        "scripts/test_data_validator_backup.py:517"
      ]
    },
    "too": {
      "value": "too",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:479"
      ]
    },
    "too short (": {
      "value": "too short (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:815"
      ]
    },
    "tool": {
      "value": "tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:52"
      ]
    },
    "tool executions": {
      "value": "tool executions",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:367"
      ]
    },
    "tool-run-123": {
      "value": "tool-run-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:192",
        "scripts/test_websocket_direct.py:201",
        "scripts/test_websocket_standalone.py:215",
        "scripts/test_websocket_standalone.py:232"
      ]
    },
    "tool-test-run": {
      "value": "tool-test-run",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:353",
        "scripts/test_agent_execution_websocket_integration.py:381"
      ]
    },
    "tool-test-thread": {
      "value": "tool-test-thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:341",
        "scripts/test_websocket_standalone.py:199"
      ]
    },
    "tool-test-user": {
      "value": "tool-test-user",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:340",
        "scripts/test_websocket_standalone.py:198"
      ]
    },
    "tool-thread": {
      "value": "tool-thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:184"
      ]
    },
    "tool-user": {
      "value": "tool-user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:183"
      ]
    },
    "tool_completed": {
      "value": "tool_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:203",
        "scripts/test_agent_execution_websocket_integration.py:230",
        "scripts/test_agent_execution_websocket_integration.py:400",
        "scripts/test_standalone_websocket.py:105",
        "scripts/test_supervisor_execution_flow.py:139",
        "scripts/test_websocket_chat_simple.py:88",
        "scripts/test_websocket_chat_standalone.py:88",
        "scripts/test_websocket_direct.py:36",
        "scripts/test_websocket_direct.py:209",
        "scripts/test_websocket_injection_fix_complete.py:99"
      ]
    },
    "tool_dispatcher = Mock()": {
      "value": "tool_dispatcher = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:52"
      ]
    },
    "tool_dispatcher = ToolDispatcher(llm_manager)": {
      "value": "tool_dispatcher = ToolDispatcher(llm_manager)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:54"
      ]
    },
    "tool_executing": {
      "value": "tool_executing",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:202",
        "scripts/test_agent_execution_websocket_integration.py:229",
        "scripts/test_agent_execution_websocket_integration.py:399",
        "scripts/test_standalone_websocket.py:105",
        "scripts/test_supervisor_execution_flow.py:138",
        "scripts/test_websocket_chat_simple.py:84",
        "scripts/test_websocket_chat_standalone.py:84",
        "scripts/test_websocket_direct.py:35",
        "scripts/test_websocket_direct.py:208",
        "scripts/test_websocket_injection_fix_complete.py:99"
      ]
    },
    "tool_name": {
      "value": "tool_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:95",
        "scripts/test_intensive_serialization.py:96",
        "scripts/test_supervisor_execution_flow.py:46",
        "scripts/test_supervisor_execution_flow.py:47",
        "scripts/test_triage_flow.py:62",
        "scripts/test_triage_flow.py:67"
      ]
    },
    "tool_outputs": {
      "value": "tool_outputs",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:73",
        "scripts/test_intensive_serialization.py:95"
      ]
    },
    "tool_recommendations": {
      "value": "tool_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:60"
      ]
    },
    "tool_used": {
      "value": "tool_used",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:330"
      ]
    },
    "tools_balanced": {
      "value": "tools_balanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:241",
        "scripts/test_agent_execution_websocket_integration.py:318"
      ]
    },
    "top_100": {
      "value": "top_100",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:192"
      ]
    },
    "top_overlaps_by_category": {
      "value": "top_overlaps_by_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:360",
        "scripts/analyze_test_overlap.py:422",
        "scripts/analyze_test_overlap.py:572",
        "scripts/analyze_test_overlap.py:573"
      ]
    },
    "top_value_tests": {
      "value": "top_value_tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:637",
        "scripts/business_value_test_index.py:754"
      ]
    },
    "total": {
      "value": "total",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:280",
        "scripts/comprehensive_test_fixer.py:299",
        "scripts/comprehensive_test_fixer.py:391",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/fix_test_batch.py:228",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:380",
        "scripts/frontend_iterative_test_runner.py:241",
        "scripts/run_supervisor_test_coverage.py:277",
        "scripts/team_updates_test_analyzer.py:104"
      ]
    },
    "total):": {
      "value": "total):",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:70"
      ]
    },
    "total_attempted": {
      "value": "total_attempted",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:213"
      ]
    },
    "total_business_value": {
      "value": "total_business_value",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:620"
      ]
    },
    "total_config_fixes": {
      "value": "total_config_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:410"
      ]
    },
    "total_connections_registered": {
      "value": "total_connections_registered",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_presence_detection.py:78"
      ]
    },
    "total_cost": {
      "value": "total_cost",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:223"
      ]
    },
    "total_costs_usd": {
      "value": "total_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "total_duration": {
      "value": "total_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:208",
        "scripts/test_backend_optimized.py:231",
        "scripts/test_backend_optimized.py:266",
        "scripts/test_backend_optimized.py:329",
        "scripts/test_staging_websocket_comprehensive.py:286",
        "scripts/test_staging_websocket_comprehensive.py:302"
      ]
    },
    "total_events": {
      "value": "total_events",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:116",
        "scripts/test_agent_execution_websocket_integration.py:234",
        "scripts/test_agent_execution_websocket_integration.py:307",
        "scripts/test_agent_execution_websocket_integration.py:396",
        "scripts/test_agent_pipeline_simple.py:102",
        "scripts/test_agent_pipeline_simple.py:394",
        "scripts/test_agent_pipeline_simple.py:410",
        "scripts/test_agent_pipeline_simple.py:410",
        "scripts/test_staging_websocket_comprehensive.py:156",
        "scripts/test_staging_websocket_comprehensive.py:170"
      ]
    },
    "total_failures": {
      "value": "total_failures",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:125",
        "scripts/test_comprehensive_scanner.py:197",
        "scripts/test_failure_scanner.py:195",
        "scripts/test_failure_scanner.py:225",
        "scripts/test_failure_scanner.py:244",
        "scripts/test_failure_tracker.py:153"
      ]
    },
    "total_fake_tests": {
      "value": "total_fake_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:83",
        "scripts/compliance/fake_test_scanner.py:115",
        "scripts/compliance/fake_test_scanner.py:140",
        "scripts/compliance/fake_test_scanner.py:259",
        "scripts/compliance/fake_test_scanner.py:416",
        "scripts/compliance/fake_test_scanner.py:442",
        "scripts/compliance/fake_test_scanner.py:455"
      ]
    },
    "total_file_fixes": {
      "value": "total_file_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:411"
      ]
    },
    "total_files": {
      "value": "total_files",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:444",
        "scripts/batch_test_generator.py:488",
        "scripts/check_test_compliance.py:89",
        "scripts/check_test_compliance.py:104",
        "scripts/check_test_compliance.py:132",
        "scripts/check_test_compliance.py:143",
        "scripts/check_test_compliance.py:152",
        "scripts/compliance/test_size_validator.py:76",
        "scripts/compliance/test_size_validator.py:420",
        "scripts/compliance/test_size_validator.py:459"
      ]
    },
    "total_files_scanned": {
      "value": "total_files_scanned",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:82",
        "scripts/compliance/fake_test_scanner.py:114",
        "scripts/compliance/fake_test_scanner.py:258",
        "scripts/compliance/fake_test_scanner.py:415",
        "scripts/fix_test_import_errors.py:287",
        "scripts/fix_test_import_errors.py:309"
      ]
    },
    "total_fixes_applied": {
      "value": "total_fixes_applied",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:156",
        "scripts/frontend_iterative_test_runner.py:175"
      ]
    },
    "total_import_fixes": {
      "value": "total_import_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:409"
      ]
    },
    "total_iterations": {
      "value": "total_iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:85"
      ]
    },
    "total_known_failures": {
      "value": "total_known_failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_tracker.py:112"
      ]
    },
    "total_lines": {
      "value": "total_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:63",
        "scripts/analyze_test_overlap.py:407",
        "scripts/analyze_test_overlap.py:562",
        "scripts/compliance/demo_test_size_enforcement.py:88",
        "scripts/compliance/test_refactor_helper.py:100",
        "scripts/compliance/test_refactor_helper.py:706"
      ]
    },
    "total_llm_cost": {
      "value": "total_llm_cost",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:100",
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    "total_methods": {
      "value": "total_methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:329"
      ]
    },
    "total_missing_optional": {
      "value": "total_missing_optional",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:115",
        "scripts/test_service_startup_with_missing_optionals.py:190"
      ]
    },
    "total_patterns": {
      "value": "total_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:99"
      ]
    },
    "total_potential_savings_cents": {
      "value": "total_potential_savings_cents",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:330",
        "scripts/test_data_validator_backup.py:401",
        "scripts/test_data_validator_backup.py:418"
      ]
    },
    "total_requests": {
      "value": "total_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "total_runs": {
      "value": "total_runs",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:165",
        "scripts/test_dashboard.py:352",
        "scripts/test_execution_tracker.py:557"
      ]
    },
    "total_secrets": {
      "value": "total_secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:271",
        "scripts/test_secret_manager_builder_critical.py:348"
      ]
    },
    "total_similarity_pairs": {
      "value": "total_similarity_pairs",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:350",
        "scripts/analyze_test_overlap.py:525"
      ]
    },
    "total_tasks": {
      "value": "total_tasks",
      "category": "test_literals",
      "locations": [
        "scripts/test_comprehensive_scanner.py:247"
      ]
    },
    "total_test_files": {
      "value": "total_test_files",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:348",
        "scripts/analyze_test_overlap.py:523",
        "scripts/check_test_compliance.py:132",
        "scripts/check_test_compliance.py:160"
      ]
    },
    "total_test_functions": {
      "value": "total_test_functions",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:349",
        "scripts/analyze_test_overlap.py:470",
        "scripts/analyze_test_overlap.py:524",
        "scripts/analyze_test_overlap.py:656"
      ]
    },
    "total_tests": {
      "value": "total_tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:62",
        "scripts/analyze_test_overlap.py:406",
        "scripts/analyze_test_overlap.py:474",
        "scripts/analyze_test_overlap.py:561",
        "scripts/business_value_test_index.py:73",
        "scripts/business_value_test_index.py:539",
        "scripts/business_value_test_index.py:596",
        "scripts/business_value_test_index.py:596",
        "scripts/business_value_test_index.py:597",
        "scripts/business_value_test_index.py:619"
      ]
    },
    "total_time": {
      "value": "total_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:242",
        "scripts/test_real_jwt_e2e.py:249"
      ]
    },
    "total_time_ms": {
      "value": "total_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:379"
      ]
    },
    "total_tokens": {
      "value": "total_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:78",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:111",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:119",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:224",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "total_tools_used": {
      "value": "total_tools_used",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:178"
      ]
    },
    "total_tracked_tests": {
      "value": "total_tracked_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:298"
      ]
    },
    "total_violations": {
      "value": "total_violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:82",
        "scripts/compliance/test_size_validator.py:118",
        "scripts/compliance/test_size_validator.py:423",
        "scripts/compliance/test_size_validator.py:462",
        "scripts/compliance/test_size_validator.py:544",
        "scripts/remove_test_stubs.py:260",
        "scripts/remove_test_stubs.py:310"
      ]
    },
    "totals": {
      "value": "totals",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:123",
        "scripts/run_supervisor_test_coverage.py:222",
        "scripts/test_backend_ORIGINAL.py:415",
        "scripts/test_coverage_system.py:94",
        "scripts/test_coverage_system.py:95"
      ]
    },
    "trace_id": {
      "value": "trace_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:59"
      ]
    },
    "traffic_data": {
      "value": "traffic_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "trend_analysis": {
      "value": "trend_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:146"
      ]
    },
    "triage": {
      "value": "triage",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:51",
        "scripts/test_adaptive_workflow_direct.py:72",
        "scripts/test_adaptive_workflow_direct.py:128",
        "scripts/test_adaptive_workflow_direct.py:130",
        "scripts/test_adaptive_workflow_direct.py:132",
        "scripts/test_agent_pipeline_simple.py:145",
        "scripts/test_agent_pipeline_simple.py:241",
        "scripts/test_agent_pipeline_simple.py:243",
        "scripts/test_agent_recovery_simple.py:45"
      ]
    },
    "triage_agent": {
      "value": "triage_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_pipeline_simple.py:346"
      ]
    },
    "triage_agent_timeout_handling": {
      "value": "triage_agent_timeout_handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:55"
      ]
    },
    "triage_duration_ms": {
      "value": "triage_duration_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:78"
      ]
    },
    "triage_result": {
      "value": "triage_result",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:153"
      ]
    },
    "trigger": {
      "value": "trigger",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:24",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:38",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:45",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:163",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:165"
      ]
    },
    "trivial tests for refactoring": {
      "value": "trivial tests for refactoring",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:207"
      ]
    },
    "true": {
      "value": "true",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_database_connection.py:56",
        "auth_service/tests/integration/test_database_connection.py:105",
        "auth_service/tests/integration/test_database_connection.py:239",
        "auth_service/tests/integration/test_database_connection.py:294",
        "auth_service/tests/test_redis_staging_fixes.py:44",
        "auth_service/tests/test_redis_staging_fixes.py:65",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:46",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:156",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:183",
        "auth_service/tests/unit/test_docker_hostname_resolution.py:211"
      ]
    },
    "try {\n                nonExistentFunction();\n            } catch(e) {\n                if (window.dataLayer) {\n                    window.dataLayer.push({\n                        event: 'exception',\n                        event_category: 'error',\n                        event_action: 'test_error',\n                        event_label: e.message\n                    });\n                }\n            }": {
      "value": "try {\n                nonExistentFunction();\n            } catch(e) {\n                if (window.dataLayer) {\n                    window.dataLayer.push({\n                        event: 'exception',\n                        event_category: 'error',\n                        event_action: 'test_error',\n                        event_label: e.message\n                    });\n                }\n            }",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:77"
      ]
    },
    "try:\\s*.*except.*:": {
      "value": "try:\\s*.*except.*:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:51"
      ]
    },
    "tsc": {
      "value": "tsc",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:337"
      ]
    },
    "type": {
      "value": "type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:69",
        "auth_service/tests/factories/token_factory.py:38",
        "auth_service/tests/factories/token_factory.py:133",
        "auth_service/tests/test_auth_real_services_comprehensive.py:239",
        "auth_service/tests/test_auth_real_services_comprehensive.py:256",
        "auth_service/tests/test_refresh_endpoint.py:116",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:30",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:42",
        "auth_service/tests/test_refresh_endpoint_integration.py:42",
        "auth_service/tests/unit/test_refresh_endpoint.py:171"
      ]
    },
    "type: '": {
      "value": "type: '",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth.py:87"
      ]
    },
    "typescript": {
      "value": "typescript",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_ORIGINAL.py:77",
        "scripts/test_frontend_ORIGINAL.py:105",
        "scripts/test_frontend_ORIGINAL.py:105"
      ]
    },
    "ultra_fast": {
      "value": "ultra_fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:89",
        "scripts/test_backend_optimized.py:182",
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "unauthorized": {
      "value": "unauthorized",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:103"
      ]
    },
    "unavailable": {
      "value": "unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:453",
        "scripts/setup_staging_test_account.py:195",
        "scripts/setup_staging_test_account.py:210",
        "scripts/setup_test_environment.py:78",
        "scripts/test_staging_login_automated.py:164"
      ]
    },
    "uncovered_lines": {
      "value": "uncovered_lines",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:61"
      ]
    },
    "undefined": {
      "value": "undefined",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:560",
        "scripts/frontend_iterative_test_runner.py:676",
        "scripts/frontend_iterative_test_runner.py:691",
        "scripts/frontend_iterative_test_runner.py:706"
      ]
    },
    "unhealthy": {
      "value": "unhealthy",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:190",
        "scripts/test_service_monitor.py:79",
        "scripts/test_service_monitor.py:115",
        "scripts/test_service_monitor.py:141",
        "scripts/test_staging_login_automated.py:215"
      ]
    },
    "unified": {
      "value": "unified",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:162"
      ]
    },
    "unified_report.md": {
      "value": "unified_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:37"
      ]
    },
    "unified_test_runner.py": {
      "value": "unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/continuous_e2e_test_runner.py:26",
        "scripts/frontend_iterative_test_runner.py:190",
        "scripts/iterative_test_fix_loop.py:30",
        "scripts/launch_test_env.py:155",
        "scripts/run_all_test_categories.py:20",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/test_comprehensive_scanner.py:126",
        "scripts/test_failure_analyzer.py:338"
      ]
    },
    "unique tokens - no infinite loop": {
      "value": "unique tokens - no infinite loop",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:141"
      ]
    },
    "unique types": {
      "value": "unique types",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:173"
      ]
    },
    "unique-test-": {
      "value": "unique-test-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:40"
      ]
    },
    "unique@test.com": {
      "value": "unique@test.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:41"
      ]
    },
    "unique_event_types": {
      "value": "unique_event_types",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:118",
        "scripts/test_agent_execution_websocket_integration.py:308"
      ]
    },
    "unique_token_id_33": {
      "value": "unique_token_id_33",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:147",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:155"
      ]
    },
    "unit": {
      "value": "unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:23",
        "scripts/add_test_markers.py:53",
        "scripts/autonomous_review/test_reviewer.py:213",
        "scripts/autonomous_review/test_reviewer.py:223",
        "scripts/autonomous_review/test_reviewer.py:224",
        "scripts/batch_test_generator.py:65",
        "scripts/batch_test_generator.py:118",
        "scripts/batch_test_generator.py:143",
        "scripts/batch_test_generator.py:164",
        "scripts/batch_test_generator.py:173"
      ]
    },
    "unit test files. Unit tests should mock network calls.": {
      "value": "unit test files. Unit tests should mock network calls.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:143"
      ]
    },
    "unittest": {
      "value": "unittest",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:223",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "unittest.TestCase": {
      "value": "unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:271",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/fix_test_import_errors.py:240",
        "scripts/fix_test_import_errors.py:241"
      ]
    },
    "unknown": {
      "value": "unknown",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:296",
        "scripts/setup_test_environment.py:65",
        "scripts/setup_test_environment.py:66",
        "scripts/setup_test_environment.py:67",
        "scripts/setup_test_environment.py:68",
        "scripts/setup_test_environment.py:69",
        "scripts/setup_test_environment.py:70",
        "scripts/setup_test_environment.py:71",
        "scripts/test/test_staging_quick.py:18",
        "scripts/test/test_staging_quick.py:31"
      ]
    },
    "unknown_module": {
      "value": "unknown_module",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:173"
      ]
    },
    "unknown_service": {
      "value": "unknown_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:158"
      ]
    },
    "unmatched": {
      "value": "unmatched",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:240"
      ]
    },
    "up": {
      "value": "up",
      "category": "test_literals",
      "locations": [
        "scripts/launch_test_env.py:88",
        "scripts/start_test_services.py:48"
      ]
    },
    "update": {
      "value": "update",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:82",
        "scripts/pytest_resource_monitor.py:261"
      ]
    },
    "update-in-production": {
      "value": "update-in-production",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:426"
      ]
    },
    "updated_at": {
      "value": "updated_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:44",
        "auth_service/tests/test_critical_bugs_simple.py:65"
      ]
    },
    "upgrade": {
      "value": "upgrade",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:105"
      ]
    },
    "uri": {
      "value": "uri",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:59"
      ]
    },
    "url": {
      "value": "url",
      "category": "test_literals",
      "locations": [
        "scripts/staging_comprehensive_test.py:103",
        "scripts/staging_comprehensive_test.py:135",
        "scripts/staging_comprehensive_test.py:222",
        "scripts/staging_comprehensive_test.py:244",
        "scripts/test/verify_test_ports.py:29",
        "scripts/test/verify_test_ports.py:30",
        "scripts/test/verify_test_ports.py:49",
        "scripts/test/verify_test_ports.py:51",
        "scripts/test_cold_start_e2e.py:195",
        "scripts/test_cold_start_e2e.py:196"
      ]
    },
    "urls": {
      "value": "urls",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:94",
        "scripts/test_docker_manager.py:207",
        "scripts/test_docker_manager.py:239",
        "scripts/test_service_health_simple.py:44"
      ]
    },
    "us-central1": {
      "value": "us-central1",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:35"
      ]
    },
    "us-east-1": {
      "value": "us-east-1",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:57"
      ]
    },
    "usage": {
      "value": "usage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:116",
        "scripts/setup_staging_test_account.py:123",
        "scripts/test_agent_pipeline_simple.py:194"
      ]
    },
    "usage_examples": {
      "value": "usage_examples",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:258"
      ]
    },
    "usage_metrics": {
      "value": "usage_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:57"
      ]
    },
    "usage_tracking_service.py": {
      "value": "usage_tracking_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:131"
      ]
    },
    "use_mocks": {
      "value": "use_mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:130",
        "scripts/unified_test_config.py:138",
        "scripts/unified_test_config.py:146",
        "scripts/unified_test_config.py:154",
        "scripts/unified_test_config.py:304"
      ]
    },
    "used_memory": {
      "value": "used_memory",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:109",
        "scripts/test_service_monitor.py:109",
        "scripts/test_service_monitor.py:251"
      ]
    },
    "user": {
      "value": "user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:141",
        "auth_service/test_staging_db_connection.py:58",
        "auth_service/test_staging_db_connection.py:95",
        "auth_service/tests/factories/permission_factory.py:223",
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/token_factory.py:190",
        "auth_service/tests/factories/token_factory.py:215",
        "auth_service/tests/factories/token_factory.py:221",
        "auth_service/tests/factories/user_factory.py:38",
        "auth_service/tests/test_auth_comprehensive_audit.py:378"
      ]
    },
    "user events": {
      "value": "user events",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:320"
      ]
    },
    "user-": {
      "value": "user-",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:141",
        "auth_service/tests/test_auth_comprehensive_audit.py:499",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:214",
        "scripts/test_intensive_serialization.py:70"
      ]
    },
    "user-123": {
      "value": "user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:273",
        "auth_service/tests/unit/test_refresh_endpoint.py:302",
        "auth_service/tests/unit/test_refresh_endpoint.py:316"
      ]
    },
    "user-blacklist-test": {
      "value": "user-blacklist-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:473"
      ]
    },
    "user-id-123": {
      "value": "user-id-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:284"
      ]
    },
    "user-session-1": {
      "value": "user-session-1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:188"
      ]
    },
    "user-session-2": {
      "value": "user-session-2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:189"
      ]
    },
    "user1": {
      "value": "user1",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:153",
        "scripts/test_blocking_analysis.py:174"
      ]
    },
    "user101": {
      "value": "user101",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:91"
      ]
    },
    "user123": {
      "value": "user123",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:59",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:26"
      ]
    },
    "user2": {
      "value": "user2",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:154"
      ]
    },
    "user456": {
      "value": "user456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:45"
      ]
    },
    "user789": {
      "value": "user789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:64"
      ]
    },
    "user:email": {
      "value": "user:email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:220"
      ]
    },
    "user:read_profile": {
      "value": "user:read_profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:19",
        "auth_service/tests/factories/permission_factory.py:185"
      ]
    },
    "user:update_profile": {
      "value": "user:update_profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:20"
      ]
    },
    "user@example.com": {
      "value": "user@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:148",
        "auth_service/tests/test_oauth_state_validation.py:270",
        "auth_service/tests/test_oauth_state_validation.py:285",
        "auth_service/tests/test_refresh_critical_fix.py:62",
        "auth_service/tests/test_refresh_critical_fix.py:63",
        "auth_service/tests/test_refresh_critical_fix.py:86",
        "auth_service/tests/test_refresh_critical_fix.py:88",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:138",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:273",
        "auth_service/tests/test_refresh_token_fix.py:79"
      ]
    },
    "user@netra.local": {
      "value": "user@netra.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:123",
        "scripts/test_seed_data.py:254"
      ]
    },
    "user@staging.netrasystems.ai": {
      "value": "user@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_critical_fix.py:113"
      ]
    },
    "userEvent": {
      "value": "userEvent",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:663"
      ]
    },
    "user_": {
      "value": "user_",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:173",
        "scripts/test_data_validator_backup.py:239",
        "scripts/test_data_validator_backup.py:294",
        "scripts/test_data_validator_backup.py:618",
        "scripts/test_data_validator_backup.py:670"
      ]
    },
    "user_1": {
      "value": "user_1",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:208",
        "scripts/test_data_validator_backup.py:255",
        "scripts/test_data_validator_backup.py:274"
      ]
    },
    "user_789": {
      "value": "user_789",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:102"
      ]
    },
    "user_agent": {
      "value": "user_agent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:55",
        "auth_service/tests/factories/session_factory.py:36",
        "auth_service/tests/test_auth_real_services_comprehensive.py:118"
      ]
    },
    "user_count": {
      "value": "user_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_monitor.py:73",
        "scripts/test_service_monitor.py:246"
      ]
    },
    "user_data": {
      "value": "user_data",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:171"
      ]
    },
    "user_flows": {
      "value": "user_flows",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:357"
      ]
    },
    "user_id": {
      "value": "user_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:40",
        "netra_backend/app/services/test_environment.py:52",
        "netra_backend/app/services/test_environment.py:67",
        "netra_backend/app/services/test_environment.py:79",
        "auth_service/tests/factories/audit_factory.py:52",
        "auth_service/tests/factories/permission_factory.py:81",
        "auth_service/tests/factories/session_factory.py:34",
        "auth_service/tests/test_auth_comprehensive.py:151",
        "auth_service/tests/test_auth_real_services_comprehensive.py:175",
        "auth_service/tests/test_auth_real_services_comprehensive.py:187"
      ]
    },
    "user_initiated": {
      "value": "user_initiated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:107",
        "auth_service/tests/factories/audit_factory.py:122"
      ]
    },
    "user_intent": {
      "value": "user_intent",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:50"
      ]
    },
    "user_message": {
      "value": "user_message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_direct.py:257"
      ]
    },
    "user_prompt": {
      "value": "user_prompt",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/api/test_endpoints.py:35",
        "scripts/test_adaptive_workflow.py:228",
        "scripts/test_adaptive_workflow_local.py:45"
      ]
    },
    "user_request": {
      "value": "user_request",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:36",
        "scripts/test_intensive_serialization.py:68"
      ]
    },
    "userblacklist@example.com": {
      "value": "userblacklist@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:474"
      ]
    },
    "userinfo_url": {
      "value": "userinfo_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:290"
      ]
    },
    "users": {
      "value": "users",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/test_environment.py:61",
        "netra_backend/app/services/test_environment.py:76",
        "netra_backend/app/services/test_environment.py:78"
      ]
    },
    "users.py": {
      "value": "users.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:72"
      ]
    },
    "uses_real_clickhouse": {
      "value": "uses_real_clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:45"
      ]
    },
    "uses_real_database": {
      "value": "uses_real_database",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:41"
      ]
    },
    "uses_real_llm": {
      "value": "uses_real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:39"
      ]
    },
    "uses_real_redis": {
      "value": "uses_real_redis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:43"
      ]
    },
    "using mock": {
      "value": "using mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:234"
      ]
    },
    "utf-8": {
      "value": "utf-8",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_all_imports.py:113",
        "auth_service/tests/test_all_imports.py:155",
        "auth_service/tests/test_environment_loading.py:339",
        "scripts/add_pytest_markers.py:110",
        "scripts/add_pytest_markers.py:124",
        "scripts/add_test_markers.py:151",
        "scripts/add_test_markers.py:171",
        "scripts/align_test_imports.py:88",
        "scripts/align_test_imports.py:105",
        "scripts/align_test_imports.py:222"
      ]
    },
    "util": {
      "value": "util",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:448",
        "scripts/auto_fix_test_violations.py:509"
      ]
    },
    "utilities": {
      "value": "utilities",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:274",
        "scripts/auto_fix_test_sizes.py:305",
        "scripts/compliance/test_refactor_helper.py:433",
        "scripts/compliance/test_refactor_helper.py:571",
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "utils.py": {
      "value": "utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:70"
      ]
    },
    "uvicorn": {
      "value": "uvicorn",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:79",
        "scripts/test_docker_config.py:81",
        "scripts/test_docker_config.py:81",
        "scripts/test_websocket_dev_mode.py:54"
      ]
    },
    "uvicorn_config": {
      "value": "uvicorn_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:162"
      ]
    },
    "valid": {
      "value": "valid",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:260",
        "auth_service/test_staging_db_connection.py:270",
        "scripts/compliance/test_refactor_helper.py:612",
        "scripts/compliance/test_refactor_helper.py:732",
        "scripts/test_auth_client_debug.py:84",
        "scripts/test_data_validator_backup.py:189",
        "scripts/test_data_validator_backup.py:199",
        "scripts/test_data_validator_backup.py:216",
        "scripts/test_data_validator_backup.py:230",
        "scripts/test_data_validator_backup.py:283"
      ]
    },
    "valid.refresh.token": {
      "value": "valid.refresh.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:47",
        "auth_service/tests/unit/test_refresh_endpoint.py:58",
        "auth_service/tests/unit/test_refresh_endpoint.py:70",
        "auth_service/tests/unit/test_refresh_endpoint.py:75",
        "auth_service/tests/unit/test_refresh_endpoint.py:87",
        "auth_service/tests/unit/test_refresh_endpoint.py:92"
      ]
    },
    "valid.token": {
      "value": "valid.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:139"
      ]
    },
    "valid_refresh_token": {
      "value": "valid_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_integration.py:72"
      ]
    },
    "validate": {
      "value": "validate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:683",
        "scripts/compliance/test_refactor_helper.py:727",
        "scripts/comprehensive_test_fixer.py:88",
        "scripts/comprehensive_test_fixer.py:251"
      ]
    },
    "validate@example.com": {
      "value": "validate@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:95"
      ]
    },
    "validate_base_url": {
      "value": "validate_base_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:45"
      ]
    },
    "validate_llm_test_models": {
      "value": "validate_llm_test_models",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:77"
      ]
    },
    "validate_token": {
      "value": "validate_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:269",
        "auth_service/tests/unit/test_refresh_endpoint.py:292",
        "auth_service/tests/unit/test_refresh_endpoint.py:301",
        "auth_service/tests/unit/test_refresh_endpoint.py:313"
      ]
    },
    "validation": {
      "value": "validation",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:728",
        "scripts/test_cors.py:267",
        "scripts/test_cors.py:286",
        "scripts/test_cors.py:462"
      ]
    },
    "validation failed": {
      "value": "validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:145"
      ]
    },
    "validation-test": {
      "value": "validation-test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:94"
      ]
    },
    "validation_edge_cases": {
      "value": "validation_edge_cases",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:105",
        "scripts/frontend_iterative_test_runner.py:405",
        "scripts/frontend_iterative_test_runner.py:460",
        "scripts/frontend_iterative_test_runner.py:488"
      ]
    },
    "validation_errors": {
      "value": "validation_errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:74"
      ]
    },
    "validation_id": {
      "value": "validation_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:241",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:249"
      ]
    },
    "validation_passed": {
      "value": "validation_passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:242",
        "scripts/test_agent_execution_websocket_integration.py:319",
        "scripts/test_agent_execution_websocket_integration.py:322"
      ]
    },
    "validation_results": {
      "value": "validation_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:149"
      ]
    },
    "validation_status": {
      "value": "validation_status",
      "category": "test_literals",
      "locations": [
        "scripts/test_triage_flow.py:72"
      ]
    },
    "validation_success": {
      "value": "validation_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_standalone.py:101",
        "scripts/test_websocket_standalone.py:178",
        "scripts/test_websocket_standalone.py:183"
      ]
    },
    "validation_test": {
      "value": "validation_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:282"
      ]
    },
    "validators.py": {
      "value": "validators.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:108"
      ]
    },
    "validuser@example.com": {
      "value": "validuser@example.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:23",
        "scripts/test_signup_flow_manual.py:42",
        "scripts/test_signup_flow_manual.py:141",
        "scripts/test_signup_flow_manual.py:158"
      ]
    },
    "value": {
      "value": "value",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:161",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:174",
        "auth_service/tests/test_redis_staging_connectivity_fixes.py:184",
        "auth_service/tests/test_redis_staging_fixes.py:99",
        "scripts/compliance/test_size_validator.py:269",
        "scripts/optimize_test_performance.py:85",
        "scripts/optimize_test_performance.py:118",
        "scripts/optimize_test_performance.py:120",
        "scripts/setup_staging_test_account.py:155",
        "scripts/setup_staging_test_account.py:163"
      ]
    },
    "value_": {
      "value": "value_",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:48",
        "scripts/test_intensive_serialization.py:53",
        "scripts/test_intensive_serialization.py:89"
      ]
    },
    "value_based_corpus/create_value_corpus.py": {
      "value": "value_based_corpus/create_value_corpus.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:57"
      ]
    },
    "value_dev": {
      "value": "value_dev",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_redis_staging_fixes.py:124",
        "auth_service/tests/test_redis_staging_fixes.py:126"
      ]
    },
    "value_score": {
      "value": "value_score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:75",
        "scripts/business_value_test_index.py:540",
        "scripts/business_value_test_index.py:597"
      ]
    },
    "variable": {
      "value": "variable",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:704"
      ]
    },
    "variables": {
      "value": "variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:73"
      ]
    },
    "vars": {
      "value": "vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:25",
        "scripts/test_oauth_dev_config.py:39",
        "scripts/test_oauth_dev_config.py:51",
        "scripts/test_oauth_dev_config.py:81"
      ]
    },
    "vary": {
      "value": "vary",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:246",
        "scripts/test_cors_issue.py:24",
        "scripts/test_cors_issue.py:45",
        "scripts/test_cors_issue.py:67",
        "scripts/test_staging_cors.py:57",
        "scripts/test_staging_cors.py:80"
      ]
    },
    "vary_header": {
      "value": "vary_header",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:204",
        "scripts/test_cors.py:247",
        "scripts/test_cors.py:248"
      ]
    },
    "vector_service.py": {
      "value": "vector_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:129"
      ]
    },
    "venv": {
      "value": "venv",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19",
        "scripts/generate_test_audit.py:22",
        "scripts/migrate_test_ids.py:172"
      ]
    },
    "venv_test": {
      "value": "venv_test",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19"
      ]
    },
    "verbose": {
      "value": "verbose",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:198",
        "scripts/unified_test_config.py:205",
        "scripts/unified_test_config.py:212",
        "scripts/unified_test_config.py:219",
        "scripts/unified_test_config.py:385"
      ]
    },
    "verified_email": {
      "value": "verified_email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:236",
        "auth_service/tests/factories/user_factory.py:86",
        "auth_service/tests/test_oauth_state_validation.py:272"
      ]
    },
    "verify": {
      "value": "verify",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:88",
        "scripts/comprehensive_test_fixer.py:251"
      ]
    },
    "verify_exp": {
      "value": "verify_exp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:175",
        "scripts/test_staging_auth.py:36"
      ]
    },
    "verify_signature": {
      "value": "verify_signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:175",
        "scripts/test_staging_auth.py:23"
      ]
    },
    "version": {
      "value": "version",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:717",
        "scripts/test/test_staging_quick.py:31",
        "scripts/test_backend_auth_config.py:34",
        "scripts/test_ssl_certificates_staging.py:79",
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "version: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: netra_test\n      POSTGRES_PASSWORD: test_password\n      POSTGRES_DB: netra_test\n    ports:\n      - \"5433:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U netra_test\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6380:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5": {
      "value": "version: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: netra_test\n      POSTGRES_PASSWORD: test_password\n      POSTGRES_DB: netra_test\n    ports:\n      - \"5433:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U netra_test\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6380:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:62"
      ]
    },
    "view": {
      "value": "view",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172"
      ]
    },
    "violation_type": {
      "value": "violation_type",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:627",
        "scripts/compliance/test_size_validator.py:441",
        "scripts/compliance/test_size_validator.py:470",
        "scripts/compliance/test_size_validator.py:471"
      ]
    },
    "violation_type_breakdown": {
      "value": "violation_type_breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:262",
        "scripts/remove_test_stubs.py:320"
      ]
    },
    "violations": {
      "value": "violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:611",
        "scripts/auto_fix_test_sizes.py:626",
        "scripts/check_test_compliance.py:119",
        "scripts/check_test_compliance.py:175",
        "scripts/check_test_compliance.py:175",
        "scripts/check_test_compliance.py:176",
        "scripts/compliance/test_size_validator.py:77",
        "scripts/compliance/test_size_validator.py:92",
        "scripts/compliance/test_size_validator.py:118",
        "scripts/compliance/test_size_validator.py:436"
      ]
    },
    "violations (dry_run=": {
      "value": "violations (dry_run=",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    "violations automatically.": {
      "value": "violations automatically.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:63"
      ]
    },
    "violations in": {
      "value": "violations in",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718",
        "scripts/remove_test_stubs.py:248",
        "scripts/validate_llm_test_models.py:164"
      ]
    },
    "violations remain after auto-fix:": {
      "value": "violations remain after auto-fix:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:74"
      ]
    },
    "violations)": {
      "value": "violations)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:318",
        "scripts/compliance/test_violations_reporter.py:116"
      ]
    },
    "violations):": {
      "value": "violations):",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:69",
        "scripts/ci/check_test_stubs.py:77"
      ]
    },
    "violations.": {
      "value": "violations.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:371"
      ]
    },
    "volume mounts (should be in override only)": {
      "value": "volume mounts (should be in override only)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:113"
      ]
    },
    "volumes": {
      "value": "volumes",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_config.py:109"
      ]
    },
    "vs": {
      "value": "vs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:273",
        "scripts/test_secret_manager_builder_critical.py:404"
      ]
    },
    "w": {
      "value": "w",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:124",
        "scripts/align_test_imports.py:418",
        "scripts/analyze_test_mocks.py:185",
        "scripts/analyze_test_overlap.py:501",
        "scripts/analyze_test_overlap.py:612",
        "scripts/apply_fast_test_decorators.py:120",
        "scripts/auto_fix_test_sizes.py:408",
        "scripts/auto_fix_test_violations.py:536",
        "scripts/auto_fix_test_violations.py:564",
        "scripts/auto_fix_test_violations.py:590"
      ]
    },
    "waitFor": {
      "value": "waitFor",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:741"
      ]
    },
    "warning": {
      "value": "warning",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:231",
        "auth_service/tests/auth-service-down-critical-scenarios.py:378",
        "scripts/ci/check_test_stubs.py:97",
        "scripts/setup_test_environment.py:133",
        "scripts/setup_test_environment.py:168",
        "scripts/setup_test_environment.py:186",
        "scripts/setup_test_environment.py:285",
        "scripts/test_data_validator_backup.py:303",
        "scripts/test_data_validator_backup.py:304",
        "scripts/test_data_validator_backup.py:560"
      ]
    },
    "warnings": {
      "value": "warnings",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:267",
        "scripts/compliance/test_refactor_helper.py:591",
        "scripts/compliance/test_refactor_helper.py:596",
        "scripts/compliance/test_refactor_helper.py:597",
        "scripts/compliance/test_refactor_helper.py:613",
        "scripts/compliance/test_refactor_helper.py:621",
        "scripts/compliance/test_refactor_helper.py:627",
        "scripts/compliance/test_refactor_helper.py:733",
        "scripts/compliance/test_refactor_helper.py:735",
        "scripts/compliance/test_size_validator.py:400"
      ]
    },
    "warnings (improvement:": {
      "value": "warnings (improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup_with_missing_optionals.py:140",
        "scripts/test_service_startup_with_missing_optionals.py:148",
        "scripts/test_service_startup_with_missing_optionals.py:157"
      ]
    },
    "warnings,": {
      "value": "warnings,",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_validation_clean.py:48",
        "scripts/test_environment_validation_clean.py:85",
        "scripts/test_improved_environment_validation.py:49",
        "scripts/test_improved_environment_validation.py:86"
      ]
    },
    "warp-custom": {
      "value": "warp-custom",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:236"
      ]
    },
    "warp-custom-default=catthehacker/ubuntu:act-latest": {
      "value": "warp-custom-default=catthehacker/ubuntu:act-latest",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:116",
        "scripts/test_workflows_with_act.py:155"
      ]
    },
    "watching": {
      "value": "watching",
      "category": "test_literals",
      "locations": [
        "scripts/test_hot_reload.py:83"
      ]
    },
    "weak": {
      "value": "weak",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:185",
        "scripts/test_signup_flow_manual.py:77",
        "scripts/test_signup_flow_manual.py:78"
      ]
    },
    "weakpass@example.com": {
      "value": "weakpass@example.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:76"
      ]
    },
    "web": {
      "value": "web",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:157",
        "scripts/test_coordination_fixes.py:318"
      ]
    },
    "web_": {
      "value": "web_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:93"
      ]
    },
    "web_search": {
      "value": "web_search",
      "category": "test_literals",
      "locations": [
        "scripts/test_seed_data.py:335",
        "scripts/test_seed_data.py:352"
      ]
    },
    "web_stream_data": {
      "value": "web_stream_data",
      "category": "test_literals",
      "locations": [
        "scripts/test_ga4_connection.py:66"
      ]
    },
    "webpack": {
      "value": "webpack",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70"
      ]
    },
    "websocket": {
      "value": "websocket",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:26",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:48",
        "scripts/analyze_test_mocks.py:49",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/auto_fix_test_sizes.py:343",
        "scripts/auto_fix_test_violations.py:495",
        "scripts/auto_fix_test_violations.py:496",
        "scripts/batch_test_generator.py:99",
        "scripts/batch_test_generator.py:383"
      ]
    },
    "websocket.py": {
      "value": "websocket.py",
      "category": "test_literals",
      "locations": [
        "scripts/batch_test_generator.py:72"
      ]
    },
    "websocket_bypass": {
      "value": "websocket_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:220",
        "scripts/test_docker_websocket_fix.py:276"
      ]
    },
    "websocket_config": {
      "value": "websocket_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:94",
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "websocket_connectable": {
      "value": "websocket_connectable",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_websocket_comprehensive.py:368"
      ]
    },
    "websocket_connection": {
      "value": "websocket_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:41",
        "scripts/test_websocket_dev_mode.py:190",
        "scripts/test_websocket_dev_mode.py:220",
        "scripts/test_websocket_dev_mode.py:229"
      ]
    },
    "websocket_core/manager.py blocks the event loop during agent updates.": {
      "value": "websocket_core/manager.py blocks the event loop during agent updates.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:235"
      ]
    },
    "websocket_core_imports": {
      "value": "websocket_core_imports",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:158"
      ]
    },
    "websocket_cors_test_results_": {
      "value": "websocket_cors_test_results_",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:335"
      ]
    },
    "websocket_injection_fix_comprehensive\\.xml": {
      "value": "websocket_injection_fix_comprehensive\\.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:91"
      ]
    },
    "websocket_injection_validation_report.txt": {
      "value": "websocket_injection_validation_report.txt",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:661"
      ]
    },
    "websocket_manager": {
      "value": "websocket_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:47",
        "scripts/test_supervisor_websocket_integration.py:70",
        "scripts/test_supervisor_websocket_integration.py:127",
        "scripts/test_supervisor_websocket_integration.py:135"
      ]
    },
    "websocket_manager = Mock()": {
      "value": "websocket_manager = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:56"
      ]
    },
    "websocket_manager = UnifiedWebSocketManager()": {
      "value": "websocket_manager = UnifiedWebSocketManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:58"
      ]
    },
    "websocket_manager\\s*=\\s*get_websocket_manager\\(\\)": {
      "value": "websocket_manager\\s*=\\s*get_websocket_manager\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:49",
        "scripts/test_websocket_injection_fix_complete.py:58",
        "scripts/test_websocket_injection_fix_complete.py:66"
      ]
    },
    "websocket_notifier": {
      "value": "websocket_notifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:72",
        "scripts/test_supervisor_websocket_integration.py:83",
        "scripts/test_supervisor_websocket_integration.py:136"
      ]
    },
    "websocket_test": {
      "value": "websocket_test",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:89"
      ]
    },
    "websocket_test_user": {
      "value": "websocket_test_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:148"
      ]
    },
    "websocket_timeout": {
      "value": "websocket_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:46",
        "scripts/test_cold_start_e2e.py:294",
        "scripts/test_cold_start_e2e.py:398"
      ]
    },
    "websocket_url": {
      "value": "websocket_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:61"
      ]
    },
    "websocket_wrapper": {
      "value": "websocket_wrapper",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:161"
      ]
    },
    "websockets": {
      "value": "websockets",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:29"
      ]
    },
    "websockets library not installed - skipping WebSocket connection test": {
      "value": "websockets library not installed - skipping WebSocket connection test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:227"
      ]
    },
    "websocket|WebSocket|ws://": {
      "value": "websocket|WebSocket|ws://",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:442"
      ]
    },
    "websocket|ws|realtime|socket": {
      "value": "websocket|ws|realtime|socket",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:96"
      ]
    },
    "weekend_multiplier": {
      "value": "weekend_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:93"
      ]
    },
    "widget": {
      "value": "widget",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "will-be-set-by-secrets": {
      "value": "will-be-set-by-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:425"
      ]
    },
    "win32": {
      "value": "win32",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/setup_test_environment.py:10",
        "scripts/test/test_clickhouse_staging_fix.py:15",
        "scripts/test_backend_optimized.py:456",
        "scripts/test_backend_ORIGINAL.py:58",
        "scripts/test_frontend_ORIGINAL.py:524",
        "scripts/test_oauth_local.py:22",
        "scripts/test_oauth_local.py:36",
        "scripts/test_secret_manager_debug.py:13",
        "scripts/test_staging_websocket_comprehensive.py:479"
      ]
    },
    "window\\.dataLayer\\s*=\\s*window\\.dataLayer\\s*\\|\\|\\s*\\[\\]|dataLayer\\s*=\\s*\\[\\]": {
      "value": "window\\.dataLayer\\s*=\\s*window\\.dataLayer\\s*\\|\\|\\s*\\[\\]|dataLayer\\s*=\\s*\\[\\]",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:49"
      ]
    },
    "with": {
      "value": "with",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283",
        "scripts/test_log_introspection.py:91"
      ]
    },
    "with connection": {
      "value": "with connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_simple.py:184",
        "scripts/test_websocket_chat_standalone.py:183"
      ]
    },
    "with errors": {
      "value": "with errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:100"
      ]
    },
    "with same token should fail": {
      "value": "with same token should fail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:166"
      ]
    },
    "with\\s+patch\\.dict\\s*\\(\\s*os\\.environ\\s*,\\s*([^,)]+)(?:\\s*,\\s*clear\\s*=\\s*(True|False))?\\s*\\)\\s*:": {
      "value": "with\\s+patch\\.dict\\s*\\(\\s*os\\.environ\\s*,\\s*([^,)]+)(?:\\s*,\\s*clear\\s*=\\s*(True|False))?\\s*\\)\\s*:",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_environment_access.py:191"
      ]
    },
    "word_count": {
      "value": "word_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_execution_websocket_integration.py:369"
      ]
    },
    "worker": {
      "value": "worker",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35"
      ]
    },
    "workers": {
      "value": "workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:195",
        "scripts/unified_test_config.py:202",
        "scripts/unified_test_config.py:209",
        "scripts/unified_test_config.py:216",
        "scripts/unified_test_config.py:365"
      ]
    },
    "workflow": {
      "value": "workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:294",
        "scripts/test_workflows_with_act.py:305",
        "scripts/test_workflows_with_act.py:340",
        "scripts/test_workflows_with_act.py:346"
      ]
    },
    "workflow-test-report.json": {
      "value": "workflow-test-report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:350"
      ]
    },
    "workflow_call": {
      "value": "workflow_call",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:148"
      ]
    },
    "workflow_orchestrator": {
      "value": "workflow_orchestrator",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_supervisor_import.py:49"
      ]
    },
    "workflow_verification_results.md": {
      "value": "workflow_verification_results.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:259"
      ]
    },
    "workflow_verification_test_report.md": {
      "value": "workflow_verification_test_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:215"
      ]
    },
    "workflows": {
      "value": "workflows",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:27"
      ]
    },
    "workflows to test": {
      "value": "workflows to test",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:280"
      ]
    },
    "working_endpoint": {
      "value": "working_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:77"
      ]
    },
    "workload": {
      "value": "workload",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "workload_": {
      "value": "workload_",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:174",
        "scripts/test_data_validator_backup.py:619",
        "scripts/test_data_validator_backup.py:671"
      ]
    },
    "workload_id": {
      "value": "workload_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:174",
        "scripts/test_data_validator_backup.py:619",
        "scripts/test_data_validator_backup.py:638",
        "scripts/test_data_validator_backup.py:671"
      ]
    },
    "workload_patterns": {
      "value": "workload_patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:18"
      ]
    },
    "workload_type": {
      "value": "workload_type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:257",
        "scripts/test_adaptive_workflow_direct.py:68",
        "scripts/test_triage_flow.py:37"
      ]
    },
    "workloads": {
      "value": "workloads",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:495"
      ]
    },
    "write": {
      "value": "write",
      "category": "test_literals",
      "locations": [
        "auth_service/test_auth_direct.py:34",
        "auth_service/tests/test_auth_comprehensive_audit.py:63",
        "auth_service/tests/test_auth_real_services_comprehensive.py:219",
        "auth_service/tests/test_refresh_critical_fix.py:30",
        "auth_service/tests/test_refresh_critical_fix.py:94",
        "auth_service/tests/test_refresh_critical_fix.py:114",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:42",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:123",
        "auth_service/tests/test_refresh_loop_prevention_comprehensive.py:256",
        "auth_service/tests/test_refresh_token_fix.py:36"
      ]
    },
    "wrong-challenge": {
      "value": "wrong-challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:127"
      ]
    },
    "wrong-secret-key": {
      "value": "wrong-secret-key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:159"
      ]
    },
    "wrong-type-test": {
      "value": "wrong-type-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:207"
      ]
    },
    "wrongField": {
      "value": "wrongField",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:129"
      ]
    },
    "wrong_field": {
      "value": "wrong_field",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:293",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:108",
        "auth_service/tests/test_refresh_endpoint_integration.py:163"
      ]
    },
    "wrongpassword": {
      "value": "wrongpassword",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:379"
      ]
    },
    "wrongtype@example.com": {
      "value": "wrongtype@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:208"
      ]
    },
    "ws": {
      "value": "ws",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:48",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/auto_fix_test_violations.py:495"
      ]
    },
    "ws-test": {
      "value": "ws-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:572",
        "auth_service/tests/test_auth_comprehensive_audit.py:583"
      ]
    },
    "ws://": {
      "value": "ws://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_cors.py:137"
      ]
    },
    "ws://backend:8000/ws": {
      "value": "ws://backend:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:128"
      ]
    },
    "ws://localhost:": {
      "value": "ws://localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:25"
      ]
    },
    "ws://localhost:8000": {
      "value": "ws://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:156",
        "scripts/test_docker_websocket_fix.py:47",
        "scripts/test_websocket_cors_comprehensive.py:324",
        "scripts/test_websocket_middleware.py:21"
      ]
    },
    "ws://localhost:8000/ws": {
      "value": "ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:48",
        "scripts/test_docker_websocket_fix.py:123",
        "scripts/test_websocket_connection.py:26",
        "scripts/test_websocket_connection.py:32",
        "scripts/test_websocket_connection.py:40",
        "scripts/test_websocket_connection.py:127",
        "scripts/test_websocket_dev_mode.py:35",
        "scripts/test_websocket_manual.py:18",
        "scripts/test_websocket_simple.py:16",
        "scripts/test_websocket_simple.py:69"
      ]
    },
    "ws://localhost:8000/ws/test": {
      "value": "ws://localhost:8000/ws/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:70"
      ]
    },
    "ws@example.com": {
      "value": "ws@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive_audit.py:572",
        "auth_service/tests/test_auth_comprehensive_audit.py:584"
      ]
    },
    "ws_max_size": {
      "value": "ws_max_size",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:128"
      ]
    },
    "ws_ping_interval": {
      "value": "ws_ping_interval",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:126"
      ]
    },
    "ws_ping_timeout": {
      "value": "ws_ping_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_modern_websocket_migration.py:127"
      ]
    },
    "ws_url": {
      "value": "ws_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:446"
      ]
    },
    "wss://": {
      "value": "wss://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:137"
      ]
    },
    "wss://api.staging.netrasystems.ai/ws": {
      "value": "wss://api.staging.netrasystems.ai/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:33",
        "scripts/test_staging_auth_live.py:177",
        "scripts/test_staging_deployment.py:147"
      ]
    },
    "wss://netra-backend-staging-pnovr5vsba-uc.a.run.app/ws": {
      "value": "wss://netra-backend-staging-pnovr5vsba-uc.a.run.app/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:37"
      ]
    },
    "www-": {
      "value": "www-",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:159"
      ]
    },
    "wörk-löad_ñoñé": {
      "value": "wörk-löad_ñoñé",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:638"
      ]
    },
    "x": {
      "value": "x",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:19",
        "scripts/simple_websocket_blocking_test.py:26",
        "scripts/simple_websocket_blocking_test.py:30",
        "scripts/test_async_serialization_direct.py:29",
        "scripts/test_async_serialization_direct.py:58",
        "scripts/test_backend_optimized.py:330",
        "scripts/test_intensive_serialization.py:41",
        "scripts/test_intensive_serialization.py:69",
        "scripts/test_intensive_serialization.py:120",
        "scripts/test_staging_auth.py:99"
      ]
    },
    "x-": {
      "value": "x-",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_live.py:159"
      ]
    },
    "x-auth-error": {
      "value": "x-auth-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:88"
      ]
    },
    "x-auth-service-url": {
      "value": "x-auth-service-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:88"
      ]
    },
    "x-environment": {
      "value": "x-environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_auth_config.py:88"
      ]
    },
    "xdist": {
      "value": "xdist",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_ORIGINAL.py:157"
      ]
    },
    "xedvrr4c3r.us-central1.gcp.clickhouse.cloud": {
      "value": "xedvrr4c3r.us-central1.gcp.clickhouse.cloud",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:28",
        "scripts/test_staging_clickhouse.py:110"
      ]
    },
    "y": {
      "value": "y",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:112",
        "scripts/iterative_test_fix_loop.py:151",
        "scripts/test_adaptive_workflow.py:117",
        "scripts/test_adaptive_workflow.py:162",
        "scripts/test_adaptive_workflow.py:193",
        "scripts/test_adaptive_workflow.py:198",
        "scripts/test_intensive_serialization.py:70"
      ]
    },
    "year_end": {
      "value": "year_end",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "yes": {
      "value": "yes",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:117",
        "scripts/test_adaptive_workflow.py:162",
        "scripts/test_adaptive_workflow.py:193",
        "scripts/test_adaptive_workflow.py:198"
      ]
    },
    "z": {
      "value": "z",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:76"
      ]
    },
    "zero_message_loss": {
      "value": "zero_message_loss",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:298"
      ]
    },
    "{": {
      "value": "{",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:49",
        "scripts/check_test_compliance.py:53",
        "scripts/compliance/real_test_requirements_enforcer.py:438",
        "scripts/comprehensive_test_fixer.py:202"
      ]
    },
    "{\"refresh_token\": \"test_token\"": {
      "value": "{\"refresh_token\": \"test_token\"",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:212"
      ]
    },
    "{\"refresh_token\": \"test_token\"}extra": {
      "value": "{\"refresh_token\": \"test_token\"}extra",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:213"
      ]
    },
    "{\"refresh_token\": undefined}": {
      "value": "{\"refresh_token\": undefined}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:216"
      ]
    },
    "{\"refresh_token\":}": {
      "value": "{\"refresh_token\":}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:214"
      ]
    },
    "{refresh_token: \"test_token\"}": {
      "value": "{refresh_token: \"test_token\"}",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_critical_bugs.py:215"
      ]
    },
    "{{.Names}}": {
      "value": "{{.Names}}",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:33",
        "scripts/test_hot_reload.py:22"
      ]
    },
    "|": {
      "value": "|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "| $": {
      "value": "| $",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:150"
      ]
    },
    "| Avg:": {
      "value": "| Avg:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "| Database | Queries | Avg Latency (ms) |": {
      "value": "| Database | Queries | Avg Latency (ms) |",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "| Error:": {
      "value": "| Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:500"
      ]
    },
    "| Failed:": {
      "value": "| Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:247"
      ]
    },
    "| File | Function | Lines | Limit | Fix Suggestion |": {
      "value": "| File | Function | Lines | Limit | Fix Suggestion |",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:485"
      ]
    },
    "| File | Lines | Limit | Fix Suggestion |": {
      "value": "| File | Lines | Limit | Fix Suggestion |",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:476"
      ]
    },
    "| Issue:": {
      "value": "| Issue:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:507"
      ]
    },
    "| Model | Calls | Estimated Cost |": {
      "value": "| Model | Calls | Estimated Cost |",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "| Passed:": {
      "value": "| Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:247"
      ]
    },
    "| Pattern:": {
      "value": "| Pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:497"
      ]
    },
    "| Skipped:": {
      "value": "| Skipped:",
      "category": "test_literals",
      "locations": [
        "scripts/test_real_jwt_e2e.py:247"
      ]
    },
    "|----------|---------|------------------|": {
      "value": "|----------|---------|------------------|",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "|-------|-------|----------------|": {
      "value": "|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "|------|----------|-------|-------|----------------|": {
      "value": "|------|----------|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:486"
      ]
    },
    "|------|-------|-------|----------------|": {
      "value": "|------|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:477"
      ]
    },
    "|def": {
      "value": "|def",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:102"
      ]
    },
    "}": {
      "value": "}",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:49",
        "scripts/check_test_compliance.py:53",
        "scripts/compliance/real_test_requirements_enforcer.py:438"
      ]
    },
    "•": {
      "value": "•",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:161",
        "scripts/test_example_message_flow.py:349",
        "scripts/test_improved_environment_validation.py:54",
        "scripts/test_improved_environment_validation.py:59",
        "scripts/test_improved_environment_validation.py:70",
        "scripts/test_improved_environment_validation.py:204",
        "scripts/test_improved_environment_validation.py:208",
        "scripts/test_improved_environment_validation.py:212",
        "scripts/test_mock_violations_standalone.py:75"
      ]
    },
    "• Blocking errors:": {
      "value": "• Blocking errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:243"
      ]
    },
    "• Can services start?": {
      "value": "• Can services start?",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:242"
      ]
    },
    "• Categories:": {
      "value": "• Categories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:250"
      ]
    },
    "• Categorized missing variables for better understanding": {
      "value": "• Categorized missing variables for better understanding",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:235"
      ]
    },
    "• Clear distinction between errors, warnings, and optional": {
      "value": "• Clear distinction between errors, warnings, and optional",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:236"
      ]
    },
    "• Environment-specific validation (dev vs staging)": {
      "value": "• Environment-specific validation (dev vs staging)",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:234"
      ]
    },
    "• For excessive_mocking violations: Use real components where possible": {
      "value": "• For excessive_mocking violations: Use real components where possible",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:149"
      ]
    },
    "• For file_size violations: Split large test files into focused modules": {
      "value": "• For file_size violations: Split large test files into focused modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:147"
      ]
    },
    "• For function_size violations: Extract helper methods": {
      "value": "• For function_size violations: Extract helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:148"
      ]
    },
    "• For mock_component violations: Replace with real component instantiation": {
      "value": "• For mock_component violations: Replace with real component instantiation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:150"
      ]
    },
    "• Functionality warnings:": {
      "value": "• Functionality warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:244"
      ]
    },
    "• Intelligent startup readiness analysis": {
      "value": "• Intelligent startup readiness analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:237"
      ]
    },
    "• Optional missing:": {
      "value": "• Optional missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:245"
      ]
    },
    "• Optional variables no longer block service startup": {
      "value": "• Optional variables no longer block service startup",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:233"
      ]
    },
    "• Run with --fix to attempt automatic fixes": {
      "value": "• Run with --fix to attempt automatic fixes",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:146"
      ]
    },
    "• Total optional variables:": {
      "value": "• Total optional variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:249"
      ]
    },
    "ℹ [": {
      "value": "ℹ [",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:305"
      ]
    },
    "ℹ️": {
      "value": "ℹ️",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:525",
        "scripts/test_adaptive_workflow.py:62"
      ]
    },
    "ℹ️  Async serialization overhead may not be worth it for simple cases": {
      "value": "ℹ️  Async serialization overhead may not be worth it for simple cases",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:266"
      ]
    },
    "ℹ️  Connection closed due to authentication (expected without token)": {
      "value": "ℹ️  Connection closed due to authentication (expected without token)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:58"
      ]
    },
    "ℹ️  MINOR ISSUE: Only small blocking detected": {
      "value": "ℹ️  MINOR ISSUE: Only small blocking detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:349"
      ]
    },
    "ℹ️  Main endpoint requires authentication or bypass configuration": {
      "value": "ℹ️  Main endpoint requires authentication or bypass configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:134"
      ]
    },
    "ℹ️  OPTIONAL (": {
      "value": "ℹ️  OPTIONAL (",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:214"
      ]
    },
    "ℹ️  Optional Enhancements:": {
      "value": "ℹ️  Optional Enhancements:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:117"
      ]
    },
    "↑": {
      "value": "↑",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:73"
      ]
    },
    "→": {
      "value": "→",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:124",
        "scripts/test_coordination_fixes.py:90",
        "scripts/test_dashboard.py:73",
        "scripts/test_staging_env.py:182"
      ]
    },
    "→ Fix:": {
      "value": "→ Fix:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:293",
        "scripts/setup_test_environment.py:300"
      ]
    },
    "↓": {
      "value": "↓",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:73"
      ]
    },
    "↔ `": {
      "value": "↔ `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:607"
      ]
    },
    "⏰": {
      "value": "⏰",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:121"
      ]
    },
    "⏰ Test timed out": {
      "value": "⏰ Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:318"
      ]
    },
    "⏰ Timeout (expected for timeout test)": {
      "value": "⏰ Timeout (expected for timeout test)",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:80"
      ]
    },
    "⏱️ No more messages received (timeout)": {
      "value": "⏱️ No more messages received (timeout)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:108"
      ]
    },
    "⏱️ STABILITY | Keeping services running for 5 seconds...": {
      "value": "⏱️ STABILITY | Keeping services running for 5 seconds...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:102"
      ]
    },
    "⏳ Waiting for async events to complete...": {
      "value": "⏳ Waiting for async events to complete...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:359"
      ]
    },
    "⏳ Waiting for services to be healthy...": {
      "value": "⏳ Waiting for services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:145"
      ]
    },
    "⏸️  Process interrupted at iteration": {
      "value": "⏸️  Process interrupted at iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:888"
      ]
    },
    "⏹️  Test interrupted by user": {
      "value": "⏹️  Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:252"
      ]
    },
    "└─": {
      "value": "└─",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:276"
      ]
    },
    "●": {
      "value": "●",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:538",
        "scripts/frontend_iterative_test_runner.py:833"
      ]
    },
    "⚠": {
      "value": "⚠",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:295",
        "scripts/test_clickhouse_startup_fix.py:392",
        "scripts/test_staging_login_automated.py:102",
        "scripts/test_staging_login_automated.py:279"
      ]
    },
    "⚠ CLICKHOUSE_PASSWORD not found in GCP secrets": {
      "value": "⚠ CLICKHOUSE_PASSWORD not found in GCP secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:78"
      ]
    },
    "⚠ Could not get service list": {
      "value": "⚠ Could not get service list",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:280"
      ]
    },
    "⚠ Docker Compose not available, skipping integration test": {
      "value": "⚠ Docker Compose not available, skipping integration test",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:257"
      ]
    },
    "⚠ Failed to load from GCP Secret Manager:": {
      "value": "⚠ Failed to load from GCP Secret Manager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:81"
      ]
    },
    "⚠ Manual fix needed: Extract helpers in": {
      "value": "⚠ Manual fix needed: Extract helpers in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:175"
      ]
    },
    "⚠ Manual fix needed: Split": {
      "value": "⚠ Manual fix needed: Split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:172"
      ]
    },
    "⚠ Needs manual review:": {
      "value": "⚠ Needs manual review:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:313"
      ]
    },
    "⚠ No GTM events were captured. Check if GTM is properly initialized.": {
      "value": "⚠ No GTM events were captured. Check if GTM is properly initialized.",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:136"
      ]
    },
    "⚠ No services running, cannot test log retrieval": {
      "value": "⚠ No services running, cannot test log retrieval",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:278"
      ]
    },
    "⚠ Running in failure simulation mode": {
      "value": "⚠ Running in failure simulation mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:320"
      ]
    },
    "⚠ Some services are degraded": {
      "value": "⚠ Some services are degraded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:343"
      ]
    },
    "⚠ [": {
      "value": "⚠ [",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:298"
      ]
    },
    "⚠️": {
      "value": "⚠️",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529",
        "scripts/compliance/real_test_requirements_enforcer.py:525",
        "scripts/test_cold_start_e2e.py:209",
        "scripts/test_cold_start_e2e.py:213",
        "scripts/test_websocket_chat_standalone.py:128",
        "scripts/test_websocket_chat_standalone.py:129",
        "scripts/test_websocket_chat_standalone.py:130",
        "scripts/test_websocket_chat_standalone.py:131"
      ]
    },
    "⚠️  .secrets file not found. Creating with mock values...": {
      "value": "⚠️  .secrets file not found. Creating with mock values...",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:73"
      ]
    },
    "⚠️  Backend is configured to use port": {
      "value": "⚠️  Backend is configured to use port",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:143"
      ]
    },
    "⚠️  Container": {
      "value": "⚠️  Container",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:156"
      ]
    },
    "⚠️  Coverage needs improvement": {
      "value": "⚠️  Coverage needs improvement",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:308"
      ]
    },
    "⚠️  E2E tests failed (may need services):": {
      "value": "⚠️  E2E tests failed (may need services):",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:140"
      ]
    },
    "⚠️  Errors:": {
      "value": "⚠️  Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:351"
      ]
    },
    "⚠️  Event loop blocked for": {
      "value": "⚠️  Event loop blocked for",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:85"
      ]
    },
    "⚠️  Event loop delayed:": {
      "value": "⚠️  Event loop delayed:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:77",
        "scripts/test_blocking_analysis.py:80",
        "scripts/test_intensive_serialization.py:155"
      ]
    },
    "⚠️  Exiting with warning due to": {
      "value": "⚠️  Exiting with warning due to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:463"
      ]
    },
    "⚠️  Found": {
      "value": "⚠️  Found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:444",
        "scripts/test_glitch_fixes.py:90"
      ]
    },
    "⚠️  Functionality Warnings:": {
      "value": "⚠️  Functionality Warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:116"
      ]
    },
    "⚠️  IMPORTANT (Required for full functionality):": {
      "value": "⚠️  IMPORTANT (Required for full functionality):",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:206"
      ]
    },
    "⚠️  Issues Found (": {
      "value": "⚠️  Issues Found (",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:338"
      ]
    },
    "⚠️  Issues found in": {
      "value": "⚠️  Issues found in",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:290"
      ]
    },
    "⚠️  Limited blocking detected, but operation time may still indicate issues.": {
      "value": "⚠️  Limited blocking detected, but operation time may still indicate issues.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:224"
      ]
    },
    "⚠️  Load time is higher than expected:": {
      "value": "⚠️  Load time is higher than expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:71"
      ]
    },
    "⚠️  MEDIUM SEVERITY (": {
      "value": "⚠️  MEDIUM SEVERITY (",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:77"
      ]
    },
    "⚠️  MODERATE ISSUE: Blocking 50-100ms detected": {
      "value": "⚠️  MODERATE ISSUE: Blocking 50-100ms detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:346"
      ]
    },
    "⚠️  Missing Critical Events:": {
      "value": "⚠️  Missing Critical Events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:183"
      ]
    },
    "⚠️  Multiple initializations detected (count:": {
      "value": "⚠️  Multiple initializations detected (count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:83"
      ]
    },
    "⚠️  NO TESTS WERE RUN": {
      "value": "⚠️  NO TESTS WERE RUN",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:358"
      ]
    },
    "⚠️  No loading state detected (might be too fast)": {
      "value": "⚠️  No loading state detected (might be too fast)",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:58"
      ]
    },
    "⚠️  No response received from test endpoint": {
      "value": "⚠️  No response received from test endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:99"
      ]
    },
    "⚠️  No response received within 5 seconds": {
      "value": "⚠️  No response received within 5 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:49"
      ]
    },
    "⚠️  PARTIAL: Some events sent, but missing critical ones": {
      "value": "⚠️  PARTIAL: Some events sent, but missing critical ones",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:192"
      ]
    },
    "⚠️  Process completed without achieving full success": {
      "value": "⚠️  Process completed without achieving full success",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:953"
      ]
    },
    "⚠️  Reached maximum iterations (": {
      "value": "⚠️  Reached maximum iterations (",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:892"
      ]
    },
    "⚠️  SUPERVISOR WEBSOCKET INTEGRATION: PARTIAL (": {
      "value": "⚠️  SUPERVISOR WEBSOCKET INTEGRATION: PARTIAL (",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:152"
      ]
    },
    "⚠️  Services not available, skipping E2E tests": {
      "value": "⚠️  Services not available, skipping E2E tests",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:125"
      ]
    },
    "⚠️  Skipping connectivity test for unhealthy service:": {
      "value": "⚠️  Skipping connectivity test for unhealthy service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:110"
      ]
    },
    "⚠️  Some CORS tests failed. Check the implementation.": {
      "value": "⚠️  Some CORS tests failed. Check the implementation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:200"
      ]
    },
    "⚠️  Some performance requirements were not met.": {
      "value": "⚠️  Some performance requirements were not met.",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:330"
      ]
    },
    "⚠️  Some tests failed during coverage analysis": {
      "value": "⚠️  Some tests failed during coverage analysis",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:232"
      ]
    },
    "⚠️  Some tests failed. Fix volume mounts in docker-compose.dev.yml": {
      "value": "⚠️  Some tests failed. Fix volume mounts in docker-compose.dev.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:232"
      ]
    },
    "⚠️  Some tests failed. Review the issues above before deployment.": {
      "value": "⚠️  Some tests failed. Review the issues above before deployment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:202"
      ]
    },
    "⚠️  Stress test blocking:": {
      "value": "⚠️  Stress test blocking:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:250"
      ]
    },
    "⚠️  Supervisor execution had error:": {
      "value": "⚠️  Supervisor execution had error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:121"
      ]
    },
    "⚠️  Test timeout": {
      "value": "⚠️  Test timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:179"
      ]
    },
    "⚠️  Validation timeout": {
      "value": "⚠️  Validation timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:136"
      ]
    },
    "⚠️  WARNING: Access-Control-Allow-Origin header is missing!": {
      "value": "⚠️  WARNING: Access-Control-Allow-Origin header is missing!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:62"
      ]
    },
    "⚠️ Agent thinking event not sent": {
      "value": "⚠️ Agent thinking event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:223"
      ]
    },
    "⚠️ Cannot create tables (may be permission issue):": {
      "value": "⚠️ Cannot create tables (may be permission issue):",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:190"
      ]
    },
    "⚠️ Connection state changed:": {
      "value": "⚠️ Connection state changed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:157"
      ]
    },
    "⚠️ Error:": {
      "value": "⚠️ Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:88",
        "scripts/test_agent_orchestration_recovery.py:135"
      ]
    },
    "⚠️ Failed to capture message:": {
      "value": "⚠️ Failed to capture message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:176",
        "scripts/test_websocket_chat_standalone.py:280"
      ]
    },
    "⚠️ GCP connectivity not available (expected in dev)": {
      "value": "⚠️ GCP connectivity not available (expected in dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:96"
      ]
    },
    "⚠️ HIGH: Address": {
      "value": "⚠️ HIGH: Address",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "⚠️ JWT Token might be expired": {
      "value": "⚠️ JWT Token might be expired",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:54"
      ]
    },
    "⚠️ MEDIUM": {
      "value": "⚠️ MEDIUM",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:551"
      ]
    },
    "⚠️ MOSTLY PASSED - Minor issues detected": {
      "value": "⚠️ MOSTLY PASSED - Minor issues detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:194"
      ]
    },
    "⚠️ No model response received within timeout": {
      "value": "⚠️ No model response received within timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:426"
      ]
    },
    "⚠️ OAUTH SIMULATION may not work - check environment variables": {
      "value": "⚠️ OAUTH SIMULATION may not work - check environment variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:229"
      ]
    },
    "⚠️ SOME TESTS FAILED": {
      "value": "⚠️ SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:495"
      ]
    },
    "⚠️ Some secrets have invalid values": {
      "value": "⚠️ Some secrets have invalid values",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:217"
      ]
    },
    "⚠️ Some tests failed. Please check the failures above.": {
      "value": "⚠️ Some tests failed. Please check the failures above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:195"
      ]
    },
    "⚠️ Tests interrupted by user": {
      "value": "⚠️ Tests interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:451"
      ]
    },
    "⚠️ Thread cleanup failed:": {
      "value": "⚠️ Thread cleanup failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:138"
      ]
    },
    "⚠️ Tool completed event not sent": {
      "value": "⚠️ Tool completed event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:229"
      ]
    },
    "⚠️ Tool dispatcher may not be properly enhanced": {
      "value": "⚠️ Tool dispatcher may not be properly enhanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:321"
      ]
    },
    "⚠️ Tool executing event not sent": {
      "value": "⚠️ Tool executing event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:226"
      ]
    },
    "⚠️ Unexpected database:": {
      "value": "⚠️ Unexpected database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:132"
      ]
    },
    "⚠️ Unexpected host:": {
      "value": "⚠️ Unexpected host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:111"
      ]
    },
    "⚠️ Unexpected port:": {
      "value": "⚠️ Unexpected port:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:118"
      ]
    },
    "⚠️ Unexpected status code:": {
      "value": "⚠️ Unexpected status code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:58"
      ]
    },
    "⚠️ Unexpected user:": {
      "value": "⚠️ Unexpected user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:125"
      ]
    },
    "⚠️ WARNING | Auth service failed to start": {
      "value": "⚠️ WARNING | Auth service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:76"
      ]
    },
    "⚠️ WARNING | Auth system verification failed": {
      "value": "⚠️ WARNING | Auth system verification failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:97"
      ]
    },
    "⚠️ WARNING | Backend readiness check failed": {
      "value": "⚠️ WARNING | Backend readiness check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:89"
      ]
    },
    "⚠️ WARNING | Cleanup error:": {
      "value": "⚠️ WARNING | Cleanup error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:121"
      ]
    },
    "⚠️ WARNING | Migration issues, continuing...": {
      "value": "⚠️ WARNING | Migration issues, continuing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:62"
      ]
    },
    "⚠️ WARNING | Secrets loading had issues, continuing...": {
      "value": "⚠️ WARNING | Secrets loading had issues, continuing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:49"
      ]
    },
    "⚠️ WARNINGS:": {
      "value": "⚠️ WARNINGS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:57"
      ]
    },
    "⚠️ Warning:": {
      "value": "⚠️ Warning:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:608"
      ]
    },
    "⚠️ get_database_password() returned None (expected in dev)": {
      "value": "⚠️ get_database_password() returned None (expected in dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:157"
      ]
    },
    "⚠️ get_redis_password() returned None (expected in dev)": {
      "value": "⚠️ get_redis_password() returned None (expected in dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:164"
      ]
    },
    "⚡ HIGH PRIORITY: Address": {
      "value": "⚡ HIGH PRIORITY: Address",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "⚡ PERFORMANCE ISSUES (": {
      "value": "⚡ PERFORMANCE ISSUES (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:224"
      ]
    },
    "⚡ PERFORMANCE REQUIREMENTS NOT MET!\nServices failing to meet <": {
      "value": "⚡ PERFORMANCE REQUIREMENTS NOT MET!\nServices failing to meet <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:656"
      ]
    },
    "⚪": {
      "value": "⚪",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:140"
      ]
    },
    "✅": {
      "value": "✅",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:883",
        "scripts/run_all_test_categories.py:145",
        "scripts/test_adaptive_workflow.py:48",
        "scripts/test_adaptive_workflow.py:362",
        "scripts/test_clickhouse_startup_fix.py:341",
        "scripts/test_cold_start_e2e.py:206",
        "scripts/test_coordination_fixes.py:63",
        "scripts/test_docker_hot_reload.py:169",
        "scripts/test_example_message_flow.py:112",
        "scripts/test_example_message_flow.py:321"
      ]
    },
    "✅  No fake tests detected - good job!": {
      "value": "✅  No fake tests detected - good job!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:450"
      ]
    },
    "✅ $": {
      "value": "✅ $",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:506"
      ]
    },
    "✅ ACT found:": {
      "value": "✅ ACT found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:45"
      ]
    },
    "✅ ALL TESTS PASSED - ClickHouse graceful failure is working!": {
      "value": "✅ ALL TESTS PASSED - ClickHouse graceful failure is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:105"
      ]
    },
    "✅ ALL TESTS PASSED - Data pipeline integrity verified!": {
      "value": "✅ ALL TESTS PASSED - Data pipeline integrity verified!",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:164"
      ]
    },
    "✅ ALL TESTS PASSED - No conflicts detected!": {
      "value": "✅ ALL TESTS PASSED - No conflicts detected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:192"
      ]
    },
    "✅ ANTHROPIC_API_KEY: Found": {
      "value": "✅ ANTHROPIC_API_KEY: Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:58"
      ]
    },
    "✅ Agent System: 87 → 1 files (98.8% reduction)": {
      "value": "✅ Agent System: 87 → 1 files (98.8% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:516"
      ]
    },
    "✅ Agent start indication found": {
      "value": "✅ Agent start indication found",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:379"
      ]
    },
    "✅ All": {
      "value": "✅ All",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:520"
      ]
    },
    "✅ All ClickHouse graceful failure tests completed successfully!": {
      "value": "✅ All ClickHouse graceful failure tests completed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:56"
      ]
    },
    "✅ All E2E tests passed successfully!": {
      "value": "✅ All E2E tests passed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:100"
      ]
    },
    "✅ All JWT authentication tests passed!": {
      "value": "✅ All JWT authentication tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:55"
      ]
    },
    "✅ All auth service settings configured correctly!": {
      "value": "✅ All auth service settings configured correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:72"
      ]
    },
    "✅ All critical notification methods available": {
      "value": "✅ All critical notification methods available",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:104"
      ]
    },
    "✅ All imports successful": {
      "value": "✅ All imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:220"
      ]
    },
    "✅ All services are healthy": {
      "value": "✅ All services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:163"
      ]
    },
    "✅ All test files comply with real test requirements!": {
      "value": "✅ All test files comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:105"
      ]
    },
    "✅ All tests appear to be legitimate - no fake tests detected!": {
      "value": "✅ All tests appear to be legitimate - no fake tests detected!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:466"
      ]
    },
    "✅ All tests completed successfully!": {
      "value": "✅ All tests completed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:66"
      ]
    },
    "✅ All tests comply with real test requirements!": {
      "value": "✅ All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:611"
      ]
    },
    "✅ All tests passed!": {
      "value": "✅ All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:114"
      ]
    },
    "✅ All tests passed! Iteration": {
      "value": "✅ All tests passed! Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:796"
      ]
    },
    "✅ Async serialization method exists": {
      "value": "✅ Async serialization method exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:356"
      ]
    },
    "✅ Async serialization shows performance benefits": {
      "value": "✅ Async serialization shows performance benefits",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:264"
      ]
    },
    "✅ Auth Service Client:": {
      "value": "✅ Auth Service Client:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:85"
      ]
    },
    "✅ Auth Service Settings:": {
      "value": "✅ Auth Service Settings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:46"
      ]
    },
    "✅ Auth Service: 89 → 1 files (98.9% reduction)": {
      "value": "✅ Auth Service: 89 → 1 files (98.9% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:514"
      ]
    },
    "✅ Auth service health endpoint is reachable": {
      "value": "✅ Auth service health endpoint is reachable",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:139"
      ]
    },
    "✅ Auth service healthy:": {
      "value": "✅ Auth service healthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:43"
      ]
    },
    "✅ Auth service hot reload WORKING - marker": {
      "value": "✅ Auth service hot reload WORKING - marker",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:127"
      ]
    },
    "✅ Authentication successful (user:": {
      "value": "✅ Authentication successful (user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:247"
      ]
    },
    "✅ Backend Core: 60 → 1 files (98.3% reduction)": {
      "value": "✅ Backend Core: 60 → 1 files (98.3% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:515"
      ]
    },
    "✅ Backend healthy:": {
      "value": "✅ Backend healthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:32"
      ]
    },
    "✅ Backend hot reload WORKING - marker": {
      "value": "✅ Backend hot reload WORKING - marker",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:89"
      ]
    },
    "✅ Backend is configured to use port 8000": {
      "value": "✅ Backend is configured to use port 8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:140"
      ]
    },
    "✅ Builder created for service:": {
      "value": "✅ Builder created for service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:39"
      ]
    },
    "✅ Business impact criteria SATISFIED": {
      "value": "✅ Business impact criteria SATISFIED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:626"
      ]
    },
    "✅ CORS preflight successful": {
      "value": "✅ CORS preflight successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:96"
      ]
    },
    "✅ Cache working correctly": {
      "value": "✅ Cache working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:115"
      ]
    },
    "✅ Can create and drop tables": {
      "value": "✅ Can create and drop tables",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:188"
      ]
    },
    "✅ Chrome driver initialized": {
      "value": "✅ Chrome driver initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:38"
      ]
    },
    "✅ Cleanup completed": {
      "value": "✅ Cleanup completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:96"
      ]
    },
    "✅ ClickHouse staging connectivity test PASSED!": {
      "value": "✅ ClickHouse staging connectivity test PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:225"
      ]
    },
    "✅ Completion indication found": {
      "value": "✅ Completion indication found",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:386"
      ]
    },
    "✅ Comprehensive learning documentation complete with cross-links": {
      "value": "✅ Comprehensive learning documentation complete with cross-links",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:531"
      ]
    },
    "✅ Configuration validation passed": {
      "value": "✅ Configuration validation passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:239"
      ]
    },
    "✅ Connected successfully!": {
      "value": "✅ Connected successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:67"
      ]
    },
    "✅ Connection established": {
      "value": "✅ Connection established",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:137"
      ]
    },
    "✅ Connection established but no response (may be expected)": {
      "value": "✅ Connection established but no response (may be expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:50"
      ]
    },
    "✅ Coverage analysis complete!": {
      "value": "✅ Coverage analysis complete!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:235"
      ]
    },
    "✅ Created .secrets file with mock values": {
      "value": "✅ Created .secrets file with mock values",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:92"
      ]
    },
    "✅ Critical Events Found:": {
      "value": "✅ Critical Events Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:179"
      ]
    },
    "✅ Critical test suites PASSED": {
      "value": "✅ Critical test suites PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:602"
      ]
    },
    "✅ Cross-service auth working:": {
      "value": "✅ Cross-service auth working:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:127"
      ]
    },
    "✅ Database is correct:": {
      "value": "✅ Database is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:134"
      ]
    },
    "✅ Development OAUTH SIMULATION is working!": {
      "value": "✅ Development OAUTH SIMULATION is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:132"
      ]
    },
    "✅ Docker found:": {
      "value": "✅ Docker found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:62"
      ]
    },
    "✅ Dry run successful": {
      "value": "✅ Dry run successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:171"
      ]
    },
    "✅ Duplicate email correctly rejected": {
      "value": "✅ Duplicate email correctly rejected",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:49"
      ]
    },
    "✅ E2E tests passed!": {
      "value": "✅ E2E tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:143"
      ]
    },
    "✅ Environment Configuration:": {
      "value": "✅ Environment Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:33"
      ]
    },
    "✅ Environment correctly set for auto-user creation": {
      "value": "✅ Environment correctly set for auto-user creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:86"
      ]
    },
    "✅ Event confirmation:": {
      "value": "✅ Event confirmation:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:269"
      ]
    },
    "✅ ExecutionEngine has WebSocket manager": {
      "value": "✅ ExecutionEngine has WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:71"
      ]
    },
    "✅ ExecutionEngine has WebSocket notifier": {
      "value": "✅ ExecutionEngine has WebSocket notifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:73"
      ]
    },
    "✅ FIXES VERIFIED: Chat loads without glitches": {
      "value": "✅ FIXES VERIFIED: Chat loads without glitches",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:107"
      ]
    },
    "✅ Fix has been successfully implemented!": {
      "value": "✅ Fix has been successfully implemented!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:113"
      ]
    },
    "✅ Fixed and validated successfully": {
      "value": "✅ Fixed and validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:317"
      ]
    },
    "✅ Fixed circular env.ACT reference": {
      "value": "✅ Fixed circular env.ACT reference",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:259"
      ]
    },
    "✅ Found": {
      "value": "✅ Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:197"
      ]
    },
    "✅ Frontend hot reload WORKING - marker": {
      "value": "✅ Frontend hot reload WORKING - marker",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:49"
      ]
    },
    "✅ Frontend is accessible": {
      "value": "✅ Frontend is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:28"
      ]
    },
    "✅ GCP connectivity valid": {
      "value": "✅ GCP connectivity valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:94"
      ]
    },
    "✅ GOOD! >90% test coverage achieved!": {
      "value": "✅ GOOD! >90% test coverage achieved!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:306"
      ]
    },
    "✅ Generated test JWT token:": {
      "value": "✅ Generated test JWT token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:31"
      ]
    },
    "✅ Google OAuth redirect working": {
      "value": "✅ Google OAuth redirect working",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:126"
      ]
    },
    "✅ Graceful degradation with optional services": {
      "value": "✅ Graceful degradation with optional services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:420"
      ]
    },
    "✅ Handler initialization successful": {
      "value": "✅ Handler initialization successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:264"
      ]
    },
    "✅ Host is correct:": {
      "value": "✅ Host is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:113"
      ]
    },
    "✅ Imports successful": {
      "value": "✅ Imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:388"
      ]
    },
    "✅ Initialization successful": {
      "value": "✅ Initialization successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:394"
      ]
    },
    "✅ Integration tests passed!": {
      "value": "✅ Integration tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:114"
      ]
    },
    "✅ Invalid email correctly rejected": {
      "value": "✅ Invalid email correctly rejected",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:66"
      ]
    },
    "✅ JWT secret retrieved (length:": {
      "value": "✅ JWT secret retrieved (length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:105"
      ]
    },
    "✅ Learning documentation validation PASSED": {
      "value": "✅ Learning documentation validation PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:612"
      ]
    },
    "✅ Load time is within acceptable range (<2s)": {
      "value": "✅ Load time is within acceptable range (<2s)",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:69"
      ]
    },
    "✅ Loaded": {
      "value": "✅ Loaded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:77"
      ]
    },
    "✅ Loading state detected": {
      "value": "✅ Loading state detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:56"
      ]
    },
    "✅ Login successful": {
      "value": "✅ Login successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:146"
      ]
    },
    "✅ Main chat loaded in": {
      "value": "✅ Main chat loaded in",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:66"
      ]
    },
    "✅ Message sent successfully": {
      "value": "✅ Message sent successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:359"
      ]
    },
    "✅ Message validation successful": {
      "value": "✅ Message validation successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:300",
        "scripts/test_example_message_flow.py:417"
      ]
    },
    "✅ Messages endpoint working:": {
      "value": "✅ Messages endpoint working:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:117"
      ]
    },
    "✅ Missing fields correctly rejected": {
      "value": "✅ Missing fields correctly rejected",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:114"
      ]
    },
    "✅ Mission-critical tests passed!": {
      "value": "✅ Mission-critical tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:192"
      ]
    },
    "✅ Model response contains expected pattern:": {
      "value": "✅ Model response contains expected pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:420"
      ]
    },
    "✅ No blocking detected in this simplified test environment.": {
      "value": "✅ No blocking detected in this simplified test environment.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:250"
      ]
    },
    "✅ No critical issues detected. Test system is healthy!": {
      "value": "✅ No critical issues detected. Test system is healthy!",
      "category": "test_literals",
      "locations": [
        "scripts/test_dashboard.py:147"
      ]
    },
    "✅ No excessive re-render warnings": {
      "value": "✅ No excessive re-render warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:88"
      ]
    },
    "✅ No fake tests detected! Codebase follows testing best practices.": {
      "value": "✅ No fake tests detected! Codebase follows testing best practices.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:186"
      ]
    },
    "✅ No significant blocking detected": {
      "value": "✅ No significant blocking detected",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:127",
        "scripts/test_blocking_analysis.py:132"
      ]
    },
    "✅ No significant blocking detected.": {
      "value": "✅ No significant blocking detected.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:173"
      ]
    },
    "✅ OAUTH SIMULATION is properly configured for development": {
      "value": "✅ OAUTH SIMULATION is properly configured for development",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:227"
      ]
    },
    "✅ OAuth providers available:": {
      "value": "✅ OAuth providers available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:115"
      ]
    },
    "✅ PASS": {
      "value": "✅ PASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:116",
        "scripts/test_and_fix_cors.py:132",
        "scripts/test_auth_service_integration_fix.py:196",
        "scripts/test_auth_service_integration_fix.py:197",
        "scripts/test_backend_port_binding.py:170",
        "scripts/test_backend_port_binding.py:181",
        "scripts/test_cold_start_e2e.py:486",
        "scripts/test_cors_implementation.py:187",
        "scripts/test_docker_hot_reload.py:223",
        "scripts/test_secret_manager_builder_critical.py:495"
      ]
    },
    "✅ PASS: All security requirements met": {
      "value": "✅ PASS: All security requirements met",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:769"
      ]
    },
    "✅ PASSED": {
      "value": "✅ PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:356",
        "scripts/test_auth_integration.py:148",
        "scripts/test_clickhouse_startup_fix.py:380",
        "scripts/test_staging_env.py:170",
        "scripts/test_staging_threads_fix.py:109",
        "scripts/test_staging_threads_fix.py:110",
        "scripts/test_websocket_chat_standalone.py:123",
        "scripts/test_websocket_chat_standalone.py:431",
        "scripts/test_websocket_injection_fix_complete.py:373",
        "scripts/test_websocket_injection_fix_complete.py:649"
      ]
    },
    "✅ Passed:": {
      "value": "✅ Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:349",
        "scripts/test_workflows_with_act.py:334"
      ]
    },
    "✅ Password is set (hidden)": {
      "value": "✅ Password is set (hidden)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:142"
      ]
    },
    "✅ Password mismatch correctly rejected": {
      "value": "✅ Password mismatch correctly rejected",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:100"
      ]
    },
    "✅ Port allocation conflict prevention": {
      "value": "✅ Port allocation conflict prevention",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:418"
      ]
    },
    "✅ Port is correct:": {
      "value": "✅ Port is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:120"
      ]
    },
    "✅ Properly requires authentication": {
      "value": "✅ Properly requires authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:153"
      ]
    },
    "✅ Quick health check PASSED": {
      "value": "✅ Quick health check PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:190"
      ]
    },
    "✅ Readiness vs health check separation": {
      "value": "✅ Readiness vs health check separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:417"
      ]
    },
    "✅ Real services are working correctly!": {
      "value": "✅ Real services are working correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:56"
      ]
    },
    "✅ Received": {
      "value": "✅ Received",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:372"
      ]
    },
    "✅ Received model event:": {
      "value": "✅ Received model event:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:412"
      ]
    },
    "✅ Received response:": {
      "value": "✅ Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:41",
        "scripts/test_websocket_manual.py:92"
      ]
    },
    "✅ Recovery requirement:": {
      "value": "✅ Recovery requirement:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:160"
      ]
    },
    "✅ Registry has WebSocket manager": {
      "value": "✅ Registry has WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:56"
      ]
    },
    "✅ Response time requirement:": {
      "value": "✅ Response time requirement:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:114"
      ]
    },
    "✅ SATISFIED": {
      "value": "✅ SATISFIED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:652"
      ]
    },
    "✅ SQL injection attempt blocked": {
      "value": "✅ SQL injection attempt blocked",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:131"
      ]
    },
    "✅ SSOT Violations: 14,484+ → <100 (99.3% reduction)": {
      "value": "✅ SSOT Violations: 14,484+ → <100 (99.3% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:517"
      ]
    },
    "✅ STAGING TESTS PASSED": {
      "value": "✅ STAGING TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:113"
      ]
    },
    "✅ STANDALONE CRITICAL CHAT FLOW TEST PASSED": {
      "value": "✅ STANDALONE CRITICAL CHAT FLOW TEST PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:393"
      ]
    },
    "✅ SUCCESS | Auth service started": {
      "value": "✅ SUCCESS | Auth service started",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:74"
      ]
    },
    "✅ SUCCESS | Auth system is ready": {
      "value": "✅ SUCCESS | Auth system is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:95"
      ]
    },
    "✅ SUCCESS | Backend is ready": {
      "value": "✅ SUCCESS | Backend is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:87"
      ]
    },
    "✅ SUCCESS | Backend service started": {
      "value": "✅ SUCCESS | Backend service started",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:69"
      ]
    },
    "✅ SUCCESS: Environment validation system is working correctly!": {
      "value": "✅ SUCCESS: Environment validation system is working correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:231"
      ]
    },
    "✅ SUCCESS: No mock policy violations found!": {
      "value": "✅ SUCCESS: No mock policy violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:90"
      ]
    },
    "✅ SUCCESS: Supervisor Agent is BULLETPROOF!": {
      "value": "✅ SUCCESS: Supervisor Agent is BULLETPROOF!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:360"
      ]
    },
    "✅ SUCCESS: Threads endpoint returned 200 OK": {
      "value": "✅ SUCCESS: Threads endpoint returned 200 OK",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:45"
      ]
    },
    "✅ SUCCESS: WebSocket events are being sent during supervisor execution": {
      "value": "✅ SUCCESS: WebSocket events are being sent during supervisor execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:214"
      ]
    },
    "✅ SUCCESS: WebSocket integration is properly configured": {
      "value": "✅ SUCCESS: WebSocket integration is properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:170"
      ]
    },
    "✅ Secret Manager client initialized": {
      "value": "✅ Secret Manager client initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:43"
      ]
    },
    "✅ SecretManagerBuilder imported successfully": {
      "value": "✅ SecretManagerBuilder imported successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:35"
      ]
    },
    "✅ Service Auth Headers:": {
      "value": "✅ Service Auth Headers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:94"
      ]
    },
    "✅ Service connectivity PASSED": {
      "value": "✅ Service connectivity PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:78"
      ]
    },
    "✅ Service credentials configured correctly!": {
      "value": "✅ Service credentials configured correctly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:116"
      ]
    },
    "✅ Service dependency ordering": {
      "value": "✅ Service dependency ordering",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:416"
      ]
    },
    "✅ Service discovery timing issues": {
      "value": "✅ Service discovery timing issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:419"
      ]
    },
    "✅ Service orchestration PASSED": {
      "value": "✅ Service orchestration PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:67"
      ]
    },
    "✅ Services started successfully": {
      "value": "✅ Services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:136"
      ]
    },
    "✅ Services stopped": {
      "value": "✅ Services stopped",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:475"
      ]
    },
    "✅ Single initialization detected (count:": {
      "value": "✅ Single initialization detected (count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:81"
      ]
    },
    "✅ State created - Thread:": {
      "value": "✅ State created - Thread:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:110"
      ]
    },
    "✅ Static code analysis PASSED": {
      "value": "✅ Static code analysis PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:592"
      ]
    },
    "✅ Stress tests passed!": {
      "value": "✅ Stress tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:168"
      ]
    },
    "✅ Stub Tests: 1,765+ → 0 (100% eliminated)": {
      "value": "✅ Stub Tests: 1,765+ → 0 (100% eliminated)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:519"
      ]
    },
    "✅ Successfully bound to port": {
      "value": "✅ Successfully bound to port",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:37"
      ]
    },
    "✅ Successfully connected to ClickHouse!": {
      "value": "✅ Successfully connected to ClickHouse!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:176"
      ]
    },
    "✅ Successfully fixed test_utils imports!": {
      "value": "✅ Successfully fixed test_utils imports!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:96"
      ]
    },
    "✅ Successfully imported backend main module": {
      "value": "✅ Successfully imported backend main module",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:133"
      ]
    },
    "✅ Supervisor execution completed": {
      "value": "✅ Supervisor execution completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:119"
      ]
    },
    "✅ Supervisor execution completed:": {
      "value": "✅ Supervisor execution completed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:351"
      ]
    },
    "✅ Supervisor has ExecutionEngine for WebSocket events": {
      "value": "✅ Supervisor has ExecutionEngine for WebSocket events",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:117"
      ]
    },
    "✅ SupervisorAgent created": {
      "value": "✅ SupervisorAgent created",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:96"
      ]
    },
    "✅ SupervisorAgent created successfully": {
      "value": "✅ SupervisorAgent created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:46"
      ]
    },
    "✅ Syntax valid": {
      "value": "✅ Syntax valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:128"
      ]
    },
    "✅ System Status: BLOCKED → PRODUCTION READY": {
      "value": "✅ System Status: BLOCKED → PRODUCTION READY",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:520"
      ]
    },
    "✅ System is ready for deployment": {
      "value": "✅ System is ready for deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:672"
      ]
    },
    "✅ TEST PASSED | Service startup orchestration test completed successfully in": {
      "value": "✅ TEST PASSED | Service startup orchestration test completed successfully in",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:139"
      ]
    },
    "✅ TEST PASSED: No mock violations": {
      "value": "✅ TEST PASSED: No mock violations",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:102"
      ]
    },
    "✅ Test Functions: 61,872+ → ~500 (99.2% reduction)": {
      "value": "✅ Test Functions: 61,872+ → ~500 (99.2% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:518"
      ]
    },
    "✅ Test WebSocket connection established!": {
      "value": "✅ Test WebSocket connection established!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:77"
      ]
    },
    "✅ Test audit report generated:": {
      "value": "✅ Test audit report generated:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:271"
      ]
    },
    "✅ Test completed": {
      "value": "✅ Test completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:96"
      ]
    },
    "✅ Test endpoint working perfectly!": {
      "value": "✅ Test endpoint working perfectly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:95"
      ]
    },
    "✅ Test thread cleaned up successfully": {
      "value": "✅ Test thread cleaned up successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:136"
      ]
    },
    "✅ Thread created:": {
      "value": "✅ Thread created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:343",
        "scripts/test_data_pipeline_simple.py:73"
      ]
    },
    "✅ Thread data integrity verified": {
      "value": "✅ Thread data integrity verified",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:85"
      ]
    },
    "✅ Thread update successful": {
      "value": "✅ Thread update successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:102"
      ]
    },
    "✅ ThreadPoolExecutor configured": {
      "value": "✅ ThreadPoolExecutor configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:358"
      ]
    },
    "✅ Tool dispatcher WebSocket enhancement:": {
      "value": "✅ Tool dispatcher WebSocket enhancement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:62"
      ]
    },
    "✅ Tool dispatcher was enhanced with WebSocket notifications": {
      "value": "✅ Tool dispatcher was enhanced with WebSocket notifications",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:319"
      ]
    },
    "✅ Unified test runner integration successful": {
      "value": "✅ Unified test runner integration successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:220"
      ]
    },
    "✅ Unit tests passed!": {
      "value": "✅ Unit tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:90"
      ]
    },
    "✅ User authenticated successfully": {
      "value": "✅ User authenticated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:50"
      ]
    },
    "✅ User is correct:": {
      "value": "✅ User is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:127"
      ]
    },
    "✅ Uvicorn server started successfully and is responding": {
      "value": "✅ Uvicorn server started successfully and is responding",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:95"
      ]
    },
    "✅ VALIDATION PASSED": {
      "value": "✅ VALIDATION PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:639"
      ]
    },
    "✅ Valid registration successful": {
      "value": "✅ Valid registration successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:30"
      ]
    },
    "✅ Validate endpoint is reachable (status:": {
      "value": "✅ Validate endpoint is reachable (status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:151"
      ]
    },
    "✅ Validation Result:": {
      "value": "✅ Validation Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:85"
      ]
    },
    "✅ WORKS": {
      "value": "✅ WORKS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:73"
      ]
    },
    "✅ Weak password correctly rejected": {
      "value": "✅ Weak password correctly rejected",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:83"
      ]
    },
    "✅ WebSocket Manager: RECEIVING EVENTS": {
      "value": "✅ WebSocket Manager: RECEIVING EVENTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:171"
      ]
    },
    "✅ WebSocket authentication bypass may need explicit enabling": {
      "value": "✅ WebSocket authentication bypass may need explicit enabling",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:59"
      ]
    },
    "✅ WebSocket bidirectional communication working!": {
      "value": "✅ WebSocket bidirectional communication working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:45"
      ]
    },
    "✅ WebSocket connection authenticated": {
      "value": "✅ WebSocket connection authenticated",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:299"
      ]
    },
    "✅ WebSocket connection established!": {
      "value": "✅ WebSocket connection established!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:25"
      ]
    },
    "✅ WebSocket infrastructure is working!": {
      "value": "✅ WebSocket infrastructure is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:127"
      ]
    },
    "✅ WebSocket manager is set on supervisor": {
      "value": "✅ WebSocket manager is set on supervisor",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:51"
      ]
    },
    "✅ WebSocket notifier test PASSED": {
      "value": "✅ WebSocket notifier test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:240"
      ]
    },
    "✅ Wrong password correctly rejected": {
      "value": "✅ Wrong password correctly rejected",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:163"
      ]
    },
    "✅ Zero loss for critical:": {
      "value": "✅ Zero loss for critical:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:220"
      ]
    },
    "✅ get_database_password() returned value": {
      "value": "✅ get_database_password() returned value",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:155"
      ]
    },
    "✅ get_jwt_secret() works": {
      "value": "✅ get_jwt_secret() works",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:150"
      ]
    },
    "✅ get_redis_password() returned value": {
      "value": "✅ get_redis_password() returned value",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:162"
      ]
    },
    "✅ get_secret_manager() works": {
      "value": "✅ get_secret_manager() works",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:142"
      ]
    },
    "✅ load_secrets_for_service() returned": {
      "value": "✅ load_secrets_for_service() returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:146"
      ]
    },
    "✍️  Writing test marker with timestamp": {
      "value": "✍️  Writing test marker with timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:37",
        "scripts/test_docker_hot_reload.py:77",
        "scripts/test_docker_hot_reload.py:115"
      ]
    },
    "✓": {
      "value": "✓",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:230",
        "scripts/continuous_e2e_test_runner.py:317",
        "scripts/manage_test_services.py:114",
        "scripts/setup_e2e_test_ports.py:105",
        "scripts/setup_test_environment.py:273",
        "scripts/test_adaptive_workflow_direct.py:198",
        "scripts/test_adaptive_workflow_local.py:131",
        "scripts/test_cors.py:378",
        "scripts/test_cors.py:517",
        "scripts/test_cors.py:525"
      ]
    },
    "✓ Access-Control-Allow-Origin header is present": {
      "value": "✓ Access-Control-Allow-Origin header is present",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_cors.py:64"
      ]
    },
    "✓ All": {
      "value": "✓ All",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:193"
      ]
    },
    "✓ All components are implemented and working": {
      "value": "✓ All components are implemented and working",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:220"
      ]
    },
    "✓ All files have correct import order!": {
      "value": "✓ All files have correct import order!",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:97"
      ]
    },
    "✓ All services are healthy": {
      "value": "✓ All services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:341"
      ]
    },
    "✓ All syntax errors fixed!": {
      "value": "✓ All syntax errors fixed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:293"
      ]
    },
    "✓ Analysis complete - recommendations generated": {
      "value": "✓ Analysis complete - recommendations generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:60"
      ]
    },
    "✓ Anti-patterns to avoid": {
      "value": "✓ Anti-patterns to avoid",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:164"
      ]
    },
    "✓ Authentication tracking working": {
      "value": "✓ Authentication tracking working",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:59"
      ]
    },
    "✓ Backend is running": {
      "value": "✓ Backend is running",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:163"
      ]
    },
    "✓ CLICKHOUSE_PASSWORD loaded from GCP Secret Manager": {
      "value": "✓ CLICKHOUSE_PASSWORD loaded from GCP Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:75"
      ]
    },
    "✓ CORS headers handled": {
      "value": "✓ CORS headers handled",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:183"
      ]
    },
    "✓ ClickHouse client failed gracefully:": {
      "value": "✓ ClickHouse client failed gracefully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:54"
      ]
    },
    "✓ ClickHouse client worked:": {
      "value": "✓ ClickHouse client worked:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:52"
      ]
    },
    "✓ ClickHouse health check failed gracefully:": {
      "value": "✓ ClickHouse health check failed gracefully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:31"
      ]
    },
    "✓ ClickHouse health check passed (unexpected but ok)": {
      "value": "✓ ClickHouse health check passed (unexpected but ok)",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:29"
      ]
    },
    "✓ ClickHouse host:": {
      "value": "✓ ClickHouse host:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:151"
      ]
    },
    "✓ ClickHouse service failed gracefully": {
      "value": "✓ ClickHouse service failed gracefully",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:42"
      ]
    },
    "✓ ClickHouse service failed gracefully:": {
      "value": "✓ ClickHouse service failed gracefully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:44"
      ]
    },
    "✓ ClickHouse service initialized successfully": {
      "value": "✓ ClickHouse service initialized successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:40"
      ]
    },
    "✓ ClickHouse startup initialization completed gracefully": {
      "value": "✓ ClickHouse startup initialization completed gracefully",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:79"
      ]
    },
    "✓ ClickHouse startup initialization failed gracefully:": {
      "value": "✓ ClickHouse startup initialization failed gracefully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:85"
      ]
    },
    "✓ Composable SSL/TLS configuration": {
      "value": "✓ Composable SSL/TLS configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:249"
      ]
    },
    "✓ Configuration loaded for environment:": {
      "value": "✓ Configuration loaded for environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:150"
      ]
    },
    "✓ Connected with origin:": {
      "value": "✓ Connected with origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:109"
      ]
    },
    "✓ Connection successful! Query result:": {
      "value": "✓ Connection successful! Query result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:91"
      ]
    },
    "✓ Copied": {
      "value": "✓ Copied",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:254"
      ]
    },
    "✓ Corpus admin agent created": {
      "value": "✓ Corpus admin agent created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:39"
      ]
    },
    "✓ Correctly detected": {
      "value": "✓ Correctly detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:91"
      ]
    },
    "✓ Created .env.mock file with default values": {
      "value": "✓ Created .env.mock file with default values",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:332"
      ]
    },
    "✓ Created test database:": {
      "value": "✓ Created test database:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:221"
      ]
    },
    "✓ Database URL configured:": {
      "value": "✓ Database URL configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:153"
      ]
    },
    "✓ Database configuration populated": {
      "value": "✓ Database configuration populated",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:99"
      ]
    },
    "✓ Deep state created": {
      "value": "✓ Deep state created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:57"
      ]
    },
    "✓ Detected": {
      "value": "✓ Detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:276"
      ]
    },
    "✓ Docker Compose version:": {
      "value": "✓ Docker Compose version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:260"
      ]
    },
    "✓ Empty service not in detailed section": {
      "value": "✓ Empty service not in detailed section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:378"
      ]
    },
    "✓ Environment detection correct": {
      "value": "✓ Environment detection correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:47"
      ]
    },
    "✓ Environment set to 'staging'": {
      "value": "✓ Environment set to 'staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:190"
      ]
    },
    "✓ Environment variables exported": {
      "value": "✓ Environment variables exported",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:381"
      ]
    },
    "✓ Environment-aware fallback behavior": {
      "value": "✓ Environment-aware fallback behavior",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:247"
      ]
    },
    "✓ Error grouping and reporting works correctly": {
      "value": "✓ Error grouping and reporting works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:165"
      ]
    },
    "✓ Error tracking working": {
      "value": "✓ Error tracking working",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:96"
      ]
    },
    "✓ Examples and documentation provided": {
      "value": "✓ Examples and documentation provided",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:223"
      ]
    },
    "✓ FIXED": {
      "value": "✓ FIXED",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:385"
      ]
    },
    "✓ File is compliant with size limits!": {
      "value": "✓ File is compliant with size limits!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:45"
      ]
    },
    "✓ File splitting strategies": {
      "value": "✓ File splitting strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:163"
      ]
    },
    "✓ File updated": {
      "value": "✓ File updated",
      "category": "test_literals",
      "locations": [
        "scripts/migrate_test_ids.py:150"
      ]
    },
    "✓ Fixed mock component function in": {
      "value": "✓ Fixed mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:162"
      ]
    },
    "✓ Found": {
      "value": "✓ Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:268"
      ]
    },
    "✓ Functions under 8 lines": {
      "value": "✓ Functions under 8 lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:159"
      ]
    },
    "✓ GitHub OAuth: Redirects correctly": {
      "value": "✓ GitHub OAuth: Redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:273"
      ]
    },
    "✓ Google OAuth: Redirects correctly": {
      "value": "✓ Google OAuth: Redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:267"
      ]
    },
    "✓ Health check:": {
      "value": "✓ Health check:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:32"
      ]
    },
    "✓ Healthy": {
      "value": "✓ Healthy",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:106"
      ]
    },
    "✓ Helper method extraction": {
      "value": "✓ Helper method extraction",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:160"
      ]
    },
    "✓ Integrated Secret Manager support": {
      "value": "✓ Integrated Secret Manager support",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:248"
      ]
    },
    "✓ Integration with test runner is complete": {
      "value": "✓ Integration with test runner is complete",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:126",
        "scripts/compliance/demo_test_size_enforcement.py:222"
      ]
    },
    "✓ Issue deduplication works correctly": {
      "value": "✓ Issue deduplication works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:242"
      ]
    },
    "✓ Issue template creation works correctly": {
      "value": "✓ Issue template creation works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:213"
      ]
    },
    "✓ LLM manager created": {
      "value": "✓ LLM manager created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:26"
      ]
    },
    "✓ No configuration issues found!": {
      "value": "✓ No configuration issues found!",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:307"
      ]
    },
    "✓ OAuth configured for:": {
      "value": "✓ OAuth configured for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:356"
      ]
    },
    "✓ PASSED": {
      "value": "✓ PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:419"
      ]
    },
    "✓ Page view tracking working": {
      "value": "✓ Page view tracking working",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:47"
      ]
    },
    "✓ Parametrized tests": {
      "value": "✓ Parametrized tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:161"
      ]
    },
    "✓ Password has sufficient length": {
      "value": "✓ Password has sufficient length",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:182"
      ]
    },
    "✓ Pre-run validation function is available": {
      "value": "✓ Pre-run validation function is available",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:125"
      ]
    },
    "✓ Proper fixture usage": {
      "value": "✓ Proper fixture usage",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:162"
      ]
    },
    "✓ Redis host:": {
      "value": "✓ Redis host:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:152"
      ]
    },
    "✓ Reduced mocking in": {
      "value": "✓ Reduced mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:167"
      ]
    },
    "✓ Report contains": {
      "value": "✓ Report contains",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:371"
      ]
    },
    "✓ Report generation works correctly": {
      "value": "✓ Report generation works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:383"
      ]
    },
    "✓ Retrieved": {
      "value": "✓ Retrieved",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:273"
      ]
    },
    "✓ SUCCESS: Auth service OAuth providers are available when configured": {
      "value": "✓ SUCCESS: Auth service OAuth providers are available when configured",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:346"
      ]
    },
    "✓ SUCCESS: OAuth callback handling works with proper credentials": {
      "value": "✓ SUCCESS: OAuth callback handling works with proper credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:435"
      ]
    },
    "✓ SUCCESS: OAuth client ID correctly detected as missing in staging": {
      "value": "✓ SUCCESS: OAuth client ID correctly detected as missing in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:84"
      ]
    },
    "✓ SUCCESS: OAuth client secret correctly detected as missing in staging": {
      "value": "✓ SUCCESS: OAuth client secret correctly detected as missing in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:121"
      ]
    },
    "✓ SUCCESS: OAuth login flow works with proper credentials": {
      "value": "✓ SUCCESS: OAuth login flow works with proper credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:389"
      ]
    },
    "✓ SUCCESS: OAuth manager works correctly with staging credentials": {
      "value": "✓ SUCCESS: OAuth manager works correctly with staging credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:301"
      ]
    },
    "✓ SUCCESS: OAuth provider correctly handles missing credentials in staging": {
      "value": "✓ SUCCESS: OAuth provider correctly handles missing credentials in staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:170"
      ]
    },
    "✓ SUCCESS: OAuth provider initialization failed as expected:": {
      "value": "✓ SUCCESS: OAuth provider initialization failed as expected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:174"
      ]
    },
    "✓ SUCCESS: OAuth provider works correctly with proper staging credentials": {
      "value": "✓ SUCCESS: OAuth provider works correctly with proper staging credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:244"
      ]
    },
    "✓ Sample tests passing after fixes!": {
      "value": "✓ Sample tests passing after fixes!",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:317"
      ]
    },
    "✓ StagingConfig instantiated": {
      "value": "✓ StagingConfig instantiated",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:94"
      ]
    },
    "✓ StagingConfig instantiated successfully without ClickHouse env vars": {
      "value": "✓ StagingConfig instantiated successfully without ClickHouse env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:46"
      ]
    },
    "✓ Standardized connection pooling": {
      "value": "✓ Standardized connection pooling",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:250"
      ]
    },
    "✓ Test WebSocket endpoint works": {
      "value": "✓ Test WebSocket endpoint works",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:177"
      ]
    },
    "✓ Test already passing": {
      "value": "✓ Test already passing",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:285"
      ]
    },
    "✓ Test database already exists:": {
      "value": "✓ Test database already exists:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:223"
      ]
    },
    "✓ Test environment variables exported": {
      "value": "✓ Test environment variables exported",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:339"
      ]
    },
    "✓ Test size limits enforcement is fully functional": {
      "value": "✓ Test size limits enforcement is fully functional",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:221"
      ]
    },
    "✓ Test suite looks well optimized!": {
      "value": "✓ Test suite looks well optimized!",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:409"
      ]
    },
    "✓ This is the correct method for GCP Cloud Run": {
      "value": "✓ This is the correct method for GCP Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:165"
      ]
    },
    "✓ Thread created:": {
      "value": "✓ Thread created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:62"
      ]
    },
    "✓ Tool dispatcher created": {
      "value": "✓ Tool dispatcher created",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:31"
      ]
    },
    "✓ Unified configuration source for all services": {
      "value": "✓ Unified configuration source for all services",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:246"
      ]
    },
    "✓ Updated:": {
      "value": "✓ Updated:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:224"
      ]
    },
    "✓ Using Cloud SQL Unix socket connection": {
      "value": "✓ Using Cloud SQL Unix socket connection",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:164"
      ]
    },
    "✓ Using standard 'postgres' user": {
      "value": "✓ Using standard 'postgres' user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:177"
      ]
    },
    "✓ Validation correctly identified missing ClickHouse:": {
      "value": "✓ Validation correctly identified missing ClickHouse:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:55"
      ]
    },
    "✓ Validation passed with ClickHouse configured": {
      "value": "✓ Validation passed with ClickHouse configured",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:104"
      ]
    },
    "✓ WebSocket config endpoint accessible": {
      "value": "✓ WebSocket config endpoint accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:171"
      ]
    },
    "✓ Workflow executed successfully": {
      "value": "✓ Workflow executed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:123"
      ]
    },
    "✓ Workflow followed expected path for": {
      "value": "✓ Workflow followed expected path for",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:136"
      ]
    },
    "✓ Workflow orchestrator initialized": {
      "value": "✓ Workflow orchestrator initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:44"
      ]
    },
    "✕": {
      "value": "✕",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:514"
      ]
    },
    "✗": {
      "value": "✗",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:233",
        "auth_service/test_url_construction.py:235",
        "scripts/manage_test_services.py:114",
        "scripts/setup_e2e_test_ports.py:107",
        "scripts/setup_test_environment.py:273",
        "scripts/test/test_clickhouse_staging_fix.py:196",
        "scripts/test_adaptive_workflow_direct.py:198",
        "scripts/test_adaptive_workflow_local.py:131",
        "scripts/test_cors.py:378",
        "scripts/test_cors.py:393"
      ]
    },
    "✗ API is not healthy. Exiting.": {
      "value": "✗ API is not healthy. Exiting.",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:81"
      ]
    },
    "✗ Backend is not running. Please start the backend first.": {
      "value": "✗ Backend is not running. Please start the backend first.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:165"
      ]
    },
    "✗ CORS issues detected": {
      "value": "✗ CORS issues detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:185"
      ]
    },
    "✗ Configuration flow failed:": {
      "value": "✗ Configuration flow failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:158"
      ]
    },
    "✗ Connection failed:": {
      "value": "✗ Connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_staging.py:98"
      ]
    },
    "✗ Empty service incorrectly appears in detailed section": {
      "value": "✗ Empty service incorrectly appears in detailed section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:380"
      ]
    },
    "✗ Environment not set to 'staging'": {
      "value": "✗ Environment not set to 'staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:192"
      ]
    },
    "✗ Error executing workflow:": {
      "value": "✗ Error executing workflow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:145"
      ]
    },
    "✗ Error getting database URL:": {
      "value": "✗ Error getting database URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:169"
      ]
    },
    "✗ Error running tests:": {
      "value": "✗ Error running tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:145"
      ]
    },
    "✗ Error testing workflow:": {
      "value": "✗ Error testing workflow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:70"
      ]
    },
    "✗ FAILED": {
      "value": "✗ FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:385",
        "scripts/test_log_introspection.py:419"
      ]
    },
    "✗ Failed to complete diagnostics": {
      "value": "✗ Failed to complete diagnostics",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_analyzer.py:64"
      ]
    },
    "✗ Failed to create thread:": {
      "value": "✗ Failed to create thread:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_local.py:66"
      ]
    },
    "✗ Failed to detect error in:": {
      "value": "✗ Failed to detect error in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:99"
      ]
    },
    "✗ Failed to instantiate StagingConfig:": {
      "value": "✗ Failed to instantiate StagingConfig:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:61"
      ]
    },
    "✗ Failed with origin": {
      "value": "✗ Failed with origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:112"
      ]
    },
    "✗ No OAuth providers configured": {
      "value": "✗ No OAuth providers configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:358"
      ]
    },
    "✗ No password configured": {
      "value": "✗ No password configured",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:186"
      ]
    },
    "✗ Not using Cloud SQL socket - this could be the issue": {
      "value": "✗ Not using Cloud SQL socket - this could be the issue",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:167"
      ]
    },
    "✗ Report missing": {
      "value": "✗ Report missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:373"
      ]
    },
    "✗ Some tests still failing - manual intervention needed": {
      "value": "✗ Some tests still failing - manual intervention needed",
      "category": "test_literals",
      "locations": [
        "scripts/e2e_test_fixer.py:319"
      ]
    },
    "✗ Test": {
      "value": "✗ Test",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:182"
      ]
    },
    "✗ Test '": {
      "value": "✗ Test '",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:330"
      ]
    },
    "✗ Test WebSocket endpoint failed": {
      "value": "✗ Test WebSocket endpoint failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:179"
      ]
    },
    "✗ Test failed:": {
      "value": "✗ Test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:110"
      ]
    },
    "✗ Unexpected validation error:": {
      "value": "✗ Unexpected validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:57"
      ]
    },
    "✗ Unexpected workflow path": {
      "value": "✗ Unexpected workflow path",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow_direct.py:139"
      ]
    },
    "✗ Unhealthy": {
      "value": "✗ Unhealthy",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:106"
      ]
    },
    "✗ Validation failed unexpectedly:": {
      "value": "✗ Validation failed unexpectedly:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:106"
      ]
    },
    "✗ Validation should have failed for missing ClickHouse": {
      "value": "✗ Validation should have failed for missing ClickHouse",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_clickhouse_staging_fix.py:51"
      ]
    },
    "✗ WebSocket Connection Failed:": {
      "value": "✗ WebSocket Connection Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test/test_staging_quick.py:55"
      ]
    },
    "✗ WebSocket config endpoint not accessible": {
      "value": "✗ WebSocket config endpoint not accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:173"
      ]
    },
    "✗ Wrong detection for:": {
      "value": "✗ Wrong detection for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:94"
      ]
    },
    "✗ [": {
      "value": "✗ [",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:291"
      ]
    },
    "✨ Configuration is correctly using Secret Manager values": {
      "value": "✨ Configuration is correctly using Secret Manager values",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:226"
      ]
    },
    "✨ No placeholder or incorrect references detected": {
      "value": "✨ No placeholder or incorrect references detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:227"
      ]
    },
    "❌": {
      "value": "❌",
      "category": "test_literals",
      "locations": [
        "scripts/run_all_test_categories.py:145",
        "scripts/test_adaptive_workflow.py:55",
        "scripts/test_adaptive_workflow.py:362",
        "scripts/test_clickhouse_startup_fix.py:343",
        "scripts/test_clickhouse_startup_fix.py:359",
        "scripts/test_coordination_fixes.py:65",
        "scripts/test_coordination_fixes.py:389",
        "scripts/test_cors_implementation.py:193",
        "scripts/test_docker_hot_reload.py:171",
        "scripts/test_docker_hot_reload.py:176"
      ]
    },
    "❌ $": {
      "value": "❌ $",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:510"
      ]
    },
    "❌ (FAILING)": {
      "value": "❌ (FAILING)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:883"
      ]
    },
    "❌ ACT not found. Please install ACT first.": {
      "value": "❌ ACT not found. Please install ACT first.",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:47"
      ]
    },
    "❌ ANTHROPIC_API_KEY: Missing": {
      "value": "❌ ANTHROPIC_API_KEY: Missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:60"
      ]
    },
    "❌ Agent completed event not sent": {
      "value": "❌ Agent completed event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:232"
      ]
    },
    "❌ Agent started event not sent": {
      "value": "❌ Agent started event not sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:219"
      ]
    },
    "❌ Async serialization method missing": {
      "value": "❌ Async serialization method missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:363"
      ]
    },
    "❌ Auth builder error:": {
      "value": "❌ Auth builder error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:107"
      ]
    },
    "❌ Auth service URL not configured": {
      "value": "❌ Auth service URL not configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:59"
      ]
    },
    "❌ Auth service hot reload FAILED - marker not found in container": {
      "value": "❌ Auth service hot reload FAILED - marker not found in container",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:130"
      ]
    },
    "❌ Auth service is disabled": {
      "value": "❌ Auth service is disabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:57"
      ]
    },
    "❌ BLOCKING CONFIRMED: The current implementation blocks the event loop.": {
      "value": "❌ BLOCKING CONFIRMED: The current implementation blocks the event loop.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:246"
      ]
    },
    "❌ BLOCKING DETECTED: Concurrent serializations are blocking each other!": {
      "value": "❌ BLOCKING DETECTED: Concurrent serializations are blocking each other!",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:221"
      ]
    },
    "❌ BLOCKING DETECTED: Synchronous serialization is blocking the event loop!": {
      "value": "❌ BLOCKING DETECTED: Synchronous serialization is blocking the event loop!",
      "category": "test_literals",
      "locations": [
        "scripts/simple_websocket_blocking_test.py:169"
      ]
    },
    "❌ Backend hot reload FAILED - marker not found in container": {
      "value": "❌ Backend hot reload FAILED - marker not found in container",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:92"
      ]
    },
    "❌ Backend main test failed:": {
      "value": "❌ Backend main test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:150"
      ]
    },
    "❌ Backward compatibility error:": {
      "value": "❌ Backward compatibility error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:167"
      ]
    },
    "❌ Blocking Issues:": {
      "value": "❌ Blocking Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:115"
      ]
    },
    "❌ Business impact criteria NOT MET": {
      "value": "❌ Business impact criteria NOT MET",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:624"
      ]
    },
    "❌ CORS preflight failed (": {
      "value": "❌ CORS preflight failed (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:100"
      ]
    },
    "❌ CORS test failed:": {
      "value": "❌ CORS test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:103"
      ]
    },
    "❌ CRITICAL: No WebSocket events at all!": {
      "value": "❌ CRITICAL: No WebSocket events at all!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:111"
      ]
    },
    "❌ CRITICAL: WebSocket validation failed:": {
      "value": "❌ CRITICAL: WebSocket validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:189"
      ]
    },
    "❌ Cache builder error:": {
      "value": "❌ Cache builder error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:119"
      ]
    },
    "❌ Cache not working: got": {
      "value": "❌ Cache not working: got",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:117"
      ]
    },
    "❌ Cannot get OAuth providers (": {
      "value": "❌ Cannot get OAuth providers (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:117"
      ]
    },
    "❌ Cannot test notification methods - no WebSocket notifier": {
      "value": "❌ Cannot test notification methods - no WebSocket notifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:106"
      ]
    },
    "❌ ClickHouse staging connectivity test FAILED!": {
      "value": "❌ ClickHouse staging connectivity test FAILED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:229"
      ]
    },
    "❌ ClickHouse startup initialization timed out - fix needed": {
      "value": "❌ ClickHouse startup initialization timed out - fix needed",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:82"
      ]
    },
    "❌ Configuration error:": {
      "value": "❌ Configuration error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:242"
      ]
    },
    "❌ Connection closed: code=": {
      "value": "❌ Connection closed: code=",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:161"
      ]
    },
    "❌ Connection failed:": {
      "value": "❌ Connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:196"
      ]
    },
    "❌ Connectivity test failed for": {
      "value": "❌ Connectivity test failed for",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:137"
      ]
    },
    "❌ Connectivity test failed:": {
      "value": "❌ Connectivity test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:158"
      ]
    },
    "❌ Could not connect to test server": {
      "value": "❌ Could not connect to test server",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:107"
      ]
    },
    "❌ Coverage below 90% threshold!": {
      "value": "❌ Coverage below 90% threshold!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:228"
      ]
    },
    "❌ Critical test suites FAILED": {
      "value": "❌ Critical test suites FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:600"
      ]
    },
    "❌ DO NOT DEPLOY - Fix issues before proceeding": {
      "value": "❌ DO NOT DEPLOY - Fix issues before proceeding",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:676"
      ]
    },
    "❌ Debug info failed:": {
      "value": "❌ Debug info failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:127"
      ]
    },
    "❌ Docker not found or not running.": {
      "value": "❌ Docker not found or not running.",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:64"
      ]
    },
    "❌ Dry run failed:": {
      "value": "❌ Dry run failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:175"
      ]
    },
    "❌ Duplicate not handled:": {
      "value": "❌ Duplicate not handled:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:52"
      ]
    },
    "❌ E2E test failed:": {
      "value": "❌ E2E test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:104"
      ]
    },
    "❌ ERROR during execution flow test:": {
      "value": "❌ ERROR during execution flow test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:201"
      ]
    },
    "❌ ERROR during integration test:": {
      "value": "❌ ERROR during integration test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:157"
      ]
    },
    "❌ ERROR: Test failed with exception:": {
      "value": "❌ ERROR: Test failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:255"
      ]
    },
    "❌ Environment not set correctly": {
      "value": "❌ Environment not set correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:88"
      ]
    },
    "❌ Error checking ACT:": {
      "value": "❌ Error checking ACT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:50"
      ]
    },
    "❌ Error checking Docker:": {
      "value": "❌ Error checking Docker:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:67"
      ]
    },
    "❌ Error during lifecycle monitoring:": {
      "value": "❌ Error during lifecycle monitoring:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:170"
      ]
    },
    "❌ Error during test:": {
      "value": "❌ Error during test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_corpus_admin_direct.py:70",
        "scripts/test_staging_threads_fix.py:63"
      ]
    },
    "❌ Error initializing auth service client:": {
      "value": "❌ Error initializing auth service client:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:119"
      ]
    },
    "❌ Error initializing auth service settings:": {
      "value": "❌ Error initializing auth service settings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:77"
      ]
    },
    "❌ Error running tests:": {
      "value": "❌ Error running tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:62"
      ]
    },
    "❌ Error:": {
      "value": "❌ Error:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:324"
      ]
    },
    "❌ Event confirmation test failed:": {
      "value": "❌ Event confirmation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:274"
      ]
    },
    "❌ ExecutionEngine missing WebSocket manager": {
      "value": "❌ ExecutionEngine missing WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:77"
      ]
    },
    "❌ ExecutionEngine missing WebSocket notifier": {
      "value": "❌ ExecutionEngine missing WebSocket notifier",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:75"
      ]
    },
    "❌ Exiting with error code due to": {
      "value": "❌ Exiting with error code due to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:460"
      ]
    },
    "❌ Exiting with error:": {
      "value": "❌ Exiting with error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:605"
      ]
    },
    "❌ Expected SERVICE_ID 'netra-backend', got '": {
      "value": "❌ Expected SERVICE_ID 'netra-backend', got '",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:109"
      ]
    },
    "❌ FAIL": {
      "value": "❌ FAIL",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:116",
        "scripts/test_and_fix_cors.py:132",
        "scripts/test_auth_service_integration_fix.py:196",
        "scripts/test_auth_service_integration_fix.py:197",
        "scripts/test_backend_port_binding.py:170",
        "scripts/test_backend_port_binding.py:181",
        "scripts/test_cold_start_e2e.py:486",
        "scripts/test_cors_implementation.py:187",
        "scripts/test_docker_hot_reload.py:223",
        "scripts/test_secret_manager_builder_critical.py:495"
      ]
    },
    "❌ FAIL:": {
      "value": "❌ FAIL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:765"
      ]
    },
    "❌ FAILED": {
      "value": "❌ FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:356",
        "scripts/test_auth_integration.py:148",
        "scripts/test_clickhouse_startup_fix.py:380",
        "scripts/test_staging_env.py:173",
        "scripts/test_staging_jwt.py:73",
        "scripts/test_staging_threads_fix.py:109",
        "scripts/test_websocket_chat_standalone.py:123",
        "scripts/test_websocket_chat_standalone.py:431",
        "scripts/test_websocket_injection_fix_complete.py:373",
        "scripts/test_websocket_injection_fix_complete.py:649"
      ]
    },
    "❌ FAILED (Token may be expired)": {
      "value": "❌ FAILED (Token may be expired)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:110"
      ]
    },
    "❌ FAILED | Backend service failed to start": {
      "value": "❌ FAILED | Backend service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:71"
      ]
    },
    "❌ FAILED | Database validation failed": {
      "value": "❌ FAILED | Database validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:55"
      ]
    },
    "❌ FAILED | Environment check failed": {
      "value": "❌ FAILED | Environment check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:42"
      ]
    },
    "❌ FAILED | No services started successfully": {
      "value": "❌ FAILED | No services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:107"
      ]
    },
    "❌ FAILURE: No WebSocket events detected": {
      "value": "❌ FAILURE: No WebSocket events detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:196"
      ]
    },
    "❌ FAILURE: Some critical tests failed": {
      "value": "❌ FAILURE: Some critical tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:365"
      ]
    },
    "❌ FAILURE: Still getting 404 error": {
      "value": "❌ FAILURE: Still getting 404 error",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:50"
      ]
    },
    "❌ FAILURES DETECTED - Review error logs": {
      "value": "❌ FAILURES DETECTED - Review error logs",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:196"
      ]
    },
    "❌ Failed Workflows:": {
      "value": "❌ Failed Workflows:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:343"
      ]
    },
    "❌ Failed to buffer critical message": {
      "value": "❌ Failed to buffer critical message",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:193"
      ]
    },
    "❌ Failed to connect": {
      "value": "❌ Failed to connect",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:79"
      ]
    },
    "❌ Failed to create Secret Manager client:": {
      "value": "❌ Failed to create Secret Manager client:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:46"
      ]
    },
    "❌ Failed to fetch": {
      "value": "❌ Failed to fetch",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:56"
      ]
    },
    "❌ Failed to fix": {
      "value": "❌ Failed to fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:178"
      ]
    },
    "❌ Failed to import SecretManagerBuilder:": {
      "value": "❌ Failed to import SecretManagerBuilder:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:174"
      ]
    },
    "❌ Failed to import backend main:": {
      "value": "❌ Failed to import backend main:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:147"
      ]
    },
    "❌ Failed to initialize Chrome driver. Install chromedriver if needed.": {
      "value": "❌ Failed to initialize Chrome driver. Install chromedriver if needed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:40"
      ]
    },
    "❌ Failed to load": {
      "value": "❌ Failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:79"
      ]
    },
    "❌ Failed to load secrets from Secret Manager": {
      "value": "❌ Failed to load secrets from Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:212"
      ]
    },
    "❌ Failed to load secrets:": {
      "value": "❌ Failed to load secrets:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:63"
      ]
    },
    "❌ Failed to set up GCP authentication": {
      "value": "❌ Failed to set up GCP authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:38"
      ]
    },
    "❌ Failed:": {
      "value": "❌ Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:335"
      ]
    },
    "❌ Fatal error:": {
      "value": "❌ Fatal error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:454"
      ]
    },
    "❌ Fix implementation needs review.": {
      "value": "❌ Fix implementation needs review.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_threads_fix.py:116"
      ]
    },
    "❌ Found": {
      "value": "❌ Found",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:61",
        "scripts/compliance/real_test_linter.py:117",
        "scripts/iterative_test_fix_loop.py:117"
      ]
    },
    "❌ Frontend hot reload FAILED - marker not found in container": {
      "value": "❌ Frontend hot reload FAILED - marker not found in container",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:52"
      ]
    },
    "❌ Frontend not accessible. Make sure dev environment is running.": {
      "value": "❌ Frontend not accessible. Make sure dev environment is running.",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:25"
      ]
    },
    "❌ Frontend not responding on port 3000": {
      "value": "❌ Frontend not responding on port 3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:22"
      ]
    },
    "❌ GCP builder error:": {
      "value": "❌ GCP builder error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:99"
      ]
    },
    "❌ Handler initialization error:": {
      "value": "❌ Handler initialization error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:267"
      ]
    },
    "❌ Handler initialization failed": {
      "value": "❌ Handler initialization failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:261"
      ]
    },
    "❌ Health endpoint returned status": {
      "value": "❌ Health endpoint returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:144"
      ]
    },
    "❌ ISSUES DETECTED: Further investigation needed": {
      "value": "❌ ISSUES DETECTED: Further investigation needed",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:109"
      ]
    },
    "❌ ISSUES FOUND:": {
      "value": "❌ ISSUES FOUND:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:159"
      ]
    },
    "❌ ISSUES: WebSocket events may not be working properly": {
      "value": "❌ ISSUES: WebSocket events may not be working properly",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:217"
      ]
    },
    "❌ ISSUES: WebSocket integration needs fixes": {
      "value": "❌ ISSUES: WebSocket integration needs fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:173"
      ]
    },
    "❌ Import error:": {
      "value": "❌ Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:223"
      ]
    },
    "❌ Integration tests failed:": {
      "value": "❌ Integration tests failed:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:111"
      ]
    },
    "❌ Inter-service test failed:": {
      "value": "❌ Inter-service test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:163"
      ]
    },
    "❌ Invalid email not caught:": {
      "value": "❌ Invalid email not caught:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:69"
      ]
    },
    "❌ Invalid host:": {
      "value": "❌ Invalid host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:108"
      ]
    },
    "❌ Invalid or missing password": {
      "value": "❌ Invalid or missing password",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:139"
      ]
    },
    "❌ JWT encoding failed with": {
      "value": "❌ JWT encoding failed with",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:51"
      ]
    },
    "❌ Learning documentation incomplete - knowledge gaps detected": {
      "value": "❌ Learning documentation incomplete - knowledge gaps detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:535"
      ]
    },
    "❌ Learning documentation validation FAILED": {
      "value": "❌ Learning documentation validation FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:610"
      ]
    },
    "❌ Login failed:": {
      "value": "❌ Login failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:151"
      ]
    },
    "❌ Main chat failed to load": {
      "value": "❌ Main chat failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_glitch_fixes.py:73"
      ]
    },
    "❌ Message validation error:": {
      "value": "❌ Message validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:303"
      ]
    },
    "❌ Message validation failed": {
      "value": "❌ Message validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:297"
      ]
    },
    "❌ Missing critical notification methods:": {
      "value": "❌ Missing critical notification methods:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:102"
      ]
    },
    "❌ Missing fields not caught:": {
      "value": "❌ Missing fields not caught:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:117"
      ]
    },
    "❌ Missing required package:": {
      "value": "❌ Missing required package:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:114"
      ]
    },
    "❌ Mixed sync/async paths cause blocking under load": {
      "value": "❌ Mixed sync/async paths cause blocking under load",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:248"
      ]
    },
    "❌ NOT MET": {
      "value": "❌ NOT MET",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:652"
      ]
    },
    "❌ No WebSocket events were sent! Total sent messages:": {
      "value": "❌ No WebSocket events were sent! Total sent messages:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:369"
      ]
    },
    "❌ No agent start indication": {
      "value": "❌ No agent start indication",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:376"
      ]
    },
    "❌ No agent_started event - User won't know processing began": {
      "value": "❌ No agent_started event - User won't know processing began",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:105"
      ]
    },
    "❌ No completion event - User won't know when done": {
      "value": "❌ No completion event - User won't know when done",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:108"
      ]
    },
    "❌ No completion indication": {
      "value": "❌ No completion indication",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:383"
      ]
    },
    "❌ No dev containers running! Start them with:": {
      "value": "❌ No dev containers running! Start them with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:193"
      ]
    },
    "❌ No service auth headers configured": {
      "value": "❌ No service auth headers configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:99"
      ]
    },
    "❌ No token returned from registration, trying login...": {
      "value": "❌ No token returned from registration, trying login...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:37"
      ]
    },
    "❌ OAuth initiation failed (": {
      "value": "❌ OAuth initiation failed (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:130"
      ]
    },
    "❌ OAuth test failed:": {
      "value": "❌ OAuth test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:133"
      ]
    },
    "❌ Overall test failed:": {
      "value": "❌ Overall test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:100"
      ]
    },
    "❌ Password mismatch not caught:": {
      "value": "❌ Password mismatch not caught:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:103"
      ]
    },
    "❌ Performance validation failed with error:": {
      "value": "❌ Performance validation failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:346"
      ]
    },
    "❌ Prerequisites check failed": {
      "value": "❌ Prerequisites check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:276"
      ]
    },
    "❌ Quick health check FAILED": {
      "value": "❌ Quick health check FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:194"
      ]
    },
    "❌ Quick health check failed:": {
      "value": "❌ Quick health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:199"
      ]
    },
    "❌ Quick validation failed:": {
      "value": "❌ Quick validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:423"
      ]
    },
    "❌ Registration failed:": {
      "value": "❌ Registration failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:35"
      ]
    },
    "❌ Request failed:": {
      "value": "❌ Request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:110",
        "scripts/test_staging_jwt.py:54"
      ]
    },
    "❌ Required WebSocket events validation failed": {
      "value": "❌ Required WebSocket events validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:524"
      ]
    },
    "❌ SERVICE_ID not configured": {
      "value": "❌ SERVICE_ID not configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:61"
      ]
    },
    "❌ SERVICE_SECRET not configured": {
      "value": "❌ SERVICE_SECRET not configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:63"
      ]
    },
    "❌ SOME TESTS FAILED": {
      "value": "❌ SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:361"
      ]
    },
    "❌ SOME TESTS FAILED - Additional fixes may be needed.": {
      "value": "❌ SOME TESTS FAILED - Additional fixes may be needed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:108"
      ]
    },
    "❌ SQL injection not blocked:": {
      "value": "❌ SQL injection not blocked:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:134"
      ]
    },
    "❌ STAGING TESTS FAILED (exit code:": {
      "value": "❌ STAGING TESTS FAILED (exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:115"
      ]
    },
    "❌ STANDALONE CRITICAL CHAT FLOW TEST FAILED": {
      "value": "❌ STANDALONE CRITICAL CHAT FLOW TEST FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:395"
      ]
    },
    "❌ Server error - possible JWT mismatch": {
      "value": "❌ Server error - possible JWT mismatch",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:155"
      ]
    },
    "❌ Server responded with status": {
      "value": "❌ Server responded with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:103"
      ]
    },
    "❌ Service ID not set on client": {
      "value": "❌ Service ID not set on client",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:105"
      ]
    },
    "❌ Service connectivity FAILED": {
      "value": "❌ Service connectivity FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:82"
      ]
    },
    "❌ Service orchestration FAILED": {
      "value": "❌ Service orchestration FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:85"
      ]
    },
    "❌ Service orchestration test failed": {
      "value": "❌ Service orchestration test failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:228"
      ]
    },
    "❌ Service orchestration test failed:": {
      "value": "❌ Service orchestration test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:90"
      ]
    },
    "❌ Service secret not set on client": {
      "value": "❌ Service secret not set on client",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:107"
      ]
    },
    "❌ Services failed to become healthy within timeout": {
      "value": "❌ Services failed to become healthy within timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:168"
      ]
    },
    "❌ Socket binding failed:": {
      "value": "❌ Socket binding failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:41"
      ]
    },
    "❌ Some coordination fixes failed validation": {
      "value": "❌ Some coordination fixes failed validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:423"
      ]
    },
    "❌ Some tests failed - check output above": {
      "value": "❌ Some tests failed - check output above",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:59"
      ]
    },
    "❌ Static code analysis FAILED": {
      "value": "❌ Static code analysis FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:590"
      ]
    },
    "❌ Stress tests failed:": {
      "value": "❌ Stress tests failed:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:165"
      ]
    },
    "❌ Supervisor execution failed:": {
      "value": "❌ Supervisor execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:354"
      ]
    },
    "❌ Supervisor missing ExecutionEngine": {
      "value": "❌ Supervisor missing ExecutionEngine",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:79"
      ]
    },
    "❌ Supervisor missing ExecutionEngine - events may not be sent": {
      "value": "❌ Supervisor missing ExecutionEngine - events may not be sent",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:119"
      ]
    },
    "❌ Synchronous serialization blocks event loop": {
      "value": "❌ Synchronous serialization blocks event loop",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:245",
        "scripts/test_blocking_analysis.py:348"
      ]
    },
    "❌ Syntax error:": {
      "value": "❌ Syntax error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:132"
      ]
    },
    "❌ System cannot handle concurrent complex serialization": {
      "value": "❌ System cannot handle concurrent complex serialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:355"
      ]
    },
    "❌ TEST FAILED | Service startup orchestration test failed after": {
      "value": "❌ TEST FAILED | Service startup orchestration test failed after",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:142"
      ]
    },
    "❌ TEST FAILED:": {
      "value": "❌ TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_mock_violations_standalone.py:98"
      ]
    },
    "❌ Test WebSocket connection failed:": {
      "value": "❌ Test WebSocket connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:102"
      ]
    },
    "❌ Test error:": {
      "value": "❌ Test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:182"
      ]
    },
    "❌ Test execution failed:": {
      "value": "❌ Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:419"
      ]
    },
    "❌ Test failed with error:": {
      "value": "❌ Test failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_graceful_failure.py:60"
      ]
    },
    "❌ Test file not found:": {
      "value": "❌ Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:83"
      ]
    },
    "❌ Tests failed. Attempting fixes for": {
      "value": "❌ Tests failed. Attempting fixes for",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:800"
      ]
    },
    "❌ ThreadPoolExecutor missing": {
      "value": "❌ ThreadPoolExecutor missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:361"
      ]
    },
    "❌ Tool dispatcher WebSocket enhancement status unknown": {
      "value": "❌ Tool dispatcher WebSocket enhancement status unknown",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:64"
      ]
    },
    "❌ Unexpected OAuth redirect:": {
      "value": "❌ Unexpected OAuth redirect:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:128"
      ]
    },
    "❌ Unexpected error:": {
      "value": "❌ Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:177",
        "scripts/test_staging_jwt.py:57",
        "scripts/test_websocket_connection.py:116"
      ]
    },
    "❌ Unified test runner integration failed": {
      "value": "❌ Unified test runner integration failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_parallel_docker_manager.py:222"
      ]
    },
    "❌ Unit tests failed:": {
      "value": "❌ Unit tests failed:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:87"
      ]
    },
    "❌ Using localhost URL in staging environment": {
      "value": "❌ Using localhost URL in staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:65"
      ]
    },
    "❌ Uvicorn test failed:": {
      "value": "❌ Uvicorn test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:117"
      ]
    },
    "❌ VALIDATION FAILED": {
      "value": "❌ VALIDATION FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:639"
      ]
    },
    "❌ Validate endpoint test failed:": {
      "value": "❌ Validate endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:154"
      ]
    },
    "❌ Validation error:": {
      "value": "❌ Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:139"
      ]
    },
    "❌ Validation failed:": {
      "value": "❌ Validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:80"
      ]
    },
    "❌ Weak password not caught:": {
      "value": "❌ Weak password not caught:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:86"
      ]
    },
    "❌ WebSocket Manager: NO EVENTS RECEIVED": {
      "value": "❌ WebSocket Manager: NO EVENTS RECEIVED",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:175"
      ]
    },
    "❌ WebSocket connection closed:": {
      "value": "❌ WebSocket connection closed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:54"
      ]
    },
    "❌ WebSocket connection failed:": {
      "value": "❌ WebSocket connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:64"
      ]
    },
    "❌ WebSocket error:": {
      "value": "❌ WebSocket error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:114"
      ]
    },
    "❌ WebSocket infrastructure needs attention": {
      "value": "❌ WebSocket infrastructure needs attention",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:129"
      ]
    },
    "❌ WebSocket manager not available": {
      "value": "❌ WebSocket manager not available",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:236"
      ]
    },
    "❌ WebSocket notifier test FAILED": {
      "value": "❌ WebSocket notifier test FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:242"
      ]
    },
    "❌ Wrong password not handled:": {
      "value": "❌ Wrong password not handled:",
      "category": "test_literals",
      "locations": [
        "scripts/test_signup_flow_manual.py:165"
      ]
    },
    "❌ clickhouse-connect is not installed": {
      "value": "❌ clickhouse-connect is not installed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:246"
      ]
    },
    "❌ send_to_user (sync path) blocks more than send_to_thread (async path)": {
      "value": "❌ send_to_user (sync path) blocks more than send_to_thread (async path)",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:351"
      ]
    },
    "用户_测试_123": {
      "value": "用户_测试_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:637"
      ]
    },
    "用户名 🚀": {
      "value": "用户名 🚀",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_signup_flow_comprehensive.py:343"
      ]
    },
    "🌍": {
      "value": "🌍",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:492"
      ]
    },
    "🌍 RUNNING END-TO-END TESTS": {
      "value": "🌍 RUNNING END-TO-END TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:120"
      ]
    },
    "🌍 Testing CORS configuration...": {
      "value": "🌍 Testing CORS configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:80"
      ]
    },
    "🌐 Testing API service endpoints...": {
      "value": "🌐 Testing API service endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:57"
      ]
    },
    "🌐 Testing Auth Service Connectivity": {
      "value": "🌐 Testing Auth Service Connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:126"
      ]
    },
    "🌐 Testing ClickHouse connectivity...": {
      "value": "🌐 Testing ClickHouse connectivity...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:148"
      ]
    },
    "🌐 Testing unauthenticated access...": {
      "value": "🌐 Testing unauthenticated access...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:77"
      ]
    },
    "🎉 100-ITERATION TEST REMEDIATION COMPLETE! 🎉": {
      "value": "🎉 100-ITERATION TEST REMEDIATION COMPLETE! 🎉",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:511"
      ]
    },
    "🎉 ALL COORDINATION FIXES VALIDATED SUCCESSFULLY!": {
      "value": "🎉 ALL COORDINATION FIXES VALIDATED SUCCESSFULLY!",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:414"
      ]
    },
    "🎉 ALL PERFORMANCE REQUIREMENTS VALIDATED SUCCESSFULLY!": {
      "value": "🎉 ALL PERFORMANCE REQUIREMENTS VALIDATED SUCCESSFULLY!",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:327"
      ]
    },
    "🎉 ALL TESTS PASSED - Critical chat functionality is working!": {
      "value": "🎉 ALL TESTS PASSED - Critical chat functionality is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:438"
      ]
    },
    "🎉 ALL TESTS PASSED - Port 8000 should work for the backend!": {
      "value": "🎉 ALL TESTS PASSED - Port 8000 should work for the backend!",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:188"
      ]
    },
    "🎉 ALL TESTS PASSED!": {
      "value": "🎉 ALL TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:493",
        "scripts/test_example_message_flow.py:355"
      ]
    },
    "🎉 ALL TESTS PASSED! ClickHouse startup fix is working correctly.": {
      "value": "🎉 ALL TESTS PASSED! ClickHouse startup fix is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:390"
      ]
    },
    "🎉 All CORS tests passed! The implementation is working correctly.": {
      "value": "🎉 All CORS tests passed! The implementation is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:198"
      ]
    },
    "🎉 All E2E service orchestration tests PASSED": {
      "value": "🎉 All E2E service orchestration tests PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:79"
      ]
    },
    "🎉 All frontend tests are now passing!": {
      "value": "🎉 All frontend tests are now passing!",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:950"
      ]
    },
    "🎉 All hot reload tests passed!": {
      "value": "🎉 All hot reload tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:229"
      ]
    },
    "🎉 All tests passed!": {
      "value": "🎉 All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:425"
      ]
    },
    "🎉 All tests passed! Staging environment is fully operational.": {
      "value": "🎉 All tests passed! Staging environment is fully operational.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:193"
      ]
    },
    "🎉 All tests passed! The fixes should resolve the auth service integration issues.": {
      "value": "🎉 All tests passed! The fixes should resolve the auth service integration issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:200"
      ]
    },
    "🎉 All tests passing after": {
      "value": "🎉 All tests passing after",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:150"
      ]
    },
    "🎉 PERFECT! 100% test coverage achieved!": {
      "value": "🎉 PERFECT! 100% test coverage achieved!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:302"
      ]
    },
    "🎉 Quick validation passed!": {
      "value": "🎉 Quick validation passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:419"
      ]
    },
    "🎉 SUCCESS! All frontend tests are passing after iteration": {
      "value": "🎉 SUCCESS! All frontend tests are passing after iteration",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:873"
      ]
    },
    "🎉 SUCCESS! All tests are passing!": {
      "value": "🎉 SUCCESS! All tests are passing!",
      "category": "test_literals",
      "locations": [
        "scripts/continuous_e2e_test_runner.py:346"
      ]
    },
    "🎉 SUCCESS: Supervisor WebSocket integration is working!": {
      "value": "🎉 SUCCESS: Supervisor WebSocket integration is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:188"
      ]
    },
    "🎉 SUPERVISOR WEBSOCKET INTEGRATION: FULLY CONFIGURED": {
      "value": "🎉 SUPERVISOR WEBSOCKET INTEGRATION: FULLY CONFIGURED",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:148"
      ]
    },
    "🎉 Service orchestration test completed successfully": {
      "value": "🎉 Service orchestration test completed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:225"
      ]
    },
    "🎉 WebSocket injection fix validation SUCCESSFUL": {
      "value": "🎉 WebSocket injection fix validation SUCCESSFUL",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:671"
      ]
    },
    "🎭 Staging:": {
      "value": "🎭 Staging:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:105"
      ]
    },
    "🎯 EXCELLENT! >95% test coverage achieved!": {
      "value": "🎯 EXCELLENT! >95% test coverage achieved!",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:304"
      ]
    },
    "🎯 Focus on testing real business logic, not mocks or constants": {
      "value": "🎯 Focus on testing real business logic, not mocks or constants",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:220"
      ]
    },
    "🎯 PHASE 6 | Testing service readiness...": {
      "value": "🎯 PHASE 6 | Testing service readiness...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:79"
      ]
    },
    "🎯 Summary:": {
      "value": "🎯 Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:180"
      ]
    },
    "🎯 WebSocket Event:": {
      "value": "🎯 WebSocket Event:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:37"
      ]
    },
    "🏁 EXECUTION FLOW ANALYSIS SUMMARY:": {
      "value": "🏁 EXECUTION FLOW ANALYSIS SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:167"
      ]
    },
    "🏁 INTEGRATION TEST SUMMARY:": {
      "value": "🏁 INTEGRATION TEST SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:122"
      ]
    },
    "🏁 TESTING COMPLETE | Service startup orchestration test finished": {
      "value": "🏁 TESTING COMPLETE | Service startup orchestration test finished",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:99"
      ]
    },
    "🏗️  Development:": {
      "value": "🏗️  Development:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:104"
      ]
    },
    "🏗️ Created execution engine": {
      "value": "🏗️ Created execution engine",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:328"
      ]
    },
    "🏗️ Testing sub-builders...": {
      "value": "🏗️ Testing sub-builders...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:83"
      ]
    },
    "🏥 Running Quick Health Check": {
      "value": "🏥 Running Quick Health Check",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:181"
      ]
    },
    "🏥 Testing service health...": {
      "value": "🏥 Testing service health...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:18"
      ]
    },
    "🐌": {
      "value": "🐌",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:225",
        "scripts/test_secret_manager_builder_critical.py:658"
      ]
    },
    "🐳 Checking Docker Containers...": {
      "value": "🐳 Checking Docker Containers...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:188"
      ]
    },
    "👑 Created supervisor agent": {
      "value": "👑 Created supervisor agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:335"
      ]
    },
    "👥 Registered default agents": {
      "value": "👥 Registered default agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:324"
      ]
    },
    "💔 SOME TESTS FAILED - Critical chat functionality may be broken!": {
      "value": "💔 SOME TESTS FAILED - Critical chat functionality may be broken!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:440"
      ]
    },
    "💡 *": {
      "value": "💡 *",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:530"
      ]
    },
    "💡 BUSINESS CASE EVIDENCE:": {
      "value": "💡 BUSINESS CASE EVIDENCE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:533"
      ]
    },
    "💡 ROOT CAUSE:": {
      "value": "💡 ROOT CAUSE:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:250"
      ]
    },
    "💡 Recommendations:": {
      "value": "💡 Recommendations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:365"
      ]
    },
    "💡 Suggested fixes:": {
      "value": "💡 Suggested fixes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:145"
      ]
    },
    "💡 This confirms the fix should apply async serialization to send_to_user": {
      "value": "💡 This confirms the fix should apply async serialization to send_to_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:352"
      ]
    },
    "💡 To fix these issues:": {
      "value": "💡 To fix these issues:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:84"
      ]
    },
    "💥": {
      "value": "💥",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70",
        "scripts/test_example_message_flow.py:323"
      ]
    },
    "💥 CRITICAL SECRET MANAGER FRAGMENTATION DETECTED!\n   Issues found:": {
      "value": "💥 CRITICAL SECRET MANAGER FRAGMENTATION DETECTED!\n   Issues found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:218"
      ]
    },
    "💥 ERROR | Test failed with exception:": {
      "value": "💥 ERROR | Test failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:111"
      ]
    },
    "💥 Error running": {
      "value": "💥 Error running",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:125"
      ]
    },
    "💥 Exception:": {
      "value": "💥 Exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:172"
      ]
    },
    "💥 SOME TESTS FAILED - Port 8000 binding has issues": {
      "value": "💥 SOME TESTS FAILED - Port 8000 binding has issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:192"
      ]
    },
    "💥 Test execution failed:": {
      "value": "💥 Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:255"
      ]
    },
    "💥 WebSocket injection fix validation FAILED": {
      "value": "💥 WebSocket injection fix validation FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:675"
      ]
    },
    "💪 RUNNING STRESS TESTS": {
      "value": "💪 RUNNING STRESS TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:149"
      ]
    },
    "💬 Test message:": {
      "value": "💬 Test message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:339"
      ]
    },
    "💬 Testing chat message flow...": {
      "value": "💬 Testing chat message flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:311"
      ]
    },
    "💰 BUSINESS IMPACT:\n   • Current: 2-3 days per secret integration (4 implementations to update)\n   • Target: 30 minutes with unified SecretManagerBuilder\n   • Cost: $150K/year in prevented incidents + 60% faster development\n   • Risk: Configuration drift causing production outages\n\n✅ SOLUTION: SecretManagerBuilder following RedisConfigurationBuilder pattern\n   📋 Unified interface: builder.with_environment().with_service().build()\n   🏗️  9 Sub-builders: Connection, Security, Validation, Fallback, etc.\n   🔒 Security-first: Zero placeholder tolerance in production\n   🚀 Performance: <100ms load time per service\n   🔧 Debugging: Comprehensive validation and error reporting\n   🏢 Independence: Each service maintains its own builder instance": {
      "value": "💰 BUSINESS IMPACT:\n   • Current: 2-3 days per secret integration (4 implementations to update)\n   • Target: 30 minutes with unified SecretManagerBuilder\n   • Cost: $150K/year in prevented incidents + 60% faster development\n   • Risk: Configuration drift causing production outages\n\n✅ SOLUTION: SecretManagerBuilder following RedisConfigurationBuilder pattern\n   📋 Unified interface: builder.with_environment().with_service().build()\n   🏗️  9 Sub-builders: Connection, Security, Validation, Fallback, etc.\n   🔒 Security-first: Zero placeholder tolerance in production\n   🚀 Performance: <100ms load time per service\n   🔧 Debugging: Comprehensive validation and error reporting\n   🏢 Independence: Each service maintains its own builder instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:230"
      ]
    },
    "💼 Validating Business Impact Criteria...": {
      "value": "💼 Validating Business Impact Criteria...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:615"
      ]
    },
    "💾 PHASE 3 | Database validation...": {
      "value": "💾 PHASE 3 | Database validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:51"
      ]
    },
    "💾 Report saved to:": {
      "value": "💾 Report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:363"
      ]
    },
    "💾 Saved fixes to": {
      "value": "💾 Saved fixes to",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:265"
      ]
    },
    "📁": {
      "value": "📁",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:71",
        "scripts/ci/check_test_stubs.py:79"
      ]
    },
    "📁 Detailed report saved to: supervisor_test_report.json": {
      "value": "📁 Detailed report saved to: supervisor_test_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:314"
      ]
    },
    "📂 Checking Container Volume Mounts...": {
      "value": "📂 Checking Container Volume Mounts...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:141"
      ]
    },
    "📂 MISSING OPTIONAL VARIABLES BY CATEGORY:": {
      "value": "📂 MISSING OPTIONAL VARIABLES BY CATEGORY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:65"
      ]
    },
    "📄 Detailed results exported to": {
      "value": "📄 Detailed results exported to",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:226"
      ]
    },
    "📄 Full validation report saved to:": {
      "value": "📄 Full validation report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:665"
      ]
    },
    "📄 JSON report saved to:": {
      "value": "📄 JSON report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:600"
      ]
    },
    "📈 **Success Metric:** Reduce violations from": {
      "value": "📈 **Success Metric:** Reduce violations from",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:570"
      ]
    },
    "📈 Block Severity:": {
      "value": "📈 Block Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:211"
      ]
    },
    "📈 DETAILED METRICS": {
      "value": "📈 DETAILED METRICS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:350"
      ]
    },
    "📈 Improvement:": {
      "value": "📈 Improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:87"
      ]
    },
    "📈 Staging Environment Analysis:": {
      "value": "📈 Staging Environment Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:241"
      ]
    },
    "📈 Total Coverage:": {
      "value": "📈 Total Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:225"
      ]
    },
    "📊 Blocking Analysis:": {
      "value": "📊 Blocking Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:125"
      ]
    },
    "📊 Comparison Results:": {
      "value": "📊 Comparison Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:213"
      ]
    },
    "📊 Event Loop Blocking Analysis:": {
      "value": "📊 Event Loop Blocking Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:200"
      ]
    },
    "📊 Event Loop Blocking Detected:": {
      "value": "📊 Event Loop Blocking Detected:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:111"
      ]
    },
    "📊 Found": {
      "value": "📊 Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:280"
      ]
    },
    "📊 Generating Validation Report...": {
      "value": "📊 Generating Validation Report...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:629"
      ]
    },
    "📊 Getting debug info...": {
      "value": "📊 Getting debug info...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:122"
      ]
    },
    "📊 Key Improvements:": {
      "value": "📊 Key Improvements:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:232"
      ]
    },
    "📊 PERFORMANCE VALIDATION RESULTS": {
      "value": "📊 PERFORMANCE VALIDATION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:308"
      ]
    },
    "📊 Performance Comparison:": {
      "value": "📊 Performance Comparison:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:161"
      ]
    },
    "📊 RECOMMENDED (Performance/monitoring):": {
      "value": "📊 RECOMMENDED (Performance/monitoring):",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:210"
      ]
    },
    "📊 RUNNING FULL COVERAGE ANALYSIS": {
      "value": "📊 RUNNING FULL COVERAGE ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:198"
      ]
    },
    "📊 Results Summary:": {
      "value": "📊 Results Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:70"
      ]
    },
    "📊 SUMMARY STATISTICS:": {
      "value": "📊 SUMMARY STATISTICS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:515"
      ]
    },
    "📊 Server version:": {
      "value": "📊 Server version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:177"
      ]
    },
    "📊 Stress Test Analysis:": {
      "value": "📊 Stress Test Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:300"
      ]
    },
    "📊 Summary:": {
      "value": "📊 Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:276",
        "scripts/test_improved_environment_validation.py:86",
        "scripts/test_workflows_with_act.py:332"
      ]
    },
    "📊 TEST RESULTS SUMMARY": {
      "value": "📊 TEST RESULTS SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:311",
        "scripts/test_websocket_manual.py:121"
      ]
    },
    "📊 TEST SUMMARY": {
      "value": "📊 TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:348"
      ]
    },
    "📊 TEST SUMMARY:": {
      "value": "📊 TEST SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:176"
      ]
    },
    "📊 Test Results Summary": {
      "value": "📊 Test Results Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:194"
      ]
    },
    "📊 Test Summary:": {
      "value": "📊 Test Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:367",
        "scripts/test_docker_hot_reload.py:218"
      ]
    },
    "📊 Test Summary:\n   Total Tests Run:": {
      "value": "📊 Test Summary:\n   Total Tests Run:",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:287"
      ]
    },
    "📊 Testing:": {
      "value": "📊 Testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:212"
      ]
    },
    "📋 Created agent registry with WebSocket manager": {
      "value": "📋 Created agent registry with WebSocket manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:315"
      ]
    },
    "📋 Execution context created": {
      "value": "📋 Execution context created",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:199"
      ]
    },
    "📋 Generating Staging Environment Template": {
      "value": "📋 Generating Staging Environment Template",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:161"
      ]
    },
    "📋 MEDIUM: Schedule": {
      "value": "📋 MEDIUM: Schedule",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:207"
      ]
    },
    "📋 PHASE 1 | Environment and pre-checks...": {
      "value": "📋 PHASE 1 | Environment and pre-checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:38"
      ]
    },
    "📋 Running": {
      "value": "📋 Running",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:58"
      ]
    },
    "📋 Running test:": {
      "value": "📋 Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:166"
      ]
    },
    "📋 TEST EXECUTION REPORT": {
      "value": "📋 TEST EXECUTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:256"
      ]
    },
    "📋 Test 2: Adding Important Optional Variables": {
      "value": "📋 Test 2: Adding Important Optional Variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:75"
      ]
    },
    "📋 Test 3: Development vs Staging Environment Differences": {
      "value": "📋 Test 3: Development vs Staging Environment Differences",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:90"
      ]
    },
    "📋 Test 4: Service Startup Readiness Check": {
      "value": "📋 Test 4: Service Startup Readiness Check",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:109"
      ]
    },
    "📋 Test Report": {
      "value": "📋 Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:325"
      ]
    },
    "📍 Line": {
      "value": "📍 Line",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:72",
        "scripts/ci/check_test_stubs.py:80"
      ]
    },
    "📖 Review SPEC/testing.xml for detailed fake test guidance": {
      "value": "📖 Review SPEC/testing.xml for detailed fake test guidance",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:219"
      ]
    },
    "📚 Available databases:": {
      "value": "📚 Available databases:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:182"
      ]
    },
    "📚 Use patterns from app/tests/examples/test_real_functionality_examples.py": {
      "value": "📚 Use patterns from app/tests/examples/test_real_functionality_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:217"
      ]
    },
    "📚 Validating Learning Documentation...": {
      "value": "📚 Validating Learning Documentation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:605"
      ]
    },
    "📝 Auth Service Integration Fixes Applied": {
      "value": "📝 Auth Service Integration Fixes Applied",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:165"
      ]
    },
    "📝 Creating thread...": {
      "value": "📝 Creating thread...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:63"
      ]
    },
    "📝 Note: Different environments warn about different missing variables": {
      "value": "📝 Note: Different environments warn about different missing variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:106"
      ]
    },
    "📝 Required volume mounts:": {
      "value": "📝 Required volume mounts:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:233"
      ]
    },
    "📝 Staging Environment Variable Template:": {
      "value": "📝 Staging Environment Variable Template:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:201"
      ]
    },
    "📝 Troubleshooting steps:": {
      "value": "📝 Troubleshooting steps:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:230"
      ]
    },
    "📝 Validating syntax:": {
      "value": "📝 Validating syntax:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:110"
      ]
    },
    "📡 Health endpoint response:": {
      "value": "📡 Health endpoint response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:41"
      ]
    },
    "📡 Sending WebSocket events...": {
      "value": "📡 Sending WebSocket events...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:202"
      ]
    },
    "📤 Sent ping message:": {
      "value": "📤 Sent ping message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:77"
      ]
    },
    "📤 Sent pong response": {
      "value": "📤 Sent pong response",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:99"
      ]
    },
    "📥 Received message": {
      "value": "📥 Received message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:84"
      ]
    },
    "📦 Loading ClickHouse secrets from Secret Manager...": {
      "value": "📦 Loading ClickHouse secrets from Secret Manager...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:61"
      ]
    },
    "📦 Starting services with dev launcher...": {
      "value": "📦 Starting services with dev launcher...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:112"
      ]
    },
    "📦 Testing load_all_secrets()...": {
      "value": "📦 Testing load_all_secrets()...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:43"
      ]
    },
    "📧 Registering user:": {
      "value": "📧 Registering user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:31"
      ]
    },
    "📧 WebSocket captured:": {
      "value": "📧 WebSocket captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:278"
      ]
    },
    "📧 WebSocket message captured:": {
      "value": "📧 WebSocket message captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:174"
      ]
    },
    "📨 Testing messages endpoint...": {
      "value": "📨 Testing messages endpoint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:112"
      ]
    },
    "🔄 CONSISTENCY   | ✅ PASS | Services aligned": {
      "value": "🔄 CONSISTENCY   | ✅ PASS | Services aligned",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:509"
      ]
    },
    "🔄 CONSISTENCY   | ❌ FAIL |": {
      "value": "🔄 CONSISTENCY   | ❌ FAIL |",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:505"
      ]
    },
    "🔄 ITERATION": {
      "value": "🔄 ITERATION",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:784"
      ]
    },
    "🔄 PHASE 4 | Migration check...": {
      "value": "🔄 PHASE 4 | Migration check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:58"
      ]
    },
    "🔄 Testing 5 concurrent users with <2s response time...": {
      "value": "🔄 Testing 5 concurrent users with <2s response time...",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:61"
      ]
    },
    "🔄 Testing WebSocket event delivery confirmation...": {
      "value": "🔄 Testing WebSocket event delivery confirmation...",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:227"
      ]
    },
    "🔄 Testing connection recovery within 5s...": {
      "value": "🔄 Testing connection recovery within 5s...",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:121"
      ]
    },
    "🔄 Testing thread update...": {
      "value": "🔄 Testing thread update...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:93"
      ]
    },
    "🔄 Testing zero message loss for critical messages...": {
      "value": "🔄 Testing zero message loss for critical messages...",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:167"
      ]
    },
    "🔌 Connection closed cleanly": {
      "value": "🔌 Connection closed cleanly",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:167"
      ]
    },
    "🔌 Initiating connection to": {
      "value": "🔌 Initiating connection to",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:131"
      ]
    },
    "🔌 Testing WebSocket connection...": {
      "value": "🔌 Testing WebSocket connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:263"
      ]
    },
    "🔌 Testing connectivity to": {
      "value": "🔌 Testing connectivity to",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:113"
      ]
    },
    "🔍 Add fake test detection to CI pipeline to prevent regressions": {
      "value": "🔍 Add fake test detection to CI pipeline to prevent regressions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:218"
      ]
    },
    "🔍 Checking data endpoint:": {
      "value": "🔍 Checking data endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:126"
      ]
    },
    "🔍 Checking endpoint:": {
      "value": "🔍 Checking endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:72"
      ]
    },
    "🔍 Checking prerequisites...": {
      "value": "🔍 Checking prerequisites...",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:34"
      ]
    },
    "🔍 DETAILED FAILURES/ERRORS:": {
      "value": "🔍 DETAILED FAILURES/ERRORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:354"
      ]
    },
    "🔍 Running": {
      "value": "🔍 Running",
      "category": "test_literals",
      "locations": [
        "scripts/test_clickhouse_startup_fix.py:334"
      ]
    },
    "🔍 Running Quick Validation Checks": {
      "value": "🔍 Running Quick Validation Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:370"
      ]
    },
    "🔍 Running Static Code Analysis...": {
      "value": "🔍 Running Static Code Analysis...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:584"
      ]
    },
    "🔍 Running Validation Checks": {
      "value": "🔍 Running Validation Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:66"
      ]
    },
    "🔍 TEST SUMMARY": {
      "value": "🔍 TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:340"
      ]
    },
    "🔍 Testing": {
      "value": "🔍 Testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:19"
      ]
    },
    "🔍 Testing Auth Service Configuration Fixes": {
      "value": "🔍 Testing Auth Service Configuration Fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:22"
      ]
    },
    "🔍 Testing Auth Service Hot Reload...": {
      "value": "🔍 Testing Auth Service Hot Reload...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:103"
      ]
    },
    "🔍 Testing Backend Hot Reload...": {
      "value": "🔍 Testing Backend Hot Reload...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:65"
      ]
    },
    "🔍 Testing Frontend Hot Reload...": {
      "value": "🔍 Testing Frontend Hot Reload...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:25"
      ]
    },
    "🔍 Testing Supervisor Execution Flow with WebSocket Events...": {
      "value": "🔍 Testing Supervisor Execution Flow with WebSocket Events...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:68"
      ]
    },
    "🔍 Testing Supervisor WebSocket Integration...": {
      "value": "🔍 Testing Supervisor WebSocket Integration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:22"
      ]
    },
    "🔍 Testing circuit breaker with rapid requests to:": {
      "value": "🔍 Testing circuit breaker with rapid requests to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:252"
      ]
    },
    "🔍 Testing health endpoint:": {
      "value": "🔍 Testing health endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:135"
      ]
    },
    "🔍 Testing retry logic for:": {
      "value": "🔍 Testing retry logic for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:183"
      ]
    },
    "🔍 Testing validate endpoint:": {
      "value": "🔍 Testing validate endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:148"
      ]
    },
    "🔍 Validating secret values...": {
      "value": "🔍 Validating secret values...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:93"
      ]
    },
    "🔍 Verifying thread integrity...": {
      "value": "🔍 Verifying thread integrity...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:80"
      ]
    },
    "🔐 PHASE 2 | Loading secrets...": {
      "value": "🔐 PHASE 2 | Loading secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:45"
      ]
    },
    "🔐 Setting up GCP Secret Manager client...": {
      "value": "🔐 Setting up GCP Secret Manager client...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:34"
      ]
    },
    "🔐 Staging JWT Secret Verification": {
      "value": "🔐 Staging JWT Secret Verification",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt.py:61"
      ]
    },
    "🔐 Testing auth service endpoints...": {
      "value": "🔐 Testing auth service endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:30"
      ]
    },
    "🔐 Testing authentication...": {
      "value": "🔐 Testing authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:218"
      ]
    },
    "🔐 Testing cross-service authentication...": {
      "value": "🔐 Testing cross-service authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:123"
      ]
    },
    "🔐 Testing validate_configuration()...": {
      "value": "🔐 Testing validate_configuration()...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:66"
      ]
    },
    "🔑 Authentication Details": {
      "value": "🔑 Authentication Details",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:378"
      ]
    },
    "🔑 Testing OAuth configuration...": {
      "value": "🔑 Testing OAuth configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:107"
      ]
    },
    "🔔 WebSocket notifier created": {
      "value": "🔔 WebSocket notifier created",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:187"
      ]
    },
    "🔗 Connected user": {
      "value": "🔗 Connected user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:183",
        "scripts/test_websocket_chat_standalone.py:288"
      ]
    },
    "🔗 RUNNING INTEGRATION TESTS": {
      "value": "🔗 RUNNING INTEGRATION TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:96"
      ]
    },
    "🔗 Testing inter-service communication...": {
      "value": "🔗 Testing inter-service communication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:137"
      ]
    },
    "🔥": {
      "value": "🔥",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "🔥 **": {
      "value": "🔥 **",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:505"
      ]
    },
    "🔥 HIGH": {
      "value": "🔥 HIGH",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:551"
      ]
    },
    "🔥 URGENT: Fix": {
      "value": "🔥 URGENT: Fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "🔧 Action:": {
      "value": "🔧 Action:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:73",
        "scripts/ci/check_test_stubs.py:81"
      ]
    },
    "🔧 Attempting to fix issues in:": {
      "value": "🔧 Attempting to fix issues in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:248"
      ]
    },
    "🔧 IMPLEMENTATION FRAGMENTATION:": {
      "value": "🔧 IMPLEMENTATION FRAGMENTATION:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:528"
      ]
    },
    "🔧 LOW: Consider consolidating": {
      "value": "🔧 LOW: Consider consolidating",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:212"
      ]
    },
    "🔧 Netra Environment Variable Validation Test Suite": {
      "value": "🔧 Netra Environment Variable Validation Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:221"
      ]
    },
    "🔧 RUNNING UNIT TESTS": {
      "value": "🔧 RUNNING UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:68"
      ]
    },
    "🔧 Registered test tool": {
      "value": "🔧 Registered test tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:310"
      ]
    },
    "🔧 SOLUTION REQUIRED:": {
      "value": "🔧 SOLUTION REQUIRED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:357"
      ]
    },
    "🔧 SOLUTION:": {
      "value": "🔧 SOLUTION:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:255"
      ]
    },
    "🔧 Testing backward compatibility...": {
      "value": "🔧 Testing backward compatibility...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:130"
      ]
    },
    "🔴": {
      "value": "🔴",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:119",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/test_dashboard.py:137"
      ]
    },
    "🔴 Async serialization method missing": {
      "value": "🔴 Async serialization method missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:265"
      ]
    },
    "🔴 CRITICAL: Event loop blocking detected!": {
      "value": "🔴 CRITICAL: Event loop blocking detected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:250"
      ]
    },
    "🔴 CRITICAL: Found": {
      "value": "🔴 CRITICAL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:217"
      ]
    },
    "🔴 CRITICAL: Severe blocking detected during stress test": {
      "value": "🔴 CRITICAL: Severe blocking detected during stress test",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:306"
      ]
    },
    "🔴 EVENT LOOP BLOCKING CONFIRMED": {
      "value": "🔴 EVENT LOOP BLOCKING CONFIRMED",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:242",
        "scripts/test_blocking_analysis.py:344"
      ]
    },
    "🔴 Event loop blocking detected!": {
      "value": "🔴 Event loop blocking detected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:338"
      ]
    },
    "🔴 ThreadPoolExecutor missing": {
      "value": "🔴 ThreadPoolExecutor missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:263"
      ]
    },
    "🔴 send_to_user causes more blocking than send_to_thread": {
      "value": "🔴 send_to_user causes more blocking than send_to_thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:218"
      ]
    },
    "🚀 Auth Service Integration Fix Validation": {
      "value": "🚀 Auth Service Integration Fix Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:188"
      ]
    },
    "🚀 ClickHouse Staging Connectivity Tester": {
      "value": "🚀 ClickHouse Staging Connectivity Tester",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:203"
      ]
    },
    "🚀 NETRA ADAPTIVE WORKFLOW TEST SUITE": {
      "value": "🚀 NETRA ADAPTIVE WORKFLOW TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_adaptive_workflow.py:292"
      ]
    },
    "🚀 PHASE 5 | Starting services...": {
      "value": "🚀 PHASE 5 | Starting services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:64"
      ]
    },
    "🚀 Processing message through supervisor...": {
      "value": "🚀 Processing message through supervisor...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:343"
      ]
    },
    "🚀 Running Critical JWT Authentication Tests": {
      "value": "🚀 Running Critical JWT Authentication Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_critical.py:24"
      ]
    },
    "🚀 SUPERVISOR AGENT TEST SUITE - BULLETPROOF EDITION": {
      "value": "🚀 SUPERVISOR AGENT TEST SUITE - BULLETPROOF EDITION",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:321"
      ]
    },
    "🚀 Service Startup:": {
      "value": "🚀 Service Startup:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:114"
      ]
    },
    "🚀 Starting Agent Orchestration Recovery Tests": {
      "value": "🚀 Starting Agent Orchestration Recovery Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:305"
      ]
    },
    "🚀 Starting Cold Start E2E Test Suite": {
      "value": "🚀 Starting Cold Start E2E Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:73"
      ]
    },
    "🚀 Starting Docker WebSocket configuration tests...": {
      "value": "🚀 Starting Docker WebSocket configuration tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:236"
      ]
    },
    "🚀 Starting Example Message Flow Test Suite": {
      "value": "🚀 Starting Example Message Flow Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:38"
      ]
    },
    "🚀 Starting GitHub Workflows Testing with ACT": {
      "value": "🚀 Starting GitHub Workflows Testing with ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:272"
      ]
    },
    "🚀 Starting Standalone Critical Chat Flow Tests": {
      "value": "🚀 Starting Standalone Critical Chat Flow Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:402"
      ]
    },
    "🚀 Starting WebSocket Connection Tests": {
      "value": "🚀 Starting WebSocket Connection Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:108"
      ]
    },
    "🚀 Starting automated frontend test iterations": {
      "value": "🚀 Starting automated frontend test iterations",
      "category": "test_literals",
      "locations": [
        "scripts/frontend_iterative_test_runner.py:858"
      ]
    },
    "🚀 Starting comprehensive port 8000 binding test": {
      "value": "🚀 Starting comprehensive port 8000 binding test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:155"
      ]
    },
    "🚀 Starting real data pipeline test...": {
      "value": "🚀 Starting real data pipeline test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:14"
      ]
    },
    "🚀 TESTING": {
      "value": "🚀 TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:176"
      ]
    },
    "🚀 Testing E2E Service Orchestration System": {
      "value": "🚀 Testing E2E Service Orchestration System",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:45"
      ]
    },
    "🚀 The system is now ready for production deployment!": {
      "value": "🚀 The system is now ready for production deployment!",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:521"
      ]
    },
    "🚀 WebSocket Infrastructure Performance Validation": {
      "value": "🚀 WebSocket Infrastructure Performance Validation",
      "category": "test_literals",
      "locations": [
        "scripts/websocket_performance_standalone_test.py:281"
      ]
    },
    "🚨": {
      "value": "🚨",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:448",
        "scripts/test_secret_manager_builder_critical.py:228",
        "scripts/test_secret_manager_builder_critical.py:767"
      ]
    },
    "🚨 CRITICAL (Required for startup):": {
      "value": "🚨 CRITICAL (Required for startup):",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:202"
      ]
    },
    "🚨 CRITICAL ISSUE: Blocking > 100ms detected": {
      "value": "🚨 CRITICAL ISSUE: Blocking > 100ms detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:342"
      ]
    },
    "🚨 CRITICAL SECURITY VIOLATIONS DETECTED!\nViolations that risk production security:": {
      "value": "🚨 CRITICAL SECURITY VIOLATIONS DETECTED!\nViolations that risk production security:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:777"
      ]
    },
    "🚨 CRITICAL: Remove": {
      "value": "🚨 CRITICAL: Remove",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "🚨 Configuration Issues Found:": {
      "value": "🚨 Configuration Issues Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:68"
      ]
    },
    "🚨 ERRORS:": {
      "value": "🚨 ERRORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_improved_environment_validation.py:52"
      ]
    },
    "🚨 HIGH SEVERITY (": {
      "value": "🚨 HIGH SEVERITY (",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:69"
      ]
    },
    "🚨 RUNNING MISSION-CRITICAL TESTS": {
      "value": "🚨 RUNNING MISSION-CRITICAL TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/run_supervisor_test_coverage.py:174"
      ]
    },
    "🚨 Service Credential Issues:": {
      "value": "🚨 Service Credential Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_service_integration_fix.py:112"
      ]
    },
    "🛡️": {
      "value": "🛡️",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:779"
      ]
    },
    "🛡️  SECURITY VIOLATIONS (": {
      "value": "🛡️  SECURITY VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:227"
      ]
    },
    "🛡️  TESTING": {
      "value": "🛡️  TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:713"
      ]
    },
    "🟡": {
      "value": "🟡",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:121",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/test_dashboard.py:138"
      ]
    },
    "🟡 WARNING: Found": {
      "value": "🟡 WARNING: Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:220"
      ]
    },
    "🟡 WARNING: Moderate blocking detected": {
      "value": "🟡 WARNING: Moderate blocking detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:309"
      ]
    },
    "🟢": {
      "value": "🟢",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:123",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/test_dashboard.py:139"
      ]
    },
    "🟢 Async serialization method exists": {
      "value": "🟢 Async serialization method exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:259"
      ]
    },
    "🟢 Both paths have similar blocking behavior": {
      "value": "🟢 Both paths have similar blocking behavior",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:222"
      ]
    },
    "🟢 Event loop remains responsive during serialization": {
      "value": "🟢 Event loop remains responsive during serialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:254"
      ]
    },
    "🟢 NO SIGNIFICANT BLOCKING DETECTED": {
      "value": "🟢 NO SIGNIFICANT BLOCKING DETECTED",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:364"
      ]
    },
    "🟢 No blocking detected in test conditions": {
      "value": "🟢 No blocking detected in test conditions",
      "category": "test_literals",
      "locations": [
        "scripts/simple_serialization_test.py:260"
      ]
    },
    "🟢 No significant event loop blocking": {
      "value": "🟢 No significant event loop blocking",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:351"
      ]
    },
    "🟢 No significant event loop blocking detected": {
      "value": "🟢 No significant event loop blocking detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:226"
      ]
    },
    "🟢 Only minor blocking detected": {
      "value": "🟢 Only minor blocking detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_intensive_serialization.py:223"
      ]
    },
    "🟢 Stress test completed without significant blocking": {
      "value": "🟢 Stress test completed without significant blocking",
      "category": "test_literals",
      "locations": [
        "scripts/test_blocking_analysis.py:312"
      ]
    },
    "🟢 ThreadPoolExecutor is configured": {
      "value": "🟢 ThreadPoolExecutor is configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_serialization_direct.py:261"
      ]
    },
    "🤖 Testing model response...": {
      "value": "🤖 Testing model response...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:372"
      ]
    },
    "🧠 Created mock LLM manager": {
      "value": "🧠 Created mock LLM manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:300"
      ]
    },
    "🧪 CORS Implementation Validator": {
      "value": "🧪 CORS Implementation Validator",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:236"
      ]
    },
    "🧪 Quick Supervisor WebSocket Integration Test": {
      "value": "🧪 Quick Supervisor WebSocket Integration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_websocket_integration.py:164"
      ]
    },
    "🧪 Running Critical Test Suites...": {
      "value": "🧪 Running Critical Test Suites...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_injection_fix_complete.py:595"
      ]
    },
    "🧪 Staging Authentication Flow Test": {
      "value": "🧪 Staging Authentication Flow Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_flow.py:166"
      ]
    },
    "🧪 Supervisor Execution Flow WebSocket Test": {
      "value": "🧪 Supervisor Execution Flow WebSocket Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_supervisor_execution_flow.py:208"
      ]
    },
    "🧪 Testing backend main module import...": {
      "value": "🧪 Testing backend main module import...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:122"
      ]
    },
    "🧪 Testing basic socket binding to port 8000...": {
      "value": "🧪 Testing basic socket binding to port 8000...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:27"
      ]
    },
    "🧪 Testing uvicorn binding to port 8000...": {
      "value": "🧪 Testing uvicorn binding to port 8000...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:50"
      ]
    },
    "🧪 Testing workflow:": {
      "value": "🧪 Testing workflow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:144"
      ]
    },
    "🧪 Testing: Circuit Breaker Activation": {
      "value": "🧪 Testing: Circuit Breaker Activation",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:239"
      ]
    },
    "🧪 Testing: Data Agent Fallback": {
      "value": "🧪 Testing: Data Agent Fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:106"
      ]
    },
    "🧪 Testing: Optimization Agent Retry Logic": {
      "value": "🧪 Testing: Optimization Agent Retry Logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:164"
      ]
    },
    "🧪 Testing: Triage Agent Timeout Handling": {
      "value": "🧪 Testing: Triage Agent Timeout Handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_agent_orchestration_recovery.py:52"
      ]
    },
    "🧹 CLEANUP | Shutting down services...": {
      "value": "🧹 CLEANUP | Shutting down services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:117"
      ]
    },
    "🧹 Cleaned up WebSocket connection": {
      "value": "🧹 Cleaned up WebSocket connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:237"
      ]
    },
    "🧹 Cleaned up resources": {
      "value": "🧹 Cleaned up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_chat_standalone.py:390"
      ]
    },
    "🧹 Cleaned up test marker file": {
      "value": "🧹 Cleaned up test marker file",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_hot_reload.py:61",
        "scripts/test_docker_hot_reload.py:99",
        "scripts/test_docker_hot_reload.py:137"
      ]
    },
    "🧹 Cleaning up test services...": {
      "value": "🧹 Cleaning up test services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_orchestration.py:94"
      ]
    },
    "🧹 Cleaning up test thread...": {
      "value": "🧹 Cleaning up test thread...",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_pipeline_simple.py:133"
      ]
    },
    "🧹 Cleaning up...": {
      "value": "🧹 Cleaning up...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:463"
      ]
    }
  }
}