{
  "metadata": {
    "version": "3.0.0",
    "category": "test_literals",
    "generated_at": "2025-08-28T14:13:41.425254",
    "root_directory": "C:\\Users\\antho\\OneDrive\\Desktop\\Netra\\netra-core-generation-1",
    "total_literals": 8302
  },
  "literals": {
    "\u001b[0m": {
      "value": "\u001b[0m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71",
        "scripts/test_discovery_report.py:126",
        "scripts/test_discovery_report.py:127",
        "scripts/test_discovery_report.py:128"
      ]
    },
    "\u001b[0m -": {
      "value": "\u001b[0m -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:93"
      ]
    },
    "\u001b[91m": {
      "value": "\u001b[91m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71",
        "scripts/test_discovery_report.py:93",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:126",
        "scripts/test_discovery_report.py:127",
        "scripts/test_discovery_report.py:128"
      ]
    },
    "\u001b[91mReal E2E Tests:": {
      "value": "\u001b[91mReal E2E Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:118"
      ]
    },
    "! This suggests configuration is not properly set for": {
      "value": "! This suggests configuration is not properly set for",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:380"
      ]
    },
    "! URL:": {
      "value": "! URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:199"
      ]
    },
    "!!! DANGEROUS MODE ENABLED !!!": {
      "value": "!!! DANGEROUS MODE ENABLED !!!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:949"
      ]
    },
    "!= URL port": {
      "value": "!= URL port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:290"
      ]
    },
    "!@#$%^&*()_+-=[]{}|;:,.<>?": {
      "value": "!@#$%^&*()_+-=[]{}|;:,.<>?",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:86"
      ]
    },
    "\"": {
      "value": "\"",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:379",
        "scripts/align_test_imports.py:380",
        "scripts/fix_authentication_test_tokens.py:74",
        "scripts/fix_authentication_test_tokens.py:74",
        "scripts/fix_authentication_test_tokens.py:79",
        "scripts/fix_authentication_test_tokens.py:79",
        "scripts/fix_authentication_test_tokens.py:84",
        "scripts/fix_authentication_test_tokens.py:84",
        "scripts/fix_authentication_test_tokens.py:88",
        "scripts/fix_authentication_test_tokens.py:88"
      ]
    },
    "\" https://api.staging.netrasystems.ai/health": {
      "value": "\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:316"
      ]
    },
    "\"\"\"": {
      "value": "\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:72",
        "scripts/add_pytest_markers.py:73",
        "scripts/auto_fix_test_sizes.py:156",
        "scripts/auto_fix_test_sizes.py:381",
        "scripts/auto_fix_test_sizes.py:384",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/auto_fix_test_violations.py:517",
        "scripts/auto_fix_test_violations.py:520",
        "scripts/auto_fix_test_violations.py:546"
      ]
    },
    "\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nimport sys\nfrom pathlib import Path\n\n# Add parent directory to path\n\nfrom": {
      "value": "\"\"\"\n\nimport pytest\nfrom unittest.mock import Mock, patch, MagicMock\nimport sys\nfrom pathlib import Path\n\n# Add parent directory to path\n\nfrom",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:103"
      ]
    },
    "\"\"\"\n    \n    @pytest.fixture(autouse=True)\n    def setup(self):\n        \"\"\"Set up test fixtures\"\"\"\n        self.mock_data = {\"test\": \"data\"}\n        yield\n        # Cleanup if needed": {
      "value": "\"\"\"\n    \n    @pytest.fixture(autouse=True)\n    def setup(self):\n        \"\"\"Set up test fixtures\"\"\"\n        self.mock_data = {\"test\": \"data\"}\n        yield\n        # Cleanup if needed",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:122"
      ]
    },
    "\"\"\"\n        # Critical function - test error scenarios\n        with pytest.raises(Exception):\n            pass  # TODO: Add actual error test": {
      "value": "\"\"\"\n        # Critical function - test error scenarios\n        with pytest.raises(Exception):\n            pass  # TODO: Add actual error test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:176"
      ]
    },
    "\"\"\"\n        # High complexity function - test boundary conditions\n        pass": {
      "value": "\"\"\"\n        # High complexity function - test boundary conditions\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:166"
      ]
    },
    "\"\"\"\n        # TODO: Implement based on function signature\n        # Function args:": {
      "value": "\"\"\"\n        # TODO: Implement based on function signature\n        # Function args:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:153"
      ]
    },
    "\"\"\"\nTests for": {
      "value": "\"\"\"\nTests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:100"
      ]
    },
    "\"\"\".*for testing.*\"\"\"": {
      "value": "\"\"\".*for testing.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:50"
      ]
    },
    "\"\"\".*mock implementation.*\"\"\"": {
      "value": "\"\"\".*mock implementation.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:48"
      ]
    },
    "\"\"\".*test implementation.*\"\"\"": {
      "value": "\"\"\".*test implementation.*\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:49"
      ]
    },
    "\"\"\"Split from": {
      "value": "\"\"\"Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:575"
      ]
    },
    "\"\"\"Split test module - imports all parts.\"\"\"": {
      "value": "\"\"\"Split test module - imports all parts.\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:196"
      ]
    },
    "\"\"\"Test class for orphaned methods\"\"\"": {
      "value": "\"\"\"Test class for orphaned methods\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:95"
      ]
    },
    "\"\"\"Test module.\"\"\"": {
      "value": "\"\"\"Test module.\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:67"
      ]
    },
    "\",": {
      "value": "\",",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:297"
      ]
    },
    "\",\"": {
      "value": "\",\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:298",
        "scripts/remove_test_stubs.py:298",
        "scripts/remove_test_stubs.py:299"
      ]
    },
    "\"Authorization\": \"Bearer": {
      "value": "\"Authorization\": \"Bearer",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:93",
        "scripts/fix_authentication_test_tokens.py:97"
      ]
    },
    "\"Authorization\": \"Bearer service-account-token\"": {
      "value": "\"Authorization\": \"Bearer service-account-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:92"
      ]
    },
    "\"Authorization\": \"Bearer valid-token\"": {
      "value": "\"Authorization\": \"Bearer valid-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:96"
      ]
    },
    "\"ENVIRONMENT\": \"staging\"": {
      "value": "\"ENVIRONMENT\": \"staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:68"
      ]
    },
    "\"JWT_ALGORITHM\": \"HS256\"": {
      "value": "\"JWT_ALGORITHM\": \"HS256\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:69"
      ]
    },
    "\"auth or security\"": {
      "value": "\"auth or security\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:694"
      ]
    },
    "\"database or db\"": {
      "value": "\"database or db\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:691"
      ]
    },
    "\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9\\.frontend-token-payload\\.signature\"": {
      "value": "\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9\\.frontend-token-payload\\.signature\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:73"
      ]
    },
    "\"oauth-hmac-secret-staging\"": {
      "value": "\"oauth-hmac-secret-staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:70"
      ]
    },
    "\"retry-token\"": {
      "value": "\"retry-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:87"
      ]
    },
    "\"service-account-token\"": {
      "value": "\"service-account-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:78"
      ]
    },
    "\"test-token\"": {
      "value": "\"test-token\"",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:83"
      ]
    },
    "\"websocket or ws\"": {
      "value": "\"websocket or ws\"",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:692"
      ]
    },
    "#": {
      "value": "#",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:69",
        "scripts/auto_fix_test_sizes.py:491",
        "scripts/auto_fix_test_sizes.py:496",
        "scripts/auto_fix_test_violations.py:260",
        "scripts/compliance/project_test_validator.py:226",
        "scripts/compliance/real_test_requirements_enforcer.py:308",
        "scripts/compliance/real_test_validator.py:193",
        "scripts/compliance/test_fixer.py:193",
        "scripts/compliance/test_fixer.py:278",
        "scripts/compliance/test_size_validator.py:305"
      ]
    },
    "# ACT Secrets for local testing\nGITHUB_TOKEN=mock_github_token\nGCP_CREDENTIALS={\"type\":\"service_account\"}\nGCP_PROJECT_ID=mock-project\nDOCKER_REGISTRY=localhost:5000\nSTAGING_SSH_KEY=mock_ssh_key\nSTAGING_HOST=localhost\nSTAGING_USER=testuser\nSLACK_WEBHOOK_URL=https://mock.webhook.url": {
      "value": "# ACT Secrets for local testing\nGITHUB_TOKEN=mock_github_token\nGCP_CREDENTIALS={\"type\":\"service_account\"}\nGCP_PROJECT_ID=mock-project\nDOCKER_REGISTRY=localhost:5000\nSTAGING_SSH_KEY=mock_ssh_key\nSTAGING_HOST=localhost\nSTAGING_USER=testuser\nSLACK_WEBHOOK_URL=https://mock.webhook.url",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:80"
      ]
    },
    "# ACT environment detection - ACT sets this automatically": {
      "value": "# ACT environment detection - ACT sets this automatically",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:257"
      ]
    },
    "# ACT will override": {
      "value": "# ACT will override",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:237"
      ]
    },
    "# Add project root to path": {
      "value": "# Add project root to path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:176",
        "scripts/fix_test_import_order.py:73"
      ]
    },
    "# Agent models - creating mocks for tests\nfrom unittest.mock import Mock\nAgent = Mock\nAgentRun = Mock": {
      "value": "# Agent models - creating mocks for tests\nfrom unittest.mock import Mock\nAgent = Mock\nAgentRun = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:133"
      ]
    },
    "# AgentRun model - creating mock for tests\nfrom unittest.mock import Mock\nAgentRun = Mock": {
      "value": "# AgentRun model - creating mock for tests\nfrom unittest.mock import Mock\nAgentRun = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:128"
      ]
    },
    "# ClickHouseManager - creating mock for tests\nfrom unittest.mock import Mock\nClickHouseManager = Mock": {
      "value": "# ClickHouseManager - creating mock for tests\nfrom unittest.mock import Mock\nClickHouseManager = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:79"
      ]
    },
    "# Complexity:": {
      "value": "# Complexity:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:156"
      ]
    },
    "# ConversionEvent model - creating mock for tests\nfrom unittest.mock import Mock\nConversionEvent = Mock": {
      "value": "# ConversionEvent model - creating mock for tests\nfrom unittest.mock import Mock\nConversionEvent = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:86"
      ]
    },
    "# Critical Path Tests\nclass TestCriticalPaths:\n    \"\"\"Tests for critical execution paths\"\"\"": {
      "value": "# Critical Path Tests\nclass TestCriticalPaths:\n    \"\"\"Tests for critical execution paths\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:227"
      ]
    },
    "# CustomCORSMiddleware removed": {
      "value": "# CustomCORSMiddleware removed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:181"
      ]
    },
    "# Database test fixtures - using mocks\nfrom unittest.mock import Mock, AsyncMock\nDatabaseErrorSimulator = Mock\nMockConnectionPool = Mock\nasync_session_mock = AsyncMock\nconnection_pool = Mock\ntransaction_session_mock = AsyncMock": {
      "value": "# Database test fixtures - using mocks\nfrom unittest.mock import Mock, AsyncMock\nDatabaseErrorSimulator = Mock\nMockConnectionPool = Mock\nasync_session_mock = AsyncMock\nconnection_pool = Mock\ntransaction_session_mock = AsyncMock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:98"
      ]
    },
    "# FIXME:": {
      "value": "# FIXME:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:47",
        "scripts/fix_all_test_issues.py:60"
      ]
    },
    "# Final 100-Iteration Test Remediation Report\n\n## Executive Summary\n\nThe Netra Apex test remediation initiative (iterations 81-100) successfully transformed \na critically flawed test architecture into a production-ready, maintainable system.\n\n### Critical Problem Solved\n**Before**: 4,133+ test files with 61,872+ functions, 14,484 SSOT violations, 0% compliance\n**After**: ~10 comprehensive files with ~500 focused tests, <100 violations, 95%+ compliance\n\nThis represents a **99.8% file reduction** while maintaining 100% critical functionality coverage.\n\n## Iteration Summary\n\n### Iterations 81-85: Critical Consolidation\n- **81**: Auth Service - 89 files → 1 comprehensive suite\n- **82**: Backend Core - 60 files → 1 comprehensive suite  \n- **83**: Agent System - 87 files → 1 comprehensive suite\n- **84-85**: WebSocket & Database consolidation (documented)\n\n### Iterations 86-90: Coverage Verification\n- **86**: Core path coverage audit - 100% maintained\n- **87**: Agent functionality coverage - Complete\n- **88**: API endpoint coverage - Verified  \n- **89**: Error handling coverage - Comprehensive\n- **90**: Environment-specific testing - Compliant\n\n### Iterations 91-95: Documentation Creation\n- **91**: Test architecture documentation - Complete\n- **92**: Test execution guidelines - Complete\n- **93**: Test writing standards - Complete\n- **94**: Test maintenance procedures - Complete\n- **95**: Test performance guidelines - Complete\n\n### Iterations 96-100: Final Reporting\n- **96**: Test health metrics system - Established\n- **97**: SSOT compliance verification - 95%+ achieved\n- **98**: Performance benchmarking - Targets met\n- **99**: Integration testing - Verified\n- **100**: Final comprehensive report - Complete\n\n## Business Impact\n\n### Immediate Benefits\n- **Developer Productivity**: 90%+ faster test execution\n- **Maintenance Burden**: 99%+ reduction in test files to maintain\n- **System Stability**: SSOT violations eliminated\n- **Code Quality**: Clear, focused test architecture\n\n### Strategic Value\n- **Deployment Readiness**: System now deployable (was blocked)\n- **Technical Debt**: Severe technical debt resolved\n- **Team Velocity**: Faster development cycles\n- **Quality Assurance**: Comprehensive coverage without duplication\n\n## Key Achievements\n\n### 1. SSOT Compliance Restored\n- Eliminated 14,484+ violations\n- Single source of truth for all test concepts\n- Clear service boundaries established\n\n### 2. Massive Efficiency Gains\n- 99.8% reduction in test files\n- 99.2% reduction in test functions\n- 90%+ improvement in execution speed\n- 100% elimination of stub tests\n\n### 3. Comprehensive Documentation\n- Complete test architecture documentation\n- Clear execution and maintenance guidelines  \n- Performance optimization strategies\n- Ongoing health monitoring procedures\n\n### 4. Production Readiness\n- System moved from \"DO NOT DEPLOY\" to production-ready\n- Critical path coverage maintained\n- Environment-aware testing established\n- Automated compliance monitoring\n\n## Recommendations\n\n### Immediate Actions\n1. **Deploy Updated Test Suite**: Begin using consolidated test files\n2. **Archive Legacy Tests**: Complete archival of old test files\n3. **Update CI/CD**: Configure pipelines for new test structure\n4. **Team Training**: Brief team on new test architecture\n\n### Ongoing Maintenance\n1. **Monitor SSOT Compliance**: Prevent regression to duplicate state\n2. **Performance Tracking**: Maintain fast execution times\n3. **Regular Audits**: Monthly architecture compliance checks\n4. **Documentation Updates**: Keep test docs current with system changes\n\n## Conclusion\n\nThis 100-iteration remediation successfully transformed the Netra Apex test suite from \na critically flawed, unmaintainable system into a production-ready architecture that \nsupports rapid development while maintaining comprehensive coverage.\n\n**The system is now ready for production deployment.**\n\n---\n**Report Generated**:": {
      "value": "# Final 100-Iteration Test Remediation Report\n\n## Executive Summary\n\nThe Netra Apex test remediation initiative (iterations 81-100) successfully transformed \na critically flawed test architecture into a production-ready, maintainable system.\n\n### Critical Problem Solved\n**Before**: 4,133+ test files with 61,872+ functions, 14,484 SSOT violations, 0% compliance\n**After**: ~10 comprehensive files with ~500 focused tests, <100 violations, 95%+ compliance\n\nThis represents a **99.8% file reduction** while maintaining 100% critical functionality coverage.\n\n## Iteration Summary\n\n### Iterations 81-85: Critical Consolidation\n- **81**: Auth Service - 89 files → 1 comprehensive suite\n- **82**: Backend Core - 60 files → 1 comprehensive suite  \n- **83**: Agent System - 87 files → 1 comprehensive suite\n- **84-85**: WebSocket & Database consolidation (documented)\n\n### Iterations 86-90: Coverage Verification\n- **86**: Core path coverage audit - 100% maintained\n- **87**: Agent functionality coverage - Complete\n- **88**: API endpoint coverage - Verified  \n- **89**: Error handling coverage - Comprehensive\n- **90**: Environment-specific testing - Compliant\n\n### Iterations 91-95: Documentation Creation\n- **91**: Test architecture documentation - Complete\n- **92**: Test execution guidelines - Complete\n- **93**: Test writing standards - Complete\n- **94**: Test maintenance procedures - Complete\n- **95**: Test performance guidelines - Complete\n\n### Iterations 96-100: Final Reporting\n- **96**: Test health metrics system - Established\n- **97**: SSOT compliance verification - 95%+ achieved\n- **98**: Performance benchmarking - Targets met\n- **99**: Integration testing - Verified\n- **100**: Final comprehensive report - Complete\n\n## Business Impact\n\n### Immediate Benefits\n- **Developer Productivity**: 90%+ faster test execution\n- **Maintenance Burden**: 99%+ reduction in test files to maintain\n- **System Stability**: SSOT violations eliminated\n- **Code Quality**: Clear, focused test architecture\n\n### Strategic Value\n- **Deployment Readiness**: System now deployable (was blocked)\n- **Technical Debt**: Severe technical debt resolved\n- **Team Velocity**: Faster development cycles\n- **Quality Assurance**: Comprehensive coverage without duplication\n\n## Key Achievements\n\n### 1. SSOT Compliance Restored\n- Eliminated 14,484+ violations\n- Single source of truth for all test concepts\n- Clear service boundaries established\n\n### 2. Massive Efficiency Gains\n- 99.8% reduction in test files\n- 99.2% reduction in test functions\n- 90%+ improvement in execution speed\n- 100% elimination of stub tests\n\n### 3. Comprehensive Documentation\n- Complete test architecture documentation\n- Clear execution and maintenance guidelines  \n- Performance optimization strategies\n- Ongoing health monitoring procedures\n\n### 4. Production Readiness\n- System moved from \"DO NOT DEPLOY\" to production-ready\n- Critical path coverage maintained\n- Environment-aware testing established\n- Automated compliance monitoring\n\n## Recommendations\n\n### Immediate Actions\n1. **Deploy Updated Test Suite**: Begin using consolidated test files\n2. **Archive Legacy Tests**: Complete archival of old test files\n3. **Update CI/CD**: Configure pipelines for new test structure\n4. **Team Training**: Brief team on new test architecture\n\n### Ongoing Maintenance\n1. **Monitor SSOT Compliance**: Prevent regression to duplicate state\n2. **Performance Tracking**: Maintain fast execution times\n3. **Regular Audits**: Monthly architecture compliance checks\n4. **Documentation Updates**: Keep test docs current with system changes\n\n## Conclusion\n\nThis 100-iteration remediation successfully transformed the Netra Apex test suite from \na critically flawed, unmaintainable system into a production-ready architecture that \nsupports rapid development while maintaining comprehensive coverage.\n\n**The system is now ready for production deployment.**\n\n---\n**Report Generated**:",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:380"
      ]
    },
    "# Generated from": {
      "value": "# Generated from",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:603"
      ]
    },
    "# Has return:": {
      "value": "# Has return:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:155"
      ]
    },
    "# Incomplete import statement": {
      "value": "# Incomplete import statement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:114"
      ]
    },
    "# Justified:": {
      "value": "# Justified:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "# Legacy": {
      "value": "# Legacy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:181"
      ]
    },
    "# Message model - creating mock for tests\nfrom unittest.mock import Mock\nMessage = Mock": {
      "value": "# Message model - creating mock for tests\nfrom unittest.mock import Mock\nMessage = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:115"
      ]
    },
    "# Mock implementation": {
      "value": "# Mock implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:51"
      ]
    },
    "# Mock justified": {
      "value": "# Mock justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "# Project Real Test Requirements Violations": {
      "value": "# Project Real Test Requirements Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:322"
      ]
    },
    "# REDUNDANT TEST - Marked for removal by Autonomous Test Reviewer\\n# Reason: Duplicate coverage or obsolete functionality\\n# Review and remove if confirmed redundant\\n\\n": {
      "value": "# REDUNDANT TEST - Marked for removal by Autonomous Test Reviewer\\n# Reason: Duplicate coverage or obsolete functionality\\n# Review and remove if confirmed redundant\\n\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:68"
      ]
    },
    "# Real Service Test Report": {
      "value": "# Real Service Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:123"
      ]
    },
    "# Real Test Requirements Fix Plan": {
      "value": "# Real Test Requirements Fix Plan",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:191"
      ]
    },
    "# Real Test Requirements Violations Report": {
      "value": "# Real Test Requirements Violations Report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:484",
        "scripts/compliance/real_test_validator.py:278"
      ]
    },
    "# Real component behavior: \\1 handles \\2": {
      "value": "# Real component behavior: \\1 handles \\2",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:326"
      ]
    },
    "# Real component setup: \\1 configured for \\2": {
      "value": "# Real component setup: \\1 configured for \\2",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:325"
      ]
    },
    "# Run with coverage\n  python unified_test_runner.py --service backend --coverage --min-coverage 80\n  \n  # Run specific test file\n  python unified_test_runner.py --service backend netra_backend/tests/test_main.py\n  \n  # Run tests matching keyword\n  python unified_test_runner.py --service backend -k \"test_login\"\n  \n  # Quick smoke test\n  python unified_test_runner.py --service backend --category smoke --fail-fast\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service backend --coverage --html-output --json-output --parallel auto": {
      "value": "# Run with coverage\n  python unified_test_runner.py --service backend --coverage --min-coverage 80\n  \n  # Run specific test file\n  python unified_test_runner.py --service backend netra_backend/tests/test_main.py\n  \n  # Run tests matching keyword\n  python unified_test_runner.py --service backend -k \"test_login\"\n  \n  # Quick smoke test\n  python unified_test_runner.py --service backend --category smoke --fail-fast\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service backend --coverage --html-output --json-output --parallel auto",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:459"
      ]
    },
    "# SSOT Compliance Verification Report\n\n## Pre-Remediation State\n- **Total SSOT Violations**: 14,484\n- **Duplicate Type Definitions**: 93\n- **Multiple Database Managers**: 7+\n- **Multiple Auth Implementations**: 5+\n- **Overall Compliance**: 0% (System failure state)\n\n## Post-Remediation State  \n- **Total SSOT Violations**: <100 (estimated)\n- **Duplicate Type Definitions**: 0 (eliminated)\n- **Multiple Database Managers**: 1 per service (compliant)\n- **Multiple Auth Implementations**: 1 (consolidated)\n- **Overall Compliance**: 95%+ (Production ready)\n\n## Key Achievements\n1. **Test Consolidation**: Eliminated massive test duplication\n2. **Clear Boundaries**: Each service has single test suite\n3. **Functional Organization**: Tests grouped by purpose, not arbitrary splits\n4. **Zero Stubs**: No placeholder or empty tests remain\n\n## Remaining Work\n- Complete consolidation of remaining test files\n- Finalize cross-service test organization\n- Establish automated SSOT monitoring\n- Document architectural decisions\n\n## Compliance Monitoring\n```bash\n# Check for test duplication\npython scripts/check_test_duplication.py\n\n# Verify SSOT compliance  \npython scripts/check_architecture_compliance.py\n\n# Monitor test health\npython scripts/generate_test_health_report.py\n```": {
      "value": "# SSOT Compliance Verification Report\n\n## Pre-Remediation State\n- **Total SSOT Violations**: 14,484\n- **Duplicate Type Definitions**: 93\n- **Multiple Database Managers**: 7+\n- **Multiple Auth Implementations**: 5+\n- **Overall Compliance**: 0% (System failure state)\n\n## Post-Remediation State  \n- **Total SSOT Violations**: <100 (estimated)\n- **Duplicate Type Definitions**: 0 (eliminated)\n- **Multiple Database Managers**: 1 per service (compliant)\n- **Multiple Auth Implementations**: 1 (consolidated)\n- **Overall Compliance**: 95%+ (Production ready)\n\n## Key Achievements\n1. **Test Consolidation**: Eliminated massive test duplication\n2. **Clear Boundaries**: Each service has single test suite\n3. **Functional Organization**: Tests grouped by purpose, not arbitrary splits\n4. **Zero Stubs**: No placeholder or empty tests remain\n\n## Remaining Work\n- Complete consolidation of remaining test files\n- Finalize cross-service test organization\n- Establish automated SSOT monitoring\n- Document architectural decisions\n\n## Compliance Monitoring\n```bash\n# Check for test duplication\npython scripts/check_test_duplication.py\n\n# Verify SSOT compliance  \npython scripts/check_architecture_compliance.py\n\n# Monitor test health\npython scripts/generate_test_health_report.py\n```",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:336"
      ]
    },
    "# Setup test path\\n(?=\\n)": {
      "value": "# Setup test path\\n(?=\\n)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:38"
      ]
    },
    "# TODO: Implement split test logic": {
      "value": "# TODO: Implement split test logic",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:578"
      ]
    },
    "# Team model - creating mock for tests\nfrom unittest.mock import Mock\nTeam = Mock": {
      "value": "# Team model - creating mock for tests\nfrom unittest.mock import Mock\nTeam = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:91"
      ]
    },
    "# Test Architecture Documentation\n\n## Overview\nThe Netra Apex test suite has been consolidated from 4,133+ files with 61,872+ functions \ninto a streamlined, comprehensive architecture with zero duplication.\n\n## Consolidated Test Structure\n\n### Service-Specific Tests\n- `auth_service/tests/test_auth_comprehensive.py` - Complete auth service testing\n- `netra_backend/tests/core/test_core_comprehensive.py` - Core backend functionality  \n- `netra_backend/tests/agents/test_agents_comprehensive.py` - Agent system testing\n\n### Test Categories\n1. **Unit Tests**: Individual component testing\n2. **Integration Tests**: Service interaction testing  \n3. **E2E Tests**: Complete workflow testing\n4. **Performance Tests**: Load and performance validation\n\n### Key Principles\n- **SSOT Compliance**: Each concept tested once and only once\n- **Environment Awareness**: Tests marked for dev/staging/prod\n- **Real Over Mock**: Prefer real services over mocks where possible\n- **Fast Feedback**: Optimized for developer productivity\n\n## Test Execution\n- Default: `python unified_test_runner.py --category integration --no-coverage --fast-fail`\n- Full Suite: `python unified_test_runner.py --categories smoke unit integration api`\n- Environment-Specific: `python unified_test_runner.py --env staging`": {
      "value": "# Test Architecture Documentation\n\n## Overview\nThe Netra Apex test suite has been consolidated from 4,133+ files with 61,872+ functions \ninto a streamlined, comprehensive architecture with zero duplication.\n\n## Consolidated Test Structure\n\n### Service-Specific Tests\n- `auth_service/tests/test_auth_comprehensive.py` - Complete auth service testing\n- `netra_backend/tests/core/test_core_comprehensive.py` - Core backend functionality  \n- `netra_backend/tests/agents/test_agents_comprehensive.py` - Agent system testing\n\n### Test Categories\n1. **Unit Tests**: Individual component testing\n2. **Integration Tests**: Service interaction testing  \n3. **E2E Tests**: Complete workflow testing\n4. **Performance Tests**: Load and performance validation\n\n### Key Principles\n- **SSOT Compliance**: Each concept tested once and only once\n- **Environment Awareness**: Tests marked for dev/staging/prod\n- **Real Over Mock**: Prefer real services over mocks where possible\n- **Fast Feedback**: Optimized for developer productivity\n\n## Test Execution\n- Default: `python unified_test_runner.py --category integration --no-coverage --fast-fail`\n- Full Suite: `python unified_test_runner.py --categories smoke unit integration api`\n- Environment-Specific: `python unified_test_runner.py --env staging`",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:47"
      ]
    },
    "# Test Execution Guide\n\n## Quick Start\n```bash\n# Fast feedback loop (recommended for development)\npython unified_test_runner.py --category integration --no-coverage --fast-fail\n\n# Full test suite\npython unified_test_runner.py --categories smoke unit integration api --real-llm\n\n# Environment-specific testing\npython unified_test_runner.py --env staging\npython unified_test_runner.py --env prod --allow-prod\n```\n\n## Test Categories\n- **smoke**: Critical path verification\n- **unit**: Individual component tests\n- **integration**: Service interaction tests\n- **api**: HTTP endpoint tests\n- **agent**: AI agent functionality tests\n\n## Environment Markers\n- `@env(\"staging\")`: Staging environment only\n- `@env(\"prod\")`: Production environment (requires --allow-prod)\n- `@dev_and_staging`: Development and staging environments\n\n## Performance Options\n- `--fast-fail`: Stop on first failure (faster feedback)\n- `--no-coverage`: Skip coverage calculation (faster execution)\n- `--parallel`: Run tests in parallel (when supported)": {
      "value": "# Test Execution Guide\n\n## Quick Start\n```bash\n# Fast feedback loop (recommended for development)\npython unified_test_runner.py --category integration --no-coverage --fast-fail\n\n# Full test suite\npython unified_test_runner.py --categories smoke unit integration api --real-llm\n\n# Environment-specific testing\npython unified_test_runner.py --env staging\npython unified_test_runner.py --env prod --allow-prod\n```\n\n## Test Categories\n- **smoke**: Critical path verification\n- **unit**: Individual component tests\n- **integration**: Service interaction tests\n- **api**: HTTP endpoint tests\n- **agent**: AI agent functionality tests\n\n## Environment Markers\n- `@env(\"staging\")`: Staging environment only\n- `@env(\"prod\")`: Production environment (requires --allow-prod)\n- `@dev_and_staging`: Development and staging environments\n\n## Performance Options\n- `--fast-fail`: Stop on first failure (faster feedback)\n- `--no-coverage`: Skip coverage calculation (faster execution)\n- `--parallel`: Run tests in parallel (when supported)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:81"
      ]
    },
    "# Test Health Metrics Dashboard\n\n## Current Status (Post-100 Iterations)\n\n### Consolidation Results\n- **Files Reduced**: 4,133+ → ~10 comprehensive files (99.8% reduction)\n- **Functions Optimized**: 61,872+ → ~500 focused tests (99.2% reduction)  \n- **Stub Tests Eliminated**: 1,765+ stubs completely removed\n- **SSOT Compliance**: 0% → 95%+ (Critical improvement)\n- **Execution Time**: Estimated 90%+ faster\n\n### Service-Specific Health\n| Service | Before | After | Improvement |\n|---------|--------|-------|-------------|\n| Auth Service | 89 files, 463 functions | 1 file, ~50 functions | 98.9% reduction |\n| Backend Core | 60 files, 484 functions | 1 file, ~60 functions | 98.3% reduction |\n| Agent System | 87 files, ~400 functions | 1 file, ~40 functions | 98.8% reduction |\n\n### Quality Metrics\n- **Coverage**: Maintained >90% critical path coverage\n- **Execution Speed**: <5 minutes for full suite (target achieved)\n- **Maintainability**: Single files vs hundreds per domain\n- **Clarity**: Organized by functional area, not arbitrary splits\n\n## Ongoing Monitoring\n\n### Daily Metrics\n- Test execution time\n- Pass/fail rates\n- Coverage percentages\n\n### Weekly Reviews\n- New test additions (prevent duplication)\n- Performance trend analysis\n- SSOT compliance monitoring\n\n### Monthly Audits\n- Comprehensive architecture review\n- Test effectiveness analysis\n- Documentation updates": {
      "value": "# Test Health Metrics Dashboard\n\n## Current Status (Post-100 Iterations)\n\n### Consolidation Results\n- **Files Reduced**: 4,133+ → ~10 comprehensive files (99.8% reduction)\n- **Functions Optimized**: 61,872+ → ~500 focused tests (99.2% reduction)  \n- **Stub Tests Eliminated**: 1,765+ stubs completely removed\n- **SSOT Compliance**: 0% → 95%+ (Critical improvement)\n- **Execution Time**: Estimated 90%+ faster\n\n### Service-Specific Health\n| Service | Before | After | Improvement |\n|---------|--------|-------|-------------|\n| Auth Service | 89 files, 463 functions | 1 file, ~50 functions | 98.9% reduction |\n| Backend Core | 60 files, 484 functions | 1 file, ~60 functions | 98.3% reduction |\n| Agent System | 87 files, ~400 functions | 1 file, ~40 functions | 98.8% reduction |\n\n### Quality Metrics\n- **Coverage**: Maintained >90% critical path coverage\n- **Execution Speed**: <5 minutes for full suite (target achieved)\n- **Maintainability**: Single files vs hundreds per domain\n- **Clarity**: Organized by functional area, not arbitrary splits\n\n## Ongoing Monitoring\n\n### Daily Metrics\n- Test execution time\n- Pass/fail rates\n- Coverage percentages\n\n### Weekly Reviews\n- New test additions (prevent duplication)\n- Performance trend analysis\n- SSOT compliance monitoring\n\n### Monthly Audits\n- Comprehensive architecture review\n- Test effectiveness analysis\n- Documentation updates",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:291"
      ]
    },
    "# Test Maintenance Procedures\n\n## Regular Maintenance Tasks\n\n### Weekly\n- Run full test suite across all environments\n- Review test execution times for performance regressions\n- Check test coverage reports for gaps\n\n### Monthly  \n- Review and update environment-specific tests\n- Audit test categorization accuracy\n- Update test documentation for new features\n\n### Quarterly\n- Comprehensive test architecture review\n- Performance optimization review\n- Test infrastructure upgrades\n\n## Health Monitoring\n\n### Key Metrics to Track\n- Test execution time trends\n- Test failure rates by category\n- Coverage percentage by service\n- SSOT compliance score\n\n### Warning Signs\n- 🔴 Duplicate test functionality appearing\n- 🔴 Test execution time increasing significantly  \n- 🔴 Coverage decreasing without justification\n- 🔴 Stub tests being added\n\n## Remediation Procedures\n\n### When Adding New Tests\n1. Check if functionality already tested\n2. Add to appropriate comprehensive test file\n3. Use proper categorization and environment markers\n4. Justify any new mocks with comments\n\n### When Tests Fail\n1. Identify if it's a test issue or system issue\n2. Fix root cause, not just the test\n3. Update test if requirements changed\n4. Document learning in SPEC/learnings/\n\n### When Refactoring\n1. Ensure tests still cover all scenarios\n2. Update test descriptions if behavior changed\n3. Maintain test organization and clarity\n4. Run full test suite to verify": {
      "value": "# Test Maintenance Procedures\n\n## Regular Maintenance Tasks\n\n### Weekly\n- Run full test suite across all environments\n- Review test execution times for performance regressions\n- Check test coverage reports for gaps\n\n### Monthly  \n- Review and update environment-specific tests\n- Audit test categorization accuracy\n- Update test documentation for new features\n\n### Quarterly\n- Comprehensive test architecture review\n- Performance optimization review\n- Test infrastructure upgrades\n\n## Health Monitoring\n\n### Key Metrics to Track\n- Test execution time trends\n- Test failure rates by category\n- Coverage percentage by service\n- SSOT compliance score\n\n### Warning Signs\n- 🔴 Duplicate test functionality appearing\n- 🔴 Test execution time increasing significantly  \n- 🔴 Coverage decreasing without justification\n- 🔴 Stub tests being added\n\n## Remediation Procedures\n\n### When Adding New Tests\n1. Check if functionality already tested\n2. Add to appropriate comprehensive test file\n3. Use proper categorization and environment markers\n4. Justify any new mocks with comments\n\n### When Tests Fail\n1. Identify if it's a test issue or system issue\n2. Fix root cause, not just the test\n3. Update test if requirements changed\n4. Document learning in SPEC/learnings/\n\n### When Refactoring\n1. Ensure tests still cover all scenarios\n2. Update test descriptions if behavior changed\n3. Maintain test organization and clarity\n4. Run full test suite to verify",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:167"
      ]
    },
    "# Test Organization Audit Report\n\n## Executive Summary\n\nThe Netra codebase test organization analysis reveals opportunities for improvement in test structure and maintenance.\n\n## Current State Analysis\n\n### 1. Test File Distribution\n- **": {
      "value": "# Test Organization Audit Report\n\n## Executive Summary\n\nThe Netra codebase test organization analysis reveals opportunities for improvement in test structure and maintenance.\n\n## Current State Analysis\n\n### 1. Test File Distribution\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:149"
      ]
    },
    "# Test Overlap Analysis Report": {
      "value": "# Test Overlap Analysis Report",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:518"
      ]
    },
    "# Test Performance Guidelines\n\n## Performance Targets\n- **Unit tests**: <1ms per test average\n- **Integration tests**: <100ms per test average  \n- **E2E tests**: <5s per test average\n- **Full suite**: <5 minutes total\n\n## Optimization Strategies\n\n### Test Structure\n- Group related tests in classes\n- Use appropriate fixtures for setup/teardown\n- Minimize test file count (comprehensive files)\n- Cache expensive setup operations\n\n### Mock Strategy\n- Mock external services (APIs, databases) in unit tests\n- Use real services in integration tests where possible\n- Cache mock responses for repeated calls\n- Avoid excessive mock verification\n\n### Environment Optimization\n- Use test-specific configurations\n- Minimize database transactions\n- Use in-memory databases for unit tests\n- Parallel execution where safe\n\n## Monitoring Performance\n\n### Metrics to Track\n```bash\n# Test execution time breakdown\npython unified_test_runner.py --profile\n\n# Slowest tests identification\npython unified_test_runner.py --slowest 10\n\n# Parallel execution analysis\npython unified_test_runner.py --parallel --profile\n```\n\n### Performance Regression Detection\n- Baseline test execution times\n- Alert on >20% execution time increase\n- Weekly performance trend analysis\n- Automated performance regression prevention\n\n## Common Performance Issues\n- 🔴 **Database setup/teardown**: Use transactions, not full recreate\n- 🔴 **Network calls**: Mock external services in unit tests\n- 🔴 **File I/O**: Use in-memory alternatives where possible\n- 🔴 **Excessive fixtures**: Only use fixtures that provide value\n- 🔴 **Unoptimized queries**: Profile database interactions": {
      "value": "# Test Performance Guidelines\n\n## Performance Targets\n- **Unit tests**: <1ms per test average\n- **Integration tests**: <100ms per test average  \n- **E2E tests**: <5s per test average\n- **Full suite**: <5 minutes total\n\n## Optimization Strategies\n\n### Test Structure\n- Group related tests in classes\n- Use appropriate fixtures for setup/teardown\n- Minimize test file count (comprehensive files)\n- Cache expensive setup operations\n\n### Mock Strategy\n- Mock external services (APIs, databases) in unit tests\n- Use real services in integration tests where possible\n- Cache mock responses for repeated calls\n- Avoid excessive mock verification\n\n### Environment Optimization\n- Use test-specific configurations\n- Minimize database transactions\n- Use in-memory databases for unit tests\n- Parallel execution where safe\n\n## Monitoring Performance\n\n### Metrics to Track\n```bash\n# Test execution time breakdown\npython unified_test_runner.py --profile\n\n# Slowest tests identification\npython unified_test_runner.py --slowest 10\n\n# Parallel execution analysis\npython unified_test_runner.py --parallel --profile\n```\n\n### Performance Regression Detection\n- Baseline test execution times\n- Alert on >20% execution time increase\n- Weekly performance trend analysis\n- Automated performance regression prevention\n\n## Common Performance Issues\n- 🔴 **Database setup/teardown**: Use transactions, not full recreate\n- 🔴 **Network calls**: Mock external services in unit tests\n- 🔴 **File I/O**: Use in-memory alternatives where possible\n- 🔴 **Excessive fixtures**: Only use fixtures that provide value\n- 🔴 **Unoptimized queries**: Profile database interactions",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:224"
      ]
    },
    "# Test Size Compliance Report": {
      "value": "# Test Size Compliance Report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:453"
      ]
    },
    "# Test Size Violations Report": {
      "value": "# Test Size Violations Report",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:853"
      ]
    },
    "# Test Suite Performance Analysis Report": {
      "value": "# Test Suite Performance Analysis Report",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:271"
      ]
    },
    "# Test Writing Standards\n\n## File Organization\n- One comprehensive test file per service/domain\n- Tests grouped by functional area within files\n- Clear class-based organization for related tests\n\n## Naming Conventions\n- Test files: `test_{domain}_comprehensive.py`\n- Test classes: `Test{FunctionalArea}`\n- Test methods: `test_{specific_behavior}`\n\n## Code Quality Requirements\n- **Absolute imports only**: No relative imports (.) allowed\n- **Proper categorization**: Use @pytest.mark.{category}\n- **Environment awareness**: Use environment markers appropriately\n- **Clear assertions**: Descriptive assertion messages\n- **Mock justification**: Comment why mocks are necessary\n\n## Example Test Structure\n```python\nclass TestAuthenticationFlow:\n    \"\"\"Test authentication workflows.\"\"\"\n    \n    def test_successful_login_flow(self):\n        \"\"\"Test complete successful login workflow.\"\"\"\n        # Test implementation\n        \n    @pytest.mark.integration\n    def test_oauth_integration(self):\n        \"\"\"Test OAuth integration with real provider.\"\"\"\n        # Integration test implementation\n        \n    @env(\"staging\")\n    def test_staging_specific_behavior(self):\n        \"\"\"Test behavior specific to staging environment.\"\"\"\n        # Staging-specific test\n```\n\n## Anti-Patterns to Avoid\n- ❌ Stub tests with just `pass`\n- ❌ Duplicate test functionality\n- ❌ Relative imports\n- ❌ Tests without proper categorization\n- ❌ Mocks without justification comments": {
      "value": "# Test Writing Standards\n\n## File Organization\n- One comprehensive test file per service/domain\n- Tests grouped by functional area within files\n- Clear class-based organization for related tests\n\n## Naming Conventions\n- Test files: `test_{domain}_comprehensive.py`\n- Test classes: `Test{FunctionalArea}`\n- Test methods: `test_{specific_behavior}`\n\n## Code Quality Requirements\n- **Absolute imports only**: No relative imports (.) allowed\n- **Proper categorization**: Use @pytest.mark.{category}\n- **Environment awareness**: Use environment markers appropriately\n- **Clear assertions**: Descriptive assertion messages\n- **Mock justification**: Comment why mocks are necessary\n\n## Example Test Structure\n```python\nclass TestAuthenticationFlow:\n    \"\"\"Test authentication workflows.\"\"\"\n    \n    def test_successful_login_flow(self):\n        \"\"\"Test complete successful login workflow.\"\"\"\n        # Test implementation\n        \n    @pytest.mark.integration\n    def test_oauth_integration(self):\n        \"\"\"Test OAuth integration with real provider.\"\"\"\n        # Integration test implementation\n        \n    @env(\"staging\")\n    def test_staging_specific_behavior(self):\n        \"\"\"Test behavior specific to staging environment.\"\"\"\n        # Staging-specific test\n```\n\n## Anti-Patterns to Avoid\n- ❌ Stub tests with just `pass`\n- ❌ Duplicate test functionality\n- ❌ Relative imports\n- ❌ Tests without proper categorization\n- ❌ Mocks without justification comments",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:117"
      ]
    },
    "# Test implementation": {
      "value": "# Test implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:53"
      ]
    },
    "# Test stub": {
      "value": "# Test stub",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:52"
      ]
    },
    "# Thread model - creating mock for tests\nfrom unittest.mock import Mock\nThread = Mock": {
      "value": "# Thread model - creating mock for tests\nfrom unittest.mock import Mock\nThread = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:110"
      ]
    },
    "# User journey data - creating mocks\nfrom unittest.mock import Mock\nUserTestData = Mock()\nUserJourneyScenarios = Mock()": {
      "value": "# User journey data - creating mocks\nfrom unittest.mock import Mock\nUserTestData = Mock()\nUserJourneyScenarios = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:121"
      ]
    },
    "# UserFlowTestBase - using unittest.TestCase\nimport unittest\nfrom unittest.mock import Mock\nUserFlowTestBase = unittest.TestCase\nassert_successful_registration = Mock\nassert_plan_compliance = Mock": {
      "value": "# UserFlowTestBase - using unittest.TestCase\nimport unittest\nfrom unittest.mock import Mock\nUserFlowTestBase = unittest.TestCase\nassert_successful_registration = Mock\nassert_plan_compliance = Mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:103"
      ]
    },
    "# Workflow Status Verification Results\n\n## Script Functionality Verification\n\nThe verify_workflow_status.py script has been thoroughly tested and verified to work correctly.\n\n### Key Findings:\n\n1. **Argument Validation**: ✅ WORKING\n   - Properly validates required arguments\n   - Correctly handles invalid argument combinations\n   - Provides clear error messages\n\n2. **Authentication Handling**: ✅ WORKING\n   - Properly checks for GitHub token\n   - Handles missing tokens gracefully\n   - Attempts API calls and handles authentication failures\n\n3. **Error Handling**: ✅ WORKING\n   - Gracefully handles API errors\n   - Provides meaningful error messages\n   - Uses proper exit codes\n\n4. **Output Formatting**: ✅ WORKING\n   - Accepts both table and JSON output formats\n   - Processes arguments correctly\n\n5. **Help System**: ✅ WORKING\n   - Displays comprehensive help text\n   - Shows usage examples\n\n### Test Results:": {
      "value": "# Workflow Status Verification Results\n\n## Script Functionality Verification\n\nThe verify_workflow_status.py script has been thoroughly tested and verified to work correctly.\n\n### Key Findings:\n\n1. **Argument Validation**: ✅ WORKING\n   - Properly validates required arguments\n   - Correctly handles invalid argument combinations\n   - Provides clear error messages\n\n2. **Authentication Handling**: ✅ WORKING\n   - Properly checks for GitHub token\n   - Handles missing tokens gracefully\n   - Attempts API calls and handles authentication failures\n\n3. **Error Handling**: ✅ WORKING\n   - Gracefully handles API errors\n   - Provides meaningful error messages\n   - Uses proper exit codes\n\n4. **Output Formatting**: ✅ WORKING\n   - Accepts both table and JSON output formats\n   - Processes arguments correctly\n\n5. **Help System**: ✅ WORKING\n   - Displays comprehensive help text\n   - Shows usage examples\n\n### Test Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:214"
      ]
    },
    "# Workflow Status Verification Test Report\n\n## Summary\n- **Total Tests**:": {
      "value": "# Workflow Status Verification Test Report\n\n## Summary\n- **Total Tests**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:164"
      ]
    },
    "# time.sleep({}) # Optimized: use @fast_test decorator": {
      "value": "# time.sleep({}) # Optimized: use @fast_test decorator",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:178"
      ]
    },
    "##": {
      "value": "##",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:344"
      ]
    },
    "## Cache Performance": {
      "value": "## Cache Performance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:172"
      ]
    },
    "## Category Analysis": {
      "value": "## Category Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:546"
      ]
    },
    "## Critical Optimization Recommendations": {
      "value": "## Critical Optimization Recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:290"
      ]
    },
    "## Database Performance": {
      "value": "## Database Performance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "## Errors": {
      "value": "## Errors",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:207"
      ]
    },
    "## Exact Duplicates ⚠️": {
      "value": "## Exact Duplicates ⚠️",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:584"
      ]
    },
    "## Executive Summary": {
      "value": "## Executive Summary",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:521"
      ]
    },
    "## File Splits Required": {
      "value": "## File Splits Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:200"
      ]
    },
    "## Function Refactoring Required": {
      "value": "## Function Refactoring Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:207"
      ]
    },
    "## Highly Similar Tests": {
      "value": "## Highly Similar Tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:599"
      ]
    },
    "## Identified Issues\n\n### 1. Configuration Sprawl": {
      "value": "## Identified Issues\n\n### 1. Configuration Sprawl",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:201"
      ]
    },
    "## Immediate Fixes (Can be automated)": {
      "value": "## Immediate Fixes (Can be automated)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:194"
      ]
    },
    "## Impact Analysis": {
      "value": "## Impact Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:498"
      ]
    },
    "## LLM API Usage": {
      "value": "## LLM API Usage",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "## Mock Reduction Required": {
      "value": "## Mock Reduction Required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:216"
      ]
    },
    "## Most Problematic Files": {
      "value": "## Most Problematic Files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:316"
      ]
    },
    "## Performance Pattern Analysis": {
      "value": "## Performance Pattern Analysis",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:297"
      ]
    },
    "## Potentially Flaky Tests": {
      "value": "## Potentially Flaky Tests",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:309"
      ]
    },
    "## Quality Gate Scores": {
      "value": "## Quality Gate Scores",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:184"
      ]
    },
    "## Recommendations": {
      "value": "## Recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:534"
      ]
    },
    "## Recommendations\n\n### Immediate Actions (Priority 1)\n1. **Consolidate Configuration**: Reduce conftest.py files to service-level only\n2. **Standardize Naming**: Use consistent `test_*.py` pattern\n3. **Archive Legacy Tests**: Move or remove legacy test directories\n\n### Short-term Improvements (Priority 2)\n1. **Simplify Test Framework**: Reduce test_framework to essential components\n2. **Unify Test Runners**: Single test runner with clear options\n3. **Clear Test Levels**: Define and document 3-5 clear test levels\n\n### Long-term Goals (Priority 3)\n1. **Test Organization**: Group tests by domain/service\n2. **Performance Optimization**: Implement proper parallel execution\n3. **Documentation**: Single source of truth for test guidelines\n\n## Business Impact\n\n- **Development Velocity**: Test complexity impacts productivity\n- **Maintenance Burden**: Complex structure requires more maintenance\n- **Quality Assurance**: Disorganized tests reduce confidence\n\n## Next Steps\n\n1. Run this audit regularly to track improvements\n2. Prioritize fixes based on development impact\n3. Document decisions in SPEC/learnings/testing.xml": {
      "value": "## Recommendations\n\n### Immediate Actions (Priority 1)\n1. **Consolidate Configuration**: Reduce conftest.py files to service-level only\n2. **Standardize Naming**: Use consistent `test_*.py` pattern\n3. **Archive Legacy Tests**: Move or remove legacy test directories\n\n### Short-term Improvements (Priority 2)\n1. **Simplify Test Framework**: Reduce test_framework to essential components\n2. **Unify Test Runners**: Single test runner with clear options\n3. **Clear Test Levels**: Define and document 3-5 clear test levels\n\n### Long-term Goals (Priority 3)\n1. **Test Organization**: Group tests by domain/service\n2. **Performance Optimization**: Implement proper parallel execution\n3. **Documentation**: Single source of truth for test guidelines\n\n## Business Impact\n\n- **Development Velocity**: Test complexity impacts productivity\n- **Maintenance Burden**: Complex structure requires more maintenance\n- **Quality Assurance**: Disorganized tests reduce confidence\n\n## Next Steps\n\n1. Run this audit regularly to track improvements\n2. Prioritize fixes based on development impact\n3. Document decisions in SPEC/learnings/testing.xml",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:230"
      ]
    },
    "## Recommended Actions": {
      "value": "## Recommended Actions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:325"
      ]
    },
    "## Splitting Suggestions": {
      "value": "## Splitting Suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:492"
      ]
    },
    "## Summary": {
      "value": "## Summary",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:457",
        "scripts/optimize_test_performance.py:282"
      ]
    },
    "## Test Details by Category": {
      "value": "## Test Details by Category",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:193"
      ]
    },
    "## Test Results Summary": {
      "value": "## Test Results Summary",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:135"
      ]
    },
    "## Test Validation Status": {
      "value": "## Test Validation Status",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:898"
      ]
    },
    "## Tools Available": {
      "value": "## Tools Available",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:332"
      ]
    },
    "## Top 20 Worst Violators": {
      "value": "## Top 20 Worst Violators",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:876"
      ]
    },
    "## Violations": {
      "value": "## Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:466"
      ]
    },
    "## Violations by Type": {
      "value": "## Violations by Type",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:295"
      ]
    },
    "## Warnings": {
      "value": "## Warnings",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:217"
      ]
    },
    "## ⚠️ WARNING": {
      "value": "## ⚠️ WARNING",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:856"
      ]
    },
    "## 🎯 Priority Fix List": {
      "value": "## 🎯 Priority Fix List",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:546"
      ]
    },
    "## 📋 Violations by Category": {
      "value": "## 📋 Violations by Category",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:513"
      ]
    },
    "## 🛠️ Recommended Actions": {
      "value": "## 🛠️ Recommended Actions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:562"
      ]
    },
    "###": {
      "value": "###",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:559",
        "scripts/compliance/project_test_validator.py:355",
        "scripts/compliance/real_test_requirements_enforcer.py:521",
        "scripts/compliance/real_test_validator.py:298",
        "scripts/compliance/test_size_validator.py:496",
        "scripts/optimize_test_performance.py:302",
        "scripts/optimize_test_performance.py:318",
        "scripts/real_service_test_metrics.py:198",
        "scripts/test_verify_workflow_status.py:179"
      ]
    },
    "### 2. Test Locations\n\nTop test directories by file count:": {
      "value": "### 2. Test Locations\n\nTop test directories by file count:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:167"
      ]
    },
    "### 2. Test Organization": {
      "value": "### 2. Test Organization",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:216"
      ]
    },
    "### 3. Organizational Patterns\n\n#### 3.1 Test Naming Conventions": {
      "value": "### 3. Organizational Patterns\n\n#### 3.1 Test Naming Conventions",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:178"
      ]
    },
    "### 4. Key Test Directories": {
      "value": "### 4. Key Test Directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:191"
      ]
    },
    "### File Size Violations": {
      "value": "### File Size Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:474"
      ]
    },
    "### Function Size Violations": {
      "value": "### Function Size Violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:483"
      ]
    },
    "### Similarity Breakdown": {
      "value": "### Similarity Breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:527"
      ]
    },
    "#### 3.2 Test Structure\n- Test directories:": {
      "value": "#### 3.2 Test Structure\n- Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:187"
      ]
    },
    "%": {
      "value": "%",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:143",
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/business_value_test_index.py:747",
        "scripts/business_value_test_index.py:748",
        "scripts/business_value_test_index.py:749",
        "scripts/check_test_compliance.py:161",
        "scripts/compliance/test_violations_reporter.py:53",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/final_test_status_check.py:102"
      ]
    },
    "%\n\n## Test Results": {
      "value": "%\n\n## Test Results",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:171"
      ]
    },
    "%\n   • Monthly deployment overhead:": {
      "value": "%\n   • Monthly deployment overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:662"
      ]
    },
    "% goal": {
      "value": "% goal",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "% to reach": {
      "value": "% to reach",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "% to target 85%": {
      "value": "% to target 85%",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:694"
      ]
    },
    "%(asctime)s - %(levelname)s - %(message)s": {
      "value": "%(asctime)s - %(levelname)s - %(message)s",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:19",
        "scripts/auto_fix_test_sizes.py:29",
        "scripts/auto_fix_test_violations.py:43",
        "scripts/fix_test_utils_imports.py:19",
        "scripts/test_cold_start_e2e.py:38",
        "scripts/test_websocket_middleware.py:14"
      ]
    },
    "%(asctime)s - %(name)s - %(levelname)s - %(message)s": {
      "value": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:21",
        "auth_service/test_staging_db_connection.py:26",
        "auth_service/test_url_construction.py:22",
        "scripts/test_backend_optimized.py:47",
        "scripts/test_coordination_fixes.py:25"
      ]
    },
    "%(levelname)s: %(message)s": {
      "value": "%(levelname)s: %(message)s",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:18"
      ]
    },
    "%)": {
      "value": "%)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:751",
        "scripts/test_example_message_flow.py:341"
      ]
    },
    "%)\n\n### Conclusion:\nThe script is **PRODUCTION READY** and properly handles:\n- GitHub API connectivity (when valid token provided)\n- Argument validation and error handling\n- Multiple output formats\n- Workflow status verification\n\nAll \"failures\" in testing are **expected behaviors** when using invalid tokens or non-existent repositories.\nThe script correctly identifies these scenarios and reports appropriate errors.": {
      "value": "%)\n\n### Conclusion:\nThe script is **PRODUCTION READY** and properly handles:\n- GitHub API connectivity (when valid token provided)\n- Argument validation and error handling\n- Multiple output formats\n- Workflow status verification\n\nAll \"failures\" in testing are **expected behaviors** when using invalid tokens or non-existent repositories.\nThe script correctly identifies these scenarios and reports appropriate errors.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:246"
      ]
    },
    "%, target: 75%)": {
      "value": "%, target: 75%)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:701"
      ]
    },
    "%Y%m%d_%H%M%S": {
      "value": "%Y%m%d_%H%M%S",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:753",
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:372",
        "scripts/test_staging_deployment.py:224",
        "scripts/unified_test_runner.py:864"
      ]
    },
    "%Y-%m-%d %H:%M:%S": {
      "value": "%Y-%m-%d %H:%M:%S",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:854",
        "scripts/autonomous_review/test_generator.py:99",
        "scripts/optimize_test_performance.py:272",
        "scripts/test_chat_errors.py:9",
        "scripts/test_cors.py:264",
        "scripts/test_cors_implementation.py:205",
        "scripts/test_cors_implementation.py:238"
      ]
    },
    "'": {
      "value": "'",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:69",
        "auth_service/tests/utils/assertion_helpers.py:143",
        "auth_service/tests/utils/assertion_helpers.py:170",
        "auth_service/tests/utils/assertion_helpers.py:264",
        "auth_service/tests/utils/assertion_helpers.py:271",
        "scripts/align_test_imports.py:381",
        "scripts/align_test_imports.py:382",
        "scripts/setup_test_environment.py:218",
        "scripts/standardize_l3_test_names.py:64",
        "scripts/standardize_l3_test_names.py:64"
      ]
    },
    "' != auth_service='": {
      "value": "' != auth_service='",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:394"
      ]
    },
    "' (current:": {
      "value": "' (current:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711"
      ]
    },
    "' crashed:": {
      "value": "' crashed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:358"
      ]
    },
    "' defined in test file": {
      "value": "' defined in test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:175",
        "scripts/compliance/project_test_validator.py:187",
        "scripts/compliance/real_test_requirements_enforcer.py:248",
        "scripts/compliance/real_test_requirements_enforcer.py:265",
        "scripts/compliance/real_test_validator.py:128",
        "scripts/compliance/real_test_validator.py:139"
      ]
    },
    "' exceeds": {
      "value": "' exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "' exposed in error message": {
      "value": "' exposed in error message",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:389"
      ]
    },
    "' failed:": {
      "value": "' failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:328"
      ]
    },
    "' has": {
      "value": "' has",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459",
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:249",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_validator.py:213",
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    "' has high average complexity (": {
      "value": "' has high average complexity (",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465"
      ]
    },
    "' into smaller, focused test functions": {
      "value": "' into smaller, focused test functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:331"
      ]
    },
    "' not configured": {
      "value": "' not configured",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:463"
      ]
    },
    "' not found": {
      "value": "' not found",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:402"
      ]
    },
    "' not in execution list": {
      "value": "' not in execution list",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:289"
      ]
    },
    "' or '*', got '": {
      "value": "' or '*', got '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:83",
        "scripts/test_cors_implementation.py:128"
      ]
    },
    "' should be valid": {
      "value": "' should be valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:155"
      ]
    },
    "' spans": {
      "value": "' spans",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:448"
      ]
    },
    "' to a shared fixture or use real components": {
      "value": "' to a shared fixture or use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:267"
      ]
    },
    "' to a shared test utility module or use real components": {
      "value": "' to a shared test utility module or use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:250"
      ]
    },
    "'''": {
      "value": "'''",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:156",
        "scripts/compliance/project_test_validator.py:235",
        "scripts/compliance/project_test_validator.py:236",
        "scripts/compliance/real_test_requirements_enforcer.py:312",
        "scripts/compliance/real_test_validator.py:197",
        "scripts/compliance/test_fixer.py:176",
        "scripts/fix_all_test_issues.py:142",
        "scripts/fix_test_syntax_errors.py:84",
        "scripts/fix_test_syntax_errors.py:88"
      ]
    },
    "', got '": {
      "value": "', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:170",
        "auth_service/tests/utils/assertion_helpers.py:264",
        "auth_service/tests/utils/assertion_helpers.py:271"
      ]
    },
    "':": {
      "value": "':",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "'; DROP TABLE users; --": {
      "value": "'; DROP TABLE users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:354"
      ]
    },
    "'; SELECT * FROM users; --": {
      "value": "'; SELECT * FROM users; --",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:357"
      ]
    },
    "(": {
      "value": "(",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:385",
        "scripts/auto_fix_test_sizes.py:259",
        "scripts/auto_fix_test_sizes.py:445",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/auto_fix_test_violations.py:622",
        "scripts/auto_fix_test_violations.py:806",
        "scripts/business_value_test_index.py:750",
        "scripts/compliance/fake_test_scanner.py:285",
        "scripts/compliance/project_test_validator.py:355",
        "scripts/compliance/real_test_requirements_enforcer.py:521"
      ]
    },
    "()": {
      "value": "()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:291"
      ]
    },
    "() -": {
      "value": "() -",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:123"
      ]
    },
    "():": {
      "value": "():",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:570",
        "scripts/auto_fix_test_sizes.py:572"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Create item - test stub implementation.\"\"\"\n    return {\"status\": \"created\", \"id\": \"new_id\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Create item - test stub implementation.\"\"\"\n    return {\"status\": \"created\", \"id\": \"new_id\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:120"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Delete item - test stub implementation.\"\"\"\n    return {\"status\": \"deleted\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Delete item - test stub implementation.\"\"\"\n    return {\"status\": \"deleted\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:129"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Get all items - test stub implementation.\"\"\"\n    return []": {
      "value": "(*args, **kwargs):\n    \"\"\"Get all items - test stub implementation.\"\"\"\n    return []",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:102"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Process data - test stub implementation.\"\"\"\n    return {\"status\": \"processed\", \"result\": \"success\"}": {
      "value": "(*args, **kwargs):\n    \"\"\"Process data - test stub implementation.\"\"\"\n    return {\"status\": \"processed\", \"result\": \"success\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:147"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Stream data - test stub implementation.\"\"\"\n    for i in range(3):\n        yield f\"Chunk {i+1}\"": {
      "value": "(*args, **kwargs):\n    \"\"\"Stream data - test stub implementation.\"\"\"\n    for i in range(3):\n        yield f\"Chunk {i+1}\"",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:154"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Test stub implementation for": {
      "value": "(*args, **kwargs):\n    \"\"\"Test stub implementation for",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:164"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Update item - test stub implementation.\"\"\"\n    return {\"status\": \"updated\", \"id\": kwargs.get('id', '1')}": {
      "value": "(*args, **kwargs):\n    \"\"\"Update item - test stub implementation.\"\"\"\n    return {\"status\": \"updated\", \"id\": kwargs.get('id', '1')}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:111"
      ]
    },
    "(*args, **kwargs):\n    \"\"\"Verify/validate - test stub implementation.\"\"\"\n    return True": {
      "value": "(*args, **kwargs):\n    \"\"\"Verify/validate - test stub implementation.\"\"\"\n    return True",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:138"
      ]
    },
    "(?:# Add project root to path\\n)?import sys\\nfrom pathlib import Path\\nPROJECT_ROOT = Path\\(__file__\\)\\.parent\\.parent\\.parent\\nif str\\(PROJECT_ROOT\\) not in sys\\.path:\\n    sys\\.path\\.insert\\(0, str\\(PROJECT_ROOT\\)\\)\\n\\n?\\n?": {
      "value": "(?:# Add project root to path\\n)?import sys\\nfrom pathlib import Path\\nPROJECT_ROOT = Path\\(__file__\\)\\.parent\\.parent\\.parent\\nif str\\(PROJECT_ROOT\\) not in sys\\.path:\\n    sys\\.path\\.insert\\(0, str\\(PROJECT_ROOT\\)\\)\\n\\n?\\n?",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:19"
      ]
    },
    "(?:async )?def (test_\\w+)": {
      "value": "(?:async )?def (test_\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:155"
      ]
    },
    "(?:test|it|describe)\\s*\\(\\s*['\\\"`]([^'\\\"`]+)['\\\"`]": {
      "value": "(?:test|it|describe)\\s*\\(\\s*['\\\"`]([^'\\\"`]+)['\\\"`]",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:318"
      ]
    },
    "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(async def)": {
      "value": "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(async def)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:59",
        "scripts/batch_fix_and_test.py:29",
        "scripts/simple_test_fix_loop.py:53"
      ]
    },
    "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(def)": {
      "value": "(@pytest\\.mark\\.\\w+)\\s*\\n\\s*\\n\\s*(def)",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:35"
      ]
    },
    "(@pytest\\.mark\\.real_llm.*?\\n)(class |def |async def )": {
      "value": "(@pytest\\.mark\\.real_llm.*?\\n)(class |def |async def )",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:186"
      ]
    },
    "(Address when convenient)": {
      "value": "(Address when convenient)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:496"
      ]
    },
    "(JS/TS)": {
      "value": "(JS/TS)",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:56"
      ]
    },
    "(Must fix immediately)": {
      "value": "(Must fix immediately)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:494"
      ]
    },
    "(Priority:": {
      "value": "(Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:179"
      ]
    },
    "(Score:": {
      "value": "(Score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:755"
      ]
    },
    "(Should fix soon)": {
      "value": "(Should fix soon)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:495"
      ]
    },
    "([\\w/\\\\\\.]+::\\S+)": {
      "value": "([\\w/\\\\\\.]+::\\S+)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:143"
      ]
    },
    "([^\\s]+\\.py)": {
      "value": "([^\\s]+\\.py)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:37"
      ]
    },
    "(\\d+) failed": {
      "value": "(\\d+) failed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:842"
      ]
    },
    "(\\d+) failed.*(\\d+) passed": {
      "value": "(\\d+) failed.*(\\d+) passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:150"
      ]
    },
    "(\\d+) passed": {
      "value": "(\\d+) passed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:836"
      ]
    },
    "(\\d+)\\s+passed.*?(\\d+)\\s+total": {
      "value": "(\\d+)\\s+passed.*?(\\d+)\\s+total",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:107"
      ]
    },
    "(\\s+)def __init__\\(self\\):\\s*\\n(\\s+)super\\(\\).__init__\\(\\)\\s*\\n": {
      "value": "(\\s+)def __init__\\(self\\):\\s*\\n(\\s+)super\\(\\).__init__\\(\\)\\s*\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:22"
      ]
    },
    "(\\w+)\\.return_value = (.+)": {
      "value": "(\\w+)\\.return_value = (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:325"
      ]
    },
    "(\\w+)\\.side_effect = (.+)": {
      "value": "(\\w+)\\.side_effect = (.+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:326"
      ]
    },
    "(\\w+)\\s*\\(": {
      "value": "(\\w+)\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:220"
      ]
    },
    "(^|\\n)(async def": {
      "value": "(^|\\n)(async def",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:101"
      ]
    },
    "(^|\\n)(class": {
      "value": "(^|\\n)(class",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:64"
      ]
    },
    "(async\\s+)?def\\s+(test_\\w+)\\s*\\([^)]*\\):": {
      "value": "(async\\s+)?def\\s+(test_\\w+)\\s*\\([^)]*\\):",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:20"
      ]
    },
    "(class TestSyntaxFix.*?\\n)(.*?)(?=\\nclass |\\Z)": {
      "value": "(class TestSyntaxFix.*?\\n)(.*?)(?=\\nclass |\\Z)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:15"
      ]
    },
    "(currently": {
      "value": "(currently",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:362"
      ]
    },
    "(end-to-end tests)": {
      "value": "(end-to-end tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:372"
      ]
    },
    "(exception)": {
      "value": "(exception)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:257"
      ]
    },
    "(excluding dependencies)": {
      "value": "(excluding dependencies)",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:277"
      ]
    },
    "(expected 'default')": {
      "value": "(expected 'default')",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:125",
        "scripts/test_staging_clickhouse.py:132"
      ]
    },
    "(expected 8443 for HTTPS)": {
      "value": "(expected 8443 for HTTPS)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:118"
      ]
    },
    "(expected format: resource:action)": {
      "value": "(expected format: resource:action)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:217"
      ]
    },
    "(expected xedvrr4c3r.us-central1.gcp.clickhouse.cloud)": {
      "value": "(expected xedvrr4c3r.us-central1.gcp.clickhouse.cloud)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:111"
      ]
    },
    "(expected:": {
      "value": "(expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:264",
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "(hidden)": {
      "value": "(hidden)",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:93"
      ]
    },
    "(integration tests)": {
      "value": "(integration tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:201",
        "scripts/compliance/test_size_validator.py:371"
      ]
    },
    "(matched:": {
      "value": "(matched:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:40"
      ]
    },
    "(self):": {
      "value": "(self):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:285"
      ]
    },
    "(self):\n        \"\"\"Test": {
      "value": "(self):\n        \"\"\"Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:215"
      ]
    },
    "(shared utilities)": {
      "value": "(shared utilities)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:202"
      ]
    },
    "(similarity:": {
      "value": "(similarity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608"
      ]
    },
    "(too large)": {
      "value": "(too large)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:172"
      ]
    },
    "(under 300 line limit)": {
      "value": "(under 300 line limit)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:152"
      ]
    },
    "(unit tests)": {
      "value": "(unit tests)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:200",
        "scripts/compliance/test_size_validator.py:370"
      ]
    },
    "(~": {
      "value": "(~",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    ")": {
      "value": ")",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:318",
        "scripts/add_test_markers.py:101",
        "scripts/align_test_imports.py:386",
        "scripts/align_test_imports.py:388",
        "scripts/analyze_test_mocks.py:172",
        "scripts/analyze_test_mocks.py:179",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608",
        "scripts/auto_fix_test_violations.py:806"
      ]
    },
    ") -": {
      "value": ") -",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    ") - Indicators:": {
      "value": ") - Indicators:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:321"
      ]
    },
    ") - consider wildcards or dynamic validation": {
      "value": ") - consider wildcards or dynamic validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:336"
      ]
    },
    ") and AUTH_PORT (": {
      "value": ") and AUTH_PORT (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:65"
      ]
    },
    ") and URL port (": {
      "value": ") and URL port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:103"
      ]
    },
    ") does not match binding port (": {
      "value": ") does not match binding port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:170",
        "auth_service/tests/test_auth_port_configuration.py:235"
      ]
    },
    ") does not match expected port (": {
      "value": ") does not match expected port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:96"
      ]
    },
    ") in": {
      "value": ") in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:365"
      ]
    },
    ") indicates no circuit breaker": {
      "value": ") indicates no circuit breaker",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:302"
      ]
    },
    ") indicates poor overload handling": {
      "value": ") indicates poor overload handling",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:303"
      ]
    },
    ") must be consistent": {
      "value": ") must be consistent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:65"
      ]
    },
    ") must match": {
      "value": ") must match",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:103"
      ]
    },
    ") should match PORT env var (": {
      "value": ") should match PORT env var (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:364"
      ]
    },
    "). Consider breaking down complex tests into simpler units.": {
      "value": "). Consider breaking down complex tests into simpler units.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465"
      ]
    },
    "). Generated URL:": {
      "value": "). Generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:170"
      ]
    },
    "). This inconsistency prevents startup completion.": {
      "value": "). This inconsistency prevents startup completion.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:96"
      ]
    },
    "). This prevents successful service communication. URL:": {
      "value": "). This prevents successful service communication. URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:235"
      ]
    },
    ")...": {
      "value": ")...",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    "):": {
      "value": "):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:322",
        "scripts/setup_test_environment.py:289",
        "scripts/setup_test_environment.py:296",
        "scripts/setup_test_environment.py:303",
        "scripts/test_secret_manager_builder_critical.py:221",
        "scripts/test_secret_manager_builder_critical.py:224",
        "scripts/test_secret_manager_builder_critical.py:227",
        "scripts/test_workflows_with_act.py:338"
      ]
    },
    "): Creates confusion": {
      "value": "): Creates confusion",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:211"
      ]
    },
    "): Overlapping functionality": {
      "value": "): Overlapping functionality",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:214"
      ]
    },
    "): Should be consolidated": {
      "value": "): Should be consolidated",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:208"
      ]
    },
    ")[/red]": {
      "value": ")[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:113",
        "scripts/test_oauth_local.py:128"
      ]
    },
    "*": {
      "value": "*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:112",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:123",
        "scripts/apply_fast_test_decorators.py:161",
        "scripts/check_test_compliance.py:177",
        "scripts/compliance/real_test_linter.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:530",
        "scripts/remove_test_stubs.py:113",
        "scripts/test_backend.py:480",
        "scripts/test_backend_optimized.py:367",
        "scripts/test_cors.py:214"
      ]
    },
    "* netra_pr-* (PR databases)": {
      "value": "* netra_pr-* (PR databases)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:101"
      ]
    },
    "* netra_pr_branch_* (PR databases)": {
      "value": "* netra_pr_branch_* (PR databases)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:100"
      ]
    },
    "* postgres (system database)": {
      "value": "* postgres (system database)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:99"
      ]
    },
    "**": {
      "value": "**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:358",
        "scripts/compliance/real_test_requirements_enforcer.py:526",
        "scripts/compliance/real_test_requirements_enforcer.py:526",
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:302"
      ]
    },
    "** (": {
      "value": "** (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:318"
      ]
    },
    "** -": {
      "value": "** -",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:302"
      ]
    },
    "***": {
      "value": "***",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:131",
        "scripts/test_config_loading.py:50",
        "scripts/test_oauth_local.py:78",
        "scripts/test_secret_manager_builder_critical.py:546",
        "scripts/test_staging_clickhouse.py:76"
      ]
    },
    "*** ALL WEBSOCKET TESTS PASSED! ***": {
      "value": "*** ALL WEBSOCKET TESTS PASSED! ***",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:310"
      ]
    },
    "**/": {
      "value": "**/",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:112",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:123",
        "scripts/test_frontend.py:176",
        "scripts/test_frontend.py:178",
        "scripts/test_frontend.py:180"
      ]
    },
    "**/*.py": {
      "value": "**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:168",
        "scripts/business_value_test_index.py:181",
        "scripts/fix_e2e_test_imports.py:128",
        "scripts/fix_test_import_errors.py:146",
        "scripts/fix_test_syntax_errors.py:234",
        "scripts/standardize_l3_test_names.py:74"
      ]
    },
    "**/*.test.js": {
      "value": "**/*.test.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:105"
      ]
    },
    "**/*.test.jsx": {
      "value": "**/*.test.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:106"
      ]
    },
    "**/*.test.ts": {
      "value": "**/*.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:107"
      ]
    },
    "**/*.test.ts*": {
      "value": "**/*.test.ts*",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:195"
      ]
    },
    "**/*.test.tsx": {
      "value": "**/*.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:108"
      ]
    },
    "**/*_l3.py": {
      "value": "**/*_l3.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:22"
      ]
    },
    "**/*_test.py": {
      "value": "**/*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:73",
        "scripts/compliance/real_test_requirements_enforcer.py:98",
        "scripts/compliance/real_test_validator.py:46",
        "scripts/compliance/test_limits_checker.py:58"
      ]
    },
    "**/__tests__/**/*.js": {
      "value": "**/__tests__/**/*.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:109"
      ]
    },
    "**/__tests__/**/*.jsx": {
      "value": "**/__tests__/**/*.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:110"
      ]
    },
    "**/__tests__/**/*.ts": {
      "value": "**/__tests__/**/*.ts",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:111"
      ]
    },
    "**/__tests__/**/*.tsx": {
      "value": "**/__tests__/**/*.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:112"
      ]
    },
    "**/__tests__/@(components|hooks|store|services|lib|utils)/**/*.test.[jt]s?(x)": {
      "value": "**/__tests__/@(components|hooks|store|services|lib|utils)/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:188",
        "scripts/test_frontend_simple.py:37"
      ]
    },
    "**/__tests__/integration/**/*.test.[jt]s?(x)": {
      "value": "**/__tests__/integration/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "**/__tests__/integration/critical-integration.test.tsx": {
      "value": "**/__tests__/integration/critical-integration.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "**/__tests__/system/startup.test.tsx": {
      "value": "**/__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:36"
      ]
    },
    "**/conftest.py": {
      "value": "**/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:100"
      ]
    },
    "**/e2e/**": {
      "value": "**/e2e/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:254"
      ]
    },
    "**/integration/**": {
      "value": "**/integration/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:249"
      ]
    },
    "**/jest.setup.js": {
      "value": "**/jest.setup.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:113"
      ]
    },
    "**/performance/**": {
      "value": "**/performance/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:259"
      ]
    },
    "**/security/**": {
      "value": "**/security/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:264"
      ]
    },
    "**/setupTests.js": {
      "value": "**/setupTests.js",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:114"
      ]
    },
    "**/test*.py": {
      "value": "**/test*.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:84"
      ]
    },
    "**/test_*.py": {
      "value": "**/test_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:72",
        "scripts/compliance/fake_test_scanner.py:110",
        "scripts/compliance/project_test_validator.py:73",
        "scripts/compliance/real_test_requirements_enforcer.py:97",
        "scripts/compliance/real_test_validator.py:45",
        "scripts/compliance/test_limits_checker.py:57"
      ]
    },
    "**/tests/**/*.py": {
      "value": "**/tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:99",
        "scripts/compliance/real_test_validator.py:47"
      ]
    },
    "**/unit/**": {
      "value": "**/unit/**",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:244"
      ]
    },
    "**:": {
      "value": "**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:293"
      ]
    },
    "**Description**:": {
      "value": "**Description**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:180"
      ]
    },
    "**Duration:**": {
      "value": "**Duration:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:125"
      ]
    },
    "**Error**:\n```": {
      "value": "**Error**:\n```",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:190"
      ]
    },
    "**Exit Code**:": {
      "value": "**Exit Code**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:181"
      ]
    },
    "**Generated:**": {
      "value": "**Generated:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:124"
      ]
    },
    "**IMPORTANT:** Manual refactoring is strongly recommended over automatic fixes.": {
      "value": "**IMPORTANT:** Manual refactoring is strongly recommended over automatic fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:858"
      ]
    },
    "**Initiative**: Netra Apex Test Remediation (Iterations 81-100)\n**Status**: ✅ COMPLETE - Production Ready": {
      "value": "**Initiative**: Netra Apex Test Remediation (Iterations 81-100)\n**Status**: ✅ COMPLETE - Production Ready",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:484"
      ]
    },
    "**Output**:\n```": {
      "value": "**Output**:\n```",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:187"
      ]
    },
    "**Top Overlaps:**": {
      "value": "**Top Overlaps:**",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:575"
      ]
    },
    "**Total LLM Cost:** $": {
      "value": "**Total LLM Cost:** $",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    "**Total Violations:**": {
      "value": "**Total Violations:**",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:866",
        "scripts/compliance/project_test_validator.py:331",
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/compliance/real_test_validator.py:287"
      ]
    },
    "**⚠️ WARNING:** Some tests are already failing. Fix these before refactoring!": {
      "value": "**⚠️ WARNING:** Some tests are already failing. Fix these before refactoring!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:906"
      ]
    },
    "*.js": {
      "value": "*.js",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.json": {
      "value": "*.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:178"
      ]
    },
    "*.jsx": {
      "value": "*.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.py": {
      "value": "*.py",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/autonomous_review/test_reviewer.py:74",
        "scripts/autonomous_review/test_reviewer.py:187",
        "scripts/batch_fix_and_test.py:41",
        "scripts/batch_fix_and_test.py:42",
        "scripts/batch_fix_and_test.py:43",
        "scripts/compliance/demo_test_size_enforcement.py:74",
        "scripts/compliance/project_test_validator.py:84",
        "scripts/compliance/test_size_validator.py:138"
      ]
    },
    "*.spec.*": {
      "value": "*.spec.*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*.spec.ts": {
      "value": "*.spec.ts",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.spec.tsx": {
      "value": "*.spec.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.*": {
      "value": "*.test.*",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*.test.js": {
      "value": "*.test.js",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.jsx": {
      "value": "*.test.jsx",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.ts": {
      "value": "*.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.test.ts*": {
      "value": "*.test.ts*",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:141"
      ]
    },
    "*.test.tsx": {
      "value": "*.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:96",
        "scripts/generate_test_audit.py:52"
      ]
    },
    "*.ts": {
      "value": "*.ts",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.tsx": {
      "value": "*.tsx",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/autonomous_review/test_reviewer.py:188",
        "scripts/validate_llm_test_models.py:50"
      ]
    },
    "*.yml": {
      "value": "*.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:99",
        "scripts/test_workflows_with_act.py:103"
      ]
    },
    "*_test.py": {
      "value": "*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:71",
        "scripts/autonomous_review/test_reviewer.py:140"
      ]
    },
    "*test*.py": {
      "value": "*test*.py",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*test*.ts": {
      "value": "*test*.ts",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:54",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:56"
      ]
    },
    "*test.py": {
      "value": "*test.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:46"
      ]
    },
    "+": {
      "value": "+",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:49",
        "scripts/unified_test_runner.py:924"
      ]
    },
    "+ Cloud SQL SSL parameters handled correctly": {
      "value": "+ Cloud SQL SSL parameters handled correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:262"
      ]
    },
    "+ Engine created successfully": {
      "value": "+ Engine created successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:140"
      ]
    },
    "+ Engine created with connection pool": {
      "value": "+ Engine created with connection pool",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:317"
      ]
    },
    "+ Engine creation configuration valid": {
      "value": "+ Engine creation configuration valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:276"
      ]
    },
    "+ Engine disposed successfully": {
      "value": "+ Engine disposed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:145",
        "scripts/test_auth_database_sessions.py:326"
      ]
    },
    "+ URL conversion successful": {
      "value": "+ URL conversion successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:101"
      ]
    },
    "+ URL format valid": {
      "value": "+ URL format valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:251"
      ]
    },
    "+00:00": {
      "value": "+00:00",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:127",
        "auth_service/tests/utils/assertion_helpers.py:129"
      ]
    },
    ",": {
      "value": ",",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:220",
        "scripts/analyze_test_overlap.py:478",
        "scripts/apply_fast_test_decorators.py:124",
        "scripts/auto_fix_test_violations.py:579",
        "scripts/automated_test_fix_loop.py:70",
        "scripts/automated_test_fix_loop.py:78",
        "scripts/compliance/fake_test_scanner.py:287",
        "scripts/fix_all_test_issues.py:49",
        "scripts/fix_all_test_issues.py:51",
        "scripts/optimize_test_performance.py:321"
      ]
    },
    ", AUTH_PORT=": {
      "value": ", AUTH_PORT=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:138"
      ]
    },
    ", Database:": {
      "value": ", Database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:159"
      ]
    },
    ", Got:": {
      "value": ", Got:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:451",
        "scripts/test_websocket_cors_comprehensive.py:135"
      ]
    },
    ", Improvement:": {
      "value": ", Improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    ", Modified:": {
      "value": ", Modified:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:190"
      ]
    },
    ", Optimization:": {
      "value": ", Optimization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:126"
      ]
    },
    ", SPEC/testing.xml)": {
      "value": ", SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    ", URL port:": {
      "value": ", URL port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:333"
      ]
    },
    ", expected client-id-": {
      "value": ", expected client-id-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:318"
      ]
    },
    ", first import at line": {
      "value": ", first import at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:58"
      ]
    },
    ", got": {
      "value": ", got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:166",
        "auth_service/tests/utils/assertion_helpers.py:186",
        "auth_service/tests/utils/assertion_helpers.py:202",
        "auth_service/tests/utils/assertion_helpers.py:267",
        "scripts/test_cors.py:218",
        "scripts/test_oauth_dev_config.py:88",
        "scripts/test_oauth_dev_config.py:94"
      ]
    },
    ", jest.mock:": {
      "value": ", jest.mock:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:401"
      ]
    },
    ", max_files=": {
      "value": ", max_files=",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    ", reason=": {
      "value": ", reason=",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:161"
      ]
    },
    ", service2=": {
      "value": ", service2=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:173"
      ]
    },
    ", skipping": {
      "value": ", skipping",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:822"
      ]
    },
    ", type:": {
      "value": ", type:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    ", using 'unit'": {
      "value": ", using 'unit'",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:296"
      ]
    },
    ", using simple line counting:": {
      "value": ", using simple line counting:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:221"
      ]
    },
    ", ~": {
      "value": ", ~",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:314"
      ]
    },
    ",\"": {
      "value": ",\"",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:297"
      ]
    },
    ",line=": {
      "value": ",line=",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:100"
      ]
    },
    "-": {
      "value": "-",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:169",
        "auth_service/test_staging_db_connection.py:265",
        "scripts/add_pytest_markers.py:183",
        "scripts/align_test_imports.py:435",
        "scripts/align_test_imports.py:442",
        "scripts/align_test_imports.py:447",
        "scripts/business_value_test_index.py:761",
        "scripts/check_conftest_violations.py:80",
        "scripts/check_conftest_violations.py:87",
        "scripts/check_conftest_violations.py:96"
      ]
    },
    "- $200K/year in prevented incidents if fixed": {
      "value": "- $200K/year in prevented incidents if fixed",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:224"
      ]
    },
    "- **": {
      "value": "- **",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:358",
        "scripts/compliance/real_test_validator.py:318",
        "scripts/generate_test_audit.py:165"
      ]
    },
    "- **Average Score:**": {
      "value": "- **Average Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:185"
      ]
    },
    "- **Critical:**": {
      "value": "- **Critical:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:494"
      ]
    },
    "- **Exact Duplicates**:": {
      "value": "- **Exact Duplicates**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "- **Exact Duplicates**: 0 ✅": {
      "value": "- **Exact Duplicates**: 0 ✅",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529"
      ]
    },
    "- **Excessive conftest files** (": {
      "value": "- **Excessive conftest files** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:208"
      ]
    },
    "- **Failed**:": {
      "value": "- **Failed**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:169"
      ]
    },
    "- **Failed:**": {
      "value": "- **Failed:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:138"
      ]
    },
    "- **Files Affected**:": {
      "value": "- **Files Affected**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:304"
      ]
    },
    "- **Files Analyzed**:": {
      "value": "- **Files Analyzed**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:283"
      ]
    },
    "- **Files exceeding": {
      "value": "- **Files exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:460"
      ]
    },
    "- **Functions exceeding": {
      "value": "- **Functions exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "- **Highly Similar**:": {
      "value": "- **Highly Similar**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:530"
      ]
    },
    "- **Hit Rate:**": {
      "value": "- **Hit Rate:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    "- **Hits:**": {
      "value": "- **Hits:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "- **Inconsistent L3 pattern** used in": {
      "value": "- **Inconsistent L3 pattern** used in",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:221"
      ]
    },
    "- **Legacy test directories** found:": {
      "value": "- **Legacy test directories** found:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:228"
      ]
    },
    "- **Major:**": {
      "value": "- **Major:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:495"
      ]
    },
    "- **Max Score:**": {
      "value": "- **Max Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:187"
      ]
    },
    "- **Min Score:**": {
      "value": "- **Min Score:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:186"
      ]
    },
    "- **Minor:**": {
      "value": "- **Minor:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:496"
      ]
    },
    "- **Misses:**": {
      "value": "- **Misses:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:174"
      ]
    },
    "- **Multiple test configurations** (": {
      "value": "- **Multiple test configurations** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:211"
      ]
    },
    "- **Multiple test runners** (": {
      "value": "- **Multiple test runners** (",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:214"
      ]
    },
    "- **Non-standard naming** in": {
      "value": "- **Non-standard naming** in",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:224"
      ]
    },
    "- **Occurrences**:": {
      "value": "- **Occurrences**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:303"
      ]
    },
    "- **Pass Rate:**": {
      "value": "- **Pass Rate:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:139"
      ]
    },
    "- **Passed**:": {
      "value": "- **Passed**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:168"
      ]
    },
    "- **Passed:**": {
      "value": "- **Passed:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:137"
      ]
    },
    "- **Performance Issues Found**:": {
      "value": "- **Performance Issues Found**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:284"
      ]
    },
    "- **Potentially Flaky Tests**:": {
      "value": "- **Potentially Flaky Tests**:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:285"
      ]
    },
    "- **Related**:": {
      "value": "- **Related**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:532"
      ]
    },
    "- **Similar**:": {
      "value": "- **Similar**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:531"
      ]
    },
    "- **Success Rate**:": {
      "value": "- **Success Rate**:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:170"
      ]
    },
    "- **Suggestion:** Extract helper methods or use fixtures": {
      "value": "- **Suggestion:** Extract helper methods or use fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:893"
      ]
    },
    "- **Suggestion:** Split into multiple focused test modules": {
      "value": "- **Suggestion:** Split into multiple focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:891"
      ]
    },
    "- **Total Similarity Pairs**:": {
      "value": "- **Total Similarity Pairs**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:525"
      ]
    },
    "- **Total Test Files**:": {
      "value": "- **Total Test Files**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:523"
      ]
    },
    "- **Total Test Functions**:": {
      "value": "- **Total Test Functions**:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:524"
      ]
    },
    "- **Total Tests:**": {
      "value": "- **Total Tests:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:136"
      ]
    },
    "- **Total Validations:**": {
      "value": "- **Total Validations:**",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:188"
      ]
    },
    "- **Total test files scanned:**": {
      "value": "- **Total test files scanned:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:459"
      ]
    },
    "- **Total violations:**": {
      "value": "- **Total violations:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:462"
      ]
    },
    "- ... and": {
      "value": "- ... and",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:361"
      ]
    },
    "- 40% development velocity improvement": {
      "value": "- 40% development velocity improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:225"
      ]
    },
    "- 85% cache hit rate restoration": {
      "value": "- 85% cache hit rate restoration",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:226"
      ]
    },
    "- 90% reduction in Redis-related failures": {
      "value": "- 90% reduction in Redis-related failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:227"
      ]
    },
    "- API:": {
      "value": "- API:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:45"
      ]
    },
    "- All secrets come from Google Secret Manager": {
      "value": "- All secrets come from Google Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:121"
      ]
    },
    "- All services correctly default to STAGING (not production)": {
      "value": "- All services correctly default to STAGING (not production)",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:170"
      ]
    },
    "- Allow dev login:": {
      "value": "- Allow dev login:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:143"
      ]
    },
    "- Allow mock auth:": {
      "value": "- Allow mock auth:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:144"
      ]
    },
    "- App:": {
      "value": "- App:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:44"
      ]
    },
    "- Apps skip .env loading when ENVIRONMENT=staging": {
      "value": "- Apps skip .env loading when ENVIRONMENT=staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:123"
      ]
    },
    "- Auth middleware processes ALL non-excluded paths": {
      "value": "- Auth middleware processes ALL non-excluded paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:145"
      ]
    },
    "- Auth service trying to connect to 'postgres' database": {
      "value": "- Auth service trying to connect to 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:109"
      ]
    },
    "- Auth:": {
      "value": "- Auth:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:46"
      ]
    },
    "- Available databases on instance:": {
      "value": "- Available databases on instance:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:98"
      ]
    },
    "- Avg Complexity:": {
      "value": "- Avg Complexity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:563"
      ]
    },
    "- But application schema might not exist in 'postgres' database": {
      "value": "- But application schema might not exist in 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:110"
      ]
    },
    "- But code was expecting 'netra_staging'": {
      "value": "- But code was expecting 'netra_staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:97"
      ]
    },
    "- CLAUDE.md (development standards)": {
      "value": "- CLAUDE.md (development standards)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:316"
      ]
    },
    "- CRITICAL:": {
      "value": "- CRITICAL:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:288"
      ]
    },
    "- Check for Upgrade: websocket header before adding security headers": {
      "value": "- Check for Upgrade: websocket header before adding security headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:198"
      ]
    },
    "- Check if 'postgres' DB has auth tables": {
      "value": "- Check if 'postgres' DB has auth tables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:122"
      ]
    },
    "- Cloud SQL Unix socket connection (secure)": {
      "value": "- Cloud SQL Unix socket connection (secure)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:260"
      ]
    },
    "- Commands are DRY RUN only (no actual migration)": {
      "value": "- Commands are DRY RUN only (no actual migration)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:257"
      ]
    },
    "- Configuration files:": {
      "value": "- Configuration files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:189"
      ]
    },
    "- Confirm session management": {
      "value": "- Confirm session management",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:139"
      ]
    },
    "- Conftest files:": {
      "value": "- Conftest files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:281"
      ]
    },
    "- Consider using ASGI middleware mounting instead of wrapping": {
      "value": "- Consider using ASGI middleware mounting instead of wrapping",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:195"
      ]
    },
    "- Cross-Category Overlaps:": {
      "value": "- Cross-Category Overlaps:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:565"
      ]
    },
    "- Current setup: Auth middleware doesn't explicitly exclude WebSocket paths": {
      "value": "- Current setup: Auth middleware doesn't explicitly exclude WebSocket paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:127"
      ]
    },
    "- Current setup: Proper separation of HTTP and WebSocket CORS": {
      "value": "- Current setup: Proper separation of HTTP and WebSocket CORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:134"
      ]
    },
    "- DEV_AUTH_BYPASS:": {
      "value": "- DEV_AUTH_BYPASS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:273"
      ]
    },
    "- Deploy with corrected credentials": {
      "value": "- Deploy with corrected credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:133"
      ]
    },
    "- Duplicates:": {
      "value": "- Duplicates:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:566"
      ]
    },
    "- Ensure auth service tables exist in target database": {
      "value": "- Ensure auth service tables exist in target database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:129"
      ]
    },
    "- Ensures AI quality meets expectations": {
      "value": "- Ensures AI quality meets expectations",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:505"
      ]
    },
    "- Environment detection logic works as expected": {
      "value": "- Environment detection logic works as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:171"
      ]
    },
    "- Environment:": {
      "value": "- Environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:272"
      ]
    },
    "- Errors in": {
      "value": "- Errors in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:110"
      ]
    },
    "- Failed:": {
      "value": "- Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:199"
      ]
    },
    "- Failing:": {
      "value": "- Failing:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:903"
      ]
    },
    "- FastAPI middleware chain may not include the wrapped WebSocket handler": {
      "value": "- FastAPI middleware chain may not include the wrapped WebSocket handler",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:151"
      ]
    },
    "- File size violations:": {
      "value": "- File size violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:867"
      ]
    },
    "- Fixed": {
      "value": "- Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:108"
      ]
    },
    "- Frontend:": {
      "value": "- Frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:47"
      ]
    },
    "- Full customer journey validation": {
      "value": "- Full customer journey validation",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:503"
      ]
    },
    "- Function size violations:": {
      "value": "- Function size violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:868"
      ]
    },
    "- Highly Similar:": {
      "value": "- Highly Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:567"
      ]
    },
    "- Integration tests with mocks defeat the purpose of integration testing": {
      "value": "- Integration tests with mocks defeat the purpose of integration testing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:507"
      ]
    },
    "- Internal Overlaps:": {
      "value": "- Internal Overlaps:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:564"
      ]
    },
    "- Issue: Auth middleware may interfere with WebSocket upgrade requests": {
      "value": "- Issue: Auth middleware may interfere with WebSocket upgrade requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:128"
      ]
    },
    "- Issue: WebSocket wrapping may not be effective due to FastAPI limitations": {
      "value": "- Issue: WebSocket wrapping may not be effective due to FastAPI limitations",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:140"
      ]
    },
    "- MAJOR:": {
      "value": "- MAJOR:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:289"
      ]
    },
    "- MINOR:": {
      "value": "- MINOR:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:290"
      ]
    },
    "- Max violation:": {
      "value": "- Max violation:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:886"
      ]
    },
    "- May interfere with WebSocket upgrade process": {
      "value": "- May interfere with WebSocket upgrade process",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:155"
      ]
    },
    "- Mock component implementations in test files violate real test requirements": {
      "value": "- Mock component implementations in test files violate real test requirements",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:506"
      ]
    },
    "- Monitor logs for connection success": {
      "value": "- Monitor logs for connection success",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:134"
      ]
    },
    "- No .env.staging file (deleted)": {
      "value": "- No .env.staging file (deleted)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:120"
      ]
    },
    "- Non-secret config in deployment script as env vars": {
      "value": "- Non-secret config in deployment script as env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:122"
      ]
    },
    "- OAuth configuration appropriate for each environment": {
      "value": "- OAuth configuration appropriate for each environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:172"
      ]
    },
    "- OR 'postgres' database doesn't have the required tables/schema": {
      "value": "- OR 'postgres' database doesn't have the required tables/schema",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:111"
      ]
    },
    "- OR create 'netra_staging' database for staging": {
      "value": "- OR create 'netra_staging' database for staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:123"
      ]
    },
    "- Or handle CORS directly in WebSocket endpoint": {
      "value": "- Or handle CORS directly in WebSocket endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:196"
      ]
    },
    "- Passed:": {
      "value": "- Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:199"
      ]
    },
    "- Passing:": {
      "value": "- Passing:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:902"
      ]
    },
    "- Risk of false positive test results hiding real bugs": {
      "value": "- Risk of false positive test results hiding real bugs",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:508"
      ]
    },
    "- Run Alembic migrations if needed": {
      "value": "- Run Alembic migrations if needed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:130"
      ]
    },
    "- SPEC/testing.xml (comprehensive testing standards)": {
      "value": "- SPEC/testing.xml (comprehensive testing standards)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:314"
      ]
    },
    "- SSL parameters handled automatically": {
      "value": "- SSL parameters handled automatically",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:259"
      ]
    },
    "- Secret Manager postgres-db-staging = 'postgres'": {
      "value": "- Secret Manager postgres-db-staging = 'postgres'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:96"
      ]
    },
    "- Security headers middleware adds headers to /ws paths": {
      "value": "- Security headers middleware adds headers to /ws paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:154"
      ]
    },
    "- Security middleware → Request middleware → Security response middleware": {
      "value": "- Security middleware → Request middleware → Security response middleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:138"
      ]
    },
    "- Skipped": {
      "value": "- Skipped",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:109"
      ]
    },
    "- Test directories:": {
      "value": "- Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:282"
      ]
    },
    "- Test locations:": {
      "value": "- Test locations:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:278"
      ]
    },
    "- Test login flow": {
      "value": "- Test login flow",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:137"
      ]
    },
    "- Test runners found:": {
      "value": "- Test runners found:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:190"
      ]
    },
    "- Tests validated:": {
      "value": "- Tests validated:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:901"
      ]
    },
    "- Tests:": {
      "value": "- Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:561",
        "scripts/real_service_test_metrics.py:198"
      ]
    },
    "- This causes auth middleware to interfere with WebSocket upgrade": {
      "value": "- This causes auth middleware to interfere with WebSocket upgrade",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:147"
      ]
    },
    "- Total Lines:": {
      "value": "- Total Lines:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:562"
      ]
    },
    "- Total test files:": {
      "value": "- Total test files:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:277"
      ]
    },
    "- Total violations:": {
      "value": "- Total violations:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:887"
      ]
    },
    "- Using psycopg2 driver for Alembic compatibility": {
      "value": "- Using psycopg2 driver for Alembic compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:258"
      ]
    },
    "- Validates SLA compliance": {
      "value": "- Validates SLA compliance",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:507"
      ]
    },
    "- Verify JWT token generation": {
      "value": "- Verify JWT token generation",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:138"
      ]
    },
    "- WEBSOCKET_BYPASS:": {
      "value": "- WEBSOCKET_BYPASS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:274"
      ]
    },
    "- WebSocket CORS wrapping happens in setup_request_middleware": {
      "value": "- WebSocket CORS wrapping happens in setup_request_middleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:139"
      ]
    },
    "- WebSocket paths (/ws, /websocket) are NOT in excluded_paths": {
      "value": "- WebSocket paths (/ws, /websocket) are NOT in excluded_paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:146"
      ]
    },
    "- WebSocket paths (/ws, /websocket) should be excluded from auth middleware": {
      "value": "- WebSocket paths (/ws, /websocket) should be excluded from auth middleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:126"
      ]
    },
    "- WebSocketAwareCORSMiddleware skips WebSocket upgrades": {
      "value": "- WebSocketAwareCORSMiddleware skips WebSocket upgrades",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:132"
      ]
    },
    "- WebSocketCORSMiddleware handles WebSocket CORS separately": {
      "value": "- WebSocketCORSMiddleware handles WebSocket CORS separately",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:133"
      ]
    },
    "- [ ]": {
      "value": "- [ ]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:196",
        "scripts/compliance/real_test_linter.py:203",
        "scripts/compliance/real_test_linter.py:210",
        "scripts/compliance/real_test_linter.py:219"
      ]
    },
    "- [CRITICAL]:": {
      "value": "- [CRITICAL]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:332"
      ]
    },
    "- [MAJOR]:": {
      "value": "- [MAJOR]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:333"
      ]
    },
    "- [MINOR]:": {
      "value": "- [MINOR]:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:334"
      ]
    },
    "- `": {
      "value": "- `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:606",
        "scripts/generate_test_audit.py:176",
        "scripts/generate_test_audit.py:199",
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "- `test_framework.performance_helpers.FlakynessReducer` - Stable wait conditions": {
      "value": "- `test_framework.performance_helpers.FlakynessReducer` - Stable wait conditions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:336"
      ]
    },
    "- `test_framework.performance_helpers.fast_test` - Mock sleep functions": {
      "value": "- `test_framework.performance_helpers.fast_test` - Mock sleep functions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:333"
      ]
    },
    "- `test_framework.performance_helpers.mock_external_dependencies` - Mock external calls": {
      "value": "- `test_framework.performance_helpers.mock_external_dependencies` - Mock external calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:335"
      ]
    },
    "- `test_framework.performance_helpers.timeout_override` - Reduce timeouts": {
      "value": "- `test_framework.performance_helpers.timeout_override` - Reduce timeouts",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:334"
      ]
    },
    "- app/tests/examples/test_real_functionality_examples.py (patterns)": {
      "value": "- app/tests/examples/test_real_functionality_examples.py (patterns)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:315"
      ]
    },
    "- configure_websocket_cors() wraps the app but doesn't reassign": {
      "value": "- configure_websocket_cors() wraps the app but doesn't reassign",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:150"
      ]
    },
    "- refreshToken (camelCase) - Frontend format": {
      "value": "- refreshToken (camelCase) - Frontend format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:151"
      ]
    },
    "- refresh_token (snake_case) - Original backend format": {
      "value": "- refresh_token (snake_case) - Original backend format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:150"
      ]
    },
    "- remove for security": {
      "value": "- remove for security",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:348"
      ]
    },
    "- security risk": {
      "value": "- security risk",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:342"
      ]
    },
    "- tests are already failing": {
      "value": "- tests are already failing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:815"
      ]
    },
    "- token (simple) - Alternative format": {
      "value": "- token (simple) - Alternative format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:152"
      ]
    },
    "--": {
      "value": "--",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/startup_test_executor.py:143",
        "scripts/test_frontend.py:120",
        "scripts/test_frontend.py:121",
        "scripts/test_frontend.py:227",
        "scripts/test_frontend.py:229",
        "scripts/test_frontend.py:317",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "---": {
      "value": "---",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:161",
        "auth_service/test_actual_staging_credentials.py:161",
        "auth_service/test_url_construction.py:227",
        "auth_service/test_url_construction.py:227"
      ]
    },
    "--- Iteration": {
      "value": "--- Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:12"
      ]
    },
    "--- Progress Summary ---": {
      "value": "--- Progress Summary ---",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:132"
      ]
    },
    "--> Helpful debugging info provided": {
      "value": "--> Helpful debugging info provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:139"
      ]
    },
    "--> The fix is NOT working. Frontend will fail to refresh.": {
      "value": "--> The fix is NOT working. Frontend will fail to refresh.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:65"
      ]
    },
    "--> The fix is working! Frontend can now refresh tokens.": {
      "value": "--> The fix is working! Frontend can now refresh tokens.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:62"
      ]
    },
    "--all": {
      "value": "--all",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:41"
      ]
    },
    "--allow-prod": {
      "value": "--allow-prod",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:943"
      ]
    },
    "--api-port": {
      "value": "--api-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:207"
      ]
    },
    "--apply": {
      "value": "--apply",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:136"
      ]
    },
    "--apply-optimizations": {
      "value": "--apply-optimizations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:346"
      ]
    },
    "--asyncio-mode=auto": {
      "value": "--asyncio-mode=auto",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:45",
        "scripts/test_backend.py:284"
      ]
    },
    "--auth-url": {
      "value": "--auth-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:169"
      ]
    },
    "--auto-split": {
      "value": "--auto-split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:522"
      ]
    },
    "--backend-url": {
      "value": "--backend-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:174"
      ]
    },
    "--backup-dir": {
      "value": "--backup-dir",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:935"
      ]
    },
    "--bail": {
      "value": "--bail",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:778"
      ]
    },
    "--base-url": {
      "value": "--base-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:419",
        "scripts/test_staging_env.py:209"
      ]
    },
    "--benchmark": {
      "value": "--benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:378"
      ]
    },
    "--build": {
      "value": "--build",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:410"
      ]
    },
    "--cache-dir": {
      "value": "--cache-dir",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:380"
      ]
    },
    "--cacheDirectory": {
      "value": "--cacheDirectory",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:154"
      ]
    },
    "--categories": {
      "value": "--categories",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:18",
        "scripts/unified_test_runner.py:923"
      ]
    },
    "--category": {
      "value": "--category",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:69",
        "scripts/test_backend.py:481",
        "scripts/test_backend_optimized.py:368",
        "scripts/test_frontend.py:388",
        "scripts/unified_test_runner.py:918"
      ]
    },
    "--check-deps": {
      "value": "--check-deps",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:510",
        "scripts/test_frontend.py:415"
      ]
    },
    "--cleanup-on-exit": {
      "value": "--cleanup-on-exit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:423"
      ]
    },
    "--clear-cache": {
      "value": "--clear-cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:384"
      ]
    },
    "--clickhouse": {
      "value": "--clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:164"
      ]
    },
    "--color=yes": {
      "value": "--color=yes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:284"
      ]
    },
    "--confirm-unsafe": {
      "value": "--confirm-unsafe",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:923"
      ]
    },
    "--cov": {
      "value": "--cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:495",
        "scripts/test_frontend.py:401"
      ]
    },
    "--cov-fail-under=": {
      "value": "--cov-fail-under=",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:263",
        "scripts/unified_test_config.py:367"
      ]
    },
    "--cov-report=html": {
      "value": "--cov-report=html",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:360",
        "scripts/unified_test_runner.py:717"
      ]
    },
    "--cov-report=html:reports/coverage/html": {
      "value": "--cov-report=html:reports/coverage/html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:261",
        "scripts/test_coverage_system.py:30"
      ]
    },
    "--cov-report=json": {
      "value": "--cov-report=json",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113"
      ]
    },
    "--cov-report=json:reports/coverage/coverage.json": {
      "value": "--cov-report=json:reports/coverage/coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:262",
        "scripts/test_coverage_system.py:32"
      ]
    },
    "--cov-report=term-missing": {
      "value": "--cov-report=term-missing",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:73",
        "scripts/startup_test_executor.py:229",
        "scripts/test_backend.py:262",
        "scripts/test_coverage_system.py:29",
        "scripts/unified_test_config.py:361",
        "scripts/unified_test_runner.py:718"
      ]
    },
    "--cov-report=xml:reports/coverage/coverage.xml": {
      "value": "--cov-report=xml:reports/coverage/coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:31"
      ]
    },
    "--cov=": {
      "value": "--cov=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:359"
      ]
    },
    "--cov=.": {
      "value": "--cov=.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:716"
      ]
    },
    "--cov=app": {
      "value": "--cov=app",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113"
      ]
    },
    "--cov=netra_backend.app": {
      "value": "--cov=netra_backend.app",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:73",
        "scripts/startup_test_executor.py:229",
        "scripts/test_backend.py:261"
      ]
    },
    "--cov=netra_backend/app": {
      "value": "--cov=netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:28"
      ]
    },
    "--coverage": {
      "value": "--coverage",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:145",
        "scripts/test_backend.py:495",
        "scripts/test_frontend.py:128",
        "scripts/test_frontend.py:401",
        "scripts/test_frontend_simple.py:39"
      ]
    },
    "--coverage=false": {
      "value": "--coverage=false",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:776"
      ]
    },
    "--coverageDirectory=": {
      "value": "--coverageDirectory=",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:130"
      ]
    },
    "--critical-only": {
      "value": "--critical-only",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:137"
      ]
    },
    "--cypress-browser": {
      "value": "--cypress-browser",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1073"
      ]
    },
    "--cypress-headed": {
      "value": "--cypress-headed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1067"
      ]
    },
    "--cypress-open": {
      "value": "--cypress-open",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:395"
      ]
    },
    "--detectOpenHandles": {
      "value": "--detectOpenHandles",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:122"
      ]
    },
    "--directory": {
      "value": "--directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:376"
      ]
    },
    "--disable-auto-split": {
      "value": "--disable-auto-split",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1033"
      ]
    },
    "--disable-dev-shm-usage": {
      "value": "--disable-dev-shm-usage",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:21"
      ]
    },
    "--disable-safe-mode": {
      "value": "--disable-safe-mode",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:931"
      ]
    },
    "--disable-warnings": {
      "value": "--disable-warnings",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:46",
        "scripts/startup_test_executor.py:70",
        "scripts/startup_test_executor.py:223",
        "scripts/test_backend.py:287",
        "scripts/test_coverage_system.py:35",
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--docker": {
      "value": "--docker",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:172"
      ]
    },
    "--dry-run": {
      "value": "--dry-run",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234",
        "scripts/auto_fix_test_sizes.py:718",
        "scripts/auto_fix_test_violations.py:919",
        "scripts/optimize_test_performance.py:348",
        "scripts/standardize_l3_test_names.py:250"
      ]
    },
    "--dry-run, -n     : Show what would be renamed without doing it": {
      "value": "--dry-run, -n     : Show what would be renamed without doing it",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:301"
      ]
    },
    "--durations=20": {
      "value": "--durations=20",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:273"
      ]
    },
    "--e2e": {
      "value": "--e2e",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:159",
        "scripts/test_frontend.py:394"
      ]
    },
    "--endpoint": {
      "value": "--endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:424"
      ]
    },
    "--env": {
      "value": "--env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:56",
        "scripts/unified_test_runner.py:930"
      ]
    },
    "--environment": {
      "value": "--environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:421"
      ]
    },
    "--exclude-env": {
      "value": "--exclude-env",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:937"
      ]
    },
    "--execute": {
      "value": "--execute",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:287"
      ]
    },
    "--execute         : Actually perform the renames": {
      "value": "--execute         : Actually perform the renames",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:302"
      ]
    },
    "--execute --limit=30": {
      "value": "--execute --limit=30",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:288"
      ]
    },
    "--export": {
      "value": "--export",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:51",
        "scripts/setup_test_environment.py:347"
      ]
    },
    "--fail-fast": {
      "value": "--fail-fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:489"
      ]
    },
    "--fail-fast-mode": {
      "value": "--fail-fast-mode",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1013"
      ]
    },
    "--failed-first": {
      "value": "--failed-first",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:242",
        "scripts/test_backend.py:490"
      ]
    },
    "--fast-fail": {
      "value": "--fast-fail",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:35",
        "scripts/manage_test_services.py:139",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/unified_test_runner.py:988"
      ]
    },
    "--ff": {
      "value": "--ff",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:243",
        "scripts/test_backend.py:490"
      ]
    },
    "--file": {
      "value": "--file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:722",
        "scripts/compliance/fake_test_scanner.py:378"
      ]
    },
    "--filter": {
      "value": "--filter",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:32"
      ]
    },
    "--fix": {
      "value": "--fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:256",
        "scripts/remove_test_stubs.py:356",
        "scripts/setup_test_environment.py:346",
        "scripts/test_frontend.py:317",
        "scripts/test_frontend.py:408"
      ]
    },
    "--force": {
      "value": "--force",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:149",
        "scripts/test_frontend.py:528"
      ]
    },
    "--force-unsafe-fix": {
      "value": "--force-unsafe-fix",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:921"
      ]
    },
    "--forceExit": {
      "value": "--forceExit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:122"
      ]
    },
    "--format": {
      "value": "--format",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:777",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/manage_test_services.py:102",
        "scripts/remove_test_stubs.py:358",
        "scripts/setup_e2e_test_ports.py:32",
        "scripts/test_cors.py:434"
      ]
    },
    "--frontend-port": {
      "value": "--frontend-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:208"
      ]
    },
    "--full": {
      "value": "--full",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:80"
      ]
    },
    "--git-diff": {
      "value": "--git-diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:260"
      ]
    },
    "--github-actions": {
      "value": "--github-actions",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:109"
      ]
    },
    "--headless": {
      "value": "--headless",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:19"
      ]
    },
    "--help": {
      "value": "--help",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:298",
        "scripts/test_verify_workflow.py:32",
        "scripts/test_verify_workflow_status.py:81",
        "scripts/test_verify_workflow_status_corrected.py:88"
      ]
    },
    "--help, -h        : Show this help": {
      "value": "--help, -h        : Show this help",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:304"
      ]
    },
    "--host": {
      "value": "--host",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:56"
      ]
    },
    "--html-output": {
      "value": "--html-output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:504"
      ]
    },
    "--html=reports/tests/report.html": {
      "value": "--html=reports/tests/report.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:280"
      ]
    },
    "--install-deps": {
      "value": "--install-deps",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:416"
      ]
    },
    "--integration-first": {
      "value": "--integration-first",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:724"
      ]
    },
    "--isolation": {
      "value": "--isolation",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:512",
        "scripts/test_frontend.py:422"
      ]
    },
    "--iterations": {
      "value": "--iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:171"
      ]
    },
    "--json": {
      "value": "--json",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:53",
        "scripts/test_imports.py:53",
        "scripts/test_staging_env.py:210",
        "scripts/test_staging_startup.py:289"
      ]
    },
    "--json-output": {
      "value": "--json-output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:503"
      ]
    },
    "--json-report": {
      "value": "--json-report",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:36",
        "scripts/test_backend.py:278",
        "scripts/test_example_message_flow.py:95"
      ]
    },
    "--json-report-file=reports/tests/report.json": {
      "value": "--json-report-file=reports/tests/report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:278"
      ]
    },
    "--json-report-file=test_results.json": {
      "value": "--json-report-file=test_results.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:96"
      ]
    },
    "--keyword": {
      "value": "--keyword",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:482",
        "scripts/test_frontend.py:389"
      ]
    },
    "--level": {
      "value": "--level",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/iterative_test_fix_loop.py:31",
        "scripts/iterative_test_fix_loop.py:32",
        "scripts/iterative_test_fix_loop.py:33",
        "scripts/manage_test_services.py:139",
        "scripts/test_frontend_simple.py:75",
        "scripts/test_staging.py:55"
      ]
    },
    "--limit=": {
      "value": "--limit=",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:254"
      ]
    },
    "--limit=N, -lN    : Process only first N files": {
      "value": "--limit=N, -lN    : Process only first N files",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:303"
      ]
    },
    "--lint": {
      "value": "--lint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:407"
      ]
    },
    "--list": {
      "value": "--list",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:154"
      ]
    },
    "--list-categories": {
      "value": "--list-categories",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1048"
      ]
    },
    "--log-cli-level=INFO": {
      "value": "--log-cli-level=INFO",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:414"
      ]
    },
    "--markers": {
      "value": "--markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:483"
      ]
    },
    "--max-files": {
      "value": "--max-files",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:720",
        "scripts/auto_fix_test_violations.py:925"
      ]
    },
    "--max-workers": {
      "value": "--max-workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:961"
      ]
    },
    "--maxWorkers=": {
      "value": "--maxWorkers=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:782"
      ]
    },
    "--maxWorkers=1": {
      "value": "--maxWorkers=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--maxWorkers=2": {
      "value": "--maxWorkers=2",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38"
      ]
    },
    "--maxfail=1": {
      "value": "--maxfail=1",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:249"
      ]
    },
    "--maxfail=50": {
      "value": "--maxfail=50",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--method": {
      "value": "--method",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:428",
        "scripts/test_staging_login_automated.py:393"
      ]
    },
    "--min-coverage": {
      "value": "--min-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:496"
      ]
    },
    "--mode": {
      "value": "--mode",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:49"
      ]
    },
    "--module": {
      "value": "--module",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:45"
      ]
    },
    "--name-only": {
      "value": "--name-only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "--no-bad-test-detection": {
      "value": "--no-bad-test-detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:513"
      ]
    },
    "--no-browser": {
      "value": "--no-browser",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:116"
      ]
    },
    "--no-cache": {
      "value": "--no-cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:382"
      ]
    },
    "--no-coverage": {
      "value": "--no-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:34",
        "scripts/manage_test_services.py:139",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/unified_test_runner.py:968"
      ]
    },
    "--no-env-setup": {
      "value": "--no-env-setup",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:85"
      ]
    },
    "--no-fail-fast": {
      "value": "--no-fail-fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:57"
      ]
    },
    "--no-header": {
      "value": "--no-header",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:368",
        "scripts/test_example_message_flow.py:94",
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--no-sandbox": {
      "value": "--no-sandbox",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:20"
      ]
    },
    "--no-summary": {
      "value": "--no-summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--no-wait": {
      "value": "--no-wait",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:177"
      ]
    },
    "--noEmit": {
      "value": "--noEmit",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:335"
      ]
    },
    "--optimization": {
      "value": "--optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:373"
      ]
    },
    "--origin": {
      "value": "--origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:426"
      ]
    },
    "--output": {
      "value": "--output",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:776",
        "scripts/compliance/fake_test_scanner.py:384",
        "scripts/compliance/test_size_validator.py:521",
        "scripts/optimize_test_performance.py:345",
        "scripts/remove_test_stubs.py:360",
        "scripts/test_staging_login_automated.py:399",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:171"
      ]
    },
    "--parallel": {
      "value": "--parallel",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:488",
        "scripts/unified_test_runner.py:975"
      ]
    },
    "--passWithNoTests": {
      "value": "--passWithNoTests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:39",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--pattern": {
      "value": "--pattern",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:137",
        "scripts/manage_test_services.py:184",
        "scripts/unified_test_runner.py:1000"
      ]
    },
    "--port": {
      "value": "--port",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:57"
      ]
    },
    "--preflight-only": {
      "value": "--preflight-only",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:440"
      ]
    },
    "--profile": {
      "value": "--profile",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:505"
      ]
    },
    "--progress-mode": {
      "value": "--progress-mode",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1021"
      ]
    },
    "--project-root": {
      "value": "--project-root",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:775",
        "scripts/ci/check_test_stubs.py:111",
        "scripts/remove_test_stubs.py:361"
      ]
    },
    "--quick": {
      "value": "--quick",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:433",
        "scripts/test_staging.py:75"
      ]
    },
    "--quiet": {
      "value": "--quiet",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/ci/check_test_stubs.py:107",
        "scripts/test_backend.py:502",
        "scripts/test_backend_optimized.py:390"
      ]
    },
    "--real-e2e": {
      "value": "--real-e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:166"
      ]
    },
    "--real-llm": {
      "value": "--real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:348",
        "scripts/unified_test_runner.py:949"
      ]
    },
    "--real-services": {
      "value": "--real-services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:955"
      ]
    },
    "--reload": {
      "value": "--reload",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:58"
      ]
    },
    "--repo": {
      "value": "--repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:44",
        "scripts/test_verify_workflow.py:62",
        "scripts/test_verify_workflow_status.py:90",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147"
      ]
    },
    "--report": {
      "value": "--report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:262",
        "scripts/remove_test_stubs.py:357"
      ]
    },
    "--report-only": {
      "value": "--report-only",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:929",
        "scripts/compliance/fake_test_scanner.py:380",
        "scripts/test_cors.py:436"
      ]
    },
    "--resume-from": {
      "value": "--resume-from",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1028"
      ]
    },
    "--root-dir": {
      "value": "--root-dir",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:927"
      ]
    },
    "--run-id": {
      "value": "--run-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:106",
        "scripts/test_verify_workflow_status_corrected.py:150"
      ]
    },
    "--scan": {
      "value": "--scan",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:355"
      ]
    },
    "--scan-all": {
      "value": "--scan-all",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:374"
      ]
    },
    "--secret-file": {
      "value": "--secret-file",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:115",
        "scripts/test_workflows_with_act.py:154"
      ]
    },
    "--self-contained-html": {
      "value": "--self-contained-html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:280"
      ]
    },
    "--service": {
      "value": "--service",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:99",
        "scripts/start_test_services.py:107"
      ]
    },
    "--services": {
      "value": "--services",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:263"
      ]
    },
    "--set-secrets": {
      "value": "--set-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:71"
      ]
    },
    "--show-category-stats": {
      "value": "--show-category-stats",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1054"
      ]
    },
    "--show-warnings": {
      "value": "--show-warnings",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:511"
      ]
    },
    "--simulate": {
      "value": "--simulate",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:287"
      ]
    },
    "--spec": {
      "value": "--spec",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:227",
        "scripts/test_frontend.py:229"
      ]
    },
    "--splitting-strategy": {
      "value": "--splitting-strategy",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1039"
      ]
    },
    "--strategy": {
      "value": "--strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "--strict": {
      "value": "--strict",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:258",
        "scripts/compliance/test_size_validator.py:524"
      ]
    },
    "--strict-markers": {
      "value": "--strict-markers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:284"
      ]
    },
    "--tb=no": {
      "value": "--tb=no",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:101"
      ]
    },
    "--tb=short": {
      "value": "--tb=short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:578",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/comprehensive_test_fixer.py:367",
        "scripts/fix_common_test_issues.py:44",
        "scripts/fix_test_batch.py:271",
        "scripts/startup_test_executor.py:70",
        "scripts/startup_test_executor.py:223",
        "scripts/test_backend.py:284",
        "scripts/test_coverage_system.py:34",
        "scripts/test_example_message_flow.py:93"
      ]
    },
    "--test-all-origins": {
      "value": "--test-all-origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:438"
      ]
    },
    "--test-dir": {
      "value": "--test-dir",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:134",
        "scripts/optimize_test_performance.py:343"
      ]
    },
    "--test-websocket": {
      "value": "--test-websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:430"
      ]
    },
    "--testMatch": {
      "value": "--testMatch",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:186",
        "scripts/test_frontend.py:188",
        "scripts/test_frontend.py:190",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:40"
      ]
    },
    "--testNamePattern=": {
      "value": "--testNamePattern=",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:147"
      ]
    },
    "--testPathPattern=__tests__/(components|hooks|store)": {
      "value": "--testPathPattern=__tests__/(components|hooks|store)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58"
      ]
    },
    "--timeout=": {
      "value": "--timeout=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:381"
      ]
    },
    "--timeout=30": {
      "value": "--timeout=30",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:36"
      ]
    },
    "--timeout=5": {
      "value": "--timeout=5",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "--token": {
      "value": "--token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "--type-check": {
      "value": "--type-check",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:409"
      ]
    },
    "--update-snapshots": {
      "value": "--update-snapshots",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:402"
      ]
    },
    "--updateSnapshot": {
      "value": "--updateSnapshot",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:143"
      ]
    },
    "--validate": {
      "value": "--validate",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1060"
      ]
    },
    "--validate-tests": {
      "value": "--validate-tests",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:933"
      ]
    },
    "--verbose": {
      "value": "--verbose",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:388",
        "scripts/test_backend.py:501",
        "scripts/test_backend_optimized.py:388",
        "scripts/test_cors.py:442",
        "scripts/test_example_message_flow.py:434",
        "scripts/test_frontend.py:145",
        "scripts/test_frontend.py:417",
        "scripts/test_imports.py:49",
        "scripts/test_staging_migrations.py:247",
        "scripts/unified_test_runner.py:780"
      ]
    },
    "--version": {
      "value": "--version",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:80",
        "scripts/test_frontend.py:87",
        "scripts/test_frontend_simple.py:29",
        "scripts/test_log_introspection.py:254",
        "scripts/test_workflows_with_act.py:39",
        "scripts/test_workflows_with_act.py:56"
      ]
    },
    "--wait": {
      "value": "--wait",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:55"
      ]
    },
    "--wait-for-completion": {
      "value": "--wait-for-completion",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106"
      ]
    },
    "--wait-for-completion requires --workflow-name": {
      "value": "--wait-for-completion requires --workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:108"
      ]
    },
    "--watch": {
      "value": "--watch",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:141",
        "scripts/test_frontend.py:400"
      ]
    },
    "--window-size": {
      "value": "--window-size",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1006"
      ]
    },
    "--workers": {
      "value": "--workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:981"
      ]
    },
    "--workflow-name": {
      "value": "--workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:62",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141"
      ]
    },
    "--ws-endpoint": {
      "value": "--ws-endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:432"
      ]
    },
    "->": {
      "value": "->",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:152",
        "scripts/fix_e2e_test_imports.py:160",
        "scripts/fix_e2e_test_imports.py:169",
        "scripts/fix_test_import_errors.py:184",
        "scripts/standardize_l3_test_names.py:161",
        "scripts/test_staging_startup.py:90"
      ]
    },
    "-> @pytest.mark.": {
      "value": "-> @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:182"
      ]
    },
    "-P": {
      "value": "-P",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:116",
        "scripts/test_workflows_with_act.py:155"
      ]
    },
    "-W": {
      "value": "-W",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:114",
        "scripts/test_workflows_with_act.py:153"
      ]
    },
    "-b": {
      "value": "-b",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:410"
      ]
    },
    "-c": {
      "value": "-c",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:192",
        "scripts/test_backend.py:194",
        "scripts/test_backend.py:481",
        "scripts/test_backend_optimized.py:368",
        "scripts/test_frontend.py:388",
        "scripts/test_staging_migrations.py:146"
      ]
    },
    "-d": {
      "value": "-d",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:47"
      ]
    },
    "-e": {
      "value": "-e",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:160"
      ]
    },
    "-f": {
      "value": "-f",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:149",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/manage_test_services.py:100",
        "scripts/start_test_services.py:45"
      ]
    },
    "-h": {
      "value": "-h",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:298"
      ]
    },
    "-k": {
      "value": "-k",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:235",
        "scripts/startup_test_executor.py:237",
        "scripts/test_backend.py:271",
        "scripts/test_backend.py:482",
        "scripts/test_frontend.py:389",
        "scripts/unified_test_runner.py:687",
        "scripts/unified_test_runner.py:691",
        "scripts/unified_test_runner.py:692",
        "scripts/unified_test_runner.py:694",
        "scripts/unified_test_runner.py:696"
      ]
    },
    "-l": {
      "value": "-l",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:154",
        "scripts/standardize_l3_test_names.py:256",
        "scripts/test_frontend.py:407",
        "scripts/test_workflows_with_act.py:113"
      ]
    },
    "-m": {
      "value": "-m",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/comprehensive_test_fixer.py:364",
        "scripts/fix_test_batch.py:270",
        "scripts/startup_test_executor.py:68",
        "scripts/startup_test_executor.py:221",
        "scripts/test_backend.py:269",
        "scripts/test_backend.py:483",
        "scripts/test_coverage_system.py:25"
      ]
    },
    "-n": {
      "value": "-n",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:250",
        "scripts/test_backend.py:229",
        "scripts/test_backend.py:231",
        "scripts/test_workflows_with_act.py:156",
        "scripts/unified_test_config.py:354",
        "scripts/unified_test_runner.py:723"
      ]
    },
    "-name": {
      "value": "-name",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "-o": {
      "value": "-o",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "scripts/business_value_test_index.py:549",
        "scripts/compliance/fake_test_scanner.py:384",
        "scripts/compliance/test_size_validator.py:521",
        "scripts/test_backend_optimized.py:373"
      ]
    },
    "-p": {
      "value": "-p",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:47",
        "scripts/manage_test_services.py:101",
        "scripts/start_test_services.py:46",
        "scripts/test_backend.py:287",
        "scripts/test_backend.py:488"
      ]
    },
    "-q": {
      "value": "-q",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:69",
        "scripts/startup_test_executor.py:222",
        "scripts/test_backend.py:502",
        "scripts/test_backend_optimized.py:390",
        "scripts/test_failure_scanner.py:101",
        "scripts/unified_test_config.py:373"
      ]
    },
    "-rN": {
      "value": "-rN",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:102"
      ]
    },
    "-s": {
      "value": "-s",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:223",
        "scripts/test_redis_config_critical_failure.py:340",
        "scripts/test_secret_manager_builder_critical.py:842"
      ]
    },
    "-t": {
      "value": "-t",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:409"
      ]
    },
    "-type": {
      "value": "-type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "-u": {
      "value": "-u",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:402"
      ]
    },
    "-v": {
      "value": "-v",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:414",
        "auth_service/tests/test_auth_comprehensive.py:578",
        "auth_service/tests/test_oauth_state_validation.py:303",
        "auth_service/tests/unit/test_refresh_endpoint.py:334",
        "scripts/compliance/fake_test_scanner.py:388",
        "scripts/fix_common_test_issues.py:43",
        "scripts/startup_test_executor.py:69",
        "scripts/startup_test_executor.py:222",
        "scripts/test_backend.py:224",
        "scripts/test_backend.py:501"
      ]
    },
    "-vv": {
      "value": "-vv",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:222",
        "scripts/unified_test_config.py:371",
        "scripts/unified_test_runner.py:727"
      ]
    },
    "-w": {
      "value": "-w",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:400"
      ]
    },
    "-x": {
      "value": "-x",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:248",
        "scripts/test_backend.py:489",
        "scripts/unified_test_config.py:377",
        "scripts/unified_test_runner.py:731"
      ]
    },
    "-xvs": {
      "value": "-xvs",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:733",
        "scripts/comprehensive_test_fixer.py:366",
        "scripts/fix_test_batch.py:271"
      ]
    },
    ".": {
      "value": ".",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71",
        "auth_service/test_url_construction.py:209",
        "auth_service/tests/test_auth_comprehensive.py:140",
        "auth_service/tests/test_auth_port_configuration.py:381",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:76",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:95",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:95"
      ]
    },
    ". **": {
      "value": ". **",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:293"
      ]
    },
    ". AuthConfig should validate port consistency.": {
      "value": ". AuthConfig should validate port consistency.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:290"
      ]
    },
    ". Consider consolidating or improving test coverage.": {
      "value": ". Consider consolidating or improving test coverage.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:478"
      ]
    },
    ". Service will fail to respond correctly with this configuration.": {
      "value": ". Service will fail to respond correctly with this configuration.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:333"
      ]
    },
    ". Testing URL:": {
      "value": ". Testing URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:178"
      ]
    },
    ". This mismatch prevents proper service communication.": {
      "value": ". This mismatch prevents proper service communication.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:171"
      ]
    },
    ". This suggests hardcoded configuration is overriding environment variables.": {
      "value": ". This suggests hardcoded configuration is overriding environment variables.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:200"
      ]
    },
    ". This will cause binding/URL mismatches.": {
      "value": ". This will cause binding/URL mismatches.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:138"
      ]
    },
    ". URL:": {
      "value": ". URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:59"
      ]
    },
    ". [": {
      "value": ". [",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:240"
      ]
    },
    ". `": {
      "value": ". `",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:885"
      ]
    },
    ".\"\"\"": {
      "value": ".\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:575"
      ]
    },
    ".\"\"\"\n    return {\"status\": \"ok\"}": {
      "value": ".\"\"\"\n    return {\"status\": \"ok\"}",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:165"
      ]
    },
    "...": {
      "value": "...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:71",
        "scripts/apply_fast_test_decorators.py:124",
        "scripts/compliance/fake_test_scanner.py:67",
        "scripts/compliance/real_test_requirements_enforcer.py:534",
        "scripts/debug_cors_test.py:39",
        "scripts/final_test_status_check.py:90",
        "scripts/final_test_status_check.py:112",
        "scripts/fix_authentication_test_tokens.py:58",
        "scripts/fix_authentication_test_tokens.py:59",
        "scripts/fix_authentication_test_tokens.py:60"
      ]
    },
    "...\n[bold]Redirect URI:[/bold]": {
      "value": "...\n[bold]Redirect URI:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:153"
      ]
    },
    "... and": {
      "value": "... and",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:437",
        "scripts/align_test_imports.py:449",
        "scripts/check_test_compliance.py:169",
        "scripts/check_test_compliance.py:179",
        "scripts/check_test_compliance.py:187",
        "scripts/check_test_import_order.py:93",
        "scripts/ci/check_test_stubs.py:52",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/real_test_requirements_enforcer.py:539",
        "scripts/compliance/real_test_validator.py:305"
      ]
    },
    "...\" https://api.staging.netrasystems.ai/health": {
      "value": "...\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:320"
      ]
    },
    "...[/cyan]": {
      "value": "...[/cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:193",
        "scripts/test_oauth_local.py:254"
      ]
    },
    "../reports/frontend-coverage": {
      "value": "../reports/frontend-coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:136"
      ]
    },
    ".1%": {
      "value": ".1%",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:302",
        "auth_service/tests/auth-service-down-critical-scenarios.py:303",
        "scripts/compliance/demo_test_size_enforcement.py:97",
        "scripts/compliance/test_refactor_helper.py:722",
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    ".1f": {
      "value": ".1f",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:465",
        "scripts/analyze_test_overlap.py:563",
        "scripts/automated_test_fix_loop.py:143",
        "scripts/autonomous_review/test_reviewer.py:134",
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/business_value_test_index.py:694",
        "scripts/business_value_test_index.py:701",
        "scripts/business_value_test_index.py:738",
        "scripts/business_value_test_index.py:743"
      ]
    },
    ".2%": {
      "value": ".2%",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1122"
      ]
    },
    ".2f": {
      "value": ".2f",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:56",
        "auth_service/tests/auth-service-down-critical-scenarios.py:111",
        "auth_service/tests/auth-service-down-critical-scenarios.py:121",
        "auth_service/tests/auth-service-down-critical-scenarios.py:346",
        "auth_service/tests/auth-service-down-critical-scenarios.py:353",
        "auth_service/tests/auth-service-down-critical-scenarios.py:496",
        "scripts/real_service_test_metrics.py:125",
        "scripts/real_service_test_metrics.py:162",
        "scripts/startup_test_executor.py:97",
        "scripts/startup_test_executor.py:169"
      ]
    },
    ".3f": {
      "value": ".3f",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:185",
        "scripts/real_service_test_metrics.py:186",
        "scripts/real_service_test_metrics.py:187",
        "scripts/test_websocket_simple.py:37"
      ]
    },
    ".4f": {
      "value": ".4f",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:150",
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    ".<40": {
      "value": ".<40",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:184"
      ]
    },
    ".apps.googleusercontent.com": {
      "value": ".apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:76"
      ]
    },
    ".cache": {
      "value": ".cache",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:129"
      ]
    },
    ".coverage": {
      "value": ".coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/business_value_test_index.py:546",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:26"
      ]
    },
    ".coveragerc": {
      "value": ".coveragerc",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:106"
      ]
    },
    ".eggs": {
      "value": ".eggs",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132"
      ]
    },
    ".env": {
      "value": ".env",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:131",
        "scripts/compliance/project_test_validator.py:42",
        "scripts/generate_test_audit.py:22",
        "scripts/setup_test_environment.py:49"
      ]
    },
    ".env.development.local": {
      "value": ".env.development.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:170"
      ]
    },
    ".env.staging": {
      "value": ".env.staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:18"
      ]
    },
    ".env.test": {
      "value": ".env.test",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:50",
        "scripts/test_backend.py:61",
        "scripts/unified_test_config.py:166",
        "scripts/unified_test_config.py:175",
        "scripts/unified_test_config.py:184",
        "scripts/unified_test_runner.py:251"
      ]
    },
    ".env.test*": {
      "value": ".env.test*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    ".git": {
      "value": ".git",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:130",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/fix_all_test_issues.py:16",
        "scripts/generate_test_audit.py:23",
        "scripts/remove_test_stubs.py:79"
      ]
    },
    ".github": {
      "value": ".github",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:27"
      ]
    },
    ".idea": {
      "value": ".idea",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".jpg": {
      "value": ".jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87"
      ]
    },
    ".js": {
      "value": ".js",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".json": {
      "value": ".json",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:372",
        "scripts/iterative_test_fix_loop.py:22",
        "scripts/test_staging_deployment.py:225",
        "scripts/test_websocket_cors_comprehensive.py:335",
        "scripts/test_workflows_with_act.py:198",
        "scripts/unified_test_runner.py:884"
      ]
    },
    ".jsx": {
      "value": ".jsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".mypy_cache": {
      "value": ".mypy_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/generate_test_audit.py:26"
      ]
    },
    ".py": {
      "value": ".py",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:149",
        "scripts/analyze_test_overlap.py:98",
        "scripts/auto_fix_test_sizes.py:277",
        "scripts/auto_fix_test_violations.py:106",
        "scripts/auto_fix_test_violations.py:374",
        "scripts/automated_test_fix_loop.py:36",
        "scripts/autonomous_review/test_reviewer.py:304",
        "scripts/autonomous_review/test_reviewer.py:307",
        "scripts/autonomous_review/test_reviewer.py:309",
        "scripts/autonomous_review/test_reviewer.py:310"
      ]
    },
    ".pytest_cache": {
      "value": ".pytest_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:25",
        "scripts/remove_test_stubs.py:80"
      ]
    },
    ".return_value =": {
      "value": ".return_value =",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    ".ruff_cache": {
      "value": ".ruff_cache",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133"
      ]
    },
    ".secrets": {
      "value": ".secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:71",
        "scripts/test_workflows_with_act.py:90",
        "scripts/test_workflows_with_act.py:115",
        "scripts/test_workflows_with_act.py:154"
      ]
    },
    ".service_discovery": {
      "value": ".service_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:64"
      ]
    },
    ".staging.netrasystems.ai": {
      "value": ".staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:155",
        "scripts/setup_staging_test_account.py:163"
      ]
    },
    ".test": {
      "value": ".test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121"
      ]
    },
    ".test.": {
      "value": ".test.",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/remove_test_stubs.py:99"
      ]
    },
    ".test.ts": {
      "value": ".test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:323",
        "scripts/test_frontend.py:175"
      ]
    },
    ".test.tsx": {
      "value": ".test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:205",
        "scripts/autonomous_review/test_reviewer.py:207",
        "scripts/autonomous_review/test_reviewer.py:321",
        "scripts/autonomous_review/test_reviewer.py:322",
        "scripts/test_frontend.py:175"
      ]
    },
    ".test_backups_": {
      "value": ".test_backups_",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:753"
      ]
    },
    ".tox": {
      "value": ".tox",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:25"
      ]
    },
    ".ts": {
      "value": ".ts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".tsx": {
      "value": ".tsx",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:319",
        "scripts/compliance/real_test_requirements_enforcer.py:174",
        "scripts/remove_test_stubs.py:84"
      ]
    },
    ".venv": {
      "value": ".venv",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:78",
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19",
        "scripts/generate_test_audit.py:22"
      ]
    },
    ".vs": {
      "value": ".vs",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    ".vscode": {
      "value": ".vscode",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:135"
      ]
    },
    "/": {
      "value": "/",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:209",
        "auth_service/test_actual_staging_credentials.py:172",
        "auth_service/test_staging_db_connection.py:317",
        "auth_service/test_url_construction.py:238",
        "scripts/analyze_test_overlap.py:115",
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_violations.py:806",
        "scripts/automated_test_fix_loop.py:104",
        "scripts/automated_test_fix_loop.py:133",
        "scripts/business_value_test_index.py:148"
      ]
    },
    "/ directory...": {
      "value": "/ directory...",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:245"
      ]
    },
    "/**/*.test.[jt]s?(x)": {
      "value": "/**/*.test.[jt]s?(x)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:178",
        "scripts/test_frontend.py:180"
      ]
    },
    "//": {
      "value": "//",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:71"
      ]
    },
    "/10 successful": {
      "value": "/10 successful",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:268"
      ]
    },
    "/100": {
      "value": "/100",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:64",
        "scripts/simple_test_fix_loop.py:93",
        "scripts/simple_test_fix_loop.py:94"
      ]
    },
    "/100 ---": {
      "value": "/100 ---",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:12"
      ]
    },
    "/100 ===": {
      "value": "/100 ===",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:121"
      ]
    },
    "/3:": {
      "value": "/3:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:240"
      ]
    },
    "/__init__.py": {
      "value": "/__init__.py",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:235",
        "scripts/fix_test_batch.py:97"
      ]
    },
    "/_next/static": {
      "value": "/_next/static",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:134"
      ]
    },
    "/`": {
      "value": "/`",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:199"
      ]
    },
    "/`:": {
      "value": "/`:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:176"
      ]
    },
    "/api/admin/create_admin": {
      "value": "/api/admin/create_admin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:252"
      ]
    },
    "/api/admin/delete_user": {
      "value": "/api/admin/delete_user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:251"
      ]
    },
    "/api/admin/shutdown": {
      "value": "/api/admin/shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:541"
      ]
    },
    "/api/admin/users": {
      "value": "/api/admin/users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:250"
      ]
    },
    "/api/agents": {
      "value": "/api/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:108"
      ]
    },
    "/api/config/public": {
      "value": "/api/config/public",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:40"
      ]
    },
    "/api/health": {
      "value": "/api/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:183",
        "auth_service/tests/auth-service-down-critical-scenarios.py:370",
        "scripts/test_cors_implementation.py:39",
        "scripts/test_staging_auth_e2e.py:37",
        "scripts/test_staging_env.py:121"
      ]
    },
    "/api/settings": {
      "value": "/api/settings",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:81"
      ]
    },
    "/api/status": {
      "value": "/api/status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:145"
      ]
    },
    "/api/threads": {
      "value": "/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:324",
        "scripts/test_cors_implementation.py:41",
        "scripts/test_staging_auth_e2e.py:203",
        "scripts/test_staging_deployment.py:104",
        "scripts/test_staging_env.py:69",
        "scripts/test_staging_env.py:107",
        "scripts/test_staging_login_automated.py:80"
      ]
    },
    "/api/threads/": {
      "value": "/api/threads/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:346"
      ]
    },
    "/api/threads/test-thread-id": {
      "value": "/api/threads/test-thread-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:42"
      ]
    },
    "/api/user/data": {
      "value": "/api/user/data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:233"
      ]
    },
    "/api/user/me": {
      "value": "/api/user/me",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:70",
        "scripts/test_staging_login_automated.py:79"
      ]
    },
    "/api/version": {
      "value": "/api/version",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:144"
      ]
    },
    "/api/workspaces": {
      "value": "/api/workspaces",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:106"
      ]
    },
    "/api/ws": {
      "value": "/api/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:98"
      ]
    },
    "/app/tests/integration/": {
      "value": "/app/tests/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:361"
      ]
    },
    "/auth/": {
      "value": "/auth/",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:258"
      ]
    },
    "/auth/callback": {
      "value": "/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:249",
        "auth_service/tests/test_auth_comprehensive.py:263",
        "auth_service/tests/test_auth_comprehensive.py:267",
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "/auth/callback?code=google-auth-code&state=": {
      "value": "/auth/callback?code=google-auth-code&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:292"
      ]
    },
    "/auth/callback?code=test-code&state=": {
      "value": "/auth/callback?code=test-code&state=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:138",
        "auth_service/tests/test_oauth_state_validation.py:156",
        "auth_service/tests/test_oauth_state_validation.py:174"
      ]
    },
    "/auth/config": {
      "value": "/auth/config",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:143"
      ]
    },
    "/auth/dev-login": {
      "value": "/auth/dev-login",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:230"
      ]
    },
    "/auth/dev/login": {
      "value": "/auth/dev/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:236",
        "scripts/test_staging_auth_e2e.py:65"
      ]
    },
    "/auth/dev_login": {
      "value": "/auth/dev_login",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:243"
      ]
    },
    "/auth/google": {
      "value": "/auth/google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:168",
        "auth_service/tests/test_auth_comprehensive.py:200",
        "auth_service/tests/test_auth_comprehensive.py:215"
      ]
    },
    "/auth/health": {
      "value": "/auth/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:44",
        "scripts/test_staging_deployment.py:85"
      ]
    },
    "/auth/login": {
      "value": "/auth/login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:345",
        "auth_service/tests/test_auth_comprehensive.py:361",
        "auth_service/tests/test_auth_comprehensive.py:395",
        "auth_service/tests/test_auth_comprehensive.py:504",
        "auth_service/tests/test_auth_comprehensive.py:509",
        "scripts/test_auth_integration.py:113",
        "scripts/test_staging_deployment.py:127"
      ]
    },
    "/auth/login?provider=google": {
      "value": "/auth/login?provider=google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:403",
        "auth_service/tests/test_oauth_state_validation.py:87",
        "auth_service/tests/test_oauth_state_validation.py:235",
        "scripts/test_oauth_local.py:186"
      ]
    },
    "/auth/logout": {
      "value": "/auth/logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:379",
        "scripts/test_staging_auth_e2e.py:300"
      ]
    },
    "/auth/me": {
      "value": "/auth/me",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:486",
        "scripts/test_oauth_local.py:302"
      ]
    },
    "/auth/refresh": {
      "value": "/auth/refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:96",
        "auth_service/tests/integration/test_refresh_integration.py:124",
        "auth_service/tests/integration/test_refresh_integration.py:153",
        "auth_service/tests/integration/test_refresh_integration.py:178",
        "auth_service/tests/integration/test_refresh_integration.py:210",
        "auth_service/tests/integration/test_refresh_integration.py:244",
        "auth_service/tests/integration/test_refresh_integration.py:254",
        "auth_service/tests/integration/test_refresh_integration.py:268",
        "auth_service/tests/integration/test_refresh_integration.py:277",
        "auth_service/tests/integration/test_refresh_integration.py:286"
      ]
    },
    "/auth/register": {
      "value": "/auth/register",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:418"
      ]
    },
    "/auth/status": {
      "value": "/auth/status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:301"
      ]
    },
    "/auth/token": {
      "value": "/auth/token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "/auth/validate": {
      "value": "/auth/validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:98",
        "auth_service/tests/auth-service-down-critical-scenarios.py:143",
        "auth_service/tests/auth-service-down-critical-scenarios.py:270",
        "auth_service/tests/auth-service-down-critical-scenarios.py:329",
        "auth_service/tests/auth-service-down-critical-scenarios.py:442",
        "auth_service/tests/auth-service-down-critical-scenarios.py:475",
        "scripts/test_auth_integration.py:89",
        "scripts/test_staging_auth_e2e.py:104",
        "scripts/test_staging_auth_e2e.py:263",
        "scripts/test_staging_auth_e2e.py:311"
      ]
    },
    "/auth/verify": {
      "value": "/auth/verify",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:113"
      ]
    },
    "/cloudsql/": {
      "value": "/cloudsql/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:232",
        "auth_service/test_staging_db_connection.py:242",
        "auth_service/test_url_construction.py:142",
        "auth_service/test_url_construction.py:163",
        "scripts/test_auth_database_sessions.py:97",
        "scripts/test_auth_database_sessions.py:257",
        "scripts/test_ssl_certificates_staging.py:43"
      ]
    },
    "/cloudsql/invalid-format": {
      "value": "/cloudsql/invalid-format",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:192"
      ]
    },
    "/cloudsql/netra-staging:us-central1:staging-shared-postgres": {
      "value": "/cloudsql/netra-staging:us-central1:staging-shared-postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:34",
        "auth_service/test_actual_staging_credentials.py:72",
        "auth_service/test_staging_db_connection.py:39",
        "auth_service/test_staging_db_connection.py:55",
        "auth_service/test_url_construction.py:35",
        "scripts/test_database_url_builder_comprehensive.py:22",
        "scripts/test_ssl_certificates_staging.py:110",
        "scripts/test_staging_migrations.py:185"
      ]
    },
    "/cloudsql/prod-project:us-central1:prod-instance": {
      "value": "/cloudsql/prod-project:us-central1:prod-instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:262"
      ]
    },
    "/cloudsql/project:region:instance": {
      "value": "/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:203",
        "scripts/test_database_url_builder_comprehensive.py:225"
      ]
    },
    "/dashboard": {
      "value": "/dashboard",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:231"
      ]
    },
    "/docs": {
      "value": "/docs",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:43",
        "scripts/test_staging_env.py:57"
      ]
    },
    "/e2e/": {
      "value": "/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:284",
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/health": {
      "value": "/health",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:291",
        "auth_service/tests/test_auth_comprehensive.py:300",
        "auth_service/tests/test_auth_comprehensive.py:318",
        "auth_service/tests/test_auth_comprehensive.py:448",
        "auth_service/tests/test_auth_comprehensive.py:469",
        "auth_service/tests/test_auth_comprehensive.py:527",
        "scripts/debug_cors_test.py:61",
        "scripts/setup_staging_test_account.py:189",
        "scripts/setup_staging_test_account.py:204",
        "scripts/test_auth_integration.py:30"
      ]
    },
    "/health/": {
      "value": "/health/",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:84"
      ]
    },
    "/health/live": {
      "value": "/health/live",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:181"
      ]
    },
    "/health/ready": {
      "value": "/health/ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:180"
      ]
    },
    "/integration/": {
      "value": "/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:360"
      ]
    },
    "/messages": {
      "value": "/messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:346"
      ]
    },
    "/netra_staging": {
      "value": "/netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:109",
        "auth_service/test_url_construction.py:110"
      ]
    },
    "/postgres": {
      "value": "/postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:73"
      ]
    },
    "/profile": {
      "value": "/profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:232"
      ]
    },
    "/secrets/": {
      "value": "/secrets/",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:18",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_clickhouse.py:52",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:18"
      ]
    },
    "/secure": {
      "value": "/secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:450"
      ]
    },
    "/test": {
      "value": "/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:57"
      ]
    },
    "/tests/": {
      "value": "/tests/",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:163"
      ]
    },
    "/tests/e2e/": {
      "value": "/tests/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/tests/integration/": {
      "value": "/tests/integration/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:360"
      ]
    },
    "/tests/unified/e2e/": {
      "value": "/tests/unified/e2e/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:356"
      ]
    },
    "/tests/unit/": {
      "value": "/tests/unit/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:365"
      ]
    },
    "/unit/": {
      "value": "/unit/",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:365",
        "scripts/optimize_test_performance.py:140"
      ]
    },
    "/v1": {
      "value": "/v1",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:450"
      ]
    },
    "/versions/latest": {
      "value": "/versions/latest",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:18",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_clickhouse.py:52",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:18"
      ]
    },
    "/websocket": {
      "value": "/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:98"
      ]
    },
    "/ws": {
      "value": "/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:98",
        "scripts/test_cold_start_e2e.py:451",
        "scripts/test_cold_start_e2e.py:451",
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_cors.py:432",
        "scripts/test_staging_env.py:25",
        "scripts/test_websocket_cors_comprehensive.py:190"
      ]
    },
    "/ws/config": {
      "value": "/ws/config",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:88",
        "scripts/test_websocket_middleware.py:43"
      ]
    },
    "/ws/health": {
      "value": "/ws/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:181",
        "scripts/test_websocket_dev_mode.py:118"
      ]
    },
    "/ws/test": {
      "value": "/ws/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:58",
        "scripts/test_websocket_middleware.py:89"
      ]
    },
    "0": {
      "value": "0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:57",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:113",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:171",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:367",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:426"
      ]
    },
    "0.0.0.0": {
      "value": "0.0.0.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:64",
        "scripts/test_websocket_dev_mode.py:56"
      ]
    },
    "1": {
      "value": "1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:193",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:200",
        "scripts/test_backend.py:78",
        "scripts/test_backend.py:106",
        "scripts/unified_test_runner.py:235",
        "scripts/unified_test_runner.py:505",
        "scripts/unified_test_runner.py:505"
      ]
    },
    "1' OR '1'='1": {
      "value": "1' OR '1'='1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:356"
      ]
    },
    "1. **Fix Critical Violations First** - Address mock component implementations": {
      "value": "1. **Fix Critical Violations First** - Address mock component implementations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:564"
      ]
    },
    "1. **Immediate**: Apply `@fast_test` decorator to tests with sleep calls": {
      "value": "1. **Immediate**: Apply `@fast_test` decorator to tests with sleep calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:326"
      ]
    },
    "1. **Resource Utilization Analysis**\n           - GPU utilization averaging 67% with peaks at 95%\n           - Memory usage shows gradual increase pattern\n           - CPU bottleneck detected during data preprocessing\n        \n        2. **Cost Optimization Opportunities**\n           - Switch to spot instances for batch workloads (30% savings)\n           - Implement request batching for 40% throughput improvement\n           - Consider model quantization for inference optimization\n        \n        3. **Performance Recommendations**\n           - Enable tensor parallelism for large models\n           - Implement gradient checkpointing to reduce memory\n           - Use mixed precision training for 2x speedup\n        \n        4. **Scaling Considerations**\n           - Current setup can handle 10x load with modifications\n           - Recommend horizontal scaling for API endpoints\n           - Database connection pooling needs adjustment": {
      "value": "1. **Resource Utilization Analysis**\n           - GPU utilization averaging 67% with peaks at 95%\n           - Memory usage shows gradual increase pattern\n           - CPU bottleneck detected during data preprocessing\n        \n        2. **Cost Optimization Opportunities**\n           - Switch to spot instances for batch workloads (30% savings)\n           - Implement request batching for 40% throughput improvement\n           - Consider model quantization for inference optimization\n        \n        3. **Performance Recommendations**\n           - Enable tensor parallelism for large models\n           - Implement gradient checkpointing to reduce memory\n           - Use mixed precision training for 2x speedup\n        \n        4. **Scaling Considerations**\n           - Current setup can handle 10x load with modifications\n           - Recommend horizontal scaling for API endpoints\n           - Database connection pooling needs adjustment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:181"
      ]
    },
    "1. API Key Test:": {
      "value": "1. API Key Test:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:314"
      ]
    },
    "1. AUTH MIDDLEWARE ISSUE:": {
      "value": "1. AUTH MIDDLEWARE ISSUE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:144"
      ]
    },
    "1. Add WebSocket paths to auth middleware exclusions:": {
      "value": "1. Add WebSocket paths to auth middleware exclusions:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:192"
      ]
    },
    "1. Auth Middleware Configuration:": {
      "value": "1. Auth Middleware Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:125"
      ]
    },
    "1. Back up all files first": {
      "value": "1. Back up all files first",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:952"
      ]
    },
    "1. Base URL:": {
      "value": "1. Base URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:122"
      ]
    },
    "1. Check for missing dependencies: pip install -r requirements.txt": {
      "value": "1. Check for missing dependencies: pip install -r requirements.txt",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:109"
      ]
    },
    "1. Check that secrets are correctly set in Secret Manager": {
      "value": "1. Check that secrets are correctly set in Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:231"
      ]
    },
    "1. Checking Alembic configuration files...": {
      "value": "1. Checking Alembic configuration files...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:101"
      ]
    },
    "1. Checking LLMTestModel enum...": {
      "value": "1. Checking LLMTestModel enum...",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:138"
      ]
    },
    "1. Create a Google OAuth client for local development": {
      "value": "1. Create a Google OAuth client for local development",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:109"
      ]
    },
    "1. Database name mismatch ('postgres' vs expected 'netra_staging')": {
      "value": "1. Database name mismatch ('postgres' vs expected 'netra_staging')",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:176"
      ]
    },
    "1. Environment safety checks...": {
      "value": "1. Environment safety checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:180"
      ]
    },
    "1. Extract setup logic into fixture or helper method": {
      "value": "1. Extract setup logic into fixture or helper method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:211"
      ]
    },
    "1. Fetching individual PostgreSQL secrets...": {
      "value": "1. Fetching individual PostgreSQL secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:37"
      ]
    },
    "1. Fetching staging configuration...": {
      "value": "1. Fetching staging configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:222"
      ]
    },
    "1. Fetching staging database configuration...": {
      "value": "1. Fetching staging database configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:35",
        "scripts/test_staging_migrations.py:34"
      ]
    },
    "1. Fetching staging database secrets...": {
      "value": "1. Fetching staging database secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:205"
      ]
    },
    "1. IMMEDIATE FIX: Use 'postgres' database as configured in Secret Manager": {
      "value": "1. IMMEDIATE FIX: Use 'postgres' database as configured in Secret Manager",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:104"
      ]
    },
    "1. Missing mocks for external services (ClickHouse, Redis, WebSocket)": {
      "value": "1. Missing mocks for external services (ClickHouse, Redis, WebSocket)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:76"
      ]
    },
    "1. Mock component function fix": {
      "value": "1. Mock component function fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:382"
      ]
    },
    "1. Move fixtures to appropriate service-level conftest.py": {
      "value": "1. Move fixtures to appropriate service-level conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:90"
      ]
    },
    "1. Preparing migration environment...": {
      "value": "1. Preparing migration environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:222"
      ]
    },
    "1. Production environment URLs...": {
      "value": "1. Production environment URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:271"
      ]
    },
    "1. Quick real e2e test (with mock services):": {
      "value": "1. Quick real e2e test (with mock services):",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:151"
      ]
    },
    "1. Replace GPT_4 with GEMINI_2_5_FLASH": {
      "value": "1. Replace GPT_4 with GEMINI_2_5_FLASH",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:186"
      ]
    },
    "1. Review SPEC/no_test_stubs.xml for guidelines": {
      "value": "1. Review SPEC/no_test_stubs.xml for guidelines",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:85"
      ]
    },
    "1. Review the changes with: git diff": {
      "value": "1. Review the changes with: git diff",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:242"
      ]
    },
    "1. Review the report above": {
      "value": "1. Review the report above",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1018"
      ]
    },
    "1. Run tests to verify functionality: python unified_test_runner.py": {
      "value": "1. Run tests to verify functionality: python unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:293"
      ]
    },
    "1. Run tests to verify markers work correctly:": {
      "value": "1. Run tests to verify markers work correctly:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:211"
      ]
    },
    "1. Run the authentication tests to verify fixes": {
      "value": "1. Run the authentication tests to verify fixes",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:172"
      ]
    },
    "1. Set GOOGLE_CLIENT_ID in .env file": {
      "value": "1. Set GOOGLE_CLIENT_ID in .env file",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:399"
      ]
    },
    "1. Split by test categories (unit/integration/e2e)": {
      "value": "1. Split by test categories (unit/integration/e2e)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:195"
      ]
    },
    "1. Split by test categories:": {
      "value": "1. Split by test categories:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:369"
      ]
    },
    "1. Test Size Validator - scans for violations": {
      "value": "1. Test Size Validator - scans for violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:205"
      ]
    },
    "1. Test Size Validator:": {
      "value": "1. Test Size Validator:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:178"
      ]
    },
    "1. Test files MUST be ≤300 lines (SPEC/testing.xml)": {
      "value": "1. Test files MUST be ≤300 lines (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:265"
      ]
    },
    "1. Testing Authentication Tracking...": {
      "value": "1. Testing Authentication Tracking...",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:112"
      ]
    },
    "1. Testing CORS Preflight Requests (OPTIONS)": {
      "value": "1. Testing CORS Preflight Requests (OPTIONS)",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:110"
      ]
    },
    "1. Testing URL conversion...": {
      "value": "1. Testing URL conversion...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:75"
      ]
    },
    "1. Testing URL validation...": {
      "value": "1. Testing URL validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:168"
      ]
    },
    "1. Testing auth service imports...": {
      "value": "1. Testing auth service imports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:34"
      ]
    },
    "1. Testing direct token validation with auth service...": {
      "value": "1. Testing direct token validation with auth service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:56"
      ]
    },
    "1. Testing engine creation...": {
      "value": "1. Testing engine creation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:125"
      ]
    },
    "1. Testing service health checks...": {
      "value": "1. Testing service health checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:31"
      ]
    },
    "1. Testing session management patterns...": {
      "value": "1. Testing session management patterns...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:303"
      ]
    },
    "1. Testing snake_case format (refresh_token)...": {
      "value": "1. Testing snake_case format (refresh_token)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:30"
      ]
    },
    "1. VERIFY which database should be used:": {
      "value": "1. VERIFY which database should be used:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:121"
      ]
    },
    "1. Validating configuration...": {
      "value": "1. Validating configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:32",
        "scripts/test_database_url_builder_comprehensive.py:89"
      ]
    },
    "1. `": {
      "value": "1. `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:591"
      ]
    },
    "1.5s": {
      "value": "1.5s",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:40"
      ]
    },
    "10": {
      "value": "10",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:185",
        "scripts/unified_test_runner.py:1126"
      ]
    },
    "10.0.0.50": {
      "value": "10.0.0.50",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:89",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252"
      ]
    },
    "1000": {
      "value": "1000",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:99"
      ]
    },
    "12": {
      "value": "12",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1130"
      ]
    },
    "123": {
      "value": "123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:411",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106",
        "scripts/test_workflows_with_act.py:190"
      ]
    },
    "12345": {
      "value": "12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:126"
      ]
    },
    "123456": {
      "value": "123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:155"
      ]
    },
    "123456789": {
      "value": "123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:43"
      ]
    },
    "123456789-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com": {
      "value": "123456789-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:37"
      ]
    },
    "127.0.0.1": {
      "value": "127.0.0.1",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:69",
        "scripts/test_backend_port_binding.py:31",
        "scripts/test_cors.py:313",
        "scripts/test_cors.py:346",
        "scripts/test_ssl_certificates_staging.py:115"
      ]
    },
    "127.0.0.1:3000": {
      "value": "127.0.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:209"
      ]
    },
    "15": {
      "value": "15",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:403",
        "scripts/test_cors.py:409",
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:108",
        "scripts/test_secret_manager_builder_critical.py:496",
        "scripts/test_secret_manager_builder_critical.py:626",
        "scripts/unified_test_runner.py:901",
        "scripts/unified_test_runner.py:901",
        "scripts/unified_test_runner.py:1095"
      ]
    },
    "192.168.1.": {
      "value": "192.168.1.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:133",
        "auth_service/tests/test_session_security_cycles_36_40.py:293"
      ]
    },
    "192.168.1.100": {
      "value": "192.168.1.100",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:65",
        "auth_service/tests/test_session_security_cycles_36_40.py:187",
        "auth_service/tests/test_session_security_cycles_36_40.py:225",
        "auth_service/tests/test_session_security_cycles_36_40.py:241"
      ]
    },
    "192.168.1.200": {
      "value": "192.168.1.200",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:147",
        "auth_service/tests/test_session_security_cycles_36_40.py:322"
      ]
    },
    "192.168.1.201": {
      "value": "192.168.1.201",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:156"
      ]
    },
    "1h 1m": {
      "value": "1h 1m",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:34"
      ]
    },
    "1m 30s": {
      "value": "1m 30s",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:33"
      ]
    },
    "2": {
      "value": "2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:194",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:204"
      ]
    },
    "2 occurrences": {
      "value": "2 occurrences",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:208"
      ]
    },
    "2. **Extract Shared Utilities** - Move common mocks to test/fixtures directory": {
      "value": "2. **Extract Shared Utilities** - Move common mocks to test/fixtures directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:565"
      ]
    },
    "2. **Short-term**: Mock external dependencies (network, LLM, database)": {
      "value": "2. **Short-term**: Mock external dependencies (network, LLM, database)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:327"
      ]
    },
    "2. Bearer Token Test:": {
      "value": "2. Bearer Token Test:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:318"
      ]
    },
    "2. Building database URL...": {
      "value": "2. Building database URL...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:237"
      ]
    },
    "2. Building database URLs using DatabaseURLBuilder...": {
      "value": "2. Building database URLs using DatabaseURLBuilder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:51"
      ]
    },
    "2. Building database URLs...": {
      "value": "2. Building database URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:221"
      ]
    },
    "2. Building migration URLs...": {
      "value": "2. Building migration URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:50"
      ]
    },
    "2. CORS Middleware Configuration:": {
      "value": "2. CORS Middleware Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:131"
      ]
    },
    "2. Check compliance improvement:": {
      "value": "2. Check compliance improvement:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:213"
      ]
    },
    "2. Check git status: git status": {
      "value": "2. Check git status: git status",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:294"
      ]
    },
    "2. Check that JWT tokens are properly validated": {
      "value": "2. Check that JWT tokens are properly validated",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:173"
      ]
    },
    "2. Checking DatabaseManager methods...": {
      "value": "2. Checking DatabaseManager methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:39"
      ]
    },
    "2. Delete the violating conftest.py files": {
      "value": "2. Delete the violating conftest.py files",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:91"
      ]
    },
    "2. Different access patterns...": {
      "value": "2. Different access patterns...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:277"
      ]
    },
    "2. Full real e2e test (with actual LLM):": {
      "value": "2. Full real e2e test (with actual LLM):",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:154"
      ]
    },
    "2. Large file splitting": {
      "value": "2. Large file splitting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:383"
      ]
    },
    "2. Look for circular imports in the error messages above": {
      "value": "2. Look for circular imports in the error messages above",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:110"
      ]
    },
    "2. Manually refactor files with violations": {
      "value": "2. Manually refactor files with violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1019"
      ]
    },
    "2. Migration URL safety...": {
      "value": "2. Migration URL safety...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:193"
      ]
    },
    "2. Missing auth service tables in the 'postgres' database": {
      "value": "2. Missing auth service tables in the 'postgres' database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:177"
      ]
    },
    "2. PROPER FIX: Create 'netra_staging' database for staging environment": {
      "value": "2. PROPER FIX: Create 'netra_staging' database for staging environment",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:105"
      ]
    },
    "2. Properly integrate WebSocket CORS middleware:": {
      "value": "2. Properly integrate WebSocket CORS middleware:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:194"
      ]
    },
    "2. Replace GPT_35_TURBO with GEMINI_2_5_FLASH": {
      "value": "2. Replace GPT_35_TURBO with GEMINI_2_5_FLASH",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:187"
      ]
    },
    "2. Replace test stubs with real implementations": {
      "value": "2. Replace test stubs with real implementations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:86"
      ]
    },
    "2. Run mock-only tests: pytest -m mock_only": {
      "value": "2. Run mock-only tests: pytest -m mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:243"
      ]
    },
    "2. Scanning test files for deprecated models...": {
      "value": "2. Scanning test files for deprecated models...",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:142"
      ]
    },
    "2. Set GOOGLE_CLIENT_SECRET in .env file": {
      "value": "2. Set GOOGLE_CLIENT_SECRET in .env file",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:401"
      ]
    },
    "2. Set authorized redirect URI to: http://localhost:3000/auth/callback": {
      "value": "2. Set authorized redirect URI to: http://localhost:3000/auth/callback",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:110"
      ]
    },
    "2. Split by functionality being tested": {
      "value": "2. Split by functionality being tested",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:196"
      ]
    },
    "2. Split by test classes:": {
      "value": "2. Split by test classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:376"
      ]
    },
    "2. Split into multiple focused test cases": {
      "value": "2. Split into multiple focused test cases",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:212"
      ]
    },
    "2. Test Refactoring Helper - suggests splits": {
      "value": "2. Test Refactoring Helper - suggests splits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:206"
      ]
    },
    "2. Test Refactoring Helper:": {
      "value": "2. Test Refactoring Helper:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:184"
      ]
    },
    "2. Test functions MUST be ≤8 lines (SPEC/testing.xml)": {
      "value": "2. Test functions MUST be ≤8 lines (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:266"
      ]
    },
    "2. Testing Actual GET Requests": {
      "value": "2. Testing Actual GET Requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:126"
      ]
    },
    "2. Testing Alembic dry run...": {
      "value": "2. Testing Alembic dry run...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:136"
      ]
    },
    "2. Testing Cloud SQL detection...": {
      "value": "2. Testing Cloud SQL detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:40"
      ]
    },
    "2. Testing Error Tracking...": {
      "value": "2. Testing Error Tracking...",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:117"
      ]
    },
    "2. Testing SSL connection...": {
      "value": "2. Testing SSL connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:64"
      ]
    },
    "2. Testing TCP detection...": {
      "value": "2. Testing TCP detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:96"
      ]
    },
    "2. Testing URL validation methods...": {
      "value": "2. Testing URL validation methods...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:329"
      ]
    },
    "2. Testing camelCase format (refreshToken) - FRONTEND FORMAT...": {
      "value": "2. Testing camelCase format (refreshToken) - FRONTEND FORMAT...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:52"
      ]
    },
    "2. Testing dev login...": {
      "value": "2. Testing dev login...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:59"
      ]
    },
    "2. Testing invalid URLs...": {
      "value": "2. Testing invalid URLs...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:188"
      ]
    },
    "2. Testing migration commands...": {
      "value": "2. Testing migration commands...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:242"
      ]
    },
    "2. Testing token validation through backend service...": {
      "value": "2. Testing token validation through backend service...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:80"
      ]
    },
    "2. Tests expecting specific implementation details that have changed": {
      "value": "2. Tests expecting specific implementation details that have changed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:77"
      ]
    },
    "2. UPDATE Secret Manager if needed:": {
      "value": "2. UPDATE Secret Manager if needed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:125"
      ]
    },
    "2. Use dry-run mode to preview changes": {
      "value": "2. Use dry-run mode to preview changes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:953"
      ]
    },
    "2. Verify network connectivity to ClickHouse Cloud": {
      "value": "2. Verify network connectivity to ClickHouse Cloud",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:232"
      ]
    },
    "2. WEBSOCKET CORS WRAPPING:": {
      "value": "2. WEBSOCKET CORS WRAPPING:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:149"
      ]
    },
    "2.0": {
      "value": "2.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "20": {
      "value": "20",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:93",
        "scripts/test_discovery_report.py:95",
        "scripts/test_log_introspection.py:420"
      ]
    },
    "2024-01-15T10:00:00Z backend | psycopg2.OperationalError: connection refused": {
      "value": "2024-01-15T10:00:00Z backend | psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:114"
      ]
    },
    "2024-01-15T10:00:01Z backend | psycopg2.OperationalError: connection refused": {
      "value": "2024-01-15T10:00:01Z backend | psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:115"
      ]
    },
    "2024-01-15T10:00:02Z backend | psycopg2.OperationalError: connection refused": {
      "value": "2024-01-15T10:00:02Z backend | psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:116"
      ]
    },
    "2024-01-15T10:00:03Z auth | JWT decode error: invalid signature": {
      "value": "2024-01-15T10:00:03Z auth | JWT decode error: invalid signature",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:117"
      ]
    },
    "2024-01-15T10:00:04Z auth | JWT decode error: invalid signature": {
      "value": "2024-01-15T10:00:04Z auth | JWT decode error: invalid signature",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:118"
      ]
    },
    "2024-01-15T10:00:05Z frontend | CORS blocked by policy": {
      "value": "2024-01-15T10:00:05Z frontend | CORS blocked by policy",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:119"
      ]
    },
    "2024-01-15T10:30:45.123456Z backend | psycopg2.OperationalError: could not connect to server": {
      "value": "2024-01-15T10:30:45.123456Z backend | psycopg2.OperationalError: could not connect to server",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:42"
      ]
    },
    "2024-01-15T10:31:00.000000Z auth | ERROR: 401 unauthorized access attempt": {
      "value": "2024-01-15T10:31:00.000000Z auth | ERROR: 401 unauthorized access attempt",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:46"
      ]
    },
    "2024-01-15T10:32:00.000000Z frontend | Error: ECONNREFUSED - Connection refused": {
      "value": "2024-01-15T10:32:00.000000Z frontend | Error: ECONNREFUSED - Connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:50"
      ]
    },
    "2024-01-15T10:33:00.000000Z backend | KeyError: 'DATABASE_URL' missing required config": {
      "value": "2024-01-15T10:33:00.000000Z backend | KeyError: 'DATABASE_URL' missing required config",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:54"
      ]
    },
    "2024-01-15T10:34:00.000000Z worker | FATAL: out of memory, cannot allocate 1GB": {
      "value": "2024-01-15T10:34:00.000000Z worker | FATAL: out of memory, cannot allocate 1GB",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:58"
      ]
    },
    "2024-01-15T10:35:00.000000Z backend | ModuleNotFoundError: No module named 'redis'": {
      "value": "2024-01-15T10:35:00.000000Z backend | ModuleNotFoundError: No module named 'redis'",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:62"
      ]
    },
    "2024-01-15T10:36:00.000000Z backend | WARNING: Request timeout after 30s": {
      "value": "2024-01-15T10:36:00.000000Z backend | WARNING: Request timeout after 30s",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:66"
      ]
    },
    "2024-01-15T10:37:00.000000Z backend | websocket connection failed: 1006": {
      "value": "2024-01-15T10:37:00.000000Z backend | websocket connection failed: 1006",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:70"
      ]
    },
    "2024-01-15T10:38:00.000000Z frontend | CORS blocked: No Access-Control-Allow-Origin": {
      "value": "2024-01-15T10:38:00.000000Z frontend | CORS blocked: No Access-Control-Allow-Origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:74"
      ]
    },
    "2024-01-15T10:39:00.000000Z backend | SSL certificate verify failed: self signed": {
      "value": "2024-01-15T10:39:00.000000Z backend | SSL certificate verify failed: self signed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:78"
      ]
    },
    "24h": {
      "value": "24h",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:71",
        "scripts/test_data_validator_backup.py:83",
        "scripts/test_data_validator_backup.py:106",
        "scripts/test_data_validator_backup.py:135",
        "scripts/test_data_validator_backup.py:151"
      ]
    },
    "2d": {
      "value": "2d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83",
        "scripts/test_secret_manager_builder_critical.py:496"
      ]
    },
    "3": {
      "value": "3",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:240"
      ]
    },
    "3. **Medium-term**: Refactor large test files into smaller, focused modules": {
      "value": "3. **Medium-term**: Refactor large test files into smaller, focused modules",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:328"
      ]
    },
    "3. **Use Real Components** - Replace mocks with actual component instances": {
      "value": "3. **Use Real Components** - Replace mocks with actual component instances",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:566"
      ]
    },
    "3. Add to your .env file:": {
      "value": "3. Add to your .env file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:111"
      ]
    },
    "3. Browser Session:": {
      "value": "3. Browser Session:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:322"
      ]
    },
    "3. Check firewall rules and IP allowlisting": {
      "value": "3. Check firewall rules and IP allowlisting",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:233"
      ]
    },
    "3. Commit changes:": {
      "value": "3. Commit changes:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:215"
      ]
    },
    "3. Commit changes: git add . && git commit -m 'Standardize L3 test naming'": {
      "value": "3. Commit changes: git add . && git commit -m 'Standardize L3 test naming'",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:295"
      ]
    },
    "3. Extract assertion logic into helper methods": {
      "value": "3. Extract assertion logic into helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:213"
      ]
    },
    "3. Extract helper functions:": {
      "value": "3. Extract helper functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:382"
      ]
    },
    "3. Function size reduction": {
      "value": "3. Function size reduction",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:384"
      ]
    },
    "3. Integration tests running as unit tests": {
      "value": "3. Integration tests running as unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:78"
      ]
    },
    "3. Manually refactor instead of using auto-fix": {
      "value": "3. Manually refactor instead of using auto-fix",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:954"
      ]
    },
    "3. Middleware Order:": {
      "value": "3. Middleware Order:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:137"
      ]
    },
    "3. Move test helpers to app/tests/ directory": {
      "value": "3. Move test helpers to app/tests/ directory",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:87"
      ]
    },
    "3. Need to run migrations or use correct staging database": {
      "value": "3. Need to run migrations or use correct staging database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:178"
      ]
    },
    "3. RUN database migrations on correct database:": {
      "value": "3. RUN database migrations on correct database:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:128"
      ]
    },
    "3. Replace CLAUDE_3_OPUS with GEMINI_2_5_PRO": {
      "value": "3. Replace CLAUDE_3_OPUS with GEMINI_2_5_PRO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:188"
      ]
    },
    "3. Run real service tests: ENABLE_REAL_LLM_TESTING=true pytest -m real_services": {
      "value": "3. Run real service tests: ENABLE_REAL_LLM_TESTING=true pytest -m real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:244"
      ]
    },
    "3. SECURITY HEADERS:": {
      "value": "3. SECURITY HEADERS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:153"
      ]
    },
    "3. SOLUTION": {
      "value": "3. SOLUTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:143"
      ]
    },
    "3. Safety considerations...": {
      "value": "3. Safety considerations...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:256"
      ]
    },
    "3. Set JWT_SECRET_KEY in .env file (must match auth service)": {
      "value": "3. Set JWT_SECRET_KEY in .env file (must match auth service)",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:403"
      ]
    },
    "3. Skip security headers for WebSocket upgrade requests:": {
      "value": "3. Skip security headers for WebSocket upgrade requests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:197"
      ]
    },
    "3. Split by functionality, test type, or scenario": {
      "value": "3. Split by functionality, test type, or scenario",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:267"
      ]
    },
    "3. Split by test class if using class-based tests": {
      "value": "3. Split by test class if using class-based tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:197"
      ]
    },
    "3. Test Runner Integration - pre-run validation": {
      "value": "3. Test Runner Integration - pre-run validation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:207"
      ]
    },
    "3. Test Runner Integration:": {
      "value": "3. Test Runner Integration:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:190"
      ]
    },
    "3. Testing URL generation...": {
      "value": "3. Testing URL generation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:45",
        "scripts/test_database_url_builder_comprehensive.py:101"
      ]
    },
    "3. Testing URL normalization for migrations...": {
      "value": "3. Testing URL normalization for migrations...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:65"
      ]
    },
    "3. Testing URL normalization...": {
      "value": "3. Testing URL normalization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:239"
      ]
    },
    "3. Testing async connection with asyncpg...": {
      "value": "3. Testing async connection with asyncpg...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:84"
      ]
    },
    "3. Testing auth service URL conversion...": {
      "value": "3. Testing auth service URL conversion...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:244"
      ]
    },
    "3. Testing if backend requires service authentication...": {
      "value": "3. Testing if backend requires service authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:107"
      ]
    },
    "3. Testing simple format (token)...": {
      "value": "3. Testing simple format (token)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:76"
      ]
    },
    "3. Testing token validation...": {
      "value": "3. Testing token validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:95"
      ]
    },
    "3. UPDATE: Secret Manager to use 'netra_staging' if that's the intended DB": {
      "value": "3. UPDATE: Secret Manager to use 'netra_staging' if that's the intended DB",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:106"
      ]
    },
    "3. Update test imports if necessary": {
      "value": "3. Update test imports if necessary",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:92"
      ]
    },
    "3. Use established patterns like fixtures and helper functions": {
      "value": "3. Use established patterns like fixtures and helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1020"
      ]
    },
    "3. Verify all module files exist and have no syntax errors": {
      "value": "3. Verify all module files exist and have no syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:111"
      ]
    },
    "3. Verify service-to-service authentication works": {
      "value": "3. Verify service-to-service authentication works",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:174"
      ]
    },
    "3. With specific LLM model:": {
      "value": "3. With specific LLM model:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:157"
      ]
    },
    "3000": {
      "value": "3000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:185",
        "auth_service/tests/test_auth_port_configuration.py:376",
        "scripts/test_gtm_loading.py:83"
      ]
    },
    "304612253870": {
      "value": "304612253870",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:155",
        "scripts/test_secret_manager_builder_critical.py:563"
      ]
    },
    "30s": {
      "value": "30s",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:32",
        "scripts/test_example_message_flow.py:288",
        "scripts/test_example_message_flow.py:410"
      ]
    },
    "3d": {
      "value": "3d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "4": {
      "value": "4",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:106",
        "scripts/test_discovery_report.py:108",
        "scripts/test_discovery_report.py:115",
        "scripts/test_discovery_report.py:116",
        "scripts/test_discovery_report.py:117",
        "scripts/test_discovery_report.py:118",
        "scripts/test_discovery_report.py:121"
      ]
    },
    "4. **Long-term**: Implement comprehensive performance monitoring in CI": {
      "value": "4. **Long-term**: Implement comprehensive performance monitoring in CI",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:329"
      ]
    },
    "4. **Mock External APIs Only** - Keep mocking limited to HTTP clients, databases": {
      "value": "4. **Mock External APIs Only** - Keep mocking limited to HTTP clients, databases",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:567"
      ]
    },
    "4. Check that __init__.py files exist in all package directories": {
      "value": "4. Check that __init__.py files exist in all package directories",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:112"
      ]
    },
    "4. Compliance Examples - properly sized tests": {
      "value": "4. Compliance Examples - properly sized tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:208"
      ]
    },
    "4. Extract common setup to fixtures or helper functions": {
      "value": "4. Extract common setup to fixtures or helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:268"
      ]
    },
    "4. Mock reduction in integration tests": {
      "value": "4. Mock reduction in integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:385"
      ]
    },
    "4. Move helper functions to separate test utilities module": {
      "value": "4. Move helper functions to separate test utilities module",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:198"
      ]
    },
    "4. Review error messages above for specific issues": {
      "value": "4. Review error messages above for specific issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:234"
      ]
    },
    "4. Run 'python scripts/remove_test_stubs.py --scan' locally": {
      "value": "4. Run 'python scripts/remove_test_stubs.py --scan' locally",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:88"
      ]
    },
    "4. Run tests after each refactoring to ensure correctness": {
      "value": "4. Run tests after each refactoring to ensure correctness",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1021"
      ]
    },
    "4. Split by feature being tested:": {
      "value": "4. Split by feature being tested:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:386"
      ]
    },
    "4. Start auth service: python -m auth_service.auth_core.main": {
      "value": "4. Start auth service: python -m auth_service.auth_core.main",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:407"
      ]
    },
    "4. TEST connection in staging environment:": {
      "value": "4. TEST connection in staging environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:132"
      ]
    },
    "4. Testing empty body...": {
      "value": "4. Testing empty body...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:98"
      ]
    },
    "4. Testing engine creation configuration...": {
      "value": "4. Testing engine creation configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:265"
      ]
    },
    "4. Testing environment-specific URL selection...": {
      "value": "4. Testing environment-specific URL selection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:52"
      ]
    },
    "4. Testing sync connection with psycopg2...": {
      "value": "4. Testing sync connection with psycopg2...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:100"
      ]
    },
    "4. Testing token refresh (snake_case)...": {
      "value": "4. Testing token refresh (snake_case)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:124"
      ]
    },
    "4. Update hardcoded strings 'gpt-4' to 'gemini-2.0-flash-exp'": {
      "value": "4. Update hardcoded strings 'gpt-4' to 'gemini-2.0-flash-exp'",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:189"
      ]
    },
    "4. Use parameterized tests for multiple scenarios": {
      "value": "4. Use parameterized tests for multiple scenarios",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:214"
      ]
    },
    "4. View Examples:": {
      "value": "4. View Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:196"
      ]
    },
    "4d": {
      "value": "4d",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83"
      ]
    },
    "5. **Split Large Functions** - Break down oversized test functions": {
      "value": "5. **Split Large Functions** - Break down oversized test functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:568"
      ]
    },
    "5. Debug information...": {
      "value": "5. Debug information...",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:59"
      ]
    },
    "5. Remove any OPENAI_API_KEY requirements from test configurations": {
      "value": "5. Remove any OPENAI_API_KEY requirements from test configurations",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:190"
      ]
    },
    "5. Start backend service: python scripts/dev_launcher.py": {
      "value": "5. Start backend service: python scripts/dev_launcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:410"
      ]
    },
    "5. Testing token refresh (camelCase - frontend format)...": {
      "value": "5. Testing token refresh (camelCase - frontend format)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:158"
      ]
    },
    "5. Testing wrong field name...": {
      "value": "5. Testing wrong field name...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:125"
      ]
    },
    "5. Use parameterized tests to reduce duplication": {
      "value": "5. Use parameterized tests to reduce duplication",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:269"
      ]
    },
    "5. VERIFY auth operations work end-to-end:": {
      "value": "5. VERIFY auth operations work end-to-end:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:136"
      ]
    },
    "50ms": {
      "value": "50ms",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:39"
      ]
    },
    "5432": {
      "value": "5432",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:35",
        "auth_service/test_staging_db_connection.py:40",
        "auth_service/test_url_construction.py:36",
        "scripts/test_database_url_builder_comprehensive.py:23",
        "scripts/test_database_url_builder_comprehensive.py:80",
        "scripts/test_database_url_builder_comprehensive.py:263",
        "scripts/test_ssl_certificates_staging.py:127"
      ]
    },
    "6": {
      "value": "6",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166",
        "scripts/cleanup_test_processes.py:166"
      ]
    },
    "6. Check OAuth redirect configuration in backend": {
      "value": "6. Check OAuth redirect configuration in backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:414"
      ]
    },
    "6. Testing authenticated backend API call...": {
      "value": "6. Testing authenticated backend API call...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:193"
      ]
    },
    "6.1f": {
      "value": "6.1f",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:496",
        "scripts/test_secret_manager_builder_critical.py:626",
        "scripts/test_secret_manager_builder_critical.py:626",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "7. Check token generation in auth service": {
      "value": "7. Check token generation in auth service",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:420"
      ]
    },
    "7. Enable dev login: Set ALLOW_DEV_LOGIN=true in .env": {
      "value": "7. Enable dev login: Set ALLOW_DEV_LOGIN=true in .env",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:418"
      ]
    },
    "7. Testing session persistence...": {
      "value": "7. Testing session persistence...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:230"
      ]
    },
    "701982941522": {
      "value": "701982941522",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:141",
        "scripts/test_staging_clickhouse.py:28"
      ]
    },
    "8": {
      "value": "8",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:240"
      ]
    },
    "8. Testing logout...": {
      "value": "8. Testing logout...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:291"
      ]
    },
    "8000": {
      "value": "8000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:185",
        "scripts/test_websocket_dev_mode.py:57"
      ]
    },
    "8001": {
      "value": "8001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:119",
        "auth_service/tests/test_auth_port_configuration.py:185",
        "auth_service/tests/test_auth_port_configuration.py:376"
      ]
    },
    "8080": {
      "value": "8080",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:118"
      ]
    },
    "8081": {
      "value": "8081",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:41",
        "auth_service/tests/test_auth_port_configuration.py:42",
        "auth_service/tests/test_auth_port_configuration.py:78",
        "auth_service/tests/test_auth_port_configuration.py:101",
        "auth_service/tests/test_auth_port_configuration.py:117",
        "auth_service/tests/test_auth_port_configuration.py:117",
        "auth_service/tests/test_auth_port_configuration.py:118",
        "auth_service/tests/test_auth_port_configuration.py:119",
        "auth_service/tests/test_auth_port_configuration.py:153",
        "auth_service/tests/test_auth_port_configuration.py:154"
      ]
    },
    "8443": {
      "value": "8443",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:117",
        "scripts/test_staging_clickhouse.py:153"
      ]
    },
    "999999999": {
      "value": "999999999",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:150"
      ]
    },
    ":": {
      "value": ":",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:204",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:325",
        "auth_service/tests/factories/permission_factory.py:57",
        "auth_service/tests/factories/permission_factory.py:89",
        "auth_service/tests/factories/permission_factory.py:110",
        "auth_service/tests/factories/permission_factory.py:126",
        "auth_service/tests/factories/permission_factory.py:147",
        "auth_service/tests/factories/permission_factory.py:166",
        "auth_service/tests/factories/permission_factory.py:167",
        "auth_service/tests/test_session_security_cycles_36_40.py:69"
      ]
    },
    ":\n    \"\"\"Comprehensive test suite for": {
      "value": ":\n    \"\"\"Comprehensive test suite for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:121"
      ]
    },
    ":\n    \"\"\"Test suite for": {
      "value": ":\n    \"\"\"Test suite for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:197"
      ]
    },
    ": <not set>": {
      "value": ": <not set>",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:45"
      ]
    },
    ": Available": {
      "value": ": Available",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:155"
      ]
    },
    ": Cannot validate cross-service JWT secret consistency - different implementations prevent unified security validation": {
      "value": ": Cannot validate cross-service JWT secret consistency - different implementations prevent unified security validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:831"
      ]
    },
    ": Contains legacy pattern '": {
      "value": ": Contains legacy pattern '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:182"
      ]
    },
    ": Could not check (": {
      "value": ": Could not check (",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:164"
      ]
    },
    ": Custom runner without ACT comment": {
      "value": ": Custom runner without ACT comment",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:238"
      ]
    },
    ": Error -": {
      "value": ": Error -",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:107",
        "scripts/test_staging_login_automated.py:225",
        "scripts/test_staging_login_automated.py:290"
      ]
    },
    ": FAILED WITH EXCEPTION": {
      "value": ": FAILED WITH EXCEPTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:372",
        "scripts/test_database_url_builder_comprehensive.py:324",
        "scripts/test_ssl_certificates_staging.py:280",
        "scripts/test_staging_migrations.py:300"
      ]
    },
    ": Failed (": {
      "value": ": Failed (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:103"
      ]
    },
    ": File not found": {
      "value": ": File not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:287"
      ]
    },
    ": Found '": {
      "value": ": Found '",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:171"
      ]
    },
    ": Found (value length:": {
      "value": ": Found (value length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:50"
      ]
    },
    ": HTTP": {
      "value": ": HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:49",
        "scripts/test_staging_login_automated.py:210"
      ]
    },
    ": Implement": {
      "value": ": Implement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:211"
      ]
    },
    ": MISSING - No API key": {
      "value": ": MISSING - No API key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:115"
      ]
    },
    ": Missing": {
      "value": ": Missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:52"
      ]
    },
    ": NOT AVAILABLE": {
      "value": ": NOT AVAILABLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:295"
      ]
    },
    ": NOT using shared CORS config": {
      "value": ": NOT using shared CORS config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:161"
      ]
    },
    ": No redirect (": {
      "value": ": No redirect (",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:283"
      ]
    },
    ": No tests run": {
      "value": ": No tests run",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:343"
      ]
    },
    ": OK (non-JSON response)": {
      "value": ": OK (non-JSON response)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:201"
      ]
    },
    ": OK - API key configured (from": {
      "value": ": OK - API key configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:113"
      ]
    },
    ": Status": {
      "value": ": Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:161"
      ]
    },
    ": Success": {
      "value": ": Success",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:97"
      ]
    },
    ": Timeout": {
      "value": ": Timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:218"
      ]
    },
    ": Unauthorized (mock auth not enabled)": {
      "value": ": Unauthorized (mock auth not enabled)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:100"
      ]
    },
    ": Unexpected redirect": {
      "value": ": Unexpected redirect",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:277"
      ]
    },
    ": Uses shared CORS config": {
      "value": ": Uses shared CORS config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:159"
      ]
    },
    ": expected": {
      "value": ": expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:186",
        "auth_service/tests/utils/assertion_helpers.py:202"
      ]
    },
    ": netra_backend='": {
      "value": ": netra_backend='",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:394"
      ]
    },
    ": wrong client ID (got": {
      "value": ": wrong client ID (got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:318"
      ]
    },
    ": wrong client secret": {
      "value": ": wrong client secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:322"
      ]
    },
    ":(\\d+)": {
      "value": ":(\\d+)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:52",
        "auth_service/tests/test_auth_port_configuration.py:91",
        "auth_service/tests/test_auth_port_configuration.py:161",
        "auth_service/tests/test_auth_port_configuration.py:230",
        "auth_service/tests/test_auth_port_configuration.py:284",
        "auth_service/tests/test_auth_port_configuration.py:327",
        "auth_service/tests/test_auth_port_configuration.py:355",
        "auth_service/tests/test_auth_port_configuration.py:412"
      ]
    },
    "://": {
      "value": "://",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:121"
      ]
    },
    "://***@": {
      "value": "://***@",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:121"
      ]
    },
    ":3000": {
      "value": ":3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:83"
      ]
    },
    ":8000": {
      "value": ":8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:83"
      ]
    },
    "::": {
      "value": "::",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:370",
        "scripts/analyze_test_overlap.py:371",
        "scripts/ci/check_test_stubs.py:100",
        "scripts/ci/check_test_stubs.py:100",
        "scripts/fix_test_batch.py:297",
        "scripts/iterative_test_fix_loop.py:71",
        "scripts/iterative_test_fix_loop.py:72",
        "scripts/test_backend_optimized.py:311",
        "scripts/test_backend_optimized.py:312",
        "scripts/test_example_message_flow.py:157"
      ]
    },
    ":auth_service: JWT secret contains weak pattern '": {
      "value": ":auth_service: JWT secret contains weak pattern '",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:750"
      ]
    },
    ":auth_service: JWT secret too short (": {
      "value": ":auth_service: JWT secret too short (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:741"
      ]
    },
    ":auth_service: JWT security validation failed -": {
      "value": ":auth_service: JWT security validation failed -",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:755"
      ]
    },
    ":netra_backend: Security validation failed -": {
      "value": ":netra_backend: Security validation failed -",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:731"
      ]
    },
    ";": {
      "value": ";",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:379"
      ]
    },
    "<!DOCTYPE html>\n<html>\n<head>\n    <title>Real Service Test Report</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        h1 { color: #333; border-bottom: 3px solid #007bff; padding-bottom: 10px; }\n        h2 { color: #555; margin-top: 30px; }\n        .metric-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007bff; }\n        .success { color: #28a745; font-weight: bold; }\n        .failure { color: #dc3545; font-weight: bold; }\n        .warning { color: #ffc107; }\n        table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n        th { background: #007bff; color: white; padding: 10px; text-align: left; }\n        td { padding: 10px; border-bottom: 1px solid #ddd; }\n        tr:hover { background: #f5f5f5; }\n        .chart { margin: 20px 0; }\n        .progress-bar { width: 100%; height: 30px; background: #e9ecef; border-radius: 5px; overflow: hidden; }\n        .progress-fill { height: 100%; background: linear-gradient(90deg, #28a745, #20c997); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; }\n    </style>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Real Service Test Report</h1>": {
      "value": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Real Service Test Report</title>\n    <style>\n        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }\n        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }\n        h1 { color: #333; border-bottom: 3px solid #007bff; padding-bottom: 10px; }\n        h2 { color: #555; margin-top: 30px; }\n        .metric-card { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007bff; }\n        .success { color: #28a745; font-weight: bold; }\n        .failure { color: #dc3545; font-weight: bold; }\n        .warning { color: #ffc107; }\n        table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n        th { background: #007bff; color: white; padding: 10px; text-align: left; }\n        td { padding: 10px; border-bottom: 1px solid #ddd; }\n        tr:hover { background: #f5f5f5; }\n        .chart { margin: 20px 0; }\n        .progress-bar { width: 100%; height: 30px; background: #e9ecef; border-radius: 5px; overflow: hidden; }\n        .progress-fill { height: 100%; background: linear-gradient(90deg, #28a745, #20c997); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; }\n    </style>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Real Service Test Report</h1>",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:236"
      ]
    },
    "</div></body></html>": {
      "value": "</div></body></html>",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:267"
      ]
    },
    "<30": {
      "value": "<30",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:149"
      ]
    },
    "=": {
      "value": "=",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:151",
        "auth_service/test_actual_staging_credentials.py:171",
        "auth_service/test_staging_db_connection.py:280",
        "auth_service/test_staging_db_connection.py:316",
        "auth_service/test_url_construction.py:217",
        "auth_service/test_url_construction.py:237",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:120",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:83",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:92",
        "auth_service/tests/utils/assertion_helpers.py:45"
      ]
    },
    "=== AUTHENTICATION TESTS ===": {
      "value": "=== AUTHENTICATION TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:113"
      ]
    },
    "=== Agent Initialization Tests ===": {
      "value": "=== Agent Initialization Tests ===",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:185"
      ]
    },
    "=== Analyzing Connection Issue ===": {
      "value": "=== Analyzing Connection Issue ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:156"
      ]
    },
    "=== Analyzing Database Name Configuration ===": {
      "value": "=== Analyzing Database Name Configuration ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:93"
      ]
    },
    "=== BASIC FUNCTIONALITY TESTS ===": {
      "value": "=== BASIC FUNCTIONALITY TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:82"
      ]
    },
    "=== Checking Cloud SQL Proxy Status ===": {
      "value": "=== Checking Cloud SQL Proxy Status ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:224"
      ]
    },
    "=== Checking PostgreSQL Availability ===": {
      "value": "=== Checking PostgreSQL Availability ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:129"
      ]
    },
    "=== Checking SSOT Compliance ===": {
      "value": "=== Checking SSOT Compliance ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:143"
      ]
    },
    "=== Final Summary ===": {
      "value": "=== Final Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:92"
      ]
    },
    "=== KEY FINDINGS ===": {
      "value": "=== KEY FINDINGS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:143"
      ]
    },
    "=== L3 Test File Standardization ===": {
      "value": "=== L3 Test File Standardization ===",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:226"
      ]
    },
    "=== MIDDLEWARE ANALYSIS ===": {
      "value": "=== MIDDLEWARE ANALYSIS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:122"
      ]
    },
    "=== Mock Analysis Summary ===": {
      "value": "=== Mock Analysis Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:166"
      ]
    },
    "=== Next Steps to Resolve Auth Database Issue ===": {
      "value": "=== Next Steps to Resolve Auth Database Issue ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:118"
      ]
    },
    "=== OUTPUT FORMAT TESTS ===": {
      "value": "=== OUTPUT FORMAT TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:157"
      ]
    },
    "=== Progress:": {
      "value": "=== Progress:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:121"
      ]
    },
    "=== RECOMMENDATIONS ===": {
      "value": "=== RECOMMENDATIONS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:191"
      ]
    },
    "=== REPOSITORY HANDLING TESTS ===": {
      "value": "=== REPOSITORY HANDLING TESTS ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:135"
      ]
    },
    "=== STARTING WEBSOCKET MIDDLEWARE AUDIT ===": {
      "value": "=== STARTING WEBSOCKET MIDDLEWARE AUDIT ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:159"
      ]
    },
    "=== SUMMARY ===": {
      "value": "=== SUMMARY ===",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:399"
      ]
    },
    "=== Summary ===": {
      "value": "=== Summary ===",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:281"
      ]
    },
    "=== Test Results ===": {
      "value": "=== Test Results ===",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:201"
      ]
    },
    "=== Testing Auth Client Environment Detection ===": {
      "value": "=== Testing Auth Client Environment Detection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:13"
      ]
    },
    "=== Testing Auth Service Database Connection ===": {
      "value": "=== Testing Auth Service Database Connection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:67"
      ]
    },
    "=== Testing AuthConfig ===": {
      "value": "=== Testing AuthConfig ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:168"
      ]
    },
    "=== Testing AuthConfig Integration ===": {
      "value": "=== Testing AuthConfig Integration ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:128"
      ]
    },
    "=== Testing Backend Service Database Connection ===": {
      "value": "=== Testing Backend Service Database Connection ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:24"
      ]
    },
    "=== Testing Cloud SQL Connector Availability ===": {
      "value": "=== Testing Cloud SQL Connector Availability ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:110"
      ]
    },
    "=== Testing Connection with AuthConfig URL ===": {
      "value": "=== Testing Connection with AuthConfig URL ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:189"
      ]
    },
    "=== Testing DatabaseURLBuilder ===": {
      "value": "=== Testing DatabaseURLBuilder ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:117"
      ]
    },
    "=== Testing Development CORS Configuration ===": {
      "value": "=== Testing Development CORS Configuration ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:22"
      ]
    },
    "=== Testing Direct asyncpg Connection ===": {
      "value": "=== Testing Direct asyncpg Connection ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:50"
      ]
    },
    "=== Testing Middleware Environment Defaults ===": {
      "value": "=== Testing Middleware Environment Defaults ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:67"
      ]
    },
    "=== Testing OAuth Config Fallback ===": {
      "value": "=== Testing OAuth Config Fallback ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:127"
      ]
    },
    "=== Testing Production CORS Configuration ===": {
      "value": "=== Testing Production CORS Configuration ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:97"
      ]
    },
    "=== Testing Schema Defaults ===": {
      "value": "=== Testing Schema Defaults ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:109"
      ]
    },
    "=== Testing Staging CORS Configuration ===": {
      "value": "=== Testing Staging CORS Configuration ===",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:53"
      ]
    },
    "=== Testing TCP Fallback Connection ===": {
      "value": "=== Testing TCP Fallback Connection ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:87"
      ]
    },
    "=== Testing URL Construction ===": {
      "value": "=== Testing URL Construction ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:54"
      ]
    },
    "=== Testing URL Generation with Actual Credentials ===": {
      "value": "=== Testing URL Generation with Actual Credentials ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:53"
      ]
    },
    "=== Top 10 Unjustified Mocks to Fix ===": {
      "value": "=== Top 10 Unjustified Mocks to Fix ===",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:174"
      ]
    },
    "=== Validating Staging Credentials ===": {
      "value": "=== Validating Staging Credentials ===",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:254"
      ]
    },
    "=====================================": {
      "value": "=====================================",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:459"
      ]
    },
    ">": {
      "value": ">",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:99",
        "scripts/test_error_monitor_logic.py:102",
        "scripts/validate_llm_test_models.py:172"
      ]
    },
    "?": {
      "value": "?",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    "? Password seems short (": {
      "value": "? Password seems short (",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:184"
      ]
    },
    "? Using non-standard user:": {
      "value": "? Using non-standard user:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:179"
      ]
    },
    "?host=/cloudsql/": {
      "value": "?host=/cloudsql/",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:107",
        "auth_service/test_url_construction.py:108"
      ]
    },
    "?token=": {
      "value": "?token=",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:125"
      ]
    },
    "@": {
      "value": "@",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:41",
        "scripts/auto_fix_test_sizes.py:566",
        "scripts/compliance/test_fixer.py:195",
        "scripts/test_config_loading.py:119",
        "scripts/test_config_loading.py:120"
      ]
    },
    "@/utils/connection-status-utils": {
      "value": "@/utils/connection-status-utils",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:10"
      ]
    },
    "@abstractmethod": {
      "value": "@abstractmethod",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "@example.com": {
      "value": "@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/user_factory.py:38"
      ]
    },
    "@fast_test": {
      "value": "@fast_test",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:87",
        "scripts/apply_fast_test_decorators.py:93"
      ]
    },
    "@gmail.com": {
      "value": "@gmail.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:190"
      ]
    },
    "@localhost:": {
      "value": "@localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:148"
      ]
    },
    "@mock_justified": {
      "value": "@mock_justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:81"
      ]
    },
    "@patch": {
      "value": "@patch",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:385",
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_requirements_enforcer.py:359"
      ]
    },
    "@patch\\([\\'\"]([^\\'\"]*)[\\'\"].*?\\)": {
      "value": "@patch\\([\\'\"]([^\\'\"]*)[\\'\"].*?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:96"
      ]
    },
    "@pytest.": {
      "value": "@pytest.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:153"
      ]
    },
    "@pytest.mark.": {
      "value": "@pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:94",
        "scripts/add_pytest_markers.py:99",
        "scripts/add_test_markers.py:82",
        "scripts/add_test_markers.py:116"
      ]
    },
    "@pytest.mark.e2e": {
      "value": "@pytest.mark.e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:57"
      ]
    },
    "@pytest.mark.integration": {
      "value": "@pytest.mark.integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:55"
      ]
    },
    "@pytest.mark.mock_only": {
      "value": "@pytest.mark.mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:51"
      ]
    },
    "@pytest.mark.real_clickhouse": {
      "value": "@pytest.mark.real_clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:45"
      ]
    },
    "@pytest.mark.real_database": {
      "value": "@pytest.mark.real_database",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:41"
      ]
    },
    "@pytest.mark.real_llm": {
      "value": "@pytest.mark.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:39",
        "scripts/add_test_markers.py:182"
      ]
    },
    "@pytest.mark.real_redis": {
      "value": "@pytest.mark.real_redis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:43"
      ]
    },
    "@pytest.mark.real_services": {
      "value": "@pytest.mark.real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:49"
      ]
    },
    "@pytest.mark.skip": {
      "value": "@pytest.mark.skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:286"
      ]
    },
    "@pytest.mark.skipif(\n    os.environ.get(\"ENABLE_REAL_LLM_TESTING\") != \"true\",\n    reason=\"Real LLM tests disabled. Set ENABLE_REAL_LLM_TESTING=true to run\"\n)": {
      "value": "@pytest.mark.skipif(\n    os.environ.get(\"ENABLE_REAL_LLM_TESTING\") != \"true\",\n    reason=\"Real LLM tests disabled. Set ENABLE_REAL_LLM_TESTING=true to run\"\n)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:189"
      ]
    },
    "@pytest.mark.unit": {
      "value": "@pytest.mark.unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:53"
      ]
    },
    "@pytest\\.fixture": {
      "value": "@pytest\\.fixture",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:92"
      ]
    },
    "@pytest\\.fixture.*?\\ndef\\s+(\\w+)": {
      "value": "@pytest\\.fixture.*?\\ndef\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:228"
      ]
    },
    "@pytest\\.mark\\.": {
      "value": "@pytest\\.mark\\.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:44"
      ]
    },
    "@skip": {
      "value": "@skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:286"
      ]
    },
    "@users.noreply.github.com": {
      "value": "@users.noreply.github.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:224"
      ]
    },
    "ABC": {
      "value": "ABC",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211",
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "ACCOUNT_LOCKED": {
      "value": "ACCOUNT_LOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:24",
        "auth_service/tests/factories/audit_factory.py:189"
      ]
    },
    "ACCOUNT_UNLOCKED": {
      "value": "ACCOUNT_UNLOCKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:25"
      ]
    },
    "ACT": {
      "value": "ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:241"
      ]
    },
    "ACT: ${{ env.ACT }}": {
      "value": "ACT: ${{ env.ACT }}",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:229",
        "scripts/test_workflows_with_act.py:254",
        "scripts/test_workflows_with_act.py:256"
      ]
    },
    "ACTION REQUIRED": {
      "value": "ACTION REQUIRED",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:106"
      ]
    },
    "ACTUAL REQUEST:": {
      "value": "ACTUAL REQUEST:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:90"
      ]
    },
    "ACTUALLY": {
      "value": "ACTUALLY",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "ALL DATABASE CONNECTION TESTS PASSED!": {
      "value": "ALL DATABASE CONNECTION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:118"
      ]
    },
    "ALL TESTS PASSED": {
      "value": "ALL TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:401",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_error_monitor_logic.py:240",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:329"
      ]
    },
    "ALLOWED": {
      "value": "ALLOWED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:43",
        "scripts/test_cors_ssot_compliance.py:79",
        "scripts/test_cors_ssot_compliance.py:87",
        "scripts/test_cors_ssot_compliance.py:125",
        "scripts/test_cors_ssot_compliance.py:133"
      ]
    },
    "ALLOWED conftest.py files (service-level):": {
      "value": "ALLOWED conftest.py files (service-level):",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:78"
      ]
    },
    "ALLOW_DEV_AUTH_BYPASS": {
      "value": "ALLOW_DEV_AUTH_BYPASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:38",
        "scripts/test_docker_websocket_fix.py:209"
      ]
    },
    "ALLOW_DEV_AUTH_BYPASS: true": {
      "value": "ALLOW_DEV_AUTH_BYPASS: true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:157"
      ]
    },
    "ALLOW_DEV_AUTH_BYPASS=true": {
      "value": "ALLOW_DEV_AUTH_BYPASS=true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:172"
      ]
    },
    "ALLOW_DEV_LOGIN": {
      "value": "ALLOW_DEV_LOGIN",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:240"
      ]
    },
    "ALLOW_PROD_TESTS": {
      "value": "ALLOW_PROD_TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:795",
        "scripts/unified_test_runner.py:798"
      ]
    },
    "ANALYSIS": {
      "value": "ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:135"
      ]
    },
    "ANTHROPIC_": {
      "value": "ANTHROPIC_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "ANTHROPIC_API_KEY": {
      "value": "ANTHROPIC_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:120",
        "scripts/setup_test_environment.py:246",
        "scripts/test_backend.py:84",
        "scripts/test_backend.py:84",
        "scripts/test_secret_manager_builder_critical.py:90",
        "scripts/test_secret_manager_builder_critical.py:567",
        "scripts/test_secret_manager_debug.py:22",
        "scripts/test_secret_manager_debug.py:55"
      ]
    },
    "API": {
      "value": "API",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:72",
        "scripts/test_chat_errors.py:73",
        "scripts/test_chat_errors.py:76",
        "scripts/test_chat_errors.py:77"
      ]
    },
    "API Agents": {
      "value": "API Agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:108"
      ]
    },
    "API Documentation": {
      "value": "API Documentation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:43",
        "scripts/test_staging_env.py:147"
      ]
    },
    "API Status": {
      "value": "API Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:145"
      ]
    },
    "API Threads List": {
      "value": "API Threads List",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:104"
      ]
    },
    "API URL not found": {
      "value": "API URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:316"
      ]
    },
    "API Version": {
      "value": "API Version",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:144"
      ]
    },
    "API Workspaces": {
      "value": "API Workspaces",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:106"
      ]
    },
    "API docs are accessible": {
      "value": "API docs are accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:59"
      ]
    },
    "API docs check failed:": {
      "value": "API docs check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:63"
      ]
    },
    "API docs returned status": {
      "value": "API docs returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:61"
      ]
    },
    "API endpoint tests": {
      "value": "API endpoint tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:85"
      ]
    },
    "API key configured": {
      "value": "API key configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:87"
      ]
    },
    "API port": {
      "value": "API port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:207"
      ]
    },
    "API_BASE_URL": {
      "value": "API_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:28",
        "scripts/unified_test_config.py:313"
      ]
    },
    "APPLY CHANGES": {
      "value": "APPLY CHANGES",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:170"
      ]
    },
    "AST analysis failed for": {
      "value": "AST analysis failed for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:221"
      ]
    },
    "AUTH": {
      "value": "AUTH",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:52",
        "scripts/test_chat_errors.py:53",
        "scripts/test_chat_errors.py:58",
        "scripts/test_chat_errors.py:59",
        "scripts/test_log_introspection.py:377"
      ]
    },
    "AUTH DATABASE SESSION TEST SUMMARY": {
      "value": "AUTH DATABASE SESSION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:379"
      ]
    },
    "AUTH SERVICE DATABASE SESSION MANAGEMENT TESTING": {
      "value": "AUTH SERVICE DATABASE SESSION MANAGEMENT TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:349"
      ]
    },
    "AUTH_BASE_URL": {
      "value": "AUTH_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:29"
      ]
    },
    "AUTH_FAST_TEST_MODE": {
      "value": "AUTH_FAST_TEST_MODE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:34"
      ]
    },
    "AUTH_PORT": {
      "value": "AUTH_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:41",
        "auth_service/tests/test_auth_port_configuration.py:82",
        "auth_service/tests/test_auth_port_configuration.py:125",
        "auth_service/tests/test_auth_port_configuration.py:132",
        "auth_service/tests/test_auth_port_configuration.py:154",
        "auth_service/tests/test_auth_port_configuration.py:190",
        "auth_service/tests/test_auth_port_configuration.py:222"
      ]
    },
    "AUTH_SERVICE_URL": {
      "value": "AUTH_SERVICE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:84",
        "auth_service/tests/test_auth_port_configuration.py:272",
        "scripts/fix_authentication_test_tokens.py:134",
        "scripts/start_test_services.py:154",
        "scripts/test_oauth_local.py:63",
        "scripts/test_oauth_local.py:63",
        "scripts/unified_test_runner.py:208",
        "scripts/unified_test_runner.py:208"
      ]
    },
    "AUTH_SERVICE_URL:": {
      "value": "AUTH_SERVICE_URL:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:135"
      ]
    },
    "AUTH_USE_FILE_DB": {
      "value": "AUTH_USE_FILE_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:43"
      ]
    },
    "AUTOMATED SPLITTING SUGGESTIONS (": {
      "value": "AUTOMATED SPLITTING SUGGESTIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:142"
      ]
    },
    "AVAILABLE TEST CATEGORIES": {
      "value": "AVAILABLE TEST CATEGORIES",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1087"
      ]
    },
    "AVAILABLE TEST LEVELS": {
      "value": "AVAILABLE TEST LEVELS",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:89"
      ]
    },
    "Accept": {
      "value": "Accept",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:66",
        "scripts/test_staging_jwt_validation.py:88"
      ]
    },
    "Access-Control-Allow-Credentials": {
      "value": "Access-Control-Allow-Credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:36",
        "scripts/test_and_fix_cors.py:36",
        "scripts/test_cors_implementation.py:64",
        "scripts/test_cors_implementation.py:78",
        "scripts/test_cors_implementation.py:116"
      ]
    },
    "Access-Control-Allow-Headers": {
      "value": "Access-Control-Allow-Headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:35",
        "scripts/test_and_fix_cors.py:35",
        "scripts/test_cors_implementation.py:63"
      ]
    },
    "Access-Control-Allow-Methods": {
      "value": "Access-Control-Allow-Methods",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:34",
        "scripts/test_and_fix_cors.py:34",
        "scripts/test_cors_implementation.py:62"
      ]
    },
    "Access-Control-Allow-Origin": {
      "value": "Access-Control-Allow-Origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:33",
        "scripts/test_and_fix_cors.py:33",
        "scripts/test_and_fix_cors.py:75",
        "scripts/test_and_fix_cors.py:75",
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141",
        "scripts/test_chat_errors.py:86",
        "scripts/test_cors_implementation.py:61",
        "scripts/test_cors_implementation.py:77",
        "scripts/test_cors_implementation.py:115"
      ]
    },
    "Access-Control-Request-Headers": {
      "value": "Access-Control-Request-Headers",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:17",
        "scripts/test_and_fix_cors.py:24",
        "scripts/test_cors.py:75",
        "scripts/test_cors_implementation.py:52",
        "scripts/test_cors_issue.py:61"
      ]
    },
    "Access-Control-Request-Method": {
      "value": "Access-Control-Request-Method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:320",
        "scripts/debug_cors_test.py:16",
        "scripts/test_and_fix_cors.py:23",
        "scripts/test_auth_integration.py:109",
        "scripts/test_cors.py:74",
        "scripts/test_cors_implementation.py:51",
        "scripts/test_cors_issue.py:60"
      ]
    },
    "Action Required:": {
      "value": "Action Required:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:89"
      ]
    },
    "Action:": {
      "value": "Action:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:334"
      ]
    },
    "Active connections:": {
      "value": "Active connections:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:119"
      ]
    },
    "Actual file generation not yet implemented": {
      "value": "Actual file generation not yet implemented",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:596"
      ]
    },
    "Actual fixes require force_unsafe=True. Switching to dry-run mode.": {
      "value": "Actual fixes require force_unsafe=True. Switching to dry-run mode.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:792"
      ]
    },
    "Actual:": {
      "value": "Actual:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:525"
      ]
    },
    "Actually valid:": {
      "value": "Actually valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:241"
      ]
    },
    "Add": {
      "value": "Add",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:240",
        "scripts/setup_test_environment.py:106"
      ]
    },
    "Add 'Vary: Origin' header for proper caching": {
      "value": "Add 'Vary: Origin' header for proper caching",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:249"
      ]
    },
    "Add assertions to": {
      "value": "Add assertions to",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "Add caching layer": {
      "value": "Add caching layer",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:406"
      ]
    },
    "Add circuit breakers": {
      "value": "Add circuit breakers",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:417"
      ]
    },
    "Add fast_test import and comment sleep": {
      "value": "Add fast_test import and comment sleep",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:184"
      ]
    },
    "Add more end-to-end tests (current:": {
      "value": "Add more end-to-end tests (current:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:701"
      ]
    },
    "Add pytest markers to test files": {
      "value": "Add pytest markers to test files",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:233"
      ]
    },
    "Add pytest markers to test files based on their directory location.\nThis ensures proper test categorization for compliance and test runner.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Test infrastructure compliance and reporting accuracy\n- Value Impact: Enables accurate test metrics and compliance scoring\n- Strategic Impact: Improves development velocity through proper test organization": {
      "value": "Add pytest markers to test files based on their directory location.\nThis ensures proper test categorization for compliance and test runner.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Test infrastructure compliance and reporting accuracy\n- Value Impact: Enables accurate test metrics and compliance scoring\n- Strategic Impact: Improves development velocity through proper test organization",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:2"
      ]
    },
    "Added": {
      "value": "Added",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:212"
      ]
    },
    "Added @pytest.mark.": {
      "value": "Added @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:126"
      ]
    },
    "Added missing typing imports": {
      "value": "Added missing typing imports",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:231"
      ]
    },
    "Added mock imports": {
      "value": "Added mock imports",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:237"
      ]
    },
    "Adding pytest markers to test files...": {
      "value": "Adding pytest markers to test files...",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:200"
      ]
    },
    "Additional arguments to pass to Jest": {
      "value": "Additional arguments to pass to Jest",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:78"
      ]
    },
    "Address critical bottlenecks immediately": {
      "value": "Address critical bottlenecks immediately",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:433"
      ]
    },
    "After examining the performance metrics, here are my recommendations:": {
      "value": "After examining the performance metrics, here are my recommendations:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:162"
      ]
    },
    "Agent-specific tests": {
      "value": "Agent-specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:115"
      ]
    },
    "Agent-specific tests with real LLMs": {
      "value": "Agent-specific tests with real LLMs",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:63"
      ]
    },
    "Aggregating coverage...": {
      "value": "Aggregating coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:787"
      ]
    },
    "Alembic Configuration": {
      "value": "Alembic Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:281"
      ]
    },
    "Alembic Version State Recovery Fix": {
      "value": "Alembic Version State Recovery Fix",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:55"
      ]
    },
    "Align Test Imports and Configuration Script\nFixes all test-related import issues and configuration misalignments.": {
      "value": "Align Test Imports and Configuration Script\nFixes all test-related import issues and configuration misalignments.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:2"
      ]
    },
    "All configured": {
      "value": "All configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:366"
      ]
    },
    "All critical imports successful!": {
      "value": "All critical imports successful!",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:95"
      ]
    },
    "All services are ready!": {
      "value": "All services are ready!",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:113"
      ]
    },
    "All syntax errors fixed!": {
      "value": "All syntax errors fixed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:268"
      ]
    },
    "All tests completed": {
      "value": "All tests completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:185"
      ]
    },
    "All tests completed!": {
      "value": "All tests completed!",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:128"
      ]
    },
    "All tests comply with real test requirements!": {
      "value": "All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:266"
      ]
    },
    "All tests comply with requirements!": {
      "value": "All tests comply with requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:187"
      ]
    },
    "All tests passed! The script is working correctly.": {
      "value": "All tests passed! The script is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:95"
      ]
    },
    "All tokens unique:": {
      "value": "All tokens unique:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:285"
      ]
    },
    "Allow production tests to run (requires explicit flag)": {
      "value": "Allow production tests to run (requires explicit flag)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:945"
      ]
    },
    "Allowed locations:": {
      "value": "Allowed locations:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:94"
      ]
    },
    "Already has @pytest.mark.": {
      "value": "Already has @pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:114"
      ]
    },
    "Already in correct order": {
      "value": "Already in correct order",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:47"
      ]
    },
    "Also test WebSocket CORS": {
      "value": "Also test WebSocket CORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:431"
      ]
    },
    "Analysis Complete:": {
      "value": "Analysis Complete:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:172"
      ]
    },
    "Analysis complete. 3 optimization opportunities identified.": {
      "value": "Analysis complete. 3 optimization opportunities identified.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:215"
      ]
    },
    "Analysis complete. Suggested creating": {
      "value": "Analysis complete. Suggested creating",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1005"
      ]
    },
    "Analysis completed": {
      "value": "Analysis completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:344",
        "scripts/test_data_validator_backup.py:357",
        "scripts/test_data_validator_backup.py:370",
        "scripts/test_data_validator_backup.py:383",
        "scripts/test_data_validator_backup.py:396",
        "scripts/test_data_validator_backup.py:413"
      ]
    },
    "Analysis failed:": {
      "value": "Analysis failed:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:102"
      ]
    },
    "Analysis for": {
      "value": "Analysis for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:705"
      ]
    },
    "Analysis should produce at least one finding": {
      "value": "Analysis should produce at least one finding",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:378"
      ]
    },
    "Analysis type '": {
      "value": "Analysis type '",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:155"
      ]
    },
    "Analysis type is required": {
      "value": "Analysis type is required",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:89"
      ]
    },
    "Analyze current test coverage": {
      "value": "Analyze current test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:108"
      ]
    },
    "Analyze file for splitting": {
      "value": "Analyze file for splitting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:672"
      ]
    },
    "Analyze middleware configuration issues.": {
      "value": "Analyze middleware configuration issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:121"
      ]
    },
    "Analyze test mocks in the codebase to identify unjustified mocks.\nBased on testing.xml spectrum levels (L0-L5).": {
      "value": "Analyze test mocks in the codebase to identify unjustified mocks.\nBased on testing.xml spectrum levels (L0-L5).",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:2"
      ]
    },
    "Analyze test reports in time range.": {
      "value": "Analyze test reports in time range.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:21"
      ]
    },
    "Analyze test size violations and generate improvement suggestions": {
      "value": "Analyze test size violations and generate improvement suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:916"
      ]
    },
    "Analyzing": {
      "value": "Analyzing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:73"
      ]
    },
    "Analyzing and suggesting fixes for": {
      "value": "Analyzing and suggesting fixes for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:795"
      ]
    },
    "Analyzing large test file:": {
      "value": "Analyzing large test file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:84"
      ]
    },
    "Analyzing test pairs...": {
      "value": "Analyzing test pairs...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:259"
      ]
    },
    "Analyzing test performance in": {
      "value": "Analyzing test performance in",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:357"
      ]
    },
    "Analyzing:": {
      "value": "Analyzing:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:31"
      ]
    },
    "Annual cost: $150K in developer time + production risk": {
      "value": "Annual cost: $150K in developer time + production risk",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:536"
      ]
    },
    "Annual overhead:": {
      "value": "Annual overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:652"
      ]
    },
    "Anomalous activity not detected": {
      "value": "Anomalous activity not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:266"
      ]
    },
    "Anthropic Claude API key": {
      "value": "Anthropic Claude API key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:120"
      ]
    },
    "Anti-regression hook to prevent conftest.py violations.\nEnsures conftest.py files only exist at service-level directories.": {
      "value": "Anti-regression hook to prevent conftest.py violations.\nEnsures conftest.py files only exist at service-level directories.",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:2"
      ]
    },
    "Applied": {
      "value": "Applied",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:106"
      ]
    },
    "Applied @fast_test to": {
      "value": "Applied @fast_test to",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:124"
      ]
    },
    "Applied optimizations:": {
      "value": "Applied optimizations:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:385"
      ]
    },
    "Apply @fast_test decorators to slow tests": {
      "value": "Apply @fast_test decorators to slow tests",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:133"
      ]
    },
    "Apply Fast Test Decorators\n\nAutomatically applies @fast_test decorators to test functions that use sleep calls\nto improve test suite performance.": {
      "value": "Apply Fast Test Decorators\n\nAutomatically applies @fast_test decorators to test functions that use sleep calls\nto improve test suite performance.",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:2"
      ]
    },
    "Apply automatic optimizations": {
      "value": "Apply automatic optimizations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:347"
      ]
    },
    "Apply changes (default is dry-run)": {
      "value": "Apply changes (default is dry-run)",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:136"
      ]
    },
    "Applying known fixes...": {
      "value": "Applying known fixes...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:104"
      ]
    },
    "Applying performance optimizations...": {
      "value": "Applying performance optimizations...",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:379"
      ]
    },
    "Are you ABSOLUTELY SURE you want to proceed? Type 'YES I UNDERSTAND THE RISKS':": {
      "value": "Are you ABSOLUTELY SURE you want to proceed? Type 'YES I UNDERSTAND THE RISKS':",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:956"
      ]
    },
    "Assert session exists in database with expected values": {
      "value": "Assert session exists in database with expected values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:194"
      ]
    },
    "Assert user exists in database with expected values": {
      "value": "Assert user exists in database with expected values",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:178"
      ]
    },
    "Assertion Helpers for Auth Service Tests\nCustom assertion functions for common auth testing scenarios.\nProvides clear and reusable assertions with detailed error messages.": {
      "value": "Assertion Helpers for Auth Service Tests\nCustom assertion functions for common auth testing scenarios.\nProvides clear and reusable assertions with detailed error messages.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:1"
      ]
    },
    "AssertionError": {
      "value": "AssertionError",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:64",
        "scripts/fix_test_batch.py:65"
      ]
    },
    "AssertionHelpers": {
      "value": "AssertionHelpers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:19"
      ]
    },
    "Assess quality of existing tests": {
      "value": "Assess quality of existing tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:138"
      ]
    },
    "Async URL has SSL:": {
      "value": "Async URL has SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:146"
      ]
    },
    "Async URL:": {
      "value": "Async URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:91",
        "scripts/test_auth_database_sessions.py:89",
        "scripts/test_database_url_builder_comprehensive.py:48",
        "scripts/test_database_url_builder_comprehensive.py:273",
        "scripts/test_ssl_certificates_staging.py:139",
        "scripts/test_ssl_certificates_staging.py:235"
      ]
    },
    "Async context manager entry.": {
      "value": "Async context manager entry.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:58"
      ]
    },
    "Async context manager exit.": {
      "value": "Async context manager exit.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:65"
      ]
    },
    "AsyncMock()": {
      "value": "AsyncMock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356"
      ]
    },
    "AsyncMock\\(": {
      "value": "AsyncMock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "AsyncMock\\(\\)": {
      "value": "AsyncMock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235",
        "scripts/compliance/test_fixer.py:322"
      ]
    },
    "AsyncMock\\(spec=LLMManager\\)": {
      "value": "AsyncMock\\(spec=LLMManager\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:320"
      ]
    },
    "AsyncTestBase": {
      "value": "AsyncTestBase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:15"
      ]
    },
    "Attempt to automatically fix violations": {
      "value": "Attempt to automatically fix violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:257"
      ]
    },
    "Attempt to fix common issues": {
      "value": "Attempt to fix common issues",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:346"
      ]
    },
    "Attempting TCP connection with params:": {
      "value": "Attempting TCP connection with params:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:99"
      ]
    },
    "Attempting connection with params:": {
      "value": "Attempting connection with params:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:62"
      ]
    },
    "Attempting to connect to test endpoint:": {
      "value": "Attempting to connect to test endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:73"
      ]
    },
    "Attempting to connect to:": {
      "value": "Attempting to connect to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:21",
        "scripts/test_websocket_middleware.py:61"
      ]
    },
    "Attempting to fix common issues...": {
      "value": "Attempting to fix common issues...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:322"
      ]
    },
    "Attempting to fix:": {
      "value": "Attempting to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:120"
      ]
    },
    "AttributeError": {
      "value": "AttributeError",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:54",
        "scripts/fix_test_batch.py:55"
      ]
    },
    "AttributeError: '(\\w+)' object has no attribute '(\\w+)'": {
      "value": "AttributeError: '(\\w+)' object has no attribute '(\\w+)'",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:53"
      ]
    },
    "AttributeError: <module '([\\w\\.]+)'.*> does not have the attribute '(\\w+)'": {
      "value": "AttributeError: <module '([\\w\\.]+)'.*> does not have the attribute '(\\w+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:50"
      ]
    },
    "Audit Log Test Data Factory\nCreates audit log entries for testing authentication events and security monitoring.\nSupports various event types with proper metadata and tracking.": {
      "value": "Audit Log Test Data Factory\nCreates audit log entries for testing authentication events and security monitoring.\nSupports various event types with proper metadata and tracking.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:1"
      ]
    },
    "AuditLogFactory": {
      "value": "AuditLogFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:20"
      ]
    },
    "Auth Bypass Configuration:": {
      "value": "Auth Bypass Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:267"
      ]
    },
    "Auth Database Engine Creation": {
      "value": "Auth Database Engine Creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:355"
      ]
    },
    "Auth Database Manager Import": {
      "value": "Auth Database Manager Import",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:353"
      ]
    },
    "Auth Database Session Lifecycle": {
      "value": "Auth Database Session Lifecycle",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:358"
      ]
    },
    "Auth Database Staging Integration": {
      "value": "Auth Database Staging Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:357"
      ]
    },
    "Auth Database URL Conversion": {
      "value": "Auth Database URL Conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:354"
      ]
    },
    "Auth Database URL Validation": {
      "value": "Auth Database URL Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:356"
      ]
    },
    "Auth Endpoint:": {
      "value": "Auth Endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:52",
        "scripts/test_auth_integration.py:56"
      ]
    },
    "Auth Health": {
      "value": "Auth Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:44"
      ]
    },
    "Auth Service": {
      "value": "Auth Service",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:69",
        "scripts/test_async_postgres.py:171",
        "scripts/test_staging_auth_e2e.py:35",
        "scripts/test_staging_login_automated.py:180"
      ]
    },
    "Auth Service 500 error handling timeout - no resilience mechanism": {
      "value": "Auth Service 500 error handling timeout - no resilience mechanism",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:162"
      ]
    },
    "Auth Service Actual Staging Credentials Test": {
      "value": "Auth Service Actual Staging Credentials Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:150"
      ]
    },
    "Auth Service Base Test Classes\nCommon test functionality and base classes for auth service testing": {
      "value": "Auth Service Base Test Classes\nCommon test functionality and base classes for auth service testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:1"
      ]
    },
    "Auth Service Configuration Tests": {
      "value": "Auth Service Configuration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:71"
      ]
    },
    "Auth Service Database Connection Test": {
      "value": "Auth Service Database Connection Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:279"
      ]
    },
    "Auth Service Down Critical Scenarios - Iteration 2 Audit Findings\n\nThis test file specifically focuses on scenarios where the Auth Service is completely\ndown, unreachable, or failing, which is a major contributor to the authentication\nsystem failure identified in Iteration 2:\n\n**CRITICAL AUTH SERVICE DOWN SCENARIOS:**\n1. Auth Service completely unresponsive (no HTTP response)\n2. Auth Service returning 500 Internal Server Error\n3. Auth Service database connectivity lost\n4. Auth Service container/process crashed\n5. Auth Service overwhelmed with requests (503 Service Unavailable)\n6. Auth Service network partitioned from other services\n7. Auth Service SSL certificate expired\n8. Auth Service OAuth provider connectivity lost\n9. Auth Service Redis/cache layer down\n10. Auth Service graceful shutdown not working\n\n**EXPECTED TO FAIL**: These tests demonstrate what happens when Auth Service fails\nand expose the lack of fallback mechanisms causing system-wide authentication breakdown\n\nSystem Impact When Auth Service Down:\n- Frontend cannot authenticate users (100% authentication failure)\n- Backend cannot validate tokens (all requests rejected with 403)\n- No fallback authentication mechanisms\n- No cached authentication decisions\n- No graceful degradation\n- 6.2+ second timeouts waiting for unresponsive auth service\n\nRoot Causes (Auth Service Failures):\n- Single point of failure with no redundancy\n- No health checks or automatic recovery\n- No caching layer for authentication decisions  \n- No fallback to alternative authentication methods\n- Dependencies on external services without circuit breakers": {
      "value": "Auth Service Down Critical Scenarios - Iteration 2 Audit Findings\n\nThis test file specifically focuses on scenarios where the Auth Service is completely\ndown, unreachable, or failing, which is a major contributor to the authentication\nsystem failure identified in Iteration 2:\n\n**CRITICAL AUTH SERVICE DOWN SCENARIOS:**\n1. Auth Service completely unresponsive (no HTTP response)\n2. Auth Service returning 500 Internal Server Error\n3. Auth Service database connectivity lost\n4. Auth Service container/process crashed\n5. Auth Service overwhelmed with requests (503 Service Unavailable)\n6. Auth Service network partitioned from other services\n7. Auth Service SSL certificate expired\n8. Auth Service OAuth provider connectivity lost\n9. Auth Service Redis/cache layer down\n10. Auth Service graceful shutdown not working\n\n**EXPECTED TO FAIL**: These tests demonstrate what happens when Auth Service fails\nand expose the lack of fallback mechanisms causing system-wide authentication breakdown\n\nSystem Impact When Auth Service Down:\n- Frontend cannot authenticate users (100% authentication failure)\n- Backend cannot validate tokens (all requests rejected with 403)\n- No fallback authentication mechanisms\n- No cached authentication decisions\n- No graceful degradation\n- 6.2+ second timeouts waiting for unresponsive auth service\n\nRoot Causes (Auth Service Failures):\n- Single point of failure with no redundancy\n- No health checks or automatic recovery\n- No caching layer for authentication decisions  \n- No fallback to alternative authentication methods\n- Dependencies on external services without circuit breakers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:1"
      ]
    },
    "Auth Service Health": {
      "value": "Auth Service Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:32",
        "scripts/test_auth_integration.py:36",
        "scripts/test_staging_deployment.py:85"
      ]
    },
    "Auth Service Integration Tests": {
      "value": "Auth Service Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:130"
      ]
    },
    "Auth Service Port Configuration Tests": {
      "value": "Auth Service Port Configuration Tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:458"
      ]
    },
    "Auth Service Test Configuration Module\nTest configuration and environment management for auth service tests": {
      "value": "Auth Service Test Configuration Module\nTest configuration and environment management for auth service tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:1"
      ]
    },
    "Auth Service Test Database Module\nDatabase utilities for test isolation and management": {
      "value": "Auth Service Test Database Module\nDatabase utilities for test isolation and management",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/database/__init__.py:1"
      ]
    },
    "Auth Service Test Factories\nTest data factories for creating consistent test data.": {
      "value": "Auth Service Test Factories\nTest data factories for creating consistent test data.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:1"
      ]
    },
    "Auth Service Test Utilities\nHelper functions and utilities for auth service testing": {
      "value": "Auth Service Test Utilities\nHelper functions and utilities for auth service testing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:1"
      ]
    },
    "Auth Service URL Construction Test": {
      "value": "Auth Service URL Construction Test",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:216"
      ]
    },
    "Auth Service became completely unresponsive due to database connectivity loss": {
      "value": "Auth Service became completely unresponsive due to database connectivity loss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:200"
      ]
    },
    "Auth Service becomes unresponsive when Redis cache layer is down": {
      "value": "Auth Service becomes unresponsive when Redis cache layer is down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:456"
      ]
    },
    "Auth Service crash recovery mechanism not implemented:": {
      "value": "Auth Service crash recovery mechanism not implemented:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:252"
      ]
    },
    "Auth Service crashes when Redis cache layer is down": {
      "value": "Auth Service crashes when Redis cache layer is down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:458"
      ]
    },
    "Auth Service hanging due to database connectivity loss": {
      "value": "Auth Service hanging due to database connectivity loss",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:202"
      ]
    },
    "Auth Service should automatically restart after crash": {
      "value": "Auth Service should automatically restart after crash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:246"
      ]
    },
    "Auth Service should be new process after restart": {
      "value": "Auth Service should be new process after restart",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:249"
      ]
    },
    "Auth Service should remain responsive with degraded database, got": {
      "value": "Auth Service should remain responsive with degraded database, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:197"
      ]
    },
    "Auth Service should work without Redis, got": {
      "value": "Auth Service should work without Redis, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:448"
      ]
    },
    "Auth Service:": {
      "value": "Auth Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:335",
        "scripts/test_staging_refresh_format.py:21"
      ]
    },
    "Auth Service: [green]✓ Healthy[/green]": {
      "value": "Auth Service: [green]✓ Healthy[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:127"
      ]
    },
    "Auth Service: [red]✗ Not reachable -": {
      "value": "Auth Service: [red]✗ Not reachable -",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:131"
      ]
    },
    "Auth Service: [red]✗ Unhealthy (": {
      "value": "Auth Service: [red]✗ Unhealthy (",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:128"
      ]
    },
    "Auth URL: [cyan]": {
      "value": "Auth URL: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:438"
      ]
    },
    "Auth async URL:": {
      "value": "Auth async URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:247"
      ]
    },
    "Auth bypass enabled:": {
      "value": "Auth bypass enabled:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:271"
      ]
    },
    "Auth must start before backend": {
      "value": "Auth must start before backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:100"
      ]
    },
    "Auth service URL": {
      "value": "Auth service URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:171"
      ]
    },
    "Auth service URL contains hardcoded port": {
      "value": "Auth service URL contains hardcoded port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:199"
      ]
    },
    "Auth service URL must have valid port in": {
      "value": "Auth service URL must have valid port in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:371"
      ]
    },
    "Auth service URL not found": {
      "value": "Auth service URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:224"
      ]
    },
    "Auth service URL port (": {
      "value": "Auth service URL port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:96",
        "auth_service/tests/test_auth_port_configuration.py:170",
        "auth_service/tests/test_auth_port_configuration.py:235"
      ]
    },
    "Auth service failed to start": {
      "value": "Auth service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:124"
      ]
    },
    "Auth service failure took": {
      "value": "Auth service failure took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:111"
      ]
    },
    "Auth service health check failed with status": {
      "value": "Auth service health check failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:51"
      ]
    },
    "Auth service health check failed:": {
      "value": "Auth service health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:35"
      ]
    },
    "Auth service request timeout after": {
      "value": "Auth service request timeout after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:121"
      ]
    },
    "Auth service responded when it should be down": {
      "value": "Auth service responded when it should be down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:104"
      ]
    },
    "Auth service should auto-correct URL to match binding port. Expected:": {
      "value": "Auth service should auto-correct URL to match binding port. Expected:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:450"
      ]
    },
    "Auth service skips .env loading": {
      "value": "Auth service skips .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:100"
      ]
    },
    "Auth service specific test configuration.\nUses consolidated test framework infrastructure with auth-specific customizations.": {
      "value": "Auth service specific test configuration.\nUses consolidated test framework infrastructure with auth-specific customizations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:1"
      ]
    },
    "Auth service startup should detect port mismatch! Binding port:": {
      "value": "Auth service startup should detect port mismatch! Binding port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:332"
      ]
    },
    "Auth should be able to start, missing:": {
      "value": "Auth should be able to start, missing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:108"
      ]
    },
    "Auth should be in degraded services": {
      "value": "Auth should be in degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:265"
      ]
    },
    "Auth:": {
      "value": "Auth:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:122",
        "scripts/setup_e2e_test_ports.py:87"
      ]
    },
    "AuthConfig Integration": {
      "value": "AuthConfig Integration",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:221"
      ]
    },
    "AuthConfig URL:": {
      "value": "AuthConfig URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:139"
      ]
    },
    "AuthConfig generated URL:": {
      "value": "AuthConfig generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:175"
      ]
    },
    "AuthConfig integration test failed:": {
      "value": "AuthConfig integration test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:150"
      ]
    },
    "AuthDatabaseManager imported successfully": {
      "value": "AuthDatabaseManager imported successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:36"
      ]
    },
    "AuthSecretLoader": {
      "value": "AuthSecretLoader",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:347",
        "scripts/test_secret_manager_builder_critical.py:402",
        "scripts/test_secret_manager_builder_critical.py:613"
      ]
    },
    "AuthSecretLoader (FAILED)": {
      "value": "AuthSecretLoader (FAILED)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:376"
      ]
    },
    "AuthSecretLoader failed:": {
      "value": "AuthSecretLoader failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:374"
      ]
    },
    "AuthSecretLoader with static methods": {
      "value": "AuthSecretLoader with static methods",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:366"
      ]
    },
    "AuthSessionFactory": {
      "value": "AuthSessionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:16"
      ]
    },
    "AuthTestBase": {
      "value": "AuthTestBase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:14"
      ]
    },
    "AuthTestClient": {
      "value": "AuthTestClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:18"
      ]
    },
    "AuthTestEnvironment": {
      "value": "AuthTestEnvironment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "AuthTestMixin": {
      "value": "AuthTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:18"
      ]
    },
    "AuthTestUtils": {
      "value": "AuthTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:15"
      ]
    },
    "AuthUserFactory": {
      "value": "AuthUserFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:14"
      ]
    },
    "Authenticated API Call": {
      "value": "Authenticated API Call",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:348"
      ]
    },
    "Authentication service tests": {
      "value": "Authentication service tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:83"
      ]
    },
    "Authentication session persistence edge case tests.\n\nTests critical session persistence scenarios that cause revenue loss through user abandonment.\nFocus: Service restart scenarios, database failover, and cross-service session consistency.": {
      "value": "Authentication session persistence edge case tests.\n\nTests critical session persistence scenarios that cause revenue loss through user abandonment.\nFocus: Service restart scenarios, database failover, and cross-service session consistency.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:1"
      ]
    },
    "Authentication test failed:": {
      "value": "Authentication test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:258"
      ]
    },
    "Authentication test token fixes completed!": {
      "value": "Authentication test token fixes completed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:168"
      ]
    },
    "Authentication:": {
      "value": "Authentication:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:92",
        "scripts/test_staging_config.py:119"
      ]
    },
    "Authorization": {
      "value": "Authorization",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:114",
        "auth_service/tests/integration/test_refresh_integration.py:380",
        "auth_service/tests/test_auth_comprehensive.py:484",
        "scripts/setup_staging_test_account.py:205",
        "scripts/test_cold_start_e2e.py:274",
        "scripts/test_cold_start_e2e.py:321",
        "scripts/test_cold_start_e2e.py:383",
        "scripts/test_docker_websocket_fix.py:82",
        "scripts/test_oauth_local.py:303",
        "scripts/test_staging_auth_e2e.py:205"
      ]
    },
    "Authorization code reuse should be blocked": {
      "value": "Authorization code reuse should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:70"
      ]
    },
    "Authorization, Content-Type, X-Request-ID": {
      "value": "Authorization, Content-Type, X-Request-ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:75"
      ]
    },
    "Authorization: Bearer": {
      "value": "Authorization: Bearer",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:123"
      ]
    },
    "Auto-fix functionality not implemented yet.": {
      "value": "Auto-fix functionality not implemented yet.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:387"
      ]
    },
    "Auto-fix linting issues": {
      "value": "Auto-fix linting issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:408"
      ]
    },
    "Auto-fix operations can break your tests!": {
      "value": "Auto-fix operations can break your tests!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:950"
      ]
    },
    "Auto-generated by Autonomous Test Reviewer with Ultra-Thinking\nGenerated:": {
      "value": "Auto-generated by Autonomous Test Reviewer with Ultra-Thinking\nGenerated:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:101"
      ]
    },
    "Auto-split window size in minutes (default: 15)": {
      "value": "Auto-split window size in minutes (default: 15)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1009"
      ]
    },
    "Auto-splitting is experimental - manual review required": {
      "value": "Auto-splitting is experimental - manual review required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:400"
      ]
    },
    "Automated Test Size Violation Fixer\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity - Enable test runner to function, unblock development pipeline\n- Value Impact: Restores test execution capability, prevents regression accumulation\n- Strategic Impact: $50K+ monthly dev velocity protection through working test infrastructure\n\nThis script automatically fixes test size violations by:\n1. Splitting oversized test files (>300 lines) into focused modules\n2. Extracting common fixtures and utilities\n3. Breaking large test functions (>8 lines) into focused tests\n4. Preserving all test functionality while improving maintainability": {
      "value": "Automated Test Size Violation Fixer\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity - Enable test runner to function, unblock development pipeline\n- Value Impact: Restores test execution capability, prevents regression accumulation\n- Strategic Impact: $50K+ monthly dev velocity protection through working test infrastructure\n\nThis script automatically fixes test size violations by:\n1. Splitting oversized test files (>300 lines) into focused modules\n2. Extracting common fixtures and utilities\n3. Breaking large test functions (>8 lines) into focused tests\n4. Preserving all test functionality while improving maintainability",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:2"
      ]
    },
    "Automated staging login test script for agent testing.\nThis script provides multiple methods for testing staging login without manual OAuth flow.": {
      "value": "Automated staging login test script for agent testing.\nThis script provides multiple methods for testing staging login without manual OAuth flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:2"
      ]
    },
    "Automated test fix loop script.\n\nThis script runs test suite iterations and fixes issues automatically.": {
      "value": "Automated test fix loop script.\n\nThis script runs test suite iterations and fixes issues automatically.",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:1"
      ]
    },
    "Automated test thread": {
      "value": "Automated test thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:327"
      ]
    },
    "Automatic function refactoring is not supported": {
      "value": "Automatic function refactoring is not supported",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:625"
      ]
    },
    "Automatically fix identified issues": {
      "value": "Automatically fix identified issues",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:273"
      ]
    },
    "Automatically fix test size violations": {
      "value": "Automatically fix test size violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:717"
      ]
    },
    "Autonomous Test Review System - Entry Point\nWrapper script for the autonomous test review system": {
      "value": "Autonomous Test Review System - Entry Point\nWrapper script for the autonomous test review system",
      "category": "test_literals",
      "locations": [
        "scripts/test_autonomous_review.py:2"
      ]
    },
    "Autonomous Test Review System - Main Reviewer\nMain autonomous test reviewer class for orchestrating analysis and improvements": {
      "value": "Autonomous Test Review System - Main Reviewer\nMain autonomous test reviewer class for orchestrating analysis and improvements",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:2"
      ]
    },
    "Autonomous Test Review System - Test Generator\nIntelligent test generation and modernization capabilities": {
      "value": "Autonomous Test Review System - Test Generator\nIntelligent test generation and modernization capabilities",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:2"
      ]
    },
    "Available CLI tools:": {
      "value": "Available CLI tools:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:175"
      ]
    },
    "Available Methods:": {
      "value": "Available Methods:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:293"
      ]
    },
    "Available URLs:": {
      "value": "Available URLs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:64"
      ]
    },
    "Available categories:": {
      "value": "Available categories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:217"
      ]
    },
    "Average Business Value Score:": {
      "value": "Average Business Value Score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:738"
      ]
    },
    "Average Duration:": {
      "value": "Average Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1120"
      ]
    },
    "Average Success Rate:": {
      "value": "Average Success Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1122"
      ]
    },
    "Average latency increased by 15%": {
      "value": "Average latency increased by 15%",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:321"
      ]
    },
    "BACKEND": {
      "value": "BACKEND",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:38",
        "scripts/test_chat_errors.py:39",
        "scripts/test_chat_errors.py:44",
        "scripts/test_chat_errors.py:45",
        "scripts/test_log_introspection.py:365"
      ]
    },
    "BACKEND_PORT": {
      "value": "BACKEND_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:255"
      ]
    },
    "BACKEND_URL": {
      "value": "BACKEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:153",
        "scripts/unified_test_runner.py:207",
        "scripts/unified_test_runner.py:207"
      ]
    },
    "BASE_URL": {
      "value": "BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:27"
      ]
    },
    "BATCH PROCESSING COMPLETE": {
      "value": "BATCH PROCESSING COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:378"
      ]
    },
    "BATCH TEST FIXER": {
      "value": "BATCH TEST FIXER",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:345"
      ]
    },
    "BLOCKED": {
      "value": "BLOCKED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:43",
        "scripts/test_cors_ssot_compliance.py:79",
        "scripts/test_cors_ssot_compliance.py:87",
        "scripts/test_cors_ssot_compliance.py:125",
        "scripts/test_cors_ssot_compliance.py:133"
      ]
    },
    "BUSINESS IMPACT:": {
      "value": "BUSINESS IMPACT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:223",
        "scripts/test_secret_manager_builder_critical.py:649"
      ]
    },
    "BUSINESS IMPACT:\n   • Current system load time:": {
      "value": "BUSINESS IMPACT:\n   • Current system load time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:659"
      ]
    },
    "BUSINESS IMPACT:\n   • Security risk: Production secrets not meeting enterprise standards\n   • Compliance risk: Weak authentication in production environment\n   • Audit risk: Inconsistent security validation across services\n   • Incident risk: Weak secrets enabling unauthorized access\n\n✅ SOLUTION: SecretManagerBuilder with built-in security validation\n   🔒 Mandatory secret strength validation per environment\n   🛡️  Unified security policies across all services\n   📋 Automated security compliance checking\n   🚨 Production-grade security monitoring and alerting": {
      "value": "BUSINESS IMPACT:\n   • Security risk: Production secrets not meeting enterprise standards\n   • Compliance risk: Weak authentication in production environment\n   • Audit risk: Inconsistent security validation across services\n   • Incident risk: Weak secrets enabling unauthorized access\n\n✅ SOLUTION: SecretManagerBuilder with built-in security validation\n   🔒 Mandatory secret strength validation per environment\n   🛡️  Unified security policies across all services\n   📋 Automated security compliance checking\n   🚨 Production-grade security monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:780"
      ]
    },
    "BUSINESS VALUE TEST COVERAGE SUMMARY": {
      "value": "BUSINESS VALUE TEST COVERAGE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:734"
      ]
    },
    "BVJ:": {
      "value": "BVJ:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:147"
      ]
    },
    "Backed up": {
      "value": "Backed up",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:763"
      ]
    },
    "Backend API": {
      "value": "Backend API",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:179"
      ]
    },
    "Backend API Health": {
      "value": "Backend API Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:84"
      ]
    },
    "Backend Auth Required": {
      "value": "Backend Auth Required",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:72"
      ]
    },
    "Backend Health": {
      "value": "Backend Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:67",
        "scripts/test_staging_env.py:145"
      ]
    },
    "Backend Health:": {
      "value": "Backend Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:297"
      ]
    },
    "Backend Integration": {
      "value": "Backend Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:78"
      ]
    },
    "Backend Main Import": {
      "value": "Backend Main Import",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:158"
      ]
    },
    "Backend Service": {
      "value": "Backend Service",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:70",
        "scripts/test_async_postgres.py:167",
        "scripts/test_staging_auth_e2e.py:36"
      ]
    },
    "Backend Service:": {
      "value": "Backend Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:336"
      ]
    },
    "Backend Service: [green]✓ Healthy[/green]": {
      "value": "Backend Service: [green]✓ Healthy[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:112"
      ]
    },
    "Backend Service: [red]✗ Not reachable -": {
      "value": "Backend Service: [red]✗ Not reachable -",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:116"
      ]
    },
    "Backend Service: [red]✗ Unhealthy (": {
      "value": "Backend Service: [red]✗ Unhealthy (",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:113"
      ]
    },
    "Backend Startup Tests": {
      "value": "Backend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:87"
      ]
    },
    "Backend Tests:": {
      "value": "Backend Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:115"
      ]
    },
    "Backend URL: [cyan]": {
      "value": "Backend URL: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:437"
      ]
    },
    "Backend alone should not trigger production, got": {
      "value": "Backend alone should not trigger production, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:52"
      ]
    },
    "Backend configured to run on:": {
      "value": "Backend configured to run on:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:135"
      ]
    },
    "Backend health check failed with status": {
      "value": "Backend health check failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:37"
      ]
    },
    "Backend health check failed:": {
      "value": "Backend health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:41"
      ]
    },
    "Backend integration test failed:": {
      "value": "Backend integration test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:77"
      ]
    },
    "Backend is healthy": {
      "value": "Backend is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:35"
      ]
    },
    "Backend must start before frontend": {
      "value": "Backend must start before frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:101"
      ]
    },
    "Backend returned status": {
      "value": "Backend returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:39"
      ]
    },
    "Backend section": {
      "value": "Backend section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:365"
      ]
    },
    "Backend service URL": {
      "value": "Backend service URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:176"
      ]
    },
    "Backend service failed to start": {
      "value": "Backend service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:118"
      ]
    },
    "Backend service tests": {
      "value": "Backend service tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:82"
      ]
    },
    "Backend should be in registry": {
      "value": "Backend should be in registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:339"
      ]
    },
    "Backend should have started": {
      "value": "Backend should have started",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:332"
      ]
    },
    "Backend should not start before auth is ready": {
      "value": "Backend should not start before auth is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:112"
      ]
    },
    "Backend skips .env loading": {
      "value": "Backend skips .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:99"
      ]
    },
    "Backend unhealthy:": {
      "value": "Backend unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:37"
      ]
    },
    "Backend:": {
      "value": "Backend:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:121",
        "scripts/setup_e2e_test_ports.py:86",
        "scripts/test_and_fix_cors.py:118",
        "scripts/test_and_fix_cors.py:134"
      ]
    },
    "Background jobs not using RedisConfigurationBuilder:": {
      "value": "Background jobs not using RedisConfigurationBuilder:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:131"
      ]
    },
    "BackgroundJobWorker not using RedisConfigurationBuilder": {
      "value": "BackgroundJobWorker not using RedisConfigurationBuilder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:293"
      ]
    },
    "BackgroundJobs: Inappropriate fallback occurred": {
      "value": "BackgroundJobs: Inappropriate fallback occurred",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:152"
      ]
    },
    "Backups stored in:": {
      "value": "Backups stored in:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1012"
      ]
    },
    "Base URL": {
      "value": "Base URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:209"
      ]
    },
    "Base URL for testing (default: http://localhost:8000)": {
      "value": "Base URL for testing (default: http://localhost:8000)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:420"
      ]
    },
    "Base URL validation:": {
      "value": "Base URL validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:335"
      ]
    },
    "Base URL:": {
      "value": "Base URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:241"
      ]
    },
    "Based on the analysis of your AI workload, I've identified several optimization opportunities.": {
      "value": "Based on the analysis of your AI workload, I've identified several optimization opportunities.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:160"
      ]
    },
    "Basic Socket Binding": {
      "value": "Basic Socket Binding",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:157"
      ]
    },
    "Batch Test Fixer - Systematically fixes test failures\nProcesses tests in batches and either:\n1. Aligns tests with current code\n2. Implements missing functionality if tests are correct": {
      "value": "Batch Test Fixer - Systematically fixes test failures\nProcesses tests in batches and either:\n1. Aligns tests with current code\n2. Implements missing functionality if tests are correct",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:2"
      ]
    },
    "Batch fix known test issues and run test iterations.": {
      "value": "Batch fix known test issues and run test iterations.",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:2"
      ]
    },
    "Batch processing completed": {
      "value": "Batch processing completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:128"
      ]
    },
    "Bearer": {
      "value": "Bearer",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:195",
        "auth_service/tests/factories/token_factory.py:219",
        "auth_service/tests/integration/test_refresh_integration.py:104",
        "auth_service/tests/integration/test_refresh_integration.py:114",
        "auth_service/tests/integration/test_refresh_integration.py:380",
        "auth_service/tests/test_auth_comprehensive.py:228",
        "auth_service/tests/test_auth_comprehensive.py:484",
        "auth_service/tests/test_oauth_state_validation.py:117",
        "auth_service/tests/test_oauth_state_validation.py:262",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:62"
      ]
    },
    "Bearer fake-token-for-testing": {
      "value": "Bearer fake-token-for-testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:82"
      ]
    },
    "Bearer test": {
      "value": "Bearer test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:105",
        "scripts/test_staging_deployment.py:107",
        "scripts/test_staging_deployment.py:109"
      ]
    },
    "Bearer test_token_123": {
      "value": "Bearer test_token_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:177"
      ]
    },
    "Binding port (": {
      "value": "Binding port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:103"
      ]
    },
    "Browser to use for Cypress tests (default: chrome)": {
      "value": "Browser to use for Cypress tests (default: chrome)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1076"
      ]
    },
    "Build frontend for production": {
      "value": "Build frontend for production",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:410"
      ]
    },
    "Building frontend...": {
      "value": "Building frontend...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:298"
      ]
    },
    "Business Value Justification": {
      "value": "Business Value Justification",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:147"
      ]
    },
    "Business Value Test Index Generator\n\nScans the codebase to create a comprehensive index of all tests,\ncategorized by business value, customer tier, and coverage dimensions.": {
      "value": "Business Value Test Index Generator\n\nScans the codebase to create a comprehensive index of all tests,\ncategorized by business value, customer tier, and coverage dimensions.",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:2"
      ]
    },
    "Business value test coverage report saved to": {
      "value": "Business value test coverage report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:727"
      ]
    },
    "By Priority:": {
      "value": "By Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1124"
      ]
    },
    "By Type:": {
      "value": "By Type:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1128"
      ]
    },
    "CATEGORY STATISTICS": {
      "value": "CATEGORY STATISTICS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1111"
      ]
    },
    "CI": {
      "value": "CI",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:62"
      ]
    },
    "CI Check for Test Stubs in Production Code\n\nThis script runs as part of the CI/CD pipeline to detect test stubs in production code.\nIt fails the build if any test stubs are found according to SPEC/no_test_stubs.xml.\n\nUsage:\n    python scripts/ci/check_test_stubs.py          # Run check and exit with code\n    python scripts/ci/check_test_stubs.py --quiet  # Minimal output for CI": {
      "value": "CI Check for Test Stubs in Production Code\n\nThis script runs as part of the CI/CD pipeline to detect test stubs in production code.\nIt fails the build if any test stubs are found according to SPEC/no_test_stubs.xml.\n\nUsage:\n    python scripts/ci/check_test_stubs.py          # Run check and exit with code\n    python scripts/ci/check_test_stubs.py --quiet  # Minimal output for CI",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:2"
      ]
    },
    "CI Test Stub Checker": {
      "value": "CI Test Stub Checker",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:106"
      ]
    },
    "CLAUDE_3_OPUS": {
      "value": "CLAUDE_3_OPUS",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:27",
        "scripts/validate_llm_test_models.py:36"
      ]
    },
    "CLAUDE_3_SONNET": {
      "value": "CLAUDE_3_SONNET",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:21"
      ]
    },
    "CLICKHOUSE_": {
      "value": "CLICKHOUSE_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "CLICKHOUSE_HOST": {
      "value": "CLICKHOUSE_HOST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:83",
        "scripts/test_staging_startup.py:112",
        "scripts/test_staging_startup.py:218"
      ]
    },
    "CLICKHOUSE_PASSWORD": {
      "value": "CLICKHOUSE_PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:82",
        "scripts/test_secret_manager_builder_critical.py:160",
        "scripts/test_secret_manager_builder_critical.py:693",
        "scripts/test_secret_manager_builder_critical.py:704",
        "scripts/test_secret_manager_builder_critical.py:802",
        "scripts/test_staging_clickhouse.py:83",
        "scripts/unified_test_runner.py:241"
      ]
    },
    "CLICKHOUSE_PORT": {
      "value": "CLICKHOUSE_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:83"
      ]
    },
    "CLICKHOUSE_URL": {
      "value": "CLICKHOUSE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:80"
      ]
    },
    "CLOSED": {
      "value": "CLOSED",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:16"
      ]
    },
    "CLOSING": {
      "value": "CLOSING",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:17"
      ]
    },
    "COMPLETED": {
      "value": "COMPLETED",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:158"
      ]
    },
    "COMPLETED:": {
      "value": "COMPLETED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:164"
      ]
    },
    "COMPLIANCE ANALYSIS": {
      "value": "COMPLIANCE ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:43"
      ]
    },
    "COMPONENT_MAPPINGS = {\n    \"backend\": {\n        \"paths\": [\"netra_backend/tests\"],\n        \"exclude\": [\"frontend\", \"auth_service\"]\n    },\n    \"frontend\": {\n        \"paths\": [\"frontend/__tests__\"],\n        \"exclude\": []\n    },\n    \"auth\": {\n        \"paths\": [\"netra_backend/tests/auth_integration\", \"auth_service/tests\"],\n        \"exclude\": []\n    },\n    \"agents\": {\n        \"paths\": [\"netra_backend/tests/agents\"],\n        \"exclude\": []\n    },\n    \"database\": {\n        \"paths\": [\"netra_backend/tests/database\", \"netra_backend/tests/clickhouse\"],\n        \"exclude\": []\n    },\n    \"websocket\": {\n        \"paths\": [\"netra_backend/tests/websocket\", \"netra_backend/tests/ws_manager\"],\n        \"exclude\": []\n    }\n}": {
      "value": "COMPONENT_MAPPINGS = {\n    \"backend\": {\n        \"paths\": [\"netra_backend/tests\"],\n        \"exclude\": [\"frontend\", \"auth_service\"]\n    },\n    \"frontend\": {\n        \"paths\": [\"frontend/__tests__\"],\n        \"exclude\": []\n    },\n    \"auth\": {\n        \"paths\": [\"netra_backend/tests/auth_integration\", \"auth_service/tests\"],\n        \"exclude\": []\n    },\n    \"agents\": {\n        \"paths\": [\"netra_backend/tests/agents\"],\n        \"exclude\": []\n    },\n    \"database\": {\n        \"paths\": [\"netra_backend/tests/database\", \"netra_backend/tests/clickhouse\"],\n        \"exclude\": []\n    },\n    \"websocket\": {\n        \"paths\": [\"netra_backend/tests/websocket\", \"netra_backend/tests/ws_manager\"],\n        \"exclude\": []\n    }\n}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:278"
      ]
    },
    "COMPONENT_MAPPINGS\\s*=\\s*\\{[^}]+\\}": {
      "value": "COMPONENT_MAPPINGS\\s*=\\s*\\{[^}]+\\}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:276"
      ]
    },
    "COMPREHENSIVE IMPORT TEST": {
      "value": "COMPREHENSIVE IMPORT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:68"
      ]
    },
    "COMPREHENSIVE SECRET MANAGER ANALYSIS": {
      "value": "COMPREHENSIVE SECRET MANAGER ANALYSIS",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:487"
      ]
    },
    "COMPREHENSIVE TEST FIXER": {
      "value": "COMPREHENSIVE TEST FIXER",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:289"
      ]
    },
    "COMPREHENSIVE TEST IMPORT FIX REPORT": {
      "value": "COMPREHENSIVE TEST IMPORT FIX REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:307"
      ]
    },
    "COMPREHENSIVE TEST QUALITY REPORT": {
      "value": "COMPREHENSIVE TEST QUALITY REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:248"
      ]
    },
    "CONFIG:": {
      "value": "CONFIG:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:233"
      ]
    },
    "CONFIGURATION ISSUES:": {
      "value": "CONFIGURATION ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:280"
      ]
    },
    "CONNECTING": {
      "value": "CONNECTING",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:15"
      ]
    },
    "CORS": {
      "value": "CORS",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:88",
        "scripts/test_chat_errors.py:89",
        "scripts/test_chat_errors.py:94",
        "scripts/test_chat_errors.py:95",
        "scripts/test_log_introspection.py:331"
      ]
    },
    "CORS Configuration": {
      "value": "CORS Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:118",
        "scripts/test_auth_integration.py:124",
        "scripts/test_staging_env.py:150"
      ]
    },
    "CORS Configuration Report": {
      "value": "CORS Configuration Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:457"
      ]
    },
    "CORS Configuration Test": {
      "value": "CORS Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:94"
      ]
    },
    "CORS DEBUG TEST": {
      "value": "CORS DEBUG TEST",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:57"
      ]
    },
    "CORS Headers:": {
      "value": "CORS Headers:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:81",
        "scripts/debug_cors_test.py:99",
        "scripts/test_cors_issue.py:22",
        "scripts/test_cors_issue.py:43",
        "scripts/test_cors_issue.py:65"
      ]
    },
    "CORS Issues Found:": {
      "value": "CORS Issues Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:551"
      ]
    },
    "CORS OK": {
      "value": "CORS OK",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:371"
      ]
    },
    "CORS Origin Header:": {
      "value": "CORS Origin Header:",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141"
      ]
    },
    "CORS SSOT Compliance Test": {
      "value": "CORS SSOT Compliance Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:197"
      ]
    },
    "CORS Test Results:": {
      "value": "CORS Test Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:173"
      ]
    },
    "CORS Testing and Debugging Script\n\nBusiness Value Justification (BVJ):\n- Segment: ALL (Operational tooling)\n- Business Goal: Rapidly diagnose and fix CORS issues\n- Value Impact: Reduces time to resolution for CORS-related incidents\n- Strategic Impact: Enables proactive CORS testing and validation\n\nThis script provides comprehensive CORS testing capabilities:\n- Test CORS configuration for any endpoint\n- Show which origins are allowed\n- Validate current environment settings\n- Generate CORS configuration reports\n- Test WebSocket CORS support": {
      "value": "CORS Testing and Debugging Script\n\nBusiness Value Justification (BVJ):\n- Segment: ALL (Operational tooling)\n- Business Goal: Rapidly diagnose and fix CORS issues\n- Value Impact: Reduces time to resolution for CORS-related incidents\n- Strategic Impact: Enables proactive CORS testing and validation\n\nThis script provides comprehensive CORS testing capabilities:\n- Test CORS configuration for any endpoint\n- Show which origins are allowed\n- Validate current environment settings\n- Generate CORS configuration reports\n- Test WebSocket CORS support",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:2"
      ]
    },
    "CORS Testing and Debugging Tool": {
      "value": "CORS Testing and Debugging Tool",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:417"
      ]
    },
    "CORS actual request successful (status:": {
      "value": "CORS actual request successful (status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:134"
      ]
    },
    "CORS configured:": {
      "value": "CORS configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:111"
      ]
    },
    "CORS errors": {
      "value": "CORS errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:364"
      ]
    },
    "CORS headers missing from backend": {
      "value": "CORS headers missing from backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:87"
      ]
    },
    "CORS headers not properly configured": {
      "value": "CORS headers not properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:113"
      ]
    },
    "CORS policy blocked request": {
      "value": "CORS policy blocked request",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:332"
      ]
    },
    "CORS preflight successful (status:": {
      "value": "CORS preflight successful (status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:96"
      ]
    },
    "CORS test failed:": {
      "value": "CORS test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:123",
        "scripts/test_staging_env.py:115",
        "scripts/test_websocket_middleware.py:117"
      ]
    },
    "CORS validation test PASSED": {
      "value": "CORS validation test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:161"
      ]
    },
    "CORS validation test failed:": {
      "value": "CORS validation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:166"
      ]
    },
    "CORS: 1": {
      "value": "CORS: 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:364"
      ]
    },
    "COVERAGE_ENABLED": {
      "value": "COVERAGE_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:228"
      ]
    },
    "CPU Intensive:": {
      "value": "CPU Intensive:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1118"
      ]
    },
    "CPU Utilization:": {
      "value": "CPU Utilization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:354"
      ]
    },
    "CRASHED:": {
      "value": "CRASHED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:169",
        "auth_service/test_url_construction.py:235"
      ]
    },
    "CREATE DATABASE": {
      "value": "CREATE DATABASE",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:220"
      ]
    },
    "CREATE TABLE IF NOT EXISTS test_connectivity (id UInt32) ENGINE = Memory": {
      "value": "CREATE TABLE IF NOT EXISTS test_connectivity (id UInt32) ENGINE = Memory",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:186"
      ]
    },
    "CRITICAL": {
      "value": "CRITICAL",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:72",
        "scripts/test_error_monitor_logic.py:35",
        "scripts/test_error_monitor_logic.py:63"
      ]
    },
    "CRITICAL (must fix)": {
      "value": "CRITICAL (must fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:119"
      ]
    },
    "CRITICAL FAILING TEST: Redis Configuration Inconsistency Across Services and Environments\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: System Reliability, Development Velocity, Operational Cost Reduction\n- Value Impact: Prevents cache degradation that causes 3-5x slower response times affecting all users\n- Strategic Impact: $200K/year in prevented operational incidents + 40% faster development cycles\n\nTHE SINGLE MOST IMPORTANT REDIS CONFIGURATION PROBLEM:\nConfiguration inconsistency across services leads to silent failures in staging that become\ncritical outages in production. Current system has 30+ duplicate Redis configuration \nimplementations with different fallback behaviors, SSL settings, and connection pooling.\n\nCORE BUSINESS PAIN POINTS THIS TEST EXPOSES:\n1. Silent fallback behavior masks production readiness issues (costs $50K per incident)\n2. Development debugging is 5x slower due to inconsistent configuration patterns\n3. Redis connection failures cause service degradation rather than clear errors\n4. Different services use different Redis configuration patterns (SSOT violation)\n\nCRITICAL PRODUCTION SCENARIO THIS TEST VALIDATES:\nWhen Redis is unavailable in staging, some services fallback gracefully while others fail.\nThis inconsistency means staging doesn't validate production behavior, leading to:\n- Cache misses causing 300% slower response times for Premium/Enterprise customers\n- Session loss requiring user re-authentication (impacts conversion rates)  \n- Background job failures that appear to work but silently drop tasks\n\nTHIS TEST MUST FAIL because current implementation has:\n- RedisManager with localhost fallback in development\n- Background jobs with separate redis_config parameter\n- Different SSL/TLS handling across services  \n- No unified Secret Manager integration for Redis credentials\n- Inconsistent connection pooling across services": {
      "value": "CRITICAL FAILING TEST: Redis Configuration Inconsistency Across Services and Environments\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: System Reliability, Development Velocity, Operational Cost Reduction\n- Value Impact: Prevents cache degradation that causes 3-5x slower response times affecting all users\n- Strategic Impact: $200K/year in prevented operational incidents + 40% faster development cycles\n\nTHE SINGLE MOST IMPORTANT REDIS CONFIGURATION PROBLEM:\nConfiguration inconsistency across services leads to silent failures in staging that become\ncritical outages in production. Current system has 30+ duplicate Redis configuration \nimplementations with different fallback behaviors, SSL settings, and connection pooling.\n\nCORE BUSINESS PAIN POINTS THIS TEST EXPOSES:\n1. Silent fallback behavior masks production readiness issues (costs $50K per incident)\n2. Development debugging is 5x slower due to inconsistent configuration patterns\n3. Redis connection failures cause service degradation rather than clear errors\n4. Different services use different Redis configuration patterns (SSOT violation)\n\nCRITICAL PRODUCTION SCENARIO THIS TEST VALIDATES:\nWhen Redis is unavailable in staging, some services fallback gracefully while others fail.\nThis inconsistency means staging doesn't validate production behavior, leading to:\n- Cache misses causing 300% slower response times for Premium/Enterprise customers\n- Session loss requiring user re-authentication (impacts conversion rates)  \n- Background job failures that appear to work but silently drop tasks\n\nTHIS TEST MUST FAIL because current implementation has:\n- RedisManager with localhost fallback in development\n- Background jobs with separate redis_config parameter\n- Different SSL/TLS handling across services  \n- No unified Secret Manager integration for Redis credentials\n- Inconsistent connection pooling across services",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:1"
      ]
    },
    "CRITICAL FAILING TEST: SecretManagerBuilder Definition of Done\n\nThis is THE single most important test that validates SecretManagerBuilder delivers \non its business promises. When this test passes, the entire project has succeeded.\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: Platform Stability, Development Velocity, Risk Reduction\n- Value Impact: Eliminates 2-3 day secret integration cycles → 30 minute integrations\n- Strategic Impact: $150K/year in prevented incidents + 60% faster development cycles\n\n**THE ONE CRITICAL PROBLEM THIS TEST SOLVES:**\nFRAGMENTATION: Currently 4 different secret manager implementations with:\n- 1,385 lines of duplicated code across services\n- Hardcoded GCP project IDs in 8+ locations  \n- Inconsistent fallback chains causing production drift\n- No unified debugging when secrets fail\n\n**SUCCESS CRITERIA:**\nThis test becomes the \"Definition of Done\" - when it passes, we have:\n1. ✅ Unified SecretManagerBuilder following RedisConfigurationBuilder pattern\n2. ✅ Service independence maintained (auth_service vs netra_backend)\n3. ✅ Security-first design with no placeholder values in production\n4. ✅ Measurable performance improvements\n5. ✅ Backward compatibility during transition\n6. ✅ Production-grade error handling and debugging\n\n**EXPECTED CURRENT STATE: FAIL**\nThis test MUST fail because SecretManagerBuilder doesn't exist yet.\nCurrent implementations are fragmented and inconsistent.\n\n**EXPECTED FUTURE STATE: PASS**  \nOnce SecretManagerBuilder is implemented following the RedisConfigurationBuilder \npattern with 9 specialized sub-builders, this test will pass completely.": {
      "value": "CRITICAL FAILING TEST: SecretManagerBuilder Definition of Done\n\nThis is THE single most important test that validates SecretManagerBuilder delivers \non its business promises. When this test passes, the entire project has succeeded.\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n- Segment: Platform/Internal (affects ALL customer tiers through infrastructure reliability)\n- Business Goal: Platform Stability, Development Velocity, Risk Reduction\n- Value Impact: Eliminates 2-3 day secret integration cycles → 30 minute integrations\n- Strategic Impact: $150K/year in prevented incidents + 60% faster development cycles\n\n**THE ONE CRITICAL PROBLEM THIS TEST SOLVES:**\nFRAGMENTATION: Currently 4 different secret manager implementations with:\n- 1,385 lines of duplicated code across services\n- Hardcoded GCP project IDs in 8+ locations  \n- Inconsistent fallback chains causing production drift\n- No unified debugging when secrets fail\n\n**SUCCESS CRITERIA:**\nThis test becomes the \"Definition of Done\" - when it passes, we have:\n1. ✅ Unified SecretManagerBuilder following RedisConfigurationBuilder pattern\n2. ✅ Service independence maintained (auth_service vs netra_backend)\n3. ✅ Security-first design with no placeholder values in production\n4. ✅ Measurable performance improvements\n5. ✅ Backward compatibility during transition\n6. ✅ Production-grade error handling and debugging\n\n**EXPECTED CURRENT STATE: FAIL**\nThis test MUST fail because SecretManagerBuilder doesn't exist yet.\nCurrent implementations are fragmented and inconsistent.\n\n**EXPECTED FUTURE STATE: PASS**  \nOnce SecretManagerBuilder is implemented following the RedisConfigurationBuilder \npattern with 9 specialized sub-builders, this test will pass completely.",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:1"
      ]
    },
    "CRITICAL FILES (Immediate Attention Required):": {
      "value": "CRITICAL FILES (Immediate Attention Required):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:280"
      ]
    },
    "CRITICAL GAPS:": {
      "value": "CRITICAL GAPS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:758"
      ]
    },
    "CRITICAL IMPORT TEST (Fast-Fail Mode)": {
      "value": "CRITICAL IMPORT TEST (Fast-Fail Mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:82"
      ]
    },
    "CRITICAL REDIS CONFIGURATION FAILURE - Business Impact Analysis:": {
      "value": "CRITICAL REDIS CONFIGURATION FAILURE - Business Impact Analysis:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:217"
      ]
    },
    "CRITICAL TEST: Cross-Service Secret Consistency in Production Deployment": {
      "value": "CRITICAL TEST: Cross-Service Secret Consistency in Production Deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:120"
      ]
    },
    "CRITICAL violations** found:": {
      "value": "CRITICAL violations** found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:505"
      ]
    },
    "CRITICAL:": {
      "value": "CRITICAL:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:129"
      ]
    },
    "CRITICAL: Coverage below 80% - focus on unit test generation for core modules": {
      "value": "CRITICAL: Coverage below 80% - focus on unit test generation for core modules",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:247"
      ]
    },
    "CRITICAL: Found": {
      "value": "CRITICAL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:444"
      ]
    },
    "CRITICAL: Run all tests immediately to verify nothing is broken!": {
      "value": "CRITICAL: Run all tests immediately to verify nothing is broken!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1009"
      ]
    },
    "CSV report saved to": {
      "value": "CSV report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:513"
      ]
    },
    "Cache Hit Rate:": {
      "value": "Cache Hit Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:351"
      ]
    },
    "Cache Hits:": {
      "value": "Cache Hits:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:337"
      ]
    },
    "Cache hit for query": {
      "value": "Cache hit for query",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:98"
      ]
    },
    "Cache refreshed": {
      "value": "Cache refreshed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:129"
      ]
    },
    "Calculating cosine similarities...": {
      "value": "Calculating cosine similarities...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:255"
      ]
    },
    "Cannot connect to": {
      "value": "Cannot connect to",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:79"
      ]
    },
    "Cannot connect to PostgreSQL database": {
      "value": "Cannot connect to PostgreSQL database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:174"
      ]
    },
    "Cannot connect to PostgreSQL:": {
      "value": "Cannot connect to PostgreSQL:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:163"
      ]
    },
    "Cannot connect to Redis": {
      "value": "Cannot connect to Redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:178"
      ]
    },
    "Cannot connect to Redis:": {
      "value": "Cannot connect to Redis:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:188"
      ]
    },
    "Cannot connect to accounts.google.com": {
      "value": "Cannot connect to accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:397"
      ]
    },
    "Cannot find file for module:": {
      "value": "Cannot find file for module:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:184"
      ]
    },
    "Cannot run Cypress tests: Backend service not running on port 8000. Start the backend service first.": {
      "value": "Cannot run Cypress tests: Backend service not running on port 8000. Start the backend service first.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:568"
      ]
    },
    "Cannot run Cypress tests: Docker Desktop not running and required local services not available. Either start Docker Desktop or run local PostgreSQL (port 5432) and Redis (port 6379) services.": {
      "value": "Cannot run Cypress tests: Docker Desktop not running and required local services not available. Either start Docker Desktop or run local PostgreSQL (port 5432) and Redis (port 6379) services.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:560"
      ]
    },
    "Cascading failure detected": {
      "value": "Cascading failure detected",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:111"
      ]
    },
    "Categories Executed:": {
      "value": "Categories Executed:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:894"
      ]
    },
    "Categories with History:": {
      "value": "Categories with History:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1121"
      ]
    },
    "Categories with very few tests:": {
      "value": "Categories with very few tests:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:478"
      ]
    },
    "Category '": {
      "value": "Category '",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459",
        "scripts/analyze_test_overlap.py:465",
        "scripts/unified_test_runner.py:402"
      ]
    },
    "Category Results:": {
      "value": "Category Results:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:896"
      ]
    },
    "Category failed": {
      "value": "Category failed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:340"
      ]
    },
    "Category section": {
      "value": "Category section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:361"
      ]
    },
    "Category:": {
      "value": "Category:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:179",
        "scripts/test_backend.py:364",
        "scripts/test_backend_optimized.py:126",
        "scripts/test_backend_optimized.py:424"
      ]
    },
    "CategoryFailure": {
      "value": "CategoryFailure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:341"
      ]
    },
    "Certificate expires:": {
      "value": "Certificate expires:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:84"
      ]
    },
    "Certificate issuer:": {
      "value": "Certificate issuer:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:78"
      ]
    },
    "Certificate subject:": {
      "value": "Certificate subject:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:77"
      ]
    },
    "Certificate version:": {
      "value": "Certificate version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:79"
      ]
    },
    "Changes made:": {
      "value": "Changes made:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:211"
      ]
    },
    "Chat flow test failed:": {
      "value": "Chat flow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:367"
      ]
    },
    "Check environment configuration": {
      "value": "Check environment configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:56"
      ]
    },
    "Check for inter-class dependencies": {
      "value": "Check for inter-class dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:484"
      ]
    },
    "Check for memory leaks": {
      "value": "Check for memory leaks",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:397"
      ]
    },
    "Check health of backend and auth services": {
      "value": "Check health of backend and auth services",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:98"
      ]
    },
    "Check if a service is healthy.": {
      "value": "Check if a service is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:190"
      ]
    },
    "Check test dependencies before running": {
      "value": "Check test dependencies before running",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:510",
        "scripts/test_frontend.py:415"
      ]
    },
    "Check that setup_test_path() is called before any netra_backend imports in test files.": {
      "value": "Check that setup_test_path() is called before any netra_backend imports in test files.",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:1"
      ]
    },
    "Check the error messages above for specific issues": {
      "value": "Check the error messages above for specific issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:324"
      ]
    },
    "Checked": {
      "value": "Checked",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:82"
      ]
    },
    "Checking": {
      "value": "Checking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:243",
        "scripts/test_staging_login_automated.py:191"
      ]
    },
    "Checking configuration...": {
      "value": "Checking configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:184"
      ]
    },
    "Checking dependencies...": {
      "value": "Checking dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:338",
        "scripts/test_frontend.py:448"
      ]
    },
    "Checking for conftest.py violations...": {
      "value": "Checking for conftest.py violations...",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:70"
      ]
    },
    "Checking for legacy CORS code:": {
      "value": "Checking for legacy CORS code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:174"
      ]
    },
    "Checking for syntax issues...": {
      "value": "Checking for syntax issues...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:346"
      ]
    },
    "Checking for test stubs in production code...": {
      "value": "Checking for test stubs in production code...",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:34"
      ]
    },
    "Checking imports...": {
      "value": "Checking imports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:178",
        "scripts/test_example_message_flow.py:375"
      ]
    },
    "Checking service availability...": {
      "value": "Checking service availability...",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:207"
      ]
    },
    "Checking tables after transaction...": {
      "value": "Checking tables after transaction...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:46"
      ]
    },
    "Checking test files in:": {
      "value": "Checking test files in:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:134"
      ]
    },
    "Circuit Breaker Migration Fix": {
      "value": "Circuit Breaker Migration Fix",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:59"
      ]
    },
    "Circuit breaker opened for service": {
      "value": "Circuit breaker opened for service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:110"
      ]
    },
    "Circular env.ACT reference found": {
      "value": "Circular env.ACT reference found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:230"
      ]
    },
    "Classes:": {
      "value": "Classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:90",
        "scripts/compliance/test_refactor_helper.py:708"
      ]
    },
    "Clean up Node processes on exit (automatic on Windows)": {
      "value": "Clean up Node processes on exit (automatic on Windows)",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:423"
      ]
    },
    "Clean up hanging test processes": {
      "value": "Clean up hanging test processes",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:146"
      ]
    },
    "Clean up resources": {
      "value": "Clean up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:429"
      ]
    },
    "Clean up resources.": {
      "value": "Clean up resources.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:462"
      ]
    },
    "Cleaning up test processes...": {
      "value": "Cleaning up test processes...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:527"
      ]
    },
    "Cleanup cancelled.": {
      "value": "Cleanup cancelled.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:113"
      ]
    },
    "Cleanup error:": {
      "value": "Cleanup error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:477"
      ]
    },
    "Clear cache before execution": {
      "value": "Clear cache before execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:385"
      ]
    },
    "Cleared Jest cache.": {
      "value": "Cleared Jest cache.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:134"
      ]
    },
    "Cleared cache directory:": {
      "value": "Cleared cache directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:407"
      ]
    },
    "ClickHouse HTTP": {
      "value": "ClickHouse HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:67"
      ]
    },
    "ClickHouse Native": {
      "value": "ClickHouse Native",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:68"
      ]
    },
    "ClickHouse:": {
      "value": "ClickHouse:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:91"
      ]
    },
    "Client ID:": {
      "value": "Client ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:105",
        "scripts/test_oauth_dev_config.py:87",
        "scripts/test_oauth_dev_config.py:87"
      ]
    },
    "Client Secret:": {
      "value": "Client Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:106",
        "scripts/test_oauth_dev_config.py:93"
      ]
    },
    "Cloud SQL": {
      "value": "Cloud SQL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "Cloud SQL Configuration": {
      "value": "Cloud SQL Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:305"
      ]
    },
    "Cloud SQL Connector": {
      "value": "Cloud SQL Connector",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:175"
      ]
    },
    "Cloud SQL URL (should remove SSL parameters)": {
      "value": "Cloud SQL URL (should remove SSL parameters)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:109"
      ]
    },
    "Cloud SQL URL with SSL (should remove SSL)": {
      "value": "Cloud SQL URL with SSL (should remove SSL)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:146"
      ]
    },
    "Cloud SQL detected:": {
      "value": "Cloud SQL detected:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:82"
      ]
    },
    "Cloud SQL instance is not running or accessible": {
      "value": "Cloud SQL instance is not running or accessible",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:202"
      ]
    },
    "Cloud SQL socket connection detected": {
      "value": "Cloud SQL socket connection detected",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:237"
      ]
    },
    "Code:": {
      "value": "Code:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:333"
      ]
    },
    "Collected": {
      "value": "Collected",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75"
      ]
    },
    "Command": {
      "value": "Command",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:253"
      ]
    },
    "Command to execute": {
      "value": "Command to execute",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:154"
      ]
    },
    "Command:": {
      "value": "Command:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:17"
      ]
    },
    "Command: python": {
      "value": "Command: python",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:37",
        "scripts/test_verify_workflow_status_corrected.py:25"
      ]
    },
    "Commands": {
      "value": "Commands",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:669"
      ]
    },
    "Comment out sleep calls with optimization note": {
      "value": "Comment out sleep calls with optimization note",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:179"
      ]
    },
    "Complete OAuth flow test - complex integration test": {
      "value": "Complete OAuth flow test - complex integration test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:226"
      ]
    },
    "Complete coordination workflow successful": {
      "value": "Complete coordination workflow successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:342"
      ]
    },
    "Complete workflow should succeed": {
      "value": "Complete workflow should succeed",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:331"
      ]
    },
    "Complete workflow test failed:": {
      "value": "Complete workflow test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:346"
      ]
    },
    "Complex asyncio event loop issue during simulated service restart - needs investigation": {
      "value": "Complex asyncio event loop issue during simulated service restart - needs investigation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:19"
      ]
    },
    "Complex cross-service session sync simulation - asyncio issues": {
      "value": "Complex cross-service session sync simulation - asyncio issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:59"
      ]
    },
    "Complex database failover simulation - asyncio event loop issues": {
      "value": "Complex database failover simulation - asyncio event loop issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:40"
      ]
    },
    "Complex session security test - activity tracking implementation": {
      "value": "Complex session security test - activity tracking implementation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:211"
      ]
    },
    "Complex session security test - cascade invalidation logic": {
      "value": "Complex session security test - cascade invalidation logic",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:277"
      ]
    },
    "Complex session security test - needs extensive session manager mocking": {
      "value": "Complex session security test - needs extensive session manager mocking",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:113"
      ]
    },
    "Complex session security test - timeout enforcement mocking": {
      "value": "Complex session security test - timeout enforcement mocking",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:173"
      ]
    },
    "Compliance Rate:": {
      "value": "Compliance Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:53"
      ]
    },
    "Compliant Files:": {
      "value": "Compliant Files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:52"
      ]
    },
    "Component isolation tests (1-2min)": {
      "value": "Component isolation tests (1-2min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:31"
      ]
    },
    "Components:": {
      "value": "Components:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:204"
      ]
    },
    "Comprehensive Auth Service Test Suite\n====================================\n\nThis file consolidates all auth service testing functionality into a single comprehensive suite.\nReplaces the previous 89 test files with focused, complete test coverage.\n\nBusiness Value Justification (BVJ):\n- Segment: All tiers | Goal: System Stability | Impact: Critical path protection\n- Consolidates 89 test files into single comprehensive suite\n- Maintains 100% critical path coverage with zero duplication\n- Enables fast feedback loops for auth service changes\n\nTest Coverage:\n- OAuth flows (Google, GitHub, Local)\n- JWT token handling and validation  \n- Database operations and connections\n- Error handling and edge cases\n- Security scenarios and CSRF protection\n- Configuration and environment handling\n- API endpoints and HTTP methods\n- Redis connection and failover": {
      "value": "Comprehensive Auth Service Test Suite\n====================================\n\nThis file consolidates all auth service testing functionality into a single comprehensive suite.\nReplaces the previous 89 test files with focused, complete test coverage.\n\nBusiness Value Justification (BVJ):\n- Segment: All tiers | Goal: System Stability | Impact: Critical path protection\n- Consolidates 89 test files into single comprehensive suite\n- Maintains 100% critical path coverage with zero duplication\n- Enables fast feedback loops for auth service changes\n\nTest Coverage:\n- OAuth flows (Google, GitHub, Local)\n- JWT token handling and validation  \n- Database operations and connections\n- Error handling and edge cases\n- Security scenarios and CSRF protection\n- Configuration and environment handling\n- API endpoints and HTTP methods\n- Redis connection and failover",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:1"
      ]
    },
    "Comprehensive Fake Test Scan Results": {
      "value": "Comprehensive Fake Test Scan Results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:402"
      ]
    },
    "Comprehensive GitHub Workflows Testing with ACT\nTests all workflows locally to validate before pushing to GitHub": {
      "value": "Comprehensive GitHub Workflows Testing with ACT\nTests all workflows locally to validate before pushing to GitHub",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:2"
      ]
    },
    "Comprehensive OAuth state validation test.\nTests the OAuth flow state parameter validation to prevent CSRF attacks.": {
      "value": "Comprehensive OAuth state validation test.\nTests the OAuth flow state parameter validation to prevent CSRF attacks.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:1"
      ]
    },
    "Comprehensive Test Fixer - Analyzes and fixes all test failures systematically": {
      "value": "Comprehensive Test Fixer - Analyzes and fixes all test failures systematically",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:2"
      ]
    },
    "Comprehensive Unit Tests for DataValidator\n\nTests all data validation operations including request validation,\nraw data quality checks, analysis result validation, and quality scoring.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Data quality assurance and reliable analytics\n- Value Impact: Prevents incorrect insights that could impact revenue\n- Strategic Impact: Critical for data integrity and trustworthy analysis": {
      "value": "Comprehensive Unit Tests for DataValidator\n\nTests all data validation operations including request validation,\nraw data quality checks, analysis result validation, and quality scoring.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal  \n- Business Goal: Data quality assurance and reliable analytics\n- Value Impact: Prevents incorrect insights that could impact revenue\n- Strategic Impact: Critical for data integrity and trustworthy analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:1"
      ]
    },
    "Comprehensive WebSocket CORS Test Script\n\nThis script tests WebSocket connectivity in various scenarios to ensure CORS is properly configured\nfor Docker development environment. It tests connections with different origins and validates\nthat the development auth bypass works properly.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Ensure WebSocket reliability in development\n- Value Impact: Prevents connection issues that block development\n- Strategic Impact: Foundation for real-time features": {
      "value": "Comprehensive WebSocket CORS Test Script\n\nThis script tests WebSocket connectivity in various scenarios to ensure CORS is properly configured\nfor Docker development environment. It tests connections with different origins and validates\nthat the development auth bypass works properly.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Ensure WebSocket reliability in development\n- Value Impact: Prevents connection issues that block development\n- Strategic Impact: Foundation for real-time features",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:2"
      ]
    },
    "Comprehensive backend test runner for Netra AI Platform": {
      "value": "Comprehensive backend test runner for Netra AI Platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:434"
      ]
    },
    "Comprehensive backend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution": {
      "value": "Comprehensive backend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:2"
      ]
    },
    "Comprehensive fake test detection and reporting": {
      "value": "Comprehensive fake test detection and reporting",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:361"
      ]
    },
    "Comprehensive frontend test runner for Netra AI Platform": {
      "value": "Comprehensive frontend test runner for Netra AI Platform",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:349"
      ]
    },
    "Comprehensive frontend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution": {
      "value": "Comprehensive frontend test runner for Netra AI Platform\nDesigned for easy use by Claude Code and CI/CD pipelines\nNow with test isolation support for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:2"
      ]
    },
    "Comprehensive report saved to": {
      "value": "Comprehensive report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:353"
      ]
    },
    "Comprehensive script to fix all test import errors systematically.\nAnalyzes failing test files and fixes common import patterns.": {
      "value": "Comprehensive script to fix all test import errors systematically.\nAnalyzes failing test files and fixes common import patterns.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:2"
      ]
    },
    "Comprehensive staging deployment validation script.\nTests all critical endpoints and services on staging environment.": {
      "value": "Comprehensive staging deployment validation script.\nTests all critical endpoints and services on staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:2"
      ]
    },
    "Comprehensive suffix": {
      "value": "Comprehensive suffix",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:103"
      ]
    },
    "Comprehensive system-wide tests": {
      "value": "Comprehensive system-wide tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:120"
      ]
    },
    "Comprehensive test of DatabaseURLBuilder functionality and edge cases.": {
      "value": "Comprehensive test of DatabaseURLBuilder functionality and edge cases.",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:1"
      ]
    },
    "Comprehensive test size limits validator for Netra testing system.\n\nEnforces SPEC/testing.xml requirements:\n- Test files MUST follow same 450-line limit as production code\n- Test functions MUST follow same 25-line limit as production code\n- Prevents test files from becoming unmaintainable \"ravioli code\"\n\nFeatures:\n- Scans all test files for size violations\n- Reports files exceeding 300 lines\n- Reports functions exceeding 8 lines  \n- Provides refactoring suggestions\n- Can auto-split large test files\n- Integration with test runner": {
      "value": "Comprehensive test size limits validator for Netra testing system.\n\nEnforces SPEC/testing.xml requirements:\n- Test files MUST follow same 450-line limit as production code\n- Test functions MUST follow same 25-line limit as production code\n- Prevents test files from becoming unmaintainable \"ravioli code\"\n\nFeatures:\n- Scans all test files for size violations\n- Reports files exceeding 300 lines\n- Reports functions exceeding 8 lines  \n- Provides refactoring suggestions\n- Can auto-split large test files\n- Integration with test runner",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:2"
      ]
    },
    "Comprehensive test suite for auth refresh endpoint field naming compatibility.\nTests various field naming conventions and error scenarios.": {
      "value": "Comprehensive test suite for auth refresh endpoint field naming compatibility.\nTests various field naming conventions and error scenarios.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:1"
      ]
    },
    "Computed startup order:": {
      "value": "Computed startup order:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:90"
      ]
    },
    "Concurrent session limit verified": {
      "value": "Concurrent session limit verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:170"
      ]
    },
    "Concurrent token validation verified:": {
      "value": "Concurrent token validation verified:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:275"
      ]
    },
    "Confidence:": {
      "value": "Confidence:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:97",
        "scripts/compliance/test_refactor_helper.py:722"
      ]
    },
    "Config Valid:": {
      "value": "Config Valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:462"
      ]
    },
    "Config endpoint failed:": {
      "value": "Config endpoint failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:52"
      ]
    },
    "Config endpoint returned": {
      "value": "Config endpoint returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:105"
      ]
    },
    "Config endpoint returned:": {
      "value": "Config endpoint returned:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:49"
      ]
    },
    "Config endpoint test failed:": {
      "value": "Config endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:109"
      ]
    },
    "Configuration Files:": {
      "value": "Configuration Files:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:279"
      ]
    },
    "Configuration Inconsistencies:": {
      "value": "Configuration Inconsistencies:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:218"
      ]
    },
    "Configuration Loading": {
      "value": "Configuration Loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:235"
      ]
    },
    "Configuration Loading Test": {
      "value": "Configuration Loading Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:28"
      ]
    },
    "Configuration error:": {
      "value": "Configuration error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:69"
      ]
    },
    "Configuration failed to load": {
      "value": "Configuration failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:60"
      ]
    },
    "Configuration file not found:": {
      "value": "Configuration file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:196"
      ]
    },
    "Configuration fixes applied:": {
      "value": "Configuration fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:428"
      ]
    },
    "Configuration reloaded": {
      "value": "Configuration reloaded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:132"
      ]
    },
    "Configuration summary:": {
      "value": "Configuration summary:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:119"
      ]
    },
    "Configuration updated successfully.": {
      "value": "Configuration updated successfully.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:217"
      ]
    },
    "Configuration valid:": {
      "value": "Configuration valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:226",
        "scripts/test_staging_migrations.py:55"
      ]
    },
    "Configuration validation failed! Binding port": {
      "value": "Configuration validation failed! Binding port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:289"
      ]
    },
    "Configuration validation failed:": {
      "value": "Configuration validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:76",
        "scripts/test_example_message_flow.py:243"
      ]
    },
    "Configuration validation should catch port mismatches gracefully, but got exception:": {
      "value": "Configuration validation should catch port mismatches gracefully, but got exception:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:297"
      ]
    },
    "Conflicts:": {
      "value": "Conflicts:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1099"
      ]
    },
    "Connected": {
      "value": "Connected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:23"
      ]
    },
    "Connected to test WebSocket!": {
      "value": "Connected to test WebSocket!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:63"
      ]
    },
    "Connecting to:": {
      "value": "Connecting to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:158"
      ]
    },
    "Connection Analysis:": {
      "value": "Connection Analysis:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:194"
      ]
    },
    "Connection Issue Analysis": {
      "value": "Connection Issue Analysis",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:222"
      ]
    },
    "Connection Pooling URLs": {
      "value": "Connection Pooling URLs",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:310"
      ]
    },
    "Connection Status Utils": {
      "value": "Connection Status Utils",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:12"
      ]
    },
    "Connection Tests:": {
      "value": "Connection Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:290"
      ]
    },
    "Connection closed:": {
      "value": "Connection closed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:124"
      ]
    },
    "Connection established (no response within timeout)": {
      "value": "Connection established (no response within timeout)",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:105"
      ]
    },
    "Connection pool exhausted, queuing request": {
      "value": "Connection pool exhausted, queuing request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:103"
      ]
    },
    "Connection refused to Redis server": {
      "value": "Connection refused to Redis server",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:432"
      ]
    },
    "Connection refused to database": {
      "value": "Connection refused to database",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:303"
      ]
    },
    "Connection refused: Too many connections": {
      "value": "Connection refused: Too many connections",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:109"
      ]
    },
    "Connection state:": {
      "value": "Connection state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:68"
      ]
    },
    "Connection successful, no response to test message (expected)": {
      "value": "Connection successful, no response to test message (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:172"
      ]
    },
    "Connection type:": {
      "value": "Connection type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "Connection type: Cloud SQL Unix Socket": {
      "value": "Connection type: Cloud SQL Unix Socket",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:44"
      ]
    },
    "Connection type: TCP": {
      "value": "Connection type: TCP",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:49"
      ]
    },
    "Consider cluster-wide CPU optimization": {
      "value": "Consider cluster-wide CPU optimization",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:440"
      ]
    },
    "Consider exposing useful headers (X-Request-ID, etc.)": {
      "value": "Consider exposing useful headers (X-Request-ID, etc.)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:357"
      ]
    },
    "Consider increasing max_age to reduce preflight requests": {
      "value": "Consider increasing max_age to reduce preflight requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:352"
      ]
    },
    "Consider optimizing slow queries": {
      "value": "Consider optimizing slow queries",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:325"
      ]
    },
    "Consistently Failing Tests:": {
      "value": "Consistently Failing Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:296"
      ]
    },
    "Container ID:": {
      "value": "Container ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:147"
      ]
    },
    "Content-Type": {
      "value": "Content-Type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:313",
        "auth_service/tests/test_auth_comprehensive.py:506",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:172",
        "auth_service/tests/unit/test_refresh_endpoint.py:112",
        "scripts/debug_cors_test.py:17",
        "scripts/test_cors.py:103",
        "scripts/test_staging_auth_e2e.py:206",
        "scripts/test_staging_deployment.py:130",
        "scripts/test_staging_jwt_validation.py:63",
        "scripts/test_staging_jwt_validation.py:116"
      ]
    },
    "Content-Type, Authorization": {
      "value": "Content-Type, Authorization",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:24",
        "scripts/test_cors_implementation.py:52"
      ]
    },
    "Continue anyway? (y/n):": {
      "value": "Continue anyway? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:151"
      ]
    },
    "Continue testing even after failures": {
      "value": "Continue testing even after failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:58"
      ]
    },
    "Coordination should succeed with optional service failures": {
      "value": "Coordination should succeed with optional service failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:260"
      ]
    },
    "Core AI optimization delivering 30-50% cost savings for": {
      "value": "Core AI optimization delivering 30-50% cost savings for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:491"
      ]
    },
    "Core functionality unit tests": {
      "value": "Core functionality unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:48"
      ]
    },
    "Core logic failed:": {
      "value": "Core logic failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:26"
      ]
    },
    "Correct session state validation should succeed": {
      "value": "Correct session state validation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:205"
      ]
    },
    "Corrected test suite for verify_workflow_status.py\n\nTests various scenarios with proper expected behavior validation.": {
      "value": "Corrected test suite for verify_workflow_status.py\n\nTests various scenarios with proper expected behavior validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:2"
      ]
    },
    "Cost optimization opportunities identified": {
      "value": "Cost optimization opportunities identified",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:322"
      ]
    },
    "Cost savings of $1,200/month achieved.": {
      "value": "Cost savings of $1,200/month achieved.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:219"
      ]
    },
    "Could not auto-fix syntax in:": {
      "value": "Could not auto-fix syntax in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:367"
      ]
    },
    "Could not connect to PostgreSQL on ports 5432 or 5433": {
      "value": "Could not connect to PostgreSQL on ports 5432 or 5433",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:155"
      ]
    },
    "Could not parse JSON results:": {
      "value": "Could not parse JSON results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:147"
      ]
    },
    "Could not parse message as JSON": {
      "value": "Could not parse message as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:102"
      ]
    },
    "Could not read file:": {
      "value": "Could not read file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:148",
        "scripts/compliance/real_test_requirements_enforcer.py:180",
        "scripts/compliance/real_test_validator.py:103"
      ]
    },
    "Could not save report to": {
      "value": "Could not save report to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:355"
      ]
    },
    "Could not validate test file": {
      "value": "Could not validate test file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:746"
      ]
    },
    "Coverage System Validation Script\nTests that coverage reporting system works properly with pytest": {
      "value": "Coverage System Validation Script\nTests that coverage reporting system works properly with pytest",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:2"
      ]
    },
    "Coverage:": {
      "value": "Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:366"
      ]
    },
    "Create an authenticated user and return tokens": {
      "value": "Create an authenticated user and return tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:233"
      ]
    },
    "Create async client for auth service": {
      "value": "Create async client for auth service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:23"
      ]
    },
    "Create isolated session manager for testing.": {
      "value": "Create isolated session manager for testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:41"
      ]
    },
    "Create test user for integration tests": {
      "value": "Create test user for integration tests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:38"
      ]
    },
    "Created": {
      "value": "Created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283"
      ]
    },
    "Created UserFlowTestBase using unittest.TestCase": {
      "value": "Created UserFlowTestBase using unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:104"
      ]
    },
    "Created backup directory:": {
      "value": "Created backup directory:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:755"
      ]
    },
    "Created mock Agent and AgentRun models": {
      "value": "Created mock Agent and AgentRun models",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:134"
      ]
    },
    "Created mock AgentRun model": {
      "value": "Created mock AgentRun model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:129"
      ]
    },
    "Created mock ClickHouseManager for tests": {
      "value": "Created mock ClickHouseManager for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:80"
      ]
    },
    "Created mock ConversionEvent for tests": {
      "value": "Created mock ConversionEvent for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:87"
      ]
    },
    "Created mock Message model": {
      "value": "Created mock Message model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:116"
      ]
    },
    "Created mock Team for tests": {
      "value": "Created mock Team for tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:92"
      ]
    },
    "Created mock Thread model": {
      "value": "Created mock Thread model",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:111"
      ]
    },
    "Created mock database test fixtures": {
      "value": "Created mock database test fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:99"
      ]
    },
    "Created mock user journey data": {
      "value": "Created mock user journey data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:122"
      ]
    },
    "Created split file:": {
      "value": "Created split file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:539"
      ]
    },
    "Created utilities file:": {
      "value": "Created utilities file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:567"
      ]
    },
    "Creating": {
      "value": "Creating",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:89"
      ]
    },
    "Creating TF-IDF vectors...": {
      "value": "Creating TF-IDF vectors...",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:246"
      ]
    },
    "Creating comprehensive test documentation...": {
      "value": "Creating comprehensive test documentation...",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:503"
      ]
    },
    "Creating tables...": {
      "value": "Creating tables...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:35"
      ]
    },
    "Creating test session...": {
      "value": "Creating test session...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:53"
      ]
    },
    "Critical": {
      "value": "Critical",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:166"
      ]
    },
    "Critical - API endpoints": {
      "value": "Critical - API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:39"
      ]
    },
    "Critical - Core functionality": {
      "value": "Critical - Core functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:38"
      ]
    },
    "Critical - Database": {
      "value": "Critical - Database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:41"
      ]
    },
    "Critical - Security": {
      "value": "Critical - Security",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:40"
      ]
    },
    "Critical Session Security Tests - Cycles 36-40\nTests revenue-critical session management security patterns.\n\nBusiness Value Justification:\n- Segment: Enterprise customers requiring session security\n- Business Goal: Prevent $2.8M annual revenue loss from session hijacking\n- Value Impact: Ensures secure session management for enterprise workflows\n- Strategic Impact: Enables compliance with security frameworks (SOC 2, ISO 27001)\n\nCycles Covered: 36, 37, 38, 39, 40": {
      "value": "Critical Session Security Tests - Cycles 36-40\nTests revenue-critical session management security patterns.\n\nBusiness Value Justification:\n- Segment: Enterprise customers requiring session security\n- Business Goal: Prevent $2.8M annual revenue loss from session hijacking\n- Value Impact: Ensures secure session management for enterprise workflows\n- Strategic Impact: Enables compliance with security frameworks (SOC 2, ISO 27001)\n\nCycles Covered: 36, 37, 38, 39, 40",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:1"
      ]
    },
    "Critical Tests (90+ score):": {
      "value": "Critical Tests (90+ score):",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:750"
      ]
    },
    "Critical Token Validation Security Tests - Cycles 31-35\nTests revenue-critical authentication token security patterns.\n\nBusiness Value Justification:\n- Segment: All customer segments requiring secure authentication\n- Business Goal: Prevent $3.2M annual revenue loss from security breaches\n- Value Impact: Ensures enterprise-grade authentication security\n- Strategic Impact: Enables SOC 2 compliance and enterprise customer acquisition\n\nCycles Covered: 31, 32, 33, 34, 35": {
      "value": "Critical Token Validation Security Tests - Cycles 31-35\nTests revenue-critical authentication token security patterns.\n\nBusiness Value Justification:\n- Segment: All customer segments requiring secure authentication\n- Business Goal: Prevent $3.2M annual revenue loss from security breaches\n- Value Impact: Ensures enterprise-grade authentication security\n- Strategic Impact: Enables SOC 2 compliance and enterprise customer acquisition\n\nCycles Covered: 31, 32, 33, 34, 35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:1"
      ]
    },
    "Critical deployment should fail": {
      "value": "Critical deployment should fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:205"
      ]
    },
    "Critical error after deployment": {
      "value": "Critical error after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:151"
      ]
    },
    "Critical errors:": {
      "value": "Critical errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:99"
      ]
    },
    "Critical failures:": {
      "value": "Critical failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:518"
      ]
    },
    "Critical path tests that protect revenue": {
      "value": "Critical path tests that protect revenue",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:79"
      ]
    },
    "Critical suffix": {
      "value": "Critical suffix",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:101"
      ]
    },
    "Cross-session state validation should fail": {
      "value": "Cross-session state validation should fail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:201"
      ]
    },
    "Current performance overhead:": {
      "value": "Current performance overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:650"
      ]
    },
    "Current revision:": {
      "value": "Current revision:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:155"
      ]
    },
    "Current size:": {
      "value": "Current size:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:193"
      ]
    },
    "Current state:": {
      "value": "Current state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:534"
      ]
    },
    "Current test file counts by category:": {
      "value": "Current test file counts by category:",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:498"
      ]
    },
    "Current time:": {
      "value": "Current time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:47"
      ]
    },
    "Custom cache directory": {
      "value": "Custom cache directory",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:381"
      ]
    },
    "CustomCORSMiddleware": {
      "value": "CustomCORSMiddleware",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:169"
      ]
    },
    "Cycle 36: Test session hijacking prevention through client fingerprinting.\n        \n        Revenue Protection: $560K annually from preventing session hijacking.": {
      "value": "Cycle 36: Test session hijacking prevention through client fingerprinting.\n        \n        Revenue Protection: $560K annually from preventing session hijacking.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:56"
      ]
    },
    "Cycle 37: Test concurrent session limit prevents unauthorized account sharing.\n        \n        Revenue Protection: $420K annually from preventing account sharing abuse.": {
      "value": "Cycle 37: Test concurrent session limit prevents unauthorized account sharing.\n        \n        Revenue Protection: $420K annually from preventing account sharing abuse.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:115"
      ]
    },
    "Cycle 38: Test session timeout enforcement prevents stale session access.\n        \n        Revenue Protection: $380K annually from preventing stale session abuse.": {
      "value": "Cycle 38: Test session timeout enforcement prevents stale session access.\n        \n        Revenue Protection: $380K annually from preventing stale session abuse.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:175"
      ]
    },
    "Cycle 39: Test session activity tracking detects anomalous user behavior.\n        \n        Revenue Protection: $640K annually from detecting account compromise.": {
      "value": "Cycle 39: Test session activity tracking detects anomalous user behavior.\n        \n        Revenue Protection: $640K annually from detecting account compromise.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:213"
      ]
    },
    "Cycle 40: Test session invalidation cascade prevents orphaned sessions.\n        \n        Revenue Protection: $320K annually from preventing session state inconsistency.": {
      "value": "Cycle 40: Test session invalidation cascade prevents orphaned sessions.\n        \n        Revenue Protection: $320K annually from preventing session state inconsistency.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:279"
      ]
    },
    "Cypress E2E:": {
      "value": "Cypress E2E:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:117"
      ]
    },
    "Cypress integration completed successfully!": {
      "value": "Cypress integration completed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1137"
      ]
    },
    "Cypress test execution failed:": {
      "value": "Cypress test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:662"
      ]
    },
    "DANGEROUS: Actually perform fixes (NOT RECOMMENDED)": {
      "value": "DANGEROUS: Actually perform fixes (NOT RECOMMENDED)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:922"
      ]
    },
    "DANGEROUS: Created": {
      "value": "DANGEROUS: Created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1008"
      ]
    },
    "DANGEROUS: Disable safe mode protections": {
      "value": "DANGEROUS: Disable safe mode protections",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:932"
      ]
    },
    "DANGEROUS: Second confirmation required for unsafe operations": {
      "value": "DANGEROUS: Second confirmation required for unsafe operations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:924"
      ]
    },
    "DANGEROUSLY fixing": {
      "value": "DANGEROUSLY fixing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:795"
      ]
    },
    "DANGEROUSLY split": {
      "value": "DANGEROUSLY split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:830"
      ]
    },
    "DATABASE MIGRATION TESTING FOR STAGING": {
      "value": "DATABASE MIGRATION TESTING FOR STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:276"
      ]
    },
    "DATABASE SSL CERTIFICATE AND CONFIGURATION TESTING": {
      "value": "DATABASE SSL CERTIFICATE AND CONFIGURATION TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:259"
      ]
    },
    "DATABASE URL BUILDER COMPREHENSIVE TESTING": {
      "value": "DATABASE URL BUILDER COMPREHENSIVE TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:301"
      ]
    },
    "DATABASE_URL": {
      "value": "DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:12",
        "auth_service/tests/conftest.py:42",
        "auth_service/tests/test_auth_comprehensive.py:91",
        "scripts/setup_test_environment.py:94",
        "scripts/setup_test_environment.py:145",
        "scripts/start_test_services.py:156",
        "scripts/test_async_postgres.py:18",
        "scripts/test_async_postgres.py:148",
        "scripts/test_auth_database_sessions.py:178",
        "scripts/test_auth_database_sessions.py:197"
      ]
    },
    "DATABASE_URL not set": {
      "value": "DATABASE_URL not set",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:150"
      ]
    },
    "DATABASE_URL_PLACEHOLDER": {
      "value": "DATABASE_URL_PLACEHOLDER",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:127"
      ]
    },
    "DB connection failed": {
      "value": "DB connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:467"
      ]
    },
    "DB error": {
      "value": "DB error",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:302"
      ]
    },
    "DB errors": {
      "value": "DB errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:362"
      ]
    },
    "DEBUG": {
      "value": "DEBUG",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:83",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/compliance/fake_test_scanner.py:394",
        "scripts/test_config_loading.py:142",
        "scripts/test_staging_config.py:45"
      ]
    },
    "DEFAULT_TEST_PATHS = [\n        \"netra_backend/tests\",\n        \"test_framework/tests\",\n        \"frontend/__tests__\",\n        \"auth_service/tests\"\n    ]": {
      "value": "DEFAULT_TEST_PATHS = [\n        \"netra_backend/tests\",\n        \"test_framework/tests\",\n        \"frontend/__tests__\",\n        \"auth_service/tests\"\n    ]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:326"
      ]
    },
    "DEFAULT_TEST_PATHS\\s*=\\s*\\[[^\\]]+\\]": {
      "value": "DEFAULT_TEST_PATHS\\s*=\\s*\\[[^\\]]+\\]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:325"
      ]
    },
    "DELETE FROM auth_users WHERE id = '": {
      "value": "DELETE FROM auth_users WHERE id = '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:69"
      ]
    },
    "DEMO 1: TEST SIZE VALIDATOR": {
      "value": "DEMO 1: TEST SIZE VALIDATOR",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:20"
      ]
    },
    "DEMO 2: TEST REFACTORING HELPER": {
      "value": "DEMO 2: TEST REFACTORING HELPER",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:57"
      ]
    },
    "DEMO 3: TEST RUNNER INTEGRATION": {
      "value": "DEMO 3: TEST RUNNER INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:109"
      ]
    },
    "DEMO 4: PROPERLY SIZED TEST EXAMPLES": {
      "value": "DEMO 4: PROPERLY SIZED TEST EXAMPLES",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:139"
      ]
    },
    "DEMO 5: CLI USAGE EXAMPLES": {
      "value": "DEMO 5: CLI USAGE EXAMPLES",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:172"
      ]
    },
    "DEMONSTRATION COMPLETE": {
      "value": "DEMONSTRATION COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:218"
      ]
    },
    "DEPRECATED_": {
      "value": "DEPRECATED_",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:77"
      ]
    },
    "DETAILED CONNECTION LIFECYCLE MONITORING": {
      "value": "DETAILED CONNECTION LIFECYCLE MONITORING",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:124"
      ]
    },
    "DETAILED ERROR ANALYSIS (first 5 files):": {
      "value": "DETAILED ERROR ANALYSIS (first 5 files):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:328"
      ]
    },
    "DETAILED ISSUES:": {
      "value": "DETAILED ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:229"
      ]
    },
    "DETAILED REAL E2E TEST INFORMATION": {
      "value": "DETAILED REAL E2E TEST INFORMATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:127"
      ]
    },
    "DETAILED REPORT": {
      "value": "DETAILED REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:234"
      ]
    },
    "DETAILED RESULTS": {
      "value": "DETAILED RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:105"
      ]
    },
    "DETAILED VIOLATIONS:": {
      "value": "DETAILED VIOLATIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:324"
      ]
    },
    "DEV_DATABASE_URL": {
      "value": "DEV_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:135"
      ]
    },
    "DEV_REDIS_URL": {
      "value": "DEV_REDIS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:136"
      ]
    },
    "DOCKER COMPOSE LOG INTROSPECTION REPORT": {
      "value": "DOCKER COMPOSE LOG INTROSPECTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:160"
      ]
    },
    "DOCKER WEBSOCKET CONFIGURATION TEST RESULTS": {
      "value": "DOCKER WEBSOCKET CONFIGURATION TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:257"
      ]
    },
    "DROP TABLE IF EXISTS test_connectivity": {
      "value": "DROP TABLE IF EXISTS test_connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:187"
      ]
    },
    "DRY RUN": {
      "value": "DRY RUN",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:170"
      ]
    },
    "DRY RUN - No files were actually modified": {
      "value": "DRY RUN - No files were actually modified",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:759"
      ]
    },
    "DRY RUN - Would apply these optimizations:": {
      "value": "DRY RUN - Would apply these optimizations:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:383"
      ]
    },
    "DRY RUN MODE - No files will be renamed": {
      "value": "DRY RUN MODE - No files will be renamed",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:264"
      ]
    },
    "DSN:": {
      "value": "DSN:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:86"
      ]
    },
    "DTprdt5KoQXlEG4Gh9lF": {
      "value": "DTprdt5KoQXlEG4Gh9lF",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:38",
        "auth_service/test_staging_db_connection.py:43",
        "auth_service/test_staging_db_connection.py:59",
        "auth_service/test_staging_db_connection.py:96",
        "auth_service/test_url_construction.py:39",
        "scripts/test_async_postgres.py:133"
      ]
    },
    "Data integrity and performance for": {
      "value": "Data integrity and performance for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:495"
      ]
    },
    "DataSubAgent Modular": {
      "value": "DataSubAgent Modular",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:195"
      ]
    },
    "Database Connection": {
      "value": "Database Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:207",
        "scripts/test_staging_env.py:148"
      ]
    },
    "Database Connection: 1": {
      "value": "Database Connection: 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:362"
      ]
    },
    "Database Dependent:": {
      "value": "Database Dependent:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1119"
      ]
    },
    "Database Migration Commands": {
      "value": "Database Migration Commands",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:283"
      ]
    },
    "Database Mismatch Analysis": {
      "value": "Database Mismatch Analysis",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:155"
      ]
    },
    "Database URL loading failed:": {
      "value": "Database URL loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:337"
      ]
    },
    "Database connection appears functional": {
      "value": "Database connection appears functional",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:72"
      ]
    },
    "Database connection failed": {
      "value": "Database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:184",
        "scripts/test_log_introspection.py:193"
      ]
    },
    "Database connection lost": {
      "value": "Database connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:50"
      ]
    },
    "Database connectivity test failed:": {
      "value": "Database connectivity test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:76"
      ]
    },
    "Database error": {
      "value": "Database error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:135"
      ]
    },
    "Database error pattern '": {
      "value": "Database error pattern '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:389"
      ]
    },
    "Database initialized:": {
      "value": "Database initialized:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:29"
      ]
    },
    "Database must start before auth": {
      "value": "Database must start before auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:99"
      ]
    },
    "Database test returned status": {
      "value": "Database test returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:74"
      ]
    },
    "Database user doesn't exist or password is incorrect": {
      "value": "Database user doesn't exist or password is incorrect",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:201"
      ]
    },
    "Database-related tests": {
      "value": "Database-related tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:87"
      ]
    },
    "Database:": {
      "value": "Database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:234",
        "scripts/test_config_loading.py:114",
        "scripts/test_ssl_certificates_staging.py:217",
        "scripts/test_staging_db_direct.py:46",
        "scripts/test_staging_migrations.py:46"
      ]
    },
    "DatabaseTestMixin": {
      "value": "DatabaseTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:16"
      ]
    },
    "DatabaseTestUtils": {
      "value": "DatabaseTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:17"
      ]
    },
    "Debug database test to verify table creation works": {
      "value": "Debug database test to verify table creation works",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:2"
      ]
    },
    "Debug info:": {
      "value": "Debug info:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:157"
      ]
    },
    "Debug script to test CORS configuration against the running backend.": {
      "value": "Debug script to test CORS configuration against the running backend.",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:2"
      ]
    },
    "Debug script to test SecretManagerBuilder implementation and identify issues.": {
      "value": "Debug script to test SecretManagerBuilder implementation and identify issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:1"
      ]
    },
    "Delegating fix to subagent:": {
      "value": "Delegating fix to subagent:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:131"
      ]
    },
    "Demo failed with error:": {
      "value": "Demo failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:226"
      ]
    },
    "Demo script showing the Test Size Limits Enforcement system in action.\n\nThis demonstrates all components of Fix #2: Test Size Limits Enforcement:\n1. Test size validator functionality\n2. Test refactoring helper functionality  \n3. Integration with test runner\n4. Properly sized test examples": {
      "value": "Demo script showing the Test Size Limits Enforcement system in action.\n\nThis demonstrates all components of Fix #2: Test Size Limits Enforcement:\n1. Test size validator functionality\n2. Test refactoring helper functionality  \n3. Integration with test runner\n4. Properly sized test examples",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:2"
      ]
    },
    "Dependencies installed successfully": {
      "value": "Dependencies installed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:63"
      ]
    },
    "Dependencies:": {
      "value": "Dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1097"
      ]
    },
    "Dependency Resolution": {
      "value": "Dependency Resolution",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:238"
      ]
    },
    "Dependency resolution test failed:": {
      "value": "Dependency resolution test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:118"
      ]
    },
    "Dependency resolution working correctly": {
      "value": "Dependency resolution working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:114"
      ]
    },
    "Deployment errors:": {
      "value": "Deployment errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:176",
        "scripts/test_error_monitor_logic.py:200"
      ]
    },
    "Deployment script configuration": {
      "value": "Deployment script configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:101"
      ]
    },
    "Description:": {
      "value": "Description:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:332",
        "scripts/test_verify_workflow_status.py:36",
        "scripts/test_verify_workflow_status_corrected.py:24"
      ]
    },
    "Detail:": {
      "value": "Detail:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:115"
      ]
    },
    "Detailed Results:": {
      "value": "Detailed Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:199"
      ]
    },
    "Detailed error information:": {
      "value": "Detailed error information:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:450"
      ]
    },
    "Detailed report saved to:": {
      "value": "Detailed report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:414",
        "scripts/test_imports.py:117"
      ]
    },
    "Detailed results saved to:": {
      "value": "Detailed results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:228"
      ]
    },
    "Details": {
      "value": "Details",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:352"
      ]
    },
    "Details:": {
      "value": "Details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:12"
      ]
    },
    "Detected environment:": {
      "value": "Detected environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:189"
      ]
    },
    "Dev Login": {
      "value": "Dev Login",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:344"
      ]
    },
    "Dev launcher exited unexpectedly": {
      "value": "Dev launcher exited unexpectedly",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:131"
      ]
    },
    "Dev login not available in test environment": {
      "value": "Dev login not available in test environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:242"
      ]
    },
    "Dev login not enabled": {
      "value": "Dev login not enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:290",
        "scripts/test_oauth_local.py:417"
      ]
    },
    "Development": {
      "value": "Development",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:201",
        "scripts/test_gtm_loading.py:99",
        "scripts/test_secret_manager_builder_critical.py:178"
      ]
    },
    "Development CORS:": {
      "value": "Development CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:47"
      ]
    },
    "Development Environment": {
      "value": "Development Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:134"
      ]
    },
    "Development auth service URL port (": {
      "value": "Development auth service URL port (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:364"
      ]
    },
    "Development environment specific tests": {
      "value": "Development environment specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:95"
      ]
    },
    "Development password in staging (should fail)": {
      "value": "Development password in staging (should fail)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:222"
      ]
    },
    "Development server failed to start": {
      "value": "Development server failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:75"
      ]
    },
    "Development server started successfully": {
      "value": "Development server started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:71"
      ]
    },
    "Development server stopped": {
      "value": "Development server stopped",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:252"
      ]
    },
    "Development time per new secret: 2-3 days (should be 30 minutes)": {
      "value": "Development time per new secret: 2-3 days (should be 30 minutes)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:535"
      ]
    },
    "Dict": {
      "value": "Dict",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:202"
      ]
    },
    "Dict[": {
      "value": "Dict[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Different implementation patterns:": {
      "value": "Different implementation patterns:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:404"
      ]
    },
    "Different implementations found:": {
      "value": "Different implementations found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:529"
      ]
    },
    "Direct Cloud SQL async": {
      "value": "Direct Cloud SQL async",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:279"
      ]
    },
    "Direct Cloud SQL sync": {
      "value": "Direct Cloud SQL sync",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:280"
      ]
    },
    "Direct cost reduction features for": {
      "value": "Direct cost reduction features for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:493"
      ]
    },
    "Direct error message from main": {
      "value": "Direct error message from main",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:38"
      ]
    },
    "Direct info message from main": {
      "value": "Direct info message from main",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:36"
      ]
    },
    "Direct test of staging database connection using migrated secrets.\n\n**UPDATED**: Now uses DatabaseURLBuilder for centralized URL construction.": {
      "value": "Direct test of staging database connection using migrated secrets.\n\n**UPDATED**: Now uses DatabaseURLBuilder for centralized URL construction.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:1"
      ]
    },
    "Direct warning message from main": {
      "value": "Direct warning message from main",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:37"
      ]
    },
    "Directory": {
      "value": "Directory",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:143",
        "scripts/remove_test_stubs.py:110"
      ]
    },
    "Directory does not exist:": {
      "value": "Directory does not exist:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:106"
      ]
    },
    "Directory for storing backups (auto-generated if not specified)": {
      "value": "Directory for storing backups (auto-generated if not specified)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:936"
      ]
    },
    "Directory not found:": {
      "value": "Directory not found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:107",
        "scripts/remove_duplicate_test_setup.py:47"
      ]
    },
    "Disable automatic test splitting": {
      "value": "Disable automatic test splitting",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1035"
      ]
    },
    "Disable bad test detection": {
      "value": "Disable bad test detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:513"
      ]
    },
    "Disable coverage reporting": {
      "value": "Disable coverage reporting",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:970"
      ]
    },
    "Disable result caching": {
      "value": "Disable result caching",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:383"
      ]
    },
    "Disconnected": {
      "value": "Disconnected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:27"
      ]
    },
    "Discovered": {
      "value": "Discovered",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:316"
      ]
    },
    "Docker": {
      "value": "Docker",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:666"
      ]
    },
    "Docker Compose Log Introspection Test Suite": {
      "value": "Docker Compose Log Introspection Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:390"
      ]
    },
    "Docker Integration": {
      "value": "Docker Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:398"
      ]
    },
    "Docker WebSocket test": {
      "value": "Docker WebSocket test",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:92"
      ]
    },
    "Docker bridge IP: 172.18.0.1:3000": {
      "value": "Docker bridge IP: 172.18.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:237"
      ]
    },
    "Docker container: netra-frontend:3000": {
      "value": "Docker container: netra-frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:229"
      ]
    },
    "Docker is not installed": {
      "value": "Docker is not installed",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:30"
      ]
    },
    "Docker is not running. Please start Docker first.": {
      "value": "Docker is not running. Please start Docker first.",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:190"
      ]
    },
    "Docker service: backend:8000": {
      "value": "Docker service: backend:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:223"
      ]
    },
    "Docker service: frontend:3000": {
      "value": "Docker service: frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:217"
      ]
    },
    "Docker services started successfully": {
      "value": "Docker services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:55"
      ]
    },
    "Don't wait for services to be healthy": {
      "value": "Don't wait for services to be healthy",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:179"
      ]
    },
    "Driver URL Formatting": {
      "value": "Driver URL Formatting",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:307"
      ]
    },
    "Duplicate test file:": {
      "value": "Duplicate test file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:410"
      ]
    },
    "Duplicate test setup code has been removed.": {
      "value": "Duplicate test setup code has been removed.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:64"
      ]
    },
    "Duplicates Found:": {
      "value": "Duplicates Found:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:657"
      ]
    },
    "E2E COLD START TEST SUMMARY": {
      "value": "E2E COLD START TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:482"
      ]
    },
    "E2E Coverage:": {
      "value": "E2E Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:748"
      ]
    },
    "E2E Simple Health Checks": {
      "value": "E2E Simple Health Checks",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:77"
      ]
    },
    "E2E Test Import Fixer\n\nAutomatically fixes imports in all moved test files after the test directory reorganization.\nUpdates imports to reflect the new test structure under tests/e2e/.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (Development velocity protection)\n- Business Goal: Restore broken imports after test reorganization\n- Value Impact: Enables test execution after directory restructuring\n- Strategic Impact: Prevents development velocity loss due to import failures\n\nThis script:\n1. Scans test files in tests/e2e/ subdirectories\n2. Updates imports that reference old paths\n3. Fixes helper imports to use new organized structure\n4. Reports all changes made": {
      "value": "E2E Test Import Fixer\n\nAutomatically fixes imports in all moved test files after the test directory reorganization.\nUpdates imports to reflect the new test structure under tests/e2e/.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal (Development velocity protection)\n- Business Goal: Restore broken imports after test reorganization\n- Value Impact: Enables test execution after directory restructuring\n- Strategic Impact: Prevents development velocity loss due to import failures\n\nThis script:\n1. Scans test files in tests/e2e/ subdirectories\n2. Updates imports that reference old paths\n3. Fixes helper imports to use new organized structure\n4. Reports all changes made",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:2"
      ]
    },
    "E2E Test Port Configuration (": {
      "value": "E2E Test Port Configuration (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:85"
      ]
    },
    "E2E Test Thread": {
      "value": "E2E Test Thread",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:326"
      ]
    },
    "ENABLE_REAL_LLM_TESTING": {
      "value": "ENABLE_REAL_LLM_TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:184",
        "scripts/setup_test_environment.py:117",
        "scripts/setup_test_environment.py:355"
      ]
    },
    "ENVIRONMENT": {
      "value": "ENVIRONMENT",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:11",
        "auth_service/test_actual_staging_credentials.py:31",
        "auth_service/test_staging_db_connection.py:36",
        "auth_service/test_staging_db_connection.py:123",
        "auth_service/test_url_construction.py:32",
        "auth_service/test_url_construction.py:63",
        "auth_service/test_url_construction.py:189",
        "auth_service/tests/conftest.py:33",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:50",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:56"
      ]
    },
    "ENVIRONMENT DETECTION TEST SUITE": {
      "value": "ENVIRONMENT DETECTION TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:157"
      ]
    },
    "ENVIRONMENT RESULTS:": {
      "value": "ENVIRONMENT RESULTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:492"
      ]
    },
    "ENVIRONMENT=staging:": {
      "value": "ENVIRONMENT=staging:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:36"
      ]
    },
    "ERROR": {
      "value": "ERROR",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:72",
        "netra_backend/app/services/realistic_test_data/log_generator.py:81",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/iterative_test_fix_loop.py:53",
        "scripts/test_cors.py:392",
        "scripts/test_error_monitor_logic.py:36",
        "scripts/test_error_monitor_logic.py:64",
        "scripts/test_example_message_flow.py:161",
        "scripts/test_failure_scanner.py:142",
        "scripts/test_verify_workflow_status_corrected.py:130"
      ]
    },
    "ERROR processing": {
      "value": "ERROR processing",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:210"
      ]
    },
    "ERROR:": {
      "value": "ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:383",
        "scripts/debug_cors_test.py:74",
        "scripts/debug_cors_test.py:93",
        "scripts/test_staging_db_direct.py:123",
        "scripts/test_staging_migrations.py:171",
        "scripts/unified_test_runner.py:663"
      ]
    },
    "ERROR: .env.staging still exists - should be deleted!": {
      "value": "ERROR: .env.staging still exists - should be deleted!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:20"
      ]
    },
    "ERROR: Alembic not found (not installed?)": {
      "value": "ERROR: Alembic not found (not installed?)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:168"
      ]
    },
    "ERROR: Cloud SQL URL should not have SSL parameters": {
      "value": "ERROR: Cloud SQL URL should not have SSL parameters",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:98",
        "scripts/test_auth_database_sessions.py:259"
      ]
    },
    "ERROR: Cypress tests failed due to missing services": {
      "value": "ERROR: Cypress tests failed due to missing services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:655"
      ]
    },
    "ERROR: Engine creation failed": {
      "value": "ERROR: Engine creation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:147",
        "scripts/test_auth_database_sessions.py:279"
      ]
    },
    "ERROR: Engine creation failed:": {
      "value": "ERROR: Engine creation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:283"
      ]
    },
    "ERROR: Expected SSL parameters but none found!": {
      "value": "ERROR: Expected SSL parameters but none found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:152"
      ]
    },
    "ERROR: Found SSL parameters but none expected!": {
      "value": "ERROR: Found SSL parameters but none expected!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:157"
      ]
    },
    "ERROR: Found deprecated model": {
      "value": "ERROR: Found deprecated model",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:111"
      ]
    },
    "ERROR: Invalid URL format": {
      "value": "ERROR: Invalid URL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:253"
      ]
    },
    "ERROR: Invalid async URL format": {
      "value": "ERROR: Invalid async URL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:93"
      ]
    },
    "ERROR: Target file already exists:": {
      "value": "ERROR: Target file already exists:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:165"
      ]
    },
    "ERROR: Test stub check failed:": {
      "value": "ERROR: Test stub check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:128"
      ]
    },
    "ERROR: URL conversion failed:": {
      "value": "ERROR: URL conversion failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:104"
      ]
    },
    "ERROR: setup_test_path() at line": {
      "value": "ERROR: setup_test_path() at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:60"
      ]
    },
    "ERRORS (": {
      "value": "ERRORS (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:289"
      ]
    },
    "ERRORS BY CATEGORY": {
      "value": "ERRORS BY CATEGORY",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:162",
        "scripts/test_log_introspection.py:361"
      ]
    },
    "ERRORS FOUND:": {
      "value": "ERRORS FOUND:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:120"
      ]
    },
    "ERRORS:": {
      "value": "ERRORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:267"
      ]
    },
    "EXCEPTION (": {
      "value": "EXCEPTION (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70"
      ]
    },
    "EXECUTION PLAN": {
      "value": "EXECUTION PLAN",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:301"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL CACHE LAYER ISSUE\n        Auth Service should continue operating when Redis cache layer is down\n        Root cause: Auth Service depends too heavily on Redis, fails when Redis is unavailable": {
      "value": "EXPECTED TO FAIL - CRITICAL CACHE LAYER ISSUE\n        Auth Service should continue operating when Redis cache layer is down\n        Root cause: Auth Service depends too heavily on Redis, fails when Redis is unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:425"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL DATABASE CONNECTIVITY ISSUE\n        Auth Service should handle database connectivity loss gracefully\n        Root cause: Auth Service crashes or becomes unresponsive when database is unreachable": {
      "value": "EXPECTED TO FAIL - CRITICAL DATABASE CONNECTIVITY ISSUE\n        Auth Service should handle database connectivity loss gracefully\n        Root cause: Auth Service crashes or becomes unresponsive when database is unreachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:167"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL GRACEFUL SHUTDOWN ISSUE\n        Auth Service should shut down gracefully, finishing in-progress requests\n        Root cause: No graceful shutdown mechanism, abrupt termination causing request failures": {
      "value": "EXPECTED TO FAIL - CRITICAL GRACEFUL SHUTDOWN ISSUE\n        Auth Service should shut down gracefully, finishing in-progress requests\n        Root cause: No graceful shutdown mechanism, abrupt termination causing request failures",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:463"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL NETWORK PARTITION ISSUE\n        System should detect and handle Auth Service network partition\n        Root cause: No network partition detection or handling mechanisms": {
      "value": "EXPECTED TO FAIL - CRITICAL NETWORK PARTITION ISSUE\n        System should detect and handle Auth Service network partition\n        Root cause: No network partition detection or handling mechanisms",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:313"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL OAUTH PROVIDER ISSUE\n        Auth Service should handle OAuth provider connectivity loss\n        Root cause: No fallback when OAuth provider (Google, etc.) is unreachable": {
      "value": "EXPECTED TO FAIL - CRITICAL OAUTH PROVIDER ISSUE\n        Auth Service should handle OAuth provider connectivity loss\n        Root cause: No fallback when OAuth provider (Google, etc.) is unreachable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:390"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL OVERLOAD ISSUE\n        Auth Service should handle request overload with proper rate limiting/circuit breaker\n        Root cause: No circuit breaker or rate limiting when Auth Service is overwhelmed": {
      "value": "EXPECTED TO FAIL - CRITICAL OVERLOAD ISSUE\n        Auth Service should handle request overload with proper rate limiting/circuit breaker\n        Root cause: No circuit breaker or rate limiting when Auth Service is overwhelmed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:257"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SERVER ERROR ISSUE\n        System should handle Auth Service 500 errors gracefully with retry/fallback\n        Root cause: No error handling when Auth Service returns 500 errors": {
      "value": "EXPECTED TO FAIL - CRITICAL SERVER ERROR ISSUE\n        System should handle Auth Service 500 errors gracefully with retry/fallback\n        Root cause: No error handling when Auth Service returns 500 errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:126"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SERVICE DOWN ISSUE\n        System should have fallback when Auth Service is completely unresponsive\n        Root cause: No fallback mechanism when Auth Service doesn't respond at all": {
      "value": "EXPECTED TO FAIL - CRITICAL SERVICE DOWN ISSUE\n        System should have fallback when Auth Service is completely unresponsive\n        Root cause: No fallback mechanism when Auth Service doesn't respond at all",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:84"
      ]
    },
    "EXPECTED TO FAIL - CRITICAL SSL CERT EXPIRY ISSUE\n        System should handle Auth Service SSL certificate expiration gracefully\n        Root cause: No SSL certificate monitoring or graceful handling of certificate expiry": {
      "value": "EXPECTED TO FAIL - CRITICAL SSL CERT EXPIRY ISSUE\n        System should handle Auth Service SSL certificate expiration gracefully\n        Root cause: No SSL certificate monitoring or graceful handling of certificate expiry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:358"
      ]
    },
    "Each log should show the actual source file and line, not unified_logging.py:202": {
      "value": "Each log should show the actual source file and line, not unified_logging.py:202",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:48"
      ]
    },
    "Echo response:": {
      "value": "Echo response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:77"
      ]
    },
    "Either --run-id or --workflow-name must be specified": {
      "value": "Either --run-id or --workflow-name must be specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:47",
        "scripts/test_verify_workflow_status_corrected.py:99"
      ]
    },
    "Either start Docker Desktop or ensure required services are running locally.": {
      "value": "Either start Docker Desktop or ensure required services are running locally.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:668"
      ]
    },
    "Emergency shutdown initiated": {
      "value": "Emergency shutdown initiated",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:112"
      ]
    },
    "Empty function implementation found": {
      "value": "Empty function implementation found",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:232"
      ]
    },
    "Enable continuous test generation in CI/CD pipeline": {
      "value": "Enable continuous test generation in CI/CD pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:263"
      ]
    },
    "Enable coverage reporting": {
      "value": "Enable coverage reporting",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:495",
        "scripts/test_frontend.py:401"
      ]
    },
    "Enable real LLM testing": {
      "value": "Enable real LLM testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:348"
      ]
    },
    "Enables real-time agent interactions for": {
      "value": "Enables real-time agent interactions for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:492"
      ]
    },
    "Encryption key for sensitive data": {
      "value": "Encryption key for sensitive data",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:96"
      ]
    },
    "End-to-End Cold Start Test Suite for Netra Apex Platform\n\nThis comprehensive test validates the entire user flow from cold start through\nauthentication, WebSocket connection, chat interaction, and model response.\n\nCritical Path Tested:\n1. Dev launcher startup with all services\n2. Service discovery and dynamic port handling\n3. Auth service login (dev mode)\n4. Token retrieval and validation\n5. WebSocket connection with auth\n6. Chat message sending\n7. Model processing and response\n8. Clean shutdown\n\nAuthor: Netra Apex Engineering": {
      "value": "End-to-End Cold Start Test Suite for Netra Apex Platform\n\nThis comprehensive test validates the entire user flow from cold start through\nauthentication, WebSocket connection, chat interaction, and model response.\n\nCritical Path Tested:\n1. Dev launcher startup with all services\n2. Service discovery and dynamic port handling\n3. Auth service login (dev mode)\n4. Token retrieval and validation\n5. WebSocket connection with auth\n6. Chat message sending\n7. Model processing and response\n8. Clean shutdown\n\nAuthor: Netra Apex Engineering",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:2"
      ]
    },
    "End-to-End Tests": {
      "value": "End-to-End Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:251"
      ]
    },
    "End-to-end integration tests": {
      "value": "End-to-end integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:53"
      ]
    },
    "End-to-end test for staging authentication flow.\nTests login, token refresh, and session persistence.": {
      "value": "End-to-end test for staging authentication flow.\nTests login, token refresh, and session persistence.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:2"
      ]
    },
    "End-to-end tests": {
      "value": "End-to-end tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:77"
      ]
    },
    "Endpoint": {
      "value": "Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:55",
        "scripts/test_cors.py:371"
      ]
    },
    "Endpoint to test (default: /health)": {
      "value": "Endpoint to test (default: /health)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:425"
      ]
    },
    "Endpoint:": {
      "value": "Endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:502"
      ]
    },
    "Engine URL:": {
      "value": "Engine URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:141"
      ]
    },
    "Engine:": {
      "value": "Engine:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:32"
      ]
    },
    "Enhanced Real Test Requirements Enforcer\n\nComprehensive validation and enforcement of SPEC/testing.xml real test requirements\nfor both Python and JavaScript test files.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction  \n- Value Impact: Prevents regression bugs from invalid test patterns\n- Strategic Impact: Ensures test reliability, reduces debugging time, maintains system integrity\n\nSPEC Requirements Enforced:\n1. No mock component implementations inside test files\n2. Integration tests must use real child components\n3. Mock only external APIs and truly unavailable resources\n4. Test files must follow 450-line limit\n5. Test functions must follow 25-line limit\n6. Fix System Under Test first, not tests": {
      "value": "Enhanced Real Test Requirements Enforcer\n\nComprehensive validation and enforcement of SPEC/testing.xml real test requirements\nfor both Python and JavaScript test files.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction  \n- Value Impact: Prevents regression bugs from invalid test patterns\n- Strategic Impact: Ensures test reliability, reduces debugging time, maintains system integrity\n\nSPEC Requirements Enforced:\n1. No mock component implementations inside test files\n2. Integration tests must use real child components\n3. Mock only external APIs and truly unavailable resources\n4. Test files must follow 450-line limit\n5. Test functions must follow 25-line limit\n6. Fix System Under Test first, not tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:1"
      ]
    },
    "Enhanced Registry": {
      "value": "Enhanced Registry",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:199"
      ]
    },
    "Enhanced Test Discovery Report": {
      "value": "Enhanced Test Discovery Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:165"
      ]
    },
    "Enhanced Test Discovery Report\nShows all test categories including real e2e tests prominently.": {
      "value": "Enhanced Test Discovery Report\nShows all test categories including real e2e tests prominently.",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:2"
      ]
    },
    "Ensure PostgreSQL is running and credentials are correct": {
      "value": "Ensure PostgreSQL is running and credentials are correct",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:164"
      ]
    },
    "Ensure PostgreSQL is running with correct credentials": {
      "value": "Ensure PostgreSQL is running with correct credentials",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:233"
      ]
    },
    "Ensure Redis is running or set TEST_DISABLE_REDIS=true": {
      "value": "Ensure Redis is running or set TEST_DISABLE_REDIS=true",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:189"
      ]
    },
    "Ensure auth service is running for tests that require it": {
      "value": "Ensure auth service is running for tests that require it",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:520"
      ]
    },
    "Ensure file is valid and accessible": {
      "value": "Ensure file is valid and accessible",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:181"
      ]
    },
    "Environment": {
      "value": "Environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:318",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:322",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:325"
      ]
    },
    "Environment Variables:": {
      "value": "Environment Variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:261"
      ]
    },
    "Environment async:": {
      "value": "Environment async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:55"
      ]
    },
    "Environment auto async": {
      "value": "Environment auto async",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:281"
      ]
    },
    "Environment auto sync": {
      "value": "Environment auto sync",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:282"
      ]
    },
    "Environment detected:": {
      "value": "Environment detected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:38"
      ]
    },
    "Environment sync:": {
      "value": "Environment sync:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:56"
      ]
    },
    "Environment to test (default: development)": {
      "value": "Environment to test (default: development)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:423"
      ]
    },
    "Environment to test against (default: test)": {
      "value": "Environment to test against (default: test)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:933"
      ]
    },
    "Environment variables set for real service testing": {
      "value": "Environment variables set for real service testing",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:164"
      ]
    },
    "Environment variables:": {
      "value": "Environment variables:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:131"
      ]
    },
    "Environment:": {
      "value": "Environment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:368",
        "scripts/test_cors.py:459",
        "scripts/test_database_url_builder_comprehensive.py:272",
        "scripts/test_staging_config.py:98",
        "scripts/test_staging_db_direct.py:81",
        "scripts/unified_test_runner.py:892"
      ]
    },
    "Environment: DATABASE_URL=": {
      "value": "Environment: DATABASE_URL=",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:254"
      ]
    },
    "Environment: STAGING": {
      "value": "Environment: STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:189"
      ]
    },
    "Environment: Staging": {
      "value": "Environment: Staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:306"
      ]
    },
    "Environments tested:": {
      "value": "Environments tested:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:516",
        "scripts/test_secret_manager_builder_critical.py:773"
      ]
    },
    "Error": {
      "value": "Error",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:154",
        "scripts/apply_fast_test_decorators.py:178"
      ]
    },
    "Error 1": {
      "value": "Error 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:452"
      ]
    },
    "Error 2": {
      "value": "Error 2",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:452"
      ]
    },
    "Error Detection": {
      "value": "Error Detection",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:394"
      ]
    },
    "Error Detection Results:": {
      "value": "Error Detection Results:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:102"
      ]
    },
    "Error Grouping": {
      "value": "Error Grouping",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:395"
      ]
    },
    "Error after deployment": {
      "value": "Error after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:134"
      ]
    },
    "Error analyzing": {
      "value": "Error analyzing",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:134",
        "scripts/compliance/test_size_validator.py:116"
      ]
    },
    "Error analyzing file": {
      "value": "Error analyzing file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:145"
      ]
    },
    "Error checking": {
      "value": "Error checking",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:86"
      ]
    },
    "Error checking enum file:": {
      "value": "Error checking enum file:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:122"
      ]
    },
    "Error checking git diff:": {
      "value": "Error checking git diff:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:247"
      ]
    },
    "Error checking size of": {
      "value": "Error checking size of",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:266"
      ]
    },
    "Error count": {
      "value": "Error count",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:360"
      ]
    },
    "Error decoding service token:": {
      "value": "Error decoding service token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:44"
      ]
    },
    "Error during fake test scanning:": {
      "value": "Error during fake test scanning:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:470"
      ]
    },
    "Error during validation (expected):": {
      "value": "Error during validation (expected):",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:202"
      ]
    },
    "Error during validation:": {
      "value": "Error during validation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:185"
      ]
    },
    "Error fetching secret": {
      "value": "Error fetching secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:23",
        "scripts/test_ssl_certificates_staging.py:24",
        "scripts/test_staging_db_direct.py:26",
        "scripts/test_staging_migrations.py:23"
      ]
    },
    "Error fixing": {
      "value": "Error fixing",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:110",
        "scripts/automated_test_fix_loop.py:91",
        "scripts/fix_all_test_issues.py:76",
        "scripts/fix_test_import_errors.py:220",
        "scripts/fix_test_syntax_errors.py:219"
      ]
    },
    "Error fixing file:": {
      "value": "Error fixing file:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:64"
      ]
    },
    "Error fixing mock component function in": {
      "value": "Error fixing mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:69"
      ]
    },
    "Error fixing parentheses in": {
      "value": "Error fixing parentheses in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:116"
      ]
    },
    "Error fixing test config:": {
      "value": "Error fixing test config:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:237"
      ]
    },
    "Error fixing test discovery:": {
      "value": "Error fixing test discovery:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:342"
      ]
    },
    "Error killing process": {
      "value": "Error killing process",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:54"
      ]
    },
    "Error levels within acceptable limits": {
      "value": "Error levels within acceptable limits",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:104"
      ]
    },
    "Error loading Jest coverage:": {
      "value": "Error loading Jest coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:569"
      ]
    },
    "Error loading Python coverage:": {
      "value": "Error loading Python coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:558"
      ]
    },
    "Error loading test results:": {
      "value": "Error loading test results:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:585"
      ]
    },
    "Error parsing test file": {
      "value": "Error parsing test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:87"
      ]
    },
    "Error processing": {
      "value": "Error processing",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:175",
        "scripts/align_test_imports.py:370",
        "scripts/analyze_test_overlap.py:132",
        "scripts/batch_fix_and_test.py:60",
        "scripts/fix_e2e_test_imports.py:187",
        "scripts/fix_test_syntax_fix_classes.py:61",
        "scripts/fix_test_utils_imports.py:56"
      ]
    },
    "Error rate reduced from 2.3% to 0.8%.": {
      "value": "Error rate reduced from 2.3% to 0.8%.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:218"
      ]
    },
    "Error reading": {
      "value": "Error reading",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:129",
        "scripts/validate_llm_test_models.py:82"
      ]
    },
    "Error reading file": {
      "value": "Error reading file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:204"
      ]
    },
    "Error reading file:": {
      "value": "Error reading file:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:187"
      ]
    },
    "Error reading test file": {
      "value": "Error reading test file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:77"
      ]
    },
    "Error reducing mocking in": {
      "value": "Error reducing mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:343"
      ]
    },
    "Error running validator:": {
      "value": "Error running validator:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:353"
      ]
    },
    "Error scanning": {
      "value": "Error scanning",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:220",
        "scripts/business_value_test_index.py:344"
      ]
    },
    "Error score:": {
      "value": "Error score:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:102",
        "scripts/test_error_monitor_logic.py:177",
        "scripts/test_error_monitor_logic.py:201"
      ]
    },
    "Error splitting": {
      "value": "Error splitting",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:207"
      ]
    },
    "Error splitting file": {
      "value": "Error splitting file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:122"
      ]
    },
    "Error splitting function": {
      "value": "Error splitting function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:260"
      ]
    },
    "Error starting development server:": {
      "value": "Error starting development server:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:79"
      ]
    },
    "Error stopping development server:": {
      "value": "Error stopping development server:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:256"
      ]
    },
    "Error type:": {
      "value": "Error type:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:81",
        "auth_service/test_staging_db_connection.py:111",
        "auth_service/test_staging_db_connection.py:218",
        "scripts/test_staging_clickhouse.py:197"
      ]
    },
    "Error updating": {
      "value": "Error updating",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:127"
      ]
    },
    "Error:": {
      "value": "Error:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:72",
        "scripts/add_pytest_markers.py:131",
        "scripts/apply_fast_test_decorators.py:127",
        "scripts/compliance/demo_test_size_enforcement.py:134",
        "scripts/final_test_status_check.py:112",
        "scripts/test_and_fix_cors.py:123",
        "scripts/test_and_fix_cors.py:138",
        "scripts/test_auth_database_sessions.py:389",
        "scripts/test_cors_issue.py:27",
        "scripts/test_cors_issue.py:48"
      ]
    },
    "Error: Could not find tests/e2e directory. Make sure script is run from project root.": {
      "value": "Error: Could not find tests/e2e directory. Make sure script is run from project root.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:226"
      ]
    },
    "Error: File": {
      "value": "Error: File",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:696"
      ]
    },
    "Error: Frontend directory not found at": {
      "value": "Error: Frontend directory not found at",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:206"
      ]
    },
    "Error: Test directory": {
      "value": "Error: Test directory",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:143",
        "scripts/optimize_test_performance.py:354"
      ]
    },
    "Error: test_categorization.json not found. Run categorize_tests.py first.": {
      "value": "Error: test_categorization.json not found. Run categorize_tests.py first.",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:22"
      ]
    },
    "Errors Encountered:": {
      "value": "Errors Encountered:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:347"
      ]
    },
    "Errors encountered:": {
      "value": "Errors encountered:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:200",
        "scripts/auto_fix_test_sizes.py:754"
      ]
    },
    "Errors found:": {
      "value": "Errors found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:73"
      ]
    },
    "Errors:": {
      "value": "Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:113",
        "scripts/fix_test_utils_imports.py:93",
        "scripts/test_example_message_flow.py:117",
        "scripts/test_example_message_flow.py:323",
        "scripts/test_gtm_loading.py:149",
        "scripts/test_secret_manager_debug.py:68"
      ]
    },
    "Est. Duration:": {
      "value": "Est. Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1100"
      ]
    },
    "Estimated Duration:": {
      "value": "Estimated Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:305"
      ]
    },
    "Event Types Captured:": {
      "value": "Event Types Captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:126"
      ]
    },
    "Example Message Flow Test Runner": {
      "value": "Example Message Flow Test Runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:432"
      ]
    },
    "Example Message Flow system is ready for production.": {
      "value": "Example Message Flow system is ready for production.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:356"
      ]
    },
    "Example file not found!": {
      "value": "Example file not found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:52",
        "scripts/compliance/demo_test_size_enforcement.py:167"
      ]
    },
    "Example file:": {
      "value": "Example file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:145"
      ]
    },
    "Example refactoring:": {
      "value": "Example refactoring:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:215"
      ]
    },
    "Example split:": {
      "value": "Example split:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:199"
      ]
    },
    "Examples demonstrated:": {
      "value": "Examples demonstrated:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:158"
      ]
    },
    "Examples:\n  # Run all Jest tests\n  python unified_test_runner.py --service frontend\n  \n  # Run specific category\n  python unified_test_runner.py --service frontend --category components\n  python unified_test_runner.py --service frontend --category hooks\n  \n  # Run with coverage\n  python unified_test_runner.py --service frontend --coverage\n  \n  # Run E2E tests with Cypress\n  python unified_test_runner.py --service frontend --e2e\n  python unified_test_runner.py --service frontend --cypress-open\n  \n  # Run specific test file\n  python unified_test_runner.py --service frontend components/Button.test.tsx\n  \n  # Watch mode for development\n  python unified_test_runner.py --service frontend --watch\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service frontend --lint --type-check --coverage --build": {
      "value": "Examples:\n  # Run all Jest tests\n  python unified_test_runner.py --service frontend\n  \n  # Run specific category\n  python unified_test_runner.py --service frontend --category components\n  python unified_test_runner.py --service frontend --category hooks\n  \n  # Run with coverage\n  python unified_test_runner.py --service frontend --coverage\n  \n  # Run E2E tests with Cypress\n  python unified_test_runner.py --service frontend --e2e\n  python unified_test_runner.py --service frontend --cypress-open\n  \n  # Run specific test file\n  python unified_test_runner.py --service frontend components/Button.test.tsx\n  \n  # Watch mode for development\n  python unified_test_runner.py --service frontend --watch\n  \n  # Full CI/CD run\n  python unified_test_runner.py --service frontend --lint --type-check --coverage --build",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:358"
      ]
    },
    "Examples:\n  # Run all tests\n  python unified_test_runner.py --service backend\n  \n  # Run specific category\n  python unified_test_runner.py --service backend --category unit\n  python unified_test_runner.py --service backend --category agent": {
      "value": "Examples:\n  # Run all tests\n  python unified_test_runner.py --service backend\n  \n  # Run specific category\n  python unified_test_runner.py --service backend --category unit\n  python unified_test_runner.py --service backend --category agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:449"
      ]
    },
    "Examples:\n  python scripts/compliance/fake_test_scanner.py --scan-all\n  python scripts/compliance/fake_test_scanner.py --directory app/tests\n  python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n  python scripts/compliance/fake_test_scanner.py --report-only --format json": {
      "value": "Examples:\n  python scripts/compliance/fake_test_scanner.py --scan-all\n  python scripts/compliance/fake_test_scanner.py --directory app/tests\n  python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n  python scripts/compliance/fake_test_scanner.py --report-only --format json",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:363"
      ]
    },
    "Examples:\n  python scripts/test_imports.py                  # Quick critical import test\n  python scripts/test_imports.py --all            # Comprehensive import test\n  python scripts/test_imports.py --verbose        # Show detailed output\n  python scripts/test_imports.py --json report.json  # Save JSON report": {
      "value": "Examples:\n  python scripts/test_imports.py                  # Quick critical import test\n  python scripts/test_imports.py --all            # Comprehensive import test\n  python scripts/test_imports.py --verbose        # Show detailed output\n  python scripts/test_imports.py --json report.json  # Save JSON report",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:31"
      ]
    },
    "Examples:\n  python test_refactor_helper.py analyze app/tests/test_large.py\n  python test_refactor_helper.py suggest app/tests/test_large.py --strategy category\n  python test_refactor_helper.py validate app/tests/test_large.py": {
      "value": "Examples:\n  python test_refactor_helper.py analyze app/tests/test_large.py\n  python test_refactor_helper.py suggest app/tests/test_large.py --strategy category\n  python test_refactor_helper.py validate app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:661"
      ]
    },
    "Examples:\n  python test_size_validator.py                    # Validate all tests\n  python test_size_validator.py --format json     # JSON output\n  python test_size_validator.py --format markdown # Markdown output\n  python test_size_validator.py --output report.md # Save to file\n  python test_size_validator.py --auto-split      # Auto-split violations": {
      "value": "Examples:\n  python test_size_validator.py                    # Validate all tests\n  python test_size_validator.py --format json     # JSON output\n  python test_size_validator.py --format markdown # Markdown output\n  python test_size_validator.py --output report.md # Save to file\n  python test_size_validator.py --auto-split      # Auto-split violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:509"
      ]
    },
    "Exception in": {
      "value": "Exception in",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:126"
      ]
    },
    "Exception:": {
      "value": "Exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:373",
        "scripts/test_database_url_builder_comprehensive.py:325",
        "scripts/test_ssl_certificates_staging.py:281",
        "scripts/test_staging_migrations.py:301"
      ]
    },
    "ExcessClient/1.0": {
      "value": "ExcessClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:148"
      ]
    },
    "Exclude tests for specific environment": {
      "value": "Exclude tests for specific environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:939"
      ]
    },
    "Execute tests with full optimization pipeline": {
      "value": "Execute tests with full optimization pipeline",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:124"
      ]
    },
    "Executing category:": {
      "value": "Executing category:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:368"
      ]
    },
    "Execution Phases:": {
      "value": "Execution Phases:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:304"
      ]
    },
    "Execution failed": {
      "value": "Execution failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:241"
      ]
    },
    "Expected": {
      "value": "Expected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:141",
        "auth_service/tests/utils/assertion_helpers.py:248",
        "scripts/test_oauth_dev_config.py:88",
        "scripts/test_oauth_dev_config.py:94"
      ]
    },
    "Expected 3 sessions, got": {
      "value": "Expected 3 sessions, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:301"
      ]
    },
    "Expected CORS headers or successful response, got headers:": {
      "value": "Expected CORS headers or successful response, got headers:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:332"
      ]
    },
    "Expected Container ID: GTM-WKP28PNQ": {
      "value": "Expected Container ID: GTM-WKP28PNQ",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:153"
      ]
    },
    "Expected SSL:": {
      "value": "Expected SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:148"
      ]
    },
    "Expected STAGING, got": {
      "value": "Expected STAGING, got",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:30"
      ]
    },
    "Expected error code '": {
      "value": "Expected error code '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:170"
      ]
    },
    "Expected event type '": {
      "value": "Expected event type '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:264"
      ]
    },
    "Expected exit code:": {
      "value": "Expected exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:26"
      ]
    },
    "Expected status": {
      "value": "Expected status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:166"
      ]
    },
    "Expected success=": {
      "value": "Expected success=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:267"
      ]
    },
    "Expected token to be expired, but it's valid": {
      "value": "Expected token to be expired, but it's valid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:66"
      ]
    },
    "Expected token_type 'Bearer', got '": {
      "value": "Expected token_type 'Bearer', got '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:143"
      ]
    },
    "Expected user_id '": {
      "value": "Expected user_id '",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:271"
      ]
    },
    "Expected valid:": {
      "value": "Expected valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:240"
      ]
    },
    "Expected:": {
      "value": "Expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:95"
      ]
    },
    "Expired OAuth state should be rejected": {
      "value": "Expired OAuth state should be rejected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:181"
      ]
    },
    "Expired at:": {
      "value": "Expired at:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:46"
      ]
    },
    "Expired session still active": {
      "value": "Expired session still active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:206"
      ]
    },
    "Expires in:": {
      "value": "Expires in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:112"
      ]
    },
    "Export configuration to environment": {
      "value": "Export configuration to environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:52"
      ]
    },
    "Export test environment variables": {
      "value": "Export test environment variables",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:347"
      ]
    },
    "Exported port configuration for": {
      "value": "Exported port configuration for",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:77"
      ]
    },
    "Exporting test environment variables...": {
      "value": "Exporting test environment variables...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:377"
      ]
    },
    "External origin (should work in dev mode)": {
      "value": "External origin (should work in dev mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:261"
      ]
    },
    "FAIL": {
      "value": "FAIL",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:203",
        "scripts/test_cors_ssot_compliance.py:42",
        "scripts/test_cors_ssot_compliance.py:78",
        "scripts/test_cors_ssot_compliance.py:86",
        "scripts/test_cors_ssot_compliance.py:124",
        "scripts/test_cors_ssot_compliance.py:132",
        "scripts/test_gtm_loading.py:144",
        "scripts/test_verify_workflow.py:36",
        "scripts/test_verify_workflow.py:48",
        "scripts/test_verify_workflow.py:71"
      ]
    },
    "FAIL: Auth service not properly configured to skip .env loading": {
      "value": "FAIL: Auth service not properly configured to skip .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:56"
      ]
    },
    "FAIL: Backend app not properly configured to skip .env loading": {
      "value": "FAIL: Backend app not properly configured to skip .env loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:40"
      ]
    },
    "FAIL: Deployment script missing configurations:": {
      "value": "FAIL: Deployment script missing configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:83"
      ]
    },
    "FAIL: Found": {
      "value": "FAIL: Found",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:48"
      ]
    },
    "FAIL: Test failed with error:": {
      "value": "FAIL: Test failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:110"
      ]
    },
    "FAILED": {
      "value": "FAILED",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:233",
        "scripts/iterative_test_fix_loop.py:53",
        "scripts/test_auth_database_sessions.py:368",
        "scripts/test_auth_database_sessions.py:386",
        "scripts/test_database_url_builder_comprehensive.py:320",
        "scripts/test_database_url_builder_comprehensive.py:337",
        "scripts/test_example_message_flow.py:159",
        "scripts/test_failure_scanner.py:142",
        "scripts/test_ssl_certificates_staging.py:276",
        "scripts/test_ssl_certificates_staging.py:294"
      ]
    },
    "FAILED (": {
      "value": "FAILED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:65"
      ]
    },
    "FAILED - Check origin configuration": {
      "value": "FAILED - Check origin configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:91"
      ]
    },
    "FAILED - Legacy code detected": {
      "value": "FAILED - Legacy code detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:190"
      ]
    },
    "FAILED - Not permissive enough": {
      "value": "FAILED - Not permissive enough",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:47"
      ]
    },
    "FAILED - Security issue detected": {
      "value": "FAILED - Security issue detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:137"
      ]
    },
    "FAILED FILES (": {
      "value": "FAILED FILES (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:322"
      ]
    },
    "FAILED TESTS:": {
      "value": "FAILED TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:385"
      ]
    },
    "FAILED:": {
      "value": "FAILED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:167",
        "scripts/test_auth_database_sessions.py:60",
        "scripts/test_auth_database_sessions.py:110",
        "scripts/test_auth_database_sessions.py:153",
        "scripts/test_auth_database_sessions.py:207",
        "scripts/test_auth_database_sessions.py:289",
        "scripts/test_auth_database_sessions.py:342",
        "scripts/test_ssl_certificates_staging.py:95",
        "scripts/test_ssl_certificates_staging.py:252",
        "scripts/test_staging_db_direct.py:95"
      ]
    },
    "FAILED: Alembic connection failed": {
      "value": "FAILED: Alembic connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:157"
      ]
    },
    "FAILED: AuthConfig URL connection failed:": {
      "value": "FAILED: AuthConfig URL connection failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:217"
      ]
    },
    "FAILED: AuthConfig URL has incorrect format": {
      "value": "FAILED: AuthConfig URL has incorrect format",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:146"
      ]
    },
    "FAILED: AuthConfig test failed:": {
      "value": "FAILED: AuthConfig test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:183"
      ]
    },
    "FAILED: Cannot import AuthDatabaseManager:": {
      "value": "FAILED: Cannot import AuthDatabaseManager:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:57"
      ]
    },
    "FAILED: Configuration validation failed:": {
      "value": "FAILED: Configuration validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:139"
      ]
    },
    "FAILED: Could not generate migration URL": {
      "value": "FAILED: Could not generate migration URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:97"
      ]
    },
    "FAILED: Could not rename": {
      "value": "FAILED: Could not rename",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:194"
      ]
    },
    "FAILED: Credential validation error:": {
      "value": "FAILED: Credential validation error:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:273"
      ]
    },
    "FAILED: Credential validation failed": {
      "value": "FAILED: Credential validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:263"
      ]
    },
    "FAILED: DatabaseURLBuilder test failed:": {
      "value": "FAILED: DatabaseURLBuilder test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:162"
      ]
    },
    "FAILED: Direct asyncpg connection failed:": {
      "value": "FAILED: Direct asyncpg connection failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:80"
      ]
    },
    "FAILED: No database URL generated": {
      "value": "FAILED: No database URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:63"
      ]
    },
    "FAILED: No database URL generated by AuthConfig": {
      "value": "FAILED: No database URL generated by AuthConfig",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:194",
        "auth_service/test_url_construction.py:135"
      ]
    },
    "FAILED: TCP connection failed (expected):": {
      "value": "FAILED: TCP connection failed (expected):",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:110"
      ]
    },
    "FAILED: URL generation failed:": {
      "value": "FAILED: URL generation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:87"
      ]
    },
    "FAILED: URL missing expected components:": {
      "value": "FAILED: URL missing expected components:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:80"
      ]
    },
    "FAILED: URLs missing expected Cloud SQL patterns": {
      "value": "FAILED: URLs missing expected Cloud SQL patterns",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:117"
      ]
    },
    "FAILED: Unexpected URL format:": {
      "value": "FAILED: Unexpected URL format:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:213"
      ]
    },
    "FAILED\\s+([\\w/\\.]+::\\w+)": {
      "value": "FAILED\\s+([\\w/\\.]+::\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:114"
      ]
    },
    "FAILING TEST ANALYSIS:": {
      "value": "FAILING TEST ANALYSIS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:294"
      ]
    },
    "FAILURE:": {
      "value": "FAILURE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:126"
      ]
    },
    "FAILURE: Multiple connection tests failed": {
      "value": "FAILURE: Multiple connection tests failed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:323"
      ]
    },
    "FAILURE: URL construction has issues": {
      "value": "FAILURE: URL construction has issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:244"
      ]
    },
    "FAKE TEST ANALYSIS:": {
      "value": "FAKE TEST ANALYSIS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:256"
      ]
    },
    "FALLBACK:": {
      "value": "FALLBACK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:235"
      ]
    },
    "FERNET_": {
      "value": "FERNET_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "FERNET_KEY": {
      "value": "FERNET_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:96",
        "scripts/test_backend.py:83",
        "scripts/test_config_loading.py:34",
        "scripts/test_secret_manager_builder_critical.py:83",
        "scripts/test_secret_manager_builder_critical.py:161",
        "scripts/test_secret_manager_builder_critical.py:692",
        "scripts/test_secret_manager_builder_critical.py:703",
        "scripts/test_secret_manager_builder_critical.py:801",
        "scripts/test_secret_manager_debug.py:21",
        "scripts/test_secret_manager_debug.py:47"
      ]
    },
    "FINAL RESULTS": {
      "value": "FINAL RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:208"
      ]
    },
    "FINAL SUMMARY": {
      "value": "FINAL SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:128"
      ]
    },
    "FINAL TEST SUMMARY - ITERATIONS 71-100": {
      "value": "FINAL TEST SUMMARY - ITERATIONS 71-100",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:97"
      ]
    },
    "FINAL_100_ITERATION_REPORT.md": {
      "value": "FINAL_100_ITERATION_REPORT.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:378"
      ]
    },
    "FIXES APPLIED (": {
      "value": "FIXES APPLIED (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:315"
      ]
    },
    "FIXING ALL TEST ISSUES": {
      "value": "FIXING ALL TEST ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:213"
      ]
    },
    "FIXING COMMON TEST ISSUES": {
      "value": "FIXING COMMON TEST ISSUES",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:66"
      ]
    },
    "FRONTEND": {
      "value": "FRONTEND",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:24",
        "scripts/test_chat_errors.py:25",
        "scripts/test_chat_errors.py:30",
        "scripts/test_chat_errors.py:31",
        "scripts/test_log_introspection.py:366"
      ]
    },
    "FRONTEND_PORT": {
      "value": "FRONTEND_PORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:269"
      ]
    },
    "FRONTEND_URL": {
      "value": "FRONTEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:93",
        "scripts/test_oauth_local.py:64",
        "scripts/test_oauth_local.py:64",
        "scripts/test_staging.py:30"
      ]
    },
    "Factory compliance does not default to staging": {
      "value": "Factory compliance does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:93"
      ]
    },
    "Factory status integration does not default to staging": {
      "value": "Factory status integration does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:102"
      ]
    },
    "Fail Fast:": {
      "value": "Fail Fast:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:367"
      ]
    },
    "Fail on any violations (for CI)": {
      "value": "Fail on any violations (for CI)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:259"
      ]
    },
    "Fail-fast strategy mode (default: category_failure)": {
      "value": "Fail-fast strategy mode (default: category_failure)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1017"
      ]
    },
    "Failed": {
      "value": "Failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:377",
        "scripts/test_oauth_local.py:379",
        "scripts/test_staging_deployment.py:98",
        "scripts/test_staging_deployment.py:121",
        "scripts/test_staging_deployment.py:142",
        "scripts/test_workflows_with_act.py:207"
      ]
    },
    "Failed renames:": {
      "value": "Failed renames:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:284"
      ]
    },
    "Failed tests:": {
      "value": "Failed tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:196"
      ]
    },
    "Failed to analyze": {
      "value": "Failed to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:125"
      ]
    },
    "Failed to backup": {
      "value": "Failed to backup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:766"
      ]
    },
    "Failed to connect to auth service:": {
      "value": "Failed to connect to auth service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:57"
      ]
    },
    "Failed to connect to backend:": {
      "value": "Failed to connect to backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:43"
      ]
    },
    "Failed to connect to frontend:": {
      "value": "Failed to connect to frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:29"
      ]
    },
    "Failed to create": {
      "value": "Failed to create",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:411"
      ]
    },
    "Failed to create backup for": {
      "value": "Failed to create backup for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:822"
      ]
    },
    "Failed to create thread:": {
      "value": "Failed to create thread:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:338"
      ]
    },
    "Failed to fix:": {
      "value": "Failed to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:393"
      ]
    },
    "Failed to import optimization modules:": {
      "value": "Failed to import optimization modules:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:38"
      ]
    },
    "Failed to install dependencies:": {
      "value": "Failed to install dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:61"
      ]
    },
    "Failed to kill PID": {
      "value": "Failed to kill PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:124"
      ]
    },
    "Failed to load violations file:": {
      "value": "Failed to load violations file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:610"
      ]
    },
    "Failed to parse LLM response": {
      "value": "Failed to parse LLM response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:132"
      ]
    },
    "Failed to parse file": {
      "value": "Failed to parse file",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:16"
      ]
    },
    "Failed to process": {
      "value": "Failed to process",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:673"
      ]
    },
    "Failed to read": {
      "value": "Failed to read",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:185"
      ]
    },
    "Failed to remove original file:": {
      "value": "Failed to remove original file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:291"
      ]
    },
    "Failed to send message:": {
      "value": "Failed to send message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:363"
      ]
    },
    "Failed to setup test database:": {
      "value": "Failed to setup test database:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:232"
      ]
    },
    "Failed to split function": {
      "value": "Failed to split function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:479"
      ]
    },
    "Failed to start Docker services": {
      "value": "Failed to start Docker services",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:52"
      ]
    },
    "Failed to start services:": {
      "value": "Failed to start services:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:140"
      ]
    },
    "Failed to test CORS:": {
      "value": "Failed to test CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:93"
      ]
    },
    "Failed to test protected endpoint:": {
      "value": "Failed to test protected endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:75"
      ]
    },
    "Failed to update test:": {
      "value": "Failed to update test:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:194"
      ]
    },
    "Failed:": {
      "value": "Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:101",
        "scripts/fix_test_batch.py:383",
        "scripts/simple_test_fix_loop.py:94",
        "scripts/test_auth_database_sessions.py:398",
        "scripts/test_coordination_fixes.py:381",
        "scripts/test_database_url_builder_comprehensive.py:349",
        "scripts/test_example_message_flow.py:322",
        "scripts/test_ssl_certificates_staging.py:306",
        "scripts/test_staging_env.py:190",
        "scripts/test_staging_migrations.py:326"
      ]
    },
    "FailingAgent": {
      "value": "FailingAgent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:64"
      ]
    },
    "Failure rate:": {
      "value": "Failure rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:226"
      ]
    },
    "Fake Test Scan Results:": {
      "value": "Fake Test Scan Results:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:406",
        "scripts/compliance/fake_test_scanner.py:410"
      ]
    },
    "Fake Test Scanner - Comprehensive fake test detection and reporting\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n1. **Segment**: Platform/Internal - Quality assurance for all tiers\n2. **Business Goal**: Platform Stability, Development Velocity, Risk Reduction\n3. **Value Impact**: Prevents false confidence from fake tests, improves reliability\n4. **Strategic Impact**: Reduces debugging time, accelerates issue resolution\n5. **Platform Stability**: Ensures all tests provide real validation\n\nThis script provides comprehensive fake test detection across the entire codebase.\nIt integrates with existing test infrastructure and generates actionable reports.\n\nUsage:\n    python scripts/compliance/fake_test_scanner.py --scan-all\n    python scripts/compliance/fake_test_scanner.py --directory app/tests\n    python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n    python scripts/compliance/fake_test_scanner.py --report-only": {
      "value": "Fake Test Scanner - Comprehensive fake test detection and reporting\n\n**BUSINESS VALUE JUSTIFICATION (BVJ):**\n1. **Segment**: Platform/Internal - Quality assurance for all tiers\n2. **Business Goal**: Platform Stability, Development Velocity, Risk Reduction\n3. **Value Impact**: Prevents false confidence from fake tests, improves reliability\n4. **Strategic Impact**: Reduces debugging time, accelerates issue resolution\n5. **Platform Stability**: Ensures all tests provide real validation\n\nThis script provides comprehensive fake test detection across the entire codebase.\nIt integrates with existing test infrastructure and generates actionable reports.\n\nUsage:\n    python scripts/compliance/fake_test_scanner.py --scan-all\n    python scripts/compliance/fake_test_scanner.py --directory app/tests\n    python scripts/compliance/fake_test_scanner.py --file app/tests/test_example.py\n    python scripts/compliance/fake_test_scanner.py --report-only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:2"
      ]
    },
    "Fake Tests by Severity:": {
      "value": "Fake Tests by Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:264"
      ]
    },
    "Fake Tests by Type:": {
      "value": "Fake Tests by Type:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:272"
      ]
    },
    "Fallback Mode (Execution Failed)": {
      "value": "Fallback Mode (Execution Failed)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:272"
      ]
    },
    "Fallback to standard test execution": {
      "value": "Fallback to standard test execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:242"
      ]
    },
    "Falling back to standard test runner...": {
      "value": "Falling back to standard test runner...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:39"
      ]
    },
    "Fast-fail import testing for Netra Backend": {
      "value": "Fast-fail import testing for Netra Backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:29"
      ]
    },
    "Fast-fail import testing script for Netra Backend\n\nThis script provides quick import validation to catch import errors\nearly in the development cycle. It can be run standalone or integrated\ninto CI/CD pipelines.\n\nUsage:\n    python scripts/test_imports.py              # Test critical imports (fast-fail)\n    python scripts/test_imports.py --all        # Test all imports\n    python scripts/test_imports.py --module app.services  # Test specific module": {
      "value": "Fast-fail import testing script for Netra Backend\n\nThis script provides quick import validation to catch import errors\nearly in the development cycle. It can be run standalone or integrated\ninto CI/CD pipelines.\n\nUsage:\n    python scripts/test_imports.py              # Test critical imports (fast-fail)\n    python scripts/test_imports.py --all        # Test all imports\n    python scripts/test_imports.py --module app.services  # Test specific module",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:2"
      ]
    },
    "Fast-fail triggered by category:": {
      "value": "Fast-fail triggered by category:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:389"
      ]
    },
    "Fatal error:": {
      "value": "Fatal error:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:762"
      ]
    },
    "Feature grouping is heuristic - review carefully": {
      "value": "Feature grouping is heuristic - review carefully",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:517"
      ]
    },
    "Feature integration tests (3-5min)": {
      "value": "Feature integration tests (3-5min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:39"
      ]
    },
    "Fernet Key:": {
      "value": "Fernet Key:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:96"
      ]
    },
    "Fernet Key: MISSING": {
      "value": "Fernet Key: MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:139"
      ]
    },
    "Fernet Key: OK - Configured (from": {
      "value": "Fernet Key: OK - Configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:137"
      ]
    },
    "Field(default=\"staging\"": {
      "value": "Field(default=\"staging\"",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:117"
      ]
    },
    "File": {
      "value": "File",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256"
      ]
    },
    "File \"": {
      "value": "File \"",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:28"
      ]
    },
    "File \"([^\"]+\\.py)\"": {
      "value": "File \"([^\"]+\\.py)\"",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:29",
        "scripts/simple_test_fix_loop.py:30"
      ]
    },
    "File does not exist:": {
      "value": "File does not exist:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:133"
      ]
    },
    "File has": {
      "value": "File has",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:213",
        "scripts/compliance/project_test_validator.py:156",
        "scripts/compliance/real_test_requirements_enforcer.py:222",
        "scripts/compliance/real_test_requirements_enforcer.py:401",
        "scripts/compliance/real_test_validator.py:111",
        "scripts/compliance/test_size_validator.py:364"
      ]
    },
    "File not found:": {
      "value": "File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:650",
        "scripts/auto_fix_test_sizes.py:684",
        "scripts/auto_fix_test_violations.py:195",
        "scripts/compliance/fake_test_scanner.py:134"
      ]
    },
    "File size:": {
      "value": "File size:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:88"
      ]
    },
    "File:": {
      "value": "File:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:328"
      ]
    },
    "Files Affected:": {
      "value": "Files Affected:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:311"
      ]
    },
    "Files analyzed:": {
      "value": "Files analyzed:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:400"
      ]
    },
    "Files exceeding": {
      "value": "Files exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:421"
      ]
    },
    "Files fixed:": {
      "value": "Files fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:92"
      ]
    },
    "Files modified:": {
      "value": "Files modified:",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:183",
        "scripts/fix_e2e_test_imports.py:208"
      ]
    },
    "Files processed:": {
      "value": "Files processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:226",
        "scripts/apply_fast_test_decorators.py:182",
        "scripts/auto_fix_test_sizes.py:748",
        "scripts/fix_e2e_test_imports.py:207"
      ]
    },
    "Files split:": {
      "value": "Files split:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:749"
      ]
    },
    "Files successfully fixed:": {
      "value": "Files successfully fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:311"
      ]
    },
    "Files that failed to fix:": {
      "value": "Files that failed to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:312"
      ]
    },
    "Files with Violations:": {
      "value": "Files with Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:51"
      ]
    },
    "Files with import errors:": {
      "value": "Files with import errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:277",
        "scripts/fix_test_import_errors.py:310"
      ]
    },
    "Files with import order issues:": {
      "value": "Files with import order issues:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:88"
      ]
    },
    "Final Result:": {
      "value": "Final Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:211"
      ]
    },
    "Final Status:": {
      "value": "Final Status:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:134"
      ]
    },
    "Final Summary": {
      "value": "Final Summary",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:138"
      ]
    },
    "Final Test Status Check - Iterations 71-100": {
      "value": "Final Test Status Check - Iterations 71-100",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:37"
      ]
    },
    "Final Test Status Check - Iterations 71-100 Summary\n\nThis script provides a comprehensive summary of test improvements made during\nthe final 30 iterations of test fixing and infrastructure improvements.": {
      "value": "Final Test Status Check - Iterations 71-100 Summary\n\nThis script provides a comprehensive summary of test improvements made during\nthe final 30 iterations of test fixing and infrastructure improvements.",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:2"
      ]
    },
    "Final connection state:": {
      "value": "Final connection state:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:111"
      ]
    },
    "Final reports created in": {
      "value": "Final reports created in",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:489"
      ]
    },
    "Findings must be a list": {
      "value": "Findings must be a list",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:365"
      ]
    },
    "First Time User Critical Paths": {
      "value": "First Time User Critical Paths",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:65"
      ]
    },
    "First allocation failed:": {
      "value": "First allocation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:165"
      ]
    },
    "First authorization code use should succeed": {
      "value": "First authorization code use should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:66"
      ]
    },
    "First nonce use should succeed": {
      "value": "First nonce use should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:78"
      ]
    },
    "First session state isolation should succeed": {
      "value": "First session state isolation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:196"
      ]
    },
    "First state validation should succeed": {
      "value": "First state validation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:44"
      ]
    },
    "Fix #": {
      "value": "Fix #",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:123"
      ]
    },
    "Fix Authentication Test Tokens\n\nThis script fixes the authentication integration tests by replacing invalid\ntoken strings with properly formatted JWT tokens.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Fix authentication tests to pass with proper JWT tokens\n- Value Impact: Enables authentication system validation and reliability\n- Strategic Impact: Prevents authentication regressions": {
      "value": "Fix Authentication Test Tokens\n\nThis script fixes the authentication integration tests by replacing invalid\ntoken strings with properly formatted JWT tokens.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Fix authentication tests to pass with proper JWT tokens\n- Value Impact: Enables authentication system validation and reliability\n- Strategic Impact: Prevents authentication regressions",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:1"
      ]
    },
    "Fix Python syntax errors": {
      "value": "Fix Python syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:202"
      ]
    },
    "Fix TestSyntaxFix classes that have __init__ constructors in test files.\n\nPytest doesn't allow test classes to have __init__ constructors.\nThis script converts them to use setup_method instead.": {
      "value": "Fix TestSyntaxFix classes that have __init__ constructors in test files.\n\nPytest doesn't allow test classes to have __init__ constructors.\nThis script converts them to use setup_method instead.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:1"
      ]
    },
    "Fix all test issues including syntax errors and size violations.": {
      "value": "Fix all test issues including syntax errors and size violations.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:2"
      ]
    },
    "Fix common test issues in the Netra codebase.": {
      "value": "Fix common test issues in the Netra codebase.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:2"
      ]
    },
    "Fix detected stubs (not implemented)": {
      "value": "Fix detected stubs (not implemented)",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:356"
      ]
    },
    "Fix mock component function in": {
      "value": "Fix mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:358"
      ]
    },
    "Fix service health issues before testing login flows": {
      "value": "Fix service health issues before testing login flows",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:366"
      ]
    },
    "Fix test_utils import errors in test files.\n\nThis script fixes the incorrect import:\n    from netra_backend.tests.test_utils import setup_test_path\n    \nAnd removes it since it's not needed (tests should be run from proper context).": {
      "value": "Fix test_utils import errors in test files.\n\nThis script fixes the incorrect import:\n    from netra_backend.tests.test_utils import setup_test_path\n    \nAnd removes it since it's not needed (tests should be run from proper context).",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:2"
      ]
    },
    "Fix the failing test:": {
      "value": "Fix the failing test:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:127"
      ]
    },
    "Fix the import order in test files to ensure setup_test_path() is called first.": {
      "value": "Fix the import order in test files to ensure setup_test_path() is called first.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:1"
      ]
    },
    "Fix:": {
      "value": "Fix:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:443"
      ]
    },
    "Fixed": {
      "value": "Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:57",
        "scripts/compliance/real_test_linter.py:63",
        "scripts/fix_all_test_issues.py:245",
        "scripts/fix_test_syntax_errors.py:254"
      ]
    },
    "Fixed UserPlan import with placeholder enum": {
      "value": "Fixed UserPlan import with placeholder enum",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:73"
      ]
    },
    "Fixed UserSession import to use Session alias": {
      "value": "Fixed UserSession import to use Session alias",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:66"
      ]
    },
    "Fixed WebSocketConnectionManager import to use ConnectionManager": {
      "value": "Fixed WebSocketConnectionManager import to use ConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:59"
      ]
    },
    "Fixed decorator spacing in": {
      "value": "Fixed decorator spacing in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:60"
      ]
    },
    "Fixed duplicate import in": {
      "value": "Fixed duplicate import in",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:47"
      ]
    },
    "Fixed import order": {
      "value": "Fixed import order",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:85"
      ]
    },
    "Fixed imports in:": {
      "value": "Fixed imports in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:107",
        "scripts/align_test_imports.py:433"
      ]
    },
    "Fixed invalid syntax:": {
      "value": "Fixed invalid syntax:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:239"
      ]
    },
    "Fixed syntax in:": {
      "value": "Fixed syntax in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:365"
      ]
    },
    "Fixed syntax issues in:": {
      "value": "Fixed syntax issues in:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:445"
      ]
    },
    "Fixed unmatched parens:": {
      "value": "Fixed unmatched parens:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:243"
      ]
    },
    "Fixed:": {
      "value": "Fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:87",
        "scripts/fix_test_batch.py:382",
        "scripts/fix_test_import_order.py:101",
        "scripts/fix_test_syntax_errors.py:252",
        "scripts/fix_test_utils_imports.py:50",
        "scripts/remove_duplicate_test_setup.py:61"
      ]
    },
    "Fixes Applied:": {
      "value": "Fixes Applied:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:134"
      ]
    },
    "Fixes made:": {
      "value": "Fixes made:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:134"
      ]
    },
    "Fixing": {
      "value": "Fixing",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:806"
      ]
    },
    "Fixing Authentication Test Tokens": {
      "value": "Fixing Authentication Test Tokens",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:155"
      ]
    },
    "Fixing Test Files:": {
      "value": "Fixing Test Files:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:161"
      ]
    },
    "Fixing import issues...": {
      "value": "Fixing import issues...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:84"
      ]
    },
    "Fixing test discovery paths...": {
      "value": "Fixing test discovery paths...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:312"
      ]
    },
    "Fixing test runner configuration...": {
      "value": "Fixing test runner configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:213"
      ]
    },
    "Fixtures:": {
      "value": "Fixtures:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:91",
        "scripts/compliance/test_refactor_helper.py:709"
      ]
    },
    "For": {
      "value": "For",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:171",
        "scripts/test_ssl_certificates_staging.py:247"
      ]
    },
    "For automated testing, use mock authentication or API keys instead of OAuth": {
      "value": "For automated testing, use mock authentication or API keys instead of OAuth",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:374"
      ]
    },
    "For detailed guidance:": {
      "value": "For detailed guidance:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:313"
      ]
    },
    "For migrations:": {
      "value": "For migrations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:203"
      ]
    },
    "For psycopg2:": {
      "value": "For psycopg2:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:71"
      ]
    },
    "Forbidden permission found:": {
      "value": "Forbidden permission found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:229"
      ]
    },
    "Force kill without confirmation": {
      "value": "Force kill without confirmation",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:151"
      ]
    },
    "Found": {
      "value": "Found",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:45",
        "scripts/analyze_test_overlap.py:79",
        "scripts/analyze_test_overlap.py:489",
        "scripts/cleanup_test_processes.py:106",
        "scripts/compliance/fake_test_scanner.py:74",
        "scripts/compliance/real_test_requirements_enforcer.py:83",
        "scripts/compliance/test_size_validator.py:73",
        "scripts/comprehensive_test_fixer.py:300",
        "scripts/fix_all_test_issues.py:217",
        "scripts/fix_e2e_test_imports.py:196"
      ]
    },
    "Found Alembic config:": {
      "value": "Found Alembic config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:115"
      ]
    },
    "Found potential migration directory:": {
      "value": "Found potential migration directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:131"
      ]
    },
    "Found similar names in module:": {
      "value": "Found similar names in module:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:124"
      ]
    },
    "Found syntax error in:": {
      "value": "Found syntax error in:",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:33"
      ]
    },
    "Found test credentials file...": {
      "value": "Found test credentials file...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:131"
      ]
    },
    "Fresh token validation failed": {
      "value": "Fresh token validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:123"
      ]
    },
    "Frontend": {
      "value": "Frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:178"
      ]
    },
    "Frontend API Proxy": {
      "value": "Frontend API Proxy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:151"
      ]
    },
    "Frontend API proxy is configured": {
      "value": "Frontend API proxy is configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:124"
      ]
    },
    "Frontend API proxy test failed:": {
      "value": "Frontend API proxy test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:128"
      ]
    },
    "Frontend Health": {
      "value": "Frontend Health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:86",
        "scripts/test_staging_env.py:146"
      ]
    },
    "Frontend Service": {
      "value": "Frontend Service",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:37"
      ]
    },
    "Frontend Service:": {
      "value": "Frontend Service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:337"
      ]
    },
    "Frontend Startup Tests": {
      "value": "Frontend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:159"
      ]
    },
    "Frontend Tests:": {
      "value": "Frontend Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:116"
      ]
    },
    "Frontend application tests": {
      "value": "Frontend application tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:84"
      ]
    },
    "Frontend connecting from host browser to Docker backend": {
      "value": "Frontend connecting from host browser to Docker backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:122"
      ]
    },
    "Frontend health check failed:": {
      "value": "Frontend health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:52"
      ]
    },
    "Frontend is serving": {
      "value": "Frontend is serving",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:48"
      ]
    },
    "Frontend port": {
      "value": "Frontend port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:208"
      ]
    },
    "Frontend proxy returned status": {
      "value": "Frontend proxy returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:126"
      ]
    },
    "Frontend returned status": {
      "value": "Frontend returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:23",
        "scripts/test_staging_env.py:50"
      ]
    },
    "Frontend section": {
      "value": "Frontend section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:366"
      ]
    },
    "Frontend should be in registry": {
      "value": "Frontend should be in registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:340"
      ]
    },
    "Frontend should have started": {
      "value": "Frontend should have started",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:333"
      ]
    },
    "Frontend token:": {
      "value": "Frontend token:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:58",
        "scripts/test_jwt_fix.py:35"
      ]
    },
    "Frontend:": {
      "value": "Frontend:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:88",
        "scripts/test_and_fix_cors.py:117",
        "scripts/test_and_fix_cors.py:133"
      ]
    },
    "Full URL for debug:": {
      "value": "Full URL for debug:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:81"
      ]
    },
    "Full analysis saved to mock_analysis.json": {
      "value": "Full analysis saved to mock_analysis.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:195"
      ]
    },
    "Full report saved to:": {
      "value": "Full report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:384"
      ]
    },
    "Full reports saved to test_reports/": {
      "value": "Full reports saved to test_reports/",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:664"
      ]
    },
    "Full test suite (30-45min)": {
      "value": "Full test suite (30-45min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:47"
      ]
    },
    "Function": {
      "value": "Function",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:192"
      ]
    },
    "Function '": {
      "value": "Function '",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_validator.py:213",
        "scripts/compliance/test_limits_checker.py:209"
      ]
    },
    "Function accepts *args, **kwargs and returns static data": {
      "value": "Function accepts *args, **kwargs and returns static data",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:198"
      ]
    },
    "Function refactoring is disabled.": {
      "value": "Function refactoring is disabled.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "Function/class": {
      "value": "Function/class",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:116"
      ]
    },
    "Functions added:": {
      "value": "Functions added:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:399"
      ]
    },
    "Functions exceeding": {
      "value": "Functions exceeding",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:422"
      ]
    },
    "Functions optimized:": {
      "value": "Functions optimized:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:750"
      ]
    },
    "Functions:": {
      "value": "Functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:89",
        "scripts/compliance/test_refactor_helper.py:707"
      ]
    },
    "GC frequency": {
      "value": "GC frequency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91"
      ]
    },
    "GC pause:": {
      "value": "GC pause:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:118"
      ]
    },
    "GCE_METADATA_HOST": {
      "value": "GCE_METADATA_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:228"
      ]
    },
    "GCP_": {
      "value": "GCP_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "GCP_PROJECT_ID": {
      "value": "GCP_PROJECT_ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_redis_config_critical_failure.py:91",
        "scripts/test_staging.py:32"
      ]
    },
    "GCP_PROJECT_ID_NUMERICAL_PRODUCTION": {
      "value": "GCP_PROJECT_ID_NUMERICAL_PRODUCTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:155",
        "scripts/test_secret_manager_builder_critical.py:563"
      ]
    },
    "GCP_PROJECT_ID_NUMERICAL_STAGING": {
      "value": "GCP_PROJECT_ID_NUMERICAL_STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_secret_manager_builder_critical.py:141",
        "scripts/test_staging_config.py:43",
        "scripts/test_staging_config.py:63"
      ]
    },
    "GCP_REGION": {
      "value": "GCP_REGION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:33"
      ]
    },
    "GEMINI_": {
      "value": "GEMINI_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "GEMINI_2_5_FLASH": {
      "value": "GEMINI_2_5_FLASH",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:18",
        "scripts/validate_llm_test_models.py:115"
      ]
    },
    "GEMINI_2_5_PRO": {
      "value": "GEMINI_2_5_PRO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:19",
        "scripts/validate_llm_test_models.py:115"
      ]
    },
    "GEMINI_API_KEY": {
      "value": "GEMINI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:119",
        "scripts/setup_test_environment.py:246",
        "scripts/setup_test_environment.py:257",
        "scripts/test_backend.py:91",
        "scripts/test_backend.py:91",
        "scripts/test_config_loading.py:34",
        "scripts/test_secret_manager_builder_critical.py:84",
        "scripts/test_staging_config.py:53"
      ]
    },
    "GEMINI_PRO": {
      "value": "GEMINI_PRO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:20"
      ]
    },
    "GET": {
      "value": "GET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:320",
        "scripts/debug_cors_test.py:16",
        "scripts/test_and_fix_cors.py:23",
        "scripts/test_cors.py:98",
        "scripts/test_cors.py:428",
        "scripts/test_cors_implementation.py:51",
        "scripts/test_cors_implementation.py:120",
        "scripts/test_cors_implementation.py:127",
        "scripts/test_cors_implementation.py:133",
        "scripts/test_cors_implementation.py:139"
      ]
    },
    "GITHUB_TOKEN": {
      "value": "GITHUB_TOKEN",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:57"
      ]
    },
    "GOCSPX-1234567890123456789012345678901": {
      "value": "GOCSPX-1234567890123456789012345678901",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:38"
      ]
    },
    "GOOGLE_": {
      "value": "GOOGLE_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "GOOGLE_API_KEY": {
      "value": "GOOGLE_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:259"
      ]
    },
    "GOOGLE_CLIENT_ID": {
      "value": "GOOGLE_CLIENT_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:52",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:63",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:89",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:164",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:419",
        "scripts/setup_staging_test_account.py:65",
        "scripts/test_backend.py:92",
        "scripts/test_oauth_dev_config.py:27",
        "scripts/test_oauth_dev_config.py:39",
        "scripts/test_oauth_dev_config.py:54"
      ]
    },
    "GOOGLE_CLIENT_ID=google-oauth-client-id-staging": {
      "value": "GOOGLE_CLIENT_ID=google-oauth-client-id-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:74"
      ]
    },
    "GOOGLE_CLIENT_SECRET": {
      "value": "GOOGLE_CLIENT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:108",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:119",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:144",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:164",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:419",
        "scripts/test_backend.py:93",
        "scripts/test_oauth_dev_config.py:28",
        "scripts/test_oauth_dev_config.py:40",
        "scripts/test_oauth_dev_config.py:72",
        "scripts/test_oauth_local.py:400"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:37",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:278",
        "scripts/test_oauth_dev_config.py:25",
        "scripts/test_oauth_dev_config.py:53",
        "scripts/test_oauth_dev_config.py:73"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT=your-dev-client-id.apps.googleusercontent.com": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT=your-dev-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:112"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_PRODUCTION": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_PRODUCTION",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:273",
        "scripts/test_oauth_dev_config.py:75"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_ID_STAGING": {
      "value": "GOOGLE_OAUTH_CLIENT_ID_STAGING",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:45",
        "auth_service/test_url_construction.py:46",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:51",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:61",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:87",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:163",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:214",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:220",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:249",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:268"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:38",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:279",
        "scripts/test_oauth_dev_config.py:26",
        "scripts/test_oauth_dev_config.py:73"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT=your-dev-client-secret": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT=your-dev-client-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:113"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_PRODUCTION": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_PRODUCTION",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:274",
        "scripts/test_oauth_dev_config.py:75"
      ]
    },
    "GOOGLE_OAUTH_CLIENT_SECRET_STAGING": {
      "value": "GOOGLE_OAUTH_CLIENT_SECRET_STAGING",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:46",
        "auth_service/test_url_construction.py:47",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:107",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:117",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:142",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:163",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:215",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:221",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:251",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:269"
      ]
    },
    "GPT_35_TURBO": {
      "value": "GPT_35_TURBO",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:26",
        "scripts/validate_llm_test_models.py:35"
      ]
    },
    "GPT_4": {
      "value": "GPT_4",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:25",
        "scripts/validate_llm_test_models.py:34"
      ]
    },
    "GTM Configuration: ISSUES DETECTED": {
      "value": "GTM Configuration: ISSUES DETECTED",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:136"
      ]
    },
    "GTM Configuration: WORKING": {
      "value": "GTM Configuration: WORKING",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:134"
      ]
    },
    "GTM Loading Test Report": {
      "value": "GTM Loading Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:95"
      ]
    },
    "GTM-WKP28PNQ": {
      "value": "GTM-WKP28PNQ",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:61"
      ]
    },
    "GTM-[A-Z0-9]+": {
      "value": "GTM-[A-Z0-9]+",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:32"
      ]
    },
    "Generate Business Value Test Coverage Index": {
      "value": "Generate Business Value Test Coverage Index",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:774"
      ]
    },
    "Generate HTML test report": {
      "value": "Generate HTML test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:504"
      ]
    },
    "Generate JSON test report": {
      "value": "Generate JSON test report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:503"
      ]
    },
    "Generate auto-split suggestions": {
      "value": "Generate auto-split suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:523"
      ]
    },
    "Generate comprehensive fix report": {
      "value": "Generate comprehensive fix report",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:263"
      ]
    },
    "Generate comprehensive test organization audit\n\nBusiness Value Justification (BVJ):\n1. Segment: Platform/Internal\n2. Business Goal: Development Velocity\n3. Value Impact: Identifies test organization issues blocking development\n4. Strategic Impact: Reduces development friction by 50%": {
      "value": "Generate comprehensive test organization audit\n\nBusiness Value Justification (BVJ):\n1. Segment: Platform/Internal\n2. Business Goal: Development Velocity\n3. Value Impact: Identifies test organization issues blocking development\n4. Strategic Impact: Reduces development friction by 50%",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:1"
      ]
    },
    "Generate detailed report": {
      "value": "Generate detailed report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:357"
      ]
    },
    "Generate intelligent recommendations": {
      "value": "Generate intelligent recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:243"
      ]
    },
    "Generate intelligent test based on code analysis": {
      "value": "Generate intelligent test based on code analysis",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:22"
      ]
    },
    "Generate report from existing scan results": {
      "value": "Generate report from existing scan results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:381"
      ]
    },
    "Generate splitting suggestions": {
      "value": "Generate splitting suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:677"
      ]
    },
    "Generated URL:": {
      "value": "Generated URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:67"
      ]
    },
    "Generated async URL:": {
      "value": "Generated async URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:152"
      ]
    },
    "Generated by auto_fix_test_violations.py": {
      "value": "Generated by auto_fix_test_violations.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:519",
        "scripts/auto_fix_test_violations.py:548"
      ]
    },
    "Generated sync URL:": {
      "value": "Generated sync URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:153"
      ]
    },
    "Generated tokens:": {
      "value": "Generated tokens:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:57"
      ]
    },
    "Generated:": {
      "value": "Generated:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:519",
        "scripts/auto_fix_test_violations.py:854",
        "scripts/compliance/fake_test_scanner.py:250",
        "scripts/optimize_test_performance.py:272"
      ]
    },
    "Generating final test health reports...": {
      "value": "Generating final test health reports...",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:507"
      ]
    },
    "Generating tests for": {
      "value": "Generating tests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:280"
      ]
    },
    "Git mv error:": {
      "value": "Git mv error:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:142"
      ]
    },
    "Git mv failed:": {
      "value": "Git mv failed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:139"
      ]
    },
    "GitHub User": {
      "value": "GitHub User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:225"
      ]
    },
    "GitHub token required": {
      "value": "GitHub token required",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:70",
        "scripts/test_verify_workflow_status_corrected.py:121"
      ]
    },
    "Google AI/Gemini API key": {
      "value": "Google AI/Gemini API key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:119"
      ]
    },
    "Google Client ID loading failed:": {
      "value": "Google Client ID loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:327"
      ]
    },
    "Google Client Secret loading failed:": {
      "value": "Google Client Secret loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:332"
      ]
    },
    "Google OAuth provider should be available": {
      "value": "Google OAuth provider should be available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:387"
      ]
    },
    "Got:": {
      "value": "Got:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:96"
      ]
    },
    "Graceful degradation test failed:": {
      "value": "Graceful degradation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:274"
      ]
    },
    "Graceful degradation working: degraded=": {
      "value": "Graceful degradation working: degraded=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:270"
      ]
    },
    "Graceful shutdown took too long:": {
      "value": "Graceful shutdown took too long:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:496"
      ]
    },
    "HEAD": {
      "value": "HEAD",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "HIGH": {
      "value": "HIGH",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:65",
        "scripts/ci/check_test_stubs.py:97",
        "scripts/remove_test_stubs.py:151",
        "scripts/remove_test_stubs.py:197"
      ]
    },
    "HIGH:": {
      "value": "HIGH:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:134"
      ]
    },
    "HINT:": {
      "value": "HINT:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:656"
      ]
    },
    "HINT: This appears to be a Docker-related issue.": {
      "value": "HINT: This appears to be a Docker-related issue.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:667"
      ]
    },
    "HS256": {
      "value": "HS256",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:20",
        "auth_service/tests/test_auth_comprehensive.py:157",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:34",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:46",
        "scripts/setup_staging_test_account.py:72",
        "scripts/setup_staging_test_account.py:117"
      ]
    },
    "HTTP": {
      "value": "HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:120"
      ]
    },
    "HTTP method for actual requests (default: GET)": {
      "value": "HTTP method for actual requests (default: GET)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:429"
      ]
    },
    "HTTP origins in production:": {
      "value": "HTTP origins in production:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:342"
      ]
    },
    "Handler initialization failed:": {
      "value": "Handler initialization failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:268"
      ]
    },
    "Hardcoded test data pattern found:": {
      "value": "Hardcoded test data pattern found:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:176"
      ]
    },
    "Has": {
      "value": "Has",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:288"
      ]
    },
    "Has TCP config:": {
      "value": "Has TCP config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:42",
        "scripts/test_database_url_builder_comprehensive.py:98"
      ]
    },
    "Headers:": {
      "value": "Headers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:98",
        "scripts/test_websocket_connection.py:52"
      ]
    },
    "Health Check": {
      "value": "Health Check",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:143"
      ]
    },
    "Health Checks": {
      "value": "Health Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:343"
      ]
    },
    "Health Endpoints": {
      "value": "Health Endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:239"
      ]
    },
    "Health check failed:": {
      "value": "Health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:66",
        "scripts/test_websocket_middleware.py:35"
      ]
    },
    "Health check passed": {
      "value": "Health check passed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:130"
      ]
    },
    "Health check response:": {
      "value": "Health check response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:32"
      ]
    },
    "Health endpoint returned": {
      "value": "Health endpoint returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:135"
      ]
    },
    "Health endpoint test failed:": {
      "value": "Health endpoint test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:139"
      ]
    },
    "Health:": {
      "value": "Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:64"
      ]
    },
    "Healthy": {
      "value": "Healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:363"
      ]
    },
    "Heap size:": {
      "value": "Heap size:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:117"
      ]
    },
    "Hello WebSocket!": {
      "value": "Hello WebSocket!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:31"
      ]
    },
    "Hello, can you help me optimize my AI workload?": {
      "value": "Hello, can you help me optimize my AI workload?",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:52"
      ]
    },
    "Help text should display successfully": {
      "value": "Help text should display successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:87"
      ]
    },
    "Helper functions:": {
      "value": "Helper functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:37"
      ]
    },
    "Helper method extraction not yet implemented for": {
      "value": "Helper method extraction not yet implemented for",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:587"
      ]
    },
    "High": {
      "value": "High",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:166"
      ]
    },
    "High - Agent system": {
      "value": "High - Agent system",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:42"
      ]
    },
    "High - Services": {
      "value": "High - Services",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:44"
      ]
    },
    "High - WebSocket": {
      "value": "High - WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:43"
      ]
    },
    "High Failure Rate Tests:": {
      "value": "High Failure Rate Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:297"
      ]
    },
    "High timeout rate (": {
      "value": "High timeout rate (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:302"
      ]
    },
    "Highly Similar:": {
      "value": "Highly Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:658"
      ]
    },
    "Hijack attempt not recorded": {
      "value": "Hijack attempt not recorded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:108"
      ]
    },
    "Host:": {
      "value": "Host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:232",
        "scripts/test_ssl_certificates_staging.py:39",
        "scripts/test_ssl_certificates_staging.py:215",
        "scripts/test_staging_db_direct.py:44",
        "scripts/test_staging_migrations.py:44"
      ]
    },
    "Hostname:": {
      "value": "Hostname:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:60"
      ]
    },
    "INFO": {
      "value": "INFO",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:76",
        "netra_backend/app/services/realistic_test_data/log_generator.py:83",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/test_error_monitor_logic.py:38",
        "scripts/test_error_monitor_logic.py:66"
      ]
    },
    "INFO (": {
      "value": "INFO (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:303"
      ]
    },
    "INSTANCE_CONNECTION_NAME": {
      "value": "INSTANCE_CONNECTION_NAME",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:233"
      ]
    },
    "IP change not detected": {
      "value": "IP change not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:267"
      ]
    },
    "ISSUE IDENTIFIED:": {
      "value": "ISSUE IDENTIFIED:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:95"
      ]
    },
    "ITERATION": {
      "value": "ITERATION",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:103"
      ]
    },
    "ITERATION 25: OAuth Security Vulnerabilities Test\n\nTests critical OAuth security vulnerabilities that prevent account takeover attacks,\nCSRF attacks, and other OAuth-based security breaches.\n\nBusiness Value: Prevents OAuth security breaches worth $500K+ per incident.": {
      "value": "ITERATION 25: OAuth Security Vulnerabilities Test\n\nTests critical OAuth security vulnerabilities that prevent account takeover attacks,\nCSRF attacks, and other OAuth-based security breaches.\n\nBusiness Value: Prevents OAuth security breaches worth $500K+ per incident.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:1"
      ]
    },
    "ITERATION 25: Prevent CSRF attacks via OAuth state parameter replay.\n        \n        Business Value: Prevents CSRF account takeover attacks worth $500K+ per breach.": {
      "value": "ITERATION 25: Prevent CSRF attacks via OAuth state parameter replay.\n        \n        Business Value: Prevents CSRF account takeover attacks worth $500K+ per breach.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:30"
      ]
    },
    "ITERATION SUMMARY": {
      "value": "ITERATION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:115"
      ]
    },
    "ITERATIONS": {
      "value": "ITERATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:158"
      ]
    },
    "Identify gaps in test coverage": {
      "value": "Identify gaps in test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:185"
      ]
    },
    "Identifying potentially flaky tests...": {
      "value": "Identifying potentially flaky tests...",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:364"
      ]
    },
    "Impact:": {
      "value": "Impact:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "Implement caching for frequent requests": {
      "value": "Implement caching for frequent requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:326"
      ]
    },
    "Implement memory monitoring and alerting": {
      "value": "Implement memory monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:447"
      ]
    },
    "Implement memory optimization": {
      "value": "Implement memory optimization",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:396"
      ]
    },
    "Implement real functionality or remove unused function": {
      "value": "Implement real functionality or remove unused function",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:234"
      ]
    },
    "Import error (expected in test environment):": {
      "value": "Import error (expected in test environment):",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:41"
      ]
    },
    "Import error:": {
      "value": "Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:132"
      ]
    },
    "Import fixes applied:": {
      "value": "Import fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:427"
      ]
    },
    "Import test failed. Please fix the import errors above.": {
      "value": "Import test failed. Please fix the import errors above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:92"
      ]
    },
    "Import test interrupted by user": {
      "value": "Import test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:127"
      ]
    },
    "Import validation failed:": {
      "value": "Import validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:224"
      ]
    },
    "ImportError": {
      "value": "ImportError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:34",
        "scripts/comprehensive_test_fixer.py:42",
        "scripts/fix_test_batch.py:44"
      ]
    },
    "ImportError: cannot import name '(\\w+)' from '([\\w\\.]+)'": {
      "value": "ImportError: cannot import name '(\\w+)' from '([\\w\\.]+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:38",
        "scripts/fix_test_batch.py:42"
      ]
    },
    "Improve error handling": {
      "value": "Improve error handling",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:416"
      ]
    },
    "In-progress request cancelled - no graceful shutdown": {
      "value": "In-progress request cancelled - no graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:501"
      ]
    },
    "In-progress request failed during shutdown:": {
      "value": "In-progress request failed during shutdown:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:495"
      ]
    },
    "In-progress request terminated abruptly - no graceful shutdown": {
      "value": "In-progress request terminated abruptly - no graceful shutdown",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:499"
      ]
    },
    "Inappropriate Fallback Behaviors:": {
      "value": "Inappropriate Fallback Behaviors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:219"
      ]
    },
    "Include": {
      "value": "Include",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:28",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Include ClickHouse service": {
      "value": "Include ClickHouse service",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:166"
      ]
    },
    "Increase real LLM test coverage from": {
      "value": "Increase real LLM test coverage from",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:694"
      ]
    },
    "Increase test coverage for critical component '": {
      "value": "Increase test coverage for critical component '",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711"
      ]
    },
    "Initial session validation failed": {
      "value": "Initial session validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:194"
      ]
    },
    "Initial token validation failed": {
      "value": "Initial token validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:155",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:191"
      ]
    },
    "Initialization order test failed:": {
      "value": "Initialization order test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:73"
      ]
    },
    "InitializationManager": {
      "value": "InitializationManager",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:191"
      ]
    },
    "Initializing database...": {
      "value": "Initializing database...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:27"
      ]
    },
    "Initiate graceful shutdown of auth service": {
      "value": "Initiate graceful shutdown of auth service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:538"
      ]
    },
    "Insights enabling optimization decisions for": {
      "value": "Insights enabling optimization decisions for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:494"
      ]
    },
    "Install dependencies if missing": {
      "value": "Install dependencies if missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:416"
      ]
    },
    "Install with: pip install cloud-sql-python-connector[asyncpg]": {
      "value": "Install with: pip install cloud-sql-python-connector[asyncpg]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:118"
      ]
    },
    "Installing frontend dependencies...": {
      "value": "Installing frontend dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:138",
        "scripts/test_frontend.py:50"
      ]
    },
    "Insufficient timestamps": {
      "value": "Insufficient timestamps",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:584"
      ]
    },
    "Integration Tests": {
      "value": "Integration Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:51"
      ]
    },
    "Integration test has": {
      "value": "Integration test has",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:287",
        "scripts/compliance/real_test_requirements_enforcer.py:369",
        "scripts/compliance/real_test_validator.py:248"
      ]
    },
    "Integration tests for auth service refresh token flow.\nTests the complete refresh flow with real database and Redis connections.": {
      "value": "Integration tests for auth service refresh token flow.\nTests the complete refresh flow with real database and Redis connections.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:1"
      ]
    },
    "Integration tests for component interaction": {
      "value": "Integration tests for component interaction",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:76"
      ]
    },
    "Internal Docker service-to-service connection": {
      "value": "Internal Docker service-to-service connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:127"
      ]
    },
    "Internal server error": {
      "value": "Internal server error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:143"
      ]
    },
    "Invalid": {
      "value": "Invalid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:209"
      ]
    },
    "Invalid Allow-Credentials: expected 'true', got '": {
      "value": "Invalid Allow-Credentials: expected 'true', got '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:90"
      ]
    },
    "Invalid Allow-Origin in actual response: expected '": {
      "value": "Invalid Allow-Origin in actual response: expected '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:128"
      ]
    },
    "Invalid Allow-Origin: expected '": {
      "value": "Invalid Allow-Origin: expected '",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:83"
      ]
    },
    "Invalid Cloud SQL format": {
      "value": "Invalid Cloud SQL format",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:189"
      ]
    },
    "Invalid JSON body": {
      "value": "Invalid JSON body",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:316",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:177",
        "auth_service/tests/test_refresh_endpoint_simple.py:79",
        "auth_service/tests/unit/test_refresh_endpoint.py:117"
      ]
    },
    "Invalid JWT format: expected 3 parts, got": {
      "value": "Invalid JWT format: expected 3 parts, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:38"
      ]
    },
    "Invalid OAuth client ID format": {
      "value": "Invalid OAuth client ID format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:76"
      ]
    },
    "Invalid OAuth login URL": {
      "value": "Invalid OAuth login URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:445"
      ]
    },
    "Invalid PKCE challenge should fail:": {
      "value": "Invalid PKCE challenge should fail:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:138"
      ]
    },
    "Invalid UUID format:": {
      "value": "Invalid UUID format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:31"
      ]
    },
    "Invalid analysis type": {
      "value": "Invalid analysis type",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:112"
      ]
    },
    "Invalid auth provider:": {
      "value": "Invalid auth provider:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:106"
      ]
    },
    "Invalid base64url encoding in JWT part": {
      "value": "Invalid base64url encoding in JWT part",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:48"
      ]
    },
    "Invalid config response:": {
      "value": "Invalid config response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:102"
      ]
    },
    "Invalid credentials header value:": {
      "value": "Invalid credentials header value:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:227"
      ]
    },
    "Invalid email format:": {
      "value": "Invalid email format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:24"
      ]
    },
    "Invalid health response:": {
      "value": "Invalid health response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:132"
      ]
    },
    "Invalid latency_ms value": {
      "value": "Invalid latency_ms value",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:286"
      ]
    },
    "Invalid max-age value:": {
      "value": "Invalid max-age value:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:243"
      ]
    },
    "Invalid metrics: ['invalid_metric']": {
      "value": "Invalid metrics: ['invalid_metric']",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:142"
      ]
    },
    "Invalid permission format:": {
      "value": "Invalid permission format:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:217"
      ]
    },
    "Invalid rate limit remaining:": {
      "value": "Invalid rate limit remaining:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:244"
      ]
    },
    "Invalid refresh token": {
      "value": "Invalid refresh token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:307",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:129",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:143",
        "auth_service/tests/test_refresh_endpoint_simple.py:98",
        "auth_service/tests/unit/test_refresh_endpoint.py:130"
      ]
    },
    "Invalid session state": {
      "value": "Invalid session state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:178"
      ]
    },
    "Invalid state parameter": {
      "value": "Invalid state parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:162"
      ]
    },
    "Invalidation event not logged": {
      "value": "Invalidation event not logged",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:332"
      ]
    },
    "Invalidation reason not recorded": {
      "value": "Invalidation reason not recorded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:333"
      ]
    },
    "Is Cloud SQL:": {
      "value": "Is Cloud SQL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:41",
        "scripts/test_database_url_builder_comprehensive.py:97",
        "scripts/test_staging_migrations.py:190"
      ]
    },
    "Isolation and multi-tenancy tests": {
      "value": "Isolation and multi-tenancy tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:107"
      ]
    },
    "Issue Creation": {
      "value": "Issue Creation",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:396"
      ]
    },
    "Issues": {
      "value": "Issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:371"
      ]
    },
    "It is STRONGLY recommended to:": {
      "value": "It is STRONGLY recommended to:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:951"
      ]
    },
    "Iteration": {
      "value": "Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:104",
        "scripts/batch_fix_and_test.py:64"
      ]
    },
    "Iterations with all tests passing:": {
      "value": "Iterations with all tests passing:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:165"
      ]
    },
    "Iterations with failures:": {
      "value": "Iterations with failures:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:166"
      ]
    },
    "Iterations:": {
      "value": "Iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:133"
      ]
    },
    "Iterative test-fix loop script that runs tests and fixes failures in a loop.": {
      "value": "Iterative test-fix loop script that runs tests and fixes failures in a loop.",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:2"
      ]
    },
    "JSON report saved to": {
      "value": "JSON report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:503"
      ]
    },
    "JWT Payload:": {
      "value": "JWT Payload:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:34"
      ]
    },
    "JWT Secret:": {
      "value": "JWT Secret:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:95"
      ]
    },
    "JWT Secret: MISSING": {
      "value": "JWT Secret: MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:130"
      ]
    },
    "JWT Secret: OK - Configured (from": {
      "value": "JWT Secret: OK - Configured (from",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:128"
      ]
    },
    "JWT Token Decoding:": {
      "value": "JWT Token Decoding:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:146"
      ]
    },
    "JWT Token Generation:": {
      "value": "JWT Token Generation:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:142"
      ]
    },
    "JWT Token Testing: [ERROR] Failed -": {
      "value": "JWT Token Testing: [ERROR] Failed -",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:149"
      ]
    },
    "JWT VALIDATION TEST - STAGING": {
      "value": "JWT VALIDATION TEST - STAGING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:17"
      ]
    },
    "JWT secret for auth service": {
      "value": "JWT secret for auth service",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:92"
      ]
    },
    "JWT secret for authentication": {
      "value": "JWT secret for authentication",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:91"
      ]
    },
    "JWT secret loading failed:": {
      "value": "JWT secret loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:322"
      ]
    },
    "JWT signature tampering detection verified": {
      "value": "JWT signature tampering detection verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:101"
      ]
    },
    "JWT_": {
      "value": "JWT_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "JWT_SECRET": {
      "value": "JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:13",
        "auth_service/tests/conftest.py:35",
        "auth_service/tests/test_auth_comprehensive.py:58",
        "auth_service/tests/test_auth_comprehensive.py:59",
        "auth_service/tests/test_auth_comprehensive.py:124",
        "scripts/setup_test_environment.py:92",
        "scripts/setup_test_environment.py:108"
      ]
    },
    "JWT_SECRET_KEY": {
      "value": "JWT_SECRET_KEY",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:43",
        "auth_service/test_url_construction.py:44",
        "scripts/fix_authentication_test_tokens.py:129",
        "scripts/setup_test_environment.py:91",
        "scripts/setup_test_environment.py:108",
        "scripts/test_backend.py:82",
        "scripts/test_config_loading.py:34",
        "scripts/test_oauth_local.py:62",
        "scripts/test_oauth_local.py:62",
        "scripts/test_oauth_local.py:402"
      ]
    },
    "JWT_SECRET_KEY:": {
      "value": "JWT_SECRET_KEY:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:130"
      ]
    },
    "JWT_SECRET_KEY=jwt-secret-key-staging": {
      "value": "JWT_SECRET_KEY=jwt-secret-key-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:73"
      ]
    },
    "Job failed": {
      "value": "Job failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:170"
      ]
    },
    "KEY": {
      "value": "KEY",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:49",
        "scripts/test_oauth_local.py:77"
      ]
    },
    "KEY FINDING:": {
      "value": "KEY FINDING:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:174"
      ]
    },
    "K_REVISION": {
      "value": "K_REVISION",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_environment_detection.py:18"
      ]
    },
    "K_SERVICE": {
      "value": "K_SERVICE",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_environment_detection.py:17",
        "scripts/test_environment_detection.py:42",
        "scripts/test_environment_detection.py:49",
        "scripts/test_environment_detection.py:56",
        "scripts/test_redis_config_critical_failure.py:89",
        "scripts/test_secret_manager_builder_critical.py:142",
        "scripts/test_secret_manager_builder_critical.py:156",
        "scripts/test_staging_config.py:42",
        "scripts/test_staging_config.py:63"
      ]
    },
    "K_SERVICE=netra-backend:": {
      "value": "K_SERVICE=netra-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:51"
      ]
    },
    "K_SERVICE=netra-prod-backend:": {
      "value": "K_SERVICE=netra-prod-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:58"
      ]
    },
    "K_SERVICE=netra-staging-backend:": {
      "value": "K_SERVICE=netra-staging-backend:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:44"
      ]
    },
    "Key Achievements:": {
      "value": "Key Achievements:",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:513"
      ]
    },
    "Key findings: Your AI workloads show 30% optimization potential.\n        Main bottlenecks: Memory allocation and network I/O.\n        Quick wins: Enable caching, batch requests, optimize prompts.\n        Estimated savings: $2,400/month with recommended changes.": {
      "value": "Key findings: Your AI workloads show 30% optimization potential.\n        Main bottlenecks: Memory allocation and network I/O.\n        Quick wins: Enable caching, batch requests, optimize prompts.\n        Estimated savings: $2,400/month with recommended changes.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:205"
      ]
    },
    "Key principles:": {
      "value": "Key principles:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:264"
      ]
    },
    "Kill these processes? (y/n):": {
      "value": "Kill these processes? (y/n):",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:111"
      ]
    },
    "Killed": {
      "value": "Killed",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:126"
      ]
    },
    "Killed PID": {
      "value": "Killed PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:121"
      ]
    },
    "Killing processes...": {
      "value": "Killing processes...",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:116"
      ]
    },
    "L1": {
      "value": "L1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24"
      ]
    },
    "L2": {
      "value": "L2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:21"
      ]
    },
    "L3": {
      "value": "L3",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20"
      ]
    },
    "L3 pattern": {
      "value": "L3 pattern",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:99",
        "scripts/generate_test_audit.py:220",
        "scripts/generate_test_audit.py:221"
      ]
    },
    "L3 test files": {
      "value": "L3 test files",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:230"
      ]
    },
    "LARGEST FILES:": {
      "value": "LARGEST FILES:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:427"
      ]
    },
    "LARGEST FUNCTIONS:": {
      "value": "LARGEST FUNCTIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:431"
      ]
    },
    "LIKELY CAUSE OF AUTH FAILURES:": {
      "value": "LIKELY CAUSE OF AUTH FAILURES:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:108"
      ]
    },
    "LLM Configurations:": {
      "value": "LLM Configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:78",
        "scripts/test_staging_config.py:103"
      ]
    },
    "LLM Response Generator\n\nThis module generates realistic LLM responses with production-like characteristics.": {
      "value": "LLM Response Generator\n\nThis module generates realistic LLM responses with production-like characteristics.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:1"
      ]
    },
    "LLM Test Model Validation Script": {
      "value": "LLM Test Model Validation Script",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:128"
      ]
    },
    "LLM initialization failed": {
      "value": "LLM initialization failed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:62"
      ]
    },
    "LLMManager()": {
      "value": "LLMManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:320"
      ]
    },
    "LLMResponseGenerator": {
      "value": "LLMResponseGenerator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:84"
      ]
    },
    "LLM_MODE": {
      "value": "LLM_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:124"
      ]
    },
    "LOAD_SECRETS": {
      "value": "LOAD_SECRETS",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:41",
        "scripts/test_staging_config.py:63"
      ]
    },
    "LOGIN_FAILED": {
      "value": "LOGIN_FAILED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:20",
        "auth_service/tests/factories/audit_factory.py:89"
      ]
    },
    "LOGIN_SUCCESS": {
      "value": "LOGIN_SUCCESS",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:19",
        "auth_service/tests/factories/audit_factory.py:70"
      ]
    },
    "LOGOUT": {
      "value": "LOGOUT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:21",
        "auth_service/tests/factories/audit_factory.py:104"
      ]
    },
    "LOG_LEVEL": {
      "value": "LOG_LEVEL",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:92",
        "scripts/test_config_loading.py:142",
        "scripts/test_staging_config.py:45"
      ]
    },
    "LOW: Found": {
      "value": "LOW: Found",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:163"
      ]
    },
    "Large file (": {
      "value": "Large file (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:261"
      ]
    },
    "Large load time variance:": {
      "value": "Large load time variance:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:411"
      ]
    },
    "Large number of origins (": {
      "value": "Large number of origins (",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:336"
      ]
    },
    "Length:": {
      "value": "Length:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "Lib": {
      "value": "Lib",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:27",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Line": {
      "value": "Line",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:366",
        "scripts/fix_e2e_test_imports.py:152",
        "scripts/fix_e2e_test_imports.py:160",
        "scripts/fix_e2e_test_imports.py:169",
        "scripts/standardize_l3_test_names.py:86",
        "scripts/test_workflows_with_act.py:238",
        "scripts/validate_llm_test_models.py:171"
      ]
    },
    "Line:": {
      "value": "Line:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:329"
      ]
    },
    "Lint test files for real test requirements compliance": {
      "value": "Lint test files for real test requirements compliance",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:254"
      ]
    },
    "List available categories and their configuration": {
      "value": "List available categories and their configuration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1050"
      ]
    },
    "List processes only, don't kill": {
      "value": "List processes only, don't kill",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:156"
      ]
    },
    "List[": {
      "value": "List[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Load test reports from test_reports/.": {
      "value": "Load test reports from test_reports/.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:34"
      ]
    },
    "Loaded": {
      "value": "Loaded",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:44"
      ]
    },
    "Loaded test environment from": {
      "value": "Loaded test environment from",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:71"
      ]
    },
    "Loading configuration...": {
      "value": "Loading configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:56",
        "scripts/test_staging_config.py:70"
      ]
    },
    "Loading coverage data...": {
      "value": "Loading coverage data...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:790"
      ]
    },
    "Loading test results...": {
      "value": "Loading test results...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:793"
      ]
    },
    "Local Development": {
      "value": "Local Development",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:126"
      ]
    },
    "Local OAuth Testing Script with Enhanced Debugging\nTests the complete OAuth flow locally with detailed logging\n\nThis script:\n1. Tests OAuth configuration\n2. Simulates OAuth login flow\n3. Validates token generation\n4. Checks auth service communication": {
      "value": "Local OAuth Testing Script with Enhanced Debugging\nTests the complete OAuth flow locally with detailed logging\n\nThis script:\n1. Tests OAuth configuration\n2. Simulates OAuth login flow\n3. Validates token generation\n4. Checks auth service communication",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:2"
      ]
    },
    "Local address:": {
      "value": "Local address:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:139"
      ]
    },
    "Local services started successfully": {
      "value": "Local services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:129"
      ]
    },
    "Localhost in staging (should fail)": {
      "value": "Localhost in staging (should fail)",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:211"
      ]
    },
    "Localhost origins in production:": {
      "value": "Localhost origins in production:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:348"
      ]
    },
    "Localhost:3000 (Frontend)": {
      "value": "Localhost:3000 (Frontend)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:197"
      ]
    },
    "Localhost:3000 should be allowed in development": {
      "value": "Localhost:3000 should be allowed in development",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:152"
      ]
    },
    "Localhost:5173 (Vite)": {
      "value": "Localhost:5173 (Vite)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:253"
      ]
    },
    "Localhost:8000 (Backend)": {
      "value": "Localhost:8000 (Backend)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:203"
      ]
    },
    "Location": {
      "value": "Location",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:262"
      ]
    },
    "Log Data Generator\n\nThis module generates realistic log data with specific patterns and behaviors.": {
      "value": "Log Data Generator\n\nThis module generates realistic log data with specific patterns and behaviors.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:1"
      ]
    },
    "LogGenerator": {
      "value": "LogGenerator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:85"
      ]
    },
    "Login failed with status": {
      "value": "Login failed with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:254"
      ]
    },
    "Logout": {
      "value": "Logout",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:350"
      ]
    },
    "Long-duration soak testing": {
      "value": "Long-duration soak testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:101"
      ]
    },
    "Low - Utilities": {
      "value": "Low - Utilities",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:47"
      ]
    },
    "Low data point count": {
      "value": "Low data point count",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:218"
      ]
    },
    "MAJOR (should fix)": {
      "value": "MAJOR (should fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:121"
      ]
    },
    "MANUAL ACTION REQUIRED -": {
      "value": "MANUAL ACTION REQUIRED -",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:845"
      ]
    },
    "MAX_TEST_COLLECTION_SIZE": {
      "value": "MAX_TEST_COLLECTION_SIZE",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:99"
      ]
    },
    "MB": {
      "value": "MB",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:117"
      ]
    },
    "MEDIUM": {
      "value": "MEDIUM",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:66",
        "scripts/remove_test_stubs.py:175",
        "scripts/remove_test_stubs.py:231"
      ]
    },
    "MEDIUM: Found LLM calls in": {
      "value": "MEDIUM: Found LLM calls in",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:151"
      ]
    },
    "MEDIUM: Found network calls in": {
      "value": "MEDIUM: Found network calls in",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:143"
      ]
    },
    "MIGRATION TEST SUMMARY": {
      "value": "MIGRATION TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:307"
      ]
    },
    "MINOR (nice to fix)": {
      "value": "MINOR (nice to fix)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:123"
      ]
    },
    "MISSING": {
      "value": "MISSING",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:86",
        "scripts/test_config_loading.py:95",
        "scripts/test_config_loading.py:96",
        "scripts/test_config_loading.py:105",
        "scripts/test_config_loading.py:106"
      ]
    },
    "MagicMock()": {
      "value": "MagicMock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356"
      ]
    },
    "MagicMock, MagicMock": {
      "value": "MagicMock, MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:45"
      ]
    },
    "MagicMock\\(": {
      "value": "MagicMock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "MagicMock\\(\\)": {
      "value": "MagicMock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235"
      ]
    },
    "Main": {
      "value": "Main",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:163"
      ]
    },
    "Main CLI function.": {
      "value": "Main CLI function.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:416"
      ]
    },
    "Main Endpoint (/ws):": {
      "value": "Main Endpoint (/ws):",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:124"
      ]
    },
    "Main entry point": {
      "value": "Main entry point",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:384"
      ]
    },
    "Main entry point for optimized test execution": {
      "value": "Main entry point for optimized test execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:360"
      ]
    },
    "Main entry point.": {
      "value": "Main entry point.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:149",
        "scripts/test_cold_start_e2e.py:501",
        "scripts/test_coordination_fixes.py:404",
        "scripts/test_websocket_middleware.py:202"
      ]
    },
    "Main test execution.": {
      "value": "Main test execution.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:230",
        "scripts/test_docker_websocket_fix.py:307"
      ]
    },
    "Main test function.": {
      "value": "Main test function.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:278",
        "scripts/test_websocket_dev_mode.py:332"
      ]
    },
    "Main test runner": {
      "value": "Main test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:164"
      ]
    },
    "Main test runner.": {
      "value": "Main test runner.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:318",
        "scripts/test_websocket_simple.py:63"
      ]
    },
    "MainTestSettings": {
      "value": "MainTestSettings",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "Make sure your backend is running on port 8000": {
      "value": "Make sure your backend is running on port 8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:169"
      ]
    },
    "Malicious redirect URI should fail:": {
      "value": "Malicious redirect URI should fail:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:108"
      ]
    },
    "Malicious sites should be blocked": {
      "value": "Malicious sites should be blocked",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:158"
      ]
    },
    "Manage Docker Compose test services for Netra platform": {
      "value": "Manage Docker Compose test services for Netra platform",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:151"
      ]
    },
    "Manual WebSocket Test Script\n\nThis script tests WebSocket connections in development mode to verify the fixes.": {
      "value": "Manual WebSocket Test Script\n\nThis script tests WebSocket connections in development mode to verify the fixes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:2"
      ]
    },
    "Many test failures are due to:": {
      "value": "Many test failures are due to:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:75"
      ]
    },
    "Markdown report saved to": {
      "value": "Markdown report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:508"
      ]
    },
    "Markers added:": {
      "value": "Markers added:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:227"
      ]
    },
    "Max allowed load time:": {
      "value": "Max allowed load time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:177"
      ]
    },
    "Maximum concurrent sessions exceeded": {
      "value": "Maximum concurrent sessions exceeded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:144"
      ]
    },
    "Maximum number of files to analyze": {
      "value": "Maximum number of files to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:926"
      ]
    },
    "Maximum number of files to process": {
      "value": "Maximum number of files to process",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:721"
      ]
    },
    "Maximum number of worker processes for Jest (frontend tests)": {
      "value": "Maximum number of worker processes for Jest (frontend tests)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:963"
      ]
    },
    "Maximum token limit exceeded": {
      "value": "Maximum token limit exceeded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:121"
      ]
    },
    "Medium - Integration": {
      "value": "Medium - Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:45"
      ]
    },
    "Medium - Models": {
      "value": "Medium - Models",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:46"
      ]
    },
    "Memory Intensive:": {
      "value": "Memory Intensive:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1117"
      ]
    },
    "Memory allocation failed, retrying": {
      "value": "Memory allocation failed, retrying",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:120"
      ]
    },
    "Memory errors": {
      "value": "Memory errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:363"
      ]
    },
    "Memory/Resource: 1": {
      "value": "Memory/Resource: 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:363"
      ]
    },
    "Message flow test PASSED": {
      "value": "Message flow test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:206"
      ]
    },
    "Message type:": {
      "value": "Message type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:89"
      ]
    },
    "Message validation failed:": {
      "value": "Message validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:304"
      ]
    },
    "Message:": {
      "value": "Message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:111"
      ]
    },
    "Method '": {
      "value": "Method '",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:249"
      ]
    },
    "Metrics exported": {
      "value": "Metrics exported",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:131"
      ]
    },
    "Migration Safety Checks": {
      "value": "Migration Safety Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:282"
      ]
    },
    "Migration URL Generation": {
      "value": "Migration URL Generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:280"
      ]
    },
    "Migration URL valid:": {
      "value": "Migration URL valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:207"
      ]
    },
    "Migration URL:": {
      "value": "Migration URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:62",
        "scripts/test_staging_migrations.py:239"
      ]
    },
    "Minimal output": {
      "value": "Minimal output",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:502",
        "scripts/test_backend_optimized.py:391"
      ]
    },
    "Minimal output for CI logs": {
      "value": "Minimal output for CI logs",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:108"
      ]
    },
    "Minimum coverage percentage required (default: 70)": {
      "value": "Minimum coverage percentage required (default: 70)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:496"
      ]
    },
    "Minor warning after deployment": {
      "value": "Minor warning after deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:124"
      ]
    },
    "Missing": {
      "value": "Missing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:105"
      ]
    },
    "Missing Access-Control-Allow-Origin header": {
      "value": "Missing Access-Control-Allow-Origin header",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:220"
      ]
    },
    "Missing Access-Control-Allow-Origin header in actual response": {
      "value": "Missing Access-Control-Allow-Origin header in actual response",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:121"
      ]
    },
    "Missing CORS headers:": {
      "value": "Missing CORS headers:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:72"
      ]
    },
    "Missing config file:": {
      "value": "Missing config file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:402"
      ]
    },
    "Missing configs:": {
      "value": "Missing configs:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:130"
      ]
    },
    "Missing rate limit header": {
      "value": "Missing rate limit header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:239"
      ]
    },
    "Missing rate limit remaining header": {
      "value": "Missing rate limit remaining header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:240"
      ]
    },
    "Missing rate limit reset header": {
      "value": "Missing rate limit reset header",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:241"
      ]
    },
    "Missing required field in audit log:": {
      "value": "Missing required field in audit log:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:261"
      ]
    },
    "Missing required field in error response:": {
      "value": "Missing required field in error response:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:162"
      ]
    },
    "Missing required field in login response:": {
      "value": "Missing required field in login response:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:140"
      ]
    },
    "Missing required field:": {
      "value": "Missing required field:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:95",
        "auth_service/tests/utils/assertion_helpers.py:114"
      ]
    },
    "Missing required field: findings": {
      "value": "Missing required field: findings",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:351"
      ]
    },
    "Missing required field: recommendations": {
      "value": "Missing required field: recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:352"
      ]
    },
    "Missing required permission:": {
      "value": "Missing required permission:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:223"
      ]
    },
    "Missing required staging variables": {
      "value": "Missing required staging variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:184"
      ]
    },
    "Missing secret mappings:": {
      "value": "Missing secret mappings:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:164"
      ]
    },
    "Missing setup_test_path import or call": {
      "value": "Missing setup_test_path import or call",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:39"
      ]
    },
    "Missing test directory:": {
      "value": "Missing test directory:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:398"
      ]
    },
    "Missing test file:": {
      "value": "Missing test file:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:84"
      ]
    },
    "Mobile App/1.0.0 (iOS 15.0)": {
      "value": "Mobile App/1.0.0 (iOS 15.0)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:82"
      ]
    },
    "Mock component class '": {
      "value": "Mock component class '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:175",
        "scripts/compliance/real_test_requirements_enforcer.py:248",
        "scripts/compliance/real_test_validator.py:128"
      ]
    },
    "Mock component function '": {
      "value": "Mock component function '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:187",
        "scripts/compliance/real_test_requirements_enforcer.py:265",
        "scripts/compliance/real_test_validator.py:139"
      ]
    },
    "Mock component pattern found:": {
      "value": "Mock component pattern found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:383",
        "scripts/compliance/real_test_validator.py:159"
      ]
    },
    "Mock()": {
      "value": "Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:356",
        "scripts/compliance/test_fixer.py:44"
      ]
    },
    "Mock/test implementation comment found:": {
      "value": "Mock/test implementation comment found:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:152"
      ]
    },
    "MockAgent": {
      "value": "MockAgent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:41"
      ]
    },
    "MockComponent\\s*=": {
      "value": "MockComponent\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:72"
      ]
    },
    "Mock\\(": {
      "value": "Mock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:273"
      ]
    },
    "Mock\\(\\)": {
      "value": "Mock\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:235"
      ]
    },
    "Mock\\(spec=ToolDispatcher\\)": {
      "value": "Mock\\(spec=ToolDispatcher\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:321"
      ]
    },
    "Mode:": {
      "value": "Mode:",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:170",
        "scripts/manage_test_services.py:124"
      ]
    },
    "Model inference completed": {
      "value": "Model inference completed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:99"
      ]
    },
    "Model loaded successfully": {
      "value": "Model loaded successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:127"
      ]
    },
    "Model response test failed:": {
      "value": "Model response test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:430"
      ]
    },
    "Modernize legacy test patterns": {
      "value": "Modernize legacy test patterns",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:43"
      ]
    },
    "Modernizing": {
      "value": "Modernizing",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:287"
      ]
    },
    "Modular test file created to comply with 450-line limit requirement.\nContains": {
      "value": "Modular test file created to comply with 450-line limit requirement.\nContains",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:205"
      ]
    },
    "Module file not found:": {
      "value": "Module file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:107"
      ]
    },
    "ModuleNotFoundError": {
      "value": "ModuleNotFoundError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:34",
        "scripts/comprehensive_test_fixer.py:66",
        "scripts/fix_test_batch.py:72"
      ]
    },
    "ModuleNotFoundError: No module named '([\\w\\.]+)'": {
      "value": "ModuleNotFoundError: No module named '([\\w\\.]+)'",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:62",
        "scripts/fix_test_batch.py:70"
      ]
    },
    "Monitor WebSocket connection lifecycle in detail.": {
      "value": "Monitor WebSocket connection lifecycle in detail.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:121"
      ]
    },
    "Monthly overhead:": {
      "value": "Monthly overhead:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:651"
      ]
    },
    "Most likely issues in staging environment:": {
      "value": "Most likely issues in staging environment:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:207"
      ]
    },
    "Move '": {
      "value": "Move '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:250",
        "scripts/compliance/real_test_requirements_enforcer.py:267"
      ]
    },
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36": {
      "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:66"
      ]
    },
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124": {
      "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/91.0.4472.124",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:92"
      ]
    },
    "Multi-Service Coverage:": {
      "value": "Multi-Service Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:749"
      ]
    },
    "Multi-user productivity for": {
      "value": "Multi-user productivity for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:496"
      ]
    },
    "N/A": {
      "value": "N/A",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:38",
        "scripts/test_and_fix_cors.py:121",
        "scripts/test_and_fix_cors.py:140",
        "scripts/test_cors.py:377",
        "scripts/test_cors.py:382",
        "scripts/test_cors.py:383",
        "scripts/test_cors.py:390",
        "scripts/test_cors.py:391",
        "scripts/test_oauth_local.py:151",
        "scripts/test_oauth_local.py:152"
      ]
    },
    "NEED TO IMPLEMENT:": {
      "value": "NEED TO IMPLEMENT:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:204"
      ]
    },
    "NETRA AI PLATFORM - BACKEND TEST RUNNER": {
      "value": "NETRA AI PLATFORM - BACKEND TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:333"
      ]
    },
    "NETRA AI PLATFORM - COMPREHENSIVE TEST DISCOVERY REPORT": {
      "value": "NETRA AI PLATFORM - COMPREHENSIVE TEST DISCOVERY REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:65"
      ]
    },
    "NETRA AI PLATFORM - FRONTEND TEST RUNNER": {
      "value": "NETRA AI PLATFORM - FRONTEND TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:440"
      ]
    },
    "NETRA APEX UNIFIED TEST RUNNER\n==============================\nModern test runner with advanced categorization, progress tracking, and intelligent execution planning.\n\nUSAGE:\n    python unified_test_runner.py                       # Run default categories\n    python unified_test_runner.py --category unit       # Run specific category\n    python unified_test_runner.py --help                # Show all options\n\nCATEGORIES:\n    CRITICAL: smoke, startup\n    HIGH:     unit, security, database\n    MEDIUM:   integration, api, websocket, agent\n    LOW:      frontend, performance, e2e\n\nEXAMPLES:\n    python unified_test_runner.py --category unit\n    python unified_test_runner.py --categories unit api\n    python unified_test_runner.py --category performance --window-size 30\n    python unified_test_runner.py --list-categories": {
      "value": "NETRA APEX UNIFIED TEST RUNNER\n==============================\nModern test runner with advanced categorization, progress tracking, and intelligent execution planning.\n\nUSAGE:\n    python unified_test_runner.py                       # Run default categories\n    python unified_test_runner.py --category unit       # Run specific category\n    python unified_test_runner.py --help                # Show all options\n\nCATEGORIES:\n    CRITICAL: smoke, startup\n    HIGH:     unit, security, database\n    MEDIUM:   integration, api, websocket, agent\n    LOW:      frontend, performance, e2e\n\nEXAMPLES:\n    python unified_test_runner.py --category unit\n    python unified_test_runner.py --categories unit api\n    python unified_test_runner.py --category performance --window-size 30\n    python unified_test_runner.py --list-categories",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:2"
      ]
    },
    "NETRA_ENVIRONMENT": {
      "value": "NETRA_ENVIRONMENT",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:90"
      ]
    },
    "NEXT STEPS": {
      "value": "NEXT STEPS",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:209"
      ]
    },
    "NEXT_PUBLIC_API_URL": {
      "value": "NEXT_PUBLIC_API_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:44"
      ]
    },
    "NEXT_PUBLIC_GTM_CONTAINER_ID|NEXT_PUBLIC_GTM_ENABLED": {
      "value": "NEXT_PUBLIC_GTM_CONTAINER_ID|NEXT_PUBLIC_GTM_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:54"
      ]
    },
    "NEXT_PUBLIC_WEBSOCKET_URL": {
      "value": "NEXT_PUBLIC_WEBSOCKET_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:46"
      ]
    },
    "NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:8000/ws": {
      "value": "NEXT_PUBLIC_WEBSOCKET_URL: ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:159"
      ]
    },
    "NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:8000/ws": {
      "value": "NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:165"
      ]
    },
    "NEXT_PUBLIC_WS_URL": {
      "value": "NEXT_PUBLIC_WS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:45"
      ]
    },
    "NEXT_PUBLIC_WS_URL=ws://localhost:8000": {
      "value": "NEXT_PUBLIC_WS_URL=ws://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:166"
      ]
    },
    "NO": {
      "value": "NO",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "NOT SET": {
      "value": "NOT SET",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:33",
        "scripts/test_and_fix_cors.py:34",
        "scripts/test_and_fix_cors.py:35",
        "scripts/test_and_fix_cors.py:36",
        "scripts/test_and_fix_cors.py:75",
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141"
      ]
    },
    "NOTE: Actual migration execution skipped for safety": {
      "value": "NOTE: Actual migration execution skipped for safety",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:263"
      ]
    },
    "Need to increase coverage by": {
      "value": "Need to increase coverage by",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:134"
      ]
    },
    "Netra Test Agent": {
      "value": "Netra Test Agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:46",
        "scripts/setup_staging_test_account.py:60"
      ]
    },
    "Network configuration issue in Cloud Run": {
      "value": "Network configuration issue in Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:203"
      ]
    },
    "Network connection FAILED:": {
      "value": "Network connection FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:91"
      ]
    },
    "Network partition detection took": {
      "value": "Network partition detection took",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:346"
      ]
    },
    "Network unreachable - simulated partition": {
      "value": "Network unreachable - simulated partition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:320"
      ]
    },
    "New access token: ...": {
      "value": "New access token: ...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:144",
        "scripts/test_staging_auth_e2e.py:179"
      ]
    },
    "New files created:": {
      "value": "New files created:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:751"
      ]
    },
    "New files:": {
      "value": "New files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:723"
      ]
    },
    "New session ID should be cryptographically secure": {
      "value": "New session ID should be cryptographically secure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:157"
      ]
    },
    "New session after invalidation failed": {
      "value": "New session after invalidation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:328"
      ]
    },
    "New session validation failed": {
      "value": "New session validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:168"
      ]
    },
    "NewClient/1.0": {
      "value": "NewClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:157",
        "auth_service/tests/test_session_security_cycles_36_40.py:323"
      ]
    },
    "Next Steps Guidance": {
      "value": "Next Steps Guidance",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:156"
      ]
    },
    "Next steps:": {
      "value": "Next steps:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:241",
        "scripts/fix_authentication_test_tokens.py:171",
        "scripts/standardize_l3_test_names.py:292"
      ]
    },
    "No .env.staging file": {
      "value": "No .env.staging file",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:98"
      ]
    },
    "No ACT compatibility checks found": {
      "value": "No ACT compatibility checks found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:242"
      ]
    },
    "No API key": {
      "value": "No API key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:87"
      ]
    },
    "No Alembic configuration found": {
      "value": "No Alembic configuration found",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:119"
      ]
    },
    "No CORS headers found": {
      "value": "No CORS headers found",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:85",
        "scripts/debug_cors_test.py:103"
      ]
    },
    "No L3 files found!": {
      "value": "No L3 files found!",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:233"
      ]
    },
    "No Origin Header (Desktop/Mobile)": {
      "value": "No Origin Header (Desktop/Mobile)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:245"
      ]
    },
    "No SSL parameters as expected": {
      "value": "No SSL parameters as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:159"
      ]
    },
    "No access token received": {
      "value": "No access token received",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:250"
      ]
    },
    "No async URL generated": {
      "value": "No async URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:93"
      ]
    },
    "No authentication (dev mode)": {
      "value": "No authentication (dev mode)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:25"
      ]
    },
    "No categories to run based on selection criteria": {
      "value": "No categories to run based on selection criteria",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:154"
      ]
    },
    "No changes needed": {
      "value": "No changes needed",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:128"
      ]
    },
    "No circuit breaker or rate limiting - requests timeout instead of proper 503 responses": {
      "value": "No circuit breaker or rate limiting - requests timeout instead of proper 503 responses",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:308"
      ]
    },
    "No critical errors found!": {
      "value": "No critical errors found!",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:125"
      ]
    },
    "No critical issues found. Test suite appears well-organized.": {
      "value": "No critical issues found. Test suite appears well-organized.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:542"
      ]
    },
    "No data provided for validation": {
      "value": "No data provided for validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:200"
      ]
    },
    "No env vars set:": {
      "value": "No env vars set:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:29"
      ]
    },
    "No error details": {
      "value": "No error details",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:388"
      ]
    },
    "No failing tests found!": {
      "value": "No failing tests found!",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:296"
      ]
    },
    "No failure scan found. Run test_failure_scanner.py first.": {
      "value": "No failure scan found. Run test_failure_scanner.py first.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:352"
      ]
    },
    "No fake tests found": {
      "value": "No fake tests found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:250"
      ]
    },
    "No fallback mechanism for Auth Service 500 errors": {
      "value": "No fallback mechanism for Auth Service 500 errors",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:151"
      ]
    },
    "No fallback mechanism when Auth Service completely unresponsive": {
      "value": "No fallback mechanism when Auth Service completely unresponsive",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:114"
      ]
    },
    "No functions with sleep calls found": {
      "value": "No functions with sleep calls found",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:111"
      ]
    },
    "No import changes were needed.": {
      "value": "No import changes were needed.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:215"
      ]
    },
    "No large test files found for demonstration": {
      "value": "No large test files found for demonstration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:104"
      ]
    },
    "No migrations": {
      "value": "No migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:155"
      ]
    },
    "No module named 'test_module'": {
      "value": "No module named 'test_module'",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:24"
      ]
    },
    "No netra_backend imports found": {
      "value": "No netra_backend imports found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:55",
        "scripts/fix_test_import_order.py:43"
      ]
    },
    "No network partition handling - connection failed after": {
      "value": "No network partition handling - connection failed after",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:353"
      ]
    },
    "No origins specified for testing": {
      "value": "No origins specified for testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:498"
      ]
    },
    "No priority failures found.": {
      "value": "No priority failures found.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:362"
      ]
    },
    "No real e2e tests found": {
      "value": "No real e2e tests found",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:81"
      ]
    },
    "No real e2e tests found.": {
      "value": "No real e2e tests found.",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:132"
      ]
    },
    "No refresh token available": {
      "value": "No refresh token available",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:251",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:269"
      ]
    },
    "No response from WebSocket": {
      "value": "No response from WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:97"
      ]
    },
    "No response received (expected due to auth)": {
      "value": "No response received (expected due to auth)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:211"
      ]
    },
    "No results to display": {
      "value": "No results to display",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:365"
      ]
    },
    "No scan performed - report only mode": {
      "value": "No scan performed - report only mode",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:420"
      ]
    },
    "No setup_test_path import found": {
      "value": "No setup_test_path import found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:49"
      ]
    },
    "No specific files identified for fixing": {
      "value": "No specific files identified for fixing",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:125"
      ]
    },
    "No splitting suggestions needed!": {
      "value": "No splitting suggestions needed!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:139"
      ]
    },
    "No sync URL generated": {
      "value": "No sync URL generated",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:100"
      ]
    },
    "No test file size violations found!": {
      "value": "No test file size violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:72"
      ]
    },
    "No test files changed": {
      "value": "No test files changed",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:240"
      ]
    },
    "No test files found for category '": {
      "value": "No test files found for category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:413"
      ]
    },
    "No test function violations found!": {
      "value": "No test function violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:91"
      ]
    },
    "No test processes found running.": {
      "value": "No test processes found running.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:103"
      ]
    },
    "No test processes found.": {
      "value": "No test processes found.",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:168"
      ]
    },
    "No test violations found!": {
      "value": "No test violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:975"
      ]
    },
    "No tests found": {
      "value": "No tests found",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:30"
      ]
    },
    "Non-standard": {
      "value": "Non-standard",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:107",
        "scripts/generate_test_audit.py:223",
        "scripts/generate_test_audit.py:224"
      ]
    },
    "Nonce replay attack should be blocked": {
      "value": "Nonce replay attack should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:82"
      ]
    },
    "None": {
      "value": "None",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:386",
        "scripts/test_secret_manager_builder_critical.py:543",
        "scripts/test_staging_auth_e2e.py:79",
        "scripts/test_staging_auth_e2e.py:80",
        "scripts/test_staging_auth_e2e.py:144",
        "scripts/test_staging_auth_e2e.py:179",
        "scripts/test_websocket_cors_comprehensive.py:57",
        "scripts/test_websocket_simple.py:24"
      ]
    },
    "None  # Use real component": {
      "value": "None  # Use real component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:322"
      ]
    },
    "Normal activity flagged as anomalous": {
      "value": "Normal activity flagged as anomalous",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:246"
      ]
    },
    "Normal deployment should not fail": {
      "value": "Normal deployment should not fail",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:181"
      ]
    },
    "Normalized async:": {
      "value": "Normalized async:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:242"
      ]
    },
    "Normalized:": {
      "value": "Normalized:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:166",
        "scripts/test_database_url_builder_comprehensive.py:293",
        "scripts/test_staging_migrations.py:67"
      ]
    },
    "Not Set": {
      "value": "Not Set",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:83"
      ]
    },
    "Not a list": {
      "value": "Not a list",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:358",
        "scripts/test_data_validator_backup.py:385"
      ]
    },
    "Not in a git repository or git not available": {
      "value": "Not in a git repository or git not available",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:232"
      ]
    },
    "Not tested": {
      "value": "Not tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:357"
      ]
    },
    "Note:": {
      "value": "Note:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:108"
      ]
    },
    "Note: Make sure your Next.js development server is running on the target URL": {
      "value": "Note: Make sure your Next.js development server is running on the target URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:261"
      ]
    },
    "Note: Replace with actual staging URL from GCP deployment": {
      "value": "Note: Replace with actual staging URL from GCP deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:112"
      ]
    },
    "Note: WebSocket connections require authentication and cannot be fully tested without credentials": {
      "value": "Note: WebSocket connections require authentication and cannot be fully tested without credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:126"
      ]
    },
    "Number of database users:": {
      "value": "Number of database users:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:74"
      ]
    },
    "Number of iterations": {
      "value": "Number of iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:171"
      ]
    },
    "Number of parallel workers (0=sequential, auto=auto, or number)": {
      "value": "Number of parallel workers (0=sequential, auto=auto, or number)",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:488"
      ]
    },
    "Number of parallel workers (default: 4)": {
      "value": "Number of parallel workers (default: 4)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:984"
      ]
    },
    "OAUTH_CALLBACK": {
      "value": "OAUTH_CALLBACK",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:33",
        "auth_service/tests/factories/audit_factory.py:171"
      ]
    },
    "OAUTH_ERROR": {
      "value": "OAUTH_ERROR",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:34"
      ]
    },
    "OAUTH_GOOGLE_CLIENT_ID_ENV": {
      "value": "OAUTH_GOOGLE_CLIENT_ID_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:60",
        "scripts/test_oauth_local.py:60"
      ]
    },
    "OAUTH_GOOGLE_CLIENT_SECRET_ENV": {
      "value": "OAUTH_GOOGLE_CLIENT_SECRET_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:61",
        "scripts/test_oauth_local.py:61"
      ]
    },
    "OAuth Callback": {
      "value": "OAuth Callback",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:128"
      ]
    },
    "OAuth Configuration": {
      "value": "OAuth Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:155"
      ]
    },
    "OAuth Configuration Missing Staging Regression Tests\n\nTests to replicate OAuth configuration issues found in GCP staging audit:\n- Missing GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET\n- OAuth authentication functionality broken in staging\n- Service initialization failing due to missing OAuth credentials\n\nBusiness Value: Prevents user authentication failures costing $75K+ MRR\nCritical for user login and Google OAuth integration.\n\nRoot Cause from Staging Audit:\n- GOOGLE_OAUTH_CLIENT_ID_STAGING and GOOGLE_OAUTH_CLIENT_SECRET_STAGING not configured\n- Auth service fails to initialize OAuth providers without proper credentials\n- Users cannot login via Google OAuth in staging environment\n\nThese tests will FAIL initially to confirm the issues exist, then PASS after fixes.": {
      "value": "OAuth Configuration Missing Staging Regression Tests\n\nTests to replicate OAuth configuration issues found in GCP staging audit:\n- Missing GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET\n- OAuth authentication functionality broken in staging\n- Service initialization failing due to missing OAuth credentials\n\nBusiness Value: Prevents user authentication failures costing $75K+ MRR\nCritical for user login and Google OAuth integration.\n\nRoot Cause from Staging Audit:\n- GOOGLE_OAUTH_CLIENT_ID_STAGING and GOOGLE_OAUTH_CLIENT_SECRET_STAGING not configured\n- Auth service fails to initialize OAuth providers without proper credentials\n- Users cannot login via Google OAuth in staging environment\n\nThese tests will FAIL initially to confirm the issues exist, then PASS after fixes.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:2"
      ]
    },
    "OAuth Configuration:": {
      "value": "OAuth Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:104"
      ]
    },
    "OAuth Login Endpoint": {
      "value": "OAuth Login Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:127"
      ]
    },
    "OAuth callback handling broken without full configuration:": {
      "value": "OAuth callback handling broken without full configuration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:507"
      ]
    },
    "OAuth callback processing fails (confirms the bug)": {
      "value": "OAuth callback processing fails (confirms the bug)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:500"
      ]
    },
    "OAuth client ID configuration missing in staging:": {
      "value": "OAuth client ID configuration missing in staging:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:80"
      ]
    },
    "OAuth client ID missing in staging as expected (this confirms the bug)": {
      "value": "OAuth client ID missing in staging as expected (this confirms the bug)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:72"
      ]
    },
    "OAuth client ID should be valid length": {
      "value": "OAuth client ID should be valid length",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:75"
      ]
    },
    "OAuth client secret configuration missing in staging:": {
      "value": "OAuth client secret configuration missing in staging:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:135"
      ]
    },
    "OAuth client secret missing in staging as expected (this confirms the bug)": {
      "value": "OAuth client secret missing in staging as expected (this confirms the bug)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:128"
      ]
    },
    "OAuth client secret should be valid length": {
      "value": "OAuth client secret should be valid length",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:131"
      ]
    },
    "OAuth config for": {
      "value": "OAuth config for",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:142"
      ]
    },
    "OAuth configuration not environment-specific:": {
      "value": "OAuth configuration not environment-specific:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:329"
      ]
    },
    "OAuth flow tests": {
      "value": "OAuth flow tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:106"
      ]
    },
    "OAuth is configured but requires real Google/GitHub account for testing": {
      "value": "OAuth is configured but requires real Google/GitHub account for testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:371"
      ]
    },
    "OAuth is not properly configured - use mock or API key authentication": {
      "value": "OAuth is not properly configured - use mock or API key authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:369"
      ]
    },
    "OAuth login URL generation fails (confirms the bug)": {
      "value": "OAuth login URL generation fails (confirms the bug)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:442"
      ]
    },
    "OAuth login URL missing client_id": {
      "value": "OAuth login URL missing client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:446"
      ]
    },
    "OAuth login flow broken without configuration:": {
      "value": "OAuth login flow broken without configuration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:450"
      ]
    },
    "OAuth provider connectivity loss causing Auth Service to hang": {
      "value": "OAuth provider connectivity loss causing Auth Service to hang",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:420"
      ]
    },
    "OAuth provider connectivity loss not handled, got": {
      "value": "OAuth provider connectivity loss not handled, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:417"
      ]
    },
    "OAuth provider initialization fails without credentials:": {
      "value": "OAuth provider initialization fails without credentials:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:188"
      ]
    },
    "OAuth provider missing redirect URI configuration method": {
      "value": "OAuth provider missing redirect URI configuration method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:242"
      ]
    },
    "OAuth provider should not initialize without client ID": {
      "value": "OAuth provider should not initialize without client ID",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:183"
      ]
    },
    "OAuth provider should not initialize without client secret": {
      "value": "OAuth provider should not initialize without client secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:184"
      ]
    },
    "OAuth providers empty in staging (confirms the bug exists)": {
      "value": "OAuth providers empty in staging (confirms the bug exists)",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:384"
      ]
    },
    "OAuth redirect URI incorrect for staging:": {
      "value": "OAuth redirect URI incorrect for staging:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:235"
      ]
    },
    "OAuth redirect URI missing for staging": {
      "value": "OAuth redirect URI missing for staging",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:230"
      ]
    },
    "OAuth redirect URI should use HTTPS in staging:": {
      "value": "OAuth redirect URI should use HTTPS in staging:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:238"
      ]
    },
    "OAuth service integration broken:": {
      "value": "OAuth service integration broken:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:391"
      ]
    },
    "OAuth user info should contain email": {
      "value": "OAuth user info should contain email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:503"
      ]
    },
    "OAuth...": {
      "value": "OAuth...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:254"
      ]
    },
    "OAuthTokenFactory": {
      "value": "OAuthTokenFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:18"
      ]
    },
    "OK": {
      "value": "OK",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:86",
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "OK - Configured": {
      "value": "OK - Configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:95",
        "scripts/test_config_loading.py:96",
        "scripts/test_config_loading.py:105",
        "scripts/test_config_loading.py:106"
      ]
    },
    "OK: setup_test_path() at line": {
      "value": "OK: setup_test_path() at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:58"
      ]
    },
    "OOM": {
      "value": "OOM",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:311"
      ]
    },
    "OPEN": {
      "value": "OPEN",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:14",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:18"
      ]
    },
    "OPENAI_API_KEY": {
      "value": "OPENAI_API_KEY",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:121",
        "scripts/setup_test_environment.py:246",
        "scripts/test_backend.py:90",
        "scripts/test_backend.py:90",
        "scripts/validate_llm_test_models.py:37"
      ]
    },
    "OPTIMIZED TEST EXECUTION RESULTS": {
      "value": "OPTIMIZED TEST EXECUTION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:325"
      ]
    },
    "OPTIONS": {
      "value": "OPTIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:71",
        "scripts/test_cors_implementation.py:82",
        "scripts/test_cors_implementation.py:89",
        "scripts/test_cors_implementation.py:95",
        "scripts/test_cors_implementation.py:101",
        "scripts/test_cors_implementation.py:103"
      ]
    },
    "OVERRIDE_TEST_ENV": {
      "value": "OVERRIDE_TEST_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:106"
      ]
    },
    "Only check files changed in git diff": {
      "value": "Only check files changed in git diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:261"
      ]
    },
    "Only generate configuration report": {
      "value": "Only generate configuration report",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:437"
      ]
    },
    "Only generate report, no fixes (SAFE, default)": {
      "value": "Only generate report, no fixes (SAFE, default)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:930"
      ]
    },
    "Only one refresh should succeed": {
      "value": "Only one refresh should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:194"
      ]
    },
    "Only process files with critical performance issues": {
      "value": "Only process files with critical performance issues",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:138"
      ]
    },
    "Only run tests matching given mark expression": {
      "value": "Only run tests matching given mark expression",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:483"
      ]
    },
    "Only run tests matching the given keyword expression": {
      "value": "Only run tests matching the given keyword expression",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:482"
      ]
    },
    "Only run tests matching the given pattern": {
      "value": "Only run tests matching the given pattern",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:389"
      ]
    },
    "Only test preflight requests": {
      "value": "Only test preflight requests",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:441"
      ]
    },
    "Open Cypress interactive runner": {
      "value": "Open Cypress interactive runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:395"
      ]
    },
    "OpenAI API key": {
      "value": "OpenAI API key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:121"
      ]
    },
    "Operation cancelled. Good choice!": {
      "value": "Operation cancelled. Good choice!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:958"
      ]
    },
    "Optimization level": {
      "value": "Optimization level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:375"
      ]
    },
    "Optimization suggestions:": {
      "value": "Optimization suggestions:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:403"
      ]
    },
    "Optimization:": {
      "value": "Optimization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:425"
      ]
    },
    "Optimize": {
      "value": "Optimize",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:269"
      ]
    },
    "Optimize CPU-intensive operations": {
      "value": "Optimize CPU-intensive operations",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:388"
      ]
    },
    "Optimize database queries": {
      "value": "Optimize database queries",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:407"
      ]
    },
    "Optimize test suite performance": {
      "value": "Optimize test suite performance",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:342"
      ]
    },
    "Optimized Backend Test Runner - 100x Productivity Gains": {
      "value": "Optimized Backend Test Runner - 100x Productivity Gains",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:362"
      ]
    },
    "Optimized Backend Test Runner - 100x Productivity Gains\n\nUltra-high performance test execution with intelligent parallelization,\nresource monitoring, caching, and fail-fast mechanisms for maximum efficiency.\n\nBusiness Value Justification (BVJ):\n- Segment: All customer segments (development infrastructure)\n- Business Goal: Achieve 100x faster test cycles for rapid deployment\n- Value Impact: Enables continuous deployment with sub-minute test execution\n- Revenue Impact: Accelerates time-to-market by 90%, reduces CI/CD costs by 80%\n\nUsage:\n    python scripts/test_backend_optimized.py --category unit\n    python scripts/test_backend_optimized.py --optimize-aggressive\n    python scripts/test_backend_optimized.py --benchmark": {
      "value": "Optimized Backend Test Runner - 100x Productivity Gains\n\nUltra-high performance test execution with intelligent parallelization,\nresource monitoring, caching, and fail-fast mechanisms for maximum efficiency.\n\nBusiness Value Justification (BVJ):\n- Segment: All customer segments (development infrastructure)\n- Business Goal: Achieve 100x faster test cycles for rapid deployment\n- Value Impact: Enables continuous deployment with sub-minute test execution\n- Revenue Impact: Accelerates time-to-market by 90%, reduces CI/CD costs by 80%\n\nUsage:\n    python scripts/test_backend_optimized.py --category unit\n    python scripts/test_backend_optimized.py --optimize-aggressive\n    python scripts/test_backend_optimized.py --benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:2"
      ]
    },
    "Optimized execution failed:": {
      "value": "Optimized execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:156"
      ]
    },
    "Optimizing function": {
      "value": "Optimizing function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:445"
      ]
    },
    "Optional service failed": {
      "value": "Optional service failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:248"
      ]
    },
    "Options:": {
      "value": "Options:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:300"
      ]
    },
    "Origin": {
      "value": "Origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:319",
        "scripts/debug_cors_test.py:15",
        "scripts/debug_cors_test.py:32",
        "scripts/test_and_fix_cors.py:22",
        "scripts/test_and_fix_cors.py:65",
        "scripts/test_auth_integration.py:108",
        "scripts/test_chat_errors.py:83",
        "scripts/test_cors.py:73",
        "scripts/test_cors.py:102",
        "scripts/test_cors.py:140"
      ]
    },
    "Origin Count:": {
      "value": "Origin Count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:461"
      ]
    },
    "Origin mismatch: expected": {
      "value": "Origin mismatch: expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:218"
      ]
    },
    "Origin to test (can be specified multiple times)": {
      "value": "Origin to test (can be specified multiple times)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:427"
      ]
    },
    "Origin:": {
      "value": "Origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:57"
      ]
    },
    "Original:": {
      "value": "Original:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:162",
        "scripts/test_staging_migrations.py:202"
      ]
    },
    "Origins by Type:": {
      "value": "Origins by Type:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:465"
      ]
    },
    "Origins:": {
      "value": "Origins:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:503"
      ]
    },
    "Orphaned sessions found:": {
      "value": "Orphaned sessions found:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:317"
      ]
    },
    "Other refreshes should fail": {
      "value": "Other refreshes should fail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:195"
      ]
    },
    "Out of memory error": {
      "value": "Out of memory error",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:312"
      ]
    },
    "Output GitHub Actions annotations": {
      "value": "Output GitHub Actions annotations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:110"
      ]
    },
    "Output configuration as JSON": {
      "value": "Output configuration as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:54"
      ]
    },
    "Output file for report": {
      "value": "Output file for report",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:345",
        "scripts/remove_test_stubs.py:360"
      ]
    },
    "Output file for test report (JSON)": {
      "value": "Output file for test report (JSON)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:401"
      ]
    },
    "Output file path": {
      "value": "Output file path",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:521"
      ]
    },
    "Output file path (default: print to console)": {
      "value": "Output file path (default: print to console)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:385"
      ]
    },
    "Output file path for the report": {
      "value": "Output file path for the report",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:776"
      ]
    },
    "Output format": {
      "value": "Output format",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:778",
        "scripts/compliance/fake_test_scanner.py:387",
        "scripts/compliance/test_size_validator.py:520"
      ]
    },
    "Output format (default: table)": {
      "value": "Output format (default: table)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:435"
      ]
    },
    "Output results as JSON": {
      "value": "Output results as JSON",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:210",
        "scripts/test_staging_startup.py:290"
      ]
    },
    "Output:": {
      "value": "Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:116"
      ]
    },
    "Overall Result:": {
      "value": "Overall Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:401",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:329"
      ]
    },
    "Overall compliance rate:": {
      "value": "Overall compliance rate:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:161"
      ]
    },
    "Overall:": {
      "value": "Overall:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:209",
        "scripts/unified_test_runner.py:904"
      ]
    },
    "PASS": {
      "value": "PASS",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:203",
        "scripts/test_cors_ssot_compliance.py:42",
        "scripts/test_cors_ssot_compliance.py:78",
        "scripts/test_cors_ssot_compliance.py:86",
        "scripts/test_cors_ssot_compliance.py:124",
        "scripts/test_cors_ssot_compliance.py:132",
        "scripts/test_gtm_loading.py:144",
        "scripts/test_verify_workflow.py:36",
        "scripts/test_verify_workflow.py:48",
        "scripts/test_verify_workflow.py:71"
      ]
    },
    "PASS: .env.staging correctly removed": {
      "value": "PASS: .env.staging correctly removed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:23"
      ]
    },
    "PASS: Auth service correctly configured to skip .env loading in staging": {
      "value": "PASS: Auth service correctly configured to skip .env loading in staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:53"
      ]
    },
    "PASS: Backend app correctly configured to skip .env loading in staging": {
      "value": "PASS: Backend app correctly configured to skip .env loading in staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:37"
      ]
    },
    "PASS: Deployment script has all necessary configurations": {
      "value": "PASS: Deployment script has all necessary configurations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:86"
      ]
    },
    "PASSED": {
      "value": "PASSED",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:230",
        "scripts/comprehensive_test_fixer.py:309",
        "scripts/comprehensive_test_fixer.py:327",
        "scripts/test_auth_database_sessions.py:368",
        "scripts/test_auth_database_sessions.py:386",
        "scripts/test_database_url_builder_comprehensive.py:320",
        "scripts/test_database_url_builder_comprehensive.py:337",
        "scripts/test_example_message_flow.py:157",
        "scripts/test_ssl_certificates_staging.py:276",
        "scripts/test_ssl_certificates_staging.py:294"
      ]
    },
    "PASSED (": {
      "value": "PASSED (",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:63"
      ]
    },
    "PASSED - All services use shared config": {
      "value": "PASSED - All services use shared config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:190"
      ]
    },
    "PASSED - Explicit origins set correctly": {
      "value": "PASSED - Explicit origins set correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:91"
      ]
    },
    "PASSED - Permissive as expected": {
      "value": "PASSED - Permissive as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:47"
      ]
    },
    "PASSED - Strict origins enforced": {
      "value": "PASSED - Strict origins enforced",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:137"
      ]
    },
    "PASSWORD": {
      "value": "PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:49"
      ]
    },
    "PASSWORD_CHANGE": {
      "value": "PASSWORD_CHANGE",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:22",
        "auth_service/tests/factories/audit_factory.py:119"
      ]
    },
    "PASSWORD_RESET": {
      "value": "PASSWORD_RESET",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:23"
      ]
    },
    "PATCH": {
      "value": "PATCH",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:108"
      ]
    },
    "PERFORMANCE BENCHMARK: Current vs Target": {
      "value": "PERFORMANCE BENCHMARK: Current vs Target",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:557"
      ]
    },
    "PERFORMANCE RESULTS (Target: <": {
      "value": "PERFORMANCE RESULTS (Target: <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:619"
      ]
    },
    "PERFORMANCE SUMMARY": {
      "value": "PERFORMANCE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:328"
      ]
    },
    "PERMISSION_GRANTED": {
      "value": "PERMISSION_GRANTED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:31",
        "auth_service/tests/factories/audit_factory.py:208"
      ]
    },
    "PERMISSION_REVOKED": {
      "value": "PERMISSION_REVOKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:32"
      ]
    },
    "PHASE": {
      "value": "PHASE",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:324"
      ]
    },
    "PHASE 1: Fixing syntax errors...": {
      "value": "PHASE 1: Fixing syntax errors...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:220"
      ]
    },
    "PHASE 2: Fixing size violations...": {
      "value": "PHASE 2: Fixing size violations...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:248"
      ]
    },
    "PHASE 3: Final validation...": {
      "value": "PHASE 3: Final validation...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:271"
      ]
    },
    "PORT": {
      "value": "PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:42",
        "auth_service/tests/test_auth_port_configuration.py:83",
        "auth_service/tests/test_auth_port_configuration.py:101",
        "auth_service/tests/test_auth_port_configuration.py:124",
        "auth_service/tests/test_auth_port_configuration.py:131",
        "auth_service/tests/test_auth_port_configuration.py:153",
        "auth_service/tests/test_auth_port_configuration.py:166",
        "auth_service/tests/test_auth_port_configuration.py:189",
        "auth_service/tests/test_auth_port_configuration.py:221",
        "auth_service/tests/test_auth_port_configuration.py:271"
      ]
    },
    "PORT (": {
      "value": "PORT (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:65"
      ]
    },
    "POST": {
      "value": "POST",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:109",
        "scripts/test_cors.py:69",
        "scripts/test_cors.py:108",
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "POSTGRES_": {
      "value": "POSTGRES_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "POSTGRES_DB": {
      "value": "POSTGRES_DB",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:36",
        "auth_service/test_staging_db_connection.py:41",
        "auth_service/test_staging_db_connection.py:126",
        "auth_service/test_staging_db_connection.py:126",
        "auth_service/test_url_construction.py:37",
        "auth_service/test_url_construction.py:66",
        "auth_service/test_url_construction.py:66",
        "scripts/setup_test_environment.py:217",
        "scripts/test_auth_database_sessions.py:227",
        "scripts/test_auth_database_sessions.py:234"
      ]
    },
    "POSTGRES_HOST": {
      "value": "POSTGRES_HOST",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:34",
        "auth_service/test_staging_db_connection.py:39",
        "auth_service/test_staging_db_connection.py:124",
        "auth_service/test_staging_db_connection.py:124",
        "auth_service/test_staging_db_connection.py:232",
        "auth_service/test_staging_db_connection.py:241",
        "auth_service/test_url_construction.py:35",
        "auth_service/test_url_construction.py:64",
        "auth_service/test_url_construction.py:64",
        "scripts/setup_test_environment.py:207"
      ]
    },
    "POSTGRES_PASSWORD": {
      "value": "POSTGRES_PASSWORD",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:38",
        "auth_service/test_staging_db_connection.py:43",
        "auth_service/test_staging_db_connection.py:128",
        "auth_service/test_staging_db_connection.py:128",
        "auth_service/test_staging_db_connection.py:131",
        "auth_service/test_url_construction.py:39",
        "auth_service/test_url_construction.py:68",
        "auth_service/test_url_construction.py:68",
        "auth_service/test_url_construction.py:174",
        "scripts/setup_test_environment.py:210"
      ]
    },
    "POSTGRES_PASSWORD=postgres-password-staging": {
      "value": "POSTGRES_PASSWORD=postgres-password-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:72"
      ]
    },
    "POSTGRES_PORT": {
      "value": "POSTGRES_PORT",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:35",
        "auth_service/test_staging_db_connection.py:40",
        "auth_service/test_staging_db_connection.py:125",
        "auth_service/test_staging_db_connection.py:125",
        "auth_service/test_url_construction.py:36",
        "auth_service/test_url_construction.py:65",
        "auth_service/test_url_construction.py:65",
        "scripts/setup_test_environment.py:208",
        "scripts/test_auth_database_sessions.py:226",
        "scripts/test_auth_database_sessions.py:233"
      ]
    },
    "POSTGRES_USER": {
      "value": "POSTGRES_USER",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:37",
        "auth_service/test_staging_db_connection.py:42",
        "auth_service/test_staging_db_connection.py:127",
        "auth_service/test_staging_db_connection.py:127",
        "auth_service/test_url_construction.py:38",
        "auth_service/test_url_construction.py:67",
        "auth_service/test_url_construction.py:67",
        "auth_service/test_url_construction.py:173",
        "scripts/setup_test_environment.py:209",
        "scripts/test_auth_database_sessions.py:228"
      ]
    },
    "PREFLIGHT REQUEST:": {
      "value": "PREFLIGHT REQUEST:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:71"
      ]
    },
    "PRIORITY FAILURES (Critical/High)": {
      "value": "PRIORITY FAILURES (Critical/High)",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:236"
      ]
    },
    "PR_NUMBER": {
      "value": "PR_NUMBER",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34"
      ]
    },
    "PUT": {
      "value": "PUT",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:108"
      ]
    },
    "PYTEST MARKER ADDITION TOOL": {
      "value": "PYTEST MARKER ADDITION TOOL",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:169"
      ]
    },
    "PYTEST_CURRENT_TEST": {
      "value": "PYTEST_CURRENT_TEST",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:30"
      ]
    },
    "PYTHONUNBUFFERED": {
      "value": "PYTHONUNBUFFERED",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:505"
      ]
    },
    "PYTHONUTF8": {
      "value": "PYTHONUTF8",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:505"
      ]
    },
    "Parallel Efficiency:": {
      "value": "Parallel Efficiency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:352"
      ]
    },
    "Parallel Safe:": {
      "value": "Parallel Safe:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1114"
      ]
    },
    "Parallel:": {
      "value": "Parallel:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:365"
      ]
    },
    "Pass Rate:": {
      "value": "Pass Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:298"
      ]
    },
    "Passed": {
      "value": "Passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:360"
      ]
    },
    "Passed:": {
      "value": "Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:100",
        "scripts/simple_test_fix_loop.py:93",
        "scripts/test_auth_database_sessions.py:397",
        "scripts/test_coordination_fixes.py:380",
        "scripts/test_database_url_builder_comprehensive.py:348",
        "scripts/test_example_message_flow.py:321",
        "scripts/test_ssl_certificates_staging.py:305",
        "scripts/test_staging_env.py:189",
        "scripts/test_staging_migrations.py:325",
        "scripts/test_verify_workflow_status_corrected.py:195"
      ]
    },
    "Password must contain at least one digit": {
      "value": "Password must contain at least one digit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:84"
      ]
    },
    "Password must contain at least one lowercase letter": {
      "value": "Password must contain at least one lowercase letter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:81"
      ]
    },
    "Password must contain at least one special character": {
      "value": "Password must contain at least one special character",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:87"
      ]
    },
    "Password must contain at least one uppercase letter": {
      "value": "Password must contain at least one uppercase letter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:78"
      ]
    },
    "Password too short: minimum": {
      "value": "Password too short: minimum",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:75"
      ]
    },
    "Password:": {
      "value": "Password:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:48"
      ]
    },
    "Pattern check results:": {
      "value": "Pattern check results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:118"
      ]
    },
    "Perform analysis without making changes": {
      "value": "Perform analysis without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:719"
      ]
    },
    "Perform concurrent token validation.": {
      "value": "Perform concurrent token validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:228"
      ]
    },
    "Perform dry run without making changes (SAFE, default)": {
      "value": "Perform dry run without making changes (SAFE, default)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:920"
      ]
    },
    "Perform ultra-thinking deep analysis": {
      "value": "Perform ultra-thinking deep analysis",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:72"
      ]
    },
    "Performance Grade:": {
      "value": "Performance Grade:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:331"
      ]
    },
    "Performance Simulator\n\nThis module simulates performance patterns including cascading failures and bottlenecks.": {
      "value": "Performance Simulator\n\nThis module simulates performance patterns including cascading failures and bottlenecks.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:1"
      ]
    },
    "Performance analysis completed": {
      "value": "Performance analysis completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:319"
      ]
    },
    "Performance and SLA validation tests": {
      "value": "Performance and SLA validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:98"
      ]
    },
    "Performance benchmark tests": {
      "value": "Performance benchmark tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:102"
      ]
    },
    "Performance improvement needed:": {
      "value": "Performance improvement needed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:642"
      ]
    },
    "Performance issues:": {
      "value": "Performance issues:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:401",
        "scripts/test_secret_manager_builder_critical.py:519"
      ]
    },
    "PerformanceSimulator": {
      "value": "PerformanceSimulator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:87"
      ]
    },
    "Permission Test Data Factory\nCreates test permission data for role-based access control testing.\nSupports various permission patterns and user permission assignments.": {
      "value": "Permission Test Data Factory\nCreates test permission data for role-based access control testing.\nSupports various permission patterns and user permission assignments.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:1"
      ]
    },
    "PermissionFactory": {
      "value": "PermissionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:19"
      ]
    },
    "PermissionRequest schema does not default to staging": {
      "value": "PermissionRequest schema does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:120"
      ]
    },
    "Permissions must be a list": {
      "value": "Permissions must be a list",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:211"
      ]
    },
    "Phase": {
      "value": "Phase",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:308"
      ]
    },
    "Placeholder count:": {
      "value": "Placeholder count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:70"
      ]
    },
    "Placeholder detected": {
      "value": "Placeholder detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:473"
      ]
    },
    "Placeholder detected in": {
      "value": "Placeholder detected in",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:438"
      ]
    },
    "Please check test configuration.": {
      "value": "Please check test configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:359"
      ]
    },
    "Please ensure required services are running": {
      "value": "Please ensure required services are running",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:656"
      ]
    },
    "Please install: pip install websockets aiohttp": {
      "value": "Please install: pip install websockets aiohttp",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:368"
      ]
    },
    "Please review failures before deploying.": {
      "value": "Please review failures before deploying.",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:362"
      ]
    },
    "Please review the failed tests and fix the issues": {
      "value": "Please review the failed tests and fix the issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:424"
      ]
    },
    "Please review violations manually and implement proper solutions.": {
      "value": "Please review violations manually and implement proper solutions.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:388"
      ]
    },
    "Please start PostgreSQL with:": {
      "value": "Please start PostgreSQL with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:158"
      ]
    },
    "Pong response:": {
      "value": "Pong response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:72"
      ]
    },
    "Pool size:": {
      "value": "Pool size:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:322"
      ]
    },
    "Pool size: 5, Max overflow: 10": {
      "value": "Pool size: 5, Max overflow: 10",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:318"
      ]
    },
    "Port": {
      "value": "Port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:252"
      ]
    },
    "Port allocation test failed:": {
      "value": "Port allocation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:182"
      ]
    },
    "Port allocation working: service1=": {
      "value": "Port allocation working: service1=",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:173"
      ]
    },
    "Port configuration inconsistency detected! PORT=": {
      "value": "Port configuration inconsistency detected! PORT=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:137"
      ]
    },
    "Port configuration mismatch detected:\n  Binding port:": {
      "value": "Port configuration mismatch detected:\n  Binding port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:418"
      ]
    },
    "Port is already in use by another process": {
      "value": "Port is already in use by another process",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:43"
      ]
    },
    "Port mismatch detected! Auth service binds to port": {
      "value": "Port mismatch detected! Auth service binds to port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:58"
      ]
    },
    "Port:": {
      "value": "Port:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:233",
        "scripts/test_ssl_certificates_staging.py:40",
        "scripts/test_ssl_certificates_staging.py:61",
        "scripts/test_ssl_certificates_staging.py:216",
        "scripts/test_staging_db_direct.py:45",
        "scripts/test_staging_migrations.py:45"
      ]
    },
    "Post-deployment:": {
      "value": "Post-deployment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:221"
      ]
    },
    "PostgreSQL": {
      "value": "PostgreSQL",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:65"
      ]
    },
    "PostgreSQL Async Configuration Test": {
      "value": "PostgreSQL Async Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:125"
      ]
    },
    "PostgreSQL connection string": {
      "value": "PostgreSQL connection string",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:94"
      ]
    },
    "PostgreSQL version:": {
      "value": "PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:70",
        "auth_service/test_staging_db_connection.py:208"
      ]
    },
    "PostgreSQL:": {
      "value": "PostgreSQL:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:119",
        "scripts/setup_e2e_test_ports.py:89"
      ]
    },
    "Potential circular dependencies detected": {
      "value": "Potential circular dependencies detected",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:621"
      ]
    },
    "Potentially flaky tests:": {
      "value": "Potentially flaky tests:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:402"
      ]
    },
    "Pre-deployment error": {
      "value": "Pre-deployment error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:114"
      ]
    },
    "Pre-deployment:": {
      "value": "Pre-deployment:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:220"
      ]
    },
    "Preferred splitting strategy": {
      "value": "Preferred splitting strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:680"
      ]
    },
    "Preflight:": {
      "value": "Preflight:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:517"
      ]
    },
    "Priority failures:": {
      "value": "Priority failures:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:227"
      ]
    },
    "Priority:": {
      "value": "Priority:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1093"
      ]
    },
    "Privilege escalation not detected": {
      "value": "Privilege escalation not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:268"
      ]
    },
    "Problematic files found in excluded directories:": {
      "value": "Problematic files found in excluded directories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:38"
      ]
    },
    "Process a specific file": {
      "value": "Process a specific file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:723"
      ]
    },
    "Process integration tests first (default: True)": {
      "value": "Process integration tests first (default: True)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:725"
      ]
    },
    "Processed": {
      "value": "Processed",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:63"
      ]
    },
    "Processed:": {
      "value": "Processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:190",
        "scripts/fix_test_batch.py:381"
      ]
    },
    "Processing": {
      "value": "Processing",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:182",
        "scripts/apply_fast_test_decorators.py:169",
        "scripts/auto_fix_test_sizes.py:643",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/standardize_l3_test_names.py:266"
      ]
    },
    "Processing Batch": {
      "value": "Processing Batch",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:240"
      ]
    },
    "Processing complete!": {
      "value": "Processing complete!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:206"
      ]
    },
    "Processing first": {
      "value": "Processing first",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:261"
      ]
    },
    "Processing specific file:": {
      "value": "Processing specific file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:686"
      ]
    },
    "Processing:": {
      "value": "Processing:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:261",
        "scripts/standardize_l3_test_names.py:160"
      ]
    },
    "Production": {
      "value": "Production",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:203",
        "scripts/test_secret_manager_builder_critical.py:178"
      ]
    },
    "Production CORS:": {
      "value": "Production CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:137"
      ]
    },
    "Production Environment": {
      "value": "Production Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:150"
      ]
    },
    "Production auth service using development port": {
      "value": "Production auth service using development port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:380"
      ]
    },
    "Productivity Gain:": {
      "value": "Productivity Gain:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "Progress display mode (default: simple)": {
      "value": "Progress display mode (default: simple)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1024"
      ]
    },
    "Progress:": {
      "value": "Progress:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:255"
      ]
    },
    "Project ID:": {
      "value": "Project ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:87"
      ]
    },
    "Project root directory": {
      "value": "Project root directory",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:775",
        "scripts/ci/check_test_stubs.py:112",
        "scripts/remove_test_stubs.py:361"
      ]
    },
    "Project root:": {
      "value": "Project root:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:71"
      ]
    },
    "Project-Only Real Test Requirements Validator\n\nValidates only project test files against SPEC/testing.xml real test requirements.\nExcludes virtual environments and external libraries.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns in our code\n- Strategic Impact: Ensures test reliability and system integrity": {
      "value": "Project-Only Real Test Requirements Validator\n\nValidates only project test files against SPEC/testing.xml real test requirements.\nExcludes virtual environments and external libraries.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns in our code\n- Strategic Impact: Ensures test reliability and system integrity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:1"
      ]
    },
    "Proposed new files:": {
      "value": "Proposed new files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:98"
      ]
    },
    "Protected endpoint accessible without authentication": {
      "value": "Protected endpoint accessible without authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:67"
      ]
    },
    "Protects": {
      "value": "Protects",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:490"
      ]
    },
    "Protocol": {
      "value": "Protocol",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211",
        "scripts/remove_test_stubs.py:223"
      ]
    },
    "Python files to process": {
      "value": "Python files to process",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:196"
      ]
    },
    "QUALITY METRICS:": {
      "value": "QUALITY METRICS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:745"
      ]
    },
    "Quick Start Examples:": {
      "value": "Quick Start Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:313"
      ]
    },
    "Quick Test": {
      "value": "Quick Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:406"
      ]
    },
    "Quick frontend test runner that handles no-tests case properly": {
      "value": "Quick frontend test runner that handles no-tests case properly",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:2"
      ]
    },
    "Quick script to run tests against the actual staging environment.\n\nUsage:\n    python scripts/test_staging.py           # Run all staging tests\n    python scripts/test_staging.py --quick   # Run quick health checks only\n    python scripts/test_staging.py --full    # Run comprehensive staging tests": {
      "value": "Quick script to run tests against the actual staging environment.\n\nUsage:\n    python scripts/test_staging.py           # Run all staging tests\n    python scripts/test_staging.py --quick   # Run quick health checks only\n    python scripts/test_staging.py --full    # Run comprehensive staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:2"
      ]
    },
    "Quick script to verify that test scanning is excluding site-packages and virtual environments": {
      "value": "Quick script to verify that test scanning is excluding site-packages and virtual environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:2"
      ]
    },
    "Quick smoke tests for basic functionality": {
      "value": "Quick smoke tests for basic functionality",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:78"
      ]
    },
    "Quick test failure scanner - identifies failing tests efficiently": {
      "value": "Quick test failure scanner - identifies failing tests efficiently",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:2"
      ]
    },
    "Quick validation test": {
      "value": "Quick validation test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:403"
      ]
    },
    "Quick validation tests (<30s)": {
      "value": "Quick validation tests (<30s)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:23"
      ]
    },
    "READY": {
      "value": "READY",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:145"
      ]
    },
    "REAL_LLM": {
      "value": "REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:304"
      ]
    },
    "RECOMMENDATION": {
      "value": "RECOMMENDATION",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:73"
      ]
    },
    "RECOMMENDATION:": {
      "value": "RECOMMENDATION:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:54"
      ]
    },
    "RECOMMENDATIONS": {
      "value": "RECOMMENDATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:181"
      ]
    },
    "RECOMMENDATIONS FOR AGENT TESTING": {
      "value": "RECOMMENDATIONS FOR AGENT TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:360"
      ]
    },
    "RECOMMENDATIONS:": {
      "value": "RECOMMENDATIONS:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:103",
        "scripts/business_value_test_index.py:764",
        "scripts/compliance/fake_test_scanner.py:304"
      ]
    },
    "REDIS_": {
      "value": "REDIS_",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:249"
      ]
    },
    "REDIS_FALLBACK_ENABLED": {
      "value": "REDIS_FALLBACK_ENABLED",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:92"
      ]
    },
    "REDIS_PASSWORD": {
      "value": "REDIS_PASSWORD",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:94",
        "scripts/test_secret_manager_builder_critical.py:81",
        "scripts/test_secret_manager_builder_critical.py:131",
        "scripts/test_secret_manager_builder_critical.py:145",
        "scripts/test_secret_manager_builder_critical.py:159",
        "scripts/test_secret_manager_builder_critical.py:566",
        "scripts/test_secret_manager_builder_critical.py:691",
        "scripts/test_secret_manager_builder_critical.py:702",
        "scripts/test_secret_manager_builder_critical.py:800",
        "scripts/test_secret_manager_debug.py:20"
      ]
    },
    "REDIS_REQUIRED": {
      "value": "REDIS_REQUIRED",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:93"
      ]
    },
    "REDIS_URL": {
      "value": "REDIS_URL",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:44",
        "scripts/setup_test_environment.py:95",
        "scripts/setup_test_environment.py:179",
        "scripts/start_test_services.py:157",
        "scripts/test_backend.py:81",
        "scripts/test_redis_config_critical_failure.py:96",
        "scripts/test_staging_startup.py:111",
        "scripts/test_staging_startup.py:217",
        "scripts/unified_test_config.py:310"
      ]
    },
    "REDUNDANT TEST": {
      "value": "REDUNDANT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:67"
      ]
    },
    "REPLACE": {
      "value": "REPLACE",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:425"
      ]
    },
    "RESULT: ✓ READY - Test environment is properly configured": {
      "value": "RESULT: ✓ READY - Test environment is properly configured",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:315"
      ]
    },
    "RESULT: ✗ FAILED -": {
      "value": "RESULT: ✗ FAILED -",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:313"
      ]
    },
    "RESULTS": {
      "value": "RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:261"
      ]
    },
    "RUNNING FRONTEND UNIT TESTS": {
      "value": "RUNNING FRONTEND UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:55"
      ]
    },
    "RUNNING REAL E2E TESTS:": {
      "value": "RUNNING REAL E2E TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:149"
      ]
    },
    "RUNNING SIMPLIFIED UNIT TESTS": {
      "value": "RUNNING SIMPLIFIED UNIT TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:36"
      ]
    },
    "Rapid Test Consolidation - Iterations 83-100": {
      "value": "Rapid Test Consolidation - Iterations 83-100",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:493"
      ]
    },
    "Rapid Test Consolidation Script - Iterations 83-90\n==================================================\n\nThis script rapidly consolidates remaining test files and generates comprehensive\ndocumentation for iterations 83-100 of the test remediation plan.\n\nBusiness Value Justification:\n- Eliminates remaining SSOT violations across all test categories\n- Creates comprehensive test documentation\n- Establishes ongoing test health monitoring\n- Completes 100-iteration test remediation initiative": {
      "value": "Rapid Test Consolidation Script - Iterations 83-90\n==================================================\n\nThis script rapidly consolidates remaining test files and generates comprehensive\ndocumentation for iterations 83-100 of the test remediation plan.\n\nBusiness Value Justification:\n- Eliminates remaining SSOT violations across all test categories\n- Creates comprehensive test documentation\n- Establishes ongoing test health monitoring\n- Completes 100-iteration test remediation initiative",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:2"
      ]
    },
    "Rate limit exceeded": {
      "value": "Rate limit exceeded",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:115"
      ]
    },
    "Rate limiting and DDoS protection tests": {
      "value": "Rate limiting and DDoS protection tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:108"
      ]
    },
    "React\\.createContext\\(\\w*mock\\w*\\)": {
      "value": "React\\.createContext\\(\\w*mock\\w*\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:68"
      ]
    },
    "Readiness separation test failed:": {
      "value": "Readiness separation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:153"
      ]
    },
    "Readiness vs health separation working correctly": {
      "value": "Readiness vs health separation working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:149"
      ]
    },
    "Real LLM Coverage:": {
      "value": "Real LLM Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:747"
      ]
    },
    "Real LLM testing enabled but no valid API keys found": {
      "value": "Real LLM testing enabled but no valid API keys found",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:135"
      ]
    },
    "Real Service Test Metrics Tracking\nULTRA DEEP THINK: Module-based architecture - Metrics tracking extracted for 450-line compliance": {
      "value": "Real Service Test Metrics Tracking\nULTRA DEEP THINK: Module-based architecture - Metrics tracking extracted for 450-line compliance",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:2"
      ]
    },
    "Real Test Requirements Linter\n\nIntegrates into development workflow to enforce real test requirements.\nCan be used as pre-commit hook, CI check, or standalone validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents test anti-patterns from entering codebase\n- Strategic Impact: Maintains test reliability and system integrity\n\nUsage:\n  python scripts/compliance/real_test_linter.py [--fix] [--strict] [file1 file2 ...]\n  \nOptions:\n  --fix     Attempt to automatically fix violations\n  --strict  Fail on any violations (for CI)\n  --files   Specific files to check (default: all project test files)": {
      "value": "Real Test Requirements Linter\n\nIntegrates into development workflow to enforce real test requirements.\nCan be used as pre-commit hook, CI check, or standalone validation.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents test anti-patterns from entering codebase\n- Strategic Impact: Maintains test reliability and system integrity\n\nUsage:\n  python scripts/compliance/real_test_linter.py [--fix] [--strict] [file1 file2 ...]\n  \nOptions:\n  --fix     Attempt to automatically fix violations\n  --strict  Fail on any violations (for CI)\n  --files   Specific files to check (default: all project test files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:2"
      ]
    },
    "Real Test Requirements Validator\n\nValidates test files against SPEC/testing.xml real test requirements:\n1. No mock component implementations inside test files\n2. Integration tests use real child components  \n3. Files must not exceed 300 lines\n4. Functions must not exceed 8 lines\n5. Minimal mocking (only external APIs)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns\n- Strategic Impact: Ensures test reliability and system integrity": {
      "value": "Real Test Requirements Validator\n\nValidates test files against SPEC/testing.xml real test requirements:\n1. No mock component implementations inside test files\n2. Integration tests use real child components  \n3. Files must not exceed 300 lines\n4. Functions must not exceed 8 lines\n5. Minimal mocking (only external APIs)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity, Risk Reduction\n- Value Impact: Prevents regression from invalid test patterns\n- Strategic Impact: Ensures test reliability and system integrity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:1"
      ]
    },
    "Realistic Test Data Models and Configuration\n\nThis module defines models, enums, and configuration data for realistic test data generation.": {
      "value": "Realistic Test Data Models and Configuration\n\nThis module defines models, enums, and configuration data for realistic test data generation.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:1"
      ]
    },
    "Realistic Test Data Service\n\nBackward compatibility module that imports from the new modular structure.\nGenerates production-like test data for comprehensive testing.\nAddresses gaps identified in test_realism_analysis_20250811.md": {
      "value": "Realistic Test Data Service\n\nBackward compatibility module that imports from the new modular structure.\nGenerates production-like test data for comprehensive testing.\nAddresses gaps identified in test_realism_analysis_20250811.md",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data_service.py:1"
      ]
    },
    "Realistic Test Data Service Module\n\nGenerates production-like test data for comprehensive testing.\nThis module addresses gaps identified in test realism analysis and provides\nrealistic patterns for LLM responses, logs, workloads, and performance scenarios.": {
      "value": "Realistic Test Data Service Module\n\nGenerates production-like test data for comprehensive testing.\nThis module addresses gaps identified in test realism analysis and provides\nrealistic patterns for LLM responses, logs, workloads, and performance scenarios.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:1"
      ]
    },
    "Realistic test data module - consolidates test data functionality.": {
      "value": "Realistic test data module - consolidates test data functionality.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/realistic_test_data.py:1"
      ]
    },
    "RealisticDataPatterns": {
      "value": "RealisticDataPatterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:82",
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "RealisticTestDataConfigManager": {
      "value": "RealisticTestDataConfigManager",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:83"
      ]
    },
    "RealisticTestDataService": {
      "value": "RealisticTestDataService",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/realistic_test_data.py:8",
        "netra_backend/app/services/realistic_test_data/__init__.py:81",
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "Reason:": {
      "value": "Reason:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:179",
        "scripts/test_error_monitor_logic.py:203"
      ]
    },
    "Received keys:": {
      "value": "Received keys:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:113",
        "scripts/test_staging_refresh_format.py:138"
      ]
    },
    "Received response:": {
      "value": "Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:209"
      ]
    },
    "Recommendation: Manually refactor based on these suggestions.": {
      "value": "Recommendation: Manually refactor based on these suggestions.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1006"
      ]
    },
    "Recommendation: Review the generated report and apply optimizations to improve test suite performance.": {
      "value": "Recommendation: Review the generated report and apply optimizations to improve test suite performance.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:406"
      ]
    },
    "Recommendations must be a list": {
      "value": "Recommendations must be a list",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:391"
      ]
    },
    "Recommendations:": {
      "value": "Recommendations:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:660",
        "scripts/setup_staging_test_account.py:298",
        "scripts/test_cors.py:475"
      ]
    },
    "Recommended approach:": {
      "value": "Recommended approach:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1017"
      ]
    },
    "Recommended splitting strategies:": {
      "value": "Recommended splitting strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:365"
      ]
    },
    "Redirect to: [cyan]": {
      "value": "Redirect to: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:193"
      ]
    },
    "Redis": {
      "value": "Redis",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:66"
      ]
    },
    "Redis Connection Python 3.12 Fixes": {
      "value": "Redis Connection Python 3.12 Fixes",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:45"
      ]
    },
    "Redis Python 3.12 Compatibility Tests": {
      "value": "Redis Python 3.12 Compatibility Tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:49"
      ]
    },
    "Redis configuration error": {
      "value": "Redis configuration error",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:304"
      ]
    },
    "Redis connection lost": {
      "value": "Redis connection lost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:436"
      ]
    },
    "Redis connection string": {
      "value": "Redis connection string",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:95"
      ]
    },
    "Redis not available in test environment": {
      "value": "Redis not available in test environment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:439"
      ]
    },
    "Redis should be in degraded services": {
      "value": "Redis should be in degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:264"
      ]
    },
    "Redis unavailable": {
      "value": "Redis unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:445"
      ]
    },
    "Redis-dependent tests": {
      "value": "Redis-dependent tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:118"
      ]
    },
    "Redis:": {
      "value": "Redis:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:120",
        "scripts/setup_e2e_test_ports.py:90"
      ]
    },
    "RedisConfigurationBuilder": {
      "value": "RedisConfigurationBuilder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:124",
        "scripts/test_redis_config_critical_failure.py:129",
        "scripts/test_redis_config_critical_failure.py:263",
        "scripts/test_redis_config_critical_failure.py:284"
      ]
    },
    "RedisConfigurationBuilder missing secret manager integration": {
      "value": "RedisConfigurationBuilder missing secret manager integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:176"
      ]
    },
    "RedisConfigurationBuilder test failed:": {
      "value": "RedisConfigurationBuilder test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:135"
      ]
    },
    "RedisManager not using RedisConfigurationBuilder": {
      "value": "RedisManager not using RedisConfigurationBuilder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:272"
      ]
    },
    "RedisManager not using RedisConfigurationBuilder:": {
      "value": "RedisManager not using RedisConfigurationBuilder:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:126"
      ]
    },
    "RedisManager: Inappropriate fallback occurred": {
      "value": "RedisManager: Inappropriate fallback occurred",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:144"
      ]
    },
    "RedisTestMixin": {
      "value": "RedisTestMixin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/base/__init__.py:17"
      ]
    },
    "Reduce mocking by using real components and external API mocks only": {
      "value": "Reduce mocking by using real components and external API mocks only",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:403"
      ]
    },
    "Reduce mocking in": {
      "value": "Reduce mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:370"
      ]
    },
    "Refactor": {
      "value": "Refactor",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:366"
      ]
    },
    "Referer": {
      "value": "Referer",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:18",
        "scripts/test_cors_issue.py:39"
      ]
    },
    "Refresh Test User": {
      "value": "Refresh Test User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:52"
      ]
    },
    "Refresh cycle": {
      "value": "Refresh cycle",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:240"
      ]
    },
    "Remaining L3 files:": {
      "value": "Remaining L3 files:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:290"
      ]
    },
    "Remaining syntax errors:": {
      "value": "Remaining syntax errors:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:290"
      ]
    },
    "Remote address:": {
      "value": "Remote address:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:140"
      ]
    },
    "Remove duplicate test setup code from all test files.\n\nThis script finds and removes the duplicate sys.path manipulation code\nthat appears in hundreds of test files, ensuring only the centralized\nsetup_test_path() function is used.": {
      "value": "Remove duplicate test setup code from all test files.\n\nThis script finds and removes the duplicate sys.path manipulation code\nthat appears in hundreds of test files, ensuring only the centralized\nsetup_test_path() function is used.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:1"
      ]
    },
    "Remove or mark redundant tests": {
      "value": "Remove or mark redundant tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:63"
      ]
    },
    "Removed original file": {
      "value": "Removed original file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:289"
      ]
    },
    "Removing": {
      "value": "Removing",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:294"
      ]
    },
    "Renaming:": {
      "value": "Renaming:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:161"
      ]
    },
    "Replace hardcoded sleeps in": {
      "value": "Replace hardcoded sleeps in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:181"
      ]
    },
    "Replace mocks with real components or move to unit tests": {
      "value": "Replace mocks with real components or move to unit tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:371"
      ]
    },
    "Replace with proper function signature and real implementation": {
      "value": "Replace with proper function signature and real implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:200"
      ]
    },
    "Replace with real data source or move to test fixtures": {
      "value": "Replace with real data source or move to test fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:178"
      ]
    },
    "Replace with real implementation or move to test directory": {
      "value": "Replace with real implementation or move to test directory",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:154"
      ]
    },
    "Replaced UserFlowTestBase with unittest.TestCase": {
      "value": "Replaced UserFlowTestBase with unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:244"
      ]
    },
    "Replaced pattern:": {
      "value": "Replaced pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:107"
      ]
    },
    "Report Generation": {
      "value": "Report Generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:397"
      ]
    },
    "Report format (default: text)": {
      "value": "Report format (default: text)",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:359"
      ]
    },
    "Report saved to": {
      "value": "Report saved to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:438",
        "scripts/compliance/test_size_validator.py:539",
        "scripts/remove_test_stubs.py:349"
      ]
    },
    "Report saved to:": {
      "value": "Report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:421",
        "scripts/auto_fix_test_violations.py:986"
      ]
    },
    "Report written to": {
      "value": "Report written to",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:373"
      ]
    },
    "Report-only mode. Use --force-unsafe-fix and --confirm-unsafe for actual changes (NOT RECOMMENDED)": {
      "value": "Report-only mode. Use --force-unsafe-fix and --confirm-unsafe for actual changes (NOT RECOMMENDED)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1015"
      ]
    },
    "Report:": {
      "value": "Report:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:905"
      ]
    },
    "Request failed:": {
      "value": "Request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:103",
        "scripts/test_cors_implementation.py:141",
        "scripts/test_gtm_loading.py:66"
      ]
    },
    "Request processed in 45ms": {
      "value": "Request processed in 45ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:126"
      ]
    },
    "Request processed successfully": {
      "value": "Request processed successfully",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:97"
      ]
    },
    "Request timed out": {
      "value": "Request timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:222"
      ]
    },
    "Request timeout": {
      "value": "Request timeout",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:137",
        "scripts/test_cors_implementation.py:101",
        "scripts/test_cors_implementation.py:139"
      ]
    },
    "Require Real LLM:": {
      "value": "Require Real LLM:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1116"
      ]
    },
    "Require Real Services:": {
      "value": "Require Real Services:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1115"
      ]
    },
    "Required services: PostgreSQL (port 5432), Redis (port 6379)": {
      "value": "Required services: PostgreSQL (port 5432), Redis (port 6379)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:669"
      ]
    },
    "Resilience and recovery validation tests": {
      "value": "Resilience and recovery validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:119"
      ]
    },
    "Resource cleanup successful": {
      "value": "Resource cleanup successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:362"
      ]
    },
    "Resource cleanup test failed:": {
      "value": "Resource cleanup test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:366"
      ]
    },
    "Response:": {
      "value": "Response:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:77",
        "scripts/test_oauth_local.py:166",
        "scripts/test_oauth_local.py:212",
        "scripts/test_oauth_local.py:270",
        "scripts/test_oauth_local.py:273",
        "scripts/test_oauth_local.py:322",
        "scripts/test_staging_auth_e2e.py:86",
        "scripts/test_staging_auth_e2e.py:149",
        "scripts/test_staging_auth_e2e.py:184",
        "scripts/test_staging_auth_e2e.py:221"
      ]
    },
    "Result": {
      "value": "Result",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:351"
      ]
    },
    "Result:": {
      "value": "Result:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:181",
        "scripts/test_auth_database_sessions.py:200",
        "scripts/test_backend_port_binding.py:168",
        "scripts/test_staging_jwt_validation.py:71",
        "scripts/test_verify_workflow.py:36",
        "scripts/test_verify_workflow.py:48",
        "scripts/test_verify_workflow.py:71"
      ]
    },
    "Results saved to:": {
      "value": "Results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:149",
        "scripts/fix_test_batch.py:384",
        "scripts/iterative_test_fix_loop.py:159",
        "scripts/test_staging_login_automated.py:420"
      ]
    },
    "Results will be saved to:": {
      "value": "Results will be saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:143"
      ]
    },
    "Results:": {
      "value": "Results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:238",
        "scripts/auto_fix_test_sizes.py:736",
        "scripts/test_cors.py:536"
      ]
    },
    "Resume execution from specific category": {
      "value": "Resume execution from specific category",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1029"
      ]
    },
    "Retry attempt 1 of 3": {
      "value": "Retry attempt 1 of 3",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:104"
      ]
    },
    "Revenue-critical path tests (1-2min)": {
      "value": "Revenue-critical path tests (1-2min)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:55"
      ]
    },
    "Review recent deployments": {
      "value": "Review recent deployments",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:418"
      ]
    },
    "Review service dependencies": {
      "value": "Review service dependencies",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:408"
      ]
    },
    "Review shared fixtures and utilities": {
      "value": "Review shared fixtures and utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:444"
      ]
    },
    "Root": {
      "value": "Root",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:42"
      ]
    },
    "Root directory to scan": {
      "value": "Root directory to scan",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:928"
      ]
    },
    "Run Cypress tests in headed mode (show browser UI)": {
      "value": "Run Cypress tests in headed mode (show browser UI)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1069"
      ]
    },
    "Run E2E tests with Cypress": {
      "value": "Run E2E tests with Cypress",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:394"
      ]
    },
    "Run ESLint": {
      "value": "Run ESLint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:407"
      ]
    },
    "Run Jest in watch mode": {
      "value": "Run Jest in watch mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:400"
      ]
    },
    "Run TypeScript type checking": {
      "value": "Run TypeScript type checking",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:409"
      ]
    },
    "Run WebSocket tests.": {
      "value": "Run WebSocket tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:107"
      ]
    },
    "Run all E2E tests": {
      "value": "Run all E2E tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:330"
      ]
    },
    "Run all WebSocket configuration tests.": {
      "value": "Run all WebSocket configuration tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:233"
      ]
    },
    "Run all WebSocket connectivity tests.": {
      "value": "Run all WebSocket connectivity tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:158"
      ]
    },
    "Run all WebSocket functionality tests.": {
      "value": "Run all WebSocket functionality tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:259"
      ]
    },
    "Run all WebSocket tests.": {
      "value": "Run all WebSocket tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:173"
      ]
    },
    "Run all coordination fix validation tests.": {
      "value": "Run all coordination fix validation tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:38"
      ]
    },
    "Run all initialization tests.": {
      "value": "Run all initialization tests.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:184"
      ]
    },
    "Run all integration tests": {
      "value": "Run all integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:128"
      ]
    },
    "Run all staging deployment tests": {
      "value": "Run all staging deployment tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:184"
      ]
    },
    "Run all tests": {
      "value": "Run all tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:123"
      ]
    },
    "Run autonomous test review based on mode": {
      "value": "Run autonomous test review based on mode",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:34"
      ]
    },
    "Run benchmark comparison with standard execution": {
      "value": "Run benchmark comparison with standard execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:379"
      ]
    },
    "Run comprehensive CORS tests.": {
      "value": "Run comprehensive CORS tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:144"
      ]
    },
    "Run comprehensive WebSocket tests.\n        \n        Returns:\n            Summary of all test results": {
      "value": "Run comprehensive WebSocket tests.\n        \n        Returns:\n            Summary of all test results",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:169"
      ]
    },
    "Run comprehensive staging tests": {
      "value": "Run comprehensive staging tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:82"
      ]
    },
    "Run integration tests separately with proper services running": {
      "value": "Run integration tests separately with proper services running",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:80"
      ]
    },
    "Run iterative test-fix loop": {
      "value": "Run iterative test-fix loop",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:170"
      ]
    },
    "Run multiple categories (e.g., '--categories unit integration api')": {
      "value": "Run multiple categories (e.g., '--categories unit integration api')",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:925"
      ]
    },
    "Run multiple concurrent validations.": {
      "value": "Run multiple concurrent validations.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:255"
      ]
    },
    "Run previously failed tests first": {
      "value": "Run previously failed tests first",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:490"
      ]
    },
    "Run quick staging health checks only": {
      "value": "Run quick staging health checks only",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:77"
      ]
    },
    "Run quick validation only": {
      "value": "Run quick validation only",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:433"
      ]
    },
    "Run specific category (e.g., 'unit', 'integration', 'api')": {
      "value": "Run specific category (e.g., 'unit', 'integration', 'api')",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:919"
      ]
    },
    "Run tests": {
      "value": "Run tests",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:182"
      ]
    },
    "Run tests against staging environment": {
      "value": "Run tests against staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:73"
      ]
    },
    "Run tests from a specific category": {
      "value": "Run tests from a specific category",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:481",
        "scripts/test_frontend.py:388"
      ]
    },
    "Run tests in parallel": {
      "value": "Run tests in parallel",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:977"
      ]
    },
    "Run tests matching pattern": {
      "value": "Run tests matching pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1001"
      ]
    },
    "Run tests to validate they pass before suggesting fixes": {
      "value": "Run tests to validate they pass before suggesting fixes",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:934"
      ]
    },
    "Run tests using the Docker infrastructure.": {
      "value": "Run tests using the Docker infrastructure.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:127"
      ]
    },
    "Run the complete E2E test suite.": {
      "value": "Run the complete E2E test suite.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:72"
      ]
    },
    "Run this script again after making changes to verify compliance.": {
      "value": "Run this script again after making changes to verify compliance.",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:191"
      ]
    },
    "Run this test to see the CRITICAL Redis configuration failure.\n    \n    Expected output: FAILURE with detailed business impact analysis\n    \n    After RedisConfigurationBuilder implementation:\n    Expected output: PASS with all configuration consistency checks passing": {
      "value": "Run this test to see the CRITICAL Redis configuration failure.\n    \n    Expected output: FAILURE with detailed business impact analysis\n    \n    After RedisConfigurationBuilder implementation:\n    Expected output: PASS with all configuration consistency checks passing",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:332"
      ]
    },
    "Run with --verbose to see details": {
      "value": "Run with --verbose to see details",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:101",
        "scripts/startup_test_executor.py:173",
        "scripts/startup_test_executor.py:265"
      ]
    },
    "Run with: pytest auth_service/tests/test_auth_port_configuration.py -v": {
      "value": "Run with: pytest auth_service/tests/test_auth_port_configuration.py -v",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:461"
      ]
    },
    "Run: pip install clickhouse-connect": {
      "value": "Run: pip install clickhouse-connect",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:247"
      ]
    },
    "Running 'alembic current'...": {
      "value": "Running 'alembic current'...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:144"
      ]
    },
    "Running Backend Startup Tests": {
      "value": "Running Backend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:55"
      ]
    },
    "Running CRITICAL SecretManagerBuilder Test - Definition of Done": {
      "value": "Running CRITICAL SecretManagerBuilder Test - Definition of Done",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:839"
      ]
    },
    "Running Cypress E2E Tests": {
      "value": "Running Cypress E2E Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:489"
      ]
    },
    "Running Cypress tests for category:": {
      "value": "Running Cypress tests for category:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:582"
      ]
    },
    "Running ESLint...": {
      "value": "Running ESLint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:313"
      ]
    },
    "Running End-to-End Tests": {
      "value": "Running End-to-End Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:197"
      ]
    },
    "Running Frontend Startup Tests": {
      "value": "Running Frontend Startup Tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:126"
      ]
    },
    "Running Jest Tests": {
      "value": "Running Jest Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:494"
      ]
    },
    "Running TypeScript type check...": {
      "value": "Running TypeScript type check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:333"
      ]
    },
    "Running command:": {
      "value": "Running command:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:59"
      ]
    },
    "Running command:\n  pytest": {
      "value": "Running command:\n  pytest",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:372"
      ]
    },
    "Running test:": {
      "value": "Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:54"
      ]
    },
    "Running tests...": {
      "value": "Running tests...",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:108",
        "scripts/simple_test_fix_loop.py:15"
      ]
    },
    "Running verify_workflow_status.py validation tests...": {
      "value": "Running verify_workflow_status.py validation tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:77"
      ]
    },
    "Running:": {
      "value": "Running:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:50",
        "scripts/fix_common_test_issues.py:59",
        "scripts/startup_test_executor.py:78",
        "scripts/startup_test_executor.py:150",
        "scripts/startup_test_executor.py:242",
        "scripts/test_frontend.py:194",
        "scripts/test_frontend.py:232",
        "scripts/test_staging_env.py:166"
      ]
    },
    "SAFE MODE ENABLED: Only analysis and dry-run operations allowed": {
      "value": "SAFE MODE ENABLED: Only analysis and dry-run operations allowed",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:691"
      ]
    },
    "SAFETY: Actual file splitting is disabled by default. Use force_unsafe=True if you really want to modify files (NOT RECOMMENDED). Consider manual refactoring instead.": {
      "value": "SAFETY: Actual file splitting is disabled by default. Use force_unsafe=True if you really want to modify files (NOT RECOMMENDED). Consider manual refactoring instead.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:333"
      ]
    },
    "SAFETY: Automatic function refactoring is disabled. This operation is too dangerous for automatic execution. Please refactor manually.": {
      "value": "SAFETY: Automatic function refactoring is disabled. This operation is too dangerous for automatic execution. Please refactor manually.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:614"
      ]
    },
    "SAFETY: Cannot perform actual fixes in safe mode. Use dry_run=True for suggestions or explicitly set safe_mode=False and force_unsafe=True (NOT RECOMMENDED).": {
      "value": "SAFETY: Cannot perform actual fixes in safe mode. Use dry_run=True for suggestions or explicitly set safe_mode=False and force_unsafe=True (NOT RECOMMENDED).",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:786"
      ]
    },
    "SAFETY: Cannot perform actual fixes with safe mode enabled": {
      "value": "SAFETY: Cannot perform actual fixes with safe mode enabled",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:966"
      ]
    },
    "SAFETY: Unsafe operations require --confirm-unsafe flag. Please reconsider using manual refactoring instead.": {
      "value": "SAFETY: Unsafe operations require --confirm-unsafe flag. Please reconsider using manual refactoring instead.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:944"
      ]
    },
    "SCAN COMPLETE": {
      "value": "SCAN COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:222"
      ]
    },
    "SECRET": {
      "value": "SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:49",
        "scripts/test_oauth_local.py:77"
      ]
    },
    "SECRET MANAGER BUILDER DEBUG TEST": {
      "value": "SECRET MANAGER BUILDER DEBUG TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:27"
      ]
    },
    "SECRET:": {
      "value": "SECRET:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:237"
      ]
    },
    "SECRET_MANAGER_PROJECT_ID": {
      "value": "SECRET_MANAGER_PROJECT_ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:34",
        "scripts/test_staging_config.py:44"
      ]
    },
    "SECURITY": {
      "value": "SECURITY",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:68",
        "scripts/test_chat_errors.py:69"
      ]
    },
    "SECURITY REQUIREMENTS": {
      "value": "SECURITY REQUIREMENTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:713"
      ]
    },
    "SECURITY SUMMARY:": {
      "value": "SECURITY SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:771"
      ]
    },
    "SECURITY VALIDATION: Production Requirements": {
      "value": "SECURITY VALIDATION: Production Requirements",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:680"
      ]
    },
    "SELECT 1 FROM pg_database WHERE datname = '": {
      "value": "SELECT 1 FROM pg_database WHERE datname = '",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:218"
      ]
    },
    "SELECT 1 as test": {
      "value": "SELECT 1 as test",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:40"
      ]
    },
    "SELECT COUNT(*) FROM pg_user": {
      "value": "SELECT COUNT(*) FROM pg_user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:73"
      ]
    },
    "SELECT current_database()": {
      "value": "SELECT current_database()",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:91"
      ]
    },
    "SELECT name FROM sqlite_master WHERE type='table';": {
      "value": "SELECT name FROM sqlite_master WHERE type='table';",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:41",
        "auth_service/debug_db_test.py:48"
      ]
    },
    "SELECT version()": {
      "value": "SELECT version()",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:68",
        "auth_service/test_staging_db_connection.py:103",
        "auth_service/test_staging_db_connection.py:206",
        "scripts/test_async_postgres.py:48",
        "scripts/test_staging_clickhouse.py:173",
        "scripts/test_staging_db_direct.py:91",
        "scripts/test_staging_db_direct.py:108"
      ]
    },
    "SERVICE COORDINATION FIX VALIDATION SUMMARY": {
      "value": "SERVICE COORDINATION FIX VALIDATION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:372"
      ]
    },
    "SERVICE HEALTH CHECK:": {
      "value": "SERVICE HEALTH CHECK:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:269"
      ]
    },
    "SERVICE STARTUP ORCHESTRATION TEST": {
      "value": "SERVICE STARTUP ORCHESTRATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:128"
      ]
    },
    "SERVICE_ID": {
      "value": "SERVICE_ID",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:41",
        "auth_service/test_url_construction.py:42"
      ]
    },
    "SERVICE_SECRET": {
      "value": "SERVICE_SECRET",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:42",
        "auth_service/test_url_construction.py:43",
        "scripts/setup_test_environment.py:93",
        "scripts/setup_test_environment.py:108",
        "scripts/unified_test_runner.py:239"
      ]
    },
    "SESSION_CREATED": {
      "value": "SESSION_CREATED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:29",
        "auth_service/tests/factories/audit_factory.py:152"
      ]
    },
    "SESSION_EXPIRED": {
      "value": "SESSION_EXPIRED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:30"
      ]
    },
    "SETUP COMPLETE": {
      "value": "SETUP COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:307"
      ]
    },
    "SEVERITY BREAKDOWN:": {
      "value": "SEVERITY BREAKDOWN:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:314"
      ]
    },
    "SHOW DATABASES": {
      "value": "SHOW DATABASES",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:180"
      ]
    },
    "SIMULATING": {
      "value": "SIMULATING",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "SKIPPING Cypress tests:": {
      "value": "SKIPPING Cypress tests:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:587"
      ]
    },
    "SLA compliance and incident prevention for": {
      "value": "SLA compliance and incident prevention for",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:497"
      ]
    },
    "SOLUTION STATUS: RedisConfigurationBuilder implemented with:": {
      "value": "SOLUTION STATUS: RedisConfigurationBuilder implemented with:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:243"
      ]
    },
    "SOME TESTS FAILED": {
      "value": "SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:401",
        "scripts/test_database_url_builder_comprehensive.py:352",
        "scripts/test_ssl_certificates_staging.py:309",
        "scripts/test_staging_migrations.py:329"
      ]
    },
    "SPEC": {
      "value": "SPEC",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:24",
        "scripts/business_value_test_index.py:115"
      ]
    },
    "SQL_ECHO": {
      "value": "SQL_ECHO",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:19"
      ]
    },
    "SSL Certificate Validation": {
      "value": "SSL Certificate Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:263"
      ]
    },
    "SSL Parameter Handling": {
      "value": "SSL Parameter Handling",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:308",
        "scripts/test_ssl_certificates_staging.py:264"
      ]
    },
    "SSL TEST SUMMARY": {
      "value": "SSL TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:287"
      ]
    },
    "SSL certificate expiry not handled gracefully:": {
      "value": "SSL certificate expiry not handled gracefully:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:385"
      ]
    },
    "SSL configuration check failed:": {
      "value": "SSL configuration check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:204"
      ]
    },
    "SSL configured:": {
      "value": "SSL configured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:82"
      ]
    },
    "SSL connection FAILED:": {
      "value": "SSL connection FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:88"
      ]
    },
    "SSL connection: SUCCESS": {
      "value": "SSL connection: SUCCESS",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:73"
      ]
    },
    "SSL parameters present as expected": {
      "value": "SSL parameters present as expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:154"
      ]
    },
    "SSL should be required for staging environment": {
      "value": "SSL should be required for staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:196"
      ]
    },
    "SSL validation failed:": {
      "value": "SSL validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:201"
      ]
    },
    "SSL validation: Not applicable (Unix socket handles encryption)": {
      "value": "SSL validation: Not applicable (Unix socket handles encryption)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:45"
      ]
    },
    "SSL/TLS Issues:": {
      "value": "SSL/TLS Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:221"
      ]
    },
    "SSL/authentication method mismatch": {
      "value": "SSL/authentication method mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:204"
      ]
    },
    "SSL:": {
      "value": "SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:239"
      ]
    },
    "SSOT Compliance": {
      "value": "SSOT Compliance",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:204"
      ]
    },
    "SSOT Compliance:": {
      "value": "SSOT Compliance:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:190"
      ]
    },
    "SSOT_COMPLIANCE_REPORT.md": {
      "value": "SSOT_COMPLIANCE_REPORT.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:334"
      ]
    },
    "STAGING AUTHENTICATION E2E TEST": {
      "value": "STAGING AUTHENTICATION E2E TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:332"
      ]
    },
    "STAGING CONFIGURATION SIMPLIFICATION TEST": {
      "value": "STAGING CONFIGURATION SIMPLIFICATION TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:93"
      ]
    },
    "STAGING DEPLOYMENT VALIDATION TEST SUITE": {
      "value": "STAGING DEPLOYMENT VALIDATION TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:186"
      ]
    },
    "STAGING ENVIRONMENT TEST RUNNER": {
      "value": "STAGING ENVIRONMENT TEST RUNNER",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:41"
      ]
    },
    "STAGING ENVIRONMENT TEST SUITE": {
      "value": "STAGING ENVIRONMENT TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:162"
      ]
    },
    "STAGING ERROR MONITOR LOGIC VALIDATION": {
      "value": "STAGING ERROR MONITOR LOGIC VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:231"
      ]
    },
    "STAGING LOGIN TEST SUITE": {
      "value": "STAGING LOGIN TEST SUITE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:303"
      ]
    },
    "STAGING REFRESH ENDPOINT FORMAT TEST": {
      "value": "STAGING REFRESH ENDPOINT FORMAT TEST",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:18"
      ]
    },
    "STAGING STARTUP SEQUENCE TESTS": {
      "value": "STAGING STARTUP SEQUENCE TESTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:226"
      ]
    },
    "STAGING TEST ACCOUNT SETUP": {
      "value": "STAGING TEST ACCOUNT SETUP",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:286"
      ]
    },
    "STAGING_API_URL": {
      "value": "STAGING_API_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:24",
        "scripts/test_staging.py:45"
      ]
    },
    "STAGING_AUTH_URL": {
      "value": "STAGING_AUTH_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:25",
        "scripts/test_staging.py:46"
      ]
    },
    "STAGING_DATABASE_URL": {
      "value": "STAGING_DATABASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:143"
      ]
    },
    "STAGING_FRONTEND_URL": {
      "value": "STAGING_FRONTEND_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:26",
        "scripts/test_staging.py:47"
      ]
    },
    "STAGING_JWT_SECRET": {
      "value": "STAGING_JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:116"
      ]
    },
    "STAGING_REDIS_URL": {
      "value": "STAGING_REDIS_URL",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:144"
      ]
    },
    "STAGING_URL": {
      "value": "STAGING_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:23",
        "scripts/test_staging.py:44"
      ]
    },
    "STDERR:": {
      "value": "STDERR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:159"
      ]
    },
    "STDOUT:": {
      "value": "STDOUT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:158"
      ]
    },
    "SUCCESS": {
      "value": "SUCCESS",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:133"
      ]
    },
    "SUCCESS! PostgreSQL version:": {
      "value": "SUCCESS! PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:92",
        "scripts/test_staging_db_direct.py:110"
      ]
    },
    "SUCCESS: Alembic can connect to staging database": {
      "value": "SUCCESS: Alembic can connect to staging database",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:154"
      ]
    },
    "SUCCESS: All tests passed! Staging is correctly simplified.": {
      "value": "SUCCESS: All tests passed! Staging is correctly simplified.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:118"
      ]
    },
    "SUCCESS: AuthConfig URL connection successful!": {
      "value": "SUCCESS: AuthConfig URL connection successful!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:207"
      ]
    },
    "SUCCESS: AuthConfig generated correct Cloud SQL URL": {
      "value": "SUCCESS: AuthConfig generated correct Cloud SQL URL",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:143"
      ]
    },
    "SUCCESS: Configuration validation passed": {
      "value": "SUCCESS: Configuration validation passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:142",
        "auth_service/test_url_construction.py:79"
      ]
    },
    "SUCCESS: Connection testing completed successfully": {
      "value": "SUCCESS: Connection testing completed successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:320"
      ]
    },
    "SUCCESS: Credential validation passed": {
      "value": "SUCCESS: Credential validation passed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:261"
      ]
    },
    "SUCCESS: Direct asyncpg connection successful!": {
      "value": "SUCCESS: Direct asyncpg connection successful!",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:69"
      ]
    },
    "SUCCESS: No test stubs found in production code.": {
      "value": "SUCCESS: No test stubs found in production code.",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:40"
      ]
    },
    "SUCCESS: No tests found in excluded directories (site-packages, venv, etc.)": {
      "value": "SUCCESS: No tests found in excluded directories (site-packages, venv, etc.)",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:42"
      ]
    },
    "SUCCESS: No violations found! All conftest.py files are at service-level.": {
      "value": "SUCCESS: No violations found! All conftest.py files are at service-level.",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:100"
      ]
    },
    "SUCCESS: Renamed to": {
      "value": "SUCCESS: Renamed to",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:191"
      ]
    },
    "SUCCESS: Socket path exists:": {
      "value": "SUCCESS: Socket path exists:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:244"
      ]
    },
    "SUCCESS: TCP connection successful! Version:": {
      "value": "SUCCESS: TCP connection successful! Version:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:104"
      ]
    },
    "SUCCESS: URL construction is working correctly": {
      "value": "SUCCESS: URL construction is working correctly",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:241"
      ]
    },
    "SUCCESS: URL contains all expected components": {
      "value": "SUCCESS: URL contains all expected components",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:78"
      ]
    },
    "SUCCESS: URLs have expected Cloud SQL format": {
      "value": "SUCCESS: URLs have expected Cloud SQL format",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:114"
      ]
    },
    "SUGGESTION: Function": {
      "value": "SUGGESTION: Function",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619"
      ]
    },
    "SUGGESTION: Refactor": {
      "value": "SUGGESTION: Refactor",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:622"
      ]
    },
    "SUMMARY": {
      "value": "SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:194",
        "scripts/comprehensive_test_fixer.py:389",
        "scripts/test_gtm_loading.py:140",
        "scripts/test_log_introspection.py:161",
        "scripts/test_staging_refresh_format.py:147",
        "scripts/test_staging_simplified.py:114"
      ]
    },
    "SUMMARY:": {
      "value": "SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:64",
        "scripts/test_environment_detection.py:169"
      ]
    },
    "SYSTEM PERFORMANCE:": {
      "value": "SYSTEM PERFORMANCE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:639"
      ]
    },
    "Safety check prevented file splitting:": {
      "value": "Safety check prevented file splitting:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:840"
      ]
    },
    "Sample Events:": {
      "value": "Sample Events:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:132"
      ]
    },
    "Save detailed JSON report to file": {
      "value": "Save detailed JSON report to file",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:54"
      ]
    },
    "Saving test credentials...": {
      "value": "Saving test credentials...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:303"
      ]
    },
    "Savings percentage must be between 0-50%": {
      "value": "Savings percentage must be between 0-50%",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:408"
      ]
    },
    "Scale horizontally to reduce CPU load": {
      "value": "Scale horizontally to reduce CPU load",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:387"
      ]
    },
    "Scan Date:": {
      "value": "Scan Date:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:309"
      ]
    },
    "Scan all test directories in codebase": {
      "value": "Scan all test directories in codebase",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:375"
      ]
    },
    "Scan complete:": {
      "value": "Scan complete:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:91"
      ]
    },
    "Scan completed. Found": {
      "value": "Scan completed. Found",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:371"
      ]
    },
    "Scan for test stubs": {
      "value": "Scan for test stubs",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:355"
      ]
    },
    "Scan specific directory": {
      "value": "Scan specific directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:377"
      ]
    },
    "Scan specific file": {
      "value": "Scan specific file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:379"
      ]
    },
    "Scanned": {
      "value": "Scanned",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718"
      ]
    },
    "Scanning": {
      "value": "Scanning",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:67",
        "scripts/remove_test_stubs.py:245",
        "scripts/test_failure_scanner.py:79"
      ]
    },
    "Scanning directory:": {
      "value": "Scanning directory:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:103"
      ]
    },
    "Scanning file:": {
      "value": "Scanning file:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:130"
      ]
    },
    "Scanning for test failures...": {
      "value": "Scanning for test failures...",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:53"
      ]
    },
    "Scanning for test size violations...": {
      "value": "Scanning for test size violations...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:70"
      ]
    },
    "Scanning for test stubs...": {
      "value": "Scanning for test stubs...",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:368"
      ]
    },
    "Scanning for test violations...": {
      "value": "Scanning for test violations...",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:699"
      ]
    },
    "Scanning test files in:": {
      "value": "Scanning test files in:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:209"
      ]
    },
    "Scanning tests...": {
      "value": "Scanning tests...",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:784"
      ]
    },
    "Schedule tech debt sprint to address": {
      "value": "Schedule tech debt sprint to address",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:257"
      ]
    },
    "Script to add pytest markers to test files based on their dependencies": {
      "value": "Script to add pytest markers to test files based on their dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:2"
      ]
    },
    "Script to fix common syntax errors in test files": {
      "value": "Script to fix common syntax errors in test files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:2"
      ]
    },
    "Script to standardize L3 test file naming convention\nRenames test_*_l3.py files to test_*.py and updates references": {
      "value": "Script to standardize L3 test file naming convention\nRenames test_*_l3.py files to test_*.py and updates references",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:2"
      ]
    },
    "Scripts": {
      "value": "Scripts",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:134",
        "scripts/generate_test_audit.py:27",
        "scripts/test_exclusion_check.py:22"
      ]
    },
    "Searched locations:": {
      "value": "Searched locations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:120"
      ]
    },
    "Second allocation failed:": {
      "value": "Second allocation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:168"
      ]
    },
    "Second session state isolation should succeed": {
      "value": "Second session state isolation should succeed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:197"
      ]
    },
    "Secret Access": {
      "value": "Secret Access",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:236"
      ]
    },
    "Secret Manager": {
      "value": "Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:112",
        "scripts/test_staging_config.py:127",
        "scripts/test_staging_config.py:136"
      ]
    },
    "Secret Manager Issues:": {
      "value": "Secret Manager Issues:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:220"
      ]
    },
    "Secret access test failed:": {
      "value": "Secret access test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:171"
      ]
    },
    "Secret management check failed:": {
      "value": "Secret management check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:179"
      ]
    },
    "Secret validation failed:": {
      "value": "Secret validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:172"
      ]
    },
    "SecretManager": {
      "value": "SecretManager",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:270",
        "scripts/test_secret_manager_builder_critical.py:402",
        "scripts/test_secret_manager_builder_critical.py:590"
      ]
    },
    "SecretManager (FAILED)": {
      "value": "SecretManager (FAILED)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:301"
      ]
    },
    "SecretManager failed to load:": {
      "value": "SecretManager failed to load:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:299"
      ]
    },
    "SecretManager with GCP integration": {
      "value": "SecretManager with GCP integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:291"
      ]
    },
    "Secrets failed to load": {
      "value": "Secrets failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:66"
      ]
    },
    "Security issue: Cannot use wildcard origin with credentials": {
      "value": "Security issue: Cannot use wildcard origin with credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:253"
      ]
    },
    "Security level:": {
      "value": "Security level:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:178"
      ]
    },
    "Security validation tests": {
      "value": "Security validation tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:105"
      ]
    },
    "Security violations:": {
      "value": "Security violations:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:520"
      ]
    },
    "See": {
      "value": "See",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:392"
      ]
    },
    "Sending test message:": {
      "value": "Sending test message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:34",
        "scripts/test_websocket_manual.py:85"
      ]
    },
    "Service '": {
      "value": "Service '",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:463"
      ]
    },
    "Service Coordination Fix Validation": {
      "value": "Service Coordination Fix Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:405"
      ]
    },
    "Service Initialization Order": {
      "value": "Service Initialization Order",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:237"
      ]
    },
    "Service URL:": {
      "value": "Service URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:420"
      ]
    },
    "Service URLs:": {
      "value": "Service URLs:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:92"
      ]
    },
    "Service count": {
      "value": "Service count",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:359"
      ]
    },
    "Service discovery failed with retry logic": {
      "value": "Service discovery failed with retry logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:219"
      ]
    },
    "Service discovery timing fixes working correctly": {
      "value": "Service discovery timing fixes working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:222"
      ]
    },
    "Service discovery timing test failed:": {
      "value": "Service discovery timing test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:226"
      ]
    },
    "Service instances tested:": {
      "value": "Service instances tested:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:517"
      ]
    },
    "Service should be ready after marking": {
      "value": "Service should be ready after marking",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:147"
      ]
    },
    "Service should not be ready initially": {
      "value": "Service should not be ready initially",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:132"
      ]
    },
    "Service should not be ready while initializing": {
      "value": "Service should not be ready while initializing",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:136"
      ]
    },
    "Service should not be ready while starting": {
      "value": "Service should not be ready while starting",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:140"
      ]
    },
    "Service temporarily unavailable": {
      "value": "Service temporarily unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:126"
      ]
    },
    "Service token decoded successfully:": {
      "value": "Service token decoded successfully:",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:42"
      ]
    },
    "Service token:": {
      "value": "Service token:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:59",
        "scripts/test_jwt_fix.py:36"
      ]
    },
    "Service-to-service authentication secret": {
      "value": "Service-to-service authentication secret",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:93"
      ]
    },
    "Services Analyzed: 3": {
      "value": "Services Analyzed: 3",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:359"
      ]
    },
    "Services are ready for testing!": {
      "value": "Services are ready for testing!",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:206"
      ]
    },
    "Services available for Cypress tests": {
      "value": "Services available for Cypress tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:572"
      ]
    },
    "Services got same port - conflict not prevented": {
      "value": "Services got same port - conflict not prevented",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:171"
      ]
    },
    "Session": {
      "value": "Session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:196"
      ]
    },
    "Session ID should be regenerated": {
      "value": "Session ID should be regenerated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:156"
      ]
    },
    "Session Persistence": {
      "value": "Session Persistence",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:349"
      ]
    },
    "Session Test Data Factory\nCreates test sessions with proper expiration and metadata.\nSupports both active and expired sessions for comprehensive testing.": {
      "value": "Session Test Data Factory\nCreates test sessions with proper expiration and metadata.\nSupports both active and expired sessions for comprehensive testing.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:1"
      ]
    },
    "Session activity tracking verified": {
      "value": "Session activity tracking verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:274"
      ]
    },
    "Session cleanup test - potential asyncio event loop issues": {
      "value": "Session cleanup test - potential asyncio event loop issues",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:86"
      ]
    },
    "Session expiration must be after creation time": {
      "value": "Session expiration must be after creation time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:132"
      ]
    },
    "Session expired": {
      "value": "Session expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:200"
      ]
    },
    "Session fingerprint mismatch": {
      "value": "Session fingerprint mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:93"
      ]
    },
    "Session hijacking prevention verified": {
      "value": "Session hijacking prevention verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:110"
      ]
    },
    "Session invalidation cascade verified": {
      "value": "Session invalidation cascade verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:335"
      ]
    },
    "Session mismatch should be blocked": {
      "value": "Session mismatch should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:58"
      ]
    },
    "Session must be invalid after logout": {
      "value": "Session must be invalid after logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:99"
      ]
    },
    "Session must persist through service restart": {
      "value": "Session must persist through service restart",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:35"
      ]
    },
    "Session must work during database failover": {
      "value": "Session must work during database failover",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:54"
      ]
    },
    "Session not flagged as high risk": {
      "value": "Session not flagged as high risk",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:272"
      ]
    },
    "Session not found or expired": {
      "value": "Session not found or expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:163",
        "auth_service/tests/test_session_security_cycles_36_40.py:312"
      ]
    },
    "Session timeout enforcement verified": {
      "value": "Session timeout enforcement verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:208"
      ]
    },
    "Session updates must sync within 2 seconds": {
      "value": "Session updates must sync within 2 seconds",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:81"
      ]
    },
    "Session.": {
      "value": "Session.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:202"
      ]
    },
    "SessionFactory": {
      "value": "SessionFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:15"
      ]
    },
    "Set DATABASE_URL in .env.test": {
      "value": "Set DATABASE_URL in .env.test",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:151"
      ]
    },
    "Set GEMINI_API_KEY from your .env file or disable real LLM testing": {
      "value": "Set GEMINI_API_KEY from your .env file or disable real LLM testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:136"
      ]
    },
    "Set up ACTUAL staging credentials from Secret Manager": {
      "value": "Set up ACTUAL staging credentials from Secret Manager",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:48"
      ]
    },
    "Set up minimal staging environment variables": {
      "value": "Set up minimal staging environment variables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:49"
      ]
    },
    "Set up staging environment variables": {
      "value": "Set up staging environment variables",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:45"
      ]
    },
    "Setup E2E Test Ports for Docker and Local Testing\n\nThis script ensures E2E tests use the correct ports based on the execution environment.\nIt detects whether tests are running locally, in Docker, or in CI and configures\nports accordingly.\n\nBVJ:\n- Segment: Platform/Internal\n- Business Goal: Ensure reliable test execution\n- Value Impact: Prevents port conflicts and test failures\n- Strategic Impact: Enables parallel testing and CI/CD reliability": {
      "value": "Setup E2E Test Ports for Docker and Local Testing\n\nThis script ensures E2E tests use the correct ports based on the execution environment.\nIt detects whether tests are running locally, in Docker, or in CI and configures\nports accordingly.\n\nBVJ:\n- Segment: Platform/Internal\n- Business Goal: Ensure reliable test execution\n- Value Impact: Prevents port conflicts and test failures\n- Strategic Impact: Enables parallel testing and CI/CD reliability",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:2"
      ]
    },
    "Setup E2E test ports": {
      "value": "Setup E2E test ports",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:48"
      ]
    },
    "Setup and validate test environment": {
      "value": "Setup and validate test environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:345"
      ]
    },
    "Setup test accounts for staging environment testing.\nThis script creates test accounts with pre-configured OAuth tokens for agent testing.": {
      "value": "Setup test accounts for staging environment testing.\nThis script creates test accounts with pre-configured OAuth tokens for agent testing.",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:2"
      ]
    },
    "Severity:": {
      "value": "Severity:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:331"
      ]
    },
    "Short time span": {
      "value": "Short time span",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:304",
        "scripts/test_data_validator_backup.py:574"
      ]
    },
    "Should accept JSON output format": {
      "value": "Should accept JSON output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:170"
      ]
    },
    "Should accept table output format (default)": {
      "value": "Should accept table output format (default)",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:162"
      ]
    },
    "Should be ALLOWED:": {
      "value": "Should be ALLOWED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:75",
        "scripts/test_cors_ssot_compliance.py:121"
      ]
    },
    "Should be BLOCKED:": {
      "value": "Should be BLOCKED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:83",
        "scripts/test_cors_ssot_compliance.py:129"
      ]
    },
    "Should fail gracefully when missing required arguments": {
      "value": "Should fail gracefully when missing required arguments",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:96"
      ]
    },
    "Should fail gracefully with invalid run ID": {
      "value": "Should fail gracefully with invalid run ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:149"
      ]
    },
    "Should fail gracefully with invalid token": {
      "value": "Should fail gracefully with invalid token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:127"
      ]
    },
    "Should fail gracefully with non-existent repository": {
      "value": "Should fail gracefully with non-existent repository",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:140"
      ]
    },
    "Should fail when --wait-for-completion used without --workflow-name": {
      "value": "Should fail when --wait-for-completion used without --workflow-name",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:96",
        "scripts/test_verify_workflow_status_corrected.py:105"
      ]
    },
    "Should fail when missing required arguments": {
      "value": "Should fail when missing required arguments",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:89"
      ]
    },
    "Should fail when no GitHub token provided": {
      "value": "Should fail when no GitHub token provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:118"
      ]
    },
    "Should fail when no token provided": {
      "value": "Should fail when no token provided",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:105"
      ]
    },
    "Should fail with invalid token": {
      "value": "Should fail with invalid token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:112"
      ]
    },
    "Should fail with non-existent repository": {
      "value": "Should fail with non-existent repository",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:121"
      ]
    },
    "Should fail with non-existent workflow": {
      "value": "Should fail with non-existent workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:130"
      ]
    },
    "Should fail:": {
      "value": "Should fail:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:178",
        "scripts/test_error_monitor_logic.py:202"
      ]
    },
    "Should have 1 pre-deployment error": {
      "value": "Should have 1 pre-deployment error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:223"
      ]
    },
    "Should have 2 post-deployment errors": {
      "value": "Should have 2 post-deployment errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:224"
      ]
    },
    "Should return 503 for SSL certificate issues, got": {
      "value": "Should return 503 for SSL certificate issues, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:381"
      ]
    },
    "Show detailed output for each import": {
      "value": "Show detailed output for each import",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:50"
      ]
    },
    "Show detailed real e2e test information": {
      "value": "Show detailed real e2e test information",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:167"
      ]
    },
    "Show historical category statistics": {
      "value": "Show historical category statistics",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1056"
      ]
    },
    "Show service status": {
      "value": "Show service status",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:179"
      ]
    },
    "Show slowest tests": {
      "value": "Show slowest tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:505"
      ]
    },
    "Show status of test services.": {
      "value": "Show status of test services.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:87"
      ]
    },
    "Show warning messages": {
      "value": "Show warning messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:511"
      ]
    },
    "Show what would be changed without modifying files": {
      "value": "Show what would be changed without modifying files",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:349"
      ]
    },
    "Show what would be done without making changes": {
      "value": "Show what would be done without making changes",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234"
      ]
    },
    "Similar:": {
      "value": "Similar:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:659"
      ]
    },
    "Simple WebSocket Connection Test\n\nTests basic WebSocket connectivity to validate CORS configuration.": {
      "value": "Simple WebSocket Connection Test\n\nTests basic WebSocket connectivity to validate CORS configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:2"
      ]
    },
    "Simple frontend test runner": {
      "value": "Simple frontend test runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:74"
      ]
    },
    "Simple frontend test runner for Netra AI Platform\nMinimal dependencies for use by test_runner.py": {
      "value": "Simple frontend test runner for Netra AI Platform\nMinimal dependencies for use by test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:2"
      ]
    },
    "Simple functional test to verify WebSocket works in DEV MODE.\n\nThis script tests the actual WebSocket connection functionality by:\n1. Starting the development server\n2. Testing secure WebSocket connection\n3. Verifying bidirectional message flow\n4. Testing authentication and CORS\n5. Cleaning up resources": {
      "value": "Simple functional test to verify WebSocket works in DEV MODE.\n\nThis script tests the actual WebSocket connection functionality by:\n1. Starting the development server\n2. Testing secure WebSocket connection\n3. Verifying bidirectional message flow\n4. Testing authentication and CORS\n5. Cleaning up resources",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:2"
      ]
    },
    "Simple test fix loop - runs tests and fixes issues iteratively.": {
      "value": "Simple test fix loop - runs tests and fixes issues iteratively.",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:2"
      ]
    },
    "Simple test for refresh endpoint field naming without database dependencies.": {
      "value": "Simple test for refresh endpoint field naming without database dependencies.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:1"
      ]
    },
    "Simple test script to verify service startup orchestration.\nTests the core startup sequence without complex integration.": {
      "value": "Simple test script to verify service startup orchestration.\nTests the core startup sequence without complex integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:2"
      ]
    },
    "Simple test to validate Auth service database URL construction for staging.\n\nThis test focuses on URL construction logic rather than actual connections,\nsince Unix socket connections cannot be tested on Windows.": {
      "value": "Simple test to validate Auth service database URL construction for staging.\n\nThis test focuses on URL construction logic rather than actual connections,\nsince Unix socket connections cannot be tested on Windows.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:1"
      ]
    },
    "SimpleAgent": {
      "value": "SimpleAgent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:157"
      ]
    },
    "Simulate tests without real connections": {
      "value": "Simulate tests without real connections",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:288"
      ]
    },
    "Size violations addressed:": {
      "value": "Size violations addressed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:289"
      ]
    },
    "Skip environment setup (use existing environment variables)": {
      "value": "Skip environment setup (use existing environment variables)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:87"
      ]
    },
    "Skipped:": {
      "value": "Skipped:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:356"
      ]
    },
    "Skipping": {
      "value": "Skipping",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:815"
      ]
    },
    "Slow tests that may take longer to complete": {
      "value": "Slow tests that may take longer to complete",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:99"
      ]
    },
    "Solution: SecretManagerBuilder with unified pattern": {
      "value": "Solution: SecretManagerBuilder with unified pattern",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:537"
      ]
    },
    "Some finding": {
      "value": "Some finding",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:384",
        "scripts/test_data_validator_backup.py:397",
        "scripts/test_data_validator_backup.py:414"
      ]
    },
    "Some recommendation": {
      "value": "Some recommendation",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:372",
        "scripts/test_data_validator_backup.py:398",
        "scripts/test_data_validator_backup.py:415"
      ]
    },
    "Some services are not available!": {
      "value": "Some services are not available!",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:110"
      ]
    },
    "Some tests failed - see details above": {
      "value": "Some tests failed - see details above",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:313"
      ]
    },
    "Some tests failed. Check the output above.": {
      "value": "Some tests failed. Check the output above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:98"
      ]
    },
    "Specific files to check (default: all test files)": {
      "value": "Specific files to check (default: all test files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:265"
      ]
    },
    "Specific module to test (e.g., netra_backend.app.services)": {
      "value": "Specific module to test (e.g., netra_backend.app.services)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:46"
      ]
    },
    "Specific test files or directories": {
      "value": "Specific test files or directories",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:367"
      ]
    },
    "Specific test files or directories to run": {
      "value": "Specific test files or directories to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:480"
      ]
    },
    "Specific test files or patterns to run": {
      "value": "Specific test files or patterns to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:387"
      ]
    },
    "Split": {
      "value": "Split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:362",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "Split '": {
      "value": "Split '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:331"
      ]
    },
    "Split from": {
      "value": "Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:556"
      ]
    },
    "Split into": {
      "value": "Split into",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:113",
        "scripts/compliance/test_limits_checker.py:157",
        "scripts/compliance/test_size_validator.py:194"
      ]
    },
    "Split into multiple focused test functions or extract helper methods": {
      "value": "Split into multiple focused test functions or extract helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:233"
      ]
    },
    "Split large test files into smaller, focused test modules": {
      "value": "Split large test files into smaller, focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:223"
      ]
    },
    "Split large test functions into smaller, focused tests": {
      "value": "Split large test functions into smaller, focused tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:450"
      ]
    },
    "Splitting": {
      "value": "Splitting",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:259"
      ]
    },
    "Splitting suggestions for": {
      "value": "Splitting suggestions for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:719"
      ]
    },
    "Splitting suggestions:": {
      "value": "Splitting suggestions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:48"
      ]
    },
    "Staging": {
      "value": "Staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:202",
        "scripts/test_gtm_loading.py:100"
      ]
    },
    "Staging CORS:": {
      "value": "Staging CORS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:91"
      ]
    },
    "Staging Configuration Test": {
      "value": "Staging Configuration Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:27"
      ]
    },
    "Staging Environment": {
      "value": "Staging Environment",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:142"
      ]
    },
    "Staging Environment Test Script\nVerifies that the staging environment is properly configured and all components are communicating": {
      "value": "Staging Environment Test Script\nVerifies that the staging environment is properly configured and all components are communicating",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:2"
      ]
    },
    "Staging SSL Configuration": {
      "value": "Staging SSL Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:266"
      ]
    },
    "Staging Test Agent": {
      "value": "Staging Test Agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:108"
      ]
    },
    "Staging environment specific tests": {
      "value": "Staging environment specific tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:94"
      ]
    },
    "Staging should not allow dev login": {
      "value": "Staging should not allow dev login",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:147"
      ]
    },
    "Staging should not allow mock auth": {
      "value": "Staging should not allow mock auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:148"
      ]
    },
    "Standalone Tests": {
      "value": "Standalone Tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:150",
        "scripts/compliance/test_fixer.py:151",
        "scripts/compliance/test_fixer.py:152"
      ]
    },
    "Standard pytest": {
      "value": "Standard pytest",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:105"
      ]
    },
    "Standard rename failed:": {
      "value": "Standard rename failed:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:151"
      ]
    },
    "Start all services using dev launcher.": {
      "value": "Start all services using dev launcher.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:111"
      ]
    },
    "Start full E2E service stack (backend, auth)": {
      "value": "Start full E2E service stack (backend, auth)",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:161"
      ]
    },
    "Start test services": {
      "value": "Start test services",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:157"
      ]
    },
    "Start test services for frontend real service testing": {
      "value": "Start test services for frontend real service testing",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:169"
      ]
    },
    "Start test services for frontend real service testing.\n\nThis script manages Docker containers and local services needed for\nrunning frontend tests against real backend services.": {
      "value": "Start test services for frontend real service testing.\n\nThis script manages Docker containers and local services needed for\nrunning frontend tests against real backend services.",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:2"
      ]
    },
    "Start test services.": {
      "value": "Start test services.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:37"
      ]
    },
    "Start the development server.": {
      "value": "Start the development server.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:48"
      ]
    },
    "Started at:": {
      "value": "Started at:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:238"
      ]
    },
    "Starting": {
      "value": "Starting",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:142"
      ]
    },
    "Starting 100 test iterations...": {
      "value": "Starting 100 test iterations...",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:101"
      ]
    },
    "Starting CORS test...": {
      "value": "Starting CORS test...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:73"
      ]
    },
    "Starting Docker services...": {
      "value": "Starting Docker services...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:42"
      ]
    },
    "Starting E2E test import fixing...": {
      "value": "Starting E2E test import fixing...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:192"
      ]
    },
    "Starting WebSocket DEV MODE functional tests...": {
      "value": "Starting WebSocket DEV MODE functional tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:260"
      ]
    },
    "Starting WebSocket connection tests...": {
      "value": "Starting WebSocket connection tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:175"
      ]
    },
    "Starting Workflow Status Verification Tests": {
      "value": "Starting Workflow Status Verification Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:196"
      ]
    },
    "Starting automated test fix loop...": {
      "value": "Starting automated test fix loop...",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:96"
      ]
    },
    "Starting comprehensive fake test scan...": {
      "value": "Starting comprehensive fake test scan...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:51"
      ]
    },
    "Starting comprehensive test import fix...": {
      "value": "Starting comprehensive test import fix...",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:264"
      ]
    },
    "Starting database test...": {
      "value": "Starting database test...",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:19"
      ]
    },
    "Starting development server...": {
      "value": "Starting development server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:50"
      ]
    },
    "Starting local backend services...": {
      "value": "Starting local backend services...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:95"
      ]
    },
    "Starting optimized execution of": {
      "value": "Starting optimized execution of",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:125"
      ]
    },
    "Starting optimized test execution...": {
      "value": "Starting optimized test execution...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:423"
      ]
    },
    "Starting service coordination fix validation": {
      "value": "Starting service coordination fix validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:39"
      ]
    },
    "Starting services for E2E tests...": {
      "value": "Starting services for E2E tests...",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:209"
      ]
    },
    "Starting test import alignment...": {
      "value": "Starting test import alignment...",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:41"
      ]
    },
    "Starting test overlap analysis for": {
      "value": "Starting test overlap analysis for",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:71"
      ]
    },
    "Starting test uvicorn server...": {
      "value": "Starting test uvicorn server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:73"
      ]
    },
    "Startup Test Executor\nHandles execution of backend, frontend, and E2E tests": {
      "value": "Startup Test Executor\nHandles execution of backend, frontend, and E2E tests",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:2"
      ]
    },
    "Startup Timing": {
      "value": "Startup Timing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:240"
      ]
    },
    "Startup took": {
      "value": "Startup took",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:206"
      ]
    },
    "State parameter should be stored successfully": {
      "value": "State parameter should be stored successfully",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:40"
      ]
    },
    "State replay attack should be blocked": {
      "value": "State replay attack should be blocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:48"
      ]
    },
    "State:": {
      "value": "State:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:138"
      ]
    },
    "Static Assets": {
      "value": "Static Assets",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:152"
      ]
    },
    "Static assets are being served": {
      "value": "Static assets are being served",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:136"
      ]
    },
    "Static assets returned status": {
      "value": "Static assets returned status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:138"
      ]
    },
    "Static assets test failed:": {
      "value": "Static assets test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:140"
      ]
    },
    "Status": {
      "value": "Status",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:371",
        "scripts/test_oauth_local.py:69"
      ]
    },
    "Status:": {
      "value": "Status:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:76",
        "scripts/debug_cors_test.py:95",
        "scripts/test_and_fix_cors.py:121",
        "scripts/test_and_fix_cors.py:140",
        "scripts/test_cors_issue.py:21",
        "scripts/test_cors_issue.py:42",
        "scripts/test_cors_issue.py:64",
        "scripts/test_oauth_local.py:373",
        "scripts/test_staging_jwt_validation.py:67",
        "scripts/test_staging_jwt_validation.py:92"
      ]
    },
    "Status: 401 Unauthorized (expected for invalid token)": {
      "value": "Status: 401 Unauthorized (expected for invalid token)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:39",
        "scripts/test_staging_refresh_format.py:61",
        "scripts/test_staging_refresh_format.py:85"
      ]
    },
    "Stderr:": {
      "value": "Stderr:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:133"
      ]
    },
    "Stdout:": {
      "value": "Stdout:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:132"
      ]
    },
    "Step 1: Running smoke, unit, and critical tests...": {
      "value": "Step 1: Running smoke, unit, and critical tests...",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:107"
      ]
    },
    "Step 2: Attempting to fix:": {
      "value": "Step 2: Attempting to fix:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:122"
      ]
    },
    "Stop auth service completely to simulate it being down": {
      "value": "Stop auth service completely to simulate it being down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:506"
      ]
    },
    "Stop on first test failure": {
      "value": "Stop on first test failure",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:489",
        "scripts/unified_test_runner.py:990"
      ]
    },
    "Stop services and clean all data": {
      "value": "Stop services and clean all data",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:175"
      ]
    },
    "Stop test services": {
      "value": "Stop test services",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:170"
      ]
    },
    "Stop test services.": {
      "value": "Stop test services.",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:72"
      ]
    },
    "Stopping development server...": {
      "value": "Stopping development server...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:239"
      ]
    },
    "Stopping execution:": {
      "value": "Stopping execution:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:348"
      ]
    },
    "Strategies:": {
      "value": "Strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:92",
        "scripts/compliance/test_refactor_helper.py:710"
      ]
    },
    "Stress tests with high load or concurrency": {
      "value": "Stress tests with high load or concurrency",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:100"
      ]
    },
    "Strict mode - fail on any violations": {
      "value": "Strict mode - fail on any violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:525"
      ]
    },
    "Subprotocol:": {
      "value": "Subprotocol:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:69"
      ]
    },
    "Subprotocols:": {
      "value": "Subprotocols:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:53"
      ]
    },
    "Success Rate:": {
      "value": "Success Rate:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:123",
        "scripts/batch_fix_and_test.py:133",
        "scripts/final_test_status_check.py:102",
        "scripts/test_backend_optimized.py:336",
        "scripts/test_coordination_fixes.py:382",
        "scripts/test_example_message_flow.py:327",
        "scripts/test_staging_deployment.py:218",
        "scripts/test_verify_workflow_status_corrected.py:197",
        "scripts/test_websocket_cors_comprehensive.py:301",
        "scripts/test_websocket_simple.py:91"
      ]
    },
    "Success Rate: N/A": {
      "value": "Success Rate: N/A",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:329"
      ]
    },
    "Success rate:": {
      "value": "Success rate:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:143",
        "scripts/comprehensive_test_fixer.py:396"
      ]
    },
    "Successful renames:": {
      "value": "Successful renames:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:283"
      ]
    },
    "Successful test runs:": {
      "value": "Successful test runs:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:135",
        "scripts/automated_test_fix_loop.py:142"
      ]
    },
    "Successful:": {
      "value": "Successful:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:90"
      ]
    },
    "Successfully fixed:": {
      "value": "Successfully fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:392"
      ]
    },
    "Suggested refactoring strategies:": {
      "value": "Suggested refactoring strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:210"
      ]
    },
    "Suggested splitting strategies:": {
      "value": "Suggested splitting strategies:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:194"
      ]
    },
    "Suggestion: Extract helper methods or split test logic": {
      "value": "Suggestion: Extract helper methods or split test logic",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:846"
      ]
    },
    "Suggestion: Focus on core unit tests that test business logic": {
      "value": "Suggestion: Focus on core unit tests that test business logic",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:79"
      ]
    },
    "Suite Breakdown:": {
      "value": "Suite Breakdown:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:332"
      ]
    },
    "Summary of errors:": {
      "value": "Summary of errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:121"
      ]
    },
    "Summary:": {
      "value": "Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:225",
        "scripts/apply_fast_test_decorators.py:181",
        "scripts/fix_all_test_issues.py:286",
        "scripts/fix_authentication_test_tokens.py:166",
        "scripts/fix_test_import_order.py:107",
        "scripts/iterative_test_fix_loop.py:163",
        "scripts/remove_test_stubs.py:374",
        "scripts/test_cors.py:542",
        "scripts/test_verify_workflow_status.py:223"
      ]
    },
    "Supports": {
      "value": "Supports",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:500"
      ]
    },
    "Sync URL has SSL:": {
      "value": "Sync URL has SSL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:147"
      ]
    },
    "Sync URL:": {
      "value": "Sync URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:98",
        "scripts/test_database_url_builder_comprehensive.py:49",
        "scripts/test_database_url_builder_comprehensive.py:274",
        "scripts/test_ssl_certificates_staging.py:140",
        "scripts/test_ssl_certificates_staging.py:236"
      ]
    },
    "Syntax error in": {
      "value": "Syntax error in",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:356",
        "scripts/compliance/test_size_validator.py:201"
      ]
    },
    "Syntax error:": {
      "value": "Syntax error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:142",
        "scripts/compliance/real_test_requirements_enforcer.py:201",
        "scripts/compliance/real_test_validator.py:97",
        "scripts/compliance/test_refactor_helper.py:82"
      ]
    },
    "Syntax errors fixed:": {
      "value": "Syntax errors fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:288"
      ]
    },
    "Syntax fixes applied:": {
      "value": "Syntax fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:429"
      ]
    },
    "SyntaxError": {
      "value": "SyntaxError",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:28",
        "scripts/simple_test_fix_loop.py:28"
      ]
    },
    "System Startup Test Runner\nModular test runner for system startup and E2E tests\nLegacy entry point - redirects to new modular implementation": {
      "value": "System Startup Test Runner\nModular test runner for system startup and E2E tests\nLegacy entry point - redirects to new modular implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_system_startup.py:2"
      ]
    },
    "System should be healthy despite degraded services": {
      "value": "System should be healthy despite degraded services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:268"
      ]
    },
    "TCP": {
      "value": "TCP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "TCP Async SSL URL:": {
      "value": "TCP Async SSL URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:109"
      ]
    },
    "TCP Async URL:": {
      "value": "TCP Async URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:107"
      ]
    },
    "TCP Configuration": {
      "value": "TCP Configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:306"
      ]
    },
    "TCP Sync SSL URL:": {
      "value": "TCP Sync SSL URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:110"
      ]
    },
    "TCP Sync URL:": {
      "value": "TCP Sync URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:108"
      ]
    },
    "TCP URL with ssl for psycopg2 conversion": {
      "value": "TCP URL with ssl for psycopg2 conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:154"
      ]
    },
    "TCP URL with sslmode for asyncpg conversion": {
      "value": "TCP URL with sslmode for asyncpg conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:150"
      ]
    },
    "TCP config available:": {
      "value": "TCP config available:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:83"
      ]
    },
    "TCP connection mode": {
      "value": "TCP connection mode",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:249"
      ]
    },
    "TCP staging URL (should have SSL parameters)": {
      "value": "TCP staging URL (should have SSL parameters)",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:114"
      ]
    },
    "TEST ALIGNMENT SUMMARY": {
      "value": "TEST ALIGNMENT SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:425"
      ]
    },
    "TEST CATEGORIES & COUNTS": {
      "value": "TEST CATEGORIES & COUNTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:100"
      ]
    },
    "TEST COMPLETE": {
      "value": "TEST COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:168"
      ]
    },
    "TEST COMPLIANCE REPORT": {
      "value": "TEST COMPLIANCE REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:157"
      ]
    },
    "TEST ENVIRONMENT VALIDATION REPORT": {
      "value": "TEST ENVIRONMENT VALIDATION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:265"
      ]
    },
    "TEST EXECUTION SUMMARY": {
      "value": "TEST EXECUTION SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:890"
      ]
    },
    "TEST FILE SIZE VIOLATIONS (": {
      "value": "TEST FILE SIZE VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:75"
      ]
    },
    "TEST FUNCTION VIOLATIONS (": {
      "value": "TEST FUNCTION VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:94"
      ]
    },
    "TEST LIMITS VIOLATIONS REPORT": {
      "value": "TEST LIMITS VIOLATIONS REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:34"
      ]
    },
    "TEST MAPPING TO ORIGINAL ISSUES:": {
      "value": "TEST MAPPING TO ORIGINAL ISSUES:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:391"
      ]
    },
    "TEST OVERLAP ANALYSIS COMPLETE": {
      "value": "TEST OVERLAP ANALYSIS COMPLETE",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:654"
      ]
    },
    "TEST PROCESS CLEANUP": {
      "value": "TEST PROCESS CLEANUP",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:97"
      ]
    },
    "TEST RESULTS": {
      "value": "TEST RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:333"
      ]
    },
    "TEST RESULTS:": {
      "value": "TEST RESULTS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:301"
      ]
    },
    "TEST SIZE COMPLIANCE REPORT": {
      "value": "TEST SIZE COMPLIANCE REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:416"
      ]
    },
    "TEST SIZE FIXING SUMMARY": {
      "value": "TEST SIZE FIXING SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:746"
      ]
    },
    "TEST SIZE LIMITS ENFORCEMENT SYSTEM DEMONSTRATION": {
      "value": "TEST SIZE LIMITS ENFORCEMENT SYSTEM DEMONSTRATION",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:201"
      ]
    },
    "TEST STUB DETECTION REPORT": {
      "value": "TEST STUB DETECTION REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:307"
      ]
    },
    "TEST SUMMARY": {
      "value": "TEST SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:330",
        "scripts/test_log_introspection.py:412",
        "scripts/test_staging_auth_e2e.py:363",
        "scripts/test_staging_deployment.py:213",
        "scripts/test_staging_env.py:186",
        "scripts/test_staging_login_automated.py:333",
        "scripts/test_verify_workflow_status_corrected.py:188"
      ]
    },
    "TEST TYPE SUMMARY": {
      "value": "TEST TYPE SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:113"
      ]
    },
    "TESTING": {
      "value": "TESTING",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:57",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:113",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:171",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:367",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:426",
        "scripts/test_backend.py:78",
        "scripts/test_environment_detection.py:19",
        "scripts/unified_test_runner.py:235"
      ]
    },
    "TESTING ALEMBIC CONFIGURATION": {
      "value": "TESTING ALEMBIC CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:91"
      ]
    },
    "TESTING AUTH DATABASE ENGINE CREATION": {
      "value": "TESTING AUTH DATABASE ENGINE CREATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:118"
      ]
    },
    "TESTING AUTH DATABASE SESSION LIFECYCLE": {
      "value": "TESTING AUTH DATABASE SESSION LIFECYCLE",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:297"
      ]
    },
    "TESTING AUTH DATABASE STAGING INTEGRATION": {
      "value": "TESTING AUTH DATABASE STAGING INTEGRATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:215"
      ]
    },
    "TESTING AUTH DATABASE URL CONVERSION": {
      "value": "TESTING AUTH DATABASE URL CONVERSION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:68"
      ]
    },
    "TESTING AUTH DATABASE URL VALIDATION": {
      "value": "TESTING AUTH DATABASE URL VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:161"
      ]
    },
    "TESTING AUTH SERVICE DATABASE MANAGER IMPORT": {
      "value": "TESTING AUTH SERVICE DATABASE MANAGER IMPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:29"
      ]
    },
    "TESTING CLOUD SQL CONFIGURATION": {
      "value": "TESTING CLOUD SQL CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:16"
      ]
    },
    "TESTING CONNECTION POOLING URL SCENARIOS": {
      "value": "TESTING CONNECTION POOLING URL SCENARIOS",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:256"
      ]
    },
    "TESTING DATABASE MIGRATION COMMANDS": {
      "value": "TESTING DATABASE MIGRATION COMMANDS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:217"
      ]
    },
    "TESTING DRIVER URL FORMATTING": {
      "value": "TESTING DRIVER URL FORMATTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:117"
      ]
    },
    "TESTING MIGRATION SAFETY CHECKS": {
      "value": "TESTING MIGRATION SAFETY CHECKS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:177"
      ]
    },
    "TESTING MIGRATION URL GENERATION": {
      "value": "TESTING MIGRATION URL GENERATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:29"
      ]
    },
    "TESTING MODULE:": {
      "value": "TESTING MODULE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:75"
      ]
    },
    "TESTING SSL CERTIFICATE VALIDATION": {
      "value": "TESTING SSL CERTIFICATE VALIDATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:30"
      ]
    },
    "TESTING SSL PARAMETER HANDLING": {
      "value": "TESTING SSL PARAMETER HANDLING",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:140"
      ]
    },
    "TESTING SSL PARAMETER HANDLING IN URLs": {
      "value": "TESTING SSL PARAMETER HANDLING IN URLs",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:103"
      ]
    },
    "TESTING STAGING DATABASE CONNECTION": {
      "value": "TESTING STAGING DATABASE CONNECTION",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:32"
      ]
    },
    "TESTING STAGING SSL CONFIGURATION WITH REAL SECRETS": {
      "value": "TESTING STAGING SSL CONFIGURATION WITH REAL SECRETS",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:200"
      ]
    },
    "TESTING TCP CONFIGURATION": {
      "value": "TESTING TCP CONFIGURATION",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:73"
      ]
    },
    "TESTING URL DRIVER COMPATIBILITY FOR SSL": {
      "value": "TESTING URL DRIVER COMPATIBILITY FOR SSL",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:166"
      ]
    },
    "TESTING VALIDATION EDGE CASES": {
      "value": "TESTING VALIDATION EDGE CASES",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:178"
      ]
    },
    "TESTING | Service startup orchestration...": {
      "value": "TESTING | Service startup orchestration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:21"
      ]
    },
    "TEST_ARCHITECTURE.md": {
      "value": "TEST_ARCHITECTURE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:45"
      ]
    },
    "TEST_DIRECTORIES = {\n    \"unit\": [\"netra_backend/tests/unit\"],\n    \"integration\": [\"netra_backend/tests/integration\"],\n    \"e2e\": [\"netra_backend/tests/e2e\"],\n    \"agents\": [\"netra_backend/tests/agents\"],\n    \"critical\": [\"netra_backend/tests/critical\"],\n    \"routes\": [\"netra_backend/tests/routes\"],\n    \"services\": [\"netra_backend/tests/services\"],\n    \"database\": [\"netra_backend/tests/database\"],\n    \"websocket\": [\"netra_backend/tests/websocket\"],\n    \"auth\": [\"netra_backend/tests/auth_integration\"],\n    \"performance\": [\"netra_backend/tests/performance\"],\n    \"security\": [\"netra_backend/tests/security\"],\n    \"mcp\": [\"netra_backend/tests/mcp\"],\n    \"utils\": [\"netra_backend/tests/utils\"],\n    \"validation\": [\"netra_backend/tests/validation\"],\n    \"config\": [\"netra_backend/tests/config\"],\n    \"startup\": [\"netra_backend/tests/startup\"],\n    \"llm\": [\"netra_backend/tests/llm\"],\n    \"core\": [\"netra_backend/tests/core\"],\n    \"unified_system\": [\"netra_backend/tests/unified_system\"],\n    \"test_framework\": [\"test_framework/tests\"]\n}": {
      "value": "TEST_DIRECTORIES = {\n    \"unit\": [\"netra_backend/tests/unit\"],\n    \"integration\": [\"netra_backend/tests/integration\"],\n    \"e2e\": [\"netra_backend/tests/e2e\"],\n    \"agents\": [\"netra_backend/tests/agents\"],\n    \"critical\": [\"netra_backend/tests/critical\"],\n    \"routes\": [\"netra_backend/tests/routes\"],\n    \"services\": [\"netra_backend/tests/services\"],\n    \"database\": [\"netra_backend/tests/database\"],\n    \"websocket\": [\"netra_backend/tests/websocket\"],\n    \"auth\": [\"netra_backend/tests/auth_integration\"],\n    \"performance\": [\"netra_backend/tests/performance\"],\n    \"security\": [\"netra_backend/tests/security\"],\n    \"mcp\": [\"netra_backend/tests/mcp\"],\n    \"utils\": [\"netra_backend/tests/utils\"],\n    \"validation\": [\"netra_backend/tests/validation\"],\n    \"config\": [\"netra_backend/tests/config\"],\n    \"startup\": [\"netra_backend/tests/startup\"],\n    \"llm\": [\"netra_backend/tests/llm\"],\n    \"core\": [\"netra_backend/tests/core\"],\n    \"unified_system\": [\"netra_backend/tests/unified_system\"],\n    \"test_framework\": [\"test_framework/tests\"]\n}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:244"
      ]
    },
    "TEST_DIRECTORIES\\s*=\\s*\\{[^}]+\\}": {
      "value": "TEST_DIRECTORIES\\s*=\\s*\\{[^}]+\\}",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:242"
      ]
    },
    "TEST_ENV": {
      "value": "TEST_ENV",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:302",
        "scripts/unified_test_runner.py:225",
        "scripts/unified_test_runner.py:791"
      ]
    },
    "TEST_EXECUTION_GUIDE.md": {
      "value": "TEST_EXECUTION_GUIDE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:79"
      ]
    },
    "TEST_HEALTH_METRICS.md": {
      "value": "TEST_HEALTH_METRICS.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:289"
      ]
    },
    "TEST_JWT_SECRET": {
      "value": "TEST_JWT_SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:71"
      ]
    },
    "TEST_MAINTENANCE.md": {
      "value": "TEST_MAINTENANCE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:165"
      ]
    },
    "TEST_MODE": {
      "value": "TEST_MODE",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:158",
        "scripts/unified_test_runner.py:815",
        "scripts/unified_test_runner.py:818"
      ]
    },
    "TEST_ORGANIZATION_AUDIT.md": {
      "value": "TEST_ORGANIZATION_AUDIT.md",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:267"
      ]
    },
    "TEST_PERFORMANCE.md": {
      "value": "TEST_PERFORMANCE.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:222"
      ]
    },
    "TEST_SECRET": {
      "value": "TEST_SECRET",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:110",
        "scripts/test_secret_manager_debug.py:111"
      ]
    },
    "TEST_UTILS IMPORT FIX RESULTS": {
      "value": "TEST_UTILS IMPORT FIX RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:90"
      ]
    },
    "TEST_WRITING_STANDARDS.md": {
      "value": "TEST_WRITING_STANDARDS.md",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:115"
      ]
    },
    "THE MOST CRITICAL REDIS TEST: Configuration consistency across services.\n        \n        This test exposes the core problem: Different services configure Redis differently,\n        leading to inconsistent behavior in staging that becomes production outages.\n        \n        EXPECTED FAILURE: Currently different services use different Redis configuration:\n        - RedisManager: Uses host/port/password individually  \n        - Background Jobs: Use redis_config Dict parameter\n        - Some use REDIS_URL, others build URLs manually\n        - Fallback behavior differs (some allow localhost, others don't)\n        \n        BUSINESS IMPACT OF THIS FAILURE:\n        - $50,000 per Redis-related production incident (3-4 incidents/year)\n        - 40% slower development due to inconsistent debugging\n        - Cache hit rate drops from 85% to 45% during Redis issues\n        - Background job failure rate increases 10x during Redis outages": {
      "value": "THE MOST CRITICAL REDIS TEST: Configuration consistency across services.\n        \n        This test exposes the core problem: Different services configure Redis differently,\n        leading to inconsistent behavior in staging that becomes production outages.\n        \n        EXPECTED FAILURE: Currently different services use different Redis configuration:\n        - RedisManager: Uses host/port/password individually  \n        - Background Jobs: Use redis_config Dict parameter\n        - Some use REDIS_URL, others build URLs manually\n        - Fallback behavior differs (some allow localhost, others don't)\n        \n        BUSINESS IMPACT OF THIS FAILURE:\n        - $50,000 per Redis-related production incident (3-4 incidents/year)\n        - 40% slower development due to inconsistent debugging\n        - Cache hit rate drops from 85% to 45% during Redis issues\n        - Background job failure rate increases 10x during Redis outages",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:67"
      ]
    },
    "TIER COVERAGE:": {
      "value": "TIER COVERAGE:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:740"
      ]
    },
    "TIMEOUT": {
      "value": "TIMEOUT",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:381"
      ]
    },
    "TIMEOUT: Alembic command timed out": {
      "value": "TIMEOUT: Alembic command timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:165"
      ]
    },
    "TOKEN_CREATED": {
      "value": "TOKEN_CREATED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:26",
        "auth_service/tests/factories/audit_factory.py:134"
      ]
    },
    "TOKEN_REFRESHED": {
      "value": "TOKEN_REFRESHED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:27"
      ]
    },
    "TOKEN_REVOKED": {
      "value": "TOKEN_REVOKED",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:28"
      ]
    },
    "TOP OPTIMIZATION RECOMMENDATIONS": {
      "value": "TOP OPTIMIZATION RECOMMENDATIONS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:342"
      ]
    },
    "TOP VALUE TESTS:": {
      "value": "TOP VALUE TESTS:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:753"
      ]
    },
    "TOTAL:": {
      "value": "TOTAL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:121"
      ]
    },
    "TRACEBACK:": {
      "value": "TRACEBACK:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:97",
        "scripts/test_staging_db_direct.py:114"
      ]
    },
    "Tables created in transaction": {
      "value": "Tables created in transaction",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:38"
      ]
    },
    "Tables found after transaction:": {
      "value": "Tables found after transaction:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:50"
      ]
    },
    "Tables found in transaction:": {
      "value": "Tables found in transaction:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:43"
      ]
    },
    "Target URL:": {
      "value": "Target URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:237"
      ]
    },
    "Target for unified builder: <": {
      "value": "Target for unified builder: <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:641"
      ]
    },
    "Target:": {
      "value": "Target:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:182"
      ]
    },
    "Test": {
      "value": "Test",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:124",
        "scripts/business_value_test_index.py:212",
        "scripts/compliance/test_fixer.py:142",
        "scripts/compliance/test_refactor_helper.py:262",
        "scripts/compliance/test_refactor_helper.py:537",
        "scripts/compliance/test_size_validator.py:276",
        "scripts/compliance/test_size_validator.py:278",
        "scripts/fix_all_test_issues.py:156",
        "scripts/test_oauth_local.py:350"
      ]
    },
    "Test '": {
      "value": "Test '",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:358"
      ]
    },
    "Test 1: Testing /ws/test endpoint": {
      "value": "Test 1: Testing /ws/test endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:112"
      ]
    },
    "Test 2: Testing /ws main endpoint": {
      "value": "Test 2: Testing /ws main endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:116"
      ]
    },
    "Test Agent": {
      "value": "Test Agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:90",
        "scripts/test_staging_login_automated.py:55"
      ]
    },
    "Test Agent Initialization - Verify robust startup mechanisms\n\nSimple test to validate that the agent initialization improvements work correctly.\nTests fallback mechanisms, error handling, and graceful degradation.": {
      "value": "Test Agent Initialization - Verify robust startup mechanisms\n\nSimple test to validate that the agent initialization improvements work correctly.\nTests fallback mechanisms, error handling, and graceful degradation.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:1"
      ]
    },
    "Test Auth Service Integration": {
      "value": "Test Auth Service Integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:167"
      ]
    },
    "Test Auth Service Integration\nVerifies that the auth service is properly integrated with backend and frontend": {
      "value": "Test Auth Service Integration\nVerifies that the auth service is properly integrated with backend and frontend",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:2"
      ]
    },
    "Test Auth service with the ACTUAL staging credentials from Secret Manager.\nThis test validates the exact configuration that would be used in production.": {
      "value": "Test Auth service with the ACTUAL staging credentials from Secret Manager.\nThis test validates the exact configuration that would be used in production.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:1"
      ]
    },
    "Test AuthConfig database URL generation.": {
      "value": "Test AuthConfig database URL generation.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:167"
      ]
    },
    "Test CORS configuration": {
      "value": "Test CORS configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:105"
      ]
    },
    "Test CORS configuration.": {
      "value": "Test CORS configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:92"
      ]
    },
    "Test CORS issue with 127.0.0.1 vs localhost.": {
      "value": "Test CORS issue with 127.0.0.1 vs localhost.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:2"
      ]
    },
    "Test CORS preflight (OPTIONS) request.": {
      "value": "Test CORS preflight (OPTIONS) request.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:47"
      ]
    },
    "Test CORS preflight request.": {
      "value": "Test CORS preflight request.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:15",
        "scripts/test_cors.py:70"
      ]
    },
    "Test CORS validation.": {
      "value": "Test CORS validation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:143"
      ]
    },
    "Test CORS with different origins.": {
      "value": "Test CORS with different origins.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:8"
      ]
    },
    "Test ClickHouse connectivity with staging configuration.\n\nThis script verifies that:\n1. Secrets are correctly loaded from GCP Secret Manager\n2. ClickHouse connection can be established with the correct credentials\n3. No placeholder or incorrect references remain": {
      "value": "Test ClickHouse connectivity with staging configuration.\n\nThis script verifies that:\n1. Secrets are correctly loaded from GCP Secret Manager\n2. ClickHouse connection can be established with the correct credentials\n3. No placeholder or incorrect references remain",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:1"
      ]
    },
    "Test Complete!": {
      "value": "Test Complete!",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:302"
      ]
    },
    "Test Compliance Checker\nEnsures test files follow the same quality standards as production code:\n- Maximum 300 lines per file\n- Maximum 8 lines per function\n- No mock component implementations inside test files": {
      "value": "Test Compliance Checker\nEnsures test files follow the same quality standards as production code:\n- Maximum 300 lines per file\n- Maximum 8 lines per function\n- No mock component implementations inside test files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:2"
      ]
    },
    "Test Configuration:": {
      "value": "Test Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:363"
      ]
    },
    "Test Endpoint (/ws/test):": {
      "value": "Test Endpoint (/ws/test):",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:123"
      ]
    },
    "Test Environment Setup and Validation Script\nEnsures proper test environment configuration for all services": {
      "value": "Test Environment Setup and Validation Script\nEnsures proper test environment configuration for all services",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:2"
      ]
    },
    "Test File Size Violations (>300 lines):": {
      "value": "Test File Size Violations (>300 lines):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:65"
      ]
    },
    "Test Fixer Examples:": {
      "value": "Test Fixer Examples:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:381"
      ]
    },
    "Test Fixer for Real Test Requirements\n\nProvides automated and semi-automated fixes for test requirement violations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity\n- Value Impact: Automates compliance with real test requirements\n- Strategic Impact: Reduces manual fix effort and prevents regressions": {
      "value": "Test Fixer for Real Test Requirements\n\nProvides automated and semi-automated fixes for test requirement violations.\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Development Velocity\n- Value Impact: Automates compliance with real test requirements\n- Strategic Impact: Reduces manual fix effort and prevents regressions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:1"
      ]
    },
    "Test Function Violations (>8 lines):": {
      "value": "Test Function Violations (>8 lines):",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:66"
      ]
    },
    "Test GTM Event Tracking Implementation\n\nThis script verifies that GTM events are being properly tracked\nin the application by checking for dataLayer pushes.": {
      "value": "Test GTM Event Tracking Implementation\n\nThis script verifies that GTM events are being properly tracked\nin the application by checking for dataLayer pushes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:2"
      ]
    },
    "Test GTM loading in dev and staging environments": {
      "value": "Test GTM loading in dev and staging environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:2"
      ]
    },
    "Test HTTP health endpoint to ensure backend is running.\n        \n        Args:\n            url: Health endpoint URL\n            \n        Returns:\n            True if healthy, False otherwise": {
      "value": "Test HTTP health endpoint to ensure backend is running.\n        \n        Args:\n            url: Health endpoint URL\n            \n        Returns:\n            True if healthy, False otherwise",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:140"
      ]
    },
    "Test JSON output format": {
      "value": "Test JSON output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:146"
      ]
    },
    "Test JWT token generation with correct secret.": {
      "value": "Test JWT token generation with correct secret.",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:1"
      ]
    },
    "Test JWT validation flow on staging - reproducing the 401 error": {
      "value": "Test JWT validation flow on staging - reproducing the 401 error",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:2"
      ]
    },
    "Test Limits Examples - See function docstrings for splitting strategies": {
      "value": "Test Limits Examples - See function docstrings for splitting strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:263"
      ]
    },
    "Test Limits Violation Examples and Fixes\nDemonstrates how to fix common test limit violations according to SPEC/testing.xml": {
      "value": "Test Limits Violation Examples and Fixes\nDemonstrates how to fix common test limit violations according to SPEC/testing.xml",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:2"
      ]
    },
    "Test OAuth authentication flow": {
      "value": "Test OAuth authentication flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:125"
      ]
    },
    "Test OAuth configuration endpoint": {
      "value": "Test OAuth configuration endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:139"
      ]
    },
    "Test OAuth credential loading for development environment.\nVerifies that the auth service correctly loads development-specific OAuth credentials.": {
      "value": "Test OAuth credential loading for development environment.\nVerifies that the auth service correctly loads development-specific OAuth credentials.",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:2"
      ]
    },
    "Test OAuth flow locally with enhanced debugging": {
      "value": "Test OAuth flow locally with enhanced debugging",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:434"
      ]
    },
    "Test OAuth login initiation": {
      "value": "Test OAuth login initiation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:180"
      ]
    },
    "Test Overlap Analyzer\nAnalyzes test files for similarity and potential duplication using vector similarity techniques.": {
      "value": "Test Overlap Analyzer\nAnalyzes test files for similarity and potential duplication using vector similarity techniques.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:1"
      ]
    },
    "Test Performance Optimization Script\n\nAnalyzes and optimizes test suite performance by identifying slow tests,\nflaky tests, and common performance bottlenecks.": {
      "value": "Test Performance Optimization Script\n\nAnalyzes and optimizes test suite performance by identifying slow tests,\nflaky tests, and common performance bottlenecks.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:2"
      ]
    },
    "Test Process Cleanup Utility\nCleans up hanging Node.js and Python test processes on Windows": {
      "value": "Test Process Cleanup Utility\nCleans up hanging Node.js and Python test processes on Windows",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:2"
      ]
    },
    "Test Quality Report (Report Only)": {
      "value": "Test Quality Report (Report Only)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:422"
      ]
    },
    "Test Report Analyzer - Analyzes test reports and identifies issues.": {
      "value": "Test Report Analyzer - Analyzes test reports and identifies issues.",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:1"
      ]
    },
    "Test Results:": {
      "value": "Test Results:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:317",
        "scripts/test_auth_integration.py:141"
      ]
    },
    "Test Runner for Example Message Flow System\n\nComprehensive test runner for the example message flow implementation\nwith detailed reporting and validation.\n\nBusiness Value: Ensures reliability of AI optimization demonstration system": {
      "value": "Test Runner for Example Message Flow System\n\nComprehensive test runner for the example message flow implementation\nwith detailed reporting and validation.\n\nBusiness Value: Ensures reliability of AI optimization demonstration system",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:1"
      ]
    },
    "Test SQLAlchemy 2.0 patterns are working correctly.": {
      "value": "Test SQLAlchemy 2.0 patterns are working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:10"
      ]
    },
    "Test SSL certificate handling for staging database connections.": {
      "value": "Test SSL certificate handling for staging database connections.",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:1"
      ]
    },
    "Test Service Management Script\n\nThis script manages Docker Compose test services for the Netra platform.\nIt provides a simple interface to start, stop, and manage test infrastructure.\n\nUsage:\n    python scripts/manage_test_services.py start          # Start core test services\n    python scripts/manage_test_services.py start --e2e    # Start full E2E stack\n    python scripts/manage_test_services.py stop           # Stop all test services\n    python scripts/manage_test_services.py status         # Check service status\n    python scripts/manage_test_services.py clean          # Stop and clean all data": {
      "value": "Test Service Management Script\n\nThis script manages Docker Compose test services for the Netra platform.\nIt provides a simple interface to start, stop, and manage test infrastructure.\n\nUsage:\n    python scripts/manage_test_services.py start          # Start core test services\n    python scripts/manage_test_services.py start --e2e    # Start full E2E stack\n    python scripts/manage_test_services.py stop           # Stop all test services\n    python scripts/manage_test_services.py status         # Check service status\n    python scripts/manage_test_services.py clean          # Stop and clean all data",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:2"
      ]
    },
    "Test Size Violations Analysis and Reporting Script\n\n!!!! CRITICAL WARNING !!!!\nThis script is designed ONLY for analysis and reporting of test size violations.\nThe auto-fix capabilities are DISABLED by default and should ONLY be used:\n1. In dry-run mode for planning manual refactoring\n2. With explicit human review before any actual changes\n3. After backing up all affected files\n4. With immediate test validation after any changes\n\nNEVER use auto-fix in production code without thorough review!\n\nCapabilities:\n1. ANALYZE test files for size violations (SAFE)\n2. REPORT violations and suggest improvements (SAFE)\n3. DRY-RUN mode to preview potential changes (SAFE)\n4. ACTUAL fixes require explicit opt-in and multiple confirmations (DANGEROUS)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Code Quality Analysis and Reporting\n- Value Impact: Identifies technical debt for manual remediation\n- Strategic/Revenue Impact: Provides metrics for prioritizing refactoring efforts": {
      "value": "Test Size Violations Analysis and Reporting Script\n\n!!!! CRITICAL WARNING !!!!\nThis script is designed ONLY for analysis and reporting of test size violations.\nThe auto-fix capabilities are DISABLED by default and should ONLY be used:\n1. In dry-run mode for planning manual refactoring\n2. With explicit human review before any actual changes\n3. After backing up all affected files\n4. With immediate test validation after any changes\n\nNEVER use auto-fix in production code without thorough review!\n\nCapabilities:\n1. ANALYZE test files for size violations (SAFE)\n2. REPORT violations and suggest improvements (SAFE)\n3. DRY-RUN mode to preview potential changes (SAFE)\n4. ACTUAL fixes require explicit opt-in and multiple confirmations (DANGEROUS)\n\nBusiness Value Justification (BVJ):\n- Segment: Platform/Internal\n- Business Goal: Code Quality Analysis and Reporting\n- Value Impact: Identifies technical debt for manual remediation\n- Strategic/Revenue Impact: Provides metrics for prioritizing refactoring efforts",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:2"
      ]
    },
    "Test Staging Startup Sequence\nTests the complete startup sequence for staging deployment.\nValidates service initialization order, dependencies, and configuration.": {
      "value": "Test Staging Startup Sequence\nTests the complete startup sequence for staging deployment.\nValidates service initialization order, dependencies, and configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:2"
      ]
    },
    "Test Stub Detection and Removal Script\n\nThis script automatically detects test stubs, mock implementations, and placeholder\ncode in production files according to the SPEC/no_test_stubs.xml specification.\n\nUsage:\n    python scripts/remove_test_stubs.py --scan          # Scan for test stubs\n    python scripts/remove_test_stubs.py --fix           # Fix detected stubs\n    python scripts/remove_test_stubs.py --report        # Generate detailed report": {
      "value": "Test Stub Detection and Removal Script\n\nThis script automatically detects test stubs, mock implementations, and placeholder\ncode in production files according to the SPEC/no_test_stubs.xml specification.\n\nUsage:\n    python scripts/remove_test_stubs.py --scan          # Scan for test stubs\n    python scripts/remove_test_stubs.py --fix           # Fix detected stubs\n    python scripts/remove_test_stubs.py --report        # Generate detailed report",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:2"
      ]
    },
    "Test Stub Detection and Removal Tool": {
      "value": "Test Stub Detection and Removal Tool",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:354"
      ]
    },
    "Test Summary": {
      "value": "Test Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:179"
      ]
    },
    "Test TCP connection as fallback (should fail from local).": {
      "value": "Test TCP connection as fallback (should fail from local).",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:86"
      ]
    },
    "Test URL:": {
      "value": "Test URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:130"
      ]
    },
    "Test User": {
      "value": "Test User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:168",
        "auth_service/tests/factories/user_factory.py:39",
        "auth_service/tests/test_auth_comprehensive.py:237",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:148",
        "auth_service/tests/test_oauth_state_validation.py:128",
        "auth_service/tests/test_oauth_state_validation.py:271",
        "scripts/test_cold_start_e2e.py:50",
        "scripts/test_sqlalchemy_2_migration.py:55"
      ]
    },
    "Test Violations Reporter - Focus specifically on test file and function violations\nGenerates detailed reports with splitting suggestions for test limit violations.": {
      "value": "Test Violations Reporter - Focus specifically on test file and function violations\nGenerates detailed reports with splitting suggestions for test limit violations.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:2"
      ]
    },
    "Test WebSocket CORS.": {
      "value": "Test WebSocket CORS.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:136"
      ]
    },
    "Test WebSocket configuration endpoint.": {
      "value": "Test WebSocket configuration endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:83",
        "scripts/test_websocket_middleware.py:39"
      ]
    },
    "Test WebSocket connection and functionality.": {
      "value": "Test WebSocket connection and functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:170"
      ]
    },
    "Test WebSocket connection in development mode.": {
      "value": "Test WebSocket connection in development mode.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:17"
      ]
    },
    "Test WebSocket connection to diagnose rapid disconnect issue.\n\nThis script tests the WebSocket connection to understand why it's immediately\ndisconnecting after successful authentication.": {
      "value": "Test WebSocket connection to diagnose rapid disconnect issue.\n\nThis script tests the WebSocket connection to understand why it's immediately\ndisconnecting after successful authentication.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:2"
      ]
    },
    "Test WebSocket connection to specified URL.": {
      "value": "Test WebSocket connection to specified URL.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:66"
      ]
    },
    "Test WebSocket connection with various configurations.": {
      "value": "Test WebSocket connection with various configurations.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:20"
      ]
    },
    "Test WebSocket connection.": {
      "value": "Test WebSocket connection.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:262"
      ]
    },
    "Test WebSocket connections for Docker networking scenarios.": {
      "value": "Test WebSocket connections for Docker networking scenarios.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:114"
      ]
    },
    "Test WebSocket connectivity": {
      "value": "Test WebSocket connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:146"
      ]
    },
    "Test WebSocket failed:": {
      "value": "Test WebSocket failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:83"
      ]
    },
    "Test WebSocket health endpoint.": {
      "value": "Test WebSocket health endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:113"
      ]
    },
    "Test WebSocket with CORS origin headers.": {
      "value": "Test WebSocket with CORS origin headers.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:87"
      ]
    },
    "Test a simple WebSocket connection.\n    \n    Args:\n        url: WebSocket URL to test\n        origin: Origin header to send": {
      "value": "Test a simple WebSocket connection.\n    \n    Args:\n        url: WebSocket URL to test\n        origin: Origin header to send",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:17"
      ]
    },
    "Test a single WebSocket connection.\n        \n        Args:\n            websocket_url: WebSocket URL to connect to\n            origin: Origin header to send\n            test_name: Name of the test\n            expect_success: Whether we expect the connection to succeed\n            \n        Returns:\n            Test result dictionary": {
      "value": "Test a single WebSocket connection.\n        \n        Args:\n            websocket_url: WebSocket URL to connect to\n            origin: Origin header to send\n            test_name: Name of the test\n            expect_success: Whether we expect the connection to succeed\n            \n        Returns:\n            Test result dictionary",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:44"
      ]
    },
    "Test a single endpoint": {
      "value": "Test a single endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:39"
      ]
    },
    "Test actual CORS request.": {
      "value": "Test actual CORS request.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:99"
      ]
    },
    "Test actual GET request with CORS.": {
      "value": "Test actual GET request with CORS.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:59"
      ]
    },
    "Test actual request with CORS headers.": {
      "value": "Test actual request with CORS headers.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:106"
      ]
    },
    "Test agent": {
      "value": "Test agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:42"
      ]
    },
    "Test alignment complete!": {
      "value": "Test alignment complete!",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:62"
      ]
    },
    "Test all configured origins for the environment": {
      "value": "Test all configured origins for the environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:439"
      ]
    },
    "Test all imports (comprehensive, slower)": {
      "value": "Test all imports (comprehensive, slower)",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:42"
      ]
    },
    "Test and fix CORS configuration for localhost vs 127.0.0.1 mismatch.": {
      "value": "Test and fix CORS configuration for localhost vs 127.0.0.1 mismatch.",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:1"
      ]
    },
    "Test assertion failed": {
      "value": "Test assertion failed",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:123"
      ]
    },
    "Test async PostgreSQL connections for both backend and auth services\n\nThis script verifies that the new async-only PostgreSQL configuration\nworks correctly in local development environment.": {
      "value": "Test async PostgreSQL connections for both backend and auth services\n\nThis script verifies that the new async-only PostgreSQL configuration\nworks correctly in local development environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:2"
      ]
    },
    "Test auth service API endpoints": {
      "value": "Test auth service API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:40"
      ]
    },
    "Test auth service database connection": {
      "value": "Test auth service database connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:66"
      ]
    },
    "Test auth service database session management and DatabaseURLBuilder integration.": {
      "value": "Test auth service database session management and DatabaseURLBuilder integration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:1"
      ]
    },
    "Test auth service health endpoint": {
      "value": "Test auth service health endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:28"
      ]
    },
    "Test authentication flow.": {
      "value": "Test authentication flow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:217"
      ]
    },
    "Test backend auth client integration": {
      "value": "Test backend auth client integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:62"
      ]
    },
    "Test backend service database connection": {
      "value": "Test backend service database connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:23"
      ]
    },
    "Test basic service startup orchestration.": {
      "value": "Test basic service startup orchestration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:20"
      ]
    },
    "Test case": {
      "value": "Test case",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:84"
      ]
    },
    "Test category to run": {
      "value": "Test category to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:370"
      ]
    },
    "Test chat interface for errors": {
      "value": "Test chat interface for errors",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:1"
      ]
    },
    "Test checking specific workflow run ID": {
      "value": "Test checking specific workflow run ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:154"
      ]
    },
    "Test classes:": {
      "value": "Test classes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:36"
      ]
    },
    "Test complete OAuth flow from initiation to callback.": {
      "value": "Test complete OAuth flow from initiation to callback.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:228"
      ]
    },
    "Test complete end-to-end coordination workflow.": {
      "value": "Test complete end-to-end coordination workflow.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:278"
      ]
    },
    "Test complete token refresh flow with real services": {
      "value": "Test complete token refresh flow with real services",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:74"
      ]
    },
    "Test complete. Check the log output above for proper file:line information.": {
      "value": "Test complete. Check the log output above for proper file:line information.",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:47"
      ]
    },
    "Test completed successfully!": {
      "value": "Test completed successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:69"
      ]
    },
    "Test config file not found:": {
      "value": "Test config file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:218"
      ]
    },
    "Test configuration loading for staging environment.": {
      "value": "Test configuration loading for staging environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:2"
      ]
    },
    "Test configuration loading with detailed logging for debugging staging issues.": {
      "value": "Test configuration loading with detailed logging for debugging staging issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:2"
      ]
    },
    "Test connection using AuthConfig generated URL.": {
      "value": "Test connection using AuthConfig generated URL.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:188"
      ]
    },
    "Test coverage calculation module.\n\nCalculates test coverage metrics and trends.\nFollows 450-line limit with 25-line function limit.": {
      "value": "Test coverage calculation module.\n\nCalculates test coverage metrics and trends.\nFollows 450-line limit with 25-line function limit.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:1"
      ]
    },
    "Test coverage metrics calculator.\n\nCalculates test coverage and related metrics.\nFollows 450-line limit with 25-line function limit.": {
      "value": "Test coverage metrics calculator.\n\nCalculates test coverage and related metrics.\nFollows 450-line limit with 25-line function limit.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:1"
      ]
    },
    "Test crashed:": {
      "value": "Test crashed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:188",
        "auth_service/test_staging_db_connection.py:337",
        "auth_service/test_url_construction.py:254"
      ]
    },
    "Test credentials have been generated and saved.": {
      "value": "Test credentials have been generated and saved.",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:309"
      ]
    },
    "Test credentials saved to:": {
      "value": "Test credentials saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:277"
      ]
    },
    "Test database connection with individual secrets.": {
      "value": "Test database connection with individual secrets.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:30"
      ]
    },
    "Test database initialization and table creation": {
      "value": "Test database initialization and table creation",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:18"
      ]
    },
    "Test database migrations against staging database.": {
      "value": "Test database migrations against staging database.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:1"
      ]
    },
    "Test dev login to get initial tokens": {
      "value": "Test dev login to get initial tokens",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:58"
      ]
    },
    "Test direct asyncpg connection using staging credentials.": {
      "value": "Test direct asyncpg connection using staging credentials.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:49"
      ]
    },
    "Test directories:": {
      "value": "Test directories:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:135"
      ]
    },
    "Test directory": {
      "value": "Test directory",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:135"
      ]
    },
    "Test directory to analyze": {
      "value": "Test directory to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:344"
      ]
    },
    "Test discovery file not found:": {
      "value": "Test discovery file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:317"
      ]
    },
    "Test distribution by top-level directory:": {
      "value": "Test distribution by top-level directory:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:55"
      ]
    },
    "Test documentation created in": {
      "value": "Test documentation created in",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:280"
      ]
    },
    "Test execution error:": {
      "value": "Test execution error:",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:62"
      ]
    },
    "Test execution failed:": {
      "value": "Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:449"
      ]
    },
    "Test execution interrupted by user": {
      "value": "Test execution interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:446"
      ]
    },
    "Test execution mode": {
      "value": "Test execution mode",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:50"
      ]
    },
    "Test execution timed out": {
      "value": "Test execution timed out",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:60"
      ]
    },
    "Test failed": {
      "value": "Test failed",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:131"
      ]
    },
    "Test failed with error:": {
      "value": "Test failed with error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:147"
      ]
    },
    "Test failed:": {
      "value": "Test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:245"
      ]
    },
    "Test file": {
      "value": "Test file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:742"
      ]
    },
    "Test file and function limits compliance checker.\nEnforces SPEC/testing.xml rules: test files MUST follow same 450-line limit as production code,\ntest functions MUST follow same 25-line limit as production code.": {
      "value": "Test file and function limits compliance checker.\nEnforces SPEC/testing.xml rules: test files MUST follow same 450-line limit as production code,\ntest functions MUST follow same 25-line limit as production code.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:2"
      ]
    },
    "Test file exceeds": {
      "value": "Test file exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:112",
        "scripts/compliance/test_size_validator.py:193"
      ]
    },
    "Test file not found:": {
      "value": "Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:32"
      ]
    },
    "Test file to analyze": {
      "value": "Test file to analyze",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:673",
        "scripts/compliance/test_refactor_helper.py:678"
      ]
    },
    "Test file to validate": {
      "value": "Test file to validate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:684"
      ]
    },
    "Test files:": {
      "value": "Test files:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:426"
      ]
    },
    "Test function '": {
      "value": "Test function '",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_requirements_enforcer.py:448",
        "scripts/compliance/test_limits_checker.py:156",
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "Test functions:": {
      "value": "Test functions:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:35",
        "scripts/compliance/demo_test_size_enforcement.py:156"
      ]
    },
    "Test graceful degradation with optional service failures.": {
      "value": "Test graceful degradation with optional service failures.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:230"
      ]
    },
    "Test health endpoints for all services": {
      "value": "Test health endpoints for all services",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:82"
      ]
    },
    "Test if Cloud SQL connector can be imported": {
      "value": "Test if Cloud SQL connector can be imported",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:109"
      ]
    },
    "Test if background jobs Redis connection fails appropriately.": {
      "value": "Test if background jobs Redis connection fails appropriately.",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:299"
      ]
    },
    "Test if the backend is running.": {
      "value": "Test if the backend is running.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:27"
      ]
    },
    "Test info message from level1 function": {
      "value": "Test info message from level1 function",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:15"
      ]
    },
    "Test infrastructure significantly improved across iterations 71-100!": {
      "value": "Test infrastructure significantly improved across iterations 71-100!",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:135"
      ]
    },
    "Test interrupted by user": {
      "value": "Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:334",
        "scripts/test_websocket_dev_mode.py:344",
        "scripts/test_websocket_manual.py:144"
      ]
    },
    "Test level to run": {
      "value": "Test level to run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:77"
      ]
    },
    "Test logout functionality": {
      "value": "Test logout functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:290"
      ]
    },
    "Test main API endpoints": {
      "value": "Test main API endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:102"
      ]
    },
    "Test making an authenticated API call to the backend": {
      "value": "Test making an authenticated API call to the backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:192"
      ]
    },
    "Test message for validation": {
      "value": "Test message for validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:281",
        "scripts/test_example_message_flow.py:296"
      ]
    },
    "Test method to use": {
      "value": "Test method to use",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:396"
      ]
    },
    "Test module split from original file": {
      "value": "Test module split from original file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:518"
      ]
    },
    "Test passed": {
      "value": "Test passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:182",
        "scripts/test_error_monitor_logic.py:206",
        "scripts/test_error_monitor_logic.py:225"
      ]
    },
    "Test pattern to run": {
      "value": "Test pattern to run",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:185"
      ]
    },
    "Test port allocation prevents conflicts.": {
      "value": "Test port allocation prevents conflicts.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:157"
      ]
    },
    "Test processes running:": {
      "value": "Test processes running:",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:164"
      ]
    },
    "Test proper resource cleanup.": {
      "value": "Test proper resource cleanup.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:350"
      ]
    },
    "Test race condition protection for concurrent refresh requests": {
      "value": "Test race condition protection for concurrent refresh requests",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:167"
      ]
    },
    "Test receiving model response via WebSocket.": {
      "value": "Test receiving model response via WebSocket.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:371"
      ]
    },
    "Test refactoring helper": {
      "value": "Test refactoring helper",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:659"
      ]
    },
    "Test refactoring helper for splitting large test files.\n\nThis helper analyzes large test files and suggests intelligent splits based on:\n- Test categories (unit, integration, e2e)\n- Functionality being tested\n- Test classes and groupings\n- Dependencies between tests\n\nFeatures:\n- Analyzes large test files and suggests splits\n- Groups related tests for extraction\n- Maintains test dependencies when splitting\n- Generates new file names following conventions\n- Preserves imports and test utilities": {
      "value": "Test refactoring helper for splitting large test files.\n\nThis helper analyzes large test files and suggests intelligent splits based on:\n- Test categories (unit, integration, e2e)\n- Functionality being tested\n- Test classes and groupings\n- Dependencies between tests\n\nFeatures:\n- Analyzes large test files and suggests splits\n- Groups related tests for extraction\n- Maintains test dependencies when splitting\n- Generates new file names following conventions\n- Preserves imports and test utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:2"
      ]
    },
    "Test refresh endpoint accepts all documented field name variants": {
      "value": "Test refresh endpoint accepts all documented field name variants",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:260"
      ]
    },
    "Test refresh endpoint accepts different field naming formats": {
      "value": "Test refresh endpoint accepts different field naming formats",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:13"
      ]
    },
    "Test refresh fails with invalid token": {
      "value": "Test refresh fails with invalid token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:291"
      ]
    },
    "Test refresh handles race condition": {
      "value": "Test refresh handles race condition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:300"
      ]
    },
    "Test refresh token behavior near expiry time": {
      "value": "Test refresh token behavior near expiry time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:220"
      ]
    },
    "Test refresh updates Redis session data": {
      "value": "Test refresh updates Redis session data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:130"
      ]
    },
    "Test refresh updates user session": {
      "value": "Test refresh updates user session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:312"
      ]
    },
    "Test refresh validates user exists in database": {
      "value": "Test refresh validates user exists in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:198"
      ]
    },
    "Test refresh with real token using camelCase": {
      "value": "Test refresh with real token using camelCase",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:266"
      ]
    },
    "Test refresh with real token using snake_case": {
      "value": "Test refresh with real token using snake_case",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:248"
      ]
    },
    "Test report saved to: workflow_verification_test_report.md": {
      "value": "Test report saved to: workflow_verification_test_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:218"
      ]
    },
    "Test requires staging environment, current:": {
      "value": "Test requires staging environment, current:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:538"
      ]
    },
    "Test run timed out": {
      "value": "Test run timed out",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:43"
      ]
    },
    "Test runner to validate service coordination fixes.\n\nThis script runs the coordination system tests to ensure all issues\nidentified in test_critical_cold_start_initialization.py are resolved.": {
      "value": "Test runner to validate service coordination fixes.\n\nThis script runs the coordination system tests to ensure all issues\nidentified in test_critical_cold_start_initialization.py are resolved.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:1"
      ]
    },
    "Test script for Docker Compose Log Introspection System\n\nTests the log introspector and issue creator functionality.": {
      "value": "Test script for Docker Compose Log Introspection System\n\nTests the log introspector and issue creator functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:2"
      ]
    },
    "Test script for staging error monitor logic validation.\n\nThis script tests the error threshold and decision logic without requiring GCP access.": {
      "value": "Test script for staging error monitor logic validation.\n\nThis script tests the error threshold and decision logic without requiring GCP access.",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:1"
      ]
    },
    "Test script for verify_workflow_status.py\n\nDemonstrates usage patterns and validates the script functionality.": {
      "value": "Test script for verify_workflow_status.py\n\nDemonstrates usage patterns and validates the script functionality.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:2"
      ]
    },
    "Test script for verifying CORS implementation in Next.js API routes.\n\nThis script simulates CORS preflight requests and actual requests to verify\nthat the CORS implementation is working correctly across all frontend API routes.": {
      "value": "Test script for verifying CORS implementation in Next.js API routes.\n\nThis script simulates CORS preflight requests and actual requests to verify\nthat the CORS implementation is working correctly across all frontend API routes.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:2"
      ]
    },
    "Test script to debug Auth service database connection with staging credentials.\n\nThis script tests the database connection locally using the exact same configuration\nas the Auth service would use in staging environment.": {
      "value": "Test script to debug Auth service database connection with staging credentials.\n\nThis script tests the database connection locally using the exact same configuration\nas the Auth service would use in staging environment.",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:1"
      ]
    },
    "Test script to specifically check backend port 8000 binding.\nThis isolates the socket permission error from other dev launcher issues.": {
      "value": "Test script to specifically check backend port 8000 binding.\nThis isolates the socket permission error from other dev launcher issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:2"
      ]
    },
    "Test script to validate SQLAlchemy 2.0 migration": {
      "value": "Test script to validate SQLAlchemy 2.0 migration",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:2"
      ]
    },
    "Test script to validate WebSocket configuration fixes for Docker environment.\n\nBusiness Value Justification:\n- Segment: Development/DevOps\n- Business Goal: Development Velocity\n- Value Impact: Eliminates Docker WebSocket connection failures, reduces dev time\n- Strategic Impact: Ensures reliable local development environment": {
      "value": "Test script to validate WebSocket configuration fixes for Docker environment.\n\nBusiness Value Justification:\n- Segment: Development/DevOps\n- Business Goal: Development Velocity\n- Value Impact: Eliminates Docker WebSocket connection failures, reduces dev time\n- Strategic Impact: Ensures reliable local development environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:2"
      ]
    },
    "Test script to verify CORS SSOT compliance across all services.\n\nThis script verifies that:\n1. All services follow SSOT for CORS configuration\n2. Dev environment is permissive (allows localhost with any port)\n3. Staging/Production have explicit origins set\n4. No legacy CORS code remains": {
      "value": "Test script to verify CORS SSOT compliance across all services.\n\nThis script verifies that:\n1. All services follow SSOT for CORS configuration\n2. Dev environment is permissive (allows localhost with any port)\n3. Staging/Production have explicit origins set\n4. No legacy CORS code remains",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:2"
      ]
    },
    "Test script to verify WebSocket connectivity and identify middleware issues.": {
      "value": "Test script to verify WebSocket connectivity and identify middleware issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:2"
      ]
    },
    "Test script to verify environment detection is working correctly.\nRun this to ensure all environment detection logic defaults to staging, not production.": {
      "value": "Test script to verify environment detection is working correctly.\nRun this to ensure all environment detection logic defaults to staging, not production.",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:1"
      ]
    },
    "Test script to verify logging shows correct source location.": {
      "value": "Test script to verify logging shows correct source location.",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:2"
      ]
    },
    "Test sending a chat message.": {
      "value": "Test sending a chat message.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:310"
      ]
    },
    "Test separation between readiness and health checks.": {
      "value": "Test separation between readiness and health checks.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:122"
      ]
    },
    "Test service discovery handles timing issues.": {
      "value": "Test service discovery handles timing issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:186"
      ]
    },
    "Test session created successfully!": {
      "value": "Test session created successfully!",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:65"
      ]
    },
    "Test session properly cleaned up when user logs out.": {
      "value": "Test session properly cleaned up when user logs out.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:88"
      ]
    },
    "Test session remains valid during database failover scenarios.": {
      "value": "Test session remains valid during database failover scenarios.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:42"
      ]
    },
    "Test session survives auth service restart without user re-login.": {
      "value": "Test session survives auth service restart without user re-login.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:21"
      ]
    },
    "Test session updates sync correctly between auth and backend services.": {
      "value": "Test session updates sync correctly between auth and backend services.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:61"
      ]
    },
    "Test size limits validator": {
      "value": "Test size limits validator",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:507"
      ]
    },
    "Test splitting strategy (default: hybrid)": {
      "value": "Test splitting strategy (default: hybrid)",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1043"
      ]
    },
    "Test staging configuration after simplification.\nVerifies that staging will load secrets from Google Secret Manager only.": {
      "value": "Test staging configuration after simplification.\nVerifies that staging will load secrets from Google Secret Manager only.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:2"
      ]
    },
    "Test staging environment": {
      "value": "Test staging environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:206"
      ]
    },
    "Test staging login functionality": {
      "value": "Test staging login functionality",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:391"
      ]
    },
    "Test staging startup sequence": {
      "value": "Test staging startup sequence",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:286"
      ]
    },
    "Test structure validation not fully implemented yet.": {
      "value": "Test structure validation not fully implemented yet.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1136"
      ]
    },
    "Test successful token refresh": {
      "value": "Test successful token refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:267"
      ]
    },
    "Test suite for verify_workflow_status.py\n\nTests various scenarios and documents the verification results.": {
      "value": "Test suite for verify_workflow_status.py\n\nTests various scenarios and documents the verification results.",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:2"
      ]
    },
    "Test table output format": {
      "value": "Test table output format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:139"
      ]
    },
    "Test that all services are healthy": {
      "value": "Test that all services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:30"
      ]
    },
    "Test that dependency resolution prevents early startup.": {
      "value": "Test that dependency resolution prevents early startup.",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:81"
      ]
    },
    "Test that logout blacklists both access and refresh tokens": {
      "value": "Test that logout blacklists both access and refresh tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:365"
      ]
    },
    "Test that refresh maintains user permissions in new token": {
      "value": "Test that refresh maintains user permissions in new token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:319"
      ]
    },
    "Test that refresh tokens are single-use": {
      "value": "Test that refresh tokens are single-use",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:392"
      ]
    },
    "Test that session persists across multiple refreshes": {
      "value": "Test that session persists across multiple refreshes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:229"
      ]
    },
    "Test that the access token is valid": {
      "value": "Test that the access token is valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:94"
      ]
    },
    "Test that the staging auth service refresh endpoint accepts different field formats.\nThis is the critical fix we deployed.": {
      "value": "Test that the staging auth service refresh endpoint accepts different field formats.\nThis is the critical fix we deployed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:2"
      ]
    },
    "Test the /ws/test endpoint (no auth required).": {
      "value": "Test the /ws/test endpoint (no auth required).",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:69"
      ]
    },
    "Test the AgentInitializationManager.": {
      "value": "Test the AgentInitializationManager.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:19"
      ]
    },
    "Test the enhanced agent registry.": {
      "value": "Test the enhanced agent registry.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:131"
      ]
    },
    "Test the exact JWT validation flow that's failing": {
      "value": "Test the exact JWT validation flow that's failing",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:11"
      ]
    },
    "Test the modular DataSubAgent.": {
      "value": "Test the modular DataSubAgent.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:87"
      ]
    },
    "Test the unauthenticated test WebSocket endpoint.": {
      "value": "Test the unauthenticated test WebSocket endpoint.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:56"
      ]
    },
    "Test timed out": {
      "value": "Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:30",
        "scripts/test_verify_workflow_status.py:67"
      ]
    },
    "Test token generation with mock user": {
      "value": "Test token generation with mock user",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:236"
      ]
    },
    "Test token refresh with camelCase format (frontend format)": {
      "value": "Test token refresh with camelCase format (frontend format)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:157"
      ]
    },
    "Test token refresh with snake_case format": {
      "value": "Test token refresh with snake_case format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:123"
      ]
    },
    "Test token validation": {
      "value": "Test token validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:296"
      ]
    },
    "Test token validation between services": {
      "value": "Test token validation between services",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:82"
      ]
    },
    "Test utilities and helper functions": {
      "value": "Test utilities and helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:547"
      ]
    },
    "Test various error conditions for refresh endpoint": {
      "value": "Test various error conditions for refresh endpoint",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:292"
      ]
    },
    "Test warning message from level2 function": {
      "value": "Test warning message from level2 function",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:21"
      ]
    },
    "Test with no assertions": {
      "value": "Test with no assertions",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:277"
      ]
    },
    "TestClient/": {
      "value": "TestClient/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:134",
        "auth_service/tests/test_session_security_cycles_36_40.py:294"
      ]
    },
    "TestClient/1.0": {
      "value": "TestClient/1.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:188",
        "auth_service/tests/test_session_security_cycles_36_40.py:226"
      ]
    },
    "Testing": {
      "value": "Testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:146",
        "scripts/test_gtm_loading.py:106",
        "scripts/test_staging_login_automated.py:91",
        "scripts/test_staging_login_automated.py:254"
      ]
    },
    "Testing AgentInitializationManager...": {
      "value": "Testing AgentInitializationManager...",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:20"
      ]
    },
    "Testing Auth builder...": {
      "value": "Testing Auth builder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:101"
      ]
    },
    "Testing CORS configuration...": {
      "value": "Testing CORS configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:168"
      ]
    },
    "Testing CORS for": {
      "value": "Testing CORS for",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:501"
      ]
    },
    "Testing CORS implementation at": {
      "value": "Testing CORS implementation at",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:145"
      ]
    },
    "Testing Cache builder...": {
      "value": "Testing Cache builder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:109"
      ]
    },
    "Testing Docker Compose integration...": {
      "value": "Testing Docker Compose integration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:249"
      ]
    },
    "Testing Docker networking scenarios...": {
      "value": "Testing Docker networking scenarios...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:115"
      ]
    },
    "Testing GCP builder...": {
      "value": "Testing GCP builder...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:85"
      ]
    },
    "Testing GTM Event Tracking Implementation": {
      "value": "Testing GTM Event Tracking Implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:106"
      ]
    },
    "Testing JWT signature tampering detection - Cycle 31": {
      "value": "Testing JWT signature tampering detection - Cycle 31",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:59"
      ]
    },
    "Testing OAuth credential loading for development environment...": {
      "value": "Testing OAuth credential loading for development environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:16"
      ]
    },
    "Testing OPTIONS preflight with 127.0.0.1:3000...": {
      "value": "Testing OPTIONS preflight with 127.0.0.1:3000...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:53"
      ]
    },
    "Testing SQLAlchemy 2.0 Migration...": {
      "value": "Testing SQLAlchemy 2.0 Migration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:11"
      ]
    },
    "Testing URL:": {
      "value": "Testing URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:196"
      ]
    },
    "Testing WebSocket config endpoint...": {
      "value": "Testing WebSocket config endpoint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:40"
      ]
    },
    "Testing WebSocket connection to:": {
      "value": "Testing WebSocket connection to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:67"
      ]
    },
    "Testing WebSocket connection...": {
      "value": "Testing WebSocket connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:180"
      ]
    },
    "Testing WebSocket connectivity and CORS configuration in Docker development environment": {
      "value": "Testing WebSocket connectivity and CORS configuration in Docker development environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:320"
      ]
    },
    "Testing WebSocket test endpoint (no auth)...": {
      "value": "Testing WebSocket test endpoint (no auth)...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:57"
      ]
    },
    "Testing WebSocket with CORS headers...": {
      "value": "Testing WebSocket with CORS headers...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:88"
      ]
    },
    "Testing against:": {
      "value": "Testing against:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:43"
      ]
    },
    "Testing all modules in netra_backend.app...": {
      "value": "Testing all modules in netra_backend.app...",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:70"
      ]
    },
    "Testing auth bypass logic...": {
      "value": "Testing auth bypass logic...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:205"
      ]
    },
    "Testing backend health check...": {
      "value": "Testing backend health check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:28"
      ]
    },
    "Testing complete coordination workflow": {
      "value": "Testing complete coordination workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:279"
      ]
    },
    "Testing concurrent session limit - Cycle 37": {
      "value": "Testing concurrent session limit - Cycle 37",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:120"
      ]
    },
    "Testing concurrent token validation - Cycle 35": {
      "value": "Testing concurrent token validation - Cycle 35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:213"
      ]
    },
    "Testing configuration loading...": {
      "value": "Testing configuration loading...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:107"
      ]
    },
    "Testing critical error deployment scenario...": {
      "value": "Testing critical error deployment scenario...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:187"
      ]
    },
    "Testing dependency resolution fixes": {
      "value": "Testing dependency resolution fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:82"
      ]
    },
    "Testing dependency resolution...": {
      "value": "Testing dependency resolution...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:78"
      ]
    },
    "Testing endpoint:": {
      "value": "Testing endpoint:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:63"
      ]
    },
    "Testing enhanced agent registry...": {
      "value": "Testing enhanced agent registry...",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:132"
      ]
    },
    "Testing environment variables configuration...": {
      "value": "Testing environment variables configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:34"
      ]
    },
    "Testing error categorization...": {
      "value": "Testing error categorization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:211"
      ]
    },
    "Testing error detection...": {
      "value": "Testing error detection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:35"
      ]
    },
    "Testing error grouping...": {
      "value": "Testing error grouping...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:108"
      ]
    },
    "Testing graceful degradation": {
      "value": "Testing graceful degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:231"
      ]
    },
    "Testing handler initialization...": {
      "value": "Testing handler initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:190"
      ]
    },
    "Testing health endpoint...": {
      "value": "Testing health endpoint...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:60"
      ]
    },
    "Testing health endpoints...": {
      "value": "Testing health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:176"
      ]
    },
    "Testing help command...": {
      "value": "Testing help command...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:30"
      ]
    },
    "Testing initialization...": {
      "value": "Testing initialization...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:391"
      ]
    },
    "Testing issue creation...": {
      "value": "Testing issue creation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:171"
      ]
    },
    "Testing logging with proper source location...": {
      "value": "Testing logging with proper source location...",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:32"
      ]
    },
    "Testing login methods...": {
      "value": "Testing login methods...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:290"
      ]
    },
    "Testing message validation...": {
      "value": "Testing message validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:196",
        "scripts/test_example_message_flow.py:397"
      ]
    },
    "Testing missing parameters...": {
      "value": "Testing missing parameters...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:42"
      ]
    },
    "Testing missing token...": {
      "value": "Testing missing token...",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:54"
      ]
    },
    "Testing modular DataSubAgent...": {
      "value": "Testing modular DataSubAgent...",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:88"
      ]
    },
    "Testing nested function calls...": {
      "value": "Testing nested function calls...",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:41"
      ]
    },
    "Testing normal deployment scenario...": {
      "value": "Testing normal deployment scenario...",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:163"
      ]
    },
    "Testing origin:": {
      "value": "Testing origin:",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:67",
        "scripts/test_cors.py:510"
      ]
    },
    "Testing port allocation coordination": {
      "value": "Testing port allocation coordination",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:158"
      ]
    },
    "Testing pre-run size validation...": {
      "value": "Testing pre-run size validation...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:121"
      ]
    },
    "Testing public endpoints...": {
      "value": "Testing public endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:148"
      ]
    },
    "Testing readiness vs health check separation": {
      "value": "Testing readiness vs health check separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:123"
      ]
    },
    "Testing refresh endpoint field naming compatibility...": {
      "value": "Testing refresh endpoint field naming compatibility...",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:102"
      ]
    },
    "Testing report generation...": {
      "value": "Testing report generation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:287"
      ]
    },
    "Testing resource cleanup": {
      "value": "Testing resource cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:351"
      ]
    },
    "Testing secret access...": {
      "value": "Testing secret access...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:138"
      ]
    },
    "Testing service discovery timing fixes": {
      "value": "Testing service discovery timing fixes",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:187"
      ]
    },
    "Testing service initialization order...": {
      "value": "Testing service initialization order...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:35"
      ]
    },
    "Testing session activity tracking - Cycle 39": {
      "value": "Testing session activity tracking - Cycle 39",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:218"
      ]
    },
    "Testing session hijacking prevention - Cycle 36": {
      "value": "Testing session hijacking prevention - Cycle 36",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:61"
      ]
    },
    "Testing session invalidation cascade - Cycle 40": {
      "value": "Testing session invalidation cascade - Cycle 40",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:284"
      ]
    },
    "Testing session timeout enforcement - Cycle 38": {
      "value": "Testing session timeout enforcement - Cycle 38",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:180"
      ]
    },
    "Testing startup timing...": {
      "value": "Testing startup timing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:196"
      ]
    },
    "Testing token expiration enforcement - Cycle 32": {
      "value": "Testing token expiration enforcement - Cycle 32",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:110"
      ]
    },
    "Testing token replay attack detection - Cycle 33": {
      "value": "Testing token replay attack detection - Cycle 33",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:141"
      ]
    },
    "Testing token revocation enforcement - Cycle 34": {
      "value": "Testing token revocation enforcement - Cycle 34",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:177"
      ]
    },
    "Testing valid URL:": {
      "value": "Testing valid URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:177"
      ]
    },
    "Testing with 127.0.0.1:3000 origin...": {
      "value": "Testing with 127.0.0.1:3000 origin...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:11"
      ]
    },
    "Testing with localhost:3000 origin...": {
      "value": "Testing with localhost:3000 origin...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:32"
      ]
    },
    "Testing with origin:": {
      "value": "Testing with origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:101"
      ]
    },
    "Testing:": {
      "value": "Testing:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:16",
        "scripts/test_oauth_dev_config.py:64",
        "scripts/test_staging_simplified.py:106",
        "scripts/test_websocket_connection.py:50"
      ]
    },
    "Tests - Split from": {
      "value": "Tests - Split from",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:381",
        "scripts/auto_fix_test_sizes.py:386",
        "scripts/compliance/test_fixer.py:205"
      ]
    },
    "Tests Executed:": {
      "value": "Tests Executed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:334"
      ]
    },
    "Tests Failed:": {
      "value": "Tests Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:132",
        "scripts/test_websocket_cors_comprehensive.py:300"
      ]
    },
    "Tests Passed:": {
      "value": "Tests Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:122",
        "scripts/batch_fix_and_test.py:131",
        "scripts/test_backend_optimized.py:335",
        "scripts/test_websocket_cors_comprehensive.py:299"
      ]
    },
    "Tests Run:": {
      "value": "Tests Run:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:298"
      ]
    },
    "Tests completed!": {
      "value": "Tests completed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:209"
      ]
    },
    "Tests for Auth Service Port Configuration Mismatch Issue\n\nThis test suite exposes the critical port configuration mismatch where:\n- Auth service binds to port 8081 (from AUTH_PORT env var) \n- But internally configures its URL as http://127.0.0.1:8001\n- This mismatch prevents startup completion and causes connection failures\n\nRoot Cause: Dual configuration sources without validation\n- Port binding uses AUTH_PORT correctly  \n- URL configuration hardcoded or incorrectly derived\n\nThese tests MUST fail initially to demonstrate the issue before fixes are applied.": {
      "value": "Tests for Auth Service Port Configuration Mismatch Issue\n\nThis test suite exposes the critical port configuration mismatch where:\n- Auth service binds to port 8081 (from AUTH_PORT env var) \n- But internally configures its URL as http://127.0.0.1:8001\n- This mismatch prevents startup completion and causes connection failures\n\nRoot Cause: Dual configuration sources without validation\n- Port binding uses AUTH_PORT correctly  \n- URL configuration hardcoded or incorrectly derived\n\nThese tests MUST fail initially to demonstrate the issue before fixes are applied.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:1"
      ]
    },
    "Tests in excluded directories:": {
      "value": "Tests in excluded directories:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:35"
      ]
    },
    "Tests marked as consistently failing": {
      "value": "Tests marked as consistently failing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:112"
      ]
    },
    "Tests needing implementation:": {
      "value": "Tests needing implementation:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:389"
      ]
    },
    "Tests passed:": {
      "value": "Tests passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:92"
      ]
    },
    "Tests requiring real database connections": {
      "value": "Tests requiring real database connections",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:92"
      ]
    },
    "Tests requiring real external services": {
      "value": "Tests requiring real external services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:90"
      ]
    },
    "Tests that may be unreliable due to timing, randomness, or external dependencies:": {
      "value": "Tests that may be unreliable due to timing, randomness, or external dependencies:",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:310"
      ]
    },
    "Tests that may fail intermittently": {
      "value": "Tests that may fail intermittently",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:111"
      ]
    },
    "Tests that use real LLM services": {
      "value": "Tests that use real LLM services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:91"
      ]
    },
    "Tests timed out after": {
      "value": "Tests timed out after",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:521"
      ]
    },
    "Tests using only mocks": {
      "value": "Tests using only mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:93"
      ]
    },
    "The 401 error is likely caused by one of these issues:\n\n1. Token Expiry: The token has a 15-minute expiry and may be expired\n2. Service Authentication: Backend may not have proper service credentials\n   to validate tokens with the auth service\n3. Cross-Service Validation: The token may be issued for a different\n   environment or service context\n4. Blacklisting: The token or user may have been blacklisted\n\nRecommended fixes:\n1. Ensure backend has correct SERVICE_SECRET configured for staging\n2. Check that auth service URL is correctly configured in backend\n3. Verify token is being validated with correct environment context\n4. Check Redis/cache for any blacklist entries": {
      "value": "The 401 error is likely caused by one of these issues:\n\n1. Token Expiry: The token has a 15-minute expiry and may be expired\n2. Service Authentication: Backend may not have proper service credentials\n   to validate tokens with the auth service\n3. Cross-Service Validation: The token may be issued for a different\n   environment or service context\n4. Blacklisting: The token or user may have been blacklisted\n\nRecommended fixes:\n1. Ensure backend has correct SERVICE_SECRET configured for staging\n2. Check that auth service URL is correctly configured in backend\n3. Verify token is being validated with correct environment context\n4. Check Redis/cache for any blacklist entries",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:137"
      ]
    },
    "The Auth service database connection issue is likely caused by:": {
      "value": "The Auth service database connection issue is likely caused by:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:175"
      ]
    },
    "The Auth service should be able to connect to staging database": {
      "value": "The Auth service should be able to connect to staging database",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:321"
      ]
    },
    "The backend is rejecting the token": {
      "value": "The backend is rejecting the token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:217"
      ]
    },
    "The codebase is compliant with LLM test model standardization.": {
      "value": "The codebase is compliant with LLM test model standardization.",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:195"
      ]
    },
    "The current configuration shows potential for improvement in the following areas:": {
      "value": "The current configuration shows potential for improvement in the following areas:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:161"
      ]
    },
    "The frontend can now successfully refresh authentication tokens.": {
      "value": "The frontend can now successfully refresh authentication tokens.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:155"
      ]
    },
    "The issue is likely with the actual database connection in Cloud Run": {
      "value": "The issue is likely with the actual database connection in Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:242"
      ]
    },
    "The issue is that browsers treat 'localhost' and '127.0.0.1' as different origins,\neven though they resolve to the same address.\n\nIMMEDIATE FIX (Choose one):\n1. Use consistent hostnames - access both frontend and backend via either:\n   - http://localhost:3000 → http://localhost:8000\n   - http://127.0.0.1:3000 → http://127.0.0.1:8000\n\n2. Set environment variable to allow all local origins:\n   export CORS_ORIGINS=\"*\"  (for development only)\n\n3. The backend CORS configuration should already handle this, but if not,\n   ensure the backend is running with proper environment detection.\n\nDEBUGGING:\n- Check that your backend is detecting 'development' environment\n- Verify CORS middleware is properly initialized\n- Check backend logs for CORS-related messages": {
      "value": "The issue is that browsers treat 'localhost' and '127.0.0.1' as different origins,\neven though they resolve to the same address.\n\nIMMEDIATE FIX (Choose one):\n1. Use consistent hostnames - access both frontend and backend via either:\n   - http://localhost:3000 → http://localhost:8000\n   - http://127.0.0.1:3000 → http://127.0.0.1:8000\n\n2. Set environment variable to allow all local origins:\n   export CORS_ORIGINS=\"*\"  (for development only)\n\n3. The backend CORS configuration should already handle this, but if not,\n   ensure the backend is running with proper environment detection.\n\nDEBUGGING:\n- Check that your backend is detecting 'development' environment\n- Verify CORS middleware is properly initialized\n- Check backend logs for CORS-related messages",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:145"
      ]
    },
    "The refresh endpoint now accepts multiple field formats:": {
      "value": "The refresh endpoint now accepts multiple field formats:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:149"
      ]
    },
    "The service coordination system should now handle:": {
      "value": "The service coordination system should now handle:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:415"
      ]
    },
    "The socket permission error may be resolved or intermittent.": {
      "value": "The socket permission error may be resolved or intermittent.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:187"
      ]
    },
    "The system analysis reveals the following insights:": {
      "value": "The system analysis reveals the following insights:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:163"
      ]
    },
    "These files exceed 450-line limit and should be split:": {
      "value": "These files exceed 450-line limit and should be split:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:201"
      ]
    },
    "These files should be fixed manually before attempting any refactoring.": {
      "value": "These files should be fixed manually before attempting any refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:724"
      ]
    },
    "These files will be skipped to avoid overwrites.": {
      "value": "These files will be skipped to avoid overwrites.",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:244"
      ]
    },
    "These functions exceed 25-line limit and need helper extraction:": {
      "value": "These functions exceed 25-line limit and need helper extraction:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:208"
      ]
    },
    "These integration tests use excessive mocking:": {
      "value": "These integration tests use excessive mocking:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:217"
      ]
    },
    "These test pairs appear to be exact duplicates and should be consolidated:": {
      "value": "These test pairs appear to be exact duplicates and should be consolidated:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:586"
      ]
    },
    "These test pairs are highly similar and might benefit from refactoring:": {
      "value": "These test pairs are highly similar and might benefit from refactoring:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:601"
      ]
    },
    "These tests are designed to FAIL initially to expose port configuration issues.": {
      "value": "These tests are designed to FAIL initially to expose port configuration issues.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:460"
      ]
    },
    "This confirms there's a Windows socket permission problem.": {
      "value": "This confirms there's a Windows socket permission problem.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:191"
      ]
    },
    "This demo shows Fix #2: Test Size Limits Enforcement implementation": {
      "value": "This demo shows Fix #2: Test Size Limits Enforcement implementation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:203"
      ]
    },
    "This file causes precedence issues with Google Secret Manager": {
      "value": "This file causes precedence issues with Google Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:21"
      ]
    },
    "This fixes the 422 errors the frontend was experiencing.": {
      "value": "This fixes the 422 errors the frontend was experiencing.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:154"
      ]
    },
    "This is the [WinError 10013] permission error!": {
      "value": "This is the [WinError 10013] permission error!",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:41"
      ]
    },
    "This might be expected if not running on GCP or without proxy": {
      "value": "This might be expected if not running on GCP or without proxy",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:247"
      ]
    },
    "This report identifies test files that violate size constraints.": {
      "value": "This report identifies test files that violate size constraints.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:857"
      ]
    },
    "This should match across all environments": {
      "value": "This should match across all environments",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:154"
      ]
    },
    "This should work if running on GCP or with Cloud SQL proxy": {
      "value": "This should work if running on GCP or with Cloud SQL proxy",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:238"
      ]
    },
    "This test MUST fail to prove the business case for consolidation": {
      "value": "This test MUST fail to prove the business case for consolidation",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:840"
      ]
    },
    "This test should now PASS with the new implementation.": {
      "value": "This test should now PASS with the new implementation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:250"
      ]
    },
    "This validates fixes for issues in test_critical_cold_start_initialization.py": {
      "value": "This validates fixes for issues in test_critical_cold_start_initialization.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:406"
      ]
    },
    "This will cause service communication failures.": {
      "value": "This will cause service communication failures.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:421"
      ]
    },
    "This would contain:\n- All user creation tests\n- All authentication tests  \n- All permission tests\n- All user profile tests\n- Helper functions": {
      "value": "This would contain:\n- All user creation tests\n- All authentication tests  \n- All permission tests\n- All user profile tests\n- Helper functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:67"
      ]
    },
    "This would require careful AST manipulation": {
      "value": "This would require careful AST manipulation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:597"
      ]
    },
    "Threads List": {
      "value": "Threads List",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:80"
      ]
    },
    "Threads count:": {
      "value": "Threads count:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:213"
      ]
    },
    "Timeframe is required": {
      "value": "Timeframe is required",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:100"
      ]
    },
    "Timeout": {
      "value": "Timeout",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:60"
      ]
    },
    "Timeout during test": {
      "value": "Timeout during test",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:180"
      ]
    },
    "Timeout during validation": {
      "value": "Timeout during validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:137"
      ]
    },
    "Timeout in": {
      "value": "Timeout in",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:122"
      ]
    },
    "Timestamp:": {
      "value": "Timestamp:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:460",
        "scripts/test_staging_auth_e2e.py:334",
        "scripts/test_staging_deployment.py:188",
        "scripts/test_staging_jwt_validation.py:19",
        "scripts/test_staging_login_automated.py:305",
        "scripts/test_staging_refresh_format.py:20",
        "scripts/test_websocket_connection.py:176"
      ]
    },
    "To apply these changes, run with --apply flag": {
      "value": "To apply these changes, run with --apply flag",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:186"
      ]
    },
    "To execute the renames, run: python": {
      "value": "To execute the renames, run: python",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:287"
      ]
    },
    "To fix import errors:": {
      "value": "To fix import errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:108"
      ]
    },
    "To fix these issues:": {
      "value": "To fix these issues:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:185"
      ]
    },
    "To limit to first N files: python": {
      "value": "To limit to first N files: python",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:288"
      ]
    },
    "To restore: cp -r {backup_dir}/* {root_dir}/": {
      "value": "To restore: cp -r {backup_dir}/* {root_dir}/",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1013"
      ]
    },
    "To run all integration tests:": {
      "value": "To run all integration tests:",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:209"
      ]
    },
    "To run frontend tests with real services:": {
      "value": "To run frontend tests with real services:",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:207"
      ]
    },
    "To run real e2e tests:": {
      "value": "To run real e2e tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:83"
      ]
    },
    "To use development-specific OAuth credentials:": {
      "value": "To use development-specific OAuth credentials:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:108"
      ]
    },
    "Token (first 20 chars): [cyan]": {
      "value": "Token (first 20 chars): [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:254"
      ]
    },
    "Token Endpoint": {
      "value": "Token Endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:129"
      ]
    },
    "Token Refresh (camelCase)": {
      "value": "Token Refresh (camelCase)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:347"
      ]
    },
    "Token Refresh (snake_case)": {
      "value": "Token Refresh (snake_case)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:346"
      ]
    },
    "Token Test Data Factory\nCreates JWT tokens and OAuth tokens for auth service testing.\nSupports access tokens, refresh tokens, and service tokens with proper claims.": {
      "value": "Token Test Data Factory\nCreates JWT tokens and OAuth tokens for auth service testing.\nSupports access tokens, refresh tokens, and service tokens with proper claims.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:1"
      ]
    },
    "Token Validation": {
      "value": "Token Validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:95",
        "scripts/test_auth_integration.py:101",
        "scripts/test_staging_auth_e2e.py:345"
      ]
    },
    "Token expiration enforcement verified": {
      "value": "Token expiration enforcement verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:132"
      ]
    },
    "Token failed for reason other than expiration:": {
      "value": "Token failed for reason other than expiration:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:69"
      ]
    },
    "Token has been revoked": {
      "value": "Token has been revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:201"
      ]
    },
    "Token is expired:": {
      "value": "Token is expired:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:57"
      ]
    },
    "Token not added to revocation list": {
      "value": "Token not added to revocation list",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:198"
      ]
    },
    "Token replay attack detection verified": {
      "value": "Token replay attack detection verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:168"
      ]
    },
    "Token replay detected": {
      "value": "Token replay detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:165"
      ]
    },
    "Token replay not detected": {
      "value": "Token replay not detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:162"
      ]
    },
    "Token revocation enforcement verified": {
      "value": "Token revocation enforcement verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:204"
      ]
    },
    "Token validation failed:": {
      "value": "Token validation failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:59"
      ]
    },
    "Token validation test failed:": {
      "value": "Token validation test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:100"
      ]
    },
    "TokenFactory": {
      "value": "TokenFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:17"
      ]
    },
    "TokenTestUtils": {
      "value": "TokenTestUtils",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/__init__.py:16"
      ]
    },
    "Tokens changed:": {
      "value": "Tokens changed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:145",
        "scripts/test_staging_auth_e2e.py:180"
      ]
    },
    "Tokens generated with 'test-secret':": {
      "value": "Tokens generated with 'test-secret':",
      "category": "test_literals",
      "locations": [
        "scripts/test_jwt_fix.py:34"
      ]
    },
    "Too many failed validations:": {
      "value": "Too many failed validations:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:268"
      ]
    },
    "ToolDispatcher(llm_manager)": {
      "value": "ToolDispatcher(llm_manager)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:321"
      ]
    },
    "ToolPermissionMiddleware does not default to staging": {
      "value": "ToolPermissionMiddleware does not default to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:84"
      ]
    },
    "Top splitting strategy:": {
      "value": "Top splitting strategy:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:96"
      ]
    },
    "Top violations by type:": {
      "value": "Top violations by type:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:132"
      ]
    },
    "Total Categories:": {
      "value": "Total Categories:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:303",
        "scripts/unified_test_runner.py:1102",
        "scripts/unified_test_runner.py:1113"
      ]
    },
    "Total Duration:": {
      "value": "Total Duration:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:329",
        "scripts/unified_test_runner.py:893"
      ]
    },
    "Total Errors: 2": {
      "value": "Total Errors: 2",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:360"
      ]
    },
    "Total Errors: 6": {
      "value": "Total Errors: 6",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:163"
      ]
    },
    "Total Events Captured:": {
      "value": "Total Events Captured:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:123"
      ]
    },
    "Total Fake Tests Found:": {
      "value": "Total Fake Tests Found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:259"
      ]
    },
    "Total Files Scanned:": {
      "value": "Total Files Scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:258"
      ]
    },
    "Total Iterations:": {
      "value": "Total Iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:130"
      ]
    },
    "Total Test Files:": {
      "value": "Total Test Files:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:50"
      ]
    },
    "Total Test Violations:": {
      "value": "Total Test Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:67"
      ]
    },
    "Total Tests Analyzed:": {
      "value": "Total Tests Analyzed:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:656"
      ]
    },
    "Total Tests:": {
      "value": "Total Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:737",
        "scripts/final_test_status_check.py:99",
        "scripts/test_coordination_fixes.py:379",
        "scripts/test_example_message_flow.py:320",
        "scripts/test_staging_deployment.py:215",
        "scripts/test_staging_env.py:188",
        "scripts/test_verify_workflow_status_corrected.py:194",
        "scripts/test_websocket_dev_mode.py:295"
      ]
    },
    "Total Tracked Tests:": {
      "value": "Total Tracked Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:298"
      ]
    },
    "Total Violations:": {
      "value": "Total Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:310"
      ]
    },
    "Total changes made:": {
      "value": "Total changes made:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:167"
      ]
    },
    "Total conftest.py files:": {
      "value": "Total conftest.py files:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:102"
      ]
    },
    "Total errors:": {
      "value": "Total errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:219"
      ]
    },
    "Total failures found:": {
      "value": "Total failures found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:225"
      ]
    },
    "Total files modified:": {
      "value": "Total files modified:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:197"
      ]
    },
    "Total files processed:": {
      "value": "Total files processed:",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:196",
        "scripts/standardize_l3_test_names.py:282"
      ]
    },
    "Total files scanned:": {
      "value": "Total files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:309"
      ]
    },
    "Total fixes applied:": {
      "value": "Total fixes applied:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:141"
      ]
    },
    "Total iterations:": {
      "value": "Total iterations:",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:140",
        "scripts/iterative_test_fix_loop.py:164"
      ]
    },
    "Total lines:": {
      "value": "Total lines:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:34",
        "scripts/compliance/demo_test_size_enforcement.py:152",
        "scripts/compliance/test_refactor_helper.py:706"
      ]
    },
    "Total mocks found:": {
      "value": "Total mocks found:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:167"
      ]
    },
    "Total savings must be non-negative": {
      "value": "Total savings must be non-negative",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:425"
      ]
    },
    "Total system load time:": {
      "value": "Total system load time:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:640"
      ]
    },
    "Total test files scanned:": {
      "value": "Total test files scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:160",
        "scripts/compliance/test_size_validator.py:420"
      ]
    },
    "Total test files:": {
      "value": "Total test files:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:287"
      ]
    },
    "Total tests processed:": {
      "value": "Total tests processed:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:391"
      ]
    },
    "Total tests scanned:": {
      "value": "Total tests scanned:",
      "category": "test_literals",
      "locations": [
        "scripts/test_exclusion_check.py:34",
        "scripts/test_failure_scanner.py:224"
      ]
    },
    "Total violations:": {
      "value": "Total violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:423",
        "scripts/test_secret_manager_builder_critical.py:772"
      ]
    },
    "Total workflows:": {
      "value": "Total workflows:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:333"
      ]
    },
    "Total:": {
      "value": "Total:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:380",
        "scripts/test_auth_database_sessions.py:396",
        "scripts/test_auth_integration.py:156",
        "scripts/test_database_url_builder_comprehensive.py:347",
        "scripts/test_log_introspection.py:422",
        "scripts/test_ssl_certificates_staging.py:304",
        "scripts/test_staging_auth_e2e.py:373",
        "scripts/test_staging_migrations.py:324",
        "scripts/test_staging_startup.py:271"
      ]
    },
    "Try running as Administrator or use the port cleanup script.": {
      "value": "Try running as Administrator or use the port cleanup script.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:192"
      ]
    },
    "Try running the dev launcher again.": {
      "value": "Try running the dev launcher again.",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:188"
      ]
    },
    "Tuple[": {
      "value": "Tuple[",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:228"
      ]
    },
    "Type:": {
      "value": "Type:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:180",
        "scripts/compliance/test_size_validator.py:441",
        "scripts/remove_test_stubs.py:330"
      ]
    },
    "UNIFIED TEST CONFIGURATION\n==========================\nCentral configuration for all testing operations across Netra platform.\nThis module defines test levels, markers, environments, and execution strategies.": {
      "value": "UNIFIED TEST CONFIGURATION\n==========================\nCentral configuration for all testing operations across Netra platform.\nThis module defines test levels, markers, environments, and execution strategies.",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:1"
      ]
    },
    "URGENT: Add tests for": {
      "value": "URGENT: Add tests for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:252"
      ]
    },
    "URL Construction": {
      "value": "URL Construction",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:220"
      ]
    },
    "URL Driver Compatibility": {
      "value": "URL Driver Compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:265"
      ]
    },
    "URL Generation with Actual Credentials": {
      "value": "URL Generation with Actual Credentials",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:154"
      ]
    },
    "URL construction test failed:": {
      "value": "URL construction test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:122"
      ]
    },
    "URL port:": {
      "value": "URL port:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:419"
      ]
    },
    "URL:": {
      "value": "URL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:115",
        "scripts/test_gtm_loading.py:107",
        "scripts/test_staging_db_direct.py:102",
        "scripts/test_websocket_connection.py:51",
        "scripts/test_websocket_cors_comprehensive.py:56"
      ]
    },
    "USE_DOCKER_SERVICES": {
      "value": "USE_DOCKER_SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:756",
        "scripts/unified_test_runner.py:762"
      ]
    },
    "USE_MOCKS": {
      "value": "USE_MOCKS",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:303"
      ]
    },
    "USE_REAL_LLM": {
      "value": "USE_REAL_LLM",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:758",
        "scripts/unified_test_runner.py:763"
      ]
    },
    "USE_REAL_SERVICES": {
      "value": "USE_REAL_SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:152",
        "scripts/test_staging.py:34",
        "scripts/unified_test_runner.py:206",
        "scripts/unified_test_runner.py:754",
        "scripts/unified_test_runner.py:761"
      ]
    },
    "USE_TEST_DATABASE": {
      "value": "USE_TEST_DATABASE",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:816",
        "scripts/unified_test_runner.py:819"
      ]
    },
    "UTF-8": {
      "value": "UTF-8",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:21",
        "scripts/test_ssl_certificates_staging.py:22",
        "scripts/test_staging_clickhouse.py:54",
        "scripts/test_staging_db_direct.py:24",
        "scripts/test_staging_migrations.py:21"
      ]
    },
    "Unexpected error during testing:": {
      "value": "Unexpected error during testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:348"
      ]
    },
    "Unexpected error:": {
      "value": "Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:69",
        "scripts/test_imports.py:130"
      ]
    },
    "Unexpected exceptions in concurrent validation:": {
      "value": "Unexpected exceptions in concurrent validation:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:269"
      ]
    },
    "Unexpected result": {
      "value": "Unexpected result",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:307"
      ]
    },
    "Unexpected status": {
      "value": "Unexpected status",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:71"
      ]
    },
    "Unexpected status code:": {
      "value": "Unexpected status code:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:159"
      ]
    },
    "Unexpected status:": {
      "value": "Unexpected status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:69"
      ]
    },
    "Unified JWT Validation Tests Package\n\nBusiness Value: Authentication security for cross-service communication": {
      "value": "Unified JWT Validation Tests Package\n\nBusiness Value: Authentication security for cross-service communication",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unified/__init__.py:1"
      ]
    },
    "Unified Test Runner for Netra Apex Platform": {
      "value": "Unified Test Runner for Netra Apex Platform",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:911"
      ]
    },
    "Unit Tests": {
      "value": "Unit Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:46"
      ]
    },
    "Unit tests for auth service refresh token endpoint.\nTests the /auth/refresh endpoint request handling and validation.": {
      "value": "Unit tests for auth service refresh token endpoint.\nTests the /auth/refresh endpoint request handling and validation.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:1"
      ]
    },
    "Unit tests for isolated components": {
      "value": "Unit tests for isolated components",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:75"
      ]
    },
    "Unix socket path doesn't exist in Cloud Run environment": {
      "value": "Unix socket path doesn't exist in Cloud Run environment",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:200"
      ]
    },
    "Unjustified mocks by category:": {
      "value": "Unjustified mocks by category:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:169"
      ]
    },
    "Unjustified mocks:": {
      "value": "Unjustified mocks:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:168"
      ]
    },
    "Unknown": {
      "value": "Unknown",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:79",
        "scripts/team_updates_test_analyzer.py:58",
        "scripts/test_backend_optimized.py:214",
        "scripts/test_secret_manager_builder_critical.py:526",
        "scripts/test_staging_clickhouse.py:174",
        "scripts/test_staging_config.py:97",
        "scripts/test_workflows_with_act.py:211"
      ]
    },
    "Unknown Variable Access env": {
      "value": "Unknown Variable Access env",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:312"
      ]
    },
    "Unknown category:": {
      "value": "Unknown category:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:216",
        "scripts/test_backend_optimized.py:296"
      ]
    },
    "Unknown error": {
      "value": "Unknown error",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:394",
        "scripts/test_workflows_with_act.py:221"
      ]
    },
    "Unknown role:": {
      "value": "Unknown role:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:237"
      ]
    },
    "Update": {
      "value": "Update",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:113"
      ]
    },
    "Update Jest snapshots": {
      "value": "Update Jest snapshots",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:402"
      ]
    },
    "Update optimization models based on execution results": {
      "value": "Update optimization models based on execution results",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:224"
      ]
    },
    "Updated configurations:": {
      "value": "Updated configurations:",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:440"
      ]
    },
    "Updated references in:": {
      "value": "Updated references in:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:124"
      ]
    },
    "Updated test discovery configuration": {
      "value": "Updated test discovery configuration",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:339"
      ]
    },
    "Updated test runner configuration": {
      "value": "Updated test runner configuration",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:234"
      ]
    },
    "Updated test to use": {
      "value": "Updated test to use",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:191"
      ]
    },
    "Updating optimization models with execution data": {
      "value": "Updating optimization models with execution data",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:226"
      ]
    },
    "Upstream service responding slowly": {
      "value": "Upstream service responding slowly",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:105"
      ]
    },
    "Usage count mismatch:": {
      "value": "Usage count mismatch:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:273"
      ]
    },
    "Usage:": {
      "value": "Usage:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:127"
      ]
    },
    "Usage: python standardize_l3_test_names.py [options]": {
      "value": "Usage: python standardize_l3_test_names.py [options]",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:299"
      ]
    },
    "Use API Key authentication for direct API testing": {
      "value": "Use API Key authentication for direct API testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:232"
      ]
    },
    "Use Docker services instead of local processes": {
      "value": "Use Docker services instead of local processes",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:174"
      ]
    },
    "Use browser automation with pre-configured session for UI testing": {
      "value": "Use browser automation with pre-configured session for UI testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:241"
      ]
    },
    "Use bypass token for authenticated endpoint testing": {
      "value": "Use bypass token for authenticated endpoint testing",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:237"
      ]
    },
    "Use deployment pipeline for real migrations": {
      "value": "Use deployment pipeline for real migrations",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:264"
      ]
    },
    "Use pytest fixtures to reduce test function length:\n\n@pytest.fixture\ndef authenticated_user():\n    user_data = {\"email\": \"test@example.com\", \"password\": \"password\"}\n    user = create_user(user_data)\n    token = authenticate_user(user.email, user_data[\"password\"])\n    return user, token\n\ndef test_user_can_access_profile(authenticated_user):\n    user, token = authenticated_user\n    profile = get_user_profile(user.id, token)\n    assert profile[\"email\"] == user.email": {
      "value": "Use pytest fixtures to reduce test function length:\n\n@pytest.fixture\ndef authenticated_user():\n    user_data = {\"email\": \"test@example.com\", \"password\": \"password\"}\n    user = create_user(user_data)\n    token = authenticate_user(user.email, user_data[\"password\"])\n    return user, token\n\ndef test_user_can_access_profile(authenticated_user):\n    user, token = authenticated_user\n    profile = get_user_profile(user.id, token)\n    assert profile[\"email\"] == user.email",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:230"
      ]
    },
    "Use pytest.mark.parametrize to reduce function length:\n\n@pytest.mark.parametrize(\"email,password,expected\", [\n    (\"valid@email.com\", \"strong_password\", True),\n    (\"invalid-email\", \"password\", False),\n    (\"valid@email.com\", \"weak\", False),\n])\ndef test_user_validation(email, password, expected):\n    result = validate_user_data({\"email\": email, \"password\": password})\n    assert result == expected": {
      "value": "Use pytest.mark.parametrize to reduce function length:\n\n@pytest.mark.parametrize(\"email,password,expected\", [\n    (\"valid@email.com\", \"strong_password\", True),\n    (\"invalid-email\", \"password\", False),\n    (\"valid@email.com\", \"weak\", False),\n])\ndef test_user_validation(email, password, expected):\n    result = validate_user_data({\"email\": email, \"password\": password})\n    assert result == expected",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:248"
      ]
    },
    "Use real LLM instead of mocks": {
      "value": "Use real LLM instead of mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:951"
      ]
    },
    "Use real backend services (Docker or local) for frontend tests": {
      "value": "Use real backend services (Docker or local) for frontend tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:957"
      ]
    },
    "Use real components or move mocks to shared test utilities": {
      "value": "Use real components or move mocks to shared test utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:385"
      ]
    },
    "Use test isolation for concurrent execution": {
      "value": "Use test isolation for concurrent execution",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:512",
        "scripts/test_frontend.py:422"
      ]
    },
    "Use the cookies in staging_test_credentials.json with Selenium/Playwright": {
      "value": "Use the cookies in staging_test_credentials.json with Selenium/Playwright",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:323"
      ]
    },
    "Use the credentials in 'staging_test_credentials.json' for testing.": {
      "value": "Use the credentials in 'staging_test_credentials.json' for testing.",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:310"
      ]
    },
    "Use the setup_staging_test_account.py script to generate test credentials": {
      "value": "Use the setup_staging_test_account.py script to generate test credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:373"
      ]
    },
    "User": {
      "value": "User",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:180"
      ]
    },
    "User ID consistent:": {
      "value": "User ID consistent:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:270"
      ]
    },
    "User ID:": {
      "value": "User ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:111"
      ]
    },
    "User Profile": {
      "value": "User Profile",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:79"
      ]
    },
    "User Settings": {
      "value": "User Settings",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:81"
      ]
    },
    "User Test Data Factory\nCreates test users with consistent data patterns for auth service testing.\nSupports both local and OAuth users with proper password handling.": {
      "value": "User Test Data Factory\nCreates test users with consistent data patterns for auth service testing.\nSupports both local and OAuth users with proper password handling.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:1"
      ]
    },
    "User denied access": {
      "value": "User denied access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:269"
      ]
    },
    "User-Agent": {
      "value": "User-Agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:104"
      ]
    },
    "User.": {
      "value": "User.",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:186"
      ]
    },
    "User:": {
      "value": "User:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:218",
        "scripts/test_staging_clickhouse.py:159",
        "scripts/test_staging_db_direct.py:47",
        "scripts/test_staging_migrations.py:47"
      ]
    },
    "User: [cyan]": {
      "value": "User: [cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:309"
      ]
    },
    "UserFactory": {
      "value": "UserFactory",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/__init__.py:13"
      ]
    },
    "UserFlowTestBase": {
      "value": "UserFlowTestBase",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:240",
        "scripts/fix_test_import_errors.py:241"
      ]
    },
    "Uses deprecated unittest patterns": {
      "value": "Uses deprecated unittest patterns",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:272"
      ]
    },
    "Uses hardcoded sleep": {
      "value": "Uses hardcoded sleep",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:282"
      ]
    },
    "Using API Key:": {
      "value": "Using API Key:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:139"
      ]
    },
    "Using GOOGLE_CLIENT_ID from environment": {
      "value": "Using GOOGLE_CLIENT_ID from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:42"
      ]
    },
    "Using GOOGLE_CLIENT_SECRET from environment": {
      "value": "Using GOOGLE_CLIENT_SECRET from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:43"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_ID_DEVELOPMENT from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:30"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_ID_STAGING from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_ID_STAGING from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:56"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_SECRET_DEVELOPMENT from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:31"
      ]
    },
    "Using GOOGLE_OAUTH_CLIENT_SECRET_STAGING from environment": {
      "value": "Using GOOGLE_OAUTH_CLIENT_SECRET_STAGING from environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:57"
      ]
    },
    "Using URL:": {
      "value": "Using URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:197"
      ]
    },
    "Using fallback execution method": {
      "value": "Using fallback execution method",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:243"
      ]
    },
    "Using fallback optimization for test_run_id": {
      "value": "Using fallback optimization for test_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_logging_fix.py:27"
      ]
    },
    "Using wildcard (*) origin - consider specific origins for security": {
      "value": "Using wildcard (*) origin - consider specific origins for security",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:216"
      ]
    },
    "Uvicorn Binding": {
      "value": "Uvicorn Binding",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:159"
      ]
    },
    "VALIDATION ERROR:": {
      "value": "VALIDATION ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:190"
      ]
    },
    "VALIDATION MISMATCH!": {
      "value": "VALIDATION MISMATCH!",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:246"
      ]
    },
    "VALIDATION RESULTS": {
      "value": "VALIDATION RESULTS",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:157"
      ]
    },
    "VERIFIED FUNCTIONALITY:": {
      "value": "VERIFIED FUNCTIONALITY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:316"
      ]
    },
    "VIOLATION EXAMPLES FOR FIXES:": {
      "value": "VIOLATION EXAMPLES FOR FIXES:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:397"
      ]
    },
    "VIOLATION TYPE BREAKDOWN:": {
      "value": "VIOLATION TYPE BREAKDOWN:",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:319"
      ]
    },
    "VIOLATION: conftest.py files found in non-service-level directories:": {
      "value": "VIOLATION: conftest.py files found in non-service-level directories:",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:85"
      ]
    },
    "VIOLATIONS:": {
      "value": "VIOLATIONS:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:437"
      ]
    },
    "Valid": {
      "value": "Valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:193"
      ]
    },
    "Valid Cloud SQL configuration": {
      "value": "Valid Cloud SQL configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:200"
      ]
    },
    "Valid PKCE challenge should pass": {
      "value": "Valid PKCE challenge should pass",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:123"
      ]
    },
    "Valid redirect URI should pass:": {
      "value": "Valid redirect URI should pass:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:95"
      ]
    },
    "Valid session validation failed": {
      "value": "Valid session validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:86"
      ]
    },
    "Valid test token:": {
      "value": "Valid test token:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:60",
        "scripts/test_jwt_fix.py:37"
      ]
    },
    "Valid token validation failed": {
      "value": "Valid token validation failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:73"
      ]
    },
    "Valid:": {
      "value": "Valid:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:732",
        "scripts/test_database_url_builder_comprehensive.py:34",
        "scripts/test_database_url_builder_comprehensive.py:91",
        "scripts/test_database_url_builder_comprehensive.py:133"
      ]
    },
    "Validate splitting suggestion": {
      "value": "Validate splitting suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:683"
      ]
    },
    "Validate test structure and configuration": {
      "value": "Validate test structure and configuration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1062"
      ]
    },
    "Validating JWT Environment Configuration:": {
      "value": "Validating JWT Environment Configuration:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:123"
      ]
    },
    "Validating configuration files...": {
      "value": "Validating configuration files...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:151"
      ]
    },
    "Validating:": {
      "value": "Validating:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:86"
      ]
    },
    "Validation Edge Cases": {
      "value": "Validation Edge Cases",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:309"
      ]
    },
    "Validation Test": {
      "value": "Validation Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:284"
      ]
    },
    "Validation correct": {
      "value": "Validation correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:249"
      ]
    },
    "Validation error:": {
      "value": "Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:337"
      ]
    },
    "Validation failed with exception:": {
      "value": "Validation failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:428"
      ]
    },
    "Validation for": {
      "value": "Validation for",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:731"
      ]
    },
    "Validation script for LLM test model standardization.\n\nThis script ensures that the codebase uses only approved LLM models\n(Gemini models) and flags any regressions to GPT or Claude models\nthat should not be used in tests.": {
      "value": "Validation script for LLM test model standardization.\n\nThis script ensures that the codebase uses only approved LLM models\n(Gemini models) and flags any regressions to GPT or Claude models\nthat should not be used in tests.",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:2"
      ]
    },
    "Validation time should be constant to prevent timing attacks": {
      "value": "Validation time should be constant to prevent timing attacks",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:230"
      ]
    },
    "Validation valid:": {
      "value": "Validation valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:67"
      ]
    },
    "Value": {
      "value": "Value",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:70"
      ]
    },
    "Variable": {
      "value": "Variable",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:68"
      ]
    },
    "Verbose output": {
      "value": "Verbose output",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:389",
        "scripts/test_backend.py:501",
        "scripts/test_backend_optimized.py:389",
        "scripts/test_cors.py:443",
        "scripts/test_example_message_flow.py:434",
        "scripts/test_frontend.py:417",
        "scripts/unified_test_runner.py:996"
      ]
    },
    "Verification summary saved to: workflow_verification_results.md": {
      "value": "Verification summary saved to: workflow_verification_results.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:262"
      ]
    },
    "Verify GitHub workflow status": {
      "value": "Verify GitHub workflow status",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:35",
        "scripts/test_verify_workflow_status_corrected.py:90"
      ]
    },
    "Verify all dependencies are preserved": {
      "value": "Verify all dependencies are preserved",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:582"
      ]
    },
    "Verify all functions are included in the split": {
      "value": "Verify all functions are included in the split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:639"
      ]
    },
    "Verify help text displays correctly": {
      "value": "Verify help text displays correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:80"
      ]
    },
    "Verifying staging is configured to use Google Secret Manager only...": {
      "value": "Verifying staging is configured to use Google Secret Manager only...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:95"
      ]
    },
    "Very low success rate (": {
      "value": "Very low success rate (",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:303"
      ]
    },
    "Violations (": {
      "value": "Violations (",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:344"
      ]
    },
    "Violations found:": {
      "value": "Violations found:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:41"
      ]
    },
    "Violations:": {
      "value": "Violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:38"
      ]
    },
    "WARNING": {
      "value": "WARNING",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:74",
        "netra_backend/app/services/realistic_test_data/log_generator.py:81",
        "netra_backend/app/services/realistic_test_data/log_generator.py:88",
        "scripts/test_backend.py:92",
        "scripts/test_error_monitor_logic.py:37",
        "scripts/test_error_monitor_logic.py:65"
      ]
    },
    "WARNING:": {
      "value": "WARNING:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:268",
        "scripts/auto_fix_test_violations.py:723"
      ]
    },
    "WARNING: Auto-fix capabilities are DANGEROUS and disabled by default!": {
      "value": "WARNING: Auto-fix capabilities are DANGEROUS and disabled by default!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:917"
      ]
    },
    "WARNING: Expected valid URL to pass validation": {
      "value": "WARNING: Expected valid URL to pass validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:183"
      ]
    },
    "WARNING: Fix the issues above before deploying to staging.": {
      "value": "WARNING: Fix the issues above before deploying to staging.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:127"
      ]
    },
    "WARNING: Found": {
      "value": "WARNING: Found",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "WARNING: Found naming conflicts in": {
      "value": "WARNING: Found naming conflicts in",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:239"
      ]
    },
    "WARNING: New file": {
      "value": "WARNING: New file",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:838"
      ]
    },
    "WARNING: Socket path does not exist:": {
      "value": "WARNING: Socket path does not exist:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:246"
      ]
    },
    "WARNINGS (": {
      "value": "WARNINGS (",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:296"
      ]
    },
    "WEBSOCKET": {
      "value": "WEBSOCKET",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:114",
        "scripts/test_chat_errors.py:115"
      ]
    },
    "WEBSOCKET DEV MODE FUNCTIONAL TEST REPORT": {
      "value": "WEBSOCKET DEV MODE FUNCTIONAL TEST REPORT",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:289"
      ]
    },
    "WEBSOCKET_AUTH_BYPASS": {
      "value": "WEBSOCKET_AUTH_BYPASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:39",
        "scripts/test_docker_websocket_fix.py:210"
      ]
    },
    "WEBSOCKET_AUTH_BYPASS: true": {
      "value": "WEBSOCKET_AUTH_BYPASS: true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:158"
      ]
    },
    "WEBSOCKET_AUTH_BYPASS=true": {
      "value": "WEBSOCKET_AUTH_BYPASS=true",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:173"
      ]
    },
    "WEBSOCKET_URL": {
      "value": "WEBSOCKET_URL",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:155",
        "scripts/unified_test_runner.py:209",
        "scripts/unified_test_runner.py:209"
      ]
    },
    "WS_BASE_URL": {
      "value": "WS_BASE_URL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:31"
      ]
    },
    "Wait for all services to be healthy.": {
      "value": "Wait for all services to be healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:144"
      ]
    },
    "Wait for services to be available": {
      "value": "Wait for services to be available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:56"
      ]
    },
    "Waiting for Docker services to be healthy...": {
      "value": "Waiting for Docker services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:199"
      ]
    },
    "Waiting for services to be available...": {
      "value": "Waiting for services to be available...",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:98"
      ]
    },
    "Waiting for services to be ready...": {
      "value": "Waiting for services to be ready...",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:113"
      ]
    },
    "Warning 1": {
      "value": "Warning 1",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:466"
      ]
    },
    "Warning 2": {
      "value": "Warning 2",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:466"
      ]
    },
    "Warning 3": {
      "value": "Warning 3",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:466"
      ]
    },
    "Warning: Categories not found:": {
      "value": "Warning: Categories not found:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:282"
      ]
    },
    "Warning: Could not find LLMTestModel enum definition": {
      "value": "Warning: Could not find LLMTestModel enum definition",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:102"
      ]
    },
    "Warning: Could not load .env.test file:": {
      "value": "Warning: Could not load .env.test file:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:260"
      ]
    },
    "Warning: Expected model": {
      "value": "Warning: Expected model",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:117"
      ]
    },
    "Warning: File not found:": {
      "value": "Warning: File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:137"
      ]
    },
    "Warning: Known failing file not found:": {
      "value": "Warning: Known failing file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:258"
      ]
    },
    "Warning: LLMTestModel enum file not found at": {
      "value": "Warning: LLMTestModel enum file not found at",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:91"
      ]
    },
    "Warning: Resume category '": {
      "value": "Warning: Resume category '",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:289"
      ]
    },
    "Warning: python-dotenv not installed, using default test environment": {
      "value": "Warning: python-dotenv not installed, using default test environment",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:73"
      ]
    },
    "Warnings:": {
      "value": "Warnings:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:734",
        "scripts/test_secret_manager_debug.py:69"
      ]
    },
    "WebSocket": {
      "value": "WebSocket",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:71",
        "scripts/test_staging_deployment.py:173",
        "scripts/test_staging_login_automated.py:181"
      ]
    },
    "WebSocket Connection": {
      "value": "WebSocket Connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:149",
        "scripts/test_staging_env.py:149"
      ]
    },
    "WebSocket Test": {
      "value": "WebSocket Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:42"
      ]
    },
    "WebSocket URL not found": {
      "value": "WebSocket URL not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:268",
        "scripts/test_cold_start_e2e.py:377"
      ]
    },
    "WebSocket auth failed:": {
      "value": "WebSocket auth failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:302"
      ]
    },
    "WebSocket auth properly rejected invalid token - GOOD!": {
      "value": "WebSocket auth properly rejected invalid token - GOOD!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:218"
      ]
    },
    "WebSocket closed unexpectedly:": {
      "value": "WebSocket closed unexpectedly:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:223"
      ]
    },
    "WebSocket config endpoint test PASSED": {
      "value": "WebSocket config endpoint test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:98"
      ]
    },
    "WebSocket config retrieved:": {
      "value": "WebSocket config retrieved:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:46"
      ]
    },
    "WebSocket connected successfully": {
      "value": "WebSocket connected successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:189"
      ]
    },
    "WebSocket connection successful": {
      "value": "WebSocket connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:95"
      ]
    },
    "WebSocket connection tests failed (services may not be running):": {
      "value": "WebSocket connection tests failed (services may not be running):",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:249"
      ]
    },
    "WebSocket endpoint not detected (may require authentication)": {
      "value": "WebSocket endpoint not detected (may require authentication)",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:113"
      ]
    },
    "WebSocket endpoint to test (default: /ws)": {
      "value": "WebSocket endpoint to test (default: /ws)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:433"
      ]
    },
    "WebSocket health endpoint test PASSED": {
      "value": "WebSocket health endpoint test PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:128"
      ]
    },
    "WebSocket implementation is working correctly in DEV MODE!": {
      "value": "WebSocket implementation is working correctly in DEV MODE!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:311"
      ]
    },
    "WebSocket test failed:": {
      "value": "WebSocket test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:306",
        "scripts/test_staging_env.py:99",
        "scripts/test_websocket_dev_mode.py:232"
      ]
    },
    "WebSocket-related tests": {
      "value": "WebSocket-related tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:86"
      ]
    },
    "WebSocket:": {
      "value": "WebSocket:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:533"
      ]
    },
    "WebSocketTester/1.0": {
      "value": "WebSocketTester/1.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:104"
      ]
    },
    "Welcome message:": {
      "value": "Welcome message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:67"
      ]
    },
    "When SecretManagerBuilder is implemented, this test will pass completely": {
      "value": "When SecretManagerBuilder is implemented, this test will pass completely",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:841"
      ]
    },
    "With CORS origin header only": {
      "value": "With CORS origin header only",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:31"
      ]
    },
    "With dev token in subprotocol": {
      "value": "With dev token in subprotocol",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:39"
      ]
    },
    "Worker Utilization:": {
      "value": "Worker Utilization:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:353"
      ]
    },
    "Workflow Status Verification Script - Corrected Test Suite": {
      "value": "Workflow Status Verification Script - Corrected Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:178"
      ]
    },
    "Workload Simulator\n\nThis module generates realistic workload patterns with seasonality and business logic.": {
      "value": "Workload Simulator\n\nThis module generates realistic workload patterns with seasonality and business logic.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:1"
      ]
    },
    "Workload optimized. Performance improved by 25%.": {
      "value": "Workload optimized. Performance improved by 25%.",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:216"
      ]
    },
    "WorkloadSimulator": {
      "value": "WorkloadSimulator",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/__init__.py:86"
      ]
    },
    "Would add to": {
      "value": "Would add to",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:220"
      ]
    },
    "Would split": {
      "value": "Would split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:830"
      ]
    },
    "X-API-Key": {
      "value": "X-API-Key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:190",
        "scripts/test_staging_login_automated.py:137"
      ]
    },
    "X-Mock-User": {
      "value": "X-Mock-User",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:73"
      ]
    },
    "X-RateLimit-Limit": {
      "value": "X-RateLimit-Limit",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:239"
      ]
    },
    "X-RateLimit-Remaining": {
      "value": "X-RateLimit-Remaining",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:240",
        "auth_service/tests/utils/assertion_helpers.py:243"
      ]
    },
    "X-RateLimit-Reset": {
      "value": "X-RateLimit-Reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:241"
      ]
    },
    "X-Response-Time": {
      "value": "X-Response-Time",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:88"
      ]
    },
    "X-Service-ID": {
      "value": "X-Service-ID",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:117"
      ]
    },
    "X-Test-Mode": {
      "value": "X-Test-Mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:74"
      ]
    },
    "YES": {
      "value": "YES",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "YES I UNDERSTAND THE RISKS": {
      "value": "YES I UNDERSTAND THE RISKS",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:957"
      ]
    },
    "You can start it with: npm run dev (in the frontend directory)": {
      "value": "You can start it with: npm run dev (in the frontend directory)",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:262"
      ]
    },
    "Z": {
      "value": "Z",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:127",
        "auth_service/tests/utils/assertion_helpers.py:129"
      ]
    },
    "ZmVybmV0LXRlc3Qta2V5LXBsYWNlaG9sZGVyLTEyMw==": {
      "value": "ZmVybmV0LXRlc3Qta2V5LXBsYWNlaG9sZGVyLTEyMw==",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:55",
        "scripts/test_staging_config.py:136"
      ]
    },
    "[": {
      "value": "[",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:391",
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166",
        "scripts/comprehensive_test_fixer.py:304",
        "scripts/standardize_l3_test_names.py:273",
        "scripts/test_chat_errors.py:10",
        "scripts/test_chat_errors.py:123",
        "scripts/test_cors_ssot_compliance.py:43",
        "scripts/test_cors_ssot_compliance.py:79",
        "scripts/test_cors_ssot_compliance.py:87"
      ]
    },
    "[!] Action Required: Fix violations to improve test quality": {
      "value": "[!] Action Required: Fix violations to improve test quality",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:192"
      ]
    },
    "[+] CORS validation implemented": {
      "value": "[+] CORS validation implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:320"
      ]
    },
    "[+] Configuration and health endpoints working": {
      "value": "[+] Configuration and health endpoints working",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:319"
      ]
    },
    "[+] Connection management working": {
      "value": "[+] Connection management working",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:322"
      ]
    },
    "[+] JWT authentication enforced": {
      "value": "[+] JWT authentication enforced",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:321"
      ]
    },
    "[+] Message processing implemented": {
      "value": "[+] Message processing implemented",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:323"
      ]
    },
    "[+] Resource cleanup functioning": {
      "value": "[+] Resource cleanup functioning",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:324"
      ]
    },
    "[+] Secure WebSocket endpoints registered": {
      "value": "[+] Secure WebSocket endpoints registered",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:318"
      ]
    },
    "[--]": {
      "value": "[--]",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:157"
      ]
    },
    "[/cyan]": {
      "value": "[/cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:309",
        "scripts/test_oauth_local.py:437",
        "scripts/test_oauth_local.py:438"
      ]
    },
    "[/green]": {
      "value": "[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:462"
      ]
    },
    "[/red]": {
      "value": "[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:116",
        "scripts/test_oauth_local.py:131",
        "scripts/test_oauth_local.py:465"
      ]
    },
    "[AUTO-FIX] Applying automatic improvements...": {
      "value": "[AUTO-FIX] Applying automatic improvements...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:63",
        "scripts/autonomous_review/test_reviewer.py:274"
      ]
    },
    "[COMPLETE] SQLAlchemy 2.0 Migration: ALL TESTS PASSED!": {
      "value": "[COMPLETE] SQLAlchemy 2.0 Migration: ALL TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:73"
      ]
    },
    "[CONTENT] Contains '": {
      "value": "[CONTENT] Contains '",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:49"
      ]
    },
    "[COVERAGE] Analyzing test coverage...": {
      "value": "[COVERAGE] Analyzing test coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:46"
      ]
    },
    "[CRASH] Test suite crashed:": {
      "value": "[CRASH] Test suite crashed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:356"
      ]
    },
    "[CRITICAL]": {
      "value": "[CRITICAL]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[CRITICAL] Configuration Status:": {
      "value": "[CRITICAL] Configuration Status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:69",
        "scripts/test_staging_config.py:90"
      ]
    },
    "[CRITICAL] Majority of test files violate limits. Consider systematic refactoring.": {
      "value": "[CRITICAL] Majority of test files violate limits. Consider systematic refactoring.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:56"
      ]
    },
    "[Complete] Coverage System Test Complete!": {
      "value": "[Complete] Coverage System Test Complete!",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:102"
      ]
    },
    "[Coverage Test] Testing Coverage System...": {
      "value": "[Coverage Test] Testing Coverage System...",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:17"
      ]
    },
    "[Coverage] Coverage Report: reports/coverage/html/index.html": {
      "value": "[Coverage] Coverage Report: reports/coverage/html/index.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:419"
      ]
    },
    "[Coverage] Total Coverage:": {
      "value": "[Coverage] Total Coverage:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:412"
      ]
    },
    "[DEBUG] Full error details:": {
      "value": "[DEBUG] Full error details:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:133",
        "scripts/test_staging_config.py:150"
      ]
    },
    "[DEBUG] Running command for": {
      "value": "[DEBUG] Running command for",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:477"
      ]
    },
    "[DIR]": {
      "value": "[DIR]",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:143"
      ]
    },
    "[DONE] Created test infrastructure improvements": {
      "value": "[DONE] Created test infrastructure improvements",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:127"
      ]
    },
    "[DONE] Enhanced first-time user critical path validation": {
      "value": "[DONE] Enhanced first-time user critical path validation",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:124"
      ]
    },
    "[DONE] Ensured E2E health checks are working": {
      "value": "[DONE] Ensured E2E health checks are working",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:126"
      ]
    },
    "[DONE] Fixed Redis connection issues for Python 3.12 compatibility": {
      "value": "[DONE] Fixed Redis connection issues for Python 3.12 compatibility",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:119"
      ]
    },
    "[DONE] Fixed circuit breaker and migration handling tests": {
      "value": "[DONE] Fixed circuit breaker and migration handling tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:122"
      ]
    },
    "[DONE] Generated comprehensive test status reporting": {
      "value": "[DONE] Generated comprehensive test status reporting",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:128"
      ]
    },
    "[DONE] Implemented proper mocking for database-dependent tests": {
      "value": "[DONE] Implemented proper mocking for database-dependent tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:121"
      ]
    },
    "[DONE] Improved test isolation and reduced dependencies": {
      "value": "[DONE] Improved test isolation and reduced dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:123"
      ]
    },
    "[DONE] Resolved alembic version state recovery problems": {
      "value": "[DONE] Resolved alembic version state recovery problems",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:120"
      ]
    },
    "[DONE] Stabilized auth service configuration tests": {
      "value": "[DONE] Stabilized auth service configuration tests",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:125"
      ]
    },
    "[DRY RUN] Would rename to:": {
      "value": "[DRY RUN] Would rename to:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:178"
      ]
    },
    "[Direct API Access Test]": {
      "value": "[Direct API Access Test]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:116"
      ]
    },
    "[ERROR]": {
      "value": "[ERROR]",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:202",
        "scripts/manage_test_services.py:216",
        "scripts/simple_test_fix_loop.py:78",
        "scripts/test_staging_jwt_validation.py:76",
        "scripts/test_staging_jwt_validation.py:103",
        "scripts/test_staging_jwt_validation.py:131",
        "scripts/test_verify_workflow_status_corrected.py:55",
        "scripts/unified_test_runner.py:514"
      ]
    },
    "[ERROR] Auth database connection failed": {
      "value": "[ERROR] Auth database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:81"
      ]
    },
    "[ERROR] Auth database test failed:": {
      "value": "[ERROR] Auth database test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:102"
      ]
    },
    "[ERROR] Backend database connection failed": {
      "value": "[ERROR] Backend database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:38"
      ]
    },
    "[ERROR] Backend database test failed:": {
      "value": "[ERROR] Backend database test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:59"
      ]
    },
    "[ERROR] Backend is not healthy. Skipping WebSocket tests.": {
      "value": "[ERROR] Backend is not healthy. Skipping WebSocket tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:180"
      ]
    },
    "[ERROR] Backend unhealthy:": {
      "value": "[ERROR] Backend unhealthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:159"
      ]
    },
    "[ERROR] Basic query execution failed": {
      "value": "[ERROR] Basic query execution failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:46"
      ]
    },
    "[ERROR] Command:": {
      "value": "[ERROR] Command:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:515"
      ]
    },
    "[ERROR] Configuration loading failed:": {
      "value": "[ERROR] Configuration loading failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:132",
        "scripts/test_staging_config.py:149"
      ]
    },
    "[ERROR] Connection closed:": {
      "value": "[ERROR] Connection closed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:125"
      ]
    },
    "[ERROR] Connection failed:": {
      "value": "[ERROR] Connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:58"
      ]
    },
    "[ERROR] Database connection failed": {
      "value": "[ERROR] Database connection failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:30"
      ]
    },
    "[ERROR] Docker is not available": {
      "value": "[ERROR] Docker is not available",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:93"
      ]
    },
    "[ERROR] Error:": {
      "value": "[ERROR] Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:60",
        "scripts/test_websocket_cors_comprehensive.py:129"
      ]
    },
    "[ERROR] Errors:": {
      "value": "[ERROR] Errors:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:126"
      ]
    },
    "[ERROR] Failed": {
      "value": "[ERROR] Failed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:142",
        "scripts/fix_authentication_test_tokens.py:146"
      ]
    },
    "[ERROR] Failed to decode JWT payload:": {
      "value": "[ERROR] Failed to decode JWT payload:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:52"
      ]
    },
    "[ERROR] Failed to run": {
      "value": "[ERROR] Failed to run",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:524"
      ]
    },
    "[ERROR] Failed to run frontend tests:": {
      "value": "[ERROR] Failed to run frontend tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:44",
        "scripts/test_frontend_simple.py:66"
      ]
    },
    "[ERROR] Failed to run tests:": {
      "value": "[ERROR] Failed to run tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:68"
      ]
    },
    "[ERROR] Failed to start test services": {
      "value": "[ERROR] Failed to start test services",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:68"
      ]
    },
    "[ERROR] Failed to stop test services": {
      "value": "[ERROR] Failed to stop test services",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:83"
      ]
    },
    "[ERROR] File not found:": {
      "value": "[ERROR] File not found:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:95"
      ]
    },
    "[ERROR] Found": {
      "value": "[ERROR] Found",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:164"
      ]
    },
    "[ERROR] Frontend tests timed out after 30 seconds": {
      "value": "[ERROR] Frontend tests timed out after 30 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:41"
      ]
    },
    "[ERROR] HTTP Error:": {
      "value": "[ERROR] HTTP Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:121"
      ]
    },
    "[ERROR] Health check failed:": {
      "value": "[ERROR] Health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:165"
      ]
    },
    "[ERROR] Health check timed out after 30s": {
      "value": "[ERROR] Health check timed out after 30s",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:162"
      ]
    },
    "[ERROR] Iteration": {
      "value": "[ERROR] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:96"
      ]
    },
    "[ERROR] LLMTestModel enum contains deprecated models": {
      "value": "[ERROR] LLMTestModel enum contains deprecated models",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:161"
      ]
    },
    "[ERROR] Migration test failed:": {
      "value": "[ERROR] Migration test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:77"
      ]
    },
    "[ERROR] Missing": {
      "value": "[ERROR] Missing",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:130",
        "scripts/fix_authentication_test_tokens.py:135"
      ]
    },
    "[ERROR] Missing required package:": {
      "value": "[ERROR] Missing required package:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:367"
      ]
    },
    "[ERROR] PostgreSQL not available:": {
      "value": "[ERROR] PostgreSQL not available:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:157"
      ]
    },
    "[ERROR] Request failed:": {
      "value": "[ERROR] Request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:47",
        "scripts/test_staging_refresh_format.py:71",
        "scripts/test_staging_refresh_format.py:93",
        "scripts/test_staging_refresh_format.py:120",
        "scripts/test_staging_refresh_format.py:143"
      ]
    },
    "[ERROR] Scanning": {
      "value": "[ERROR] Scanning",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:93"
      ]
    },
    "[ERROR] Too short": {
      "value": "[ERROR] Too short",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "[ERROR] Unhealthy": {
      "value": "[ERROR] Unhealthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:297"
      ]
    },
    "[ERROR] websockets library not found. Install with: pip install websockets": {
      "value": "[ERROR] websockets library not found. Install with: pip install websockets",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:105"
      ]
    },
    "[ERR]": {
      "value": "[ERR]",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:179"
      ]
    },
    "[ERR] ERROR:": {
      "value": "[ERR] ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:32"
      ]
    },
    "[Error] .coveragerc configuration not found": {
      "value": "[Error] .coveragerc configuration not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:118"
      ]
    },
    "[Error] Error running pytest:": {
      "value": "[Error] Error running pytest:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:51"
      ]
    },
    "[Error] HTML coverage report not found": {
      "value": "[Error] HTML coverage report not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:70"
      ]
    },
    "[Error] JSON coverage report not found": {
      "value": "[Error] JSON coverage report not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:100"
      ]
    },
    "[Error] Stderr:": {
      "value": "[Error] Stderr:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:46"
      ]
    },
    "[Error] XML coverage report not found": {
      "value": "[Error] XML coverage report not found",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:85"
      ]
    },
    "[FAILED]": {
      "value": "[FAILED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:183",
        "scripts/test_cors_ssot_compliance.py:212"
      ]
    },
    "[FAILED] SQLAlchemy 2.0 migration needs fixes!": {
      "value": "[FAILED] SQLAlchemy 2.0 migration needs fixes!",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:87"
      ]
    },
    "[FAILED] STAGING STARTUP TESTS FAILED": {
      "value": "[FAILED] STAGING STARTUP TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:277"
      ]
    },
    "[FAILURES] Failed Tests:": {
      "value": "[FAILURES] Failed Tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:304"
      ]
    },
    "[FAILURE] SOME TESTS FAILED": {
      "value": "[FAILURE] SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:216"
      ]
    },
    "[FAILURE] Some tests failed. Please check the errors above.": {
      "value": "[FAILURE] Some tests failed. Please check the errors above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:191"
      ]
    },
    "[FAIL]": {
      "value": "[FAIL]",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:109",
        "scripts/test_cors_ssot_compliance.py:161",
        "scripts/test_cors_ssot_compliance.py:164",
        "scripts/test_cors_ssot_compliance.py:182",
        "scripts/test_docker_websocket_fix.py:263",
        "scripts/test_docker_websocket_fix.py:270",
        "scripts/test_docker_websocket_fix.py:284",
        "scripts/test_docker_websocket_fix.py:287",
        "scripts/test_docker_websocket_fix.py:296",
        "scripts/test_failure_scanner.py:177"
      ]
    },
    "[FAIL] API call error:": {
      "value": "[FAIL] API call error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:225"
      ]
    },
    "[FAIL] API call failed: HTTP": {
      "value": "[FAIL] API call failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:220"
      ]
    },
    "[FAIL] Authentication failed: HTTP 403 Forbidden": {
      "value": "[FAIL] Authentication failed: HTTP 403 Forbidden",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:216"
      ]
    },
    "[FAIL] Backend rejected token (401)": {
      "value": "[FAIL] Backend rejected token (401)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:96"
      ]
    },
    "[FAIL] Backend startup tests failed": {
      "value": "[FAIL] Backend startup tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:99"
      ]
    },
    "[FAIL] Build failed.": {
      "value": "[FAIL] Build failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:506"
      ]
    },
    "[FAIL] CHECKS FAILED with exit code": {
      "value": "[FAIL] CHECKS FAILED with exit code",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:516"
      ]
    },
    "[FAIL] DataSubAgent test failed:": {
      "value": "[FAIL] DataSubAgent test failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:124"
      ]
    },
    "[FAIL] E2E tests failed": {
      "value": "[FAIL] E2E tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:263"
      ]
    },
    "[FAIL] Enhanced registry test failed:": {
      "value": "[FAIL] Enhanced registry test failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:177"
      ]
    },
    "[FAIL] Error handling test failed:": {
      "value": "[FAIL] Error handling test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:114"
      ]
    },
    "[FAIL] Error testing auth bypass:": {
      "value": "[FAIL] Error testing auth bypass:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:276"
      ]
    },
    "[FAIL] Error:": {
      "value": "[FAIL] Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:279"
      ]
    },
    "[FAIL] FAIL": {
      "value": "[FAIL] FAIL",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:370"
      ]
    },
    "[FAIL] FAILED:": {
      "value": "[FAIL] FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:26"
      ]
    },
    "[FAIL] Failed:": {
      "value": "[FAIL] Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:217"
      ]
    },
    "[FAIL] Frontend startup tests failed": {
      "value": "[FAIL] Frontend startup tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:171"
      ]
    },
    "[FAIL] Got 422 Unprocessable Entity - field not accepted!": {
      "value": "[FAIL] Got 422 Unprocessable Entity - field not accepted!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:41",
        "scripts/test_staging_refresh_format.py:64",
        "scripts/test_staging_refresh_format.py:87"
      ]
    },
    "[FAIL] InitializationManager test failed:": {
      "value": "[FAIL] InitializationManager test failed:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:80"
      ]
    },
    "[FAIL] Invalid JSON test failed:": {
      "value": "[FAIL] Invalid JSON test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:120"
      ]
    },
    "[FAIL] Invalid token test failed:": {
      "value": "[FAIL] Invalid token test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:126"
      ]
    },
    "[FAIL] Iteration": {
      "value": "[FAIL] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:88"
      ]
    },
    "[FAIL] Linting failed. Use --fix to auto-fix issues.": {
      "value": "[FAIL] Linting failed. Use --fix to auto-fix issues.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:470"
      ]
    },
    "[FAIL] Login error:": {
      "value": "[FAIL] Login error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:90"
      ]
    },
    "[FAIL] Login failed: HTTP": {
      "value": "[FAIL] Login failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:84"
      ]
    },
    "[FAIL] Logout error:": {
      "value": "[FAIL] Logout error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:326"
      ]
    },
    "[FAIL] Logout failed: HTTP": {
      "value": "[FAIL] Logout failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:322"
      ]
    },
    "[FAIL] Multiple formats test failed:": {
      "value": "[FAIL] Multiple formats test failed:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:108"
      ]
    },
    "[FAIL] New token validation failed": {
      "value": "[FAIL] New token validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:272"
      ]
    },
    "[FAIL] No access token available": {
      "value": "[FAIL] No access token available",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:98",
        "scripts/test_staging_auth_e2e.py:196",
        "scripts/test_staging_auth_e2e.py:294"
      ]
    },
    "[FAIL] No refresh token available": {
      "value": "[FAIL] No refresh token available",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:127",
        "scripts/test_staging_auth_e2e.py:161",
        "scripts/test_staging_auth_e2e.py:233"
      ]
    },
    "[FAIL] Refresh error:": {
      "value": "[FAIL] Refresh error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:153",
        "scripts/test_staging_auth_e2e.py:188"
      ]
    },
    "[FAIL] Refresh failed: HTTP": {
      "value": "[FAIL] Refresh failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:148",
        "scripts/test_staging_auth_e2e.py:183",
        "scripts/test_staging_auth_e2e.py:275"
      ]
    },
    "[FAIL] Result doesn't match expectation. Expected:": {
      "value": "[FAIL] Result doesn't match expectation. Expected:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:135"
      ]
    },
    "[FAIL] Some critical checks failed. Please review the configuration.": {
      "value": "[FAIL] Some critical checks failed. Please review the configuration.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:325"
      ]
    },
    "[FAIL] TEST FAILED:": {
      "value": "[FAIL] TEST FAILED:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:176"
      ]
    },
    "[FAIL] TESTS FAILED with exit code": {
      "value": "[FAIL] TESTS FAILED with exit code",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:396"
      ]
    },
    "[FAIL] Test failed:": {
      "value": "[FAIL] Test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:98"
      ]
    },
    "[FAIL] Tests failed": {
      "value": "[FAIL] Tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:71"
      ]
    },
    "[FAIL] Tests failed. Found": {
      "value": "[FAIL] Tests failed. Found",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:115"
      ]
    },
    "[FAIL] Token still valid after logout!": {
      "value": "[FAIL] Token still valid after logout!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:319"
      ]
    },
    "[FAIL] Token validation failed: HTTP": {
      "value": "[FAIL] Token validation failed: HTTP",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:115"
      ]
    },
    "[FAIL] Type checking failed.": {
      "value": "[FAIL] Type checking failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:481"
      ]
    },
    "[FAIL] UNEXPECTED ERROR:": {
      "value": "[FAIL] UNEXPECTED ERROR:",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:179"
      ]
    },
    "[FAIL] Unexpected status code": {
      "value": "[FAIL] Unexpected status code",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:100"
      ]
    },
    "[FAIL] Validation error:": {
      "value": "[FAIL] Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:119"
      ]
    },
    "[FAIL] Validation failed": {
      "value": "[FAIL] Validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:73"
      ]
    },
    "[FAIL] WebSocket Connection:": {
      "value": "[FAIL] WebSocket Connection:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:180"
      ]
    },
    "[FIXED]": {
      "value": "[FIXED]",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:91"
      ]
    },
    "[FIXED] Fixed and verified": {
      "value": "[FIXED] Fixed and verified",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:328"
      ]
    },
    "[GAPS] Identifying test gaps...": {
      "value": "[GAPS] Identifying test gaps...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:54"
      ]
    },
    "[GOOD] Most test files comply. Address remaining violations.": {
      "value": "[GOOD] Most test files comply. Address remaining violations.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:60"
      ]
    },
    "[HEALTH] Testing HTTP Health:": {
      "value": "[HEALTH] Testing HTTP Health:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:148"
      ]
    },
    "[INFO] Auth service may require service authentication": {
      "value": "[INFO] Auth service may require service authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:124"
      ]
    },
    "[INFO] Cloud SQL connector not installed (optional for local dev):": {
      "value": "[INFO] Cloud SQL connector not installed (optional for local dev):",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:117"
      ]
    },
    "[INFO] Environment Variables:": {
      "value": "[INFO] Environment Variables:",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:33"
      ]
    },
    "[INFO] Executing:": {
      "value": "[INFO] Executing:",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:141"
      ]
    },
    "[INFO] Got status": {
      "value": "[INFO] Got status",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:44",
        "scripts/test_staging_refresh_format.py:68",
        "scripts/test_staging_refresh_format.py:90",
        "scripts/test_staging_refresh_format.py:117",
        "scripts/test_staging_refresh_format.py:141"
      ]
    },
    "[INFO] Including ClickHouse service...": {
      "value": "[INFO] Including ClickHouse service...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:54"
      ]
    },
    "[INFO] No ENVIRONMENT set, using test values for local testing": {
      "value": "[INFO] No ENVIRONMENT set, using test values for local testing",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:140"
      ]
    },
    "[INFO] No frontend tests found - passing": {
      "value": "[INFO] No frontend tests found - passing",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:31"
      ]
    },
    "[INFO] No test services are running": {
      "value": "[INFO] No test services are running",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:111"
      ]
    },
    "[INFO] No token replacements needed in": {
      "value": "[INFO] No token replacements needed in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:115"
      ]
    },
    "[INFO] Operation cancelled by user": {
      "value": "[INFO] Operation cancelled by user",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:213"
      ]
    },
    "[INFO] Running frontend tests:": {
      "value": "[INFO] Running frontend tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:50"
      ]
    },
    "[INFO] Running full staging test suite...": {
      "value": "[INFO] Running full staging test suite...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:102"
      ]
    },
    "[INFO] Running quick staging health checks...": {
      "value": "[INFO] Running quick staging health checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:99"
      ]
    },
    "[INFO] Running standard staging tests...": {
      "value": "[INFO] Running standard staging tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:105"
      ]
    },
    "[INFO] Running tests with Docker infrastructure...": {
      "value": "[INFO] Running tests with Docker infrastructure...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:128"
      ]
    },
    "[INFO] Starting E2E service stack...": {
      "value": "[INFO] Starting E2E service stack...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:50"
      ]
    },
    "[INFO] Starting test services...": {
      "value": "[INFO] Starting test services...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:38"
      ]
    },
    "[INFO] Stopping test services...": {
      "value": "[INFO] Stopping test services...",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:73"
      ]
    },
    "[INFO] To run frontend tests, install dependencies with: cd frontend && npm install": {
      "value": "[INFO] To run frontend tests, install dependencies with: cd frontend && npm install",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:24"
      ]
    },
    "[INTERRUPTED] Test run cancelled by user": {
      "value": "[INTERRUPTED] Test run cancelled by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:65"
      ]
    },
    "[INTERRUPT] Test interrupted by user": {
      "value": "[INTERRUPT] Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:353"
      ]
    },
    "[LIVE MODE - Testing real connections]": {
      "value": "[LIVE MODE - Testing real connections]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:232"
      ]
    },
    "[MAIN] Simple WebSocket Connection Test": {
      "value": "[MAIN] Simple WebSocket Connection Test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:64"
      ]
    },
    "[MAIN] WebSocket CORS Comprehensive Test Suite": {
      "value": "[MAIN] WebSocket CORS Comprehensive Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:319"
      ]
    },
    "[MAJOR]": {
      "value": "[MAJOR]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[MINOR]": {
      "value": "[MINOR]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:301"
      ]
    },
    "[MISSING]": {
      "value": "[MISSING]",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:346",
        "scripts/test_frontend.py:451"
      ]
    },
    "[Mock Login Test]": {
      "value": "[Mock Login Test]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:48"
      ]
    },
    "[OAuth Redirect Test]": {
      "value": "[OAuth Redirect Test]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:243"
      ]
    },
    "[OK]": {
      "value": "[OK]",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:153",
        "scripts/apply_fast_test_decorators.py:177",
        "scripts/test_backend.py:346",
        "scripts/test_discovery_report.py:77",
        "scripts/test_discovery_report.py:146",
        "scripts/test_docker_websocket_fix.py:263",
        "scripts/test_docker_websocket_fix.py:270",
        "scripts/test_docker_websocket_fix.py:282",
        "scripts/test_docker_websocket_fix.py:284",
        "scripts/test_docker_websocket_fix.py:296"
      ]
    },
    "[OK] Access token: ...": {
      "value": "[OK] Access token: ...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:79"
      ]
    },
    "[OK] All critical checks passed! WebSocket should work in Docker development environment.": {
      "value": "[OK] All critical checks passed! WebSocket should work in Docker development environment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:322"
      ]
    },
    "[OK] All dependencies resolved": {
      "value": "[OK] All dependencies resolved",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:102"
      ]
    },
    "[OK] All project tests comply with real test requirements!": {
      "value": "[OK] All project tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:310"
      ]
    },
    "[OK] All required configuration loaded": {
      "value": "[OK] All required configuration loaded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:133"
      ]
    },
    "[OK] All secrets accessible": {
      "value": "[OK] All secrets accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:167"
      ]
    },
    "[OK] All test files are compliant!": {
      "value": "[OK] All test files are compliant!",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:190"
      ]
    },
    "[OK] All tests comply with real test requirements!": {
      "value": "[OK] All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:472"
      ]
    },
    "[OK] All validation checks passed!": {
      "value": "[OK] All validation checks passed!",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:194"
      ]
    },
    "[OK] Async test configuration already updated": {
      "value": "[OK] Async test configuration already updated",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:17"
      ]
    },
    "[OK] Auth database connection closed": {
      "value": "[OK] Auth database connection closed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:97"
      ]
    },
    "[OK] Auth database connection successful": {
      "value": "[OK] Auth database connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:79"
      ]
    },
    "[OK] Auth database initialized": {
      "value": "[OK] Auth database initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:74"
      ]
    },
    "[OK] Auth database status:": {
      "value": "[OK] Auth database status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:86"
      ]
    },
    "[OK] Auth service is healthy": {
      "value": "[OK] Auth service is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:55"
      ]
    },
    "[OK] Authenticated API call successful": {
      "value": "[OK] Authenticated API call successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:212"
      ]
    },
    "[OK] Backend accepted token": {
      "value": "[OK] Backend accepted token",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:94"
      ]
    },
    "[OK] Backend database connection closed": {
      "value": "[OK] Backend database connection closed",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:54"
      ]
    },
    "[OK] Backend database connection successful": {
      "value": "[OK] Backend database connection successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:36"
      ]
    },
    "[OK] Backend database initialized": {
      "value": "[OK] Backend database initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:31"
      ]
    },
    "[OK] Backend database status:": {
      "value": "[OK] Backend database status:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:43"
      ]
    },
    "[OK] Backend healthy:": {
      "value": "[OK] Backend healthy:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:156"
      ]
    },
    "[OK] Backend is healthy": {
      "value": "[OK] Backend is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:41"
      ]
    },
    "[OK] Backend startup tests passed (": {
      "value": "[OK] Backend startup tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:97"
      ]
    },
    "[OK] CORS headers present": {
      "value": "[OK] CORS headers present",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:91"
      ]
    },
    "[OK] Client ID loaded correctly": {
      "value": "[OK] Client ID loaded correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:89"
      ]
    },
    "[OK] Client Secret loaded correctly": {
      "value": "[OK] Client Secret loaded correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:95"
      ]
    },
    "[OK] Cloud SQL connector is available": {
      "value": "[OK] Cloud SQL connector is available",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:114"
      ]
    },
    "[OK] Connected in": {
      "value": "[OK] Connected in",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:96",
        "scripts/test_websocket_simple.py:37"
      ]
    },
    "[OK] Connected to database:": {
      "value": "[OK] Connected to database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:93"
      ]
    },
    "[OK] Container ID:": {
      "value": "[OK] Container ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:120"
      ]
    },
    "[OK] DataLayer:": {
      "value": "[OK] DataLayer:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:123"
      ]
    },
    "[OK] E2E tests passed (": {
      "value": "[OK] E2E tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:261"
      ]
    },
    "[OK] Endpoint accepted camelCase format!": {
      "value": "[OK] Endpoint accepted camelCase format!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:60"
      ]
    },
    "[OK] Endpoint accepted simple token format": {
      "value": "[OK] Endpoint accepted simple token format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:84"
      ]
    },
    "[OK] Endpoint accepted snake_case format": {
      "value": "[OK] Endpoint accepted snake_case format",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:38"
      ]
    },
    "[OK] Exit code:": {
      "value": "[OK] Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:56"
      ]
    },
    "[OK] Fixed": {
      "value": "[OK] Fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:113"
      ]
    },
    "[OK] Frontend is accessible": {
      "value": "[OK] Frontend is accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:27"
      ]
    },
    "[OK] Frontend startup tests passed (": {
      "value": "[OK] Frontend startup tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:169"
      ]
    },
    "[OK] GTM Found:": {
      "value": "[OK] GTM Found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:119"
      ]
    },
    "[OK] Good": {
      "value": "[OK] Good",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "[OK] Got expected 422 for empty body": {
      "value": "[OK] Got expected 422 for empty body",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:106"
      ]
    },
    "[OK] Got expected 422 for wrong field": {
      "value": "[OK] Got expected 422 for wrong field",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:133"
      ]
    },
    "[OK] Health Check:": {
      "value": "[OK] Health Check:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:130"
      ]
    },
    "[OK] Health endpoints configured": {
      "value": "[OK] Health endpoints configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:191"
      ]
    },
    "[OK] Healthy": {
      "value": "[OK] Healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:297"
      ]
    },
    "[OK] Login successful": {
      "value": "[OK] Login successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:78"
      ]
    },
    "[OK] Logout successful": {
      "value": "[OK] Logout successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:307"
      ]
    },
    "[OK] No changes needed:": {
      "value": "[OK] No changes needed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:93"
      ]
    },
    "[OK] No deprecated model references found in test files": {
      "value": "[OK] No deprecated model references found in test files",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:177"
      ]
    },
    "[OK] No size violations found!": {
      "value": "[OK] No size violations found!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:446"
      ]
    },
    "[OK] NoScript Tag:": {
      "value": "[OK] NoScript Tag:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:122"
      ]
    },
    "[OK] PASS": {
      "value": "[OK] PASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:370"
      ]
    },
    "[OK] PostgreSQL is running on localhost:": {
      "value": "[OK] PostgreSQL is running on localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:145"
      ]
    },
    "[OK] PostgreSQL version:": {
      "value": "[OK] PostgreSQL version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:50"
      ]
    },
    "[OK] Protected endpoints require authentication (expected)": {
      "value": "[OK] Protected endpoints require authentication (expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:65"
      ]
    },
    "[OK] Refresh token: ...": {
      "value": "[OK] Refresh token: ...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:80"
      ]
    },
    "[OK] Script Tag:": {
      "value": "[OK] Script Tag:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:121"
      ]
    },
    "[OK] Service initialization order correct": {
      "value": "[OK] Service initialization order correct",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:69"
      ]
    },
    "[OK] Session persisted across": {
      "value": "[OK] Session persisted across",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:284"
      ]
    },
    "[OK] Set": {
      "value": "[OK] Set",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:130",
        "scripts/fix_authentication_test_tokens.py:135"
      ]
    },
    "[OK] Startup completed in": {
      "value": "[OK] Startup completed in",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:209"
      ]
    },
    "[OK] Token is valid": {
      "value": "[OK] Token is valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:110"
      ]
    },
    "[OK] Token properly invalidated after logout": {
      "value": "[OK] Token properly invalidated after logout",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:316"
      ]
    },
    "[OK] Token refreshed and valid": {
      "value": "[OK] Token refreshed and valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:269"
      ]
    },
    "[OK] Token refreshed successfully (camelCase)": {
      "value": "[OK] Token refreshed successfully (camelCase)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:178"
      ]
    },
    "[OK] Token refreshed successfully (snake_case)": {
      "value": "[OK] Token refreshed successfully (snake_case)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:143"
      ]
    },
    "[OK] Token valid until:": {
      "value": "[OK] Token valid until:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:49"
      ]
    },
    "[OK] Token validated successfully": {
      "value": "[OK] Token validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:69"
      ]
    },
    "[OK] User ID:": {
      "value": "[OK] User ID:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:81"
      ]
    },
    "[OK] Validation successful without service secret": {
      "value": "[OK] Validation successful without service secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:127"
      ]
    },
    "[OK] WebSocket endpoint found at": {
      "value": "[OK] WebSocket endpoint found at",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:106"
      ]
    },
    "[OK] Working": {
      "value": "[OK] Working",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:142",
        "scripts/fix_authentication_test_tokens.py:146"
      ]
    },
    "[OUTPUT]": {
      "value": "[OUTPUT]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:52"
      ]
    },
    "[OUTPUT] Output:": {
      "value": "[OUTPUT] Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:58"
      ]
    },
    "[Output] Coverage output preview:": {
      "value": "[Output] Coverage output preview:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:41"
      ]
    },
    "[Output] Output:": {
      "value": "[Output] Output:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:44"
      ]
    },
    "[PASSED]": {
      "value": "[PASSED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:183",
        "scripts/test_cors_ssot_compliance.py:212"
      ]
    },
    "[PASS]": {
      "value": "[PASS]",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:109",
        "scripts/test_cors_ssot_compliance.py:159",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139",
        "scripts/test_staging_startup.py:250",
        "scripts/test_verify_workflow_status.py:178",
        "scripts/unified_test_runner.py:856"
      ]
    },
    "[PASS] ALL ENVIRONMENT DETECTION TESTS PASSED!": {
      "value": "[PASS] ALL ENVIRONMENT DETECTION TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:167"
      ]
    },
    "[PASS] ALL TESTS PASSED in": {
      "value": "[PASS] ALL TESTS PASSED in",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:394"
      ]
    },
    "[PASS] Agent created:": {
      "value": "[PASS] Agent created:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:55",
        "netra_backend/app/agents/test_agent_initialization.py:104"
      ]
    },
    "[PASS] Agent retrieved:": {
      "value": "[PASS] Agent retrieved:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:168"
      ]
    },
    "[PASS] All": {
      "value": "[PASS] All",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:180"
      ]
    },
    "[PASS] All OAuth config tests passed!": {
      "value": "[PASS] All OAuth config tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:151"
      ]
    },
    "[PASS] All auth client environment detection tests passed!": {
      "value": "[PASS] All auth client environment detection tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:62"
      ]
    },
    "[PASS] All middleware environment default tests passed!": {
      "value": "[PASS] All middleware environment default tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:104"
      ]
    },
    "[PASS] All schema default tests passed!": {
      "value": "[PASS] All schema default tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:122"
      ]
    },
    "[PASS] Already passing": {
      "value": "[PASS] Already passing",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:310"
      ]
    },
    "[PASS] Correctly defaults to STAGING when no env vars": {
      "value": "[PASS] Correctly defaults to STAGING when no env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:31"
      ]
    },
    "[PASS] Correctly defaults to staging for ambiguous service name": {
      "value": "[PASS] Correctly defaults to staging for ambiguous service name",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:53"
      ]
    },
    "[PASS] Correctly detects production when explicitly specified": {
      "value": "[PASS] Correctly detects production when explicitly specified",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:60"
      ]
    },
    "[PASS] Correctly detects staging from ENVIRONMENT var": {
      "value": "[PASS] Correctly detects staging from ENVIRONMENT var",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:38"
      ]
    },
    "[PASS] Correctly detects staging from K_SERVICE": {
      "value": "[PASS] Correctly detects staging from K_SERVICE",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:46"
      ]
    },
    "[PASS] Error handling test passed": {
      "value": "[PASS] Error handling test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:112"
      ]
    },
    "[PASS] Execution context created:": {
      "value": "[PASS] Execution context created:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:119"
      ]
    },
    "[PASS] Factory compliance defaults to staging": {
      "value": "[PASS] Factory compliance defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:91"
      ]
    },
    "[PASS] Factory status integration defaults to staging": {
      "value": "[PASS] Factory status integration defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:100"
      ]
    },
    "[PASS] Fallback mode:": {
      "value": "[PASS] Fallback mode:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:105"
      ]
    },
    "[PASS] Fallback result:": {
      "value": "[PASS] Fallback result:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:74"
      ]
    },
    "[PASS] Fallback used:": {
      "value": "[PASS] Fallback used:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:75"
      ]
    },
    "[PASS] Health status:": {
      "value": "[PASS] Health status:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:109"
      ]
    },
    "[PASS] Individual agent registration:": {
      "value": "[PASS] Individual agent registration:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:164"
      ]
    },
    "[PASS] Initialization result:": {
      "value": "[PASS] Initialization result:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:54"
      ]
    },
    "[PASS] Initialization time:": {
      "value": "[PASS] Initialization time:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:56"
      ]
    },
    "[PASS] Invalid JSON test passed": {
      "value": "[PASS] Invalid JSON test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:118"
      ]
    },
    "[PASS] Invalid token test passed": {
      "value": "[PASS] Invalid token test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:124"
      ]
    },
    "[PASS] Iteration": {
      "value": "[PASS] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:86"
      ]
    },
    "[PASS] Multiple field formats test passed": {
      "value": "[PASS] Multiple field formats test passed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:106"
      ]
    },
    "[PASS] No legacy CORS code found": {
      "value": "[PASS] No legacy CORS code found",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:188"
      ]
    },
    "[PASS] OAuth config correctly configured for staging": {
      "value": "[PASS] OAuth config correctly configured for staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:149"
      ]
    },
    "[PASS] PASSED:": {
      "value": "[PASS] PASSED:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:23"
      ]
    },
    "[PASS] Passed:": {
      "value": "[PASS] Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:216"
      ]
    },
    "[PASS] PermissionRequest schema defaults to staging": {
      "value": "[PASS] PermissionRequest schema defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:118"
      ]
    },
    "[PASS] Registry created": {
      "value": "[PASS] Registry created",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:150"
      ]
    },
    "[PASS] Registry health:": {
      "value": "[PASS] Registry health:",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:172"
      ]
    },
    "[PASS] Result matches expectation:": {
      "value": "[PASS] Result matches expectation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:133"
      ]
    },
    "[PASS] Tests passed!": {
      "value": "[PASS] Tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:68"
      ]
    },
    "[PASS] Tests passed! (Run": {
      "value": "[PASS] Tests passed! (Run",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:113"
      ]
    },
    "[PASS] ToolPermissionMiddleware defaults to staging": {
      "value": "[PASS] ToolPermissionMiddleware defaults to staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:82"
      ]
    },
    "[PASS] WebSocket Connection: Connected": {
      "value": "[PASS] WebSocket Connection: Connected",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:177"
      ]
    },
    "[Pytest] Running pytest with coverage...": {
      "value": "[Pytest] Running pytest with coverage...",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:20"
      ]
    },
    "[QUALITY] Assessing test quality...": {
      "value": "[QUALITY] Assessing test quality...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:50"
      ]
    },
    "[READY] SQLAlchemy 2.0 migration is ready!": {
      "value": "[READY] SQLAlchemy 2.0 migration is ready!",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:85"
      ]
    },
    "[REAL E2E] TESTS WITH ACTUAL LLM/SERVICES": {
      "value": "[REAL E2E] TESTS WITH ACTUAL LLM/SERVICES",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:71"
      ]
    },
    "[RECOMMEND] Generating improvement recommendations...": {
      "value": "[RECOMMEND] Generating improvement recommendations...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:58"
      ]
    },
    "[RECV] Received response:": {
      "value": "[RECV] Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:113"
      ]
    },
    "[RECV] Received:": {
      "value": "[RECV] Received:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:51"
      ]
    },
    "[REPORT] Detailed report saved to:": {
      "value": "[REPORT] Detailed report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:230"
      ]
    },
    "[RESULT] Exit code:": {
      "value": "[RESULT] Exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:46"
      ]
    },
    "[REVIEW] Running Autonomous Test Review in": {
      "value": "[REVIEW] Running Autonomous Test Review in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:35"
      ]
    },
    "[Report] HTML Report: reports/tests/report.html": {
      "value": "[Report] HTML Report: reports/tests/report.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:417"
      ]
    },
    "[SAVE] Detailed results saved to:": {
      "value": "[SAVE] Detailed results saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:340"
      ]
    },
    "[SEND] Sent ping message": {
      "value": "[SEND] Sent ping message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:106"
      ]
    },
    "[SEND] Sent test message": {
      "value": "[SEND] Sent test message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:46"
      ]
    },
    "[SERVICE URLS]": {
      "value": "[SERVICE URLS]",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:114"
      ]
    },
    "[SETUP] Environment variables set:": {
      "value": "[SETUP] Environment variables set:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:62"
      ]
    },
    "[SETUP] Setting staging environment variables...": {
      "value": "[SETUP] Setting staging environment variables...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:32"
      ]
    },
    "[SIMULATE] Checking configuration...": {
      "value": "[SIMULATE] Checking configuration...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:118"
      ]
    },
    "[SIMULATE] Checking dependencies...": {
      "value": "[SIMULATE] Checking dependencies...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:88"
      ]
    },
    "[SIMULATE] Checking health endpoints...": {
      "value": "[SIMULATE] Checking health endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:185"
      ]
    },
    "[SIMULATE] Checking initialization order...": {
      "value": "[SIMULATE] Checking initialization order...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:50"
      ]
    },
    "[SIMULATE] Checking secrets...": {
      "value": "[SIMULATE] Checking secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:148"
      ]
    },
    "[SIMULATE] Startup time: 12s (limit:": {
      "value": "[SIMULATE] Startup time: 12s (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:201"
      ]
    },
    "[SIMULATION MODE - Not connecting to real services]": {
      "value": "[SIMULATION MODE - Not connecting to real services]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:230"
      ]
    },
    "[SKIPPED]": {
      "value": "[SKIPPED]",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:183"
      ]
    },
    "[SKIP]": {
      "value": "[SKIP]",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:856"
      ]
    },
    "[SKIP] Cannot auto-fix:": {
      "value": "[SKIP] Cannot auto-fix:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:336"
      ]
    },
    "[SKIP] Connection tests skipped:": {
      "value": "[SKIP] Connection tests skipped:",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:292"
      ]
    },
    "[START] Starting Comprehensive WebSocket CORS Tests": {
      "value": "[START] Starting Comprehensive WebSocket CORS Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:174"
      ]
    },
    "[STATUS]": {
      "value": "[STATUS]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:57"
      ]
    },
    "[SUCCESS]": {
      "value": "[SUCCESS]",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:134"
      ]
    },
    "[SUCCESS] ALL CHECKS PASSED": {
      "value": "[SUCCESS] ALL CHECKS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:514"
      ]
    },
    "[SUCCESS] ALL TESTS PASSED": {
      "value": "[SUCCESS] ALL TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:216"
      ]
    },
    "[SUCCESS] ALL TESTS PASSED! Authentication is working correctly.": {
      "value": "[SUCCESS] ALL TESTS PASSED! Authentication is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:376"
      ]
    },
    "[SUCCESS] All OAuth credential loading tests passed!": {
      "value": "[SUCCESS] All OAuth credential loading tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:106"
      ]
    },
    "[SUCCESS] All configuration checks completed": {
      "value": "[SUCCESS] All configuration checks completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:127"
      ]
    },
    "[SUCCESS] All files processed successfully": {
      "value": "[SUCCESS] All files processed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:205"
      ]
    },
    "[SUCCESS] All models imported successfully with SQLAlchemy 2.0 patterns": {
      "value": "[SUCCESS] All models imported successfully with SQLAlchemy 2.0 patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:21"
      ]
    },
    "[SUCCESS] All tests passed!": {
      "value": "[SUCCESS] All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:345",
        "scripts/test_websocket_simple.py:94"
      ]
    },
    "[SUCCESS] All tests passed! Async PostgreSQL configuration is working.": {
      "value": "[SUCCESS] All tests passed! Async PostgreSQL configuration is working.",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:189"
      ]
    },
    "[SUCCESS] All tests passed! Staging deployment is healthy.": {
      "value": "[SUCCESS] All tests passed! Staging deployment is healthy.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:237"
      ]
    },
    "[SUCCESS] All tests passed! WebSocket CORS is working correctly.": {
      "value": "[SUCCESS] All tests passed! WebSocket CORS is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:310"
      ]
    },
    "[SUCCESS] Applied": {
      "value": "[SUCCESS] Applied",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:299"
      ]
    },
    "[SUCCESS] Auth service models are working": {
      "value": "[SUCCESS] Auth service models are working",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:71"
      ]
    },
    "[SUCCESS] Basic query execution works": {
      "value": "[SUCCESS] Basic query execution works",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:44"
      ]
    },
    "[SUCCESS] Basic unit tests are passing!": {
      "value": "[SUCCESS] Basic unit tests are passing!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:85"
      ]
    },
    "[SUCCESS] Configuration loaded successfully!": {
      "value": "[SUCCESS] Configuration loaded successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:64",
        "scripts/test_staging_config.py:78"
      ]
    },
    "[SUCCESS] Database connection works with SQLAlchemy 2.0": {
      "value": "[SUCCESS] Database connection works with SQLAlchemy 2.0",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:28"
      ]
    },
    "[SUCCESS] Environment detection is properly configured!": {
      "value": "[SUCCESS] Environment detection is properly configured!",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:173"
      ]
    },
    "[SUCCESS] Model type annotations are working": {
      "value": "[SUCCESS] Model type annotations are working",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:61"
      ]
    },
    "[SUCCESS] STAGING STARTUP TESTS PASSED": {
      "value": "[SUCCESS] STAGING STARTUP TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:275"
      ]
    },
    "[SUCCESS] Staging configuration test completed": {
      "value": "[SUCCESS] Staging configuration test completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:144"
      ]
    },
    "[SUCCESS] Test services started successfully!": {
      "value": "[SUCCESS] Test services started successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:65"
      ]
    },
    "[SUCCESS] Test services stopped and data cleaned!": {
      "value": "[SUCCESS] Test services stopped and data cleaned!",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:79"
      ]
    },
    "[SUCCESS] Test services stopped!": {
      "value": "[SUCCESS] Test services stopped!",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:81"
      ]
    },
    "[SUMMARY] Test Results": {
      "value": "[SUMMARY] Test Results",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:89"
      ]
    },
    "[SUMMARY] Test Summary": {
      "value": "[SUMMARY] Test Summary",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:295"
      ]
    },
    "[Service Health Check]": {
      "value": "[Service Health Check]",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:174"
      ]
    },
    "[Success] .coveragerc configuration file exists": {
      "value": "[Success] .coveragerc configuration file exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:108"
      ]
    },
    "[Success] .coveragerc configured for netra_backend/app": {
      "value": "[Success] .coveragerc configured for netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:112"
      ]
    },
    "[Success] .coveragerc configured for reports/coverage output": {
      "value": "[Success] .coveragerc configured for reports/coverage output",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:114"
      ]
    },
    "[Success] HTML coverage report generated": {
      "value": "[Success] HTML coverage report generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:61"
      ]
    },
    "[Success] HTML report contains coverage percentage": {
      "value": "[Success] HTML report contains coverage percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:66"
      ]
    },
    "[Success] JSON coverage report generated": {
      "value": "[Success] JSON coverage report generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:90"
      ]
    },
    "[Success] JSON coverage total:": {
      "value": "[Success] JSON coverage total:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:96"
      ]
    },
    "[Success] Pytest with coverage completed successfully": {
      "value": "[Success] Pytest with coverage completed successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:40"
      ]
    },
    "[Success] XML coverage line-rate:": {
      "value": "[Success] XML coverage line-rate:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:81"
      ]
    },
    "[Success] XML coverage report generated": {
      "value": "[Success] XML coverage report generated",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:75"
      ]
    },
    "[TEST SERVICE STATUS]": {
      "value": "[TEST SERVICE STATUS]",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:88"
      ]
    },
    "[TEST]": {
      "value": "[TEST]",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:23"
      ]
    },
    "[TEST] Origin:": {
      "value": "[TEST] Origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:24"
      ]
    },
    "[TEST] Running test:": {
      "value": "[TEST] Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:35"
      ]
    },
    "[TEST] Testing API Endpoints...": {
      "value": "[TEST] Testing API Endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:199"
      ]
    },
    "[TEST] Testing Authentication Flow...": {
      "value": "[TEST] Testing Authentication Flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:203"
      ]
    },
    "[TEST] Testing Service Health Endpoints...": {
      "value": "[TEST] Testing Service Health Endpoints...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:195"
      ]
    },
    "[TEST] Testing WebSocket Connectivity...": {
      "value": "[TEST] Testing WebSocket Connectivity...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:207"
      ]
    },
    "[TEST] Testing WebSocket connection to:": {
      "value": "[TEST] Testing WebSocket connection to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:23"
      ]
    },
    "[TEST] Testing:": {
      "value": "[TEST] Testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:55"
      ]
    },
    "[TIMEOUT] Frontend tests timed out": {
      "value": "[TIMEOUT] Frontend tests timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:63"
      ]
    },
    "[TIMEOUT] Iteration": {
      "value": "[TIMEOUT] Iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:93"
      ]
    },
    "[TIMEOUT] No response (but connection successful)": {
      "value": "[TIMEOUT] No response (but connection successful)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_simple.py:54"
      ]
    },
    "[TIMEOUT] No response within 5 seconds (but connection successful)": {
      "value": "[TIMEOUT] No response within 5 seconds (but connection successful)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:116"
      ]
    },
    "[TIMEOUT] Skipping remaining tests in": {
      "value": "[TIMEOUT] Skipping remaining tests in",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:90"
      ]
    },
    "[TIMEOUT] Test execution timed out": {
      "value": "[TIMEOUT] Test execution timed out",
      "category": "test_literals",
      "locations": [
        "scripts/simple_test_fix_loop.py:75"
      ]
    },
    "[TIMEOUT] Test timed out": {
      "value": "[TIMEOUT] Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:71",
        "scripts/test_verify_workflow_status_corrected.py:70"
      ]
    },
    "[TIME] TIMEOUT:": {
      "value": "[TIME] TIMEOUT:",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:29"
      ]
    },
    "[Timeout] Pytest timed out - this is expected for complex tests": {
      "value": "[Timeout] Pytest timed out - this is expected for complex tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:49"
      ]
    },
    "[ULTRA-THINK] Performing deep semantic analysis...": {
      "value": "[ULTRA-THINK] Performing deep semantic analysis...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:42"
      ]
    },
    "[Verify] Verifying coverage reports...": {
      "value": "[Verify] Verifying coverage reports...",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:54"
      ]
    },
    "[WARNING]": {
      "value": "[WARNING]",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:312"
      ]
    },
    "[WARNING]  Some tests failed. Review the output above for details.": {
      "value": "[WARNING]  Some tests failed. Review the output above for details.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:378"
      ]
    },
    "[WARNING] Backend server is not running. Starting it...": {
      "value": "[WARNING] Backend server is not running. Starting it...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:210"
      ]
    },
    "[WARNING] ClickHouse tests require running ClickHouse instance - these are integration tests": {
      "value": "[WARNING] ClickHouse tests require running ClickHouse instance - these are integration tests",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:23"
      ]
    },
    "[WARNING] Frontend dev server is not running. Starting it...": {
      "value": "[WARNING] Frontend dev server is not running. Starting it...",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:215"
      ]
    },
    "[WARNING] Significant test limit violations. Prioritize cleanup.": {
      "value": "[WARNING] Significant test limit violations. Prioritize cleanup.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:58"
      ]
    },
    "[WARNING] Some tests failed. Check the report for details.": {
      "value": "[WARNING] Some tests failed. Check the report for details.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:234"
      ]
    },
    "[WARNING] Some tests still failing - check individual test output above": {
      "value": "[WARNING] Some tests still failing - check individual test output above",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:87"
      ]
    },
    "[WARNING] Test file not found:": {
      "value": "[WARNING] Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:61",
        "scripts/startup_test_executor.py:132",
        "scripts/startup_test_executor.py:201"
      ]
    },
    "[WARNING] Token is expired!": {
      "value": "[WARNING] Token is expired!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:45"
      ]
    },
    "[WARNING] node_modules not found. Skipping frontend tests.": {
      "value": "[WARNING] node_modules not found. Skipping frontend tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:23"
      ]
    },
    "[WARNING] npm not available. Skipping frontend tests.": {
      "value": "[WARNING] npm not available. Skipping frontend tests.",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:31"
      ]
    },
    "[WARN] Added function but test still fails": {
      "value": "[WARN] Added function but test still fails",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:331"
      ]
    },
    "[Warning] Could not parse JSON report:": {
      "value": "[Warning] Could not parse JSON report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:98"
      ]
    },
    "[Warning] Could not parse XML report:": {
      "value": "[Warning] Could not parse XML report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:83"
      ]
    },
    "[Warning] Could not read .coveragerc:": {
      "value": "[Warning] Could not read .coveragerc:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:116"
      ]
    },
    "[Warning] Could not read HTML report:": {
      "value": "[Warning] Could not read HTML report:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:68"
      ]
    },
    "[Warning] Pytest completed with warnings (exit code:": {
      "value": "[Warning] Pytest completed with warnings (exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:43"
      ]
    },
    "[X]": {
      "value": "[X]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:440"
      ]
    },
    "[X] FILES EXCEEDING 300 LINES (": {
      "value": "[X] FILES EXCEEDING 300 LINES (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:165"
      ]
    },
    "[X] FILES WITH FUNCTIONS > 8 LINES (": {
      "value": "[X] FILES WITH FUNCTIONS > 8 LINES (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:173"
      ]
    },
    "[X] FILES WITH MOCK COMPONENTS (": {
      "value": "[X] FILES WITH MOCK COMPONENTS (",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:183"
      ]
    },
    "[^:]*:)": {
      "value": "[^:]*:)",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:64"
      ]
    },
    "[bold blue]Starting Local OAuth Testing[/bold blue]": {
      "value": "[bold blue]Starting Local OAuth Testing[/bold blue]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:436"
      ]
    },
    "[bold cyan]1. Checking Environment Configuration[/bold cyan]": {
      "value": "[bold cyan]1. Checking Environment Configuration[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:57"
      ]
    },
    "[bold cyan]2. Checking Service Health[/bold cyan]": {
      "value": "[bold cyan]2. Checking Service Health[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:99"
      ]
    },
    "[bold cyan]3. Testing OAuth Config Endpoint[/bold cyan]": {
      "value": "[bold cyan]3. Testing OAuth Config Endpoint[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:140"
      ]
    },
    "[bold cyan]4. Testing OAuth Login Initiation[/bold cyan]": {
      "value": "[bold cyan]4. Testing OAuth Login Initiation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:181"
      ]
    },
    "[bold cyan]5. Testing Token Generation[/bold cyan]": {
      "value": "[bold cyan]5. Testing Token Generation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:237"
      ]
    },
    "[bold cyan]6. Testing Token Validation[/bold cyan]": {
      "value": "[bold cyan]6. Testing Token Validation[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:297"
      ]
    },
    "[bold cyan]═══ OAuth Local Test Report ═══[/bold cyan]": {
      "value": "[bold cyan]═══ OAuth Local Test Report ═══[/bold cyan]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:346"
      ]
    },
    "[bold green]📋 Recommendations:[/bold green]": {
      "value": "[bold green]📋 Recommendations:[/bold green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:391"
      ]
    },
    "[bold]Auth URL:[/bold]": {
      "value": "[bold]Auth URL:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:151"
      ]
    },
    "[bold]Client ID:[/bold]": {
      "value": "[bold]Client ID:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:152"
      ]
    },
    "[bold]Provider:[/bold]": {
      "value": "[bold]Provider:[/bold]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:151"
      ]
    },
    "[green]✓ Results exported to": {
      "value": "[green]✓ Results exported to",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:462"
      ]
    },
    "[green]✓[/green]": {
      "value": "[green]✓[/green]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:75",
        "scripts/test_oauth_local.py:359",
        "scripts/test_oauth_local.py:362",
        "scripts/test_oauth_local.py:365",
        "scripts/test_oauth_local.py:424"
      ]
    },
    "[green]✓[/green] All tests passed! OAuth is properly configured.": {
      "value": "[green]✓[/green] All tests passed! OAuth is properly configured.",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:426"
      ]
    },
    "[green]✓[/green] Config endpoint returned successfully": {
      "value": "[green]✓[/green] Config endpoint returned successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:147"
      ]
    },
    "[green]✓[/green] Correctly redirecting to auth service": {
      "value": "[green]✓[/green] Correctly redirecting to auth service",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:197"
      ]
    },
    "[green]✓[/green] Login endpoint redirects correctly": {
      "value": "[green]✓[/green] Login endpoint redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:192"
      ]
    },
    "[green]✓[/green] Token generated successfully": {
      "value": "[green]✓[/green] Token generated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:253"
      ]
    },
    "[green]✓[/green] Token validated successfully": {
      "value": "[green]✓[/green] Token validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:308"
      ]
    },
    "[red]Error during testing:": {
      "value": "[red]Error during testing:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:465"
      ]
    },
    "[red]✗[/red]": {
      "value": "[red]✗[/red]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:82",
        "scripts/test_oauth_local.py:368"
      ]
    },
    "[red]✗[/red] Config endpoint failed:": {
      "value": "[red]✗[/red] Config endpoint failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:165"
      ]
    },
    "[red]✗[/red] Dev login failed:": {
      "value": "[red]✗[/red] Dev login failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:272"
      ]
    },
    "[red]✗[/red] Error fetching config:": {
      "value": "[red]✗[/red] Error fetching config:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:173"
      ]
    },
    "[red]✗[/red] Error testing login flow:": {
      "value": "[red]✗[/red] Error testing login flow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:225"
      ]
    },
    "[red]✗[/red] Error testing token generation:": {
      "value": "[red]✗[/red] Error testing token generation:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:281"
      ]
    },
    "[red]✗[/red] Error validating token:": {
      "value": "[red]✗[/red] Error validating token:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:334"
      ]
    },
    "[red]✗[/red] Login endpoint didn't redirect:": {
      "value": "[red]✗[/red] Login endpoint didn't redirect:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:211"
      ]
    },
    "[red]✗[/red] No token in response": {
      "value": "[red]✗[/red] No token in response",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:269"
      ]
    },
    "[red]✗[/red] Token validation failed:": {
      "value": "[red]✗[/red] Token validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:321"
      ]
    },
    "[yellow]⊘[/yellow]": {
      "value": "[yellow]⊘[/yellow]",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:356"
      ]
    },
    "[yellow]⚠[/yellow] Dev login not enabled - skipping token generation test": {
      "value": "[yellow]⚠[/yellow] Dev login not enabled - skipping token generation test",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:287"
      ]
    },
    "[yellow]⚠[/yellow] Unexpected redirect location": {
      "value": "[yellow]⚠[/yellow] Unexpected redirect location",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:199"
      ]
    },
    "\\": {
      "value": "\\",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_violations.py:118",
        "scripts/business_value_test_index.py:148",
        "scripts/business_value_test_index.py:284",
        "scripts/business_value_test_index.py:353",
        "scripts/check_conftest_violations.py:55",
        "scripts/ci/check_test_stubs.py:95",
        "scripts/test_exclusion_check.py:49"
      ]
    },
    "\\.execute\\(": {
      "value": "\\.execute\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:34"
      ]
    },
    "\\.read\\(": {
      "value": "\\.read\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "\\.return_value\\s*=": {
      "value": "\\.return_value\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:275",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "\\.side_effect\\s*=": {
      "value": "\\.side_effect\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:275"
      ]
    },
    "\\.write\\(": {
      "value": "\\.write\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "\\1\\n    \\2": {
      "value": "\\1\\n    \\2",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:60",
        "scripts/batch_fix_and_test.py:30",
        "scripts/batch_fix_and_test.py:36",
        "scripts/simple_test_fix_loop.py:54"
      ]
    },
    "\\1def setup_method(self):\\n\\2\"\"\"Setup method for test class.\"\"\"\\n": {
      "value": "\\1def setup_method(self):\\n\\2\"\"\"Setup method for test class.\"\"\"\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:23"
      ]
    },
    "\\[\\s*[\"\\']Part 1[\"\\']\\s*,\\s*[\"\\']Part 2[\"\\']\\s*,\\s*[\"\\']Part 3[\"\\']\\s*\\]": {
      "value": "\\[\\s*[\"\\']Part 1[\"\\']\\s*,\\s*[\"\\']Part 2[\"\\']\\s*,\\s*[\"\\']Part 3[\"\\']\\s*\\]",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:59"
      ]
    },
    "\\b(Mock|MagicMock|AsyncMock)\\(.*?\\)": {
      "value": "\\b(Mock|MagicMock|AsyncMock)\\(.*?\\)",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:113"
      ]
    },
    "\\n\\n\\n+": {
      "value": "\\n\\n\\n+",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:40"
      ]
    },
    "]": {
      "value": "]",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:392",
        "scripts/align_test_imports.py:394",
        "scripts/setup_test_environment.py:291",
        "scripts/setup_test_environment.py:298",
        "scripts/setup_test_environment.py:305",
        "scripts/standardize_l3_test_names.py:273",
        "scripts/test_chat_errors.py:10",
        "scripts/test_chat_errors.py:123",
        "scripts/test_cors_ssot_compliance.py:43",
        "scripts/test_cors_ssot_compliance.py:79"
      ]
    },
    "] PID": {
      "value": "] PID",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:108",
        "scripts/cleanup_test_processes.py:166"
      ]
    },
    "] Processing:": {
      "value": "] Processing:",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:304"
      ]
    },
    "^(def |class |@)": {
      "value": "^(def |class |@)",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:40"
      ]
    },
    "^(import |from .+ import)": {
      "value": "^(import |from .+ import)",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:62"
      ]
    },
    "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$": {
      "value": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:29"
      ]
    },
    "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$": {
      "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:22"
      ]
    },
    "^[a-zA-Z_]+:[a-zA-Z_]+$": {
      "value": "^[a-zA-Z_]+:[a-zA-Z_]+$",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:214"
      ]
    },
    "^\\s*(?:const|let|var)\\s+(\\w+)\\s*=\\s*(?:async\\s+)?(?:function|\\()": {
      "value": "^\\s*(?:const|let|var)\\s+(\\w+)\\s*=\\s*(?:async\\s+)?(?:function|\\()",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:32"
      ]
    },
    "^\\s*(?:export\\s+)?(?:async\\s+)?function\\s+(\\w+)": {
      "value": "^\\s*(?:export\\s+)?(?:async\\s+)?function\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:31"
      ]
    },
    "^\\s*(?:it|test|describe)\\s*\\([\\'\"`]([^\\'\"`]+)": {
      "value": "^\\s*(?:it|test|describe)\\s*\\([\\'\"`]([^\\'\"`]+)",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:34"
      ]
    },
    "^\\s*(\\w+)\\s*:\\s*(?:async\\s+)?(?:function|\\()": {
      "value": "^\\s*(\\w+)\\s*:\\s*(?:async\\s+)?(?:function|\\()",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:33"
      ]
    },
    "^\\s*(async\\s+)?def\\s+\\w+": {
      "value": "^\\s*(async\\s+)?def\\s+\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:264"
      ]
    },
    "^async def test_": {
      "value": "^async def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:52"
      ]
    },
    "^class Test": {
      "value": "^class Test",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:51"
      ]
    },
    "^def test_": {
      "value": "^def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:50"
      ]
    },
    "^from \\. import": {
      "value": "^from \\. import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:133"
      ]
    },
    "^from \\.\\. import": {
      "value": "^from \\.\\. import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:120"
      ]
    },
    "^from helpers\\.": {
      "value": "^from helpers\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:75"
      ]
    },
    "_": {
      "value": "_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:161",
        "scripts/auto_fix_test_sizes.py:277",
        "scripts/auto_fix_test_sizes.py:328",
        "scripts/auto_fix_test_sizes.py:472",
        "scripts/auto_fix_test_sizes.py:496",
        "scripts/auto_fix_test_violations.py:374",
        "scripts/auto_fix_test_violations.py:886",
        "scripts/autonomous_review/test_generator.py:119",
        "scripts/autonomous_review/test_generator.py:137",
        "scripts/autonomous_review/test_generator.py:214"
      ]
    },
    "__": {
      "value": "__",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:95"
      ]
    },
    "__annotations__": {
      "value": "__annotations__",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:60"
      ]
    },
    "__init__.py": {
      "value": "__init__.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:70"
      ]
    },
    "__main__": {
      "value": "__main__",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:214",
        "auth_service/debug_db_test.py:76",
        "auth_service/test_actual_staging_credentials.py:183",
        "auth_service/test_staging_db_connection.py:329",
        "auth_service/test_url_construction.py:249",
        "auth_service/tests/integration/test_refresh_integration.py:413",
        "auth_service/tests/test_auth_comprehensive.py:577",
        "auth_service/tests/test_auth_port_configuration.py:456",
        "auth_service/tests/test_oauth_state_validation.py:302",
        "auth_service/tests/test_refresh_endpoint_simple.py:101"
      ]
    },
    "__pycache__": {
      "value": "__pycache__",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:145",
        "scripts/align_test_imports.py:78",
        "scripts/auto_fix_test_violations.py:103",
        "scripts/autonomous_review/test_reviewer.py:75",
        "scripts/autonomous_review/test_reviewer.py:194",
        "scripts/business_value_test_index.py:130",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156"
      ]
    },
    "__tests__": {
      "value": "__tests__",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:33",
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/autonomous_review/test_reviewer.py:205",
        "scripts/autonomous_review/test_reviewer.py:321",
        "scripts/compliance/test_size_validator.py:130",
        "scripts/remove_test_stubs.py:78",
        "scripts/standardize_l3_test_names.py:60",
        "scripts/unified_test_config.py:181",
        "scripts/unified_test_runner.py:117"
      ]
    },
    "__tests__/auth": {
      "value": "__tests__/auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:35"
      ]
    },
    "__tests__/components": {
      "value": "__tests__/components",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29",
        "scripts/test_frontend.py:31"
      ]
    },
    "__tests__/hooks": {
      "value": "__tests__/hooks",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29",
        "scripts/test_frontend.py:32"
      ]
    },
    "__tests__/integration": {
      "value": "__tests__/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:30"
      ]
    },
    "__tests__/integration/critical-integration.test.tsx": {
      "value": "__tests__/integration/critical-integration.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:37"
      ]
    },
    "__tests__/lib": {
      "value": "__tests__/lib",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29"
      ]
    },
    "__tests__/services": {
      "value": "__tests__/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29"
      ]
    },
    "__tests__/services/webSocketService.test.ts": {
      "value": "__tests__/services/webSocketService.test.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:34"
      ]
    },
    "__tests__/store": {
      "value": "__tests__/store",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29",
        "scripts/test_frontend.py:33"
      ]
    },
    "__tests__/system/startup.test.tsx": {
      "value": "__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:37"
      ]
    },
    "__tests__/utils": {
      "value": "__tests__/utils",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:29"
      ]
    },
    "_assertions() - Common assertions": {
      "value": "_assertions() - Common assertions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:219"
      ]
    },
    "_basic(self):\n        \"\"\"Test basic functionality of": {
      "value": "_basic(self):\n        \"\"\"Test basic functionality of",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:152"
      ]
    },
    "_comprehensive": {
      "value": "_comprehensive",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:102"
      ]
    },
    "_core.py": {
      "value": "_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:419"
      ]
    },
    "_critical": {
      "value": "_critical",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:100"
      ]
    },
    "_current_file_path": {
      "value": "_current_file_path",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:352"
      ]
    },
    "_e2e.py": {
      "value": "_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:372"
      ]
    },
    "_edge_cases(self):\n        \"\"\"Test edge cases for": {
      "value": "_edge_cases(self):\n        \"\"\"Test edge cases for",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:165"
      ]
    },
    "_error_handling(self):\n        \"\"\"Test error handling in": {
      "value": "_error_handling(self):\n        \"\"\"Test error handling in",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:175"
      ]
    },
    "_extended.py": {
      "value": "_extended.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:426"
      ]
    },
    "_feature1.py": {
      "value": "_feature1.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:387"
      ]
    },
    "_feature2.py": {
      "value": "_feature2.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:388"
      ]
    },
    "_fixtures.py": {
      "value": "_fixtures.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:273",
        "scripts/compliance/test_refactor_helper.py:432"
      ]
    },
    "_functions.py": {
      "value": "_functions.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:472"
      ]
    },
    "_helper": {
      "value": "_helper",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:206"
      ]
    },
    "_helper_": {
      "value": "_helper_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:284"
      ]
    },
    "_helpers.py": {
      "value": "_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:275",
        "scripts/compliance/test_limits_checker.py:202",
        "scripts/compliance/test_size_validator.py:383"
      ]
    },
    "_integration.py": {
      "value": "_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:201",
        "scripts/compliance/test_size_validator.py:371"
      ]
    },
    "_integration_": {
      "value": "_integration_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:343"
      ]
    },
    "_l3": {
      "value": "_l3",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:98"
      ]
    },
    "_l3.py": {
      "value": "_l3.py",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:30"
      ]
    },
    "_latency_avg": {
      "value": "_latency_avg",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:106",
        "scripts/real_service_test_metrics.py:161"
      ]
    },
    "_latency_p95": {
      "value": "_latency_p95",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:107"
      ]
    },
    "_part": {
      "value": "_part",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:182",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "_part_": {
      "value": "_part_",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:472"
      ]
    },
    "_real": {
      "value": "_real",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:44"
      ]
    },
    "_redis_builder": {
      "value": "_redis_builder",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:260",
        "scripts/test_redis_config_critical_failure.py:281"
      ]
    },
    "_scenario_1() - First test case": {
      "value": "_scenario_1() - First test case",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:217"
      ]
    },
    "_scenario_2() - Second test case": {
      "value": "_scenario_2() - Second test case",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:218"
      ]
    },
    "_setup() - Test setup logic": {
      "value": "_setup() - Test setup logic",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:216"
      ]
    },
    "_test": {
      "value": "_test",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121",
        "scripts/compliance/real_test_linter.py:237",
        "scripts/remove_test_stubs.py:99"
      ]
    },
    "_test.py": {
      "value": "_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:89",
        "scripts/autonomous_review/test_reviewer.py:308",
        "scripts/business_value_test_index.py:184",
        "scripts/compliance/project_test_validator.py:121",
        "scripts/compliance/test_size_validator.py:163"
      ]
    },
    "_test_": {
      "value": "_test_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:121"
      ]
    },
    "_tests": {
      "value": "_tests",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:338"
      ]
    },
    "_unit.py": {
      "value": "_unit.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:200",
        "scripts/compliance/test_size_validator.py:370"
      ]
    },
    "_user_": {
      "value": "_user_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:82"
      ]
    },
    "_utilities.py": {
      "value": "_utilities.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:570"
      ]
    },
    "_utils.py": {
      "value": "_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:383",
        "scripts/auto_fix_test_violations.py:457"
      ]
    },
    "`": {
      "value": "`",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:591",
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:606",
        "scripts/analyze_test_overlap.py:607",
        "scripts/auto_fix_test_violations.py:885"
      ]
    },
    "` (line": {
      "value": "` (line",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "` (similarity:": {
      "value": "` (similarity:",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "` ↔ `": {
      "value": "` ↔ `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "```": {
      "value": "```",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:533",
        "scripts/compliance/real_test_requirements_enforcer.py:535",
        "scripts/test_verify_workflow_status.py:187",
        "scripts/test_verify_workflow_status.py:190"
      ]
    },
    "a": {
      "value": "a",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:210"
      ]
    },
    "a.b.c.d": {
      "value": "a.b.c.d",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:111"
      ]
    },
    "abc": {
      "value": "abc",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:413"
      ]
    },
    "abc123": {
      "value": "abc123",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:192"
      ]
    },
    "abstractmethod": {
      "value": "abstractmethod",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:211"
      ]
    },
    "access": {
      "value": "access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:298"
      ]
    },
    "access-control": {
      "value": "access-control",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:79",
        "scripts/debug_cors_test.py:97",
        "scripts/test_cors_issue.py:24",
        "scripts/test_cors_issue.py:45",
        "scripts/test_cors_issue.py:67"
      ]
    },
    "access-control-allow-credentials": {
      "value": "access-control-allow-credentials",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:223"
      ]
    },
    "access-control-allow-headers": {
      "value": "access-control-allow-headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:234"
      ]
    },
    "access-control-allow-methods": {
      "value": "access-control-allow-methods",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:329",
        "scripts/test_cors.py:230"
      ]
    },
    "access-control-allow-origin": {
      "value": "access-control-allow-origin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:328",
        "scripts/test_auth_integration.py:117",
        "scripts/test_cors.py:210"
      ]
    },
    "access-control-max-age": {
      "value": "access-control-max-age",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:238"
      ]
    },
    "access_denied": {
      "value": "access_denied",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:268"
      ]
    },
    "access_token": {
      "value": "access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:193",
        "auth_service/tests/factories/token_factory.py:218",
        "auth_service/tests/integration/test_refresh_integration.py:102",
        "auth_service/tests/integration/test_refresh_integration.py:108",
        "auth_service/tests/integration/test_refresh_integration.py:114",
        "auth_service/tests/integration/test_refresh_integration.py:344",
        "auth_service/tests/test_auth_comprehensive.py:227",
        "auth_service/tests/test_oauth_state_validation.py:115",
        "auth_service/tests/test_oauth_state_validation.py:260",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:60"
      ]
    },
    "access_token=": {
      "value": "access_token=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:299"
      ]
    },
    "account_locked": {
      "value": "account_locked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:24"
      ]
    },
    "account_unlocked": {
      "value": "account_unlocked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:25"
      ]
    },
    "accounts": {
      "value": "accounts",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:251",
        "scripts/setup_staging_test_account.py:315",
        "scripts/setup_staging_test_account.py:319",
        "scripts/test_staging_login_automated.py:135",
        "scripts/test_staging_login_automated.py:135",
        "scripts/test_staging_login_automated.py:136"
      ]
    },
    "accounts.google.com": {
      "value": "accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:445",
        "auth_service/tests/test_auth_comprehensive.py:174",
        "auth_service/tests/test_oauth_state_validation.py:91",
        "scripts/test_staging_login_automated.py:264"
      ]
    },
    "across": {
      "value": "across",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/test_secret_manager_builder_critical.py:219"
      ]
    },
    "act": {
      "value": "act",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:39",
        "scripts/test_workflows_with_act.py:113",
        "scripts/test_workflows_with_act.py:152"
      ]
    },
    "act-event-": {
      "value": "act-event-",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:198"
      ]
    },
    "action": {
      "value": "action",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:59",
        "auth_service/tests/test_session_security_cycles_36_40.py:231",
        "auth_service/tests/test_session_security_cycles_36_40.py:232",
        "auth_service/tests/test_session_security_cycles_36_40.py:233",
        "auth_service/tests/test_session_security_cycles_36_40.py:239",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "auth_service/tests/test_session_security_cycles_36_40.py:258",
        "scripts/test_workflows_with_act.py:193"
      ]
    },
    "actual": {
      "value": "actual",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:522",
        "scripts/test_docker_websocket_fix.py:53",
        "scripts/test_docker_websocket_fix.py:61",
        "scripts/test_docker_websocket_fix.py:264"
      ]
    },
    "actual_value": {
      "value": "actual_value",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:634",
        "scripts/auto_fix_test_sizes.py:637",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "add": {
      "value": "add",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:84"
      ]
    },
    "add_function": {
      "value": "add_function",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:45",
        "scripts/comprehensive_test_fixer.py:57",
        "scripts/comprehensive_test_fixer.py:317"
      ]
    },
    "additional_headers": {
      "value": "additional_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:62",
        "scripts/test_websocket_cors_comprehensive.py:88"
      ]
    },
    "admin": {
      "value": "admin",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:224",
        "auth_service/tests/integration/test_refresh_integration.py:329",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:68",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:76",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:87",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:88",
        "scripts/setup_staging_test_account.py:91"
      ]
    },
    "admin'--": {
      "value": "admin'--",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:355"
      ]
    },
    "admin:delete_users": {
      "value": "admin:delete_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:28"
      ]
    },
    "admin:read_users": {
      "value": "admin:read_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:26"
      ]
    },
    "admin:update_users": {
      "value": "admin:update_users",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:27"
      ]
    },
    "administrative": {
      "value": "administrative",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "affected_services": {
      "value": "affected_services",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:42",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:465",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:474"
      ]
    },
    "after": {
      "value": "after",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:396"
      ]
    },
    "agent": {
      "value": "agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "scripts/analyze_test_mocks.py:40",
        "scripts/auto_fix_test_sizes.py:354",
        "scripts/auto_fix_test_sizes.py:355",
        "scripts/auto_fix_test_violations.py:499",
        "scripts/auto_fix_test_violations.py:500",
        "scripts/test_backend.py:30",
        "scripts/unified_test_runner.py:441",
        "scripts/unified_test_runner.py:693"
      ]
    },
    "agent.test@staging.netrasystems.ai": {
      "value": "agent.test@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:89"
      ]
    },
    "agent_completed": {
      "value": "agent_completed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411"
      ]
    },
    "agent_orchestration": {
      "value": "agent_orchestration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:97",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:468",
        "scripts/business_value_test_index.py:491",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:705"
      ]
    },
    "agent_started": {
      "value": "agent_started",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411"
      ]
    },
    "agents": {
      "value": "agents",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:172",
        "scripts/compliance/demo_test_size_enforcement.py:67",
        "scripts/rapid_test_consolidation.py:28",
        "scripts/test_backend_optimized.py:65",
        "scripts/test_staging_startup.py:84",
        "scripts/unified_test_config.py:62",
        "scripts/unified_test_config.py:64",
        "scripts/unified_test_config.py:68",
        "scripts/unified_test_config.py:115"
      ]
    },
    "agents/test_example_prompts_e2e_real.py": {
      "value": "agents/test_example_prompts_e2e_real.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:205"
      ]
    },
    "agent|supervisor|executor|chain": {
      "value": "agent|supervisor|executor|chain",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:97"
      ]
    },
    "aggressive": {
      "value": "aggressive",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:55",
        "scripts/test_backend_optimized.py:175",
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "ai": {
      "value": "ai",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:354"
      ]
    },
    "alembic": {
      "value": "alembic",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:124",
        "scripts/test_staging_migrations.py:146",
        "scripts/test_staging_migrations.py:246",
        "scripts/test_staging_migrations.py:247",
        "scripts/test_staging_migrations.py:248"
      ]
    },
    "alembic.ini": {
      "value": "alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:105"
      ]
    },
    "alembic/alembic.ini": {
      "value": "alembic/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:107"
      ]
    },
    "alignment_report.json": {
      "value": "alignment_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:415"
      ]
    },
    "all": {
      "value": "all",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:417",
        "scripts/business_value_test_index.py:459",
        "scripts/test_backend.py:364",
        "scripts/test_staging_login_automated.py:394",
        "scripts/test_staging_login_automated.py:395",
        "scripts/test_staging_login_automated.py:408",
        "scripts/test_staging_login_automated.py:423"
      ]
    },
    "all_passed": {
      "value": "all_passed",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:115"
      ]
    },
    "allergy_season": {
      "value": "allergy_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "allow_dev_bypass": {
      "value": "allow_dev_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:217",
        "scripts/test_docker_websocket_fix.py:273"
      ]
    },
    "allow_prod": {
      "value": "allow_prod",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:794"
      ]
    },
    "already exists in": {
      "value": "already exists in",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:192"
      ]
    },
    "already.used.token": {
      "value": "already.used.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:305",
        "auth_service/tests/unit/test_refresh_endpoint.py:307"
      ]
    },
    "also_not_a_number": {
      "value": "also_not_a_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:276"
      ]
    },
    "alternative": {
      "value": "alternative",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:411"
      ]
    },
    "alternative_methods": {
      "value": "alternative_methods",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:415"
      ]
    },
    "analysis": {
      "value": "analysis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:34"
      ]
    },
    "analytics": {
      "value": "analytics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:100",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:471",
        "scripts/business_value_test_index.py:494"
      ]
    },
    "analytics|metrics|dashboard|reporting": {
      "value": "analytics|metrics|dashboard|reporting",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:100"
      ]
    },
    "analyze": {
      "value": "analyze",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:672",
        "scripts/compliance/test_refactor_helper.py:699"
      ]
    },
    "analyzed": {
      "value": "analyzed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:377"
      ]
    },
    "and": {
      "value": "and",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:345"
      ]
    },
    "and root directory": {
      "value": "and root directory",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:489"
      ]
    },
    "anomaly_detected": {
      "value": "anomaly_detected",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:246",
        "auth_service/tests/test_session_security_cycles_36_40.py:266"
      ]
    },
    "anomaly_types": {
      "value": "anomaly_types",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:267",
        "auth_service/tests/test_session_security_cycles_36_40.py:268"
      ]
    },
    "anonymous": {
      "value": "anonymous",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:47"
      ]
    },
    "anthropic": {
      "value": "anthropic",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "api": {
      "value": "api",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49",
        "scripts/add_pytest_markers.py:27",
        "scripts/auto_fix_test_sizes.py:344",
        "scripts/auto_fix_test_sizes.py:345",
        "scripts/auto_fix_test_violations.py:501",
        "scripts/auto_fix_test_violations.py:502",
        "scripts/autonomous_review/test_reviewer.py:225",
        "scripts/rapid_test_consolidation.py:31"
      ]
    },
    "api_base": {
      "value": "api_base",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:131",
        "scripts/unified_test_config.py:139",
        "scripts/unified_test_config.py:147",
        "scripts/unified_test_config.py:155",
        "scripts/unified_test_config.py:312",
        "scripts/unified_test_config.py:313"
      ]
    },
    "api_call": {
      "value": "api_call",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:233",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252"
      ]
    },
    "api_key": {
      "value": "api_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/setup_staging_test_account.py:87",
        "scripts/setup_staging_test_account.py:86",
        "scripts/setup_staging_test_account.py:190",
        "scripts/setup_staging_test_account.py:193",
        "scripts/setup_staging_test_account.py:198",
        "scripts/setup_staging_test_account.py:230",
        "scripts/setup_staging_test_account.py:252",
        "scripts/setup_staging_test_account.py:315",
        "scripts/setup_staging_test_account.py:315"
      ]
    },
    "api_keys": {
      "value": "api_keys",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:134"
      ]
    },
    "api_routes": {
      "value": "api_routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:44"
      ]
    },
    "api_url": {
      "value": "api_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:193",
        "scripts/test_cold_start_e2e.py:194",
        "scripts/test_cold_start_e2e.py:436",
        "scripts/test_cold_start_e2e.py:441"
      ]
    },
    "app": {
      "value": "app",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:91",
        "scripts/autonomous_review/test_reviewer.py:187",
        "scripts/autonomous_review/test_reviewer.py:310",
        "scripts/business_value_test_index.py:404",
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:67",
        "scripts/compliance/demo_test_size_enforcement.py:68",
        "scripts/compliance/demo_test_size_enforcement.py:69",
        "scripts/compliance/demo_test_size_enforcement.py:142",
        "scripts/compliance/fake_test_scanner.py:55"
      ]
    },
    "app.": {
      "value": "app.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:129",
        "scripts/comprehensive_test_fixer.py:225"
      ]
    },
    "app.config": {
      "value": "app.config",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:83",
        "scripts/test_staging_config.py:84"
      ]
    },
    "app.core.secret_manager": {
      "value": "app.core.secret_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:85",
        "scripts/test_staging_config.py:86"
      ]
    },
    "app.main:app": {
      "value": "app.main:app",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:55"
      ]
    },
    "app.staging.netra.ai": {
      "value": "app.staging.netra.ai",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:144"
      ]
    },
    "app/": {
      "value": "app/",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:233",
        "scripts/comprehensive_test_fixer.py:235"
      ]
    },
    "app/auth": {
      "value": "app/auth",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/core": {
      "value": "app/core",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/db": {
      "value": "app/db",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/llm": {
      "value": "app/llm",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:24",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:22"
      ]
    },
    "app/middleware/tool_permission_middleware.py": {
      "value": "app/middleware/tool_permission_middleware.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:78"
      ]
    },
    "app/pytest.ini": {
      "value": "app/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:13"
      ]
    },
    "app/routes/factory_compliance.py": {
      "value": "app/routes/factory_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:87"
      ]
    },
    "app/schemas/ToolPermission.py": {
      "value": "app/schemas/ToolPermission.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:113"
      ]
    },
    "app/services/factory_status/factory_status_integration.py": {
      "value": "app/services/factory_status/factory_status_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:96"
      ]
    },
    "app/tests": {
      "value": "app/tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:123",
        "scripts/compliance/project_test_validator.py:60",
        "scripts/fix_test_syntax_errors.py:225"
      ]
    },
    "app/tests/**/*.py": {
      "value": "app/tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:54"
      ]
    },
    "app/tests/agents": {
      "value": "app/tests/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:66",
        "scripts/test_failure_scanner.py:42"
      ]
    },
    "app/tests/core": {
      "value": "app/tests/core",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_failure_scanner.py:38"
      ]
    },
    "app/tests/core/test_config_manager.py": {
      "value": "app/tests/core/test_config_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:32"
      ]
    },
    "app/tests/core/test_config_manager.py::TestConfigManager::test_initialization": {
      "value": "app/tests/core/test_config_manager.py::TestConfigManager::test_initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:87"
      ]
    },
    "app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error": {
      "value": "app/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:86"
      ]
    },
    "app/tests/e2e": {
      "value": "app/tests/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:78"
      ]
    },
    "app/tests/integration": {
      "value": "app/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:60",
        "scripts/test_failure_scanner.py:45"
      ]
    },
    "app/tests/models": {
      "value": "app/tests/models",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:46"
      ]
    },
    "app/tests/performance": {
      "value": "app/tests/performance",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:72"
      ]
    },
    "app/tests/routes": {
      "value": "app/tests/routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:60",
        "scripts/test_failure_scanner.py:39"
      ]
    },
    "app/tests/routes/test_health_route.py": {
      "value": "app/tests/routes/test_health_route.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:85"
      ]
    },
    "app/tests/services": {
      "value": "app/tests/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_failure_scanner.py:44"
      ]
    },
    "app/tests/services/agents/test_sub_agent.py::test_agent_node_is_coroutine": {
      "value": "app/tests/services/agents/test_sub_agent.py::test_agent_node_is_coroutine",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:28"
      ]
    },
    "app/tests/services/agents/test_supervisor_service.py::test_supervisor_end_to_end": {
      "value": "app/tests/services/agents/test_supervisor_service.py::test_supervisor_end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:29"
      ]
    },
    "app/tests/services/agents/test_tools.py": {
      "value": "app/tests/services/agents/test_tools.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:30"
      ]
    },
    "app/tests/services/apex_optimizer_agent/test_tool_builder.py": {
      "value": "app/tests/services/apex_optimizer_agent/test_tool_builder.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:31"
      ]
    },
    "app/tests/services/database": {
      "value": "app/tests/services/database",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:41"
      ]
    },
    "app/tests/services/test_security_service.py": {
      "value": "app/tests/services/test_security_service.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:40"
      ]
    },
    "app/tests/test_agent_service_critical.py": {
      "value": "app/tests/test_agent_service_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:96"
      ]
    },
    "app/tests/test_api_endpoints_critical.py": {
      "value": "app/tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:95"
      ]
    },
    "app/tests/unit": {
      "value": "app/tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54"
      ]
    },
    "app/tests/utils": {
      "value": "app/tests/utils",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:47"
      ]
    },
    "app/tests/websocket": {
      "value": "app/tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:43"
      ]
    },
    "app/websocket": {
      "value": "app/websocket",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:25",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:23"
      ]
    },
    "append": {
      "value": "append",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:426"
      ]
    },
    "application/json": {
      "value": "application/json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:136",
        "auth_service/tests/integration/test_refresh_integration.py:313",
        "auth_service/tests/test_auth_comprehensive.py:506",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:172",
        "auth_service/tests/unit/test_refresh_endpoint.py:112",
        "scripts/test_and_fix_cors.py:66",
        "scripts/test_cors.py:103",
        "scripts/test_staging_auth_e2e.py:206",
        "scripts/test_staging_deployment.py:130",
        "scripts/test_staging_jwt_validation.py:63"
      ]
    },
    "applied": {
      "value": "applied",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:123"
      ]
    },
    "archive": {
      "value": "archive",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:23"
      ]
    },
    "are critical/high severity - immediate action required": {
      "value": "are critical/high severity - immediate action required",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:448"
      ]
    },
    "args": {
      "value": "args",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:155",
        "scripts/test_frontend_simple.py:78"
      ]
    },
    "args_kwargs_stub": {
      "value": "args_kwargs_stub",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:196"
      ]
    },
    "args_kwargs_stubs": {
      "value": "args_kwargs_stubs",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:61",
        "scripts/remove_test_stubs.py:188"
      ]
    },
    "assert": {
      "value": "assert",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:211",
        "scripts/analyze_test_overlap.py:215",
        "scripts/auto_fix_test_sizes.py:503",
        "scripts/auto_fix_test_violations.py:638",
        "scripts/compliance/test_fixer.py:280",
        "scripts/team_updates_test_analyzer.py:128"
      ]
    },
    "assert \\\\1": {
      "value": "assert \\\\1",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:250"
      ]
    },
    "assert \\\\1 != \\\\2": {
      "value": "assert \\\\1 != \\\\2",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:249"
      ]
    },
    "assert \\\\1 == \\\\2": {
      "value": "assert \\\\1 == \\\\2",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:248"
      ]
    },
    "assert \\\\1 is None": {
      "value": "assert \\\\1 is None",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:252"
      ]
    },
    "assert \\\\1 is not None": {
      "value": "assert \\\\1 is not None",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:253"
      ]
    },
    "assert not \\\\1": {
      "value": "assert not \\\\1",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:251"
      ]
    },
    "assertion": {
      "value": "assertion",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:162"
      ]
    },
    "assertion_similarity": {
      "value": "assertion_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:634"
      ]
    },
    "async": {
      "value": "async",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:569",
        "scripts/comprehensive_test_fixer.py:98",
        "scripts/comprehensive_test_fixer.py:108",
        "scripts/comprehensive_test_fixer.py:117",
        "scripts/comprehensive_test_fixer.py:126",
        "scripts/comprehensive_test_fixer.py:135",
        "scripts/comprehensive_test_fixer.py:144",
        "scripts/comprehensive_test_fixer.py:161",
        "scripts/comprehensive_test_fixer.py:252"
      ]
    },
    "async def": {
      "value": "async def",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:570",
        "scripts/comprehensive_test_fixer.py:153",
        "scripts/comprehensive_test_fixer.py:191",
        "scripts/comprehensive_test_fixer.py:248"
      ]
    },
    "async def test_": {
      "value": "async def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:90"
      ]
    },
    "async def test_\\w+": {
      "value": "async def test_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:91"
      ]
    },
    "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$": {
      "value": "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:69"
      ]
    },
    "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$": {
      "value": "async\\s+def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:67"
      ]
    },
    "async\\s+def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{": {
      "value": "async\\s+def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:62"
      ]
    },
    "async_tests": {
      "value": "async_tests",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:96"
      ]
    },
    "asyncio": {
      "value": "asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:533",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "asyncio\\.sleep\\(": {
      "value": "asyncio\\.sleep\\(",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:21"
      ]
    },
    "asyncio\\.sleep\\(([^)]+)\\)": {
      "value": "asyncio\\.sleep\\(([^)]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:32"
      ]
    },
    "asyncpg": {
      "value": "asyncpg",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_database_url_builder_comprehensive.py:169",
        "scripts/test_ssl_certificates_staging.py:175",
        "scripts/test_ssl_certificates_staging.py:245"
      ]
    },
    "asyncpg.connect": {
      "value": "asyncpg.connect",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:173"
      ]
    },
    "at line": {
      "value": "at line",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:192"
      ]
    },
    "attacker-controlled-session": {
      "value": "attacker-controlled-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:146"
      ]
    },
    "attempt_number": {
      "value": "attempt_number",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:94"
      ]
    },
    "attr": {
      "value": "attr",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:193",
        "scripts/analyze_test_overlap.py:213"
      ]
    },
    "aud": {
      "value": "aud",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:65"
      ]
    },
    "auth": {
      "value": "auth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:175",
        "scripts/analyze_test_mocks.py:44",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/auto_fix_test_sizes.py:339",
        "scripts/auto_fix_test_violations.py:493",
        "scripts/autonomous_review/test_reviewer.py:231",
        "scripts/manage_test_services.py:122",
        "scripts/setup_e2e_test_ports.py:87",
        "scripts/setup_e2e_test_ports.py:99",
        "scripts/standardize_l3_test_names.py:202"
      ]
    },
    "auth-service": {
      "value": "auth-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:218",
        "auth_service/tests/auth-service-down-critical-scenarios.py:240",
        "auth_service/tests/auth-service-down-critical-scenarios.py:512"
      ]
    },
    "auth-service-staging": {
      "value": "auth-service-staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:41",
        "auth_service/test_url_construction.py:42"
      ]
    },
    "auth-test": {
      "value": "auth-test",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:48"
      ]
    },
    "auth.staging": {
      "value": "auth.staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:196"
      ]
    },
    "auth@example.com": {
      "value": "auth@example.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_sqlalchemy_2_migration.py:66"
      ]
    },
    "authUrl": {
      "value": "authUrl",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:152"
      ]
    },
    "auth_bypass": {
      "value": "auth_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:74"
      ]
    },
    "auth_bypass_tests": {
      "value": "auth_bypass_tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:28",
        "scripts/test_docker_websocket_fix.py:216",
        "scripts/test_docker_websocket_fix.py:230",
        "scripts/test_docker_websocket_fix.py:268",
        "scripts/test_docker_websocket_fix.py:315"
      ]
    },
    "auth_code_": {
      "value": "auth_code_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:238"
      ]
    },
    "auth_conftest": {
      "value": "auth_conftest",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:33",
        "auth_service/tests/conftest.py:34",
        "auth_service/tests/conftest.py:35",
        "auth_service/tests/conftest.py:37",
        "auth_service/tests/conftest.py:38",
        "auth_service/tests/conftest.py:42",
        "auth_service/tests/conftest.py:43",
        "auth_service/tests/conftest.py:44"
      ]
    },
    "auth_load_time": {
      "value": "auth_load_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:418"
      ]
    },
    "auth_provider": {
      "value": "auth_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:74",
        "auth_service/tests/factories/user_factory.py:40",
        "auth_service/tests/utils/assertion_helpers.py:92",
        "auth_service/tests/utils/assertion_helpers.py:105",
        "auth_service/tests/utils/assertion_helpers.py:106"
      ]
    },
    "auth_required": {
      "value": "auth_required",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:57"
      ]
    },
    "auth_service": {
      "value": "auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:218",
        "auth_service/tests/auth-service-down-critical-scenarios.py:240",
        "auth_service/tests/auth-service-down-critical-scenarios.py:512",
        "auth_service/tests/auth-service-down-critical-scenarios.py:526",
        "auth_service/tests/auth-service-down-critical-scenarios.py:547",
        "scripts/auto_fix_test_violations.py:93",
        "scripts/business_value_test_index.py:443",
        "scripts/compliance/fake_test_scanner.py:56",
        "scripts/compliance/test_size_validator.py:129",
        "scripts/remove_duplicate_test_setup.py:39"
      ]
    },
    "auth_service.auth_core.config.AuthConfig.get_google_client_id": {
      "value": "auth_service.auth_core.config.AuthConfig.get_google_client_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:85",
        "auth_service/tests/test_oauth_state_validation.py:108",
        "auth_service/tests/test_oauth_state_validation.py:152",
        "auth_service/tests/test_oauth_state_validation.py:171",
        "auth_service/tests/test_oauth_state_validation.py:233"
      ]
    },
    "auth_service.auth_core.config.AuthConfig.get_google_client_secret": {
      "value": "auth_service.auth_core.config.AuthConfig.get_google_client_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:86",
        "auth_service/tests/test_oauth_state_validation.py:109",
        "auth_service/tests/test_oauth_state_validation.py:153",
        "auth_service/tests/test_oauth_state_validation.py:172",
        "auth_service/tests/test_oauth_state_validation.py:234"
      ]
    },
    "auth_service.auth_core.redis_manager.auth_redis_manager": {
      "value": "auth_service.auth_core.redis_manager.auth_redis_manager",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:155"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.AuthUserRepository": {
      "value": "auth_service.auth_core.routes.auth_routes.AuthUserRepository",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:281"
      ]
    },
    "auth_service.auth_core.routes.auth_routes._sync_user_to_main_db": {
      "value": "auth_service.auth_core.routes.auth_routes._sync_user_to_main_db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:135",
        "auth_service/tests/test_oauth_state_validation.py:289"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_db.create_tables": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_db.create_tables",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:133",
        "auth_service/tests/test_oauth_state_validation.py:279"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_db.get_session": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_db.get_session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:134",
        "auth_service/tests/test_oauth_state_validation.py:280"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.auth_service": {
      "value": "auth_service.auth_core.routes.auth_routes.auth_service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:22",
        "auth_service/tests/test_refresh_endpoint_simple.py:87",
        "auth_service/tests/unit/test_refresh_endpoint.py:22"
      ]
    },
    "auth_service.auth_core.routes.auth_routes.logger": {
      "value": "auth_service.auth_core.routes.auth_routes.logger",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:312"
      ]
    },
    "auth_service.auth_core.security.oauth_security.time": {
      "value": "auth_service.auth_core.security.oauth_security.time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:193"
      ]
    },
    "auth_service.auth_core.services.auth_service.auth_service.refresh_tokens": {
      "value": "auth_service.auth_core.services.auth_service.auth_service.refresh_tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:50",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:67",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:82",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:119",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:133",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:181",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:208",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:297"
      ]
    },
    "auth_service.main": {
      "value": "auth_service.main",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:534"
      ]
    },
    "auth_service/app": {
      "value": "auth_service/app",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:176"
      ]
    },
    "auth_service/main.py": {
      "value": "auth_service/main.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:148"
      ]
    },
    "auth_service/pytest.ini": {
      "value": "auth_service/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:112"
      ]
    },
    "auth_service/tests": {
      "value": "auth_service/tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:42",
        "scripts/compliance/project_test_validator.py:62",
        "scripts/fix_test_syntax_errors.py:227",
        "scripts/unified_test_runner.py:111",
        "scripts/unified_test_runner.py:695",
        "scripts/validate_llm_test_models.py:43"
      ]
    },
    "auth_service/tests/conftest.py": {
      "value": "auth_service/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:14"
      ]
    },
    "auth_service_health": {
      "value": "auth_service_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:48",
        "scripts/test_oauth_local.py:133",
        "scripts/test_oauth_local.py:406",
        "scripts/test_oauth_local.py:406"
      ]
    },
    "auth_services": {
      "value": "auth_services",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:45"
      ]
    },
    "auth_service|AuthService": {
      "value": "auth_service|AuthService",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:443"
      ]
    },
    "auth_success": {
      "value": "auth_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:298"
      ]
    },
    "auth_token": {
      "value": "auth_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:169"
      ]
    },
    "auth_url": {
      "value": "auth_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:459"
      ]
    },
    "authenticated": {
      "value": "authenticated",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:141",
        "scripts/test_staging_login_automated.py:125",
        "scripts/test_staging_login_automated.py:138"
      ]
    },
    "authentication": {
      "value": "authentication",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:95",
        "scripts/business_value_test_index.py:421",
        "scripts/business_value_test_index.py:468",
        "scripts/business_value_test_index.py:490",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:705",
        "scripts/test_websocket_dev_mode.py:43",
        "scripts/test_websocket_dev_mode.py:219"
      ]
    },
    "authorization,content-type": {
      "value": "authorization,content-type",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:61"
      ]
    },
    "auth|login|jwt|session|token": {
      "value": "auth|login|jwt|session|token",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:95"
      ]
    },
    "auto": {
      "value": "auto",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:49",
        "scripts/setup_e2e_test_ports.py:50",
        "scripts/setup_e2e_test_ports.py:61",
        "scripts/test_backend.py:228",
        "scripts/test_backend.py:229",
        "scripts/test_backend.py:359",
        "scripts/unified_test_config.py:194",
        "scripts/unified_test_config.py:351",
        "scripts/unified_test_runner.py:218"
      ]
    },
    "automated": {
      "value": "automated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:194"
      ]
    },
    "automatic fixes": {
      "value": "automatic fixes",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:299"
      ]
    },
    "availability": {
      "value": "availability",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "available": {
      "value": "available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:194",
        "scripts/setup_staging_test_account.py:209",
        "scripts/setup_staging_test_account.py:230",
        "scripts/setup_staging_test_account.py:235",
        "scripts/test_staging_login_automated.py:157"
      ]
    },
    "available_urls": {
      "value": "available_urls",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:62",
        "scripts/test_database_url_builder_comprehensive.py:65"
      ]
    },
    "avatar_url": {
      "value": "avatar_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:226"
      ]
    },
    "average": {
      "value": "average",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:93",
        "scripts/real_service_test_metrics.py:185"
      ]
    },
    "average_estimated_duration": {
      "value": "average_estimated_duration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1120"
      ]
    },
    "average_rps": {
      "value": "average_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "average_success_rate": {
      "value": "average_success_rate",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1122"
      ]
    },
    "average_value_score": {
      "value": "average_value_score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:597",
        "scripts/business_value_test_index.py:621",
        "scripts/business_value_test_index.py:738",
        "scripts/business_value_test_index.py:743"
      ]
    },
    "avg_complexity": {
      "value": "avg_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:64",
        "scripts/analyze_test_overlap.py:408",
        "scripts/analyze_test_overlap.py:463",
        "scripts/analyze_test_overlap.py:465",
        "scripts/analyze_test_overlap.py:563"
      ]
    },
    "avg_error_rate": {
      "value": "avg_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_latency_p50_ms": {
      "value": "avg_latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_latency_p95_ms": {
      "value": "avg_latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "avg_time_ms": {
      "value": "avg_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:587",
        "scripts/test_secret_manager_builder_critical.py:610",
        "scripts/test_secret_manager_builder_critical.py:623",
        "scripts/test_secret_manager_builder_critical.py:635",
        "scripts/test_secret_manager_builder_critical.py:636"
      ]
    },
    "avg_tokens_per_request": {
      "value": "avg_tokens_per_request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "await": {
      "value": "await",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:99"
      ]
    },
    "back_to_school": {
      "value": "back_to_school",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:144"
      ]
    },
    "backend": {
      "value": "backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:31",
        "scripts/align_test_imports.py:69",
        "scripts/align_test_imports.py:70",
        "scripts/align_test_imports.py:71",
        "scripts/business_value_test_index.py:405",
        "scripts/manage_test_services.py:121",
        "scripts/setup_e2e_test_ports.py:86",
        "scripts/setup_e2e_test_ports.py:99",
        "scripts/start_test_services.py:99",
        "scripts/test_cold_start_e2e.py:435"
      ]
    },
    "backend-authentication-integration-failures.py": {
      "value": "backend-authentication-integration-failures.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:29"
      ]
    },
    "backend-staging-pr-123": {
      "value": "backend-staging-pr-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:42"
      ]
    },
    "backend-test": {
      "value": "backend-test",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:48"
      ]
    },
    "backend_health": {
      "value": "backend_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:49",
        "scripts/test_oauth_local.py:134",
        "scripts/test_oauth_local.py:409",
        "scripts/test_oauth_local.py:409"
      ]
    },
    "backend_healthy": {
      "value": "backend_healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:182",
        "scripts/test_websocket_cors_comprehensive.py:285"
      ]
    },
    "backend_load_time": {
      "value": "backend_load_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:417"
      ]
    },
    "backend_service_connection": {
      "value": "backend_service_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:125"
      ]
    },
    "backend_url": {
      "value": "backend_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:30",
        "scripts/test_and_fix_cors.py:49",
        "scripts/test_and_fix_cors.py:72",
        "scripts/test_and_fix_cors.py:85",
        "scripts/test_oauth_local.py:458"
      ]
    },
    "background_tasks": {
      "value": "background_tasks",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:46"
      ]
    },
    "bad_test": {
      "value": "bad_test",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:112"
      ]
    },
    "bad_tests": {
      "value": "bad_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:240"
      ]
    },
    "bad_tests.json": {
      "value": "bad_tests.json",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:127",
        "scripts/team_updates_test_analyzer.py:153"
      ]
    },
    "balanced": {
      "value": "balanced",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:61",
        "scripts/test_backend_optimized.py:123",
        "scripts/test_backend_optimized.py:189",
        "scripts/test_backend_optimized.py:374",
        "scripts/test_backend_optimized.py:375"
      ]
    },
    "base": {
      "value": "base",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_ssl_certificates_staging.py:175"
      ]
    },
    "base_rps": {
      "value": "base_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:112"
      ]
    },
    "base_url": {
      "value": "base_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:206"
      ]
    },
    "basic": {
      "value": "basic",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:286",
        "scripts/test_example_message_flow.py:408"
      ]
    },
    "batch_fix_results_": {
      "value": "batch_fix_results_",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:372"
      ]
    },
    "benchmark": {
      "value": "benchmark",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:229",
        "scripts/unified_test_config.py:102"
      ]
    },
    "bin": {
      "value": "bin",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "black_friday": {
      "value": "black_friday",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:146"
      ]
    },
    "body": {
      "value": "body",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:51",
        "scripts/test_staging_deployment.py:65",
        "scripts/test_staging_deployment.py:67",
        "scripts/test_staging_deployment.py:71"
      ]
    },
    "bold magenta": {
      "value": "bold magenta",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:67",
        "scripts/test_oauth_local.py:349"
      ]
    },
    "branch_name": {
      "value": "branch_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:191"
      ]
    },
    "browser.test@staging.netrasystems.ai": {
      "value": "browser.test@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:140"
      ]
    },
    "browser_automation": {
      "value": "browser_automation",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:150"
      ]
    },
    "browser_script": {
      "value": "browser_script",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:260"
      ]
    },
    "browser_session": {
      "value": "browser_session",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:224",
        "scripts/setup_staging_test_account.py:255"
      ]
    },
    "bug": {
      "value": "bug",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:210"
      ]
    },
    "build": {
      "value": "build",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:25",
        "scripts/test_frontend.py:300"
      ]
    },
    "businessValue": {
      "value": "businessValue",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:287",
        "scripts/test_example_message_flow.py:409"
      ]
    },
    "business_impact": {
      "value": "business_impact",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "business_value_coverage.json": {
      "value": "business_value_coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:719"
      ]
    },
    "business_value_test_coverage": {
      "value": "business_value_test_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:118"
      ]
    },
    "business_value_test_coverage.xml": {
      "value": "business_value_test_coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:115"
      ]
    },
    "but URL configured for port": {
      "value": "but URL configured for port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:59"
      ]
    },
    "by_priority": {
      "value": "by_priority",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1125"
      ]
    },
    "by_type": {
      "value": "by_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:281",
        "scripts/test_cors.py:464",
        "scripts/test_cors.py:466",
        "scripts/unified_test_runner.py:1129"
      ]
    },
    "bypass_should_work": {
      "value": "bypass_should_work",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:220",
        "scripts/test_docker_websocket_fix.py:270",
        "scripts/test_docker_websocket_fix.py:271",
        "scripts/test_docker_websocket_fix.py:315"
      ]
    },
    "bypass_token": {
      "value": "bypass_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:120",
        "scripts/setup_staging_test_account.py:208",
        "scripts/setup_staging_test_account.py:213",
        "scripts/setup_staging_test_account.py:235",
        "scripts/setup_staging_test_account.py:253",
        "scripts/setup_staging_test_account.py:319"
      ]
    },
    "cache": {
      "value": "cache",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "auth_service/tests/auth-service-down-critical-scenarios.py:453",
        "scripts/analyze_test_mocks.py:52",
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/auto_fix_test_sizes.py:353"
      ]
    },
    "cache_enabled": {
      "value": "cache_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:169"
      ]
    },
    "cache_hit_rate": {
      "value": "cache_hit_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:234"
      ]
    },
    "cache_hits": {
      "value": "cache_hits",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:213",
        "scripts/test_backend_optimized.py:213",
        "scripts/test_backend_optimized.py:234",
        "scripts/test_backend_optimized.py:271",
        "scripts/test_backend_optimized.py:337"
      ]
    },
    "cache_stats": {
      "value": "cache_stats",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:58",
        "scripts/real_service_test_metrics.py:60",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "cache_status": {
      "value": "cache_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:453"
      ]
    },
    "cache_ttl_hours": {
      "value": "cache_ttl_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:179",
        "scripts/test_backend_optimized.py:186",
        "scripts/test_backend_optimized.py:193"
      ]
    },
    "cached": {
      "value": "cached",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:258"
      ]
    },
    "callback_result": {
      "value": "callback_result",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:176"
      ]
    },
    "cascade_probability": {
      "value": "cascade_probability",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:463",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:475"
      ]
    },
    "cascading_failure": {
      "value": "cascading_failure",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:23",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:82"
      ]
    },
    "cat app/tests/examples/test_size_compliance_examples.py": {
      "value": "cat app/tests/examples/test_size_compliance_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:197"
      ]
    },
    "categories": {
      "value": "categories",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:35",
        "scripts/add_test_markers.py:141",
        "scripts/add_test_markers.py:141",
        "scripts/add_test_markers.py:214",
        "scripts/analyze_test_overlap.py:356",
        "scripts/analyze_test_overlap.py:405",
        "scripts/analyze_test_overlap.py:456",
        "scripts/analyze_test_overlap.py:473",
        "scripts/analyze_test_overlap.py:552",
        "scripts/test_failure_scanner.py:29"
      ]
    },
    "categories_scanned": {
      "value": "categories_scanned",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:197"
      ]
    },
    "categories_with_history": {
      "value": "categories_with_history",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1121"
      ]
    },
    "category": {
      "value": "category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:108",
        "scripts/analyze_test_mocks.py:129",
        "scripts/analyze_test_mocks.py:164",
        "scripts/analyze_test_mocks.py:179",
        "scripts/compliance/test_refactor_helper.py:423",
        "scripts/compliance/test_refactor_helper.py:433",
        "scripts/compliance/test_refactor_helper.py:462",
        "scripts/compliance/test_refactor_helper.py:473",
        "scripts/compliance/test_refactor_helper.py:505",
        "scripts/compliance/test_refactor_helper.py:571"
      ]
    },
    "category1": {
      "value": "category1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:375"
      ]
    },
    "category2": {
      "value": "category2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:376"
      ]
    },
    "category_based": {
      "value": "category_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1040"
      ]
    },
    "category_failure": {
      "value": "category_failure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1014",
        "scripts/unified_test_runner.py:1016"
      ]
    },
    "category_statistics": {
      "value": "category_statistics",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:874"
      ]
    },
    "cd auth_service && python -m pytest tests/test_auth_comprehensive.py::TestAuthConfiguration -v": {
      "value": "cd auth_service && python -m pytest tests/test_auth_comprehensive.py::TestAuthConfiguration -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:70"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_alembic_version_state_recovery.py::TestMigrationStateRecovery::test_initialize_alembic_version_for_existing_schema -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_alembic_version_state_recovery.py::TestMigrationStateRecovery::test_initialize_alembic_version_for_existing_schema -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:54"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_idempotent_migration_handling.py::TestErrorRecoveryAndResilience::test_circuit_breaker_prevents_cascading_failures -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_idempotent_migration_handling.py::TestErrorRecoveryAndResilience::test_circuit_breaker_prevents_cascading_failures -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:58"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_redis_connection_fix_verified.py -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_redis_connection_fix_verified.py -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:44"
      ]
    },
    "cd netra_backend && python -m pytest tests/database/test_redis_connection_python312.py -v": {
      "value": "cd netra_backend && python -m pytest tests/database/test_redis_connection_python312.py -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:48"
      ]
    },
    "cd netra_backend && python -m pytest tests/unit/test_first_time_user_real_critical.py -x": {
      "value": "cd netra_backend && python -m pytest tests/unit/test_first_time_user_real_critical.py -x",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:64"
      ]
    },
    "cd tests/e2e && python -m pytest test_simple_health.py -v": {
      "value": "cd tests/e2e && python -m pytest test_simple_health.py -v",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:76"
      ]
    },
    "center": {
      "value": "center",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:69",
        "scripts/test_oauth_local.py:351"
      ]
    },
    "certificate": {
      "value": "certificate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:377"
      ]
    },
    "certificate verify failed: certificate has expired": {
      "value": "certificate verify failed: certificate has expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:365"
      ]
    },
    "change-me": {
      "value": "change-me",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:426"
      ]
    },
    "change_method": {
      "value": "change_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:122"
      ]
    },
    "changed test files...": {
      "value": "changed test files...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:243"
      ]
    },
    "changeme": {
      "value": "changeme",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:98"
      ]
    },
    "characters (": {
      "value": "characters (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:132"
      ]
    },
    "characters required": {
      "value": "characters required",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:75"
      ]
    },
    "chars)": {
      "value": "chars)",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:184"
      ]
    },
    "chars, min": {
      "value": "chars, min",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:815"
      ]
    },
    "chars, min 32)": {
      "value": "chars, min 32)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:741"
      ]
    },
    "chat:create": {
      "value": "chat:create",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:21"
      ]
    },
    "chat:read_own": {
      "value": "chat:read_own",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:22",
        "auth_service/tests/factories/permission_factory.py:186"
      ]
    },
    "check": {
      "value": "check",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:251",
        "scripts/test_staging_migrations.py:248"
      ]
    },
    "check_and_fix_attribute": {
      "value": "check_and_fix_attribute",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:60"
      ]
    },
    "check_and_fix_import": {
      "value": "check_and_fix_import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:49",
        "scripts/fix_test_batch.py:307"
      ]
    },
    "checks": {
      "value": "checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:156",
        "scripts/test_docker_websocket_fix.py:164",
        "scripts/test_docker_websocket_fix.py:171",
        "scripts/test_docker_websocket_fix.py:180",
        "scripts/test_docker_websocket_fix.py:184",
        "scripts/test_docker_websocket_fix.py:194",
        "scripts/test_docker_websocket_fix.py:283"
      ]
    },
    "chrome": {
      "value": "chrome",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:602",
        "scripts/unified_test_runner.py:1074",
        "scripts/unified_test_runner.py:1075"
      ]
    },
    "ci": {
      "value": "ci",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:49",
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "class": {
      "value": "class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:679",
        "scripts/fix_test_batch.py:115",
        "scripts/fix_test_syntax_errors.py:64",
        "scripts/fix_test_syntax_errors.py:141",
        "scripts/fix_test_syntax_errors.py:172"
      ]
    },
    "class (Test\\w+)[^:]*:": {
      "value": "class (Test\\w+)[^:]*:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:154"
      ]
    },
    "class LLMTestModel.*?(?=class|\\Z)": {
      "value": "class LLMTestModel.*?(?=class|\\Z)",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:99"
      ]
    },
    "class Test": {
      "value": "class Test",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:91",
        "scripts/autonomous_review/test_generator.py:120",
        "scripts/autonomous_review/test_generator.py:196",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/compliance/test_size_validator.py:170"
      ]
    },
    "class TestSyntaxFix": {
      "value": "class TestSyntaxFix",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:47"
      ]
    },
    "class TestSyntaxFix:": {
      "value": "class TestSyntaxFix:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:94"
      ]
    },
    "class \\\\g<0>:": {
      "value": "class \\\\g<0>:",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:247"
      ]
    },
    "class \\\\w+\\\\(unittest\\\\.TestCase\\\\):": {
      "value": "class \\\\w+\\\\(unittest\\\\.TestCase\\\\):",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:247"
      ]
    },
    "class\"\"\"\n    \n    def test_initialization(self):\n        \"\"\"Test": {
      "value": "class\"\"\"\n    \n    def test_initialization(self):\n        \"\"\"Test",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:198"
      ]
    },
    "class\\s+(\\w+)\\s*[\\(:]": {
      "value": "class\\s+(\\w+)\\s*[\\(:]",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:136"
      ]
    },
    "class\\s+Mock\\w*:": {
      "value": "class\\s+Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:52"
      ]
    },
    "class\\s+Mock\\w*Component": {
      "value": "class\\s+Mock\\w*Component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:149"
      ]
    },
    "class\\s+Test\\w*Component\\w*:": {
      "value": "class\\s+Test\\w*Component\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:55"
      ]
    },
    "class\\s+\\w*Component\\w*Mock\\w*:": {
      "value": "class\\s+\\w*Component\\w*Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:54"
      ]
    },
    "class\\s+\\w*Mock\\w*:": {
      "value": "class\\s+\\w*Mock\\w*:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:53"
      ]
    },
    "class_based": {
      "value": "class_based",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:462"
      ]
    },
    "class_to_function": {
      "value": "class_to_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:331"
      ]
    },
    "classes": {
      "value": "classes",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:58",
        "scripts/autonomous_review/test_reviewer.py:99",
        "scripts/autonomous_review/test_reviewer.py:99",
        "scripts/compliance/demo_test_size_enforcement.py:90",
        "scripts/compliance/test_refactor_helper.py:102",
        "scripts/compliance/test_refactor_helper.py:463",
        "scripts/compliance/test_refactor_helper.py:708"
      ]
    },
    "claude-3-opus": {
      "value": "claude-3-opus",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:33"
      ]
    },
    "claude-3-sonnet": {
      "value": "claude-3-sonnet",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:35"
      ]
    },
    "clean": {
      "value": "clean",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:174",
        "scripts/manage_test_services.py:198"
      ]
    },
    "cleanup": {
      "value": "cleanup",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:48",
        "scripts/test_websocket_dev_mode.py:44",
        "scripts/test_websocket_dev_mode.py:253"
      ]
    },
    "cleanup                   → Resource management validation": {
      "value": "cleanup                   → Resource management validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:398"
      ]
    },
    "cleanup_test_processes.py": {
      "value": "cleanup_test_processes.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:524"
      ]
    },
    "cli": {
      "value": "cli",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:355"
      ]
    },
    "clickhouse": {
      "value": "clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:440",
        "scripts/manage_test_services.py:53",
        "scripts/setup_e2e_test_ports.py:91",
        "scripts/test_staging_startup.py:81",
        "scripts/test_staging_startup.py:218",
        "scripts/unified_test_config.py:168"
      ]
    },
    "clickhouse-database": {
      "value": "clickhouse-database",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:68",
        "scripts/test_staging_clickhouse.py:130",
        "scripts/test_staging_clickhouse.py:156"
      ]
    },
    "clickhouse-default-password": {
      "value": "clickhouse-default-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:144"
      ]
    },
    "clickhouse-host": {
      "value": "clickhouse-host",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:64",
        "scripts/test_staging_clickhouse.py:106",
        "scripts/test_staging_clickhouse.py:152"
      ]
    },
    "clickhouse-password": {
      "value": "clickhouse-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:67",
        "scripts/test_staging_clickhouse.py:137",
        "scripts/test_staging_clickhouse.py:155"
      ]
    },
    "clickhouse-port": {
      "value": "clickhouse-port",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:65",
        "scripts/test_staging_clickhouse.py:116",
        "scripts/test_staging_clickhouse.py:153"
      ]
    },
    "clickhouse-user": {
      "value": "clickhouse-user",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:66",
        "scripts/test_staging_clickhouse.py:123",
        "scripts/test_staging_clickhouse.py:154"
      ]
    },
    "clickhouse.netra": {
      "value": "clickhouse.netra",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:100"
      ]
    },
    "clickhouse/test_realistic_clickhouse_operations.py": {
      "value": "clickhouse/test_realistic_clickhouse_operations.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:208"
      ]
    },
    "clickhouse://localhost:9000/test": {
      "value": "clickhouse://localhost:9000/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:80"
      ]
    },
    "clickhouse_connection": {
      "value": "clickhouse_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:42"
      ]
    },
    "clickhouse|ClickHouse": {
      "value": "clickhouse|ClickHouse",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:440"
      ]
    },
    "client": {
      "value": "client",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261"
      ]
    },
    "client-id-": {
      "value": "client-id-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:305",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:316"
      ]
    },
    "client-secret-": {
      "value": "client-secret-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:306",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:320"
      ]
    },
    "client.get": {
      "value": "client.get",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "client.post": {
      "value": "client.post",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "clientId": {
      "value": "clientId",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:153"
      ]
    },
    "client_id": {
      "value": "client_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:102"
      ]
    },
    "client_id=": {
      "value": "client_id=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:446"
      ]
    },
    "client_secret": {
      "value": "client_secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:103"
      ]
    },
    "cloud_run": {
      "value": "cloud_run",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:306",
        "scripts/test_cors.py:320"
      ]
    },
    "cloudsql": {
      "value": "cloudsql",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:233"
      ]
    },
    "cls": {
      "value": "cls",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:200"
      ]
    },
    "cmdline": {
      "value": "cmdline",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:217",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:239",
        "auth_service/tests/auth-service-down-critical-scenarios.py:509",
        "auth_service/tests/auth-service-down-critical-scenarios.py:511",
        "auth_service/tests/auth-service-down-critical-scenarios.py:523",
        "auth_service/tests/auth-service-down-critical-scenarios.py:525",
        "auth_service/tests/auth-service-down-critical-scenarios.py:544",
        "auth_service/tests/auth-service-down-critical-scenarios.py:546"
      ]
    },
    "code": {
      "value": "code",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:70",
        "auth_service/tests/test_auth_comprehensive.py:251",
        "scripts/test_staging_login_automated.py:98",
        "scripts/test_staging_login_automated.py:101",
        "scripts/test_staging_login_automated.py:104",
        "scripts/test_staging_login_automated.py:162",
        "scripts/test_staging_login_automated.py:207",
        "scripts/test_staging_login_automated.py:214",
        "scripts/test_staging_login_automated.py:286"
      ]
    },
    "code_lines": {
      "value": "code_lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:312"
      ]
    },
    "collection_warnings": {
      "value": "collection_warnings",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:115"
      ]
    },
    "column does not exist": {
      "value": "column does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:381"
      ]
    },
    "combined_recommendations": {
      "value": "combined_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:241"
      ]
    },
    "comes AFTER first import at line": {
      "value": "comes AFTER first import at line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:60"
      ]
    },
    "command": {
      "value": "command",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:669",
        "scripts/final_test_status_check.py:44",
        "scripts/final_test_status_check.py:48",
        "scripts/final_test_status_check.py:54",
        "scripts/final_test_status_check.py:58",
        "scripts/final_test_status_check.py:64",
        "scripts/final_test_status_check.py:70",
        "scripts/final_test_status_check.py:76",
        "scripts/final_test_status_check.py:86",
        "scripts/manage_test_services.py:154"
      ]
    },
    "commit_sha": {
      "value": "commit_sha",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:192"
      ]
    },
    "complete_": {
      "value": "complete_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "complete_workflow": {
      "value": "complete_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:47"
      ]
    },
    "complete_workflow         → End-to-end integration validation": {
      "value": "complete_workflow         → End-to-end integration validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:397"
      ]
    },
    "completely-invalid": {
      "value": "completely-invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:478"
      ]
    },
    "completion": {
      "value": "completion",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "completion_tokens": {
      "value": "completion_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:77",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:110",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:118"
      ]
    },
    "complex GCP + environment fallback": {
      "value": "complex GCP + environment fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:275"
      ]
    },
    "complex_secure_password_123!@#": {
      "value": "complex_secure_password_123!@#",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:266"
      ]
    },
    "complex_staging_password_123!": {
      "value": "complex_staging_password_123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:130"
      ]
    },
    "complexity": {
      "value": "complexity",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:145",
        "scripts/autonomous_review/test_generator.py:157",
        "scripts/autonomous_review/test_reviewer.py:91",
        "scripts/compliance/test_size_validator.py:313",
        "scripts/test_example_message_flow.py:286",
        "scripts/test_example_message_flow.py:408"
      ]
    },
    "complexity_based": {
      "value": "complexity_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1041"
      ]
    },
    "compliance": {
      "value": "compliance",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:423"
      ]
    },
    "compliance_rate": {
      "value": "compliance_rate",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:136",
        "scripts/check_test_compliance.py:161",
        "scripts/check_test_compliance.py:189",
        "scripts/check_test_compliance.py:214"
      ]
    },
    "component": {
      "value": "component",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:661",
        "scripts/business_value_test_index.py:669",
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261",
        "scripts/compliance/real_test_validator.py:125",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "component_coverage": {
      "value": "component_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:624"
      ]
    },
    "components": {
      "value": "components",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:76",
        "scripts/business_value_test_index.py:541",
        "scripts/business_value_test_index.py:598",
        "scripts/test_frontend.py:31"
      ]
    },
    "components_covered": {
      "value": "components_covered",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:598"
      ]
    },
    "compose": {
      "value": "compose",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375",
        "scripts/manage_test_services.py:99"
      ]
    },
    "comprehensive": {
      "value": "comprehensive",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_simple.py:39",
        "scripts/test_frontend_simple.py:76",
        "scripts/unified_test_config.py:46",
        "scripts/unified_test_config.py:120",
        "scripts/unified_test_config.py:227",
        "scripts/unified_test_config.py:232",
        "scripts/unified_test_config.py:237"
      ]
    },
    "comprehensive_fix_": {
      "value": "comprehensive_fix_",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:404"
      ]
    },
    "concurrent": {
      "value": "concurrent",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348"
      ]
    },
    "concurrent_test_token_35": {
      "value": "concurrent_test_token_35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:221",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:272"
      ]
    },
    "concurrent_writes": {
      "value": "concurrent_writes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:38"
      ]
    },
    "config": {
      "value": "config",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:162",
        "scripts/unified_test_runner.py:106",
        "scripts/unified_test_runner.py:112",
        "scripts/unified_test_runner.py:118"
      ]
    },
    "config/alembic.ini": {
      "value": "config/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:106"
      ]
    },
    "config/netra-staging-service-account.json": {
      "value": "config/netra-staging-service-account.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:120"
      ]
    },
    "config/pytest.ini": {
      "value": "config/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:14"
      ]
    },
    "config_check": {
      "value": "config_check",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:47",
        "scripts/test_oauth_local.py:90",
        "scripts/test_oauth_local.py:396",
        "scripts/test_oauth_local.py:396",
        "scripts/test_oauth_local.py:397"
      ]
    },
    "config_endpoint": {
      "value": "config_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:38",
        "scripts/test_websocket_dev_mode.py:99"
      ]
    },
    "config_file": {
      "value": "config_file",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:164",
        "scripts/unified_test_config.py:173",
        "scripts/unified_test_config.py:182",
        "scripts/unified_test_config.py:400"
      ]
    },
    "config_fixes": {
      "value": "config_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:406"
      ]
    },
    "config_valid": {
      "value": "config_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:286",
        "scripts/test_cors.py:462"
      ]
    },
    "configuration": {
      "value": "configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:265",
        "scripts/test_cors.py:274"
      ]
    },
    "configuration_loading": {
      "value": "configuration_loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:38"
      ]
    },
    "configuration_validation": {
      "value": "configuration_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:29",
        "scripts/test_docker_websocket_fix.py:201",
        "scripts/test_docker_websocket_fix.py:280",
        "scripts/test_docker_websocket_fix.py:318"
      ]
    },
    "configured": {
      "value": "configured",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:218",
        "scripts/setup_staging_test_account.py:225",
        "scripts/test_staging_login_automated.py:267",
        "scripts/test_staging_login_automated.py:273",
        "scripts/test_staging_login_automated.py:350"
      ]
    },
    "conftest.py": {
      "value": "conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:35",
        "scripts/check_conftest_violations.py:36",
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_validator.py:69",
        "scripts/generate_test_audit.py:79"
      ]
    },
    "conftest.py files** for pytest configuration\n- **": {
      "value": "conftest.py files** for pytest configuration\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:159"
      ]
    },
    "conftest_files": {
      "value": "conftest_files",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:64",
        "scripts/generate_test_audit.py:81",
        "scripts/generate_test_audit.py:146",
        "scripts/generate_test_audit.py:281"
      ]
    },
    "connected": {
      "value": "connected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:14",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:22",
        "scripts/test_websocket_cors_comprehensive.py:65",
        "scripts/test_websocket_cors_comprehensive.py:92"
      ]
    },
    "connecting": {
      "value": "connecting",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:15"
      ]
    },
    "connection": {
      "value": "connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:459",
        "scripts/auto_fix_test_sizes.py:342"
      ]
    },
    "connection failed": {
      "value": "connection failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:379"
      ]
    },
    "connection refused": {
      "value": "connection refused",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:96"
      ]
    },
    "connection_duration": {
      "value": "connection_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:66",
        "scripts/test_websocket_cors_comprehensive.py:94",
        "scripts/test_websocket_cors_comprehensive.py:96"
      ]
    },
    "connection_established": {
      "value": "connection_established",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:44"
      ]
    },
    "connection_successful": {
      "value": "connection_successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:158",
        "scripts/test_cors.py:168",
        "scripts/test_cors.py:178",
        "scripts/test_cors.py:187"
      ]
    },
    "connection_tests": {
      "value": "connection_tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:27",
        "scripts/test_docker_websocket_fix.py:137",
        "scripts/test_docker_websocket_fix.py:142",
        "scripts/test_docker_websocket_fix.py:250",
        "scripts/test_docker_websocket_fix.py:291",
        "scripts/test_docker_websocket_fix.py:292",
        "scripts/test_docker_websocket_fix.py:294"
      ]
    },
    "connection_time": {
      "value": "connection_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:159",
        "scripts/test_cors.py:169"
      ]
    },
    "conservative": {
      "value": "conservative",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "consistency": {
      "value": "consistency",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:201",
        "scripts/test_secret_manager_builder_critical.py:503"
      ]
    },
    "consistency_issues": {
      "value": "consistency_issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:415",
        "scripts/test_secret_manager_builder_critical.py:458",
        "scripts/test_secret_manager_builder_critical.py:459",
        "scripts/test_secret_manager_builder_critical.py:504",
        "scripts/test_secret_manager_builder_critical.py:505",
        "scripts/test_secret_manager_builder_critical.py:506"
      ]
    },
    "consistent": {
      "value": "consistent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:117"
      ]
    },
    "consistent latency": {
      "value": "consistent latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:106"
      ]
    },
    "consistently failing tests": {
      "value": "consistently failing tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "consistently_failing": {
      "value": "consistently_failing",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:296",
        "scripts/compliance/fake_test_scanner.py:327",
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "const\\s+Mock\\w*\\s*=": {
      "value": "const\\s+Mock\\w*\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:61"
      ]
    },
    "const\\s+Mock\\w+\\s*=.*?return\\s*<": {
      "value": "const\\s+Mock\\w+\\s*=.*?return\\s*<",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:75"
      ]
    },
    "const\\s+\\w+Form\\s*=.*?return\\s*<div": {
      "value": "const\\s+\\w+Form\\s*=.*?return\\s*<div",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:76"
      ]
    },
    "const\\s+mock\\w*\\s*=": {
      "value": "const\\s+mock\\w*\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:62"
      ]
    },
    "container_id": {
      "value": "container_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:17",
        "scripts/test_gtm_loading.py:35",
        "scripts/test_gtm_loading.py:61",
        "scripts/test_gtm_loading.py:120",
        "scripts/test_gtm_loading.py:146",
        "scripts/test_gtm_loading.py:147"
      ]
    },
    "contains '": {
      "value": "contains '",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:438"
      ]
    },
    "content": {
      "value": "content",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:531",
        "scripts/test_cold_start_e2e.py:348",
        "scripts/test_cold_start_e2e.py:416",
        "scripts/test_example_message_flow.py:281",
        "scripts/test_example_message_flow.py:403"
      ]
    },
    "content-type": {
      "value": "content-type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:136",
        "scripts/test_staging_login_automated.py:158"
      ]
    },
    "content_generation": {
      "value": "content_generation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30"
      ]
    },
    "content_preview": {
      "value": "content_preview",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:603"
      ]
    },
    "content_similarity": {
      "value": "content_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:373",
        "scripts/analyze_test_overlap.py:630"
      ]
    },
    "context.py": {
      "value": "context.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:114"
      ]
    },
    "conversion": {
      "value": "conversion",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:287",
        "scripts/test_example_message_flow.py:409"
      ]
    },
    "convert_database_url": {
      "value": "convert_database_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:41"
      ]
    },
    "cookie": {
      "value": "cookie",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:124"
      ]
    },
    "cookies": {
      "value": "cookies",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:151"
      ]
    },
    "copied_from_dev": {
      "value": "copied_from_dev",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:253"
      ]
    },
    "core": {
      "value": "core",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:359",
        "scripts/auto_fix_test_sizes.py:372",
        "scripts/auto_fix_test_violations.py:403",
        "scripts/auto_fix_test_violations.py:504",
        "scripts/standardize_l3_test_names.py:206"
      ]
    },
    "cors_analysis": {
      "value": "cors_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:87",
        "scripts/test_cors.py:125",
        "scripts/test_cors.py:376",
        "scripts/test_cors.py:547",
        "scripts/test_cors.py:548"
      ]
    },
    "cors_headers": {
      "value": "cors_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:32",
        "scripts/test_and_fix_cors.py:74",
        "scripts/test_and_fix_cors.py:124",
        "scripts/test_and_fix_cors.py:141"
      ]
    },
    "cors_test": {
      "value": "cors_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:149"
      ]
    },
    "cors_validation": {
      "value": "cors_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:40",
        "scripts/test_websocket_dev_mode.py:162"
      ]
    },
    "cost": {
      "value": "cost",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "cost-optimization": {
      "value": "cost-optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:285",
        "scripts/test_example_message_flow.py:407"
      ]
    },
    "cost_cents": {
      "value": "cost_cents",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:46",
        "scripts/test_data_validator_backup.py:72",
        "scripts/test_data_validator_backup.py:136",
        "scripts/test_data_validator_backup.py:176",
        "scripts/test_data_validator_backup.py:184",
        "scripts/test_data_validator_backup.py:257",
        "scripts/test_data_validator_backup.py:262",
        "scripts/test_data_validator_backup.py:267",
        "scripts/test_data_validator_backup.py:621",
        "scripts/test_data_validator_backup.py:625"
      ]
    },
    "cost_data": {
      "value": "cost_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "cost_optimization": {
      "value": "cost_optimization",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:99",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:471",
        "scripts/business_value_test_index.py:493",
        "scripts/test_data_validator_backup.py:146"
      ]
    },
    "cost_per_1k_input": {
      "value": "cost_per_1k_input",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:98",
        "netra_backend/app/services/realistic_test_data/models.py:37",
        "netra_backend/app/services/realistic_test_data/models.py:47",
        "netra_backend/app/services/realistic_test_data/models.py:57",
        "netra_backend/app/services/realistic_test_data/models.py:67",
        "netra_backend/app/services/realistic_test_data/models.py:77"
      ]
    },
    "cost_per_1k_output": {
      "value": "cost_per_1k_output",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:99",
        "netra_backend/app/services/realistic_test_data/models.py:38",
        "netra_backend/app/services/realistic_test_data/models.py:48",
        "netra_backend/app/services/realistic_test_data/models.py:58",
        "netra_backend/app/services/realistic_test_data/models.py:68",
        "netra_backend/app/services/realistic_test_data/models.py:78"
      ]
    },
    "cost_per_1k_tokens": {
      "value": "cost_per_1k_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "cost_per_request_usd": {
      "value": "cost_per_request_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "cost_per_token_usd": {
      "value": "cost_per_token_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "cost_savings": {
      "value": "cost_savings",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:328",
        "scripts/test_data_validator_backup.py:399",
        "scripts/test_data_validator_backup.py:416"
      ]
    },
    "cost_usd": {
      "value": "cost_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:79",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:113"
      ]
    },
    "cost|optimization|pricing|billing": {
      "value": "cost|optimization|pricing|billing",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:99"
      ]
    },
    "count": {
      "value": "count",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:96",
        "scripts/real_service_test_metrics.py:188",
        "scripts/test_cors.py:279",
        "scripts/test_cors.py:461"
      ]
    },
    "count_based": {
      "value": "count_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1040"
      ]
    },
    "coverage": {
      "value": "coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:74",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:561",
        "scripts/remove_test_stubs.py:80",
        "scripts/team_updates_test_analyzer.py:75",
        "scripts/team_updates_test_analyzer.py:76",
        "scripts/test_backend.py:322",
        "scripts/test_backend.py:402",
        "scripts/test_coverage_system.py:56",
        "scripts/test_coverage_system.py:79"
      ]
    },
    "coverage-final.json": {
      "value": "coverage-final.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:561"
      ]
    },
    "coverage.json": {
      "value": "coverage.json",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:120",
        "scripts/autonomous_review/test_reviewer.py:121",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:551",
        "scripts/test_backend.py:402",
        "scripts/test_coverage_system.py:88"
      ]
    },
    "coverage.xml": {
      "value": "coverage.xml",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:73"
      ]
    },
    "coverage_gaps": {
      "value": "coverage_gaps",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:646",
        "scripts/business_value_test_index.py:757",
        "scripts/business_value_test_index.py:759"
      ]
    },
    "coverage_info": {
      "value": "coverage_info",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:29"
      ]
    },
    "coverage_percentage": {
      "value": "coverage_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:599"
      ]
    },
    "coverage_source": {
      "value": "coverage_source",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:167",
        "scripts/unified_test_config.py:176",
        "scripts/unified_test_config.py:185",
        "scripts/unified_test_config.py:359"
      ]
    },
    "coverage_target": {
      "value": "coverage_target",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:27",
        "scripts/unified_test_config.py:35",
        "scripts/unified_test_config.py:43",
        "scripts/unified_test_config.py:51",
        "scripts/unified_test_config.py:59",
        "scripts/unified_test_config.py:67"
      ]
    },
    "cpu_bottleneck": {
      "value": "cpu_bottleneck",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:363",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:438"
      ]
    },
    "cpu_intensive": {
      "value": "cpu_intensive",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:73",
        "scripts/unified_test_runner.py:1118"
      ]
    },
    "cpu_percent": {
      "value": "cpu_percent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:150",
        "netra_backend/app/services/realistic_test_data/log_generator.py:177",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:207",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:318",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:319",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:362",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:385"
      ]
    },
    "create": {
      "value": "create",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:84"
      ]
    },
    "createMockComponent": {
      "value": "createMockComponent",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:71"
      ]
    },
    "create_access_token": {
      "value": "create_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:270",
        "auth_service/tests/unit/test_refresh_endpoint.py:314"
      ]
    },
    "create_async_engine": {
      "value": "create_async_engine",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:42"
      ]
    },
    "create_module": {
      "value": "create_module",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:68"
      ]
    },
    "create_refresh_token": {
      "value": "create_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:271",
        "auth_service/tests/unit/test_refresh_endpoint.py:315"
      ]
    },
    "created_at": {
      "value": "created_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:58",
        "auth_service/tests/factories/session_factory.py:38",
        "auth_service/tests/factories/user_factory.py:43",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:123",
        "auth_service/tests/utils/assertion_helpers.py:258",
        "scripts/setup_staging_test_account.py:92",
        "scripts/setup_staging_test_account.py:249",
        "scripts/test_log_introspection.py:231"
      ]
    },
    "creation_method": {
      "value": "creation_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:139"
      ]
    },
    "credentials_allowed": {
      "value": "credentials_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:200",
        "scripts/test_cors.py:225",
        "scripts/test_cors.py:252"
      ]
    },
    "critical": {
      "value": "critical",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:233",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:336",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:431",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "scripts/auto_fix_test_violations.py:403",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760",
        "scripts/compliance/fake_test_scanner.py:159",
        "scripts/compliance/fake_test_scanner.py:195",
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "critical modules with security/data operations": {
      "value": "critical modules with security/data operations",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:252"
      ]
    },
    "critical modules...": {
      "value": "critical modules...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:280"
      ]
    },
    "critical violations found": {
      "value": "critical violations found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:605"
      ]
    },
    "critical violations requiring immediate fix": {
      "value": "critical violations requiring immediate fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:555"
      ]
    },
    "critical-error": {
      "value": "critical-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:150"
      ]
    },
    "critical/high severity fake tests": {
      "value": "critical/high severity fake tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:460"
      ]
    },
    "critical_failure": {
      "value": "critical_failure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1014"
      ]
    },
    "critical_files": {
      "value": "critical_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:87",
        "scripts/compliance/fake_test_scanner.py:278",
        "scripts/compliance/fake_test_scanner.py:283",
        "scripts/compliance/fake_test_scanner.py:419"
      ]
    },
    "critical_paths": {
      "value": "critical_paths",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:59",
        "scripts/autonomous_review/test_reviewer.py:88",
        "scripts/standardize_l3_test_names.py:200"
      ]
    },
    "critical_secrets_found": {
      "value": "critical_secrets_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:272",
        "scripts/test_secret_manager_builder_critical.py:349"
      ]
    },
    "critical_test_count": {
      "value": "critical_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:634",
        "scripts/business_value_test_index.py:750"
      ]
    },
    "critical_test_percentage": {
      "value": "critical_test_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:635",
        "scripts/business_value_test_index.py:751"
      ]
    },
    "criticality": {
      "value": "criticality",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:97",
        "scripts/autonomous_review/test_reviewer.py:103"
      ]
    },
    "cross-category duplicates/highly similar tests. Consider creating shared test utilities or fixtures.": {
      "value": "cross-category duplicates/highly similar tests. Consider creating shared test utilities or fixtures.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:489"
      ]
    },
    "cross_category_overlaps": {
      "value": "cross_category_overlaps",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:410",
        "scripts/analyze_test_overlap.py:565"
      ]
    },
    "csv": {
      "value": "csv",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:269",
        "scripts/remove_test_stubs.py:358"
      ]
    },
    "curl -H \"Authorization: Bearer": {
      "value": "curl -H \"Authorization: Bearer",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:320"
      ]
    },
    "curl -H \"Authorization: Bearer YOUR_TOKEN\" https://api.staging.netrasystems.ai/health": {
      "value": "curl -H \"Authorization: Bearer YOUR_TOKEN\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:259"
      ]
    },
    "curl -H \"X-API-Key:": {
      "value": "curl -H \"X-API-Key:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:316"
      ]
    },
    "curl -H \"X-API-Key: YOUR_KEY\" https://api.staging.netrasystems.ai/health": {
      "value": "curl -H \"X-API-Key: YOUR_KEY\" https://api.staging.netrasystems.ai/health",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:258"
      ]
    },
    "curl/7.68.0": {
      "value": "curl/7.68.0",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:90"
      ]
    },
    "curl_api_key": {
      "value": "curl_api_key",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:258"
      ]
    },
    "curl_bearer": {
      "value": "curl_bearer",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:259"
      ]
    },
    "current": {
      "value": "current",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:78",
        "scripts/team_updates_test_analyzer.py:85",
        "scripts/test_staging_migrations.py:146",
        "scripts/test_staging_migrations.py:246"
      ]
    },
    "custom": {
      "value": "custom",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:169"
      ]
    },
    "customer_service": {
      "value": "customer_service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "customer_value_features": {
      "value": "customer_value_features",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:428"
      ]
    },
    "customers": {
      "value": "customers",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:491",
        "scripts/business_value_test_index.py:493"
      ]
    },
    "cy:run": {
      "value": "cy:run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:223"
      ]
    },
    "cyan": {
      "value": "cyan",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:68",
        "scripts/test_oauth_local.py:350"
      ]
    },
    "cypress": {
      "value": "cypress",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/test_discovery_report.py:48",
        "scripts/test_frontend.py:73",
        "scripts/test_frontend.py:101",
        "scripts/test_frontend.py:101",
        "scripts/unified_test_runner.py:445",
        "scripts/unified_test_runner.py:445",
        "scripts/unified_test_runner.py:454",
        "scripts/unified_test_runner.py:593",
        "scripts/unified_test_runner.py:610"
      ]
    },
    "cypress/e2e": {
      "value": "cypress/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:36"
      ]
    },
    "cypress/e2e/**/*.cy.ts": {
      "value": "cypress/e2e/**/*.cy.ts",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:229"
      ]
    },
    "cypress/e2e/critical-basic-flow.cy.ts,cypress/e2e/basic-ui-test.cy.ts": {
      "value": "cypress/e2e/critical-basic-flow.cy.ts,cypress/e2e/basic-ui-test.cy.ts",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:615"
      ]
    },
    "cypress:open": {
      "value": "cypress:open",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:221"
      ]
    },
    "cypress_browser": {
      "value": "cypress_browser",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:602"
      ]
    },
    "cypress_headed": {
      "value": "cypress_headed",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:601"
      ]
    },
    "dashboard.md": {
      "value": "dashboard.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:39"
      ]
    },
    "data": {
      "value": "data",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:149",
        "scripts/test_docker_websocket_fix.py:92",
        "scripts/test_staging_login_automated.py:158",
        "scripts/test_websocket_cors_comprehensive.py:101",
        "scripts/test_websocket_manual.py:31",
        "scripts/test_websocket_middleware.py:75",
        "scripts/test_websocket_simple.py:42"
      ]
    },
    "data:text/html,<script>alert('xss')</script>": {
      "value": "data:text/html,<script>alert('xss')</script>",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:102"
      ]
    },
    "data_layer_found": {
      "value": "data_layer_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:20",
        "scripts/test_gtm_loading.py:51",
        "scripts/test_gtm_loading.py:123"
      ]
    },
    "data_points": {
      "value": "data_points",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:190",
        "scripts/test_data_validator_backup.py:201",
        "scripts/test_data_validator_backup.py:441",
        "scripts/test_data_validator_backup.py:454",
        "scripts/test_data_validator_backup.py:467",
        "scripts/test_data_validator_backup.py:480"
      ]
    },
    "data_validators": {
      "value": "data_validators",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:90"
      ]
    },
    "database": {
      "value": "database",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:28",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:42",
        "auth_service/test_staging_db_connection.py:57",
        "auth_service/test_staging_db_connection.py:94",
        "auth_service/tests/auth-service-down-critical-scenarios.py:190",
        "auth_service/tests/auth-service-down-critical-scenarios.py:195",
        "scripts/add_pytest_markers.py:29",
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "database error": {
      "value": "database error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:378"
      ]
    },
    "database_connection": {
      "value": "database_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:40"
      ]
    },
    "database_deadlock": {
      "value": "database_deadlock",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:37"
      ]
    },
    "database_dependent": {
      "value": "database_dependent",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1119"
      ]
    },
    "database_operations": {
      "value": "database_operations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:34"
      ]
    },
    "database_scripts": {
      "value": "database_scripts",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:126"
      ]
    },
    "database_url": {
      "value": "database_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:110",
        "scripts/unified_test_config.py:127",
        "scripts/unified_test_config.py:135",
        "scripts/unified_test_config.py:143",
        "scripts/unified_test_config.py:151",
        "scripts/unified_test_config.py:306",
        "scripts/unified_test_config.py:307"
      ]
    },
    "database|db|postgres|clickhouse|orm": {
      "value": "database|db|postgres|clickhouse|orm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:98"
      ]
    },
    "datetime": {
      "value": "datetime",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "datetime\\.now\\(\\)": {
      "value": "datetime\\.now\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:220"
      ]
    },
    "day_of_week": {
      "value": "day_of_week",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "db": {
      "value": "db",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340",
        "scripts/auto_fix_test_violations.py:497"
      ]
    },
    "db_latencies": {
      "value": "db_latencies",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:51",
        "scripts/real_service_test_metrics.py:52",
        "scripts/real_service_test_metrics.py:53",
        "scripts/real_service_test_metrics.py:103",
        "scripts/real_service_test_metrics.py:104"
      ]
    },
    "db_queries": {
      "value": "db_queries",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:23",
        "scripts/real_service_test_metrics.py:50",
        "scripts/real_service_test_metrics.py:156",
        "scripts/real_service_test_metrics.py:159",
        "scripts/real_service_test_metrics.py:160"
      ]
    },
    "debug": {
      "value": "debug",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:194",
        "scripts/unified_test_config.py:206"
      ]
    },
    "debug_script": {
      "value": "debug_script",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:11",
        "auth_service/debug_db_test.py:12",
        "auth_service/debug_db_test.py:13"
      ]
    },
    "decorator spacing": {
      "value": "decorator spacing",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:31"
      ]
    },
    "decorator spacing for sync functions": {
      "value": "decorator spacing for sync functions",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:37"
      ]
    },
    "deep": {
      "value": "deep",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:495"
      ]
    },
    "def": {
      "value": "def",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:572",
        "scripts/compliance/project_test_validator.py:230",
        "scripts/compliance/real_test_requirements_enforcer.py:320",
        "scripts/compliance/real_test_validator.py:205",
        "scripts/compliance/test_fixer.py:230",
        "scripts/compliance/test_fixer.py:285",
        "scripts/comprehensive_test_fixer.py:102",
        "scripts/comprehensive_test_fixer.py:111",
        "scripts/comprehensive_test_fixer.py:120",
        "scripts/comprehensive_test_fixer.py:129"
      ]
    },
    "def (test_\\w+)": {
      "value": "def (test_\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:249"
      ]
    },
    "def __init__(self):": {
      "value": "def __init__(self):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:47"
      ]
    },
    "def _get_cors_origins": {
      "value": "def _get_cors_origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:171"
      ]
    },
    "def _setup_test_data(self):\n        \"\"\"Setup test data and configurations\"\"\"": {
      "value": "def _setup_test_data(self):\n        \"\"\"Setup test data and configurations\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:658"
      ]
    },
    "def _verify_results(self, results):\n        \"\"\"Verify test results and assertions\"\"\"": {
      "value": "def _verify_results(self, results):\n        \"\"\"Verify test results and assertions\"\"\"",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:666"
      ]
    },
    "def get_allowed_origins": {
      "value": "def get_allowed_origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:170"
      ]
    },
    "def mock_components": {
      "value": "def mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:36",
        "scripts/compliance/test_fixer.py:38"
      ]
    },
    "def real_components": {
      "value": "def real_components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:38"
      ]
    },
    "def test_": {
      "value": "def test_",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:89",
        "scripts/autonomous_review/test_generator.py:152",
        "scripts/autonomous_review/test_generator.py:165",
        "scripts/autonomous_review/test_generator.py:175",
        "scripts/autonomous_review/test_generator.py:215",
        "scripts/compliance/demo_test_size_enforcement.py:155",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/compliance/test_size_validator.py:170"
      ]
    },
    "def test_\\\\w+\\\\([^)]*\\\\):[^{]*?(?:pass|return)": {
      "value": "def test_\\\\w+\\\\([^)]*\\\\):[^{]*?(?:pass|return)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:276"
      ]
    },
    "def test_\\w+": {
      "value": "def test_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:90"
      ]
    },
    "def test_{name}(self):\\n        \"\"\"Test {path}\"\"\"\\n        # Critical path that must be tested\\n        # TODO: Implement comprehensive test\\n        pass\\n    \\n": {
      "value": "def test_{name}(self):\\n        \"\"\"Test {path}\"\"\"\\n        # Critical path that must be tested\\n        # TODO: Implement comprehensive test\\n        pass\\n    \\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:240"
      ]
    },
    "def\\s+(\\w+)": {
      "value": "def\\s+(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:278"
      ]
    },
    "def\\s+(\\w+)\\s*\\(": {
      "value": "def\\s+(\\w+)\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:135"
      ]
    },
    "def\\s+\\w*_mock\\w*": {
      "value": "def\\s+\\w*_mock\\w*",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:60"
      ]
    },
    "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$": {
      "value": "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*\\.\\.\\.\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:68"
      ]
    },
    "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$": {
      "value": "def\\s+\\w+\\([^)]*\\)\\s*:\\s*\\n\\s*pass\\s*$",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:66"
      ]
    },
    "def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{": {
      "value": "def\\s+\\w+\\(\\*args\\s*,\\s*\\*\\*kwargs\\)\\s*:\\s*\\n.*return\\s*\\{",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:63"
      ]
    },
    "def\\s+create_mock_\\w*component": {
      "value": "def\\s+create_mock_\\w*component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:150"
      ]
    },
    "def\\s+mock_\\w*_component": {
      "value": "def\\s+mock_\\w*_component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:151"
      ]
    },
    "def\\s+mock_\\w+": {
      "value": "def\\s+mock_\\w+",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:59"
      ]
    },
    "default": {
      "value": "default",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:124",
        "scripts/test_staging_clickhouse.py:131",
        "scripts/test_staging_clickhouse.py:154",
        "scripts/test_staging_clickhouse.py:156"
      ]
    },
    "degradation_factor": {
      "value": "degradation_factor",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:123"
      ]
    },
    "degraded": {
      "value": "degraded",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:191",
        "scripts/team_updates_test_analyzer.py:98",
        "scripts/test_staging_login_automated.py:235"
      ]
    },
    "delete": {
      "value": "delete",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:86"
      ]
    },
    "delta": {
      "value": "delta",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:80",
        "scripts/team_updates_test_analyzer.py:85"
      ]
    },
    "dependencies": {
      "value": "dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:105",
        "scripts/setup_test_environment.py:169",
        "scripts/setup_test_environment.py:194",
        "scripts/test_frontend.py:99"
      ]
    },
    "dependency_aware": {
      "value": "dependency_aware",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1015",
        "scripts/unified_test_runner.py:1041"
      ]
    },
    "dependency_resolution": {
      "value": "dependency_resolution",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:42"
      ]
    },
    "dependency_resolution     → test_06_services_starting_before_dependencies": {
      "value": "dependency_resolution     → test_06_services_starting_before_dependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:392"
      ]
    },
    "deploy_to_gcp.py": {
      "value": "deploy_to_gcp.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:62"
      ]
    },
    "deployment_related": {
      "value": "deployment_related",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:78",
        "scripts/test_error_monitor_logic.py:94",
        "scripts/test_error_monitor_logic.py:170",
        "scripts/test_error_monitor_logic.py:176",
        "scripts/test_error_monitor_logic.py:194",
        "scripts/test_error_monitor_logic.py:200",
        "scripts/test_error_monitor_logic.py:221",
        "scripts/test_error_monitor_logic.py:224"
      ]
    },
    "deprecated": {
      "value": "deprecated",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:160"
      ]
    },
    "describe(": {
      "value": "describe(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "describe\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "describe\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:421"
      ]
    },
    "description": {
      "value": "description",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:25",
        "scripts/batch_fix_and_test.py:31",
        "scripts/batch_fix_and_test.py:37",
        "scripts/compliance/test_size_validator.py:442",
        "scripts/final_test_status_check.py:45",
        "scripts/final_test_status_check.py:49",
        "scripts/final_test_status_check.py:55",
        "scripts/final_test_status_check.py:59",
        "scripts/final_test_status_check.py:65",
        "scripts/final_test_status_check.py:71"
      ]
    },
    "detail": {
      "value": "detail",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:307",
        "auth_service/tests/integration/test_refresh_integration.py:316",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:101",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:102",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:113",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:129",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:143",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:154"
      ]
    },
    "detailed_analysis": {
      "value": "detailed_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:290",
        "scripts/fix_test_import_errors.py:327",
        "scripts/fix_test_import_errors.py:329"
      ]
    },
    "detailed_metrics": {
      "value": "detailed_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:219",
        "scripts/test_backend_optimized.py:348"
      ]
    },
    "details": {
      "value": "details",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:147",
        "scripts/comprehensive_test_fixer.py:341",
        "scripts/fix_test_batch.py:37",
        "scripts/fix_test_batch.py:45",
        "scripts/fix_test_batch.py:56",
        "scripts/fix_test_batch.py:73",
        "scripts/fix_test_batch.py:232",
        "scripts/fix_test_batch.py:245",
        "scripts/fix_test_batch.py:301",
        "scripts/fix_test_batch.py:302"
      ]
    },
    "dev": {
      "value": "dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:289",
        "scripts/test_oauth_local.py:246",
        "scripts/unified_test_config.py:95",
        "scripts/unified_test_config.py:133",
        "scripts/unified_test_runner.py:201",
        "scripts/unified_test_runner.py:750",
        "scripts/unified_test_runner.py:755",
        "scripts/unified_test_runner.py:803",
        "scripts/unified_test_runner.py:803",
        "scripts/unified_test_runner.py:817"
      ]
    },
    "dev-client-id": {
      "value": "dev-client-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:53"
      ]
    },
    "dev-client-id.apps.googleusercontent.com": {
      "value": "dev-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:25",
        "scripts/test_oauth_dev_config.py:32"
      ]
    },
    "dev-client-secret-123456": {
      "value": "dev-client-secret-123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:26",
        "scripts/test_oauth_dev_config.py:33"
      ]
    },
    "dev-jwt-secret-123": {
      "value": "dev-jwt-secret-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:129"
      ]
    },
    "dev-secret-key": {
      "value": "dev-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:427"
      ]
    },
    "dev123": {
      "value": "dev123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:237",
        "scripts/test_staging_auth_e2e.py:68"
      ]
    },
    "dev@example.com": {
      "value": "dev@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:237",
        "scripts/test_staging_auth_e2e.py:67"
      ]
    },
    "devDependencies": {
      "value": "devDependencies",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:99"
      ]
    },
    "dev_launcher/tests": {
      "value": "dev_launcher/tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:123"
      ]
    },
    "dev_password": {
      "value": "dev_password",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:130"
      ]
    },
    "development": {
      "value": "development",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:277",
        "auth_service/tests/test_auth_comprehensive.py:64",
        "auth_service/tests/test_auth_comprehensive.py:523",
        "auth_service/tests/test_auth_comprehensive.py:525",
        "auth_service/tests/test_auth_port_configuration.py:48",
        "auth_service/tests/test_auth_port_configuration.py:126",
        "auth_service/tests/test_auth_port_configuration.py:152",
        "auth_service/tests/test_auth_port_configuration.py:188",
        "auth_service/tests/test_auth_port_configuration.py:223",
        "auth_service/tests/test_auth_port_configuration.py:273"
      ]
    },
    "development with fallback": {
      "value": "development with fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:36"
      ]
    },
    "device_": {
      "value": "device_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:37",
        "auth_service/tests/factories/session_factory.py:161",
        "auth_service/tests/test_session_security_cycles_36_40.py:135",
        "auth_service/tests/test_session_security_cycles_36_40.py:295"
      ]
    },
    "device_id": {
      "value": "device_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:37",
        "auth_service/tests/factories/session_factory.py:161"
      ]
    },
    "diagnosis_assistance": {
      "value": "diagnosis_assistance",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "diff": {
      "value": "diff",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228"
      ]
    },
    "different secret loading patterns": {
      "value": "different secret loading patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:534"
      ]
    },
    "different-session-456": {
      "value": "different-session-456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:51"
      ]
    },
    "dim": {
      "value": "dim",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:70"
      ]
    },
    "direct_api": {
      "value": "direct_api",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:124",
        "scripts/test_staging_login_automated.py:318"
      ]
    },
    "directories": {
      "value": "directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:228"
      ]
    },
    "directories:": {
      "value": "directories:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:239"
      ]
    },
    "directory": {
      "value": "directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:113"
      ]
    },
    "disabled": {
      "value": "disabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:359",
        "scripts/test_backend.py:366",
        "scripts/test_backend.py:367",
        "scripts/test_backend_port_binding.py:124",
        "scripts/unified_test_runner.py:1014"
      ]
    },
    "disconnected": {
      "value": "disconnected",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:16",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:17",
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:26"
      ]
    },
    "dist": {
      "value": "dist",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:132",
        "scripts/check_conftest_violations.py:23",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/generate_test_audit.py:25"
      ]
    },
    "dist-packages": {
      "value": "dist-packages",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:130",
        "scripts/generate_test_audit.py:24",
        "scripts/test_exclusion_check.py:20"
      ]
    },
    "docker": {
      "value": "docker",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375",
        "scripts/manage_test_services.py:99",
        "scripts/setup_e2e_test_ports.py:32",
        "scripts/setup_e2e_test_ports.py:49",
        "scripts/start_test_services.py:23",
        "scripts/test_workflows_with_act.py:56",
        "scripts/unified_test_runner.py:666"
      ]
    },
    "docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres": {
      "value": "docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:159"
      ]
    },
    "docker-compose": {
      "value": "docker-compose",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:44"
      ]
    },
    "docker-compose.dev.yml": {
      "value": "docker-compose.dev.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:155"
      ]
    },
    "docker-compose.test.yml": {
      "value": "docker-compose.test.yml",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:100",
        "scripts/start_test_services.py:36"
      ]
    },
    "docker_available": {
      "value": "docker_available",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:654"
      ]
    },
    "docker_error": {
      "value": "docker_error",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:657"
      ]
    },
    "docker_info": {
      "value": "docker_info",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:652",
        "scripts/unified_test_runner.py:653"
      ]
    },
    "docs/testing": {
      "value": "docs/testing",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:41"
      ]
    },
    "document_analysis": {
      "value": "document_analysis",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "does not exist": {
      "value": "does not exist",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:143",
        "scripts/compliance/test_refactor_helper.py:696",
        "scripts/fix_test_import_errors.py:143",
        "scripts/optimize_test_performance.py:354"
      ]
    },
    "does not exist (OK if service has no tests)": {
      "value": "does not exist (OK if service has no tests)",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:108"
      ]
    },
    "does not exist, skipping.": {
      "value": "does not exist, skipping.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:110"
      ]
    },
    "doesn't need splitting (": {
      "value": "doesn't need splitting (",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256"
      ]
    },
    "domain": {
      "value": "domain",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:155",
        "scripts/setup_staging_test_account.py:163"
      ]
    },
    "dry_run": {
      "value": "dry_run",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:592"
      ]
    },
    "dummy": {
      "value": "dummy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238"
      ]
    },
    "duplicate": {
      "value": "duplicate",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:323",
        "scripts/analyze_test_overlap.py:351",
        "scripts/analyze_test_overlap.py:379",
        "scripts/analyze_test_overlap.py:411",
        "scripts/analyze_test_overlap.py:442",
        "scripts/analyze_test_overlap.py:444",
        "scripts/analyze_test_overlap.py:485",
        "scripts/analyze_test_overlap.py:529",
        "scripts/analyze_test_overlap.py:529",
        "scripts/analyze_test_overlap.py:657"
      ]
    },
    "duplicate MagicMock import": {
      "value": "duplicate MagicMock import",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:25"
      ]
    },
    "duplicate tests": {
      "value": "duplicate tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:212"
      ]
    },
    "duplicates": {
      "value": "duplicates",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:65",
        "scripts/analyze_test_overlap.py:357",
        "scripts/analyze_test_overlap.py:380",
        "scripts/analyze_test_overlap.py:411",
        "scripts/analyze_test_overlap.py:566",
        "scripts/analyze_test_overlap.py:582",
        "scripts/analyze_test_overlap.py:590"
      ]
    },
    "duration": {
      "value": "duration",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:280",
        "scripts/real_service_test_metrics.py:20",
        "scripts/real_service_test_metrics.py:79",
        "scripts/real_service_test_metrics.py:87",
        "scripts/real_service_test_metrics.py:125",
        "scripts/startup_test_executor.py:27",
        "scripts/test_backend_optimized.py:231",
        "scripts/test_backend_optimized.py:257",
        "scripts/test_example_message_flow.py:144",
        "scripts/test_example_message_flow.py:144"
      ]
    },
    "duration_days": {
      "value": "duration_days",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "e2e": {
      "value": "e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:21",
        "scripts/add_pytest_markers.py:30",
        "scripts/add_pytest_markers.py:31",
        "scripts/add_pytest_markers.py:32",
        "scripts/add_pytest_markers.py:33",
        "scripts/add_pytest_markers.py:34",
        "scripts/add_pytest_markers.py:35",
        "scripts/add_pytest_markers.py:36",
        "scripts/add_pytest_markers.py:37",
        "scripts/add_test_markers.py:56"
      ]
    },
    "e2e_coverage": {
      "value": "e2e_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:631",
        "scripts/business_value_test_index.py:748"
      ]
    },
    "early": {
      "value": "early",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:108",
        "scripts/business_value_test_index.py:459"
      ]
    },
    "early|starter|standard": {
      "value": "early|starter|standard",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:108"
      ]
    },
    "echo": {
      "value": "echo",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:75"
      ]
    },
    "ecommerce": {
      "value": "ecommerce",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:52",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:257"
      ]
    },
    "edge": {
      "value": "edge",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1074"
      ]
    },
    "efficiency": {
      "value": "efficiency",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "electron": {
      "value": "electron",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1074"
      ]
    },
    "element": {
      "value": "element",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "email": {
      "value": "email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:167",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:503",
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/token_factory.py:224",
        "auth_service/tests/factories/user_factory.py:38",
        "auth_service/tests/integration/test_refresh_integration.py:63",
        "auth_service/tests/integration/test_refresh_integration.py:84",
        "auth_service/tests/integration/test_refresh_integration.py:120",
        "auth_service/tests/integration/test_refresh_integration.py:120",
        "auth_service/tests/integration/test_refresh_integration.py:141"
      ]
    },
    "email_verified": {
      "value": "email_verified",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:62"
      ]
    },
    "embedded in _load_from_secret_manager()": {
      "value": "embedded in _load_from_secret_manager()",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:351"
      ]
    },
    "emerald": {
      "value": "emerald",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:24"
      ]
    },
    "empty/auto-pass tests immediately": {
      "value": "empty/auto-pass tests immediately",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "empty_implementation": {
      "value": "empty_implementation",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:230"
      ]
    },
    "empty_implementations": {
      "value": "empty_implementations",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:65",
        "scripts/remove_test_stubs.py:214"
      ]
    },
    "enable-logging": {
      "value": "enable-logging",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:22"
      ]
    },
    "enabled": {
      "value": "enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:366",
        "scripts/test_backend.py:367"
      ]
    },
    "end-to-end": {
      "value": "end-to-end",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:264",
        "scripts/compliance/real_test_validator.py:226"
      ]
    },
    "end_line": {
      "value": "end_line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:60"
      ]
    },
    "end_lineno": {
      "value": "end_lineno",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:151",
        "scripts/auto_fix_test_violations.py:173",
        "scripts/compliance/project_test_validator.py:214",
        "scripts/compliance/real_test_requirements_enforcer.py:297",
        "scripts/compliance/real_test_validator.py:182",
        "scripts/compliance/test_fixer.py:157",
        "scripts/compliance/test_limits_checker.py:187",
        "scripts/compliance/test_refactor_helper.py:151",
        "scripts/compliance/test_refactor_helper.py:268",
        "scripts/compliance/test_size_validator.py:288"
      ]
    },
    "end_of_quarter": {
      "value": "end_of_quarter",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "end_time": {
      "value": "end_time",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:19",
        "scripts/real_service_test_metrics.py:84",
        "scripts/real_service_test_metrics.py:86",
        "scripts/real_service_test_metrics.py:124"
      ]
    },
    "end_to_end": {
      "value": "end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_violations.py:489",
        "scripts/autonomous_review/test_reviewer.py:227",
        "scripts/compliance/real_test_requirements_enforcer.py:343",
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "endpoint": {
      "value": "endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:344"
      ]
    },
    "endpoints": {
      "value": "endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:29",
        "scripts/test_staging_deployment.py:114",
        "scripts/test_staging_deployment.py:135",
        "scripts/test_staging_deployment.py:173",
        "scripts/test_staging_login_automated.py:87",
        "scripts/test_staging_login_automated.py:98",
        "scripts/test_staging_login_automated.py:101",
        "scripts/test_staging_login_automated.py:104",
        "scripts/test_staging_login_automated.py:108",
        "scripts/test_staging_login_automated.py:126"
      ]
    },
    "english": {
      "value": "english",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:250"
      ]
    },
    "enterprise": {
      "value": "enterprise",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:226",
        "scripts/business_value_test_index.py:110",
        "scripts/business_value_test_index.py:459",
        "scripts/business_value_test_index.py:675",
        "scripts/business_value_test_index.py:680",
        "scripts/test_websocket_dev_mode.py:126"
      ]
    },
    "enterprise:api_access": {
      "value": "enterprise:api_access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:44"
      ]
    },
    "enterprise:manage_billing": {
      "value": "enterprise:manage_billing",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:43"
      ]
    },
    "enterprise:manage_teams": {
      "value": "enterprise:manage_teams",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:41"
      ]
    },
    "enterprise:view_analytics": {
      "value": "enterprise:view_analytics",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:42"
      ]
    },
    "enterprise|premium|sso|saml|sla": {
      "value": "enterprise|premium|sso|saml|sla",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:110"
      ]
    },
    "env": {
      "value": "env",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:267",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:272",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:277",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:299",
        "scripts/business_value_test_index.py:131",
        "scripts/compliance/project_test_validator.py:42",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/generate_test_audit.py:22",
        "scripts/test_oauth_dev_config.py:22",
        "scripts/test_oauth_dev_config.py:36"
      ]
    },
    "env vars": {
      "value": "env vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:112",
        "scripts/test_staging_config.py:127",
        "scripts/test_staging_config.py:136"
      ]
    },
    "env.ACT": {
      "value": "env.ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:241"
      ]
    },
    "env_file": {
      "value": "env_file",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:166",
        "scripts/unified_test_config.py:175",
        "scripts/unified_test_config.py:184",
        "scripts/unified_test_config.py:318",
        "scripts/unified_test_config.py:319"
      ]
    },
    "env_vars": {
      "value": "env_vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:185",
        "scripts/test_database_url_builder_comprehensive.py:190",
        "scripts/test_database_url_builder_comprehensive.py:201",
        "scripts/test_database_url_builder_comprehensive.py:212",
        "scripts/test_database_url_builder_comprehensive.py:223",
        "scripts/test_database_url_builder_comprehensive.py:236",
        "scripts/test_oauth_local.py:92",
        "scripts/test_oauth_local.py:397",
        "scripts/test_secret_manager_builder_critical.py:127",
        "scripts/test_secret_manager_builder_critical.py:139"
      ]
    },
    "env_vars_referenced": {
      "value": "env_vars_referenced",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:56"
      ]
    },
    "environment": {
      "value": "environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:112",
        "scripts/setup_staging_test_account.py:250",
        "scripts/setup_test_environment.py:104",
        "scripts/test_cors.py:263",
        "scripts/test_cors.py:459",
        "scripts/test_docker_websocket_fix.py:221",
        "scripts/test_docker_websocket_fix.py:272",
        "scripts/test_gtm_loading.py:14",
        "scripts/test_gtm_loading.py:76",
        "scripts/test_gtm_loading.py:145"
      ]
    },
    "environment in ['staging', 'production', 'prod']": {
      "value": "environment in ['staging', 'production', 'prod']",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:35",
        "scripts/test_staging_simplified.py:52"
      ]
    },
    "environment-specific with GCP fallback": {
      "value": "environment-specific with GCP fallback",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:352"
      ]
    },
    "environment. URL:": {
      "value": "environment. URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:371"
      ]
    },
    "environment...": {
      "value": "environment...",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:106"
      ]
    },
    "environment_config": {
      "value": "environment_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:202"
      ]
    },
    "environment_controlled": {
      "value": "environment_controlled",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:267",
        "scripts/test_redis_config_critical_failure.py:288"
      ]
    },
    "environment_name": {
      "value": "environment_name",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:189"
      ]
    },
    "environment_vars": {
      "value": "environment_vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:26",
        "scripts/test_docker_websocket_fix.py:51",
        "scripts/test_docker_websocket_fix.py:59",
        "scripts/test_docker_websocket_fix.py:262"
      ]
    },
    "environments\n\n🔥 CRITICAL FAILURES (": {
      "value": "environments\n\n🔥 CRITICAL FAILURES (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:219"
      ]
    },
    "error": {
      "value": "error",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:68",
        "auth_service/tests/auth-service-down-critical-scenarios.py:195",
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/factories/audit_factory.py:176",
        "auth_service/tests/test_auth_comprehensive.py:268",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:251",
        "auth_service/tests/utils/assertion_helpers.py:159",
        "scripts/auto_fix_test_sizes.py:350",
        "scripts/autonomous_review/test_generator.py:185"
      ]
    },
    "error rate": {
      "value": "error rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:101"
      ]
    },
    "error(s) in": {
      "value": "error(s) in",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:276"
      ]
    },
    "error(s) must be fixed": {
      "value": "error(s) must be fixed",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:313"
      ]
    },
    "error:": {
      "value": "error:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "scripts/test_workflows_with_act.py:206"
      ]
    },
    "error_cascade": {
      "value": "error_cascade",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:68",
        "netra_backend/app/services/realistic_test_data/log_generator.py:94",
        "netra_backend/app/services/realistic_test_data/log_generator.py:153",
        "netra_backend/app/services/realistic_test_data/models.py:94"
      ]
    },
    "error_cascades": {
      "value": "error_cascades",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:17"
      ]
    },
    "error_code": {
      "value": "error_code",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:70",
        "netra_backend/app/services/realistic_test_data/models.py:114",
        "netra_backend/app/services/realistic_test_data/models.py:120",
        "netra_backend/app/services/realistic_test_data/models.py:125",
        "netra_backend/app/services/realistic_test_data/models.py:131",
        "netra_backend/app/services/realistic_test_data/models.py:136",
        "auth_service/tests/utils/assertion_helpers.py:159",
        "auth_service/tests/utils/assertion_helpers.py:169",
        "auth_service/tests/utils/assertion_helpers.py:170"
      ]
    },
    "error_description": {
      "value": "error_description",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:269"
      ]
    },
    "error_handlers": {
      "value": "error_handlers",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:89"
      ]
    },
    "error_handling": {
      "value": "error_handling",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:351"
      ]
    },
    "error_message": {
      "value": "error_message",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:56",
        "scripts/test_backend_optimized.py:276"
      ]
    },
    "error_rate": {
      "value": "error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:55",
        "netra_backend/app/services/realistic_test_data/log_generator.py:156",
        "netra_backend/app/services/realistic_test_data/log_generator.py:168",
        "netra_backend/app/services/realistic_test_data/log_generator.py:176",
        "netra_backend/app/services/realistic_test_data/models.py:39",
        "netra_backend/app/services/realistic_test_data/models.py:49",
        "netra_backend/app/services/realistic_test_data/models.py:59",
        "netra_backend/app/services/realistic_test_data/models.py:69",
        "netra_backend/app/services/realistic_test_data/models.py:79",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:203"
      ]
    },
    "error_score": {
      "value": "error_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:95",
        "scripts/test_error_monitor_logic.py:170",
        "scripts/test_error_monitor_logic.py:177",
        "scripts/test_error_monitor_logic.py:194",
        "scripts/test_error_monitor_logic.py:201"
      ]
    },
    "error_type": {
      "value": "error_type",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:30",
        "scripts/comprehensive_test_fixer.py:42",
        "scripts/comprehensive_test_fixer.py:54",
        "scripts/comprehensive_test_fixer.py:66",
        "scripts/comprehensive_test_fixer.py:336",
        "scripts/comprehensive_test_fixer.py:340",
        "scripts/fix_test_batch.py:36",
        "scripts/fix_test_batch.py:44",
        "scripts/fix_test_batch.py:55",
        "scripts/fix_test_batch.py:65"
      ]
    },
    "errors": {
      "value": "errors",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:621",
        "scripts/auto_fix_test_sizes.py:675",
        "scripts/auto_fix_test_sizes.py:753",
        "scripts/auto_fix_test_sizes.py:754",
        "scripts/auto_fix_test_sizes.py:755",
        "scripts/compliance/test_refactor_helper.py:614",
        "scripts/comprehensive_test_fixer.py:283",
        "scripts/comprehensive_test_fixer.py:338",
        "scripts/real_service_test_metrics.py:27",
        "scripts/real_service_test_metrics.py:205"
      ]
    },
    "estimatedTime": {
      "value": "estimatedTime",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:288",
        "scripts/test_example_message_flow.py:410"
      ]
    },
    "estimated_improvement": {
      "value": "estimated_improvement",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "estimated_lines": {
      "value": "estimated_lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_refactor_helper.py:425",
        "scripts/compliance/test_refactor_helper.py:435",
        "scripts/compliance/test_refactor_helper.py:465",
        "scripts/compliance/test_refactor_helper.py:475",
        "scripts/compliance/test_refactor_helper.py:508",
        "scripts/compliance/test_refactor_helper.py:573",
        "scripts/compliance/test_refactor_helper.py:604",
        "scripts/compliance/test_refactor_helper.py:604",
        "scripts/compliance/test_refactor_helper.py:624"
      ]
    },
    "estimated_revenue_usd": {
      "value": "estimated_revenue_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "event": {
      "value": "event",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:45",
        "scripts/test_gtm_tracking.py:56",
        "scripts/test_gtm_tracking.py:94",
        "scripts/test_gtm_tracking.py:127",
        "scripts/test_gtm_tracking.py:129"
      ]
    },
    "event(s)": {
      "value": "event(s)",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:130"
      ]
    },
    "event_action": {
      "value": "event_action",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:57"
      ]
    },
    "event_metadata": {
      "value": "event_metadata",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:57"
      ]
    },
    "event_type": {
      "value": "event_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:51",
        "auth_service/tests/utils/assertion_helpers.py:258",
        "auth_service/tests/utils/assertion_helpers.py:263",
        "auth_service/tests/utils/assertion_helpers.py:264"
      ]
    },
    "exact duplicate test pairs. These should be immediately reviewed and consolidated.": {
      "value": "exact duplicate test pairs. These should be immediately reviewed and consolidated.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:444"
      ]
    },
    "example_message_id": {
      "value": "example_message_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:282",
        "scripts/test_example_message_flow.py:404"
      ]
    },
    "example_message_metadata": {
      "value": "example_message_metadata",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:283",
        "scripts/test_example_message_flow.py:405"
      ]
    },
    "examples": {
      "value": "examples",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "excellent": {
      "value": "excellent",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:44"
      ]
    },
    "exception": {
      "value": "exception",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:350",
        "scripts/test_gtm_tracking.py:94"
      ]
    },
    "exception:": {
      "value": "exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:256"
      ]
    },
    "excess_device": {
      "value": "excess_device",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:149"
      ]
    },
    "excessive_mocking": {
      "value": "excessive_mocking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:286",
        "scripts/compliance/real_test_linter.py:164",
        "scripts/compliance/real_test_requirements_enforcer.py:368",
        "scripts/compliance/real_test_requirements_enforcer.py:516",
        "scripts/compliance/real_test_validator.py:247",
        "scripts/compliance/test_fixer.py:368"
      ]
    },
    "excludeSwitches": {
      "value": "excludeSwitches",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:22"
      ]
    },
    "excluded_paths = [\"/health\", \"/metrics\", \"/\", \"/docs\", \"/openapi.json\", \"/redoc\", \"/ws\", \"/websocket\", \"/ws/test\"]": {
      "value": "excluded_paths = [\"/health\", \"/metrics\", \"/\", \"/docs\", \"/openapi.json\", \"/redoc\", \"/ws\", \"/websocket\", \"/ws/test\"]",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:193"
      ]
    },
    "execution_plan": {
      "value": "execution_plan",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:873"
      ]
    },
    "execution_results": {
      "value": "execution_results",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:216",
        "scripts/test_backend_optimized.py:274"
      ]
    },
    "execution_time_seconds": {
      "value": "execution_time_seconds",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:641"
      ]
    },
    "exists": {
      "value": "exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:183",
        "scripts/test_docker_websocket_fix.py:189",
        "scripts/test_docker_websocket_fix.py:281",
        "scripts/test_docker_websocket_fix.py:317"
      ]
    },
    "exists in": {
      "value": "exists in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:116"
      ]
    },
    "exit_code": {
      "value": "exit_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:63",
        "scripts/test_verify_workflow_status_corrected.py:75"
      ]
    },
    "exp": {
      "value": "exp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:41",
        "auth_service/tests/factories/token_factory.py:135",
        "auth_service/tests/integration/test_refresh_integration.py:231",
        "auth_service/tests/test_auth_comprehensive.py:152",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:31",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:43",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:66",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:116",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:148",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:184"
      ]
    },
    "expect": {
      "value": "expect",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:198",
        "scripts/test_websocket_cors_comprehensive.py:204",
        "scripts/test_websocket_cors_comprehensive.py:210",
        "scripts/test_websocket_cors_comprehensive.py:218",
        "scripts/test_websocket_cors_comprehensive.py:224",
        "scripts/test_websocket_cors_comprehensive.py:230",
        "scripts/test_websocket_cors_comprehensive.py:238",
        "scripts/test_websocket_cors_comprehensive.py:246",
        "scripts/test_websocket_cors_comprehensive.py:254",
        "scripts/test_websocket_cors_comprehensive.py:262"
      ]
    },
    "expect(": {
      "value": "expect(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "expect_success": {
      "value": "expect_success",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:63",
        "scripts/test_websocket_cors_comprehensive.py:281",
        "scripts/test_websocket_cors_comprehensive.py:306"
      ]
    },
    "expected": {
      "value": "expected",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:52",
        "scripts/test_docker_websocket_fix.py:60",
        "scripts/test_docker_websocket_fix.py:264"
      ]
    },
    "expected_client_id_key": {
      "value": "expected_client_id_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:268",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:273",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:278",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:289",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:300"
      ]
    },
    "expected_exit_code": {
      "value": "expected_exit_code",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:64",
        "scripts/test_verify_workflow_status_corrected.py:76"
      ]
    },
    "expected_id": {
      "value": "expected_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:32",
        "scripts/test_oauth_dev_config.py:44",
        "scripts/test_oauth_dev_config.py:58",
        "scripts/test_oauth_dev_config.py:88",
        "scripts/test_oauth_dev_config.py:88"
      ]
    },
    "expected_id_log": {
      "value": "expected_id_log",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:30",
        "scripts/test_oauth_dev_config.py:42",
        "scripts/test_oauth_dev_config.py:56"
      ]
    },
    "expected_patterns": {
      "value": "expected_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:53",
        "scripts/test_cold_start_e2e.py:418"
      ]
    },
    "expected_secret": {
      "value": "expected_secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:33",
        "scripts/test_oauth_dev_config.py:45",
        "scripts/test_oauth_dev_config.py:59",
        "scripts/test_oauth_dev_config.py:94",
        "scripts/test_oauth_dev_config.py:94"
      ]
    },
    "expected_secret_key": {
      "value": "expected_secret_key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:269",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:274",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:279",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:290",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:301"
      ]
    },
    "expected_secret_log": {
      "value": "expected_secret_log",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:31",
        "scripts/test_oauth_dev_config.py:43",
        "scripts/test_oauth_dev_config.py:57"
      ]
    },
    "expected_value": {
      "value": "expected_value",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "expired": {
      "value": "expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:378",
        "auth_service/tests/utils/assertion_helpers.py:56",
        "auth_service/tests/utils/assertion_helpers.py:68"
      ]
    },
    "expires": {
      "value": "expires",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:142"
      ]
    },
    "expires_at": {
      "value": "expires_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:39",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:124",
        "scripts/setup_staging_test_account.py:50"
      ]
    },
    "expires_in": {
      "value": "expires_in",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:196",
        "auth_service/tests/integration/test_refresh_integration.py:105",
        "auth_service/tests/test_auth_comprehensive.py:229",
        "auth_service/tests/test_oauth_state_validation.py:116",
        "auth_service/tests/test_oauth_state_validation.py:261",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:63",
        "auth_service/tests/unit/test_refresh_endpoint.py:55",
        "scripts/test_staging_auth_e2e.py:112"
      ]
    },
    "exponential": {
      "value": "exponential",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:141",
        "netra_backend/app/services/realistic_test_data/models.py:75"
      ]
    },
    "exponential_spread": {
      "value": "exponential_spread",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:95"
      ]
    },
    "expose_headers": {
      "value": "expose_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:355"
      ]
    },
    "external_services": {
      "value": "external_services",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:49"
      ]
    },
    "extract_utilities": {
      "value": "extract_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:579",
        "scripts/compliance/test_refactor_helper.py:632"
      ]
    },
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY0MTQxMDMsImV4cCI6MTc1NjQxNTAwMywidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2Nlc3MiLCJpc3MiOiJuZXRyYS1hdXRoLXNlcnZpY2UiLCJhdWQiOiJuZXRyYS1wbGF0Zm9ybSIsImp0aSI6Ijc2ZmZiYTg4LWJjNDctNDkyNS04MWJkLTRlMWQxMDlhMjRjYiIsImVudiI6InN0YWdpbmciLCJzdmNfaWQiOiJuZXRyYS1hdXRoLXN0YWdpbmctMTc1NjQwOTIxMyIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsInBlcm1pc3Npb25zIjpbXX0.KNIAy-aqKIyPy3rv69zMbCGqpmwNOm78KfX9ThRBUFE": {
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YzVlMTAzMi1lZDIxLTRhZWEtYjEyYS1hZWRkZjM2MjJiZWMiLCJpYXQiOjE3NTY0MTQxMDMsImV4cCI6MTc1NjQxNTAwMywidG9rZW5fdHlwZSI6ImFjY2VzcyIsInR5cGUiOiJhY2Nlc3MiLCJpc3MiOiJuZXRyYS1hdXRoLXNlcnZpY2UiLCJhdWQiOiJuZXRyYS1wbGF0Zm9ybSIsImp0aSI6Ijc2ZmZiYTg4LWJjNDctNDkyNS04MWJkLTRlMWQxMDlhMjRjYiIsImVudiI6InN0YWdpbmciLCJzdmNfaWQiOiJuZXRyYS1hdXRoLXN0YWdpbmctMTc1NjQwOTIxMyIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsInBlcm1pc3Npb25zIjpbXX0.KNIAy-aqKIyPy3rv69zMbCGqpmwNOm78KfX9ThRBUFE",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:14"
      ]
    },
    "f": {
      "value": "f",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "fail_fast": {
      "value": "fail_fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:98",
        "scripts/unified_test_config.py:195",
        "scripts/unified_test_config.py:202",
        "scripts/unified_test_config.py:209",
        "scripts/unified_test_config.py:216",
        "scripts/unified_test_config.py:376"
      ]
    },
    "fail_fast_enabled": {
      "value": "fail_fast_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:170"
      ]
    },
    "fail_fast_threshold": {
      "value": "fail_fast_threshold",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:180",
        "scripts/test_backend_optimized.py:187",
        "scripts/test_backend_optimized.py:194"
      ]
    },
    "failed": {
      "value": "failed",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:143",
        "scripts/comprehensive_test_fixer.py:282",
        "scripts/comprehensive_test_fixer.py:332",
        "scripts/comprehensive_test_fixer.py:334",
        "scripts/comprehensive_test_fixer.py:337",
        "scripts/comprehensive_test_fixer.py:393",
        "scripts/comprehensive_test_fixer.py:423",
        "scripts/fix_test_batch.py:231",
        "scripts/fix_test_batch.py:250",
        "scripts/fix_test_batch.py:251"
      ]
    },
    "failed with exception:": {
      "value": "failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:407"
      ]
    },
    "failed:": {
      "value": "failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:55"
      ]
    },
    "failed_files": {
      "value": "failed_files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:292",
        "scripts/fix_test_import_errors.py:312",
        "scripts/fix_test_import_errors.py:321",
        "scripts/fix_test_import_errors.py:322",
        "scripts/fix_test_import_errors.py:323"
      ]
    },
    "failed_requests": {
      "value": "failed_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "failed_tests": {
      "value": "failed_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:145",
        "scripts/test_failure_scanner.py:160"
      ]
    },
    "failing": {
      "value": "failing",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:234"
      ]
    },
    "failing tests": {
      "value": "failing tests",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:117"
      ]
    },
    "failing tests to process": {
      "value": "failing tests to process",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:300"
      ]
    },
    "failing tests** tracked in bad_tests.json": {
      "value": "failing tests** tracked in bad_tests.json",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:165"
      ]
    },
    "failing_agent": {
      "value": "failing_agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:71"
      ]
    },
    "failing_tests": {
      "value": "failing_tests",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:116",
        "scripts/generate_test_audit.py:132",
        "scripts/generate_test_audit.py:164",
        "scripts/generate_test_audit.py:165"
      ]
    },
    "failover@example.com": {
      "value": "failover@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:45"
      ]
    },
    "failure": {
      "value": "failure",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:350",
        "scripts/team_updates_test_analyzer.py:61"
      ]
    },
    "failure_rate": {
      "value": "failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:196",
        "scripts/test_failure_scanner.py:226"
      ]
    },
    "failure_reason": {
      "value": "failure_reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:95"
      ]
    },
    "failure_scan.json": {
      "value": "failure_scan.json",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:349",
        "scripts/fix_test_batch.py:349",
        "scripts/test_failure_scanner.py:211"
      ]
    },
    "failure_start": {
      "value": "failure_start",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:114"
      ]
    },
    "failures": {
      "value": "failures",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:56",
        "scripts/team_updates_test_analyzer.py:90",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:116",
        "scripts/test_failure_scanner.py:159"
      ]
    },
    "failures_found": {
      "value": "failures_found",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:97",
        "scripts/iterative_test_fix_loop.py:111"
      ]
    },
    "fair": {
      "value": "fair",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:46"
      ]
    },
    "fake": {
      "value": "fake",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238"
      ]
    },
    "fake tests found": {
      "value": "fake tests found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:463"
      ]
    },
    "fake tests found in": {
      "value": "fake tests found in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:91"
      ]
    },
    "fake tests in": {
      "value": "fake tests in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:74"
      ]
    },
    "fake tests requiring attention": {
      "value": "fake tests requiring attention",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:444"
      ]
    },
    "fake tests, severity:": {
      "value": "fake tests, severity:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:286"
      ]
    },
    "fake_test_count": {
      "value": "fake_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:174",
        "scripts/compliance/fake_test_scanner.py:179",
        "scripts/compliance/fake_test_scanner.py:286"
      ]
    },
    "fake_tests": {
      "value": "fake_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:164",
        "scripts/compliance/fake_test_scanner.py:168",
        "scripts/compliance/fake_test_scanner.py:174",
        "scripts/compliance/fake_test_scanner.py:239"
      ]
    },
    "fake_tests_by_directory": {
      "value": "fake_tests_by_directory",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:84"
      ]
    },
    "fake_tests_by_severity": {
      "value": "fake_tests_by_severity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:86",
        "scripts/compliance/fake_test_scanner.py:117",
        "scripts/compliance/fake_test_scanner.py:263",
        "scripts/compliance/fake_test_scanner.py:266",
        "scripts/compliance/fake_test_scanner.py:418"
      ]
    },
    "fake_tests_by_type": {
      "value": "fake_tests_by_type",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:85",
        "scripts/compliance/fake_test_scanner.py:116",
        "scripts/compliance/fake_test_scanner.py:271",
        "scripts/compliance/fake_test_scanner.py:273",
        "scripts/compliance/fake_test_scanner.py:417"
      ]
    },
    "fake_token": {
      "value": "fake_token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:122",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:141",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163",
        "scripts/test_verify_workflow_status_corrected.py:171"
      ]
    },
    "fallback": {
      "value": "fallback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:156",
        "auth_service/tests/auth-service-down-critical-scenarios.py:415"
      ]
    },
    "fallback-client-id": {
      "value": "fallback-client-id",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:27",
        "scripts/test_oauth_dev_config.py:54"
      ]
    },
    "fallback-client-id.apps.googleusercontent.com": {
      "value": "fallback-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:39",
        "scripts/test_oauth_dev_config.py:44"
      ]
    },
    "fallback-secret": {
      "value": "fallback-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:28"
      ]
    },
    "fallback-secret-789012": {
      "value": "fallback-secret-789012",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:40",
        "scripts/test_oauth_dev_config.py:45"
      ]
    },
    "fallback_logic": {
      "value": "fallback_logic",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:275",
        "scripts/test_secret_manager_builder_critical.py:352"
      ]
    },
    "fallback_mode": {
      "value": "fallback_mode",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:275",
        "scripts/test_redis_config_critical_failure.py:267",
        "scripts/test_redis_config_critical_failure.py:288"
      ]
    },
    "false": {
      "value": "false",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:34",
        "scripts/test_async_postgres.py:19",
        "scripts/test_docker_websocket_fix.py:209",
        "scripts/test_docker_websocket_fix.py:210",
        "scripts/test_redis_config_critical_failure.py:92",
        "scripts/unified_test_runner.py:228",
        "scripts/unified_test_runner.py:798",
        "scripts/unified_test_runner.py:819"
      ]
    },
    "fast": {
      "value": "fast",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:192"
      ]
    },
    "feature": {
      "value": "feature",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:506",
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "feature_based": {
      "value": "feature_based",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:505"
      ]
    },
    "fernet-key": {
      "value": "fernet-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:142"
      ]
    },
    "fernet_key": {
      "value": "fernet_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:94",
        "scripts/test_staging_config.py:134"
      ]
    },
    "file": {
      "value": "file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64",
        "scripts/analyze_test_mocks.py:154",
        "scripts/analyze_test_mocks.py:177",
        "scripts/analyze_test_mocks.py:188",
        "scripts/analyze_test_mocks.py:188",
        "scripts/autonomous_review/test_reviewer.py:96",
        "scripts/autonomous_review/test_reviewer.py:104",
        "scripts/autonomous_review/test_reviewer.py:105",
        "scripts/business_value_test_index.py:640",
        "scripts/check_test_compliance.py:110"
      ]
    },
    "file=": {
      "value": "file=",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:100"
      ]
    },
    "file_analyses": {
      "value": "file_analyses",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:78",
        "scripts/compliance/test_size_validator.py:91",
        "scripts/compliance/test_size_validator.py:494"
      ]
    },
    "file_error": {
      "value": "file_error",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:147",
        "scripts/compliance/real_test_requirements_enforcer.py:179",
        "scripts/compliance/real_test_validator.py:102"
      ]
    },
    "file_fixes": {
      "value": "file_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:407"
      ]
    },
    "file_operations": {
      "value": "file_operations",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "file_path": {
      "value": "file_path",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:633",
        "scripts/auto_fix_test_sizes.py:647",
        "scripts/auto_fix_test_sizes.py:673",
        "scripts/compliance/test_refactor_helper.py:99",
        "scripts/compliance/test_size_validator.py:440",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "file_path,line_number,violation_type,severity,description,recommended_action": {
      "value": "file_path,line_number,violation_type,severity,description,recommended_action",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:291",
        "scripts/remove_test_stubs.py:294"
      ]
    },
    "file_pattern": {
      "value": "file_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:245",
        "scripts/unified_test_config.py:250",
        "scripts/unified_test_config.py:255",
        "scripts/unified_test_config.py:260",
        "scripts/unified_test_config.py:265"
      ]
    },
    "file_size": {
      "value": "file_size",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:627",
        "scripts/auto_fix_test_violations.py:210",
        "scripts/auto_fix_test_violations.py:809",
        "scripts/auto_fix_test_violations.py:863",
        "scripts/auto_fix_test_violations.py:890",
        "scripts/compliance/project_test_validator.py:155",
        "scripts/compliance/real_test_linter.py:171",
        "scripts/compliance/real_test_requirements_enforcer.py:221",
        "scripts/compliance/real_test_requirements_enforcer.py:516",
        "scripts/compliance/real_test_validator.py:110"
      ]
    },
    "file_splits": {
      "value": "file_splits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:199",
        "scripts/compliance/real_test_linter.py:202",
        "scripts/compliance/test_fixer.py:350",
        "scripts/compliance/test_fixer.py:361"
      ]
    },
    "file_system": {
      "value": "file_system",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:65"
      ]
    },
    "files": {
      "value": "files",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75",
        "scripts/auto_fix_test_violations.py:718",
        "scripts/auto_fix_test_violations.py:831",
        "scripts/business_value_test_index.py:554",
        "scripts/compliance/fake_test_scanner.py:74",
        "scripts/compliance/fake_test_scanner.py:91",
        "scripts/compliance/real_test_linter.py:137",
        "scripts/compliance/real_test_linter.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:493",
        "scripts/fix_test_import_order.py:108"
      ]
    },
    "files (already correct or no setup_test_path)": {
      "value": "files (already correct or no setup_test_path)",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:109"
      ]
    },
    "files (use --limit=N to change)": {
      "value": "files (use --limit=N to change)",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:261"
      ]
    },
    "files don't use setup_test_path": {
      "value": "files don't use setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:84"
      ]
    },
    "files fixed:": {
      "value": "files fixed:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:97"
      ]
    },
    "files have correct import order": {
      "value": "files have correct import order",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:83"
      ]
    },
    "files have import order issues": {
      "value": "files have import order issues",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:85"
      ]
    },
    "files in priority order:": {
      "value": "files in priority order:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:266"
      ]
    },
    "files with issues": {
      "value": "files with issues",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:115"
      ]
    },
    "files with references:": {
      "value": "files with references:",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:171"
      ]
    },
    "files with size violations addressed": {
      "value": "files with size violations addressed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:268"
      ]
    },
    "files with syntax errors": {
      "value": "files with syntax errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:245",
        "scripts/fix_test_syntax_errors.py:245"
      ]
    },
    "files)": {
      "value": "files)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:521",
        "scripts/compliance/test_violations_reporter.py:75"
      ]
    },
    "files):": {
      "value": "files):",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:165",
        "scripts/check_test_compliance.py:173",
        "scripts/check_test_compliance.py:183",
        "scripts/fix_test_import_errors.py:315"
      ]
    },
    "files** in test_framework directory": {
      "value": "files** in test_framework directory",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:161"
      ]
    },
    "files, modified": {
      "value": "files, modified",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:63"
      ]
    },
    "files:": {
      "value": "files:",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:164"
      ]
    },
    "files_affected": {
      "value": "files_affected",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:263",
        "scripts/remove_test_stubs.py:311"
      ]
    },
    "files_analyzed": {
      "value": "files_analyzed",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:47",
        "scripts/optimize_test_performance.py:51",
        "scripts/optimize_test_performance.py:276",
        "scripts/optimize_test_performance.py:400"
      ]
    },
    "files_created": {
      "value": "files_created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:694",
        "scripts/auto_fix_test_sizes.py:701"
      ]
    },
    "files_exceeding_300_lines": {
      "value": "files_exceeding_300_lines",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:133"
      ]
    },
    "files_exceeding_limit": {
      "value": "files_exceeding_limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:80",
        "scripts/compliance/test_size_validator.py:96",
        "scripts/compliance/test_size_validator.py:421",
        "scripts/compliance/test_size_validator.py:460"
      ]
    },
    "files_fixed": {
      "value": "files_fixed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:289",
        "scripts/fix_test_import_errors.py:311"
      ]
    },
    "files_over_300": {
      "value": "files_over_300",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:90",
        "scripts/check_test_compliance.py:109",
        "scripts/check_test_compliance.py:133",
        "scripts/check_test_compliance.py:147",
        "scripts/check_test_compliance.py:164",
        "scripts/check_test_compliance.py:165",
        "scripts/check_test_compliance.py:166",
        "scripts/check_test_compliance.py:168",
        "scripts/check_test_compliance.py:169"
      ]
    },
    "files_processed": {
      "value": "files_processed",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:617",
        "scripts/auto_fix_test_sizes.py:657",
        "scripts/auto_fix_test_sizes.py:748"
      ]
    },
    "files_split": {
      "value": "files_split",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:618",
        "scripts/auto_fix_test_sizes.py:662",
        "scripts/auto_fix_test_sizes.py:749"
      ]
    },
    "files_with_errors": {
      "value": "files_with_errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:288",
        "scripts/fix_test_import_errors.py:310"
      ]
    },
    "files_with_long_functions": {
      "value": "files_with_long_functions",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:134"
      ]
    },
    "files_with_mock_components": {
      "value": "files_with_mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:135"
      ]
    },
    "find": {
      "value": "find",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:62",
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:68",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:65",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:71"
      ]
    },
    "findings": {
      "value": "findings",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:320",
        "scripts/test_data_validator_backup.py:358",
        "scripts/test_data_validator_backup.py:371",
        "scripts/test_data_validator_backup.py:384",
        "scripts/test_data_validator_backup.py:397",
        "scripts/test_data_validator_backup.py:414"
      ]
    },
    "fingerprint_mismatch": {
      "value": "fingerprint_mismatch",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:103"
      ]
    },
    "finish_reason": {
      "value": "finish_reason",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115"
      ]
    },
    "fintech": {
      "value": "fintech",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256"
      ]
    },
    "firefox": {
      "value": "firefox",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1074"
      ]
    },
    "first_failure": {
      "value": "first_failure",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1014"
      ]
    },
    "fix_applied": {
      "value": "fix_applied",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:264",
        "scripts/fix_test_batch.py:310"
      ]
    },
    "fix_attempted": {
      "value": "fix_attempted",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:98",
        "scripts/iterative_test_fix_loop.py:123"
      ]
    },
    "fix_command": {
      "value": "fix_command",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:99",
        "scripts/iterative_test_fix_loop.py:128"
      ]
    },
    "fix_delegated": {
      "value": "fix_delegated",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:129"
      ]
    },
    "fix_module_import": {
      "value": "fix_module_import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:76"
      ]
    },
    "fix_needed": {
      "value": "fix_needed",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:33",
        "scripts/comprehensive_test_fixer.py:45",
        "scripts/comprehensive_test_fixer.py:57",
        "scripts/comprehensive_test_fixer.py:68",
        "scripts/comprehensive_test_fixer.py:317"
      ]
    },
    "fix_strategy": {
      "value": "fix_strategy",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:38",
        "scripts/fix_test_batch.py:49",
        "scripts/fix_test_batch.py:60",
        "scripts/fix_test_batch.py:66",
        "scripts/fix_test_batch.py:76",
        "scripts/fix_test_batch.py:80",
        "scripts/fix_test_batch.py:307"
      ]
    },
    "fix_suggestion": {
      "value": "fix_suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:443",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "fixed": {
      "value": "fixed",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:281",
        "scripts/comprehensive_test_fixer.py:311",
        "scripts/comprehensive_test_fixer.py:329",
        "scripts/comprehensive_test_fixer.py:392",
        "scripts/comprehensive_test_fixer.py:395",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/fix_test_batch.py:230",
        "scripts/fix_test_batch.py:248",
        "scripts/fix_test_batch.py:249",
        "scripts/fix_test_batch.py:309"
      ]
    },
    "fixes": {
      "value": "fixes",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:106"
      ]
    },
    "fixes_applied": {
      "value": "fixes_applied",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:144",
        "scripts/comprehensive_test_fixer.py:411",
        "scripts/fix_test_import_errors.py:291",
        "scripts/fix_test_import_errors.py:314",
        "scripts/fix_test_import_errors.py:315",
        "scripts/fix_test_import_errors.py:316"
      ]
    },
    "fixture": {
      "value": "fixture",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:190",
        "scripts/analyze_test_overlap.py:191",
        "scripts/auto_fix_test_sizes.py:183",
        "scripts/auto_fix_test_sizes.py:183",
        "scripts/auto_fix_test_violations.py:446",
        "scripts/auto_fix_test_violations.py:510",
        "scripts/compliance/test_refactor_helper.py:190",
        "scripts/compliance/test_refactor_helper.py:192",
        "scripts/compliance/test_refactor_helper.py:316",
        "scripts/compliance/test_refactor_helper.py:319"
      ]
    },
    "fixture_similarity": {
      "value": "fixture_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:633"
      ]
    },
    "fixtures": {
      "value": "fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:272",
        "scripts/auto_fix_test_sizes.py:301",
        "scripts/compliance/demo_test_size_enforcement.py:91",
        "scripts/compliance/test_refactor_helper.py:103",
        "scripts/compliance/test_refactor_helper.py:709",
        "scripts/optimize_test_performance.py:97"
      ]
    },
    "fixtures.py": {
      "value": "fixtures.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_validator.py:69"
      ]
    },
    "flaky": {
      "value": "flaky",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:111"
      ]
    },
    "flaky_tests": {
      "value": "flaky_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:147",
        "scripts/team_updates_test_analyzer.py:157"
      ]
    },
    "float": {
      "value": "float",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:53",
        "scripts/test_data_validator_backup.py:503"
      ]
    },
    "flu_season": {
      "value": "flu_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "focused test functions or use helper methods": {
      "value": "focused test functions or use helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:157"
      ]
    },
    "focused test modules": {
      "value": "focused test modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:113",
        "scripts/compliance/test_size_validator.py:194"
      ]
    },
    "for functions to implement": {
      "value": "for functions to implement",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:392"
      ]
    },
    "for splitting opportunities...": {
      "value": "for splitting opportunities...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:73"
      ]
    },
    "formatDuration formats time correctly": {
      "value": "formatDuration formats time correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:31"
      ]
    },
    "formatLatency formats latency correctly": {
      "value": "formatLatency formats latency correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:37"
      ]
    },
    "framework": {
      "value": "framework",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:32",
        "scripts/align_test_imports.py:74",
        "scripts/align_test_imports.py:75"
      ]
    },
    "fraud_detection": {
      "value": "fraud_detection",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:191"
      ]
    },
    "free": {
      "value": "free",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:107",
        "scripts/business_value_test_index.py:459"
      ]
    },
    "free|trial|basic|onboarding": {
      "value": "free|trial|basic|onboarding",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:107"
      ]
    },
    "from": {
      "value": "from",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:169",
        "scripts/apply_fast_test_decorators.py:67",
        "scripts/auto_fix_test_violations.py:585",
        "scripts/compliance/test_fixer.py:192",
        "scripts/comprehensive_test_fixer.py:265",
        "scripts/fix_all_test_issues.py:44",
        "scripts/fix_all_test_issues.py:46",
        "scripts/fix_all_test_issues.py:140",
        "scripts/fix_test_batch.py:185",
        "scripts/fix_test_batch.py:185"
      ]
    },
    "from .": {
      "value": "from .",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:579",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "from .env to test environment": {
      "value": "from .env to test environment",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:254"
      ]
    },
    "from app\\.": {
      "value": "from app\\.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:194"
      ]
    },
    "from conftest import": {
      "value": "from conftest import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:200"
      ]
    },
    "from netra_backend": {
      "value": "from netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:158",
        "scripts/fix_test_import_order.py:32"
      ]
    },
    "from netra_backend.": {
      "value": "from netra_backend.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:128",
        "scripts/align_test_imports.py:141"
      ]
    },
    "from netra_backend.app.": {
      "value": "from netra_backend.app.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:194"
      ]
    },
    "from netra_backend.app.agents.tool_dispatcher import ToolDispatcher": {
      "value": "from netra_backend.app.agents.tool_dispatcher import ToolDispatcher",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:53"
      ]
    },
    "from netra_backend.app.llm.llm_manager import LLMManager": {
      "value": "from netra_backend.app.llm.llm_manager import LLMManager",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:49",
        "scripts/compliance/test_fixer.py:333",
        "scripts/compliance/test_fixer.py:334"
      ]
    },
    "from netra_backend.app.models.session import Session as UserSession": {
      "value": "from netra_backend.app.models.session import Session as UserSession",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:65"
      ]
    },
    "from netra_backend.app.models.user import User\n# UserPlan not yet implemented - using placeholder\nUserPlan = type('UserPlan', (), {'FREE': 'free', 'EARLY': 'early', 'MID': 'mid', 'ENTERPRISE': 'enterprise'})": {
      "value": "from netra_backend.app.models.user import User\n# UserPlan not yet implemented - using placeholder\nUserPlan = type('UserPlan', (), {'FREE': 'free', 'EARLY': 'early', 'MID': 'mid', 'ENTERPRISE': 'enterprise'})",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:72"
      ]
    },
    "from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketConnectionManager": {
      "value": "from netra_backend.app.websocket.connection_manager import ConnectionManager as WebSocketConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:58"
      ]
    },
    "from netra_backend.app.websocket_core.manager import WebSocketManager as UnifiedWebSocketManager": {
      "value": "from netra_backend.app.websocket_core.manager import WebSocketManager as UnifiedWebSocketManager",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:57"
      ]
    },
    "from netra_backend.tests.conftest import": {
      "value": "from netra_backend.tests.conftest import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:200"
      ]
    },
    "from netra_backend.tests.fixtures": {
      "value": "from netra_backend.tests.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:198"
      ]
    },
    "from netra_backend.tests.helpers": {
      "value": "from netra_backend.tests.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:197"
      ]
    },
    "from netra_backend.tests.test_utils import setup_test_path": {
      "value": "from netra_backend.tests.test_utils import setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:23",
        "scripts/fix_test_utils_imports.py:80"
      ]
    },
    "from netra_backend\\.app\\.db\\.clickhouse import ClickHouseManager": {
      "value": "from netra_backend\\.app\\.db\\.clickhouse import ClickHouseManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:78"
      ]
    },
    "from netra_backend\\.app\\.db\\.models_agent import Agent, AgentRun": {
      "value": "from netra_backend\\.app\\.db\\.models_agent import Agent, AgentRun",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:132"
      ]
    },
    "from netra_backend\\.app\\.db\\.models_agent import AgentRun": {
      "value": "from netra_backend\\.app\\.db\\.models_agent import AgentRun",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:127"
      ]
    },
    "from netra_backend\\.app\\.models\\.conversion_event import ConversionEvent": {
      "value": "from netra_backend\\.app\\.models\\.conversion_event import ConversionEvent",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:85"
      ]
    },
    "from netra_backend\\.app\\.models\\.message import Message": {
      "value": "from netra_backend\\.app\\.models\\.message import Message",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:114"
      ]
    },
    "from netra_backend\\.app\\.models\\.session import UserSession": {
      "value": "from netra_backend\\.app\\.models\\.session import UserSession",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:64"
      ]
    },
    "from netra_backend\\.app\\.models\\.team import Team": {
      "value": "from netra_backend\\.app\\.models\\.team import Team",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:90"
      ]
    },
    "from netra_backend\\.app\\.models\\.thread import Thread": {
      "value": "from netra_backend\\.app\\.models\\.thread import Thread",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:109"
      ]
    },
    "from netra_backend\\.app\\.models\\.user import User, UserPlan": {
      "value": "from netra_backend\\.app\\.models\\.user import User, UserPlan",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:71"
      ]
    },
    "from netra_backend\\.app\\.websocket\\.connection_manager import WebSocketConnectionManager": {
      "value": "from netra_backend\\.app\\.websocket\\.connection_manager import WebSocketConnectionManager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:57"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.data": {
      "value": "from netra_backend\\.tests\\.e2e\\.data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:45"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.fixtures": {
      "value": "from netra_backend\\.tests\\.e2e\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:44"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.helpers": {
      "value": "from netra_backend\\.tests\\.e2e\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:43"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.infrastructure": {
      "value": "from netra_backend\\.tests\\.e2e\\.infrastructure",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:47"
      ]
    },
    "from netra_backend\\.tests\\.e2e\\.validators": {
      "value": "from netra_backend\\.tests\\.e2e\\.validators",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:46"
      ]
    },
    "from netra_backend\\.tests\\.integration\\.database_test_fixtures import.*": {
      "value": "from netra_backend\\.tests\\.integration\\.database_test_fixtures import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:97"
      ]
    },
    "from netra_backend\\.tests\\.test_utils": {
      "value": "from netra_backend\\.tests\\.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:50"
      ]
    },
    "from netra_backend\\.tests\\.test_utils import setup_test_path\\n": {
      "value": "from netra_backend\\.tests\\.test_utils import setup_test_path\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:34"
      ]
    },
    "from netra_backend\\.tests\\.user_flow_base import.*": {
      "value": "from netra_backend\\.tests\\.user_flow_base import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:102"
      ]
    },
    "from netra_backend\\.tests\\.user_journey_data import.*": {
      "value": "from netra_backend\\.tests\\.user_journey_data import.*",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:119"
      ]
    },
    "from pathlib import Path": {
      "value": "from pathlib import Path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:178"
      ]
    },
    "from protected endpoint": {
      "value": "from protected endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:71"
      ]
    },
    "from selenium import webdriver\ndriver = webdriver.Chrome()\ndriver.get('https://app.staging.netrasystems.ai')\n# Add cookies from browser_session.cookies\nfor cookie in credentials['accounts']['browser_session']['cookies']:\n    driver.add_cookie(cookie)\ndriver.refresh()\n# Now logged in": {
      "value": "from selenium import webdriver\ndriver = webdriver.Chrome()\ndriver.get('https://app.staging.netrasystems.ai')\n# Add cookies from browser_session.cookies\nfor cookie in credentials['accounts']['browser_session']['cookies']:\n    driver.add_cookie(cookie)\ndriver.refresh()\n# Now logged in",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:260"
      ]
    },
    "from shared.cors_config_builder import get_fastapi_cors_config": {
      "value": "from shared.cors_config_builder import get_fastapi_cors_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:147",
        "scripts/test_cors_ssot_compliance.py:148"
      ]
    },
    "from shared.cors_config_builder import get_websocket_cors_origins": {
      "value": "from shared.cors_config_builder import get_websocket_cors_origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:149"
      ]
    },
    "from test_framework.\\1 import": {
      "value": "from test_framework.\\1 import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:192"
      ]
    },
    "from test_framework.performance_helpers import": {
      "value": "from test_framework.performance_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:59"
      ]
    },
    "from test_framework.performance_helpers import fast_test\nimport time\\n\\1# time.sleep": {
      "value": "from test_framework.performance_helpers import fast_test\nimport time\\n\\1# time.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:183"
      ]
    },
    "from test_framework.performance_helpers import fast_test, timeout_override": {
      "value": "from test_framework.performance_helpers import fast_test, timeout_override",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:73"
      ]
    },
    "from test_framework\\.(\\w+) import": {
      "value": "from test_framework\\.(\\w+) import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:192"
      ]
    },
    "from tests.e2e.account_deletion_flow_manager": {
      "value": "from tests.e2e.account_deletion_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:59"
      ]
    },
    "from tests.e2e.agent_conversation_helpers": {
      "value": "from tests.e2e.agent_conversation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:60"
      ]
    },
    "from tests.e2e.auth_flow_testers": {
      "value": "from tests.e2e.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:56"
      ]
    },
    "from tests.e2e.config": {
      "value": "from tests.e2e.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:55"
      ]
    },
    "from tests.e2e.config import": {
      "value": "from tests.e2e.config import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:93"
      ]
    },
    "from tests.e2e.data": {
      "value": "from tests.e2e.data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:45"
      ]
    },
    "from tests.e2e.fixtures": {
      "value": "from tests.e2e.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:40",
        "scripts/fix_e2e_test_imports.py:44"
      ]
    },
    "from tests.e2e.fixtures.core.thread_test_fixtures_core": {
      "value": "from tests.e2e.fixtures.core.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:65",
        "scripts/fix_e2e_test_imports.py:66"
      ]
    },
    "from tests.e2e.fixtures.high_volume_data": {
      "value": "from tests.e2e.fixtures.high_volume_data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:69"
      ]
    },
    "from tests.e2e.helpers": {
      "value": "from tests.e2e.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:39",
        "scripts/fix_e2e_test_imports.py:43"
      ]
    },
    "from tests.e2e.helpers.": {
      "value": "from tests.e2e.helpers.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:75"
      ]
    },
    "from tests.e2e.helpers.auth.oauth_journey_helpers": {
      "value": "from tests.e2e.helpers.auth.oauth_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:102"
      ]
    },
    "from tests.e2e.helpers.chat_helpers": {
      "value": "from tests.e2e.helpers.chat_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:103"
      ]
    },
    "from tests.e2e.helpers.core.chat_helpers": {
      "value": "from tests.e2e.helpers.core.chat_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:103"
      ]
    },
    "from tests.e2e.helpers.core.unified_flow_helpers": {
      "value": "from tests.e2e.helpers.core.unified_flow_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:104"
      ]
    },
    "from tests.e2e.helpers.database.database_sync_helpers": {
      "value": "from tests.e2e.helpers.database.database_sync_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:106"
      ]
    },
    "from tests.e2e.helpers.database_sync_helpers": {
      "value": "from tests.e2e.helpers.database_sync_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:106"
      ]
    },
    "from tests.e2e.helpers.journey.journey_validation_helpers": {
      "value": "from tests.e2e.helpers.journey.journey_validation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:101"
      ]
    },
    "from tests.e2e.helpers.journey.new_user_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.new_user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:99"
      ]
    },
    "from tests.e2e.helpers.journey.real_service_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.real_service_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:100"
      ]
    },
    "from tests.e2e.helpers.journey.user_journey_helpers": {
      "value": "from tests.e2e.helpers.journey.user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:98"
      ]
    },
    "from tests.e2e.helpers.journey_validation_helpers": {
      "value": "from tests.e2e.helpers.journey_validation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:101"
      ]
    },
    "from tests.e2e.helpers.new_user_journey_helpers": {
      "value": "from tests.e2e.helpers.new_user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:99"
      ]
    },
    "from tests.e2e.helpers.oauth_journey_helpers": {
      "value": "from tests.e2e.helpers.oauth_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:102"
      ]
    },
    "from tests.e2e.helpers.real_service_journey_helpers": {
      "value": "from tests.e2e.helpers.real_service_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:100"
      ]
    },
    "from tests.e2e.helpers.unified_flow_helpers": {
      "value": "from tests.e2e.helpers.unified_flow_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:104"
      ]
    },
    "from tests.e2e.helpers.user_journey_helpers": {
      "value": "from tests.e2e.helpers.user_journey_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:98"
      ]
    },
    "from tests.e2e.helpers.websocket.websocket_test_helpers": {
      "value": "from tests.e2e.helpers.websocket.websocket_test_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:105"
      ]
    },
    "from tests.e2e.helpers.websocket_test_helpers": {
      "value": "from tests.e2e.helpers.websocket_test_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:105"
      ]
    },
    "from tests.e2e.infrastructure": {
      "value": "from tests.e2e.infrastructure",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:47"
      ]
    },
    "from tests.e2e.integration.auth_flow_manager": {
      "value": "from tests.e2e.integration.auth_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:61"
      ]
    },
    "from tests.e2e.jwt_token_helpers": {
      "value": "from tests.e2e.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:53"
      ]
    },
    "from tests.e2e.jwt_token_helpers import": {
      "value": "from tests.e2e.jwt_token_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:91"
      ]
    },
    "from tests.e2e.oauth_test_providers": {
      "value": "from tests.e2e.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:54"
      ]
    },
    "from tests.e2e.oauth_test_providers import": {
      "value": "from tests.e2e.oauth_test_providers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:92"
      ]
    },
    "from tests.e2e.onboarding_flow_executor": {
      "value": "from tests.e2e.onboarding_flow_executor",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:62"
      ]
    },
    "from tests.e2e.test_helpers.performance_base": {
      "value": "from tests.e2e.test_helpers.performance_base",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:72"
      ]
    },
    "from tests.e2e.validators": {
      "value": "from tests.e2e.validators",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:46"
      ]
    },
    "from tests.test_utils": {
      "value": "from tests.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:50"
      ]
    },
    "from tests\\.config": {
      "value": "from tests\\.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:55"
      ]
    },
    "from tests\\.config import": {
      "value": "from tests\\.config import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:93"
      ]
    },
    "from tests\\.e2e\\.auth_flow_testers": {
      "value": "from tests\\.e2e\\.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:56"
      ]
    },
    "from tests\\.e2e\\.high_volume_data": {
      "value": "from tests\\.e2e\\.high_volume_data",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:69"
      ]
    },
    "from tests\\.e2e\\.integration\\.account_deletion_flow_manager": {
      "value": "from tests\\.e2e\\.integration\\.account_deletion_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:59"
      ]
    },
    "from tests\\.e2e\\.integration\\.agent_conversation_helpers": {
      "value": "from tests\\.e2e\\.integration\\.agent_conversation_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:60"
      ]
    },
    "from tests\\.e2e\\.integration\\.auth_flow_manager": {
      "value": "from tests\\.e2e\\.integration\\.auth_flow_manager",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:61"
      ]
    },
    "from tests\\.e2e\\.integration\\.onboarding_flow_executor": {
      "value": "from tests\\.e2e\\.integration\\.onboarding_flow_executor",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:62"
      ]
    },
    "from tests\\.e2e\\.integration\\.thread_test_fixtures_core": {
      "value": "from tests\\.e2e\\.integration\\.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:65"
      ]
    },
    "from tests\\.e2e\\.performance_base": {
      "value": "from tests\\.e2e\\.performance_base",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:72"
      ]
    },
    "from tests\\.e2e\\.thread_test_fixtures_core": {
      "value": "from tests\\.e2e\\.thread_test_fixtures_core",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:66"
      ]
    },
    "from tests\\.fixtures": {
      "value": "from tests\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:198"
      ]
    },
    "from tests\\.helpers": {
      "value": "from tests\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:197"
      ]
    },
    "from tests\\.jwt_token_helpers": {
      "value": "from tests\\.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:53"
      ]
    },
    "from tests\\.jwt_token_helpers import": {
      "value": "from tests\\.jwt_token_helpers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:91"
      ]
    },
    "from tests\\.oauth_test_providers": {
      "value": "from tests\\.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:54"
      ]
    },
    "from tests\\.oauth_test_providers import": {
      "value": "from tests\\.oauth_test_providers import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:92"
      ]
    },
    "from tests\\.unified\\.e2e\\.fixtures": {
      "value": "from tests\\.unified\\.e2e\\.fixtures",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:40"
      ]
    },
    "from tests\\.unified\\.e2e\\.helpers": {
      "value": "from tests\\.unified\\.e2e\\.helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:39"
      ]
    },
    "from typing import": {
      "value": "from typing import",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:229"
      ]
    },
    "from typing import Dict, Any, List, Optional": {
      "value": "from typing import Dict, Any, List, Optional",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:203"
      ]
    },
    "from typing import List, Dict, Tuple, Optional, Any": {
      "value": "from typing import List, Dict, Tuple, Optional, Any",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:230"
      ]
    },
    "from unittest.mock import": {
      "value": "from unittest.mock import",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:69",
        "scripts/automated_test_fix_loop.py:78",
        "scripts/fix_test_import_errors.py:235",
        "scripts/simple_test_fix_loop.py:42",
        "scripts/simple_test_fix_loop.py:45"
      ]
    },
    "from unittest.mock import AsyncMock, MagicMock, Mock, patch": {
      "value": "from unittest.mock import AsyncMock, MagicMock, Mock, patch",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:24",
        "scripts/simple_test_fix_loop.py:46"
      ]
    },
    "from unittest.mock import Mock, MagicMock, patch": {
      "value": "from unittest.mock import Mock, MagicMock, patch",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:236"
      ]
    },
    "from unittest\\.mock import.*MagicMock.*MagicMock": {
      "value": "from unittest\\.mock import.*MagicMock.*MagicMock",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:23"
      ]
    },
    "frontend": {
      "value": "frontend",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:28",
        "scripts/align_test_imports.py:33",
        "scripts/align_test_imports.py:33",
        "scripts/auto_fix_test_violations.py:94",
        "scripts/autonomous_review/test_reviewer.py:188",
        "scripts/business_value_test_index.py:193",
        "scripts/business_value_test_index.py:402",
        "scripts/business_value_test_index.py:403",
        "scripts/business_value_test_index.py:561",
        "scripts/check_test_compliance.py:200"
      ]
    },
    "frontend-user": {
      "value": "frontend-user",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:43",
        "scripts/test_jwt_fix.py:20"
      ]
    },
    "frontend/.env.local": {
      "value": "frontend/.env.local",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:163"
      ]
    },
    "frontend/__tests__": {
      "value": "frontend/__tests__",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:44"
      ]
    },
    "frontend/__tests__/system/startup.test.tsx": {
      "value": "frontend/__tests__/system/startup.test.tsx",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:113"
      ]
    },
    "frontend/components/chat": {
      "value": "frontend/components/chat",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:25",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:23"
      ]
    },
    "frontend/tests": {
      "value": "frontend/tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:63"
      ]
    },
    "frontend/tests/conftest.py": {
      "value": "frontend/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:17"
      ]
    },
    "frontend@netra.com": {
      "value": "frontend@netra.com",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:44",
        "scripts/test_jwt_fix.py:21"
      ]
    },
    "frontend_coverage": {
      "value": "frontend_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:135"
      ]
    },
    "full": {
      "value": "full",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:208"
      ]
    },
    "full_": {
      "value": "full_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:197"
      ]
    },
    "full_access": {
      "value": "full_access",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:109"
      ]
    },
    "full_name": {
      "value": "full_name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:39"
      ]
    },
    "full_path": {
      "value": "full_path",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:134"
      ]
    },
    "function": {
      "value": "function",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:58",
        "scripts/check_test_compliance.py:177",
        "scripts/comprehensive_test_fixer.py:215",
        "scripts/comprehensive_test_fixer.py:401",
        "scripts/optimize_test_performance.py:257",
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "function\\s+mock\\w*\\s*\\(": {
      "value": "function\\s+mock\\w*\\s*\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:63"
      ]
    },
    "function_name": {
      "value": "function_name",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "function_refactors": {
      "value": "function_refactors",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:206",
        "scripts/compliance/real_test_linter.py:209",
        "scripts/compliance/real_test_linter.py:211",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/test_fixer.py:351",
        "scripts/compliance/test_fixer.py:365"
      ]
    },
    "function_size": {
      "value": "function_size",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:234",
        "scripts/auto_fix_test_violations.py:246",
        "scripts/auto_fix_test_violations.py:271",
        "scripts/auto_fix_test_violations.py:291",
        "scripts/auto_fix_test_violations.py:304",
        "scripts/auto_fix_test_violations.py:810",
        "scripts/compliance/project_test_validator.py:250",
        "scripts/compliance/real_test_linter.py:174",
        "scripts/compliance/real_test_requirements_enforcer.py:328",
        "scripts/compliance/real_test_requirements_enforcer.py:516"
      ]
    },
    "function_to_fixture": {
      "value": "function_to_fixture",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:330",
        "scripts/compliance/test_refactor_helper.py:346"
      ]
    },
    "function_to_function": {
      "value": "function_to_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:329",
        "scripts/compliance/test_refactor_helper.py:339",
        "scripts/compliance/test_refactor_helper.py:647"
      ]
    },
    "functionality tests.\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom typing import Dict, List, Any, Optional": {
      "value": "functionality tests.\n\"\"\"\n\nimport pytest\nimport asyncio\nfrom typing import Dict, List, Any, Optional",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:208"
      ]
    },
    "functions": {
      "value": "functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283",
        "scripts/autonomous_review/test_generator.py:57",
        "scripts/autonomous_review/test_reviewer.py:98",
        "scripts/autonomous_review/test_reviewer.py:98",
        "scripts/compliance/demo_test_size_enforcement.py:89",
        "scripts/compliance/test_refactor_helper.py:101",
        "scripts/compliance/test_refactor_helper.py:424",
        "scripts/compliance/test_refactor_helper.py:434",
        "scripts/compliance/test_refactor_helper.py:464",
        "scripts/compliance/test_refactor_helper.py:474"
      ]
    },
    "functions)": {
      "value": "functions)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:94"
      ]
    },
    "functions:": {
      "value": "functions:",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:124"
      ]
    },
    "functions_exceeding_limit": {
      "value": "functions_exceeding_limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:81",
        "scripts/compliance/test_size_validator.py:106",
        "scripts/compliance/test_size_validator.py:422",
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "functions_optimized": {
      "value": "functions_optimized",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:619",
        "scripts/auto_fix_test_sizes.py:670",
        "scripts/auto_fix_test_sizes.py:695",
        "scripts/auto_fix_test_sizes.py:708",
        "scripts/auto_fix_test_sizes.py:750"
      ]
    },
    "functions_over_8": {
      "value": "functions_over_8",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:91",
        "scripts/check_test_compliance.py:117",
        "scripts/check_test_compliance.py:134",
        "scripts/check_test_compliance.py:148",
        "scripts/check_test_compliance.py:172",
        "scripts/check_test_compliance.py:173",
        "scripts/check_test_compliance.py:174",
        "scripts/check_test_compliance.py:178",
        "scripts/check_test_compliance.py:179"
      ]
    },
    "functions_to_implement.txt": {
      "value": "functions_to_implement.txt",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:207",
        "scripts/fix_test_batch.py:390"
      ]
    },
    "gamma": {
      "value": "gamma",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:134",
        "netra_backend/app/services/realistic_test_data/models.py:55"
      ]
    },
    "gc_count": {
      "value": "gc_count",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:148"
      ]
    },
    "gcloud secrets versions add postgres-db-staging --data-file=<new_db_name>": {
      "value": "gcloud secrets versions add postgres-db-staging --data-file=<new_db_name>",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:126"
      ]
    },
    "gemini": {
      "value": "gemini",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "gemini-1.5-flash": {
      "value": "gemini-1.5-flash",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "gemini-2.5-flash": {
      "value": "gemini-2.5-flash",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:216"
      ]
    },
    "gemini-2.5-pro": {
      "value": "gemini-2.5-pro",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:37"
      ]
    },
    "gemini-api-key": {
      "value": "gemini-api-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:143"
      ]
    },
    "gemini-pro": {
      "value": "gemini-pro",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:63"
      ]
    },
    "gemini\\.": {
      "value": "gemini\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35"
      ]
    },
    "generated_at": {
      "value": "generated_at",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:618"
      ]
    },
    "generated_files": {
      "value": "generated_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:590",
        "scripts/compliance/test_refactor_helper.py:601"
      ]
    },
    "getConnectionQuality categorizes latency correctly": {
      "value": "getConnectionQuality categorizes latency correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:43"
      ]
    },
    "getConnectionState converts WebSocket status correctly": {
      "value": "getConnectionState converts WebSocket status correctly",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:13"
      ]
    },
    "getStatusInfo returns correct display info": {
      "value": "getStatusInfo returns correct display info",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:21"
      ]
    },
    "get_all": {
      "value": "get_all",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:80"
      ]
    },
    "get_auth_service_url": {
      "value": "get_auth_service_url",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:319",
        "auth_service/tests/test_auth_port_configuration.py:404"
      ]
    },
    "get_connection": {
      "value": "get_connection",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:49"
      ]
    },
    "get_database_url": {
      "value": "get_database_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:43"
      ]
    },
    "git": {
      "value": "git",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:228",
        "scripts/standardize_l3_test_names.py:133"
      ]
    },
    "git add -A && git commit -m \"feat: add pytest markers to all test files for proper categorization\"": {
      "value": "git add -A && git commit -m \"feat: add pytest markers to all test files for proper categorization\"",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:216"
      ]
    },
    "github": {
      "value": "github",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:73",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/test_staging_login_automated.py:251",
        "scripts/test_staging_login_automated.py:270",
        "scripts/test_staging_login_automated.py:272"
      ]
    },
    "github.com": {
      "value": "github.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:270"
      ]
    },
    "github_access_": {
      "value": "github_access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:218"
      ]
    },
    "good": {
      "value": "good",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:45"
      ]
    },
    "google": {
      "value": "google",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:169",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:387",
        "auth_service/tests/integration/test_refresh_integration.py:53",
        "auth_service/tests/test_auth_comprehensive.py:72",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/setup_staging_test_account.py:44",
        "scripts/test_staging_login_automated.py:251",
        "scripts/test_staging_login_automated.py:264",
        "scripts/test_staging_login_automated.py:266"
      ]
    },
    "google-12345": {
      "value": "google-12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:269"
      ]
    },
    "google_access_": {
      "value": "google_access_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:193"
      ]
    },
    "google_refresh_": {
      "value": "google_refresh_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:194"
      ]
    },
    "google_user_123": {
      "value": "google_user_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:234"
      ]
    },
    "googletagmanager\\.com/gtm\\.js\\?id=GTM-[A-Z0-9]+": {
      "value": "googletagmanager\\.com/gtm\\.js\\?id=GTM-[A-Z0-9]+",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:39"
      ]
    },
    "googletagmanager\\.com/ns\\.html\\?id=GTM-[A-Z0-9]+": {
      "value": "googletagmanager\\.com/ns\\.html\\?id=GTM-[A-Z0-9]+",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:44"
      ]
    },
    "gpt-3.5-turbo": {
      "value": "gpt-3.5-turbo",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:33",
        "scripts/validate_llm_test_models.py:32"
      ]
    },
    "gpt-4": {
      "value": "gpt-4",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:34",
        "scripts/validate_llm_test_models.py:31"
      ]
    },
    "graceful_degradation": {
      "value": "graceful_degradation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:46"
      ]
    },
    "graceful_degradation      → test_10_graceful_degradation_optional_services": {
      "value": "graceful_degradation      → test_10_graceful_degradation_optional_services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:396"
      ]
    },
    "gradual_increase": {
      "value": "gradual_increase",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:90"
      ]
    },
    "grant_method": {
      "value": "grant_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:214"
      ]
    },
    "granted_at": {
      "value": "granted_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:60"
      ]
    },
    "granted_by": {
      "value": "granted_by",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:213",
        "auth_service/tests/factories/permission_factory.py:61"
      ]
    },
    "green": {
      "value": "green",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:156"
      ]
    },
    "grid": {
      "value": "grid",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:398"
      ]
    },
    "gtm_config_endpoint": {
      "value": "gtm_config_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:78"
      ]
    },
    "gtm_found": {
      "value": "gtm_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:16",
        "scripts/test_gtm_loading.py:36",
        "scripts/test_gtm_loading.py:59",
        "scripts/test_gtm_loading.py:119",
        "scripts/test_gtm_loading.py:144",
        "scripts/test_gtm_loading.py:157"
      ]
    },
    "handler": {
      "value": "handler",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:369"
      ]
    },
    "handlers": {
      "value": "handlers",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:370"
      ]
    },
    "hardcoded in _initialize_project_id()": {
      "value": "hardcoded in _initialize_project_id()",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:274"
      ]
    },
    "hardcoded_test_data": {
      "value": "hardcoded_test_data",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:55",
        "scripts/remove_test_stubs.py:165",
        "scripts/remove_test_stubs.py:174"
      ]
    },
    "hardcoded_wait": {
      "value": "hardcoded_wait",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:165",
        "scripts/autonomous_review/test_reviewer.py:179",
        "scripts/autonomous_review/test_reviewer.py:181"
      ]
    },
    "harness.py": {
      "value": "harness.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113"
      ]
    },
    "has": {
      "value": "has",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610",
        "scripts/optimize_test_performance.py:129",
        "scripts/optimize_test_performance.py:134"
      ]
    },
    "has failing tests!": {
      "value": "has failing tests!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:838"
      ]
    },
    "has no end-to-end tests": {
      "value": "has no end-to-end tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:671"
      ]
    },
    "has only": {
      "value": "has only",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:663"
      ]
    },
    "has_cloud_sql": {
      "value": "has_cloud_sql",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:80"
      ]
    },
    "has_docstring": {
      "value": "has_docstring",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:314"
      ]
    },
    "has_return": {
      "value": "has_return",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:156"
      ]
    },
    "has_ssl": {
      "value": "has_ssl",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_db_direct.py:82"
      ]
    },
    "hashed_password": {
      "value": "hashed_password",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:62",
        "auth_service/tests/factories/user_factory.py:83"
      ]
    },
    "header": {
      "value": "header",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:123"
      ]
    },
    "headers": {
      "value": "headers",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:237",
        "scripts/debug_cors_test.py:24",
        "scripts/debug_cors_test.py:38",
        "scripts/debug_cors_test.py:78",
        "scripts/debug_cors_test.py:96",
        "scripts/test_cors.py:107",
        "scripts/test_websocket_connection.py:27",
        "scripts/test_websocket_connection.py:33",
        "scripts/test_websocket_connection.py:41",
        "scripts/test_websocket_connection.py:52"
      ]
    },
    "headers_allowed": {
      "value": "headers_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:202",
        "scripts/test_cors.py:235"
      ]
    },
    "health": {
      "value": "health",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:168",
        "scripts/test_cors.py:290",
        "scripts/test_staging_login_automated.py:316",
        "scripts/test_staging_login_automated.py:337",
        "scripts/test_staging_login_automated.py:424"
      ]
    },
    "health_check": {
      "value": "health_check",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:77",
        "scripts/test_gtm_loading.py:85",
        "scripts/test_gtm_loading.py:130",
        "scripts/test_staging_login_automated.py:185"
      ]
    },
    "health_endpoint": {
      "value": "health_endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:39",
        "scripts/test_websocket_dev_mode.py:129"
      ]
    },
    "health_status": {
      "value": "health_status",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:126"
      ]
    },
    "healthcare": {
      "value": "healthcare",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:256"
      ]
    },
    "healthy": {
      "value": "healthy",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:45",
        "netra_backend/app/agents/test_agent_initialization.py:161",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:229",
        "auth_service/tests/test_auth_comprehensive.py:295",
        "scripts/setup_test_environment.py:76",
        "scripts/setup_test_environment.py:273",
        "scripts/team_updates_test_analyzer.py:94",
        "scripts/test_oauth_local.py:108",
        "scripts/test_oauth_local.py:115",
        "scripts/test_oauth_local.py:123"
      ]
    },
    "heap size": {
      "value": "heap size",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91"
      ]
    },
    "help_display": {
      "value": "help_display",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:79",
        "scripts/test_verify_workflow_status_corrected.py:86"
      ]
    },
    "helper": {
      "value": "helper",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:447",
        "scripts/auto_fix_test_violations.py:509",
        "scripts/compliance/test_refactor_helper.py:207",
        "scripts/compliance/test_refactor_helper.py:429",
        "scripts/compliance/test_refactor_helper.py:563"
      ]
    },
    "helpers)": {
      "value": "helpers)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:383"
      ]
    },
    "helpers.py": {
      "value": "helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:112",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:69"
      ]
    },
    "high": {
      "value": "high",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:335",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:490",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:670",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760",
        "scripts/compliance/fake_test_scanner.py:159",
        "scripts/compliance/fake_test_scanner.py:200",
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "high failure rate tests": {
      "value": "high failure rate tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "high_error_rate": {
      "value": "high_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:356"
      ]
    },
    "high_failure_rate": {
      "value": "high_failure_rate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:297",
        "scripts/compliance/fake_test_scanner.py:332",
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "high_latency": {
      "value": "high_latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:350"
      ]
    },
    "high_load": {
      "value": "high_load",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:24",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:163"
      ]
    },
    "high_null_fields": {
      "value": "high_null_fields",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:247",
        "scripts/test_data_validator_backup.py:248"
      ]
    },
    "high_risk": {
      "value": "high_risk",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:272"
      ]
    },
    "high_value_test_count": {
      "value": "high_value_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:633"
      ]
    },
    "highlight": {
      "value": "highlight",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:92"
      ]
    },
    "highly similar test pairs. Consider refactoring these using parametrized tests or test utilities.": {
      "value": "highly similar test pairs. Consider refactoring these using parametrized tests or test utilities.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "highly_similar": {
      "value": "highly_similar",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:66",
        "scripts/analyze_test_overlap.py:325",
        "scripts/analyze_test_overlap.py:358",
        "scripts/analyze_test_overlap.py:352",
        "scripts/analyze_test_overlap.py:381",
        "scripts/analyze_test_overlap.py:382",
        "scripts/analyze_test_overlap.py:412",
        "scripts/analyze_test_overlap.py:412",
        "scripts/analyze_test_overlap.py:449",
        "scripts/analyze_test_overlap.py:451"
      ]
    },
    "history": {
      "value": "history",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:247"
      ]
    },
    "hit_rate": {
      "value": "hit_rate",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:175"
      ]
    },
    "hits": {
      "value": "hits",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:58",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:64",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:173"
      ]
    },
    "holiday_season": {
      "value": "holiday_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:29",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:142"
      ]
    },
    "hooks": {
      "value": "hooks",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:32"
      ]
    },
    "host": {
      "value": "host",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:55",
        "auth_service/test_staging_db_connection.py:92",
        "scripts/test_backend_port_binding.py:135",
        "scripts/test_redis_config_critical_failure.py:264",
        "scripts/test_redis_config_critical_failure.py:285",
        "scripts/test_ssl_certificates_staging.py:110",
        "scripts/test_ssl_certificates_staging.py:115",
        "scripts/test_ssl_certificates_staging.py:126"
      ]
    },
    "hour_of_day": {
      "value": "hour_of_day",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "html": {
      "value": "html",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:777",
        "scripts/real_service_test_metrics.py:115",
        "scripts/test_coverage_system.py:59"
      ]
    },
    "htmlcov": {
      "value": "htmlcov",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:133",
        "scripts/generate_test_audit.py:26",
        "scripts/remove_test_stubs.py:80"
      ]
    },
    "http": {
      "value": "http",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:308",
        "scripts/test_cors.py:324"
      ]
    },
    "http://": {
      "value": "http://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_cors.py:137",
        "scripts/test_cors.py:323",
        "scripts/test_cors.py:340"
      ]
    },
    "http://127.0.0.1:12345": {
      "value": "http://127.0.0.1:12345",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:36"
      ]
    },
    "http://127.0.0.1:3000": {
      "value": "http://127.0.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:51",
        "scripts/test_and_fix_cors.py:100",
        "scripts/test_and_fix_cors.py:107",
        "scripts/test_chat_errors.py:83",
        "scripts/test_cors.py:491",
        "scripts/test_cors_issue.py:17",
        "scripts/test_cors_issue.py:59",
        "scripts/test_cors_ssot_compliance.py:32",
        "scripts/test_websocket_cors_comprehensive.py:208",
        "scripts/test_websocket_middleware.py:96"
      ]
    },
    "http://127.0.0.1:3000/": {
      "value": "http://127.0.0.1:3000/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:18"
      ]
    },
    "http://127.0.0.1:3000/chat": {
      "value": "http://127.0.0.1:3000/chat",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:21"
      ]
    },
    "http://127.0.0.1:8000": {
      "value": "http://127.0.0.1:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:102",
        "scripts/test_cors_ssot_compliance.py:33"
      ]
    },
    "http://127.0.0.1:8000/api/threads": {
      "value": "http://127.0.0.1:8000/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:103",
        "scripts/test_and_fix_cors.py:107",
        "scripts/test_chat_errors.py:63",
        "scripts/test_chat_errors.py:82"
      ]
    },
    "http://127.0.0.1:8000/health": {
      "value": "http://127.0.0.1:8000/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:35"
      ]
    },
    "http://127.0.0.1:8000/test": {
      "value": "http://127.0.0.1:8000/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:91"
      ]
    },
    "http://127.0.0.1:8081/health": {
      "value": "http://127.0.0.1:8081/health",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:49"
      ]
    },
    "http://172.18.0.1:3000": {
      "value": "http://172.18.0.1:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:236"
      ]
    },
    "http://attacker.com/steal-tokens": {
      "value": "http://attacker.com/steal-tokens",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:100"
      ]
    },
    "http://backend:8000": {
      "value": "http://backend:8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:222"
      ]
    },
    "http://evil-site.com": {
      "value": "http://evil-site.com",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:53"
      ]
    },
    "http://frontend:3000": {
      "value": "http://frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:216",
        "scripts/test_websocket_simple.py:70"
      ]
    },
    "http://localhost": {
      "value": "http://localhost",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:21",
        "scripts/test_staging_env.py:209"
      ]
    },
    "http://localhost:": {
      "value": "http://localhost:",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:84",
        "auth_service/tests/test_auth_port_configuration.py:445",
        "scripts/test_coordination_fixes.py:306",
        "scripts/test_coordination_fixes.py:318",
        "scripts/test_frontend.py:256",
        "scripts/test_frontend.py:270"
      ]
    },
    "http://localhost:18001": {
      "value": "http://localhost:18001",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:209"
      ]
    },
    "http://localhost:3000": {
      "value": "http://localhost:3000",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:319",
        "scripts/debug_cors_test.py:48",
        "scripts/test_and_fix_cors.py:103",
        "scripts/test_and_fix_cors.py:106",
        "scripts/test_auth_integration.py:108",
        "scripts/test_backend.py:93",
        "scripts/test_cors.py:491",
        "scripts/test_cors.py:493",
        "scripts/test_cors_implementation.py:30",
        "scripts/test_cors_implementation.py:33"
      ]
    },
    "http://localhost:3000/": {
      "value": "http://localhost:3000/",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:39"
      ]
    },
    "http://localhost:3000/auth/callback": {
      "value": "http://localhost:3000/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:188",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:90"
      ]
    },
    "http://localhost:3001": {
      "value": "http://localhost:3001",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:49",
        "scripts/test_cors_ssot_compliance.py:29",
        "scripts/test_gtm_loading.py:99",
        "scripts/test_websocket_middleware.py:95"
      ]
    },
    "http://localhost:3002": {
      "value": "http://localhost:3002",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:40",
        "scripts/test_gtm_tracking.py:73"
      ]
    },
    "http://localhost:3002/chat": {
      "value": "http://localhost:3002/chat",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:51"
      ]
    },
    "http://localhost:5173": {
      "value": "http://localhost:5173",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:252"
      ]
    },
    "http://localhost:8000": {
      "value": "http://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:46",
        "scripts/debug_cors_test.py:50",
        "scripts/start_test_services.py:153",
        "scripts/test_auth_integration.py:21",
        "scripts/test_auth_integration.py:175",
        "scripts/test_cors.py:419",
        "scripts/test_cors_implementation.py:34",
        "scripts/test_cors_ssot_compliance.py:30",
        "scripts/test_cors_ssot_compliance.py:63",
        "scripts/test_cors_ssot_compliance.py:113"
      ]
    },
    "http://localhost:8000/api/threads": {
      "value": "http://localhost:8000/api/threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:100",
        "scripts/test_and_fix_cors.py:106",
        "scripts/test_cors_issue.py:57"
      ]
    },
    "http://localhost:8000/api/threads?limit=20&offset=0": {
      "value": "http://localhost:8000/api/threads?limit=20&offset=0",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_issue.py:15",
        "scripts/test_cors_issue.py:36"
      ]
    },
    "http://localhost:8000/health": {
      "value": "http://localhost:8000/health",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:117",
        "scripts/test_websocket_cors_comprehensive.py:139"
      ]
    },
    "http://localhost:8001": {
      "value": "http://localhost:8001",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:272",
        "auth_service/tests/test_auth_port_configuration.py:319",
        "auth_service/tests/test_auth_port_configuration.py:404"
      ]
    },
    "http://localhost:8080": {
      "value": "http://localhost:8080",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:63",
        "scripts/test_cors_ssot_compliance.py:31"
      ]
    },
    "http://localhost:8081": {
      "value": "http://localhost:8081",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:154",
        "scripts/test_auth_integration.py:20",
        "scripts/test_auth_integration.py:170",
        "scripts/test_oauth_local.py:42",
        "scripts/unified_test_runner.py:208"
      ]
    },
    "http://localhost:8081/health": {
      "value": "http://localhost:8081/health",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:123"
      ]
    },
    "http://localhost:8083": {
      "value": "http://localhost:8083",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:441"
      ]
    },
    "http://localhost:9999": {
      "value": "http://localhost:9999",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:35",
        "scripts/test_cors_ssot_compliance.py:70"
      ]
    },
    "http://malicious-site.com": {
      "value": "http://malicious-site.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:68",
        "scripts/test_cors_ssot_compliance.py:114",
        "scripts/test_websocket_dev_mode.py:156"
      ]
    },
    "http://netra-frontend:3000": {
      "value": "http://netra-frontend:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:228"
      ]
    },
    "http://netrasystems.ai": {
      "value": "http://netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:116"
      ]
    },
    "http://test": {
      "value": "http://test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:30"
      ]
    },
    "http://test.example.com:3000": {
      "value": "http://test.example.com:3000",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:260"
      ]
    },
    "httpOnly": {
      "value": "httpOnly",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:158"
      ]
    },
    "http_client": {
      "value": "http_client",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:57"
      ]
    },
    "https": {
      "value": "https",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:307",
        "scripts/test_cors.py:322"
      ]
    },
    "https://": {
      "value": "https://",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:237",
        "auth_service/tests/test_auth_comprehensive.py:548",
        "scripts/test_cors.py:137",
        "scripts/test_cors.py:321"
      ]
    },
    "https://accounts.google.com": {
      "value": "https://accounts.google.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:201",
        "scripts/setup_staging_test_account.py:66"
      ]
    },
    "https://api.netra.systems": {
      "value": "https://api.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:155"
      ]
    },
    "https://api.netrasystems.ai": {
      "value": "https://api.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:106"
      ]
    },
    "https://api.staging.netrasystems.ai": {
      "value": "https://api.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:34",
        "scripts/test_cors_ssot_compliance.py:61",
        "scripts/test_staging.py:24",
        "scripts/test_staging.py:28",
        "scripts/test_staging_deployment.py:20",
        "scripts/test_staging_login_automated.py:38"
      ]
    },
    "https://app.netra.ai.evil.com/callback": {
      "value": "https://app.netra.ai.evil.com/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:103"
      ]
    },
    "https://app.netra.ai/auth/callback": {
      "value": "https://app.netra.ai/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:186",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:88"
      ]
    },
    "https://app.netrasystems.ai": {
      "value": "https://app.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:495",
        "scripts/test_cors_ssot_compliance.py:105"
      ]
    },
    "https://app.staging.netra.ai/auth/callback": {
      "value": "https://app.staging.netra.ai/auth/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:187",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:89"
      ]
    },
    "https://app.staging.netrasystems.ai": {
      "value": "https://app.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/debug_cors_test.py:52",
        "scripts/test_cors.py:493",
        "scripts/test_cors_implementation.py:35",
        "scripts/test_cors_ssot_compliance.py:59",
        "scripts/test_staging.py:23",
        "scripts/test_staging.py:26",
        "scripts/test_staging.py:27",
        "scripts/test_staging.py:30",
        "scripts/test_staging_deployment.py:22",
        "scripts/test_staging_login_automated.py:37"
      ]
    },
    "https://auth.netrasystems.ai": {
      "value": "https://auth.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:107"
      ]
    },
    "https://auth.staging.netrasystems.ai": {
      "value": "https://auth.staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:35",
        "scripts/test_cors_ssot_compliance.py:60",
        "scripts/test_staging.py:25",
        "scripts/test_staging.py:29",
        "scripts/test_staging_auth_e2e.py:23",
        "scripts/test_staging_deployment.py:21",
        "scripts/test_staging_login_automated.py:39"
      ]
    },
    "https://avatars.githubusercontent.com/": {
      "value": "https://avatars.githubusercontent.com/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:226"
      ]
    },
    "https://dev.netra.systems": {
      "value": "https://dev.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:139"
      ]
    },
    "https://evil.com/callback": {
      "value": "https://evil.com/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:99"
      ]
    },
    "https://example.com/avatar.jpg": {
      "value": "https://example.com/avatar.jpg",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:238"
      ]
    },
    "https://example.com/avatar/": {
      "value": "https://example.com/avatar/",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87"
      ]
    },
    "https://frontend-fzr7uxqpxq-uc.a.run.app": {
      "value": "https://frontend-fzr7uxqpxq-uc.a.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:100"
      ]
    },
    "https://lh3.googleusercontent.com/a/default-user": {
      "value": "https://lh3.googleusercontent.com/a/default-user",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:61"
      ]
    },
    "https://malicious.com/callback": {
      "value": "https://malicious.com/callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:189"
      ]
    },
    "https://netra-auth-service-701982941522.us-central1.run.app": {
      "value": "https://netra-auth-service-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:20",
        "scripts/test_staging_refresh_format.py:15"
      ]
    },
    "https://netra-auth-service-701982941522.us-central1.run.app/auth/validate": {
      "value": "https://netra-auth-service-701982941522.us-central1.run.app/auth/validate",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:60",
        "scripts/test_staging_jwt_validation.py:113"
      ]
    },
    "https://netra-backend-staging-701982941522.us-central1.run.app": {
      "value": "https://netra-backend-staging-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:19"
      ]
    },
    "https://netra-backend-staging-701982941522.us-central1.run.app/api/threads?limit=20&offset=0": {
      "value": "https://netra-backend-staging-701982941522.us-central1.run.app/api/threads?limit=20&offset=0",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_jwt_validation.py:85"
      ]
    },
    "https://netra-frontend-701982941522.us-central1.run.app": {
      "value": "https://netra-frontend-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:36"
      ]
    },
    "https://netra-frontend-staging-701982941522.us-central1.run.app": {
      "value": "https://netra-frontend-staging-701982941522.us-central1.run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:18"
      ]
    },
    "https://netrasystems.ai": {
      "value": "https://netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:103"
      ]
    },
    "https://random-domain.com": {
      "value": "https://random-domain.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:69",
        "scripts/test_cors_ssot_compliance.py:115"
      ]
    },
    "https://staging.netra.systems": {
      "value": "https://staging.netra.systems",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:147"
      ]
    },
    "https://ui-avatars.com/api/?name=Test+Agent": {
      "value": "https://ui-avatars.com/api/?name=Test+Agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:56"
      ]
    },
    "https://www.netrasystems.ai": {
      "value": "https://www.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:104"
      ]
    },
    "httpx": {
      "value": "httpx",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "httpx.AsyncClient": {
      "value": "httpx.AsyncClient",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:252"
      ]
    },
    "httpx.AsyncClient.get": {
      "value": "httpx.AsyncClient.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:243",
        "auth_service/tests/test_oauth_state_validation.py:122"
      ]
    },
    "httpx.AsyncClient.post": {
      "value": "httpx.AsyncClient.post",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:132",
        "auth_service/tests/auth-service-down-critical-scenarios.py:319",
        "auth_service/tests/auth-service-down-critical-scenarios.py:396",
        "auth_service/tests/test_auth_comprehensive.py:242",
        "auth_service/tests/test_oauth_state_validation.py:111"
      ]
    },
    "httpx\\.(?:get|post|put|delete)": {
      "value": "httpx\\.(?:get|post|put|delete)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:33"
      ]
    },
    "hybrid": {
      "value": "hybrid",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1041",
        "scripts/unified_test_runner.py:1042"
      ]
    },
    "iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=": {
      "value": "iZAG-Kz661gRuJXEGzxgghUFnFRamgDrjDXZE6HdJkw=",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:240"
      ]
    },
    "iat": {
      "value": "iat",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:40",
        "auth_service/tests/factories/token_factory.py:134",
        "auth_service/tests/integration/test_refresh_integration.py:232",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:32",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:44",
        "auth_service/tests/unit/test_refresh_endpoint.py:173",
        "auth_service/tests/unit/test_refresh_endpoint.py:206",
        "scripts/setup_staging_test_account.py:63",
        "scripts/setup_staging_test_account.py:110"
      ]
    },
    "id": {
      "value": "id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:166",
        "auth_service/tests/factories/audit_factory.py:50",
        "auth_service/tests/factories/session_factory.py:33",
        "auth_service/tests/factories/token_factory.py:222",
        "auth_service/tests/factories/user_factory.py:37",
        "auth_service/tests/factories/user_factory.py:87",
        "auth_service/tests/test_auth_comprehensive.py:234",
        "auth_service/tests/test_oauth_state_validation.py:126",
        "auth_service/tests/test_oauth_state_validation.py:269",
        "auth_service/tests/utils/assertion_helpers.py:92"
      ]
    },
    "id_token": {
      "value": "id_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:198",
        "auth_service/tests/test_auth_comprehensive.py:230"
      ]
    },
    "identified_bottlenecks": {
      "value": "identified_bottlenecks",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:252",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:255",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:262",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:281"
      ]
    },
    "immediate_fixes": {
      "value": "immediate_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:193",
        "scripts/compliance/real_test_linter.py:195",
        "scripts/compliance/test_fixer.py:349",
        "scripts/compliance/test_fixer.py:357"
      ]
    },
    "impact_analysis": {
      "value": "impact_analysis",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:254",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:265"
      ]
    },
    "impact_level": {
      "value": "impact_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:345"
      ]
    },
    "impact_multiplier": {
      "value": "impact_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:27",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:34",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:41",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:48",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:185"
      ]
    },
    "implementation": {
      "value": "implementation",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:270",
        "scripts/test_secret_manager_builder_critical.py:347",
        "scripts/test_secret_manager_builder_critical.py:526",
        "scripts/test_secret_manager_builder_critical.py:590",
        "scripts/test_secret_manager_builder_critical.py:613"
      ]
    },
    "import": {
      "value": "import",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:127",
        "scripts/align_test_imports.py:128",
        "scripts/align_test_imports.py:140",
        "scripts/align_test_imports.py:141",
        "scripts/align_test_imports.py:169",
        "scripts/apply_fast_test_decorators.py:67",
        "scripts/auto_fix_test_violations.py:579",
        "scripts/auto_fix_test_violations.py:585",
        "scripts/compliance/test_fixer.py:191",
        "scripts/comprehensive_test_fixer.py:265"
      ]
    },
    "import (": {
      "value": "import (",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:163"
      ]
    },
    "import *": {
      "value": "import *",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:113",
        "scripts/fix_all_test_issues.py:198"
      ]
    },
    "import app\\.": {
      "value": "import app\\.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:195"
      ]
    },
    "import netra_backend": {
      "value": "import netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:158",
        "scripts/fix_test_import_order.py:34"
      ]
    },
    "import netra_backend.app.": {
      "value": "import netra_backend.app.",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:195"
      ]
    },
    "import pytest": {
      "value": "import pytest",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:60",
        "scripts/add_pytest_markers.py:69",
        "scripts/add_pytest_markers.py:74",
        "scripts/add_pytest_markers.py:76",
        "scripts/compliance/test_fixer.py:335",
        "scripts/compliance/test_fixer.py:335"
      ]
    },
    "import pytest\\n": {
      "value": "import pytest\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:246"
      ]
    },
    "import sys": {
      "value": "import sys",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:177"
      ]
    },
    "import tests.e2e.auth_flow_testers": {
      "value": "import tests.e2e.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:88"
      ]
    },
    "import tests.e2e.config": {
      "value": "import tests.e2e.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:87"
      ]
    },
    "import tests.e2e.jwt_token_helpers": {
      "value": "import tests.e2e.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:85"
      ]
    },
    "import tests.e2e.oauth_test_providers": {
      "value": "import tests.e2e.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:86"
      ]
    },
    "import tests\\.config": {
      "value": "import tests\\.config",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:87"
      ]
    },
    "import tests\\.e2e\\.auth_flow_testers": {
      "value": "import tests\\.e2e\\.auth_flow_testers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:88"
      ]
    },
    "import tests\\.jwt_token_helpers": {
      "value": "import tests\\.jwt_token_helpers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:85"
      ]
    },
    "import tests\\.oauth_test_providers": {
      "value": "import tests\\.oauth_test_providers",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:86"
      ]
    },
    "import time\\n(.*?)time\\.sleep": {
      "value": "import time\\n(.*?)time\\.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:182"
      ]
    },
    "import unittest": {
      "value": "import unittest",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:242",
        "scripts/fix_test_import_errors.py:243"
      ]
    },
    "import unittest\\\\n": {
      "value": "import unittest\\\\n",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:246"
      ]
    },
    "import\\s+(.+)": {
      "value": "import\\s+(.+)",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:70"
      ]
    },
    "import_correction": {
      "value": "import_correction",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:310"
      ]
    },
    "import_errors": {
      "value": "import_errors",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:114"
      ]
    },
    "import_fixes": {
      "value": "import_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:405"
      ]
    },
    "import_similarity": {
      "value": "import_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:632"
      ]
    },
    "imports": {
      "value": "imports",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:104"
      ]
    },
    "in": {
      "value": "in",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619",
        "scripts/compliance/real_test_linter.py:178",
        "scripts/compliance/test_fixer.py:260",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/comprehensive_test_fixer.py:401",
        "scripts/fix_test_batch.py:204",
        "scripts/fix_test_batch.py:211"
      ]
    },
    "in .env.test with a longer value": {
      "value": "in .env.test with a longer value",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:113"
      ]
    },
    "in LLMTestModel enum": {
      "value": "in LLMTestModel enum",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:111"
      ]
    },
    "include": {
      "value": "include",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:28"
      ]
    },
    "inconsistent": {
      "value": "inconsistent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:118",
        "auth_service/tests/test_auth_port_configuration.py:119",
        "auth_service/tests/test_auth_port_configuration.py:134"
      ]
    },
    "index.html": {
      "value": "index.html",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:59"
      ]
    },
    "indicators": {
      "value": "indicators",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91",
        "netra_backend/app/services/realistic_test_data/models.py:96",
        "netra_backend/app/services/realistic_test_data/models.py:101",
        "netra_backend/app/services/realistic_test_data/models.py:106",
        "scripts/optimize_test_performance.py:259",
        "scripts/optimize_test_performance.py:320"
      ]
    },
    "inf": {
      "value": "inf",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:370"
      ]
    },
    "info": {
      "value": "info",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:193",
        "scripts/setup_test_environment.py:286",
        "scripts/start_test_services.py:23",
        "scripts/test_backend_port_binding.py:67"
      ]
    },
    "infrastructure_costs_usd": {
      "value": "infrastructure_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "infrastructure_plumbing": {
      "value": "infrastructure_plumbing",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:426"
      ]
    },
    "init": {
      "value": "init",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640"
      ]
    },
    "initialization\"\"\"\n        # TODO: Test class instantiation\n        pass": {
      "value": "initialization\"\"\"\n        # TODO: Test class instantiation\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:201"
      ]
    },
    "input": {
      "value": "input",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:47",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76",
        "scripts/real_service_test_metrics.py:33",
        "scripts/real_service_test_metrics.py:34",
        "scripts/real_service_test_metrics.py:35",
        "scripts/real_service_test_metrics.py:36"
      ]
    },
    "inputs": {
      "value": "inputs",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:188"
      ]
    },
    "install": {
      "value": "install",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:139",
        "scripts/test_frontend.py:52"
      ]
    },
    "instead of": {
      "value": "instead of",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:191"
      ]
    },
    "instead of 8000": {
      "value": "instead of 8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:141"
      ]
    },
    "int": {
      "value": "int",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:503"
      ]
    },
    "integration": {
      "value": "integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:22",
        "scripts/add_test_markers.py:54",
        "scripts/auto_fix_test_sizes.py:346",
        "scripts/auto_fix_test_sizes.py:347",
        "scripts/auto_fix_test_sizes.py:633",
        "scripts/auto_fix_test_violations.py:487",
        "scripts/auto_fix_test_violations.py:488",
        "scripts/automated_test_fix_loop.py:17",
        "scripts/autonomous_review/test_reviewer.py:214",
        "scripts/autonomous_review/test_reviewer.py:225"
      ]
    },
    "integration_tests": {
      "value": "integration_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:59",
        "scripts/compliance/project_test_validator.py:64",
        "scripts/fix_test_syntax_errors.py:228",
        "scripts/test_backend.py:203"
      ]
    },
    "internal overlaps. Consider reorganizing tests or extracting common test utilities.": {
      "value": "internal overlaps. Consider reorganizing tests or extracting common test utilities.",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:459"
      ]
    },
    "internal_overlaps": {
      "value": "internal_overlaps",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:409",
        "scripts/analyze_test_overlap.py:457",
        "scripts/analyze_test_overlap.py:459",
        "scripts/analyze_test_overlap.py:553",
        "scripts/analyze_test_overlap.py:564"
      ]
    },
    "into": {
      "value": "into",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:831",
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "invalid": {
      "value": "invalid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:110",
        "auth_service/tests/test_auth_comprehensive.py:495",
        "auth_service/tests/test_refresh_endpoint_simple.py:91",
        "scripts/test_workflows_with_act.py:210"
      ]
    },
    "invalid json": {
      "value": "invalid json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:312",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:171"
      ]
    },
    "invalid syntax": {
      "value": "invalid syntax",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:236"
      ]
    },
    "invalid-email": {
      "value": "invalid-email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:339"
      ]
    },
    "invalid-json": {
      "value": "invalid-json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:494"
      ]
    },
    "invalid-state-12345": {
      "value": "invalid-state-12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:213"
      ]
    },
    "invalid-state-parameter": {
      "value": "invalid-state-parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:150"
      ]
    },
    "invalid.jwt.token": {
      "value": "invalid.jwt.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:149"
      ]
    },
    "invalid.token": {
      "value": "invalid.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:109",
        "auth_service/tests/unit/test_refresh_endpoint.py:126",
        "auth_service/tests/unit/test_refresh_endpoint.py:295"
      ]
    },
    "invalid.token.here": {
      "value": "invalid.token.here",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:477"
      ]
    },
    "invalid_combination": {
      "value": "invalid_combination",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:104"
      ]
    },
    "invalid_metric": {
      "value": "invalid_metric",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:136"
      ]
    },
    "invalid_run_id": {
      "value": "invalid_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:148"
      ]
    },
    "invalid_timestamp": {
      "value": "invalid_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:592"
      ]
    },
    "invalid_token": {
      "value": "invalid_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:124",
        "scripts/test_verify_workflow_status.py:111",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status_corrected.py:126",
        "scripts/test_verify_workflow_status_corrected.py:128"
      ]
    },
    "invalid_type": {
      "value": "invalid_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:105"
      ]
    },
    "invalid_url": {
      "value": "invalid_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:190"
      ]
    },
    "invalid_wait": {
      "value": "invalid_wait",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:95"
      ]
    },
    "io_bound": {
      "value": "io_bound",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:79"
      ]
    },
    "ios_": {
      "value": "ios_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:83"
      ]
    },
    "ip": {
      "value": "ip",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "auth_service/tests/test_session_security_cycles_36_40.py:260"
      ]
    },
    "ip_address": {
      "value": "ip_address",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:54",
        "auth_service/tests/factories/session_factory.py:35"
      ]
    },
    "ip_change": {
      "value": "ip_change",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:267"
      ]
    },
    "is already failing!": {
      "value": "is already failing!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:742"
      ]
    },
    "is available": {
      "value": "is available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:104"
      ]
    },
    "is available for binding, but auth service URL configured for port": {
      "value": "is available for binding, but auth service URL configured for port",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:252"
      ]
    },
    "is not available": {
      "value": "is not available",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:106"
      ]
    },
    "is too short (must be at least 32 characters)": {
      "value": "is too short (must be at least 32 characters)",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:112"
      ]
    },
    "is_active": {
      "value": "is_active",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:41",
        "auth_service/tests/factories/user_factory.py:41",
        "auth_service/tests/utils/assertion_helpers.py:92",
        "auth_service/tests/utils/assertion_helpers.py:100",
        "auth_service/tests/utils/assertion_helpers.py:111",
        "auth_service/tests/utils/assertion_helpers.py:119"
      ]
    },
    "is_active must be boolean": {
      "value": "is_active must be boolean",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:101",
        "auth_service/tests/utils/assertion_helpers.py:120"
      ]
    },
    "is_development": {
      "value": "is_development",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:219"
      ]
    },
    "is_verified": {
      "value": "is_verified",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:42"
      ]
    },
    "is_weekend": {
      "value": "is_weekend",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123"
      ]
    },
    "isolated": {
      "value": "isolated",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:200"
      ]
    },
    "isolation": {
      "value": "isolation",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:107"
      ]
    },
    "iss": {
      "value": "iss",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:66"
      ]
    },
    "issue": {
      "value": "issue",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:295",
        "scripts/test_workflows_with_act.py:340"
      ]
    },
    "issuer": {
      "value": "issuer",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:78"
      ]
    },
    "issues": {
      "value": "issues",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:264",
        "scripts/test_cors.py:205",
        "scripts/test_cors.py:218",
        "scripts/test_cors.py:220",
        "scripts/test_cors.py:227",
        "scripts/test_cors.py:243",
        "scripts/test_cors.py:253",
        "scripts/test_cors.py:379",
        "scripts/test_cors.py:547",
        "scripts/test_cors.py:548"
      ]
    },
    "it(": {
      "value": "it(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "it\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "it\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:419"
      ]
    },
    "items)": {
      "value": "items)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:142"
      ]
    },
    "iteration": {
      "value": "iteration",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:79",
        "scripts/iterative_test_fix_loop.py:94"
      ]
    },
    "iteration test-fix loop": {
      "value": "iteration test-fix loop",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:142"
      ]
    },
    "iterations": {
      "value": "iterations",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:141"
      ]
    },
    "iterations!": {
      "value": "iterations!",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:150"
      ]
    },
    "javascript:alert('xss')": {
      "value": "javascript:alert('xss')",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:101"
      ]
    },
    "jest": {
      "value": "jest",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/cleanup_test_processes.py:129",
        "scripts/test_frontend.py:72",
        "scripts/test_frontend.py:100",
        "scripts/test_frontend.py:100",
        "scripts/unified_test_config.py:183"
      ]
    },
    "jest mocks (jest.fn:": {
      "value": "jest mocks (jest.fn:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:401"
      ]
    },
    "jest.config.*": {
      "value": "jest.config.*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    "jest.config.cjs": {
      "value": "jest.config.cjs",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:182",
        "scripts/unified_test_runner.py:118"
      ]
    },
    "jest.fn()": {
      "value": "jest.fn()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:393"
      ]
    },
    "jest.mock(": {
      "value": "jest.mock(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:394"
      ]
    },
    "jest.setup.js": {
      "value": "jest.setup.js",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:760"
      ]
    },
    "jest.setup.real.js": {
      "value": "jest.setup.real.js",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:751"
      ]
    },
    "jest\\.fn\\(\\)": {
      "value": "jest\\.fn\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:69"
      ]
    },
    "jest\\.mock\\(": {
      "value": "jest\\.mock\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:70"
      ]
    },
    "jest\\.mock\\([\\'\"`][^\\'\"`]+[\\'\"`],\\s*\\(\\)\\s*=>\\s*\\(\\{[\\s\\S]+?return\\s*<div": {
      "value": "jest\\.mock\\([\\'\"`][^\\'\"`]+[\\'\"`],\\s*\\(\\)\\s*=>\\s*\\(\\{[\\s\\S]+?return\\s*<div",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:77"
      ]
    },
    "journeys": {
      "value": "journeys",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:112"
      ]
    },
    "js_excessive_mocking": {
      "value": "js_excessive_mocking",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:400",
        "scripts/compliance/real_test_requirements_enforcer.py:516"
      ]
    },
    "js_function_size": {
      "value": "js_function_size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:447"
      ]
    },
    "js_mock_component": {
      "value": "js_mock_component",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:382",
        "scripts/compliance/real_test_requirements_enforcer.py:515"
      ]
    },
    "json": {
      "value": "json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:370",
        "scripts/business_value_test_index.py:549",
        "scripts/business_value_test_index.py:777",
        "scripts/business_value_test_index.py:796",
        "scripts/compliance/fake_test_scanner.py:236",
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/fake_test_scanner.py:429",
        "scripts/compliance/test_refactor_helper.py:131",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_refactor_helper.py:701"
      ]
    },
    "json_output": {
      "value": "json_output",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:145"
      ]
    },
    "json_output_format": {
      "value": "json_output_format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:169"
      ]
    },
    "jti": {
      "value": "jti",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:42",
        "auth_service/tests/factories/token_factory.py:136",
        "auth_service/tests/integration/test_refresh_integration.py:233",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:147",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:155",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:158",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:161",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:183",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:194",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:197"
      ]
    },
    "justification": {
      "value": "justification",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:642"
      ]
    },
    "justified": {
      "value": "justified",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:107",
        "scripts/analyze_test_mocks.py:128",
        "scripts/analyze_test_mocks.py:158"
      ]
    },
    "jwt": {
      "value": "jwt",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:44",
        "scripts/test_secret_manager_builder_critical.py:745"
      ]
    },
    "jwt-auth": {
      "value": "jwt-auth",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:44"
      ]
    },
    "jwt-secret-key": {
      "value": "jwt-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:141"
      ]
    },
    "jwt_secret_key": {
      "value": "jwt_secret_key",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:93",
        "scripts/test_staging_config.py:125"
      ]
    },
    "jwt_token": {
      "value": "jwt_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:121",
        "scripts/setup_staging_test_account.py:205",
        "scripts/setup_staging_test_account.py:319"
      ]
    },
    "key": {
      "value": "key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:745"
      ]
    },
    "large test files (>50KB). Consider splitting into smaller, focused test files.": {
      "value": "large test files (>50KB). Consider splitting into smaller, focused test files.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:163"
      ]
    },
    "largest_file": {
      "value": "largest_file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:83",
        "scripts/compliance/test_size_validator.py:98",
        "scripts/compliance/test_size_validator.py:99",
        "scripts/compliance/test_size_validator.py:426",
        "scripts/compliance/test_size_validator.py:428",
        "scripts/compliance/test_size_validator.py:428"
      ]
    },
    "largest_function": {
      "value": "largest_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:84",
        "scripts/compliance/test_size_validator.py:108",
        "scripts/compliance/test_size_validator.py:109",
        "scripts/compliance/test_size_validator.py:430",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/compliance/test_size_validator.py:432"
      ]
    },
    "last_activity": {
      "value": "last_activity",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:40",
        "auth_service/tests/integration/test_refresh_integration.py:164"
      ]
    },
    "last_refresh": {
      "value": "last_refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:142"
      ]
    },
    "latency_distribution": {
      "value": "latency_distribution",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:93",
        "netra_backend/app/services/realistic_test_data/models.py:35",
        "netra_backend/app/services/realistic_test_data/models.py:45",
        "netra_backend/app/services/realistic_test_data/models.py:55",
        "netra_backend/app/services/realistic_test_data/models.py:65",
        "netra_backend/app/services/realistic_test_data/models.py:75"
      ]
    },
    "latency_ms": {
      "value": "latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:112",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:306",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:307",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:349",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:403",
        "scripts/test_data_validator_backup.py:45",
        "scripts/test_data_validator_backup.py:50",
        "scripts/test_data_validator_backup.py:72",
        "scripts/test_data_validator_backup.py:136"
      ]
    },
    "latency_p50_ms": {
      "value": "latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:206"
      ]
    },
    "latency_p95_ms": {
      "value": "latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:207"
      ]
    },
    "latency_range_ms": {
      "value": "latency_range_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:92",
        "netra_backend/app/services/realistic_test_data/models.py:34",
        "netra_backend/app/services/realistic_test_data/models.py:44",
        "netra_backend/app/services/realistic_test_data/models.py:54",
        "netra_backend/app/services/realistic_test_data/models.py:64",
        "netra_backend/app/services/realistic_test_data/models.py:74"
      ]
    },
    "latest/unit_report.md": {
      "value": "latest/unit_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:38"
      ]
    },
    "latin-1": {
      "value": "latin-1",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:230",
        "scripts/fix_all_test_issues.py:257",
        "scripts/fix_all_test_issues.py:280"
      ]
    },
    "legacy": {
      "value": "legacy",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:226"
      ]
    },
    "legacy test files...": {
      "value": "legacy test files...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:287"
      ]
    },
    "legacy_config": {
      "value": "legacy_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:271",
        "scripts/test_redis_config_critical_failure.py:292"
      ]
    },
    "legacy_framework": {
      "value": "legacy_framework",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:161",
        "scripts/autonomous_review/test_reviewer.py:170"
      ]
    },
    "legitimate-user-123": {
      "value": "legitimate-user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:147"
      ]
    },
    "length": {
      "value": "length",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115",
        "scripts/check_test_compliance.py:61",
        "scripts/check_test_compliance.py:177"
      ]
    },
    "level": {
      "value": "level",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:51",
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24"
      ]
    },
    "lib": {
      "value": "lib",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "lib64": {
      "value": "lib64",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:27"
      ]
    },
    "line": {
      "value": "line",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:106",
        "scripts/analyze_test_mocks.py:127",
        "scripts/analyze_test_mocks.py:178",
        "scripts/optimize_test_performance.py:83",
        "scripts/optimize_test_performance.py:243",
        "scripts/optimize_test_performance.py:253",
        "scripts/optimize_test_performance.py:258",
        "scripts/optimize_test_performance.py:321"
      ]
    },
    "line limit": {
      "value": "line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:193",
        "scripts/compliance/test_size_validator.py:232"
      ]
    },
    "line limit (SPEC/testing.xml)": {
      "value": "line limit (SPEC/testing.xml)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:112"
      ]
    },
    "line limit:": {
      "value": "line limit:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:421",
        "scripts/compliance/test_size_validator.py:422"
      ]
    },
    "line limit:**": {
      "value": "line limit:**",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:460",
        "scripts/compliance/test_size_validator.py:461"
      ]
    },
    "line-rate": {
      "value": "line-rate",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:80"
      ]
    },
    "line1": {
      "value": "line1",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:295"
      ]
    },
    "line2": {
      "value": "line2",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:295"
      ]
    },
    "line3": {
      "value": "line3",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:324"
      ]
    },
    "line_number": {
      "value": "line_number",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:310",
        "scripts/compliance/test_size_validator.py:328"
      ]
    },
    "linear_decline": {
      "value": "linear_decline",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:100"
      ]
    },
    "lineno": {
      "value": "lineno",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:135",
        "scripts/compliance/project_test_validator.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:200",
        "scripts/compliance/real_test_validator.py:96"
      ]
    },
    "lines": {
      "value": "lines",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:237",
        "scripts/auto_fix_test_violations.py:249",
        "scripts/auto_fix_test_violations.py:274",
        "scripts/auto_fix_test_violations.py:294",
        "scripts/auto_fix_test_violations.py:307",
        "scripts/check_test_compliance.py:111",
        "scripts/check_test_compliance.py:167",
        "scripts/check_test_compliance.py:167",
        "scripts/check_test_compliance.py:177",
        "scripts/compliance/demo_test_size_enforcement.py:88"
      ]
    },
    "lines (+": {
      "value": "lines (+",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:83",
        "scripts/compliance/test_violations_reporter.py:123"
      ]
    },
    "lines (limit:": {
      "value": "lines (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:193",
        "scripts/compliance/test_limits_checker.py:209",
        "scripts/compliance/test_size_validator.py:364"
      ]
    },
    "lines (max:": {
      "value": "lines (max:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:156"
      ]
    },
    "lines and should be manually reviewed.": {
      "value": "lines and should be manually reviewed.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:610"
      ]
    },
    "lines)": {
      "value": "lines)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:256",
        "scripts/auto_fix_test_sizes.py:259",
        "scripts/auto_fix_test_sizes.py:445",
        "scripts/auto_fix_test_sizes.py:653",
        "scripts/compliance/demo_test_size_enforcement.py:100",
        "scripts/compliance/test_fixer.py:362",
        "scripts/compliance/test_refactor_helper.py:725"
      ]
    },
    "lines) manually": {
      "value": "lines) manually",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:622"
      ]
    },
    "lines):": {
      "value": "lines):",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:261"
      ]
    },
    "lines, exceeds 25-line limit": {
      "value": "lines, exceeds 25-line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:251",
        "scripts/compliance/real_test_requirements_enforcer.py:329",
        "scripts/compliance/real_test_validator.py:213"
      ]
    },
    "lines, exceeds 450-line limit": {
      "value": "lines, exceeds 450-line limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:156",
        "scripts/compliance/real_test_requirements_enforcer.py:222",
        "scripts/compliance/real_test_validator.py:111"
      ]
    },
    "lines, exceeds reasonable limit": {
      "value": "lines, exceeds reasonable limit",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:448"
      ]
    },
    "lines, limit is": {
      "value": "lines, limit is",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:213"
      ]
    },
    "lint": {
      "value": "lint",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:314"
      ]
    },
    "llama-2-70b": {
      "value": "llama-2-70b",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:73"
      ]
    },
    "llm": {
      "value": "llm",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40",
        "scripts/auto_fix_test_sizes.py:354",
        "scripts/business_value_test_index.py:441"
      ]
    },
    "llm_calls": {
      "value": "llm_calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35",
        "scripts/optimize_test_performance.py:148",
        "scripts/real_service_test_metrics.py:21",
        "scripts/real_service_test_metrics.py:42",
        "scripts/real_service_test_metrics.py:144",
        "scripts/real_service_test_metrics.py:147",
        "scripts/real_service_test_metrics.py:148"
      ]
    },
    "llm_configs": {
      "value": "llm_configs",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:77",
        "scripts/test_staging_config.py:102"
      ]
    },
    "llm_costs": {
      "value": "llm_costs",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:22",
        "scripts/real_service_test_metrics.py:46",
        "scripts/real_service_test_metrics.py:100",
        "scripts/real_service_test_metrics.py:149"
      ]
    },
    "llm_manager = LLMManager()": {
      "value": "llm_manager = LLMManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:50"
      ]
    },
    "llm_manager = Mock()": {
      "value": "llm_manager = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:48"
      ]
    },
    "llm_manager\\.": {
      "value": "llm_manager\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35"
      ]
    },
    "llm_responses": {
      "value": "llm_responses",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:14"
      ]
    },
    "llm_services": {
      "value": "llm_services",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:41"
      ]
    },
    "load": {
      "value": "load",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:348",
        "scripts/business_value_test_index.py:90",
        "scripts/business_value_test_index.py:464"
      ]
    },
    "load_test_config": {
      "value": "load_test_config",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/config/__init__.py:9"
      ]
    },
    "local": {
      "value": "local",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:75",
        "auth_service/tests/test_auth_comprehensive.py:74",
        "auth_service/tests/utils/assertion_helpers.py:104",
        "scripts/compliance/test_refactor_helper.py:114",
        "scripts/compliance/test_refactor_helper.py:130",
        "scripts/setup_e2e_test_ports.py:49",
        "scripts/test_sqlalchemy_2_migration.py:67",
        "scripts/test_sqlalchemy_2_migration.py:70",
        "scripts/unified_test_config.py:125",
        "scripts/unified_test_config.py:278"
      ]
    },
    "local_storage": {
      "value": "local_storage",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:168"
      ]
    },
    "localhost": {
      "value": "localhost",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_port_configuration.py:50",
        "auth_service/tests/test_auth_port_configuration.py:242",
        "scripts/setup_test_environment.py:65",
        "scripts/setup_test_environment.py:66",
        "scripts/setup_test_environment.py:67",
        "scripts/setup_test_environment.py:68",
        "scripts/setup_test_environment.py:70",
        "scripts/setup_test_environment.py:71",
        "scripts/setup_test_environment.py:207",
        "scripts/test_async_postgres.py:138"
      ]
    },
    "localhost:": {
      "value": "localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:376"
      ]
    },
    "localhost_connection": {
      "value": "localhost_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:120"
      ]
    },
    "location": {
      "value": "location",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:173",
        "auth_service/tests/test_auth_comprehensive.py:203",
        "auth_service/tests/test_oauth_state_validation.py:91",
        "auth_service/tests/test_oauth_state_validation.py:144",
        "auth_service/tests/test_oauth_state_validation.py:239",
        "auth_service/tests/test_oauth_state_validation.py:298",
        "scripts/test_oauth_local.py:191"
      ]
    },
    "lock_reason": {
      "value": "lock_reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:193"
      ]
    },
    "log lines from": {
      "value": "log lines from",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:273"
      ]
    },
    "log_patterns": {
      "value": "log_patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:15"
      ]
    },
    "login": {
      "value": "login",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:139",
        "auth_service/tests/factories/token_factory.py:223",
        "scripts/auto_fix_test_sizes.py:338"
      ]
    },
    "login_failed": {
      "value": "login_failed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:20"
      ]
    },
    "login_method": {
      "value": "login_method",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:75"
      ]
    },
    "login_success": {
      "value": "login_success",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:19"
      ]
    },
    "lognormal": {
      "value": "lognormal",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:127",
        "netra_backend/app/services/realistic_test_data/models.py:35",
        "netra_backend/app/services/realistic_test_data/models.py:45"
      ]
    },
    "logout": {
      "value": "logout",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:21"
      ]
    },
    "logout@example.com": {
      "value": "logout@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:91"
      ]
    },
    "logout_type": {
      "value": "logout_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:107"
      ]
    },
    "logs": {
      "value": "logs",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:276"
      ]
    },
    "long-running-token-for-shutdown-test": {
      "value": "long-running-token-for-shutdown-test",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:476"
      ]
    },
    "low": {
      "value": "low",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:331",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:473",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:493",
        "scripts/compliance/fake_test_scanner.py:210",
        "scripts/compliance/fake_test_scanner.py:212",
        "scripts/compliance/fake_test_scanner.py:265"
      ]
    },
    "low error rate": {
      "value": "low error rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:106"
      ]
    },
    "low_test_count": {
      "value": "low_test_count",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:660"
      ]
    },
    "low_throughput": {
      "value": "low_throughput",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:371"
      ]
    },
    "low_tier_coverage": {
      "value": "low_tier_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:678"
      ]
    },
    "main.py": {
      "value": "main.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:30",
        "scripts/test_staging_simplified.py:47"
      ]
    },
    "major": {
      "value": "major",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:157",
        "scripts/compliance/project_test_validator.py:252",
        "scripts/compliance/project_test_validator.py:288",
        "scripts/compliance/project_test_validator.py:313",
        "scripts/compliance/project_test_validator.py:327",
        "scripts/compliance/project_test_validator.py:339",
        "scripts/compliance/real_test_linter.py:109",
        "scripts/compliance/real_test_linter.py:114",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:222"
      ]
    },
    "major violations to address soon": {
      "value": "major violations to address soon",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:557"
      ]
    },
    "malformed_response": {
      "value": "malformed_response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:130"
      ]
    },
    "manager": {
      "value": "manager",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:365"
      ]
    },
    "managers": {
      "value": "managers",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:366"
      ]
    },
    "manipulated-challenge-by-attacker": {
      "value": "manipulated-challenge-by-attacker",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:130"
      ]
    },
    "manual_review": {
      "value": "manual_review",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:80",
        "scripts/fix_test_batch.py:312"
      ]
    },
    "mark": {
      "value": "mark",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:194",
        "scripts/business_value_test_index.py:233",
        "scripts/business_value_test_index.py:245"
      ]
    },
    "markdown": {
      "value": "markdown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:407",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/real_service_test_metrics.py:113"
      ]
    },
    "markers": {
      "value": "markers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:24",
        "scripts/unified_test_config.py:32",
        "scripts/unified_test_config.py:40",
        "scripts/unified_test_config.py:48",
        "scripts/unified_test_config.py:56",
        "scripts/unified_test_config.py:64",
        "scripts/unified_test_config.py:344",
        "scripts/unified_test_config.py:345"
      ]
    },
    "match": {
      "value": "match",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:84",
        "scripts/optimize_test_performance.py:244"
      ]
    },
    "matches": {
      "value": "matches",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:59",
        "scripts/optimize_test_performance.py:114",
        "scripts/optimize_test_performance.py:117",
        "scripts/optimize_test_performance.py:148",
        "scripts/optimize_test_performance.py:278",
        "scripts/optimize_test_performance.py:300",
        "scripts/optimize_test_performance.py:301",
        "scripts/optimize_test_performance.py:395",
        "scripts/test_docker_websocket_fix.py:54",
        "scripts/test_docker_websocket_fix.py:62"
      ]
    },
    "max": {
      "value": "max",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:95",
        "scripts/real_service_test_metrics.py:187",
        "scripts/test_data_validator_backup.py:52",
        "scripts/test_data_validator_backup.py:501",
        "scripts/test_data_validator_backup.py:505",
        "scripts/test_data_validator_backup.py:506"
      ]
    },
    "max_age": {
      "value": "max_age",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:203",
        "scripts/test_cors.py:241",
        "scripts/test_cors.py:351"
      ]
    },
    "max_error_rate": {
      "value": "max_error_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_latency_p50_ms": {
      "value": "max_latency_p50_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_latency_p95_ms": {
      "value": "max_latency_p95_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:215"
      ]
    },
    "max_load_time_ms": {
      "value": "max_load_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:135",
        "scripts/test_secret_manager_builder_critical.py:149",
        "scripts/test_secret_manager_builder_critical.py:165",
        "scripts/test_secret_manager_builder_critical.py:177",
        "scripts/test_secret_manager_builder_critical.py:462"
      ]
    },
    "max_null_percentage": {
      "value": "max_null_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:40"
      ]
    },
    "max_outlier_percentage": {
      "value": "max_outlier_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:42"
      ]
    },
    "max_time_ms": {
      "value": "max_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:589",
        "scripts/test_secret_manager_builder_critical.py:612",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "max_workers": {
      "value": "max_workers",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:177",
        "scripts/test_backend_optimized.py:184",
        "scripts/test_backend_optimized.py:191",
        "scripts/unified_test_runner.py:781"
      ]
    },
    "may still exceed line limits": {
      "value": "may still exceed line limits",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:628"
      ]
    },
    "medical_qa": {
      "value": "medical_qa",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "medium": {
      "value": "medium",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:333",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:492",
        "scripts/business_value_test_index.py:662",
        "scripts/compliance/fake_test_scanner.py:205",
        "scripts/compliance/fake_test_scanner.py:207",
        "scripts/compliance/fake_test_scanner.py:265"
      ]
    },
    "memory": {
      "value": "memory",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:352"
      ]
    },
    "memory_aware": {
      "value": "memory_aware",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:67"
      ]
    },
    "memory_intensive": {
      "value": "memory_intensive",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1117"
      ]
    },
    "memory_leak": {
      "value": "memory_leak",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:78",
        "netra_backend/app/services/realistic_test_data/log_generator.py:115",
        "netra_backend/app/services/realistic_test_data/log_generator.py:145",
        "netra_backend/app/services/realistic_test_data/models.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:30"
      ]
    },
    "memory_mb": {
      "value": "memory_mb",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:147",
        "netra_backend/app/services/realistic_test_data/log_generator.py:178",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:207",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:324",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:325",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:364",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:394"
      ]
    },
    "memory_per_worker_mb": {
      "value": "memory_per_worker_mb",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:178",
        "scripts/test_backend_optimized.py:185",
        "scripts/test_backend_optimized.py:192"
      ]
    },
    "memory_pressure": {
      "value": "memory_pressure",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:365",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:445"
      ]
    },
    "message": {
      "value": "message",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:71",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:71",
        "netra_backend/app/services/realistic_test_data/log_generator.py:53",
        "netra_backend/app/services/realistic_test_data/models.py:115",
        "netra_backend/app/services/realistic_test_data/models.py:121",
        "netra_backend/app/services/realistic_test_data/models.py:126",
        "netra_backend/app/services/realistic_test_data/models.py:132",
        "netra_backend/app/services/realistic_test_data/models.py:137",
        "auth_service/tests/auth-service-down-critical-scenarios.py:156",
        "auth_service/tests/auth-service-down-critical-scenarios.py:337"
      ]
    },
    "message_flow": {
      "value": "message_flow",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:42",
        "scripts/test_websocket_dev_mode.py:207"
      ]
    },
    "messages_exchanged": {
      "value": "messages_exchanged",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:68",
        "scripts/test_websocket_cors_comprehensive.py:105",
        "scripts/test_websocket_cors_comprehensive.py:111"
      ]
    },
    "metadata": {
      "value": "metadata",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:617",
        "scripts/business_value_test_index.py:737",
        "scripts/business_value_test_index.py:738"
      ]
    },
    "metadata.google.internal": {
      "value": "metadata.google.internal",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:228"
      ]
    },
    "method": {
      "value": "method",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:214",
        "scripts/test_staging_deployment.py:46",
        "scripts/test_staging_login_automated.py:85",
        "scripts/test_staging_login_automated.py:124",
        "scripts/test_staging_login_automated.py:185",
        "scripts/test_staging_login_automated.py:247"
      ]
    },
    "method exists": {
      "value": "method exists",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:49"
      ]
    },
    "method missing": {
      "value": "method missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:51"
      ]
    },
    "method\"\"\"\n        # TODO: Implement method test\n        pass": {
      "value": "method\"\"\"\n        # TODO: Implement method test\n        pass",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:216"
      ]
    },
    "method_names": {
      "value": "method_names",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:331"
      ]
    },
    "methods": {
      "value": "methods",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:212",
        "scripts/setup_staging_test_account.py:181",
        "scripts/setup_staging_test_account.py:193",
        "scripts/setup_staging_test_account.py:198",
        "scripts/setup_staging_test_account.py:208",
        "scripts/setup_staging_test_account.py:213",
        "scripts/setup_staging_test_account.py:217",
        "scripts/setup_staging_test_account.py:224",
        "scripts/setup_staging_test_account.py:230",
        "scripts/setup_staging_test_account.py:235"
      ]
    },
    "methods_allowed": {
      "value": "methods_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:201",
        "scripts/test_cors.py:231"
      ]
    },
    "metrics": {
      "value": "metrics",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:54",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:125",
        "scripts/team_updates_test_analyzer.py:18",
        "scripts/test_backend_optimized.py:219",
        "scripts/test_data_validator_backup.py:72",
        "scripts/test_data_validator_backup.py:136",
        "scripts/test_data_validator_backup.py:264",
        "scripts/test_data_validator_backup.py:284"
      ]
    },
    "microsoft/vscode": {
      "value": "microsoft/vscode",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:106",
        "scripts/test_verify_workflow_status.py:113",
        "scripts/test_verify_workflow_status.py:131",
        "scripts/test_verify_workflow_status.py:140",
        "scripts/test_verify_workflow_status.py:147",
        "scripts/test_verify_workflow_status.py:155",
        "scripts/test_verify_workflow_status_corrected.py:119",
        "scripts/test_verify_workflow_status_corrected.py:128",
        "scripts/test_verify_workflow_status_corrected.py:150",
        "scripts/test_verify_workflow_status_corrected.py:163"
      ]
    },
    "mid": {
      "value": "mid",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:109",
        "scripts/business_value_test_index.py:459",
        "scripts/business_value_test_index.py:675"
      ]
    },
    "mid|professional|advanced": {
      "value": "mid|professional|advanced",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:109"
      ]
    },
    "migration": {
      "value": "migration",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340"
      ]
    },
    "min": {
      "value": "min",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:94",
        "scripts/real_service_test_metrics.py:186",
        "scripts/test_data_validator_backup.py:51",
        "scripts/test_data_validator_backup.py:500",
        "scripts/test_data_validator_backup.py:504",
        "scripts/test_data_validator_backup.py:506"
      ]
    },
    "min_data_points": {
      "value": "min_data_points",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:39"
      ]
    },
    "min_time_ms": {
      "value": "min_time_ms",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:588",
        "scripts/test_secret_manager_builder_critical.py:611",
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "min_time_span_hours": {
      "value": "min_time_span_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:41"
      ]
    },
    "minimal": {
      "value": "minimal",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:234"
      ]
    },
    "minor": {
      "value": "minor",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:313",
        "scripts/compliance/project_test_validator.py:328",
        "scripts/compliance/project_test_validator.py:339",
        "scripts/compliance/real_test_linter.py:55",
        "scripts/compliance/real_test_linter.py:71",
        "scripts/compliance/real_test_linter.py:109",
        "scripts/compliance/real_test_linter.py:115",
        "scripts/compliance/real_test_linter.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:490",
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "minor_issues": {
      "value": "minor_issues",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:96"
      ]
    },
    "minute": {
      "value": "minute",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:122"
      ]
    },
    "mirrored_from_gemini": {
      "value": "mirrored_from_gemini",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:259"
      ]
    },
    "misc": {
      "value": "misc",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:555"
      ]
    },
    "misconfigured": {
      "value": "misconfigured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:279"
      ]
    },
    "misses": {
      "value": "misses",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:24",
        "scripts/real_service_test_metrics.py:60",
        "scripts/real_service_test_metrics.py:62",
        "scripts/real_service_test_metrics.py:168",
        "scripts/real_service_test_metrics.py:174"
      ]
    },
    "missing (required for production)": {
      "value": "missing (required for production)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:809"
      ]
    },
    "missing dependency:": {
      "value": "missing dependency:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:98"
      ]
    },
    "missing_args": {
      "value": "missing_args",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:88"
      ]
    },
    "missing_assertion": {
      "value": "missing_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:163",
        "scripts/autonomous_review/test_reviewer.py:175",
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "missing_attr": {
      "value": "missing_attr",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:58"
      ]
    },
    "missing_e2e": {
      "value": "missing_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:668"
      ]
    },
    "missing_fields": {
      "value": "missing_fields",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:231",
        "scripts/test_data_validator_backup.py:231"
      ]
    },
    "missing_item": {
      "value": "missing_item",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:32",
        "scripts/comprehensive_test_fixer.py:43",
        "scripts/comprehensive_test_fixer.py:56",
        "scripts/comprehensive_test_fixer.py:321"
      ]
    },
    "missing_module": {
      "value": "missing_module",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:74"
      ]
    },
    "missing_name": {
      "value": "missing_name",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:46",
        "scripts/fix_test_batch.py:301"
      ]
    },
    "missing_required_args": {
      "value": "missing_required_args",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:95"
      ]
    },
    "missing_token": {
      "value": "missing_token",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:104",
        "scripts/test_verify_workflow_status_corrected.py:117"
      ]
    },
    "mock": {
      "value": "mock",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:385",
        "scripts/compliance/project_test_validator.py:171",
        "scripts/compliance/project_test_validator.py:183",
        "scripts/compliance/real_test_requirements_enforcer.py:238",
        "scripts/compliance/real_test_requirements_enforcer.py:260",
        "scripts/compliance/real_test_validator.py:125",
        "scripts/compliance/real_test_validator.py:135",
        "scripts/compliance/test_refactor_helper.py:200",
        "scripts/test_staging_login_automated.py:34",
        "scripts/test_staging_login_automated.py:394"
      ]
    },
    "mock patterns found": {
      "value": "mock patterns found",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:185"
      ]
    },
    "mock usages, should use real components": {
      "value": "mock usages, should use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:287",
        "scripts/compliance/real_test_validator.py:248"
      ]
    },
    "mock-only tests in current sprint": {
      "value": "mock-only tests in current sprint",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "mock-token-": {
      "value": "mock-token-",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:70"
      ]
    },
    "mock-user-001": {
      "value": "mock-user-001",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:53"
      ]
    },
    "mock\\w*Context\\s*=": {
      "value": "mock\\w*Context\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:73"
      ]
    },
    "mock_": {
      "value": "mock_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    "mock_\\w+\\s*=": {
      "value": "mock_\\w+\\s*=",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "mock_access_token": {
      "value": "mock_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:227"
      ]
    },
    "mock_analysis.json": {
      "value": "mock_analysis.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:185"
      ]
    },
    "mock_auth_code": {
      "value": "mock_auth_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:251"
      ]
    },
    "mock_component_class": {
      "value": "mock_component_class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:174",
        "scripts/compliance/real_test_requirements_enforcer.py:247",
        "scripts/compliance/real_test_requirements_enforcer.py:515",
        "scripts/compliance/real_test_validator.py:127"
      ]
    },
    "mock_component_function": {
      "value": "mock_component_function",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:186",
        "scripts/compliance/real_test_linter.py:158",
        "scripts/compliance/real_test_requirements_enforcer.py:264",
        "scripts/compliance/real_test_requirements_enforcer.py:515",
        "scripts/compliance/real_test_validator.py:138",
        "scripts/compliance/test_fixer.py:356"
      ]
    },
    "mock_component_pattern": {
      "value": "mock_component_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:158"
      ]
    },
    "mock_components": {
      "value": "mock_components",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:92",
        "scripts/check_test_compliance.py:125",
        "scripts/check_test_compliance.py:135",
        "scripts/check_test_compliance.py:149",
        "scripts/check_test_compliance.py:182",
        "scripts/check_test_compliance.py:183",
        "scripts/check_test_compliance.py:184",
        "scripts/check_test_compliance.py:186",
        "scripts/check_test_compliance.py:187"
      ]
    },
    "mock_count": {
      "value": "mock_count",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:127",
        "scripts/check_test_compliance.py:185"
      ]
    },
    "mock_id_token": {
      "value": "mock_id_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:230"
      ]
    },
    "mock_implementation_comment": {
      "value": "mock_implementation_comment",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:150"
      ]
    },
    "mock_implementation_comments": {
      "value": "mock_implementation_comments",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:47",
        "scripts/remove_test_stubs.py:145"
      ]
    },
    "mock_login": {
      "value": "mock_login",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:85",
        "scripts/test_staging_login_automated.py:319"
      ]
    },
    "mock_only": {
      "value": "mock_only",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:50",
        "scripts/add_test_markers.py:141",
        "scripts/unified_test_config.py:93"
      ]
    },
    "mock_reductions": {
      "value": "mock_reductions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:215",
        "scripts/compliance/real_test_linter.py:218",
        "scripts/compliance/test_fixer.py:352",
        "scripts/compliance/test_fixer.py:369"
      ]
    },
    "mock_state": {
      "value": "mock_state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:252"
      ]
    },
    "mocks (should be": {
      "value": "mocks (should be",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:172"
      ]
    },
    "mocks, should use real components": {
      "value": "mocks, should use real components",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:369"
      ]
    },
    "mode": {
      "value": "mode",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:35",
        "scripts/setup_e2e_test_ports.py:77"
      ]
    },
    "mode):": {
      "value": "mode):",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:85"
      ]
    },
    "model": {
      "value": "model",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:74",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:107"
      ]
    },
    "model_costs_usd": {
      "value": "model_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "model_type": {
      "value": "model_type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "model_usage": {
      "value": "model_usage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:179"
      ]
    },
    "module": {
      "value": "module",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:31",
        "scripts/comprehensive_test_fixer.py:44",
        "scripts/comprehensive_test_fixer.py:55",
        "scripts/comprehensive_test_fixer.py:67",
        "scripts/comprehensive_test_fixer.py:320",
        "scripts/fix_test_batch.py:47",
        "scripts/fix_test_batch.py:302"
      ]
    },
    "more": {
      "value": "more",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:437",
        "scripts/align_test_imports.py:449",
        "scripts/check_test_compliance.py:169",
        "scripts/check_test_compliance.py:187",
        "scripts/compliance/project_test_validator.py:361",
        "scripts/compliance/real_test_linter.py:212",
        "scripts/compliance/real_test_validator.py:305",
        "scripts/optimize_test_performance.py:391",
        "scripts/test_cors.py:472",
        "scripts/test_discovery_report.py:79"
      ]
    },
    "more errors": {
      "value": "more errors",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:117"
      ]
    },
    "more files": {
      "value": "more files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:179",
        "scripts/check_test_import_order.py:93",
        "scripts/compliance/real_test_requirements_enforcer.py:539",
        "scripts/compliance/test_violations_reporter.py:86",
        "scripts/compliance/test_violations_reporter.py:134"
      ]
    },
    "more functions": {
      "value": "more functions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:127"
      ]
    },
    "more suggestions": {
      "value": "more suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:148"
      ]
    },
    "more violations": {
      "value": "more violations",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:52",
        "scripts/validate_llm_test_models.py:175"
      ]
    },
    "more violations in": {
      "value": "more violations in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_violations_reporter.py:134"
      ]
    },
    "ms": {
      "value": "ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:56",
        "netra_backend/app/services/realistic_test_data/log_generator.py:118",
        "scripts/test_secret_manager_builder_critical.py:177",
        "scripts/test_secret_manager_builder_critical.py:411",
        "scripts/test_secret_manager_builder_critical.py:626",
        "scripts/test_secret_manager_builder_critical.py:640",
        "scripts/test_secret_manager_builder_critical.py:641"
      ]
    },
    "ms\n   • Performance improvement needed:": {
      "value": "ms\n   • Performance improvement needed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:661"
      ]
    },
    "ms\n   • Target with SecretManagerBuilder: <": {
      "value": "ms\n   • Target with SecretManagerBuilder: <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:660"
      ]
    },
    "ms >": {
      "value": "ms >",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:466"
      ]
    },
    "ms exceeds": {
      "value": "ms exceeds",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:630"
      ]
    },
    "ms limit": {
      "value": "ms limit",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:466"
      ]
    },
    "ms per deployment": {
      "value": "ms per deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:650"
      ]
    },
    "ms per service):": {
      "value": "ms per service):",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:619"
      ]
    },
    "ms requirement:": {
      "value": "ms requirement:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:657"
      ]
    },
    "ms target": {
      "value": "ms target",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:630"
      ]
    },
    "ms vs": {
      "value": "ms vs",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:411"
      ]
    },
    "ms |": {
      "value": "ms |",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:496"
      ]
    },
    "ms | Max:": {
      "value": "ms | Max:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "ms | Min:": {
      "value": "ms | Min:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "multi_service_coverage": {
      "value": "multi_service_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:632",
        "scripts/business_value_test_index.py:749"
      ]
    },
    "multiprocessing\\.": {
      "value": "multiprocessing\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:222"
      ]
    },
    "mv": {
      "value": "mv",
      "category": "test_literals",
      "locations": [
        "scripts/standardize_l3_test_names.py:133"
      ]
    },
    "name": {
      "value": "name",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:509",
        "auth_service/tests/auth-service-down-critical-scenarios.py:523",
        "auth_service/tests/auth-service-down-critical-scenarios.py:544",
        "auth_service/tests/conftest.py:168",
        "auth_service/tests/factories/token_factory.py:225",
        "auth_service/tests/integration/test_refresh_integration.py:64",
        "auth_service/tests/test_auth_comprehensive.py:237",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:148"
      ]
    },
    "name=netra-test": {
      "value": "name=netra-test",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:32"
      ]
    },
    "naming_patterns": {
      "value": "naming_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:67",
        "scripts/generate_test_audit.py:99",
        "scripts/generate_test_audit.py:101",
        "scripts/generate_test_audit.py:103",
        "scripts/generate_test_audit.py:105",
        "scripts/generate_test_audit.py:107",
        "scripts/generate_test_audit.py:184",
        "scripts/generate_test_audit.py:220",
        "scripts/generate_test_audit.py:221",
        "scripts/generate_test_audit.py:223"
      ]
    },
    "needs_implementation": {
      "value": "needs_implementation",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:309",
        "scripts/fix_test_batch.py:387"
      ]
    },
    "nested": {
      "value": "nested",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:495"
      ]
    },
    "netra": {
      "value": "netra",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:147"
      ]
    },
    "netra-ai-staging": {
      "value": "netra-ai-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:32"
      ]
    },
    "netra-auth-service": {
      "value": "netra-auth-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:233"
      ]
    },
    "netra-backend": {
      "value": "netra-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:49",
        "scripts/test_error_monitor_logic.py:115",
        "scripts/test_error_monitor_logic.py:125",
        "scripts/test_error_monitor_logic.py:135",
        "scripts/test_error_monitor_logic.py:152",
        "scripts/test_staging_jwt_validation.py:117"
      ]
    },
    "netra-backend-staging": {
      "value": "netra-backend-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:89"
      ]
    },
    "netra-frontend": {
      "value": "netra-frontend",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:49",
        "scripts/test_jwt_fix.py:26"
      ]
    },
    "netra-prod-backend": {
      "value": "netra-prod-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:56"
      ]
    },
    "netra-production-service": {
      "value": "netra-production-service",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:156"
      ]
    },
    "netra-staging": {
      "value": "netra-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:91",
        "scripts/test_staging_config.py:44"
      ]
    },
    "netra-staging-backend": {
      "value": "netra-staging-backend",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:42"
      ]
    },
    "netra-staging-service": {
      "value": "netra-staging-service",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:142"
      ]
    },
    "netra-test": {
      "value": "netra-test",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:101",
        "scripts/start_test_services.py:46"
      ]
    },
    "netra-test-auth": {
      "value": "netra-test-auth",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:39"
      ]
    },
    "netra-test-backend": {
      "value": "netra-test-backend",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:39"
      ]
    },
    "netra-test-postgres": {
      "value": "netra-test-postgres",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:39"
      ]
    },
    "netra.test.agent@gmail.com": {
      "value": "netra.test.agent@gmail.com",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:45",
        "scripts/setup_staging_test_account.py:59"
      ]
    },
    "netra_backend": {
      "value": "netra_backend",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:29",
        "scripts/check_test_import_order.py:39",
        "scripts/check_test_import_order.py:44",
        "scripts/fix_authentication_test_tokens.py:29",
        "scripts/fix_test_import_errors.py:25",
        "scripts/fix_test_utils_imports.py:64",
        "scripts/remove_duplicate_test_setup.py:38",
        "scripts/standardize_l3_test_names.py:59",
        "scripts/test_backend.py:187",
        "scripts/test_secret_manager_builder_critical.py:188"
      ]
    },
    "netra_backend.app": {
      "value": "netra_backend.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_imports.py:71"
      ]
    },
    "netra_backend.tests.test_utils": {
      "value": "netra_backend.tests.test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:25"
      ]
    },
    "netra_backend/alembic": {
      "value": "netra_backend/alembic",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:125"
      ]
    },
    "netra_backend/alembic.ini": {
      "value": "netra_backend/alembic.ini",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:108"
      ]
    },
    "netra_backend/app": {
      "value": "netra_backend/app",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:111",
        "scripts/unified_test_config.py:167"
      ]
    },
    "netra_backend/app/core/middleware_setup.py": {
      "value": "netra_backend/app/core/middleware_setup.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:147"
      ]
    },
    "netra_backend/app/core/websocket_cors.py": {
      "value": "netra_backend/app/core/websocket_cors.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_ssot_compliance.py:149"
      ]
    },
    "netra_backend/pytest.ini": {
      "value": "netra_backend/pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:106"
      ]
    },
    "netra_backend/tests": {
      "value": "netra_backend/tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:143",
        "scripts/apply_fast_test_decorators.py:134",
        "scripts/batch_fix_and_test.py:41",
        "scripts/check_test_import_order.py:64",
        "scripts/fix_test_import_order.py:89",
        "scripts/optimize_test_performance.py:343",
        "scripts/test_backend.py:203",
        "scripts/unified_test_runner.py:105",
        "scripts/unified_test_runner.py:695",
        "scripts/validate_llm_test_models.py:42"
      ]
    },
    "netra_backend/tests/agents": {
      "value": "netra_backend/tests/agents",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:28",
        "scripts/test_backend.py:30",
        "scripts/unified_test_runner.py:693"
      ]
    },
    "netra_backend/tests/api": {
      "value": "netra_backend/tests/api",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:31",
        "scripts/rapid_test_consolidation.py:31"
      ]
    },
    "netra_backend/tests/conftest.py": {
      "value": "netra_backend/tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:15"
      ]
    },
    "netra_backend/tests/core": {
      "value": "netra_backend/tests/core",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:28",
        "scripts/unified_test_runner.py:688"
      ]
    },
    "netra_backend/tests/core/test_config_manager.py::TestSecretManager::test_initialization": {
      "value": "netra_backend/tests/core/test_config_manager.py::TestSecretManager::test_initialization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:38"
      ]
    },
    "netra_backend/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error": {
      "value": "netra_backend/tests/core/test_error_handling.py::TestNetraExceptions::test_configuration_error",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:37"
      ]
    },
    "netra_backend/tests/database": {
      "value": "netra_backend/tests/database",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:30",
        "scripts/rapid_test_consolidation.py:30"
      ]
    },
    "netra_backend/tests/e2e/infrastructure/llm_test_manager.py": {
      "value": "netra_backend/tests/e2e/infrastructure/llm_test_manager.py",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:88"
      ]
    },
    "netra_backend/tests/e2e/test_system_startup.py::TestSystemStartup": {
      "value": "netra_backend/tests/e2e/test_system_startup.py::TestSystemStartup",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:40"
      ]
    },
    "netra_backend/tests/integration": {
      "value": "netra_backend/tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:29",
        "scripts/unified_test_runner.py:689"
      ]
    },
    "netra_backend/tests/integration/test_logging_audit_integration_core.py": {
      "value": "netra_backend/tests/integration/test_logging_audit_integration_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:79"
      ]
    },
    "netra_backend/tests/integration/test_logging_audit_integration_helpers.py": {
      "value": "netra_backend/tests/integration/test_logging_audit_integration_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:78"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_auth_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_auth_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:77"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_errors_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_errors_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:72"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_errors_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_errors_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:71"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_performance_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_performance_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:76"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_performance_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_performance_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:75"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_routing_core.py": {
      "value": "netra_backend/tests/integration/test_message_flow_routing_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:70"
      ]
    },
    "netra_backend/tests/integration/test_message_flow_routing_helpers.py": {
      "value": "netra_backend/tests/integration/test_message_flow_routing_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:69"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow_core.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow_core.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:74"
      ]
    },
    "netra_backend/tests/integration/test_unified_message_flow_helpers.py": {
      "value": "netra_backend/tests/integration/test_unified_message_flow_helpers.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_fix_classes.py:73"
      ]
    },
    "netra_backend/tests/routes": {
      "value": "netra_backend/tests/routes",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:29"
      ]
    },
    "netra_backend/tests/routes/test_*auth*.py": {
      "value": "netra_backend/tests/routes/test_*auth*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:32"
      ]
    },
    "netra_backend/tests/routes/test_health_route.py": {
      "value": "netra_backend/tests/routes/test_health_route.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:36"
      ]
    },
    "netra_backend/tests/routes/test_websocket_*.py": {
      "value": "netra_backend/tests/routes/test_websocket_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:31"
      ]
    },
    "netra_backend/tests/services": {
      "value": "netra_backend/tests/services",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:28"
      ]
    },
    "netra_backend/tests/services/agents": {
      "value": "netra_backend/tests/services/agents",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:30"
      ]
    },
    "netra_backend/tests/services/apex_optimizer_agent": {
      "value": "netra_backend/tests/services/apex_optimizer_agent",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:30"
      ]
    },
    "netra_backend/tests/services/database": {
      "value": "netra_backend/tests/services/database",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:33"
      ]
    },
    "netra_backend/tests/services/test_security_service.py::test_encrypt_and_decrypt": {
      "value": "netra_backend/tests/services/test_security_service.py::test_encrypt_and_decrypt",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:39"
      ]
    },
    "netra_backend/tests/startup": {
      "value": "netra_backend/tests/startup",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:689"
      ]
    },
    "netra_backend/tests/test_agent_service_critical.py": {
      "value": "netra_backend/tests/test_agent_service_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:34"
      ]
    },
    "netra_backend/tests/test_api_agent_generation_critical.py": {
      "value": "netra_backend/tests/test_api_agent_generation_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:690"
      ]
    },
    "netra_backend/tests/test_api_core_critical.py": {
      "value": "netra_backend/tests/test_api_core_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:690"
      ]
    },
    "netra_backend/tests/test_api_endpoints_critical.py": {
      "value": "netra_backend/tests/test_api_endpoints_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:34",
        "scripts/unified_test_runner.py:690"
      ]
    },
    "netra_backend/tests/test_api_error_handling_critical.py": {
      "value": "netra_backend/tests/test_api_error_handling_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:690"
      ]
    },
    "netra_backend/tests/test_api_threads_messages_critical.py": {
      "value": "netra_backend/tests/test_api_threads_messages_critical.py",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:690"
      ]
    },
    "netra_backend/tests/test_auth*.py": {
      "value": "netra_backend/tests/test_auth*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:32"
      ]
    },
    "netra_backend/tests/test_database*.py": {
      "value": "netra_backend/tests/test_database*.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:33"
      ]
    },
    "netra_backend/tests/test_websocket.py": {
      "value": "netra_backend/tests/test_websocket.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:31"
      ]
    },
    "netra_backend/tests/unit": {
      "value": "netra_backend/tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:688"
      ]
    },
    "netra_backend/tests/unit/test_cors_architecture_compliance.py": {
      "value": "netra_backend/tests/unit/test_cors_architecture_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:26",
        "scripts/test_coverage_system.py:26"
      ]
    },
    "netra_backend/tests/websocket": {
      "value": "netra_backend/tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:29",
        "scripts/rapid_test_consolidation.py:29"
      ]
    },
    "netra_backend\\.tests\\.e2e\\.": {
      "value": "netra_backend\\.tests\\.e2e\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:79"
      ]
    },
    "netra_dev": {
      "value": "netra_dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:147",
        "scripts/test_database_url_builder_comprehensive.py:81"
      ]
    },
    "netra_prod_user": {
      "value": "netra_prod_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:265"
      ]
    },
    "netra_production": {
      "value": "netra_production",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:264"
      ]
    },
    "netra_staging": {
      "value": "netra_staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:41",
        "auth_service/test_staging_db_connection.py:57",
        "auth_service/test_staging_db_connection.py:94",
        "auth_service/test_url_construction.py:37"
      ]
    },
    "netra_test": {
      "value": "netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:217"
      ]
    },
    "netrasystems.ai": {
      "value": "netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:317"
      ]
    },
    "network_calls": {
      "value": "network_calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:33",
        "scripts/optimize_test_performance.py:139"
      ]
    },
    "network_partition": {
      "value": "network_partition",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:44"
      ]
    },
    "new files.": {
      "value": "new files.",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:1005",
        "scripts/auto_fix_test_violations.py:1008"
      ]
    },
    "new.access.token": {
      "value": "new.access.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:40",
        "auth_service/tests/unit/test_refresh_endpoint.py:52",
        "auth_service/tests/unit/test_refresh_endpoint.py:63",
        "auth_service/tests/unit/test_refresh_endpoint.py:80",
        "auth_service/tests/unit/test_refresh_endpoint.py:274",
        "auth_service/tests/unit/test_refresh_endpoint.py:284",
        "auth_service/tests/unit/test_refresh_endpoint.py:317",
        "auth_service/tests/unit/test_refresh_endpoint.py:327"
      ]
    },
    "new.refresh.token": {
      "value": "new.refresh.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:41",
        "auth_service/tests/unit/test_refresh_endpoint.py:53",
        "auth_service/tests/unit/test_refresh_endpoint.py:64",
        "auth_service/tests/unit/test_refresh_endpoint.py:81",
        "auth_service/tests/unit/test_refresh_endpoint.py:275",
        "auth_service/tests/unit/test_refresh_endpoint.py:285",
        "auth_service/tests/unit/test_refresh_endpoint.py:318",
        "auth_service/tests/unit/test_refresh_endpoint.py:328"
      ]
    },
    "new_access": {
      "value": "new_access",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:23",
        "auth_service/tests/test_refresh_endpoint_simple.py:31",
        "auth_service/tests/test_refresh_endpoint_simple.py:38",
        "auth_service/tests/test_refresh_endpoint_simple.py:44"
      ]
    },
    "new_access_token": {
      "value": "new_access_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:51",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:68",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:83",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:182",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:210"
      ]
    },
    "new_device": {
      "value": "new_device",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:158"
      ]
    },
    "new_files_created": {
      "value": "new_files_created",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:620",
        "scripts/auto_fix_test_sizes.py:663",
        "scripts/auto_fix_test_sizes.py:751"
      ]
    },
    "new_refresh": {
      "value": "new_refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:23",
        "auth_service/tests/test_refresh_endpoint_simple.py:32",
        "auth_service/tests/test_refresh_endpoint_simple.py:39",
        "auth_service/tests/test_refresh_endpoint_simple.py:45"
      ]
    },
    "new_refresh_token": {
      "value": "new_refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:51",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:68",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:83",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:182",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:210"
      ]
    },
    "new_secret_found": {
      "value": "new_secret_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:273",
        "scripts/test_secret_manager_builder_critical.py:350"
      ]
    },
    "next": {
      "value": "next",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70",
        "scripts/test_frontend.py:74",
        "scripts/test_frontend.py:102",
        "scripts/test_frontend.py:102"
      ]
    },
    "next_execution_config": {
      "value": "next_execution_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:220",
        "scripts/test_backend_optimized.py:220"
      ]
    },
    "no:warnings": {
      "value": "no:warnings",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:47",
        "scripts/test_backend.py:287"
      ]
    },
    "no_specific_test_found": {
      "value": "no_specific_test_found",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:133"
      ]
    },
    "node": {
      "value": "node",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:68",
        "scripts/cleanup_test_processes.py:74",
        "scripts/test_frontend.py:70",
        "scripts/test_frontend.py:80",
        "scripts/test_frontend.py:82"
      ]
    },
    "node_modules": {
      "value": "node_modules",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/autonomous_review/test_reviewer.py:202",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/check_test_compliance.py:101",
        "scripts/cleanup_test_processes.py:129",
        "scripts/compliance/project_test_validator.py:41",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:157",
        "scripts/fix_all_test_issues.py:16"
      ]
    },
    "non-critical violations found": {
      "value": "non-critical violations found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:608"
      ]
    },
    "non-existent-user": {
      "value": "non-existent-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:205"
      ]
    },
    "none": {
      "value": "none",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:324"
      ]
    },
    "nonexistent-workflow": {
      "value": "nonexistent-workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:131"
      ]
    },
    "nonexistent/repo123456": {
      "value": "nonexistent/repo123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:122"
      ]
    },
    "nonexistent/repo123456789": {
      "value": "nonexistent/repo123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:141"
      ]
    },
    "nonexistent_repo": {
      "value": "nonexistent_repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:120",
        "scripts/test_verify_workflow_status_corrected.py:139"
      ]
    },
    "nonexistent_workflow": {
      "value": "nonexistent_workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:129"
      ]
    },
    "normal": {
      "value": "normal",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:65"
      ]
    },
    "normal_operation": {
      "value": "normal_operation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:104"
      ]
    },
    "noscript_tag_found": {
      "value": "noscript_tag_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:19",
        "scripts/test_gtm_loading.py:46",
        "scripts/test_gtm_loading.py:122"
      ]
    },
    "not concurrent and not performance": {
      "value": "not concurrent and not performance",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:235"
      ]
    },
    "not e2e": {
      "value": "not e2e",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:32",
        "scripts/unified_test_config.py:40"
      ]
    },
    "not found in LLMTestModel enum": {
      "value": "not found in LLMTestModel enum",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:117"
      ]
    },
    "not found in database": {
      "value": "not found in database",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:180",
        "auth_service/tests/utils/assertion_helpers.py:196"
      ]
    },
    "not integration": {
      "value": "not integration",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:32"
      ]
    },
    "not slow": {
      "value": "not slow",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:40"
      ]
    },
    "not valid json": {
      "value": "not valid json",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:111"
      ]
    },
    "not.a.jwt": {
      "value": "not.a.jwt",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:304"
      ]
    },
    "not.a.valid.jwt.token": {
      "value": "not.a.valid.jwt.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:220"
      ]
    },
    "notAfter": {
      "value": "notAfter",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:82"
      ]
    },
    "not_a_number": {
      "value": "not_a_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:275"
      ]
    },
    "not_configured": {
      "value": "not_configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:285"
      ]
    },
    "note": {
      "value": "note",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:172"
      ]
    },
    "npm": {
      "value": "npm",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/startup_test_executor.py:139",
        "scripts/startup_test_executor.py:143",
        "scripts/test_frontend.py:52",
        "scripts/test_frontend.py:71",
        "scripts/test_frontend.py:87",
        "scripts/test_frontend.py:89",
        "scripts/test_frontend.py:119",
        "scripts/test_frontend.py:221",
        "scripts/test_frontend.py:223"
      ]
    },
    "npm run test:critical -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm run test:critical -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:768"
      ]
    },
    "npm run test:fast": {
      "value": "npm run test:fast",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:769"
      ]
    },
    "npm run test:integration -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm run test:integration -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:767"
      ]
    },
    "npm run test:unit -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm run test:unit -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:766"
      ]
    },
    "npm test": {
      "value": "npm test",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:119"
      ]
    },
    "npm test -- --passWithNoTests --ci --silent": {
      "value": "npm test -- --passWithNoTests --ci --silent",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend_quick.py:17"
      ]
    },
    "npm test -- --setupFilesAfterEnv='<rootDir>/": {
      "value": "npm test -- --setupFilesAfterEnv='<rootDir>/",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:772"
      ]
    },
    "npm.cmd": {
      "value": "npm.cmd",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58"
      ]
    },
    "npx": {
      "value": "npx",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:335"
      ]
    },
    "nt": {
      "value": "nt",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:63",
        "scripts/test_websocket_dev_mode.py:241"
      ]
    },
    "oauth": {
      "value": "oauth",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/factories/audit_factory.py:75",
        "scripts/analyze_test_mocks.py:44",
        "scripts/test_staging_login_automated.py:394",
        "scripts/test_staging_login_automated.py:414",
        "scripts/unified_test_config.py:106"
      ]
    },
    "oauth2": {
      "value": "oauth2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:175"
      ]
    },
    "oauth_callback": {
      "value": "oauth_callback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:33"
      ]
    },
    "oauth_config": {
      "value": "oauth_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_config_loading.py:100"
      ]
    },
    "oauth_error": {
      "value": "oauth_error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:34"
      ]
    },
    "oauth_initiation": {
      "value": "oauth_initiation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:50",
        "scripts/test_oauth_local.py:201",
        "scripts/test_oauth_local.py:214",
        "scripts/test_oauth_local.py:226",
        "scripts/test_oauth_local.py:413",
        "scripts/test_oauth_local.py:413"
      ]
    },
    "oauth_mock": {
      "value": "oauth_mock",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:217",
        "scripts/setup_staging_test_account.py:254"
      ]
    },
    "oauth_provider": {
      "value": "oauth_provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:175"
      ]
    },
    "oauth_redirect": {
      "value": "oauth_redirect",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:247",
        "scripts/test_staging_login_automated.py:317",
        "scripts/test_staging_login_automated.py:347"
      ]
    },
    "oauth_state_": {
      "value": "oauth_state_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:233"
      ]
    },
    "oauth_token": {
      "value": "oauth_token",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:48"
      ]
    },
    "object_type": {
      "value": "object_type",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:57"
      ]
    },
    "observability": {
      "value": "observability",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:102",
        "scripts/business_value_test_index.py:421",
        "scripts/business_value_test_index.py:497"
      ]
    },
    "observability|monitoring|logging|tracing|metrics": {
      "value": "observability|monitoring|logging|tracing|metrics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:102"
      ]
    },
    "occurrence_rate": {
      "value": "occurrence_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:117",
        "netra_backend/app/services/realistic_test_data/models.py:122",
        "netra_backend/app/services/realistic_test_data/models.py:128",
        "netra_backend/app/services/realistic_test_data/models.py:133",
        "netra_backend/app/services/realistic_test_data/models.py:138"
      ]
    },
    "ok": {
      "value": "ok",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:59",
        "scripts/test_staging_login_automated.py:202",
        "scripts/test_staging_login_automated.py:233",
        "scripts/test_staging_login_automated.py:343"
      ]
    },
    "old.refresh.token": {
      "value": "old.refresh.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:280",
        "auth_service/tests/unit/test_refresh_endpoint.py:287",
        "auth_service/tests/unit/test_refresh_endpoint.py:323",
        "auth_service/tests/unit/test_refresh_endpoint.py:330"
      ]
    },
    "onboard": {
      "value": "onboard",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:356"
      ]
    },
    "open": {
      "value": "open",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64"
      ]
    },
    "open\\(": {
      "value": "open\\(",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:36"
      ]
    },
    "openai": {
      "value": "openai",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:40"
      ]
    },
    "openai\\.": {
      "value": "openai\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:35"
      ]
    },
    "openai|anthropic|gemini|gpt|claude": {
      "value": "openai|anthropic|gemini|gpt|claude",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:441"
      ]
    },
    "openid email profile": {
      "value": "openid email profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:197"
      ]
    },
    "optimization": {
      "value": "optimization",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:55",
        "scripts/test_backend_optimized.py:61",
        "scripts/test_backend_optimized.py:67",
        "scripts/test_backend_optimized.py:73",
        "scripts/test_backend_optimized.py:79",
        "scripts/test_backend_optimized.py:89",
        "scripts/test_backend_optimized.py:98"
      ]
    },
    "optimization_level": {
      "value": "optimization_level",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:166"
      ]
    },
    "optimization_recommendations": {
      "value": "optimization_recommendations",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:218",
        "scripts/test_backend_optimized.py:340"
      ]
    },
    "optimization_suggestions": {
      "value": "optimization_suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:46",
        "scripts/optimize_test_performance.py:65",
        "scripts/optimize_test_performance.py:289",
        "scripts/optimize_test_performance.py:291",
        "scripts/optimize_test_performance.py:403"
      ]
    },
    "optimize": {
      "value": "optimize",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "optimized_test_cache": {
      "value": "optimized_test_cache",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:109",
        "scripts/test_backend_optimized.py:403"
      ]
    },
    "or no tests": {
      "value": "or no tests",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:114"
      ]
    },
    "organizations": {
      "value": "organizations",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:496"
      ]
    },
    "origin": {
      "value": "origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:29",
        "scripts/test_and_fix_cors.py:48",
        "scripts/test_and_fix_cors.py:71",
        "scripts/test_and_fix_cors.py:84",
        "scripts/test_cors.py:160",
        "scripts/test_cors.py:170",
        "scripts/test_cors.py:180",
        "scripts/test_cors.py:188",
        "scripts/test_cors.py:247",
        "scripts/test_websocket_cors_comprehensive.py:62"
      ]
    },
    "origin_allowed": {
      "value": "origin_allowed",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:199",
        "scripts/test_cors.py:213",
        "scripts/test_cors.py:215",
        "scripts/test_cors.py:378"
      ]
    },
    "original_file": {
      "value": "original_file",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:588",
        "scripts/compliance/test_size_validator.py:397"
      ]
    },
    "original_functions": {
      "value": "original_functions",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:693"
      ]
    },
    "original_lines": {
      "value": "original_lines",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:692"
      ]
    },
    "original_timestamp": {
      "value": "original_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:96"
      ]
    },
    "origins": {
      "value": "origins",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:266",
        "scripts/test_cors.py:278",
        "scripts/test_cors.py:280",
        "scripts/test_cors.py:461",
        "scripts/test_cors.py:464",
        "scripts/test_cors.py:466",
        "scripts/test_cors_implementation.py:146"
      ]
    },
    "origins_tested": {
      "value": "origins_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:210"
      ]
    },
    "os": {
      "value": "os",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "os.getenv(\"ENVIRONMENT\", \"staging\")": {
      "value": "os.getenv(\"ENVIRONMENT\", \"staging\")",
      "category": "test_literals",
      "locations": [
        "scripts/test_environment_detection.py:81",
        "scripts/test_environment_detection.py:90",
        "scripts/test_environment_detection.py:99"
      ]
    },
    "os\\.environ": {
      "value": "os\\.environ",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:224"
      ]
    },
    "other": {
      "value": "other",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:24",
        "scripts/analyze_test_mocks.py:31",
        "scripts/analyze_test_mocks.py:67",
        "scripts/business_value_test_index.py:407",
        "scripts/business_value_test_index.py:432",
        "scripts/compliance/test_refactor_helper.py:213",
        "scripts/test_cors.py:309",
        "scripts/test_cors.py:326"
      ]
    },
    "outliers": {
      "value": "outliers",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:265",
        "scripts/test_data_validator_backup.py:266",
        "scripts/test_data_validator_backup.py:267",
        "scripts/test_data_validator_backup.py:532",
        "scripts/test_data_validator_backup.py:537"
      ]
    },
    "output": {
      "value": "output",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:51",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76",
        "scripts/final_test_status_check.py:90",
        "scripts/final_test_status_check.py:111",
        "scripts/final_test_status_check.py:112",
        "scripts/real_service_test_metrics.py:33"
      ]
    },
    "overall_health": {
      "value": "overall_health",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:235",
        "scripts/test_staging_login_automated.py:338",
        "scripts/test_staging_login_automated.py:365",
        "scripts/test_staging_login_automated.py:424"
      ]
    },
    "overall_similarity": {
      "value": "overall_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:372",
        "scripts/analyze_test_overlap.py:593",
        "scripts/analyze_test_overlap.py:608",
        "scripts/analyze_test_overlap.py:629",
        "scripts/analyze_test_overlap.py:643"
      ]
    },
    "overall_success": {
      "value": "overall_success",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:871",
        "scripts/unified_test_runner.py:903"
      ]
    },
    "overload-test-token-": {
      "value": "overload-test-token-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:271"
      ]
    },
    "oversized files": {
      "value": "oversized files",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:643"
      ]
    },
    "p50": {
      "value": "p50",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:151"
      ]
    },
    "p50_latency_ms": {
      "value": "p50_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:164"
      ]
    },
    "p95": {
      "value": "p95",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:151"
      ]
    },
    "p95_latency_ms": {
      "value": "p95_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:165",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199"
      ]
    },
    "p99 latency": {
      "value": "p99 latency",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:101"
      ]
    },
    "p99_latency_ms": {
      "value": "p99_latency_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:166"
      ]
    },
    "package.json": {
      "value": "package.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:95"
      ]
    },
    "page_view": {
      "value": "page_view",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:231",
        "auth_service/tests/test_session_security_cycles_36_40.py:232",
        "scripts/test_gtm_tracking.py:45"
      ]
    },
    "pandemic_surge": {
      "value": "pandemic_surge",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:41"
      ]
    },
    "parallel": {
      "value": "parallel",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:26",
        "scripts/unified_test_config.py:34",
        "scripts/unified_test_config.py:42",
        "scripts/unified_test_config.py:50",
        "scripts/unified_test_config.py:58",
        "scripts/unified_test_config.py:66",
        "scripts/unified_test_config.py:193",
        "scripts/unified_test_config.py:200",
        "scripts/unified_test_config.py:207",
        "scripts/unified_test_config.py:214"
      ]
    },
    "parallel_factor": {
      "value": "parallel_factor",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:57",
        "scripts/test_backend_optimized.py:63",
        "scripts/test_backend_optimized.py:69",
        "scripts/test_backend_optimized.py:75",
        "scripts/test_backend_optimized.py:81",
        "scripts/test_backend_optimized.py:91",
        "scripts/test_backend_optimized.py:100",
        "scripts/test_backend_optimized.py:168",
        "scripts/test_backend_optimized.py:168"
      ]
    },
    "parallel_safe": {
      "value": "parallel_safe",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1114"
      ]
    },
    "parametrize": {
      "value": "parametrize",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:194"
      ]
    },
    "partial_result": {
      "value": "partial_result",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:411"
      ]
    },
    "partition": {
      "value": "partition",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:337"
      ]
    },
    "partition-test-token-": {
      "value": "partition-test-token-",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:330"
      ]
    },
    "parts": {
      "value": "parts",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:203"
      ]
    },
    "pass": {
      "value": "pass",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:579",
        "scripts/autonomous_review/test_generator.py:157"
      ]
    },
    "pass_rate": {
      "value": "pass_rate",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:146"
      ]
    },
    "passed": {
      "value": "passed",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:142",
        "scripts/fix_test_batch.py:284",
        "scripts/real_service_test_metrics.py:78",
        "scripts/real_service_test_metrics.py:132",
        "scripts/real_service_test_metrics.py:196",
        "scripts/startup_test_executor.py:28",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:110",
        "scripts/team_updates_test_analyzer.py:136",
        "scripts/test_cors_implementation.py:173"
      ]
    },
    "passed,": {
      "value": "passed,",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:156",
        "scripts/test_log_introspection.py:102",
        "scripts/test_log_introspection.py:422",
        "scripts/test_staging_startup.py:271"
      ]
    },
    "passed_tests": {
      "value": "passed_tests",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:144",
        "scripts/test_cors_implementation.py:208"
      ]
    },
    "password": {
      "value": "password",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:59",
        "auth_service/test_staging_db_connection.py:96",
        "auth_service/tests/factories/audit_factory.py:75",
        "auth_service/tests/test_auth_comprehensive.py:341",
        "auth_service/tests/test_auth_comprehensive.py:363",
        "auth_service/tests/test_auth_comprehensive.py:397",
        "auth_service/tests/test_auth_comprehensive.py:412",
        "auth_service/tests/test_auth_comprehensive.py:420",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:237",
        "scripts/compliance/test_limits_examples.py:11"
      ]
    },
    "password123": {
      "value": "password123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:363"
      ]
    },
    "password_change": {
      "value": "password_change",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:22"
      ]
    },
    "password_changed": {
      "value": "password_changed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:306",
        "auth_service/tests/test_session_security_cycles_36_40.py:333"
      ]
    },
    "password_reset": {
      "value": "password_reset",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:23"
      ]
    },
    "patch": {
      "value": "patch",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:104",
        "scripts/compliance/test_refactor_helper.py:200"
      ]
    },
    "patch(": {
      "value": "patch(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:358"
      ]
    },
    "patch\\(": {
      "value": "patch\\(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:274",
        "scripts/compliance/real_test_validator.py:236"
      ]
    },
    "path": {
      "value": "path",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:83",
        "scripts/compliance/test_size_validator.py:84",
        "scripts/compliance/test_size_validator.py:100",
        "scripts/compliance/test_size_validator.py:110",
        "scripts/compliance/test_size_validator.py:428",
        "scripts/compliance/test_size_validator.py:432",
        "scripts/setup_staging_test_account.py:156",
        "scripts/setup_staging_test_account.py:164",
        "scripts/test_docker_websocket_fix.py:155",
        "scripts/test_docker_websocket_fix.py:163"
      ]
    },
    "path.exists": {
      "value": "path.exists",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:64"
      ]
    },
    "path_pattern": {
      "value": "path_pattern",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:244",
        "scripts/unified_test_config.py:249",
        "scripts/unified_test_config.py:254",
        "scripts/unified_test_config.py:259",
        "scripts/unified_test_config.py:264"
      ]
    },
    "paths": {
      "value": "paths",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:54",
        "scripts/test_backend_optimized.py:60",
        "scripts/test_backend_optimized.py:66",
        "scripts/test_backend_optimized.py:72",
        "scripts/test_backend_optimized.py:78",
        "scripts/test_backend_optimized.py:84",
        "scripts/test_backend_optimized.py:94",
        "scripts/test_backend_optimized.py:300"
      ]
    },
    "pattern": {
      "value": "pattern",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:89",
        "netra_backend/app/services/realistic_test_data/models.py:94",
        "netra_backend/app/services/realistic_test_data/models.py:99",
        "netra_backend/app/services/realistic_test_data/models.py:104",
        "netra_backend/app/services/realistic_test_data/models.py:149",
        "scripts/batch_fix_and_test.py:23",
        "scripts/batch_fix_and_test.py:29",
        "scripts/batch_fix_and_test.py:35",
        "scripts/batch_fix_and_test.py:51",
        "scripts/batch_fix_and_test.py:52"
      ]
    },
    "patterns": {
      "value": "patterns",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:57",
        "scripts/optimize_test_performance.py:75",
        "scripts/optimize_test_performance.py:103"
      ]
    },
    "payload": {
      "value": "payload",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:285",
        "scripts/test_cold_start_e2e.py:392",
        "scripts/test_cold_start_e2e.py:415"
      ]
    },
    "pc_cov": {
      "value": "pc_cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:65"
      ]
    },
    "peak_hours": {
      "value": "peak_hours",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:113"
      ]
    },
    "peak_multiplier": {
      "value": "peak_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:114"
      ]
    },
    "peak_rps": {
      "value": "peak_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "pending": {
      "value": "pending",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:263"
      ]
    },
    "percent_covered": {
      "value": "percent_covered",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:123",
        "scripts/test_backend.py:411",
        "scripts/test_coverage_system.py:95"
      ]
    },
    "percentage": {
      "value": "percentage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202"
      ]
    },
    "perf": {
      "value": "perf",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:491"
      ]
    },
    "performance": {
      "value": "performance",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:25",
        "scripts/auto_fix_test_sizes.py:348",
        "scripts/auto_fix_test_sizes.py:349",
        "scripts/auto_fix_test_violations.py:491",
        "scripts/auto_fix_test_violations.py:492",
        "scripts/autonomous_review/test_reviewer.py:216",
        "scripts/autonomous_review/test_reviewer.py:229",
        "scripts/autonomous_review/test_reviewer.py:230",
        "scripts/business_value_test_index.py:88",
        "scripts/business_value_test_index.py:423"
      ]
    },
    "performance_analysis": {
      "value": "performance_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:217"
      ]
    },
    "performance_data": {
      "value": "performance_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "performance_degradation": {
      "value": "performance_degradation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:162",
        "netra_backend/app/services/realistic_test_data/models.py:99"
      ]
    },
    "performance_grade": {
      "value": "performance_grade",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:214",
        "scripts/test_backend_optimized.py:214",
        "scripts/test_backend_optimized.py:272",
        "scripts/test_backend_optimized.py:331"
      ]
    },
    "performance_metrics": {
      "value": "performance_metrics",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:16"
      ]
    },
    "performance_scores": {
      "value": "performance_scores",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:263",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:275"
      ]
    },
    "permission": {
      "value": "permission",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:212",
        "scripts/analyze_test_mocks.py:44"
      ]
    },
    "permission_granted": {
      "value": "permission_granted",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:31"
      ]
    },
    "permission_id": {
      "value": "permission_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:57",
        "auth_service/tests/factories/permission_factory.py:198",
        "auth_service/tests/factories/permission_factory.py:216"
      ]
    },
    "permission_revoked": {
      "value": "permission_revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:32"
      ]
    },
    "permissions": {
      "value": "permissions",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:39",
        "auth_service/tests/factories/token_factory.py:265",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:65",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:88",
        "scripts/setup_staging_test_account.py:91",
        "scripts/setup_staging_test_account.py:109"
      ]
    },
    "picture": {
      "value": "picture",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:87",
        "auth_service/tests/test_auth_comprehensive.py:238",
        "scripts/setup_staging_test_account.py:61",
        "scripts/test_staging_login_automated.py:56"
      ]
    },
    "pid": {
      "value": "pid",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:215",
        "auth_service/tests/auth-service-down-critical-scenarios.py:219",
        "auth_service/tests/auth-service-down-critical-scenarios.py:237",
        "auth_service/tests/auth-service-down-critical-scenarios.py:241",
        "auth_service/tests/auth-service-down-critical-scenarios.py:509",
        "auth_service/tests/auth-service-down-critical-scenarios.py:513",
        "auth_service/tests/auth-service-down-critical-scenarios.py:523",
        "auth_service/tests/auth-service-down-critical-scenarios.py:544",
        "auth_service/tests/auth-service-down-critical-scenarios.py:548",
        "scripts/cleanup_test_processes.py:61"
      ]
    },
    "ping": {
      "value": "ping",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:85",
        "scripts/test_websocket_connection.py:73",
        "scripts/test_websocket_connection.py:92",
        "scripts/test_websocket_cors_comprehensive.py:100",
        "scripts/test_websocket_dev_mode.py:194",
        "scripts/test_websocket_manual.py:29",
        "scripts/test_websocket_manual.py:81",
        "scripts/test_websocket_middleware.py:70",
        "scripts/test_websocket_simple.py:41"
      ]
    },
    "ping_interval": {
      "value": "ping_interval",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:83"
      ]
    },
    "pip install psycopg2-binary": {
      "value": "pip install psycopg2-binary",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:171"
      ]
    },
    "pip install redis": {
      "value": "pip install redis",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:196"
      ]
    },
    "placeholder": {
      "value": "placeholder",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:425",
        "scripts/test_staging_clickhouse.py:96"
      ]
    },
    "pong": {
      "value": "pong",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:94",
        "scripts/test_websocket_dev_mode.py:205",
        "scripts/test_websocket_manual.py:44",
        "scripts/test_websocket_manual.py:94"
      ]
    },
    "poor": {
      "value": "poor",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:47"
      ]
    },
    "port": {
      "value": "port",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:56",
        "auth_service/test_staging_db_connection.py:93",
        "scripts/test_backend_port_binding.py:135",
        "scripts/test_backend_port_binding.py:137",
        "scripts/test_backend_port_binding.py:141",
        "scripts/test_coordination_fixes.py:310",
        "scripts/test_coordination_fixes.py:322",
        "scripts/test_redis_config_critical_failure.py:265",
        "scripts/test_redis_config_critical_failure.py:286"
      ]
    },
    "port_allocation": {
      "value": "port_allocation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:44"
      ]
    },
    "port_allocation           → test_08_port_binding_race_conditions": {
      "value": "port_allocation           → test_08_port_binding_race_conditions",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:394"
      ]
    },
    "ports": {
      "value": "ports",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:86",
        "scripts/setup_e2e_test_ports.py:87",
        "scripts/setup_e2e_test_ports.py:88",
        "scripts/setup_e2e_test_ports.py:89",
        "scripts/setup_e2e_test_ports.py:90",
        "scripts/setup_e2e_test_ports.py:91"
      ]
    },
    "post-deploy-error": {
      "value": "post-deploy-error",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:133"
      ]
    },
    "post-deploy-warning": {
      "value": "post-deploy-warning",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:123"
      ]
    },
    "postgres": {
      "value": "postgres",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:36",
        "auth_service/test_actual_staging_credentials.py:37",
        "auth_service/test_staging_db_connection.py:42",
        "auth_service/test_staging_db_connection.py:58",
        "auth_service/test_staging_db_connection.py:95",
        "auth_service/test_url_construction.py:38",
        "auth_service/test_url_construction.py:176",
        "scripts/analyze_test_mocks.py:36",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:439"
      ]
    },
    "postgres-db-staging": {
      "value": "postgres-db-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:227",
        "scripts/test_ssl_certificates_staging.py:210",
        "scripts/test_staging_db_direct.py:40",
        "scripts/test_staging_migrations.py:39",
        "scripts/test_staging_migrations.py:227"
      ]
    },
    "postgres-host-staging": {
      "value": "postgres-host-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:225",
        "scripts/test_ssl_certificates_staging.py:36",
        "scripts/test_ssl_certificates_staging.py:208",
        "scripts/test_staging_db_direct.py:38",
        "scripts/test_staging_migrations.py:37",
        "scripts/test_staging_migrations.py:225"
      ]
    },
    "postgres-password-staging": {
      "value": "postgres-password-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:229",
        "scripts/test_ssl_certificates_staging.py:212",
        "scripts/test_staging_db_direct.py:42",
        "scripts/test_staging_migrations.py:41",
        "scripts/test_staging_migrations.py:229"
      ]
    },
    "postgres-port-staging": {
      "value": "postgres-port-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:226",
        "scripts/test_ssl_certificates_staging.py:37",
        "scripts/test_ssl_certificates_staging.py:209",
        "scripts/test_staging_db_direct.py:39",
        "scripts/test_staging_migrations.py:38",
        "scripts/test_staging_migrations.py:226"
      ]
    },
    "postgres-test": {
      "value": "postgres-test",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:44"
      ]
    },
    "postgres-user-staging": {
      "value": "postgres-user-staging",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:228",
        "scripts/test_ssl_certificates_staging.py:211",
        "scripts/test_staging_db_direct.py:41",
        "scripts/test_staging_migrations.py:40",
        "scripts/test_staging_migrations.py:228"
      ]
    },
    "postgres:": {
      "value": "postgres:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:74"
      ]
    },
    "postgresql": {
      "value": "postgresql",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:384",
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:145"
      ]
    },
    "postgresql+asyncpg://": {
      "value": "postgresql+asyncpg://",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:71",
        "auth_service/test_staging_db_connection.py:200",
        "auth_service/test_staging_db_connection.py:202",
        "auth_service/test_url_construction.py:105",
        "auth_service/test_url_construction.py:142",
        "scripts/test_auth_database_sessions.py:92",
        "scripts/test_auth_database_sessions.py:250"
      ]
    },
    "postgresql+asyncpg://postgres:": {
      "value": "postgresql+asyncpg://postgres:",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:148"
      ]
    },
    "postgresql+asyncpg://postgres:DTprdt5KoQXlEG4Gh9lF@localhost:5433/netra_dev": {
      "value": "postgresql+asyncpg://postgres:DTprdt5KoQXlEG4Gh9lF@localhost:5433/netra_dev",
      "category": "test_literals",
      "locations": [
        "scripts/test_async_postgres.py:18"
      ]
    },
    "postgresql+asyncpg://user:pass@localhost:5432/db": {
      "value": "postgresql+asyncpg://user:pass@localhost:5432/db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:192"
      ]
    },
    "postgresql://": {
      "value": "postgresql://",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:202",
        "auth_service/test_url_construction.py:106",
        "scripts/test_auth_database_sessions.py:92",
        "scripts/test_auth_database_sessions.py:250"
      ]
    },
    "postgresql://netra_test:test_password@localhost:5433/netra_test": {
      "value": "postgresql://netra_test:test_password@localhost:5433/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:156"
      ]
    },
    "postgresql://postgres:password@localhost:5432/testdb": {
      "value": "postgresql://postgres:password@localhost:5432/testdb",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:120"
      ]
    },
    "postgresql://test:test@localhost:5432/netra_test": {
      "value": "postgresql://test:test@localhost:5432/netra_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:79"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/project:region:instance": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/project:region:instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:80"
      ]
    },
    "postgresql://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require": {
      "value": "postgresql://user:pass@/db?host=/cloudsql/project:region:instance&sslmode=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:147",
        "scripts/test_ssl_certificates_staging.py:172"
      ]
    },
    "postgresql://user:pass@localhost:5432/db": {
      "value": "postgresql://user:pass@localhost:5432/db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:78",
        "scripts/test_auth_database_sessions.py:172",
        "scripts/test_auth_database_sessions.py:332"
      ]
    },
    "postgresql://user:pass@localhost:5432/db?ssl=require": {
      "value": "postgresql://user:pass@localhost:5432/db?ssl=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:155",
        "scripts/test_ssl_certificates_staging.py:171"
      ]
    },
    "postgresql://user:pass@localhost:5432/db?sslmode=require": {
      "value": "postgresql://user:pass@localhost:5432/db?sslmode=require",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:79",
        "scripts/test_database_url_builder_comprehensive.py:151",
        "scripts/test_ssl_certificates_staging.py:170"
      ]
    },
    "postgresql://user:pass@localhost:5432/test_db": {
      "value": "postgresql://user:pass@localhost:5432/test_db",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:196"
      ]
    },
    "postgres|PostgreSQL|psycopg": {
      "value": "postgres|PostgreSQL|psycopg",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:439"
      ]
    },
    "potentially failing test files": {
      "value": "potentially failing test files",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:268"
      ]
    },
    "pr_number": {
      "value": "pr_number",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:190"
      ]
    },
    "pre-deploy-1": {
      "value": "pre-deploy-1",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:113"
      ]
    },
    "pre_existing": {
      "value": "pre_existing",
      "category": "test_literals",
      "locations": [
        "scripts/test_error_monitor_logic.py:78",
        "scripts/test_error_monitor_logic.py:220",
        "scripts/test_error_monitor_logic.py:223"
      ]
    },
    "predictable patterns": {
      "value": "predictable patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:106"
      ]
    },
    "preflight": {
      "value": "preflight",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:514"
      ]
    },
    "prepare": {
      "value": "prepare",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640"
      ]
    },
    "previous": {
      "value": "previous",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:69",
        "scripts/team_updates_test_analyzer.py:79",
        "scripts/team_updates_test_analyzer.py:85"
      ]
    },
    "primary_issues": {
      "value": "primary_issues",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:291",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:438",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:445"
      ]
    },
    "priority": {
      "value": "priority",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:16",
        "scripts/analyze_test_mocks.py:17",
        "scripts/analyze_test_mocks.py:18",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:21",
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:23",
        "scripts/analyze_test_mocks.py:24",
        "scripts/analyze_test_mocks.py:109"
      ]
    },
    "priority failures to process": {
      "value": "priority failures to process",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:365"
      ]
    },
    "priority_failure_count": {
      "value": "priority_failure_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:198",
        "scripts/test_failure_scanner.py:227"
      ]
    },
    "priority_failures": {
      "value": "priority_failures",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:356",
        "scripts/fix_test_batch.py:359",
        "scripts/test_failure_scanner.py:31",
        "scripts/test_failure_scanner.py:168",
        "scripts/test_failure_scanner.py:198",
        "scripts/test_failure_scanner.py:233",
        "scripts/test_failure_scanner.py:238"
      ]
    },
    "privilege_escalation": {
      "value": "privilege_escalation",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:268"
      ]
    },
    "process": {
      "value": "process",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:90"
      ]
    },
    "process(es).": {
      "value": "process(es).",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:126"
      ]
    },
    "process_id": {
      "value": "process_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:244"
      ]
    },
    "processed": {
      "value": "processed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:229",
        "scripts/fix_test_batch.py:246",
        "scripts/fix_test_batch.py:254",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:381"
      ]
    },
    "prod": {
      "value": "prod",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:149",
        "scripts/unified_test_runner.py:805",
        "scripts/unified_test_runner.py:805",
        "scripts/unified_test_runner.py:817",
        "scripts/unified_test_runner.py:931",
        "scripts/unified_test_runner.py:938"
      ]
    },
    "prod-clickhouse-password-secure": {
      "value": "prod-clickhouse-password-secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:160"
      ]
    },
    "prod-fernet-key-32-chars-minimum-required": {
      "value": "prod-fernet-key-32-chars-minimum-required",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:161"
      ]
    },
    "prod-jwt-secret-from-secret-manager": {
      "value": "prod-jwt-secret-from-secret-manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:157"
      ]
    },
    "prod-jwt-secret-from-secret-manager-very-long-secure-key": {
      "value": "prod-jwt-secret-from-secret-manager-very-long-secure-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:564"
      ]
    },
    "prod-postgres-password-from-gcp-secrets": {
      "value": "prod-postgres-password-from-gcp-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:158"
      ]
    },
    "prod-postgres-password-from-gcp-secrets-very-secure": {
      "value": "prod-postgres-password-from-gcp-secrets-very-secure",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:565"
      ]
    },
    "prod-redis-password-from-gcp-secrets": {
      "value": "prod-redis-password-from-gcp-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:159"
      ]
    },
    "prod-redis-password-from-gcp-secrets-secure-key": {
      "value": "prod-redis-password-from-gcp-secrets-secure-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:566"
      ]
    },
    "production": {
      "value": "production",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:272",
        "auth_service/tests/test_auth_port_configuration.py:347",
        "auth_service/tests/test_auth_port_configuration.py:368",
        "auth_service/tests/test_auth_port_configuration.py:377",
        "scripts/test_cors.py:305",
        "scripts/test_cors.py:318",
        "scripts/test_cors.py:339",
        "scripts/test_cors.py:345",
        "scripts/test_cors.py:422",
        "scripts/test_cors_ssot_compliance.py:99"
      ]
    },
    "production-clickhouse-maximum-security-password-for-analytics-database": {
      "value": "production-clickhouse-maximum-security-password-for-analytics-database",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:704"
      ]
    },
    "production-fernet-key-exactly-32-chars-required-for-strong-encryption": {
      "value": "production-fernet-key-exactly-32-chars-required-for-strong-encryption",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:703"
      ]
    },
    "production-jwt-secret-very-long-secure-key-minimum-32-characters-required": {
      "value": "production-jwt-secret-very-long-secure-key-minimum-32-characters-required",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:700"
      ]
    },
    "production-postgres-highly-secure-password-with-special-chars-numbers-123!": {
      "value": "production-postgres-highly-secure-password-with-special-chars-numbers-123!",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:701"
      ]
    },
    "production-redis-extremely-secure-password-for-production-deployment": {
      "value": "production-redis-extremely-secure-password-for-production-deployment",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:702"
      ]
    },
    "productivity_gain": {
      "value": "productivity_gain",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:212",
        "scripts/test_backend_optimized.py:212",
        "scripts/test_backend_optimized.py:232",
        "scripts/test_backend_optimized.py:232",
        "scripts/test_backend_optimized.py:270",
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "progress_tracking": {
      "value": "progress_tracking",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:881"
      ]
    },
    "progression_rate": {
      "value": "progression_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:25",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:32",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:39",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:46",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:161"
      ]
    },
    "project_id_method": {
      "value": "project_id_method",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:274",
        "scripts/test_secret_manager_builder_critical.py:351"
      ]
    },
    "projects/": {
      "value": "projects/",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:18",
        "scripts/test_ssl_certificates_staging.py:19",
        "scripts/test_staging_clickhouse.py:52",
        "scripts/test_staging_db_direct.py:21",
        "scripts/test_staging_migrations.py:18"
      ]
    },
    "prompt_tokens": {
      "value": "prompt_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:76",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:109",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:117"
      ]
    },
    "proposed_files": {
      "value": "proposed_files",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:399"
      ]
    },
    "provider": {
      "value": "provider",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:410",
        "auth_service/tests/conftest.py:169",
        "auth_service/tests/factories/user_factory.py:85",
        "scripts/setup_staging_test_account.py:44",
        "scripts/setup_staging_test_account.py:86",
        "scripts/test_oauth_local.py:151",
        "scripts/test_oauth_local.py:246"
      ]
    },
    "provider_data": {
      "value": "provider_data",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:84"
      ]
    },
    "provider_user_id": {
      "value": "provider_user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:82"
      ]
    },
    "providers": {
      "value": "providers",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:248",
        "scripts/test_staging_login_automated.py:266",
        "scripts/test_staging_login_automated.py:272",
        "scripts/test_staging_login_automated.py:278",
        "scripts/test_staging_login_automated.py:284",
        "scripts/test_staging_login_automated.py:291",
        "scripts/test_staging_login_automated.py:349"
      ]
    },
    "ps": {
      "value": "ps",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:102",
        "scripts/setup_e2e_test_ports.py:32",
        "scripts/test_log_introspection.py:263"
      ]
    },
    "psycopg": {
      "value": "psycopg",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_ssl_certificates_staging.py:175"
      ]
    },
    "psycopg2": {
      "value": "psycopg2",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:125",
        "scripts/test_database_url_builder_comprehensive.py:169",
        "scripts/test_ssl_certificates_staging.py:175",
        "scripts/test_ssl_certificates_staging.py:245",
        "scripts/test_staging_migrations.py:70",
        "scripts/test_staging_migrations.py:74",
        "scripts/test_staging_migrations.py:200",
        "scripts/test_staging_migrations.py:206",
        "scripts/test_staging_migrations.py:237"
      ]
    },
    "psycopg2 URL valid:": {
      "value": "psycopg2 URL valid:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_migrations.py:75"
      ]
    },
    "psycopg2 not installed, cannot test database connectivity": {
      "value": "psycopg2 not installed, cannot test database connectivity",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:170"
      ]
    },
    "psycopg2.OperationalError: connection refused": {
      "value": "psycopg2.OperationalError: connection refused",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:194"
      ]
    },
    "psycopg2.OperationalError: could not connect": {
      "value": "psycopg2.OperationalError: could not connect",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:185"
      ]
    },
    "push": {
      "value": "push",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:152"
      ]
    },
    "pyproject.toml": {
      "value": "pyproject.toml",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89"
      ]
    },
    "pytest": {
      "value": "pytest",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:30",
        "scripts/analyze_test_overlap.py:218",
        "scripts/analyze_test_overlap.py:219",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/business_value_test_index.py:232",
        "scripts/business_value_test_index.py:244",
        "scripts/cleanup_test_processes.py:80",
        "scripts/compliance/test_refactor_helper.py:315",
        "scripts/compliance/test_size_validator.py:267"
      ]
    },
    "pytest-asyncio": {
      "value": "pytest-asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:114",
        "scripts/test_backend.py:151"
      ]
    },
    "pytest-cov": {
      "value": "pytest-cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:152"
      ]
    },
    "pytest-mock": {
      "value": "pytest-mock",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:114",
        "scripts/test_backend.py:152"
      ]
    },
    "pytest-xdist": {
      "value": "pytest-xdist",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:115",
        "scripts/test_backend.py:153"
      ]
    },
    "pytest.ini": {
      "value": "pytest.ini",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:89",
        "scripts/test_backend.py:187",
        "scripts/test_backend.py:188",
        "scripts/unified_test_config.py:164",
        "scripts/unified_test_config.py:173"
      ]
    },
    "pytest.mark.": {
      "value": "pytest.mark.",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:234",
        "scripts/business_value_test_index.py:246"
      ]
    },
    "pytest.mark.asyncio": {
      "value": "pytest.mark.asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:533"
      ]
    },
    "pytest.mark.real_llm": {
      "value": "pytest.mark.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:278"
      ]
    },
    "pytest_": {
      "value": "pytest_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:133",
        "scripts/compliance/test_size_validator.py:261"
      ]
    },
    "pytest_asyncio": {
      "value": "pytest_asyncio",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:151"
      ]
    },
    "pytest_cov": {
      "value": "pytest_cov",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:152"
      ]
    },
    "pytest_mock": {
      "value": "pytest_mock",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:152"
      ]
    },
    "python": {
      "value": "python",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:534",
        "scripts/auto_fix_test_violations.py:733",
        "scripts/autonomous_review/test_reviewer.py:113",
        "scripts/cleanup_test_processes.py:79",
        "scripts/cleanup_test_processes.py:84",
        "scripts/manage_test_services.py:134",
        "scripts/startup_test_executor.py:68",
        "scripts/startup_test_executor.py:221",
        "scripts/test_frontend.py:279",
        "scripts/test_staging_migrations.py:146"
      ]
    },
    "python scripts/check_architecture_compliance.py": {
      "value": "python scripts/check_architecture_compliance.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:214"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py analyze app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py analyze app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:185"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py suggest app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py suggest app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:186"
      ]
    },
    "python scripts/compliance/test_refactor_helper.py validate app/tests/test_large.py": {
      "value": "python scripts/compliance/test_refactor_helper.py validate app/tests/test_large.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:187"
      ]
    },
    "python scripts/compliance/test_size_validator.py": {
      "value": "python scripts/compliance/test_size_validator.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:179"
      ]
    },
    "python scripts/compliance/test_size_validator.py --format markdown": {
      "value": "python scripts/compliance/test_size_validator.py --format markdown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:180"
      ]
    },
    "python scripts/compliance/test_size_validator.py --output report.md": {
      "value": "python scripts/compliance/test_size_validator.py --output report.md",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:181"
      ]
    },
    "python test_runner.py --level real_e2e": {
      "value": "python test_runner.py --level real_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:152"
      ]
    },
    "python test_runner.py --level real_e2e --real-llm": {
      "value": "python test_runner.py --level real_e2e --real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:84",
        "scripts/test_discovery_report.py:155"
      ]
    },
    "python test_runner.py --level real_e2e --real-llm --llm-model gemini-2.5-pro": {
      "value": "python test_runner.py --level real_e2e --real-llm --llm-model gemini-2.5-pro",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:158"
      ]
    },
    "python unified_test_runner.py --category e2e --list-tests": {
      "value": "python unified_test_runner.py --category e2e --list-tests",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:212"
      ]
    },
    "python unified_test_runner.py --category frontend --real-services": {
      "value": "python unified_test_runner.py --category frontend --real-services",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:208"
      ]
    },
    "python unified_test_runner.py --category integration --real-services --real-llm": {
      "value": "python unified_test_runner.py --category integration --real-services --real-llm",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:210"
      ]
    },
    "python unified_test_runner.py --level integration": {
      "value": "python unified_test_runner.py --level integration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:191"
      ]
    },
    "python unified_test_runner.py --skip-size-validation": {
      "value": "python unified_test_runner.py --skip-size-validation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:129",
        "scripts/compliance/demo_test_size_enforcement.py:193"
      ]
    },
    "python unified_test_runner.py --strict-size": {
      "value": "python unified_test_runner.py --strict-size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:128",
        "scripts/compliance/demo_test_size_enforcement.py:192"
      ]
    },
    "quality_gates": {
      "value": "quality_gates",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:430"
      ]
    },
    "quality_metrics": {
      "value": "quality_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:629",
        "scripts/business_value_test_index.py:746",
        "scripts/test_data_validator_backup.py:229",
        "scripts/test_data_validator_backup.py:246",
        "scripts/test_data_validator_backup.py:264",
        "scripts/test_data_validator_backup.py:284",
        "scripts/test_data_validator_backup.py:302"
      ]
    },
    "quality_score": {
      "value": "quality_score",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:191"
      ]
    },
    "quality_scores": {
      "value": "quality_scores",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:25",
        "scripts/real_service_test_metrics.py:68",
        "scripts/real_service_test_metrics.py:90",
        "scripts/real_service_test_metrics.py:91"
      ]
    },
    "quality_summary": {
      "value": "quality_summary",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:92",
        "scripts/real_service_test_metrics.py:180",
        "scripts/real_service_test_metrics.py:182"
      ]
    },
    "query": {
      "value": "query",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:125"
      ]
    },
    "queue_depth": {
      "value": "queue_depth",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:159"
      ]
    },
    "quick": {
      "value": "quick",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:236"
      ]
    },
    "quick_test": {
      "value": "quick_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:404"
      ]
    },
    "quick_user": {
      "value": "quick_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:412"
      ]
    },
    "r": {
      "value": "r",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:110",
        "scripts/add_test_markers.py:25",
        "scripts/analyze_test_mocks.py:92",
        "scripts/analyze_test_overlap.py:105",
        "scripts/apply_fast_test_decorators.py:104",
        "scripts/auto_fix_test_sizes.py:81",
        "scripts/auto_fix_test_sizes.py:607",
        "scripts/auto_fix_test_violations.py:114",
        "scripts/auto_fix_test_violations.py:200",
        "scripts/auto_fix_test_violations.py:343"
      ]
    },
    "random": {
      "value": "random",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:45"
      ]
    },
    "random\\.": {
      "value": "random\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:218"
      ]
    },
    "rate_limit": {
      "value": "rate_limit",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:40",
        "netra_backend/app/services/realistic_test_data/models.py:50",
        "netra_backend/app/services/realistic_test_data/models.py:60",
        "netra_backend/app/services/realistic_test_data/models.py:70",
        "netra_backend/app/services/realistic_test_data/models.py:80"
      ]
    },
    "rate_limiting": {
      "value": "rate_limiting",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:113",
        "scripts/unified_test_config.py:108"
      ]
    },
    "raw body": {
      "value": "raw body",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:322"
      ]
    },
    "raw_output": {
      "value": "raw_output",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:642",
        "scripts/unified_test_runner.py:643"
      ]
    },
    "read": {
      "value": "read",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:85",
        "auth_service/tests/integration/test_refresh_integration.py:329",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:65",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:88",
        "scripts/fix_authentication_test_tokens.py:45",
        "scripts/setup_staging_test_account.py:91",
        "scripts/test_jwt_fix.py:22"
      ]
    },
    "readiness_separation": {
      "value": "readiness_separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:43"
      ]
    },
    "readiness_separation      → test_07_health_check_false_positives_during_init": {
      "value": "readiness_separation      → test_07_health_check_false_positives_during_init",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:393"
      ]
    },
    "ready": {
      "value": "ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:145"
      ]
    },
    "real": {
      "value": "real",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:158",
        "scripts/unified_test_runner.py:818"
      ]
    },
    "real e2e tests:": {
      "value": "real e2e tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:74"
      ]
    },
    "real_": {
      "value": "real_",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:44"
      ]
    },
    "real_database": {
      "value": "real_database",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:92"
      ]
    },
    "real_e2e": {
      "value": "real_e2e",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:105"
      ]
    },
    "real_llm": {
      "value": "real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:87",
        "scripts/business_value_test_index.py:279",
        "scripts/business_value_test_index.py:280",
        "scripts/business_value_test_index.py:281",
        "scripts/business_value_test_index.py:463",
        "scripts/business_value_test_index.py:504",
        "scripts/unified_test_config.py:64",
        "scripts/unified_test_config.py:91",
        "scripts/unified_test_config.py:130",
        "scripts/unified_test_config.py:138"
      ]
    },
    "real_llm_coverage": {
      "value": "real_llm_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:630",
        "scripts/business_value_test_index.py:747"
      ]
    },
    "real_services": {
      "value": "real_services",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:48",
        "scripts/add_test_markers.py:214",
        "scripts/test_discovery_report.py:105",
        "scripts/unified_test_config.py:90"
      ]
    },
    "real_websocket": {
      "value": "real_websocket",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:376"
      ]
    },
    "realistic_test_data_service": {
      "value": "realistic_test_data_service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data_service.py:27"
      ]
    },
    "reason": {
      "value": "reason",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:333",
        "scripts/team_updates_test_analyzer.py:59",
        "scripts/test_oauth_local.py:290",
        "scripts/test_oauth_local.py:374",
        "scripts/test_oauth_local.py:375",
        "scripts/test_oauth_local.py:417"
      ]
    },
    "received_keys": {
      "value": "received_keys",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/unit/test_refresh_endpoint.py:105",
        "scripts/test_staging_refresh_format.py:112",
        "scripts/test_staging_refresh_format.py:113",
        "scripts/test_staging_refresh_format.py:137",
        "scripts/test_staging_refresh_format.py:138"
      ]
    },
    "recent_runs": {
      "value": "recent_runs",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:73"
      ]
    },
    "recommendation": {
      "value": "recommendation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:187",
        "scripts/test_backend_optimized.py:344"
      ]
    },
    "recommendations": {
      "value": "recommendations",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:251",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:264",
        "scripts/analyze_test_overlap.py:361",
        "scripts/analyze_test_overlap.py:433",
        "scripts/analyze_test_overlap.py:538",
        "scripts/analyze_test_overlap.py:539",
        "scripts/analyze_test_overlap.py:661",
        "scripts/business_value_test_index.py:647",
        "scripts/business_value_test_index.py:763",
        "scripts/business_value_test_index.py:765"
      ]
    },
    "reconfigure": {
      "value": "reconfigure",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_validator.py:343"
      ]
    },
    "reconnecting": {
      "value": "reconnecting",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:18"
      ]
    },
    "recovery_start": {
      "value": "recovery_start",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:89",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:115"
      ]
    },
    "recovery_time_minutes": {
      "value": "recovery_time_minutes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:26",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:33",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:40",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:47",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:88"
      ]
    },
    "redirectUri": {
      "value": "redirectUri",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:154"
      ]
    },
    "redirect_url": {
      "value": "redirect_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:203",
        "scripts/test_oauth_local.py:208",
        "scripts/test_staging_login_automated.py:268",
        "scripts/test_staging_login_automated.py:274",
        "scripts/test_staging_login_automated.py:280"
      ]
    },
    "redis": {
      "value": "redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:459",
        "scripts/analyze_test_mocks.py:20",
        "scripts/analyze_test_mocks.py:52",
        "scripts/analyze_test_mocks.py:53",
        "scripts/auto_fix_test_sizes.py:352",
        "scripts/business_value_test_index.py:380",
        "scripts/business_value_test_index.py:438",
        "scripts/manage_test_services.py:120",
        "scripts/setup_e2e_test_ports.py:90",
        "scripts/setup_e2e_test_ports.py:99"
      ]
    },
    "redis not installed, skipping Redis connectivity check": {
      "value": "redis not installed, skipping Redis connectivity check",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:195"
      ]
    },
    "redis-test": {
      "value": "redis-test",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:44"
      ]
    },
    "redis.Redis": {
      "value": "redis.Redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:565"
      ]
    },
    "redis.Redis.get": {
      "value": "redis.Redis.get",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:435"
      ]
    },
    "redis.Redis.ping": {
      "value": "redis.Redis.ping",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:177",
        "auth_service/tests/auth-service-down-critical-scenarios.py:431",
        "auth_service/tests/test_auth_comprehensive.py:445"
      ]
    },
    "redis://localhost:6379/0": {
      "value": "redis://localhost:6379/0",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:128"
      ]
    },
    "redis://localhost:6379/1": {
      "value": "redis://localhost:6379/1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:44",
        "scripts/setup_test_environment.py:179",
        "scripts/test_backend.py:81"
      ]
    },
    "redis://localhost:6380": {
      "value": "redis://localhost:6380",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:157"
      ]
    },
    "redis://nonexistent-redis-host:6379/0": {
      "value": "redis://nonexistent-redis-host:6379/0",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:96"
      ]
    },
    "redis_connection": {
      "value": "redis_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:41"
      ]
    },
    "redis_url": {
      "value": "redis_url",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:128",
        "scripts/unified_test_config.py:136",
        "scripts/unified_test_config.py:144",
        "scripts/unified_test_config.py:152",
        "scripts/unified_test_config.py:309",
        "scripts/unified_test_config.py:310"
      ]
    },
    "redis|Redis|REDIS": {
      "value": "redis|Redis|REDIS",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:438"
      ]
    },
    "redundant tests...": {
      "value": "redundant tests...",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:294"
      ]
    },
    "refresh": {
      "value": "refresh",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:230",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:30",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:42",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:298",
        "auth_service/tests/unit/test_refresh_endpoint.py:171",
        "auth_service/tests/unit/test_refresh_endpoint.py:181",
        "auth_service/tests/unit/test_refresh_endpoint.py:184",
        "auth_service/tests/unit/test_refresh_endpoint.py:195",
        "auth_service/tests/unit/test_refresh_endpoint.py:204",
        "auth_service/tests/unit/test_refresh_endpoint.py:215"
      ]
    },
    "refreshToken": {
      "value": "refreshToken",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:278",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:72",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:194",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:273",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:294",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:315",
        "auth_service/tests/test_refresh_endpoint_simple.py:36",
        "auth_service/tests/unit/test_refresh_endpoint.py:70",
        "scripts/test_staging_auth_e2e.py:169",
        "scripts/test_staging_auth_e2e.py:247"
      ]
    },
    "refresh_test@example.com": {
      "value": "refresh_test@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:51"
      ]
    },
    "refresh_token": {
      "value": "refresh_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:194",
        "auth_service/tests/integration/test_refresh_integration.py:97",
        "auth_service/tests/integration/test_refresh_integration.py:103",
        "auth_service/tests/integration/test_refresh_integration.py:109",
        "auth_service/tests/integration/test_refresh_integration.py:125",
        "auth_service/tests/integration/test_refresh_integration.py:154",
        "auth_service/tests/integration/test_refresh_integration.py:179",
        "auth_service/tests/integration/test_refresh_integration.py:211",
        "auth_service/tests/integration/test_refresh_integration.py:245",
        "auth_service/tests/integration/test_refresh_integration.py:255"
      ]
    },
    "refresh_token field is required": {
      "value": "refresh_token field is required",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:299",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:102",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:115",
        "auth_service/tests/test_refresh_endpoint_simple.py:62",
        "auth_service/tests/unit/test_refresh_endpoint.py:104"
      ]
    },
    "refresh_token_": {
      "value": "refresh_token_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:110",
        "auth_service/tests/factories/session_factory.py:181"
      ]
    },
    "refresh_token_hash": {
      "value": "refresh_token_hash",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:113"
      ]
    },
    "refreshes": {
      "value": "refreshes",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:284"
      ]
    },
    "related": {
      "value": "related",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:329",
        "scripts/analyze_test_overlap.py:354",
        "scripts/analyze_test_overlap.py:532"
      ]
    },
    "remaining requests, got": {
      "value": "remaining requests, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/utils/assertion_helpers.py:248"
      ]
    },
    "remove": {
      "value": "remove",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:86"
      ]
    },
    "replace": {
      "value": "replace",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:46",
        "scripts/autonomous_review/test_generator.py:66",
        "scripts/autonomous_review/test_reviewer.py:146",
        "scripts/autonomous_review/test_reviewer.py:222",
        "scripts/test_frontend.py:57",
        "scripts/test_frontend.py:80",
        "scripts/test_frontend.py:87",
        "scripts/test_frontend.py:198",
        "scripts/test_frontend.py:241",
        "scripts/test_frontend.py:305"
      ]
    },
    "replacement": {
      "value": "replacement",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:24",
        "scripts/batch_fix_and_test.py:30",
        "scripts/batch_fix_and_test.py:36",
        "scripts/batch_fix_and_test.py:52",
        "scripts/optimize_test_performance.py:178",
        "scripts/optimize_test_performance.py:183",
        "scripts/optimize_test_performance.py:201"
      ]
    },
    "replay": {
      "value": "replay",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:244"
      ]
    },
    "report": {
      "value": "report",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:214"
      ]
    },
    "reports": {
      "value": "reports",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:25",
        "scripts/remove_test_stubs.py:343",
        "scripts/test_backend.py:313",
        "scripts/test_backend.py:313",
        "scripts/test_backend.py:314",
        "scripts/test_backend.py:402",
        "scripts/test_coverage_system.py:56"
      ]
    },
    "reports/coverage": {
      "value": "reports/coverage",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:113"
      ]
    },
    "reports/test_health": {
      "value": "reports/test_health",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:285"
      ]
    },
    "repository": {
      "value": "repository",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "request_headers": {
      "value": "request_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:85",
        "scripts/test_cors.py:95",
        "scripts/test_cors.py:122",
        "scripts/test_cors.py:132",
        "scripts/test_cors.py:383",
        "scripts/test_cors.py:391"
      ]
    },
    "request_id": {
      "value": "request_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:278",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:286"
      ]
    },
    "request_success_rate": {
      "value": "request_success_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "request_timeout": {
      "value": "request_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:45",
        "scripts/test_cold_start_e2e.py:239",
        "scripts/test_cold_start_e2e.py:334",
        "scripts/test_cold_start_e2e.py:356"
      ]
    },
    "requests": {
      "value": "requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:170",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:226",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:248",
        "scripts/analyze_test_mocks.py:56"
      ]
    },
    "requests\\.(?:get|post|put|delete)": {
      "value": "requests\\.(?:get|post|put|delete)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:33"
      ]
    },
    "required_services": {
      "value": "required_services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:168",
        "scripts/unified_test_config.py:177",
        "scripts/unified_test_config.py:186"
      ]
    },
    "requires_real_llm": {
      "value": "requires_real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1116"
      ]
    },
    "requires_real_services": {
      "value": "requires_real_services",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1115"
      ]
    },
    "research": {
      "value": "research",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:42"
      ]
    },
    "resilience": {
      "value": "resilience",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:115",
        "scripts/unified_test_config.py:119"
      ]
    },
    "resource": {
      "value": "resource",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:58",
        "auth_service/tests/factories/permission_factory.py:210",
        "auth_service/tests/test_session_security_cycles_36_40.py:231",
        "auth_service/tests/test_session_security_cycles_36_40.py:232",
        "auth_service/tests/test_session_security_cycles_36_40.py:233",
        "auth_service/tests/test_session_security_cycles_36_40.py:240",
        "auth_service/tests/test_session_security_cycles_36_40.py:250",
        "auth_service/tests/test_session_security_cycles_36_40.py:251",
        "auth_service/tests/test_session_security_cycles_36_40.py:252",
        "auth_service/tests/test_session_security_cycles_36_40.py:259"
      ]
    },
    "resource_monitoring": {
      "value": "resource_monitoring",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:171"
      ]
    },
    "response": {
      "value": "response",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:114",
        "scripts/test_chat_errors.py:72",
        "scripts/test_docker_websocket_fix.py:73",
        "scripts/test_docker_websocket_fix.py:100",
        "scripts/test_docker_websocket_fix.py:105",
        "scripts/test_oauth_local.py:110",
        "scripts/test_oauth_local.py:125",
        "scripts/test_oauth_local.py:222"
      ]
    },
    "response time degradation": {
      "value": "response time degradation",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:91"
      ]
    },
    "response_data": {
      "value": "response_data",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:124",
        "scripts/test_websocket_cors_comprehensive.py:69",
        "scripts/test_websocket_cors_comprehensive.py:112"
      ]
    },
    "response_headers": {
      "value": "response_headers",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:86",
        "scripts/test_cors.py:123",
        "scripts/test_cors_implementation.py:217"
      ]
    },
    "response_time": {
      "value": "response_time",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:88",
        "scripts/test_staging_deployment.py:48",
        "scripts/test_staging_deployment.py:58",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139"
      ]
    },
    "response_time_ms": {
      "value": "response_time_ms",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:149",
        "netra_backend/app/services/realistic_test_data/log_generator.py:158",
        "netra_backend/app/services/realistic_test_data/log_generator.py:174",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:199"
      ]
    },
    "results": {
      "value": "results",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:118",
        "scripts/compliance/fake_test_scanner.py:141",
        "scripts/comprehensive_test_fixer.py:410",
        "scripts/iterative_test_fix_loop.py:86",
        "scripts/test_backend_optimized.py:142",
        "scripts/test_backend_optimized.py:203",
        "scripts/test_backend_optimized.py:274",
        "scripts/test_cors_implementation.py:211",
        "scripts/test_oauth_local.py:460",
        "scripts/test_websocket_cors_comprehensive.py:186"
      ]
    },
    "retry": {
      "value": "retry",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:411"
      ]
    },
    "retry_after": {
      "value": "retry_after",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:72",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:72",
        "netra_backend/app/services/realistic_test_data/models.py:116",
        "netra_backend/app/services/realistic_test_data/models.py:127",
        "auth_service/tests/auth-service-down-critical-scenarios.py:155"
      ]
    },
    "return window.dataLayer ? window.dataLayer.filter(item => \n            item.event && !['gtm.dom', 'gtm.load', 'gtm.js'].includes(item.event)\n        ) : [];": {
      "value": "return window.dataLayer ? window.dataLayer.filter(item => \n            item.event && !['gtm.dom', 'gtm.load', 'gtm.js'].includes(item.event)\n        ) : [];",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:27"
      ]
    },
    "return\\s*\\[\\s*\\{\\s*[\"\\']id[\"\\']\\s*:\\s*[\"\\']1[\"\\']": {
      "value": "return\\s*\\[\\s*\\{\\s*[\"\\']id[\"\\']\\s*:\\s*[\"\\']1[\"\\']",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:56"
      ]
    },
    "return\\s*\\{\\s*[\"\\']status[\"\\']\\s*:\\s*[\"\\']ok[\"\\']\\s*\\}": {
      "value": "return\\s*\\{\\s*[\"\\']status[\"\\']\\s*:\\s*[\"\\']ok[\"\\']\\s*\\}",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:58"
      ]
    },
    "return\\s*\\{\\s*[\"\\']test[\"\\']\\s*:\\s*[\"\\']data[\"\\']\\s*\\}": {
      "value": "return\\s*\\{\\s*[\"\\']test[\"\\']\\s*:\\s*[\"\\']data[\"\\']\\s*\\}",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:57"
      ]
    },
    "revenue_to_cost_ratio": {
      "value": "revenue_to_cost_ratio",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "review_assertion": {
      "value": "review_assertion",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:66"
      ]
    },
    "revocation_test_token_34": {
      "value": "revocation_test_token_34",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:183"
      ]
    },
    "revoked": {
      "value": "revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:243"
      ]
    },
    "rich": {
      "value": "rich",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1022"
      ]
    },
    "risk_assessment": {
      "value": "risk_assessment",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:36"
      ]
    },
    "risk_level": {
      "value": "risk_level",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:464",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:473"
      ]
    },
    "role": {
      "value": "role",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:64",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:73",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:87",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:115",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:146",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:182",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:220",
        "scripts/test_cold_start_e2e.py:349"
      ]
    },
    "role_assignment": {
      "value": "role_assignment",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:214"
      ]
    },
    "root": {
      "value": "root",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:114",
        "scripts/unified_test_config.py:162",
        "scripts/unified_test_config.py:171",
        "scripts/unified_test_config.py:180",
        "scripts/unified_test_config.py:319",
        "scripts/unified_test_config.py:400"
      ]
    },
    "route": {
      "value": "route",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:344",
        "scripts/test_cors_implementation.py:213"
      ]
    },
    "routes with": {
      "value": "routes with",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:146"
      ]
    },
    "routes_tested": {
      "value": "routes_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:209"
      ]
    },
    "rps": {
      "value": "rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:231"
      ]
    },
    "run": {
      "value": "run",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:119",
        "scripts/test_frontend.py:221",
        "scripts/test_frontend.py:223",
        "scripts/test_frontend.py:289",
        "scripts/test_frontend.py:300",
        "scripts/test_frontend.py:314",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:37",
        "scripts/test_frontend_simple.py:38",
        "scripts/test_frontend_simple.py:39"
      ]
    },
    "run.app": {
      "value": "run.app",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:319",
        "scripts/test_gtm_loading.py:111"
      ]
    },
    "run_": {
      "value": "run_",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:169"
      ]
    },
    "run_server.py": {
      "value": "run_server.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:279"
      ]
    },
    "runner": {
      "value": "runner",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:85",
        "scripts/unified_test_config.py:165",
        "scripts/unified_test_config.py:174",
        "scripts/unified_test_config.py:183"
      ]
    },
    "runners.py": {
      "value": "runners.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:114"
      ]
    },
    "running service(s):": {
      "value": "running service(s):",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:268"
      ]
    },
    "runs-on:": {
      "value": "runs-on:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:233",
        "scripts/test_workflows_with_act.py:236"
      ]
    },
    "s": {
      "value": "s",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:346",
        "auth_service/tests/auth-service-down-critical-scenarios.py:353",
        "auth_service/tests/auth-service-down-critical-scenarios.py:496",
        "scripts/test_backend.py:394",
        "scripts/test_backend.py:396",
        "scripts/test_service_startup.py:139",
        "scripts/test_service_startup.py:142",
        "scripts/test_staging_startup.py:209",
        "scripts/test_websocket_cors_comprehensive.py:96",
        "scripts/test_websocket_simple.py:37"
      ]
    },
    "s (limit:": {
      "value": "s (limit:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:206"
      ]
    },
    "s - no fallback mechanism implemented": {
      "value": "s - no fallback mechanism implemented",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:121"
      ]
    },
    "s of sleep calls. Consider optimizing with performance helpers.": {
      "value": "s of sleep calls. Consider optimizing with performance helpers.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:134"
      ]
    },
    "s of sleep calls. Consider using fast_test decorator or mocking time.sleep.": {
      "value": "s of sleep calls. Consider using fast_test decorator or mocking time.sleep.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:129"
      ]
    },
    "s)": {
      "value": "s)",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:97",
        "scripts/startup_test_executor.py:169",
        "scripts/startup_test_executor.py:261",
        "scripts/test_coordination_fixes.py:63",
        "scripts/test_coordination_fixes.py:65",
        "scripts/test_staging_deployment.py:95",
        "scripts/test_staging_deployment.py:118",
        "scripts/test_staging_deployment.py:139",
        "scripts/test_staging_startup.py:201",
        "scripts/test_staging_startup.py:206"
      ]
    },
    "s):": {
      "value": "s):",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70"
      ]
    },
    "s, should fail quickly with fallback": {
      "value": "s, should fail quickly with fallback",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:111"
      ]
    },
    "s] Message #": {
      "value": "s] Message #",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:152"
      ]
    },
    "savings_percentage": {
      "value": "savings_percentage",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:329",
        "scripts/test_data_validator_backup.py:400",
        "scripts/test_data_validator_backup.py:417"
      ]
    },
    "scan_timestamp": {
      "value": "scan_timestamp",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:259",
        "scripts/remove_test_stubs.py:309"
      ]
    },
    "scenario": {
      "value": "scenario",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:124"
      ]
    },
    "scheduler": {
      "value": "scheduler",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35"
      ]
    },
    "schema": {
      "value": "schema",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:340"
      ]
    },
    "scope": {
      "value": "scope",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:197",
        "auth_service/tests/factories/token_factory.py:220"
      ]
    },
    "score": {
      "value": "score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:641",
        "scripts/business_value_test_index.py:755",
        "scripts/real_service_test_metrics.py:70",
        "scripts/real_service_test_metrics.py:91"
      ]
    },
    "script_tag_found": {
      "value": "script_tag_found",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:18",
        "scripts/test_gtm_loading.py:41",
        "scripts/test_gtm_loading.py:60",
        "scripts/test_gtm_loading.py:121",
        "scripts/test_gtm_loading.py:144",
        "scripts/test_gtm_loading.py:157"
      ]
    },
    "scripts": {
      "value": "scripts",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:26",
        "scripts/standardize_l3_test_names.py:57",
        "scripts/test_frontend.py:524",
        "scripts/test_staging_simplified.py:62"
      ]
    },
    "scripts/dev_launcher.py": {
      "value": "scripts/dev_launcher.py",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:99",
        "scripts/start_test_services.py:107",
        "scripts/test_cold_start_e2e.py:116"
      ]
    },
    "scripts/verify_workflow_status.py": {
      "value": "scripts/verify_workflow_status.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:32",
        "scripts/test_verify_workflow.py:44",
        "scripts/test_verify_workflow.py:61",
        "scripts/test_verify_workflow_status.py:30",
        "scripts/test_verify_workflow_status_corrected.py:18"
      ]
    },
    "search": {
      "value": "search",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:30",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:189"
      ]
    },
    "seasonality": {
      "value": "seasonality",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:132"
      ]
    },
    "seconds": {
      "value": "seconds",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:125",
        "scripts/test_backend_optimized.py:329",
        "scripts/test_secret_manager_builder_critical.py:651",
        "scripts/test_secret_manager_builder_critical.py:652",
        "scripts/test_staging_auth_e2e.py:112",
        "scripts/unified_test_runner.py:514",
        "scripts/unified_test_runner.py:521"
      ]
    },
    "seconds\n\n✅ SOLUTION: SecretManagerBuilder with optimized loading\n   🚀 Single GCP call per service instead of multiple individual calls\n   💾 Intelligent caching and connection pooling\n   ⚡ Parallel secret loading for non-dependent secrets\n   📊 Built-in performance monitoring and alerting": {
      "value": "seconds\n\n✅ SOLUTION: SecretManagerBuilder with optimized loading\n   🚀 Single GCP call per service instead of multiple individual calls\n   💾 Intelligent caching and connection pooling\n   ⚡ Parallel secret loading for non-dependent secrets\n   📊 Built-in performance monitoring and alerting",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:663"
      ]
    },
    "secret": {
      "value": "secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:745"
      ]
    },
    "secret_manager": {
      "value": "secret_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:175"
      ]
    },
    "secrets": {
      "value": "secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:496",
        "scripts/test_secret_manager_debug.py:44",
        "scripts/test_secret_manager_debug.py:144"
      ]
    },
    "secrets_loading": {
      "value": "secrets_loading",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:39"
      ]
    },
    "sections completed": {
      "value": "sections completed",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:172"
      ]
    },
    "secure": {
      "value": "secure",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:157",
        "scripts/setup_staging_test_account.py:165"
      ]
    },
    "secure-staging-password-123": {
      "value": "secure-staging-password-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:94"
      ]
    },
    "secure_password": {
      "value": "secure_password",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:11",
        "scripts/compliance/test_limits_examples.py:31",
        "scripts/compliance/test_limits_examples.py:39",
        "scripts/compliance/test_limits_examples.py:57",
        "scripts/compliance/test_limits_examples.py:62"
      ]
    },
    "secure_websocket": {
      "value": "secure_websocket",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:125"
      ]
    },
    "security": {
      "value": "security",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:493",
        "scripts/auto_fix_test_violations.py:494",
        "scripts/autonomous_review/test_reviewer.py:217",
        "scripts/autonomous_review/test_reviewer.py:231",
        "scripts/autonomous_review/test_reviewer.py:232",
        "scripts/business_value_test_index.py:89",
        "scripts/business_value_test_index.py:423",
        "scripts/business_value_test_index.py:464",
        "scripts/setup_test_environment.py:111",
        "scripts/test_secret_manager_builder_critical.py:209"
      ]
    },
    "security violations": {
      "value": "security violations",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:765"
      ]
    },
    "security_breach": {
      "value": "security_breach",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:194"
      ]
    },
    "security_level": {
      "value": "security_level",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:272",
        "scripts/test_websocket_dev_mode.py:126"
      ]
    },
    "self": {
      "value": "self",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:200"
      ]
    },
    "self.": {
      "value": "self.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:291"
      ]
    },
    "self.assertEqual": {
      "value": "self.assertEqual",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:271"
      ]
    },
    "self\\.(\\w+)": {
      "value": "self\\.(\\w+)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:224"
      ]
    },
    "self\\\\.assertEqual\\\\((.*?),\\\\s*(.*?)\\\\)": {
      "value": "self\\\\.assertEqual\\\\((.*?),\\\\s*(.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:248"
      ]
    },
    "self\\\\.assertFalse\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertFalse\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:251"
      ]
    },
    "self\\\\.assertIsNone\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertIsNone\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:252"
      ]
    },
    "self\\\\.assertIsNotNone\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertIsNotNone\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:253"
      ]
    },
    "self\\\\.assertNotEqual\\\\((.*?),\\\\s*(.*?)\\\\)": {
      "value": "self\\\\.assertNotEqual\\\\((.*?),\\\\s*(.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:249"
      ]
    },
    "self\\\\.assertTrue\\\\((.*?)\\\\)": {
      "value": "self\\\\.assertTrue\\\\((.*?)\\\\)",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:250"
      ]
    },
    "server_startup": {
      "value": "server_startup",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:37",
        "scripts/test_websocket_dev_mode.py:72"
      ]
    },
    "service": {
      "value": "service",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:289",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:500",
        "auth_service/tests/factories/permission_factory.py:225",
        "scripts/auto_fix_test_sizes.py:367",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/test_websocket_dev_mode.py:125"
      ]
    },
    "service health check failed:": {
      "value": "service health check failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:213"
      ]
    },
    "service is healthy": {
      "value": "service is healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:206"
      ]
    },
    "service returned": {
      "value": "service returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:209"
      ]
    },
    "service unavailable": {
      "value": "service unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:96"
      ]
    },
    "service1": {
      "value": "service1",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:164",
        "scripts/test_coordination_fixes.py:176"
      ]
    },
    "service2": {
      "value": "service2",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:167",
        "scripts/test_coordination_fixes.py:177"
      ]
    },
    "service:auth_validate": {
      "value": "service:auth_validate",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:34"
      ]
    },
    "service:read": {
      "value": "service:read",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:108"
      ]
    },
    "service:session_create": {
      "value": "service:session_create",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:36"
      ]
    },
    "service:session_revoke": {
      "value": "service:session_revoke",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:37"
      ]
    },
    "service:user_lookup": {
      "value": "service:user_lookup",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:35"
      ]
    },
    "service:write": {
      "value": "service:write",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:108"
      ]
    },
    "service_discovery": {
      "value": "service_discovery",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:45"
      ]
    },
    "service_discovery         → test_09_service_discovery_timing_issues": {
      "value": "service_discovery         → test_09_service_discovery_timing_issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:395"
      ]
    },
    "service_registry": {
      "value": "service_registry",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:43"
      ]
    },
    "service_results": {
      "value": "service_results",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:426"
      ]
    },
    "service_unavailable": {
      "value": "service_unavailable",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:124",
        "scripts/unified_test_runner.py:595"
      ]
    },
    "services": {
      "value": "services",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:368",
        "scripts/compliance/demo_test_size_enforcement.py:68",
        "scripts/test_secret_manager_builder_critical.py:200",
        "scripts/test_secret_manager_builder_critical.py:494",
        "scripts/test_secret_manager_builder_critical.py:512",
        "scripts/test_secret_manager_builder_critical.py:525",
        "scripts/test_staging_deployment.py:28",
        "scripts/test_staging_deployment.py:91",
        "scripts/test_staging_login_automated.py:187",
        "scripts/test_staging_login_automated.py:204"
      ]
    },
    "services/test_synthetic_data_service_v3.py": {
      "value": "services/test_synthetic_data_service_v3.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:207"
      ]
    },
    "session": {
      "value": "session",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:36",
        "scripts/auto_fix_test_sizes.py:338",
        "scripts/standardize_l3_test_names.py:204"
      ]
    },
    "session\\.(?:add|commit|query)": {
      "value": "session\\.(?:add|commit|query)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:34"
      ]
    },
    "session_created": {
      "value": "session_created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:29"
      ]
    },
    "session_expired": {
      "value": "session_expired",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:30"
      ]
    },
    "session_id": {
      "value": "session_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:156",
        "auth_service/tests/test_oauth_state_validation.py:95",
        "auth_service/tests/test_oauth_state_validation.py:96",
        "auth_service/tests/test_oauth_state_validation.py:139",
        "auth_service/tests/test_oauth_state_validation.py:157",
        "auth_service/tests/test_oauth_state_validation.py:247",
        "auth_service/tests/test_oauth_state_validation.py:293",
        "auth_service/tests/test_session_security_cycles_36_40.py:205",
        "scripts/setup_staging_test_account.py:138"
      ]
    },
    "session_type": {
      "value": "session_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:157"
      ]
    },
    "sessions, got": {
      "value": "sessions, got",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:141"
      ]
    },
    "setUp": {
      "value": "setUp",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "setup": {
      "value": "setup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:640",
        "scripts/compliance/test_refactor_helper.py:210",
        "scripts/compliance/test_refactor_helper.py:211"
      ]
    },
    "setup_method": {
      "value": "setup_method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "setup_test_path": {
      "value": "setup_test_path",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:27",
        "scripts/check_test_import_order.py:33"
      ]
    },
    "setup_test_path()": {
      "value": "setup_test_path()",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_order.py:27"
      ]
    },
    "setup_test_path() not called": {
      "value": "setup_test_path() not called",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:52"
      ]
    },
    "setup_test_path\\(\\)\\n": {
      "value": "setup_test_path\\(\\)\\n",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:36"
      ]
    },
    "severities": {
      "value": "severities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:165",
        "scripts/compliance/fake_test_scanner.py:169",
        "scripts/compliance/fake_test_scanner.py:175",
        "scripts/compliance/fake_test_scanner.py:175",
        "scripts/compliance/fake_test_scanner.py:287"
      ]
    },
    "severity": {
      "value": "severity",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:290",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:431",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:483",
        "scripts/business_value_test_index.py:662",
        "scripts/business_value_test_index.py:670",
        "scripts/business_value_test_index.py:680",
        "scripts/business_value_test_index.py:760"
      ]
    },
    "severity:error": {
      "value": "severity:error",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:211"
      ]
    },
    "severity_breakdown": {
      "value": "severity_breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:261",
        "scripts/remove_test_stubs.py:315"
      ]
    },
    "share": {
      "value": "share",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:28"
      ]
    },
    "shared": {
      "value": "shared",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:36",
        "scripts/test_secret_manager_debug.py:139",
        "scripts/test_secret_manager_debug.py:143",
        "scripts/test_secret_manager_debug.py:147",
        "scripts/test_secret_manager_debug.py:151",
        "scripts/test_secret_manager_debug.py:158"
      ]
    },
    "shared-state-parameter": {
      "value": "shared-state-parameter",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:190"
      ]
    },
    "shared_secrets_tested": {
      "value": "shared_secrets_tested",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:416"
      ]
    },
    "shared_utilities": {
      "value": "shared_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:332",
        "scripts/compliance/test_refactor_helper.py:355",
        "scripts/compliance/test_refactor_helper.py:564"
      ]
    },
    "short": {
      "value": "short",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:341"
      ]
    },
    "should be refactored manually": {
      "value": "should be refactored manually",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:619"
      ]
    },
    "should-be-replaced": {
      "value": "should-be-replaced",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:426"
      ]
    },
    "should_allow_placeholders": {
      "value": "should_allow_placeholders",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:134",
        "scripts/test_secret_manager_builder_critical.py:148",
        "scripts/test_secret_manager_builder_critical.py:164",
        "scripts/test_secret_manager_builder_critical.py:178",
        "scripts/test_secret_manager_builder_critical.py:281",
        "scripts/test_secret_manager_builder_critical.py:356",
        "scripts/test_secret_manager_builder_critical.py:470"
      ]
    },
    "should_be_valid": {
      "value": "should_be_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:186",
        "scripts/test_database_url_builder_comprehensive.py:197",
        "scripts/test_database_url_builder_comprehensive.py:208",
        "scripts/test_database_url_builder_comprehensive.py:219",
        "scripts/test_database_url_builder_comprehensive.py:230",
        "scripts/test_database_url_builder_comprehensive.py:238"
      ]
    },
    "should_have_ssl": {
      "value": "should_have_ssl",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:111",
        "scripts/test_ssl_certificates_staging.py:116",
        "scripts/test_ssl_certificates_staging.py:148",
        "scripts/test_ssl_certificates_staging.py:150"
      ]
    },
    "side_effect =": {
      "value": "side_effect =",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:359"
      ]
    },
    "signature": {
      "value": "signature",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:90",
        "netra_backend/app/services/realistic_test_data/models.py:95",
        "netra_backend/app/services/realistic_test_data/models.py:100",
        "netra_backend/app/services/realistic_test_data/models.py:105"
      ]
    },
    "signup": {
      "value": "signup",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:356"
      ]
    },
    "similar": {
      "value": "similar",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:327",
        "scripts/analyze_test_overlap.py:359",
        "scripts/analyze_test_overlap.py:353",
        "scripts/analyze_test_overlap.py:383",
        "scripts/analyze_test_overlap.py:384",
        "scripts/analyze_test_overlap.py:531",
        "scripts/analyze_test_overlap.py:659"
      ]
    },
    "similarity": {
      "value": "similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:426",
        "scripts/analyze_test_overlap.py:578"
      ]
    },
    "similarity relationships": {
      "value": "similarity relationships",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:79"
      ]
    },
    "similarity_type": {
      "value": "similarity_type",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:635"
      ]
    },
    "simple": {
      "value": "simple",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:163",
        "netra_backend/app/agents/test_agent_initialization.py:167",
        "scripts/unified_test_runner.py:1022",
        "scripts/unified_test_runner.py:1023"
      ]
    },
    "site-packages": {
      "value": "site-packages",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:130",
        "scripts/compliance/project_test_validator.py:101",
        "scripts/compliance/real_test_requirements_enforcer.py:134",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/generate_test_audit.py:24",
        "scripts/test_exclusion_check.py:20"
      ]
    },
    "size": {
      "value": "size",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:321"
      ]
    },
    "sk-": {
      "value": "sk-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:250"
      ]
    },
    "sk-ant-prod-key-for-performance-test": {
      "value": "sk-ant-prod-key-for-performance-test",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:567"
      ]
    },
    "sk-ant-test-key": {
      "value": "sk-ant-test-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:22"
      ]
    },
    "sk-ant-test-key-for-production-deployment-123456789": {
      "value": "sk-ant-test-key-for-production-deployment-123456789",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:91"
      ]
    },
    "sk-test-": {
      "value": "sk-test-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:83"
      ]
    },
    "skip": {
      "value": "skip",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:166"
      ]
    },
    "skip_reason": {
      "value": "skip_reason",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:595"
      ]
    },
    "skipped": {
      "value": "skipped",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:357",
        "scripts/unified_test_runner.py:594",
        "scripts/unified_test_runner.py:648",
        "scripts/unified_test_runner.py:648",
        "scripts/unified_test_runner.py:829",
        "scripts/unified_test_runner.py:899"
      ]
    },
    "skipped tests": {
      "value": "skipped tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:288"
      ]
    },
    "skipped_tests": {
      "value": "skipped_tests",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:167"
      ]
    },
    "skipping all .env file loading (using GSM)": {
      "value": "skipping all .env file loading (using GSM)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:36"
      ]
    },
    "sleep": {
      "value": "sleep",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:60",
        "scripts/autonomous_review/test_reviewer.py:164"
      ]
    },
    "sleep(": {
      "value": "sleep(",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:281"
      ]
    },
    "sleep_calls": {
      "value": "sleep_calls",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:32",
        "scripts/optimize_test_performance.py:113"
      ]
    },
    "slow": {
      "value": "slow",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:99"
      ]
    },
    "slow tests to improve CI/CD speed": {
      "value": "slow tests to improve CI/CD speed",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:269"
      ]
    },
    "slow_patterns": {
      "value": "slow_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:44",
        "scripts/optimize_test_performance.py:58",
        "scripts/optimize_test_performance.py:113",
        "scripts/optimize_test_performance.py:139",
        "scripts/optimize_test_performance.py:148",
        "scripts/optimize_test_performance.py:279",
        "scripts/optimize_test_performance.py:298",
        "scripts/optimize_test_performance.py:396"
      ]
    },
    "smart_adaptive": {
      "value": "smart_adaptive",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1015"
      ]
    },
    "smoke": {
      "value": "smoke",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:24",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:31",
        "scripts/simple_test_fix_loop.py:18",
        "scripts/test_backend.py:35",
        "scripts/test_backend_optimized.py:83",
        "scripts/test_frontend.py:37",
        "scripts/test_frontend_simple.py:36",
        "scripts/test_frontend_simple.py:59",
        "scripts/test_frontend_simple.py:76"
      ]
    },
    "soak": {
      "value": "soak",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:101"
      ]
    },
    "socket": {
      "value": "socket",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:48"
      ]
    },
    "some_token": {
      "value": "some_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:108"
      ]
    },
    "source": {
      "value": "source",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:124",
        "scripts/test_redis_config_critical_failure.py:126",
        "scripts/test_redis_config_critical_failure.py:129",
        "scripts/test_redis_config_critical_failure.py:131",
        "scripts/test_redis_config_critical_failure.py:263",
        "scripts/test_redis_config_critical_failure.py:271",
        "scripts/test_redis_config_critical_failure.py:275",
        "scripts/test_redis_config_critical_failure.py:284",
        "scripts/test_redis_config_critical_failure.py:292",
        "scripts/test_redis_config_critical_failure.py:296"
      ]
    },
    "span_id": {
      "value": "span_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:60"
      ]
    },
    "spec.": {
      "value": "spec.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:99"
      ]
    },
    "specific_run_id": {
      "value": "specific_run_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:153"
      ]
    },
    "split_by_": {
      "value": "split_by_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:717"
      ]
    },
    "split_by_category": {
      "value": "split_by_category",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:441"
      ]
    },
    "split_by_class": {
      "value": "split_by_class",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:481"
      ]
    },
    "split_by_feature": {
      "value": "split_by_feature",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:514"
      ]
    },
    "splitting large file:": {
      "value": "splitting large file:",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:338"
      ]
    },
    "splitting_suggestions": {
      "value": "splitting_suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:495",
        "scripts/compliance/test_size_validator.py:498"
      ]
    },
    "sql error": {
      "value": "sql error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:377"
      ]
    },
    "sqlalchemy": {
      "value": "sqlalchemy",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:383",
        "scripts/analyze_test_mocks.py:36"
      ]
    },
    "sqlalchemy.create_engine": {
      "value": "sqlalchemy.create_engine",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:467",
        "auth_service/tests/test_auth_comprehensive.py:574"
      ]
    },
    "sqlite": {
      "value": "sqlite",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:93",
        "auth_service/tests/test_auth_comprehensive.py:385"
      ]
    },
    "sqlite+aiosqlite:///:memory:": {
      "value": "sqlite+aiosqlite:///:memory:",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:12",
        "scripts/test_auth_database_sessions.py:128",
        "scripts/test_auth_database_sessions.py:268",
        "scripts/test_auth_database_sessions.py:306"
      ]
    },
    "sqlite+aiosqlite:///test_auth.db": {
      "value": "sqlite+aiosqlite:///test_auth.db",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:42"
      ]
    },
    "sqlite:///test.db": {
      "value": "sqlite:///test.db",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:173",
        "scripts/test_backend_port_binding.py:125"
      ]
    },
    "src": {
      "value": "src",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:185"
      ]
    },
    "ssl": {
      "value": "ssl",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:377",
        "scripts/test_auth_database_sessions.py:97",
        "scripts/test_auth_database_sessions.py:258",
        "scripts/test_redis_config_critical_failure.py:323",
        "scripts/test_redis_config_critical_failure.py:323",
        "scripts/test_redis_config_critical_failure.py:328",
        "scripts/test_ssl_certificates_staging.py:143",
        "scripts/test_ssl_certificates_staging.py:144"
      ]
    },
    "ssl.create_default_context": {
      "value": "ssl.create_default_context",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:364"
      ]
    },
    "ssl_ca_certs": {
      "value": "ssl_ca_certs",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:325",
        "scripts/test_redis_config_critical_failure.py:325",
        "scripts/test_redis_config_critical_failure.py:328"
      ]
    },
    "ssl_cert_reqs": {
      "value": "ssl_cert_reqs",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:324",
        "scripts/test_redis_config_critical_failure.py:324",
        "scripts/test_redis_config_critical_failure.py:328"
      ]
    },
    "ssl_enabled": {
      "value": "ssl_enabled",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:266",
        "scripts/test_redis_config_critical_failure.py:287"
      ]
    },
    "ssl_status": {
      "value": "ssl_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:378",
        "auth_service/tests/auth-service-down-critical-scenarios.py:378"
      ]
    },
    "stable_with_noise": {
      "value": "stable_with_noise",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:105"
      ]
    },
    "staging": {
      "value": "staging",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:31",
        "auth_service/test_staging_db_connection.py:36",
        "auth_service/test_staging_db_connection.py:123",
        "auth_service/test_url_construction.py:32",
        "auth_service/test_url_construction.py:63",
        "auth_service/test_url_construction.py:189",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:56",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:112",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:170",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:219"
      ]
    },
    "staging-clickhouse-secure-password-production-grade": {
      "value": "staging-clickhouse-secure-password-production-grade",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:693"
      ]
    },
    "staging-clickhouse.netrasystems": {
      "value": "staging-clickhouse.netrasystems",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:99"
      ]
    },
    "staging-client-id.apps.googleusercontent.com": {
      "value": "staging-client-id.apps.googleusercontent.com",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:51",
        "scripts/test_oauth_dev_config.py:58"
      ]
    },
    "staging-fernet-key-32-chars-exactly-required-for-encryption": {
      "value": "staging-fernet-key-32-chars-exactly-required-for-encryption",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:692"
      ]
    },
    "staging-fernet-key-should-be-replaced": {
      "value": "staging-fernet-key-should-be-replaced",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:428"
      ]
    },
    "staging-jwt-secret-key-should-be-replaced": {
      "value": "staging-jwt-secret-key-should-be-replaced",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:427"
      ]
    },
    "staging-jwt-secret-minimum-32-chars-required-for-security": {
      "value": "staging-jwt-secret-minimum-32-chars-required-for-security",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:689"
      ]
    },
    "staging-jwt-secret-should-be-from-secret-manager": {
      "value": "staging-jwt-secret-should-be-from-secret-manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:143"
      ]
    },
    "staging-postgres-password-from-gcp": {
      "value": "staging-postgres-password-from-gcp",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:144"
      ]
    },
    "staging-postgres-secure-password-with-special-chars!123": {
      "value": "staging-postgres-secure-password-with-special-chars!123",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:690"
      ]
    },
    "staging-quick": {
      "value": "staging-quick",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:98"
      ]
    },
    "staging-real": {
      "value": "staging-real",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:104"
      ]
    },
    "staging-redis-password-from-gcp": {
      "value": "staging-redis-password-from-gcp",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:145"
      ]
    },
    "staging-redis-secure-password-minimum-length": {
      "value": "staging-redis-secure-password-minimum-length",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:691"
      ]
    },
    "staging-secret-345678": {
      "value": "staging-secret-345678",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:52",
        "scripts/test_oauth_dev_config.py:59"
      ]
    },
    "staging-shared-postgres.c7vdhks7dj2k.us-central1.gcp.cloud.sql.googleapis.com": {
      "value": "staging-shared-postgres.c7vdhks7dj2k.us-central1.gcp.cloud.sql.googleapis.com",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:92"
      ]
    },
    "staging-test-secret": {
      "value": "staging-test-secret",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:116"
      ]
    },
    "staging-workflows": {
      "value": "staging-workflows",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:28"
      ]
    },
    "staging_auth": {
      "value": "staging_auth",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:161"
      ]
    },
    "staging_bypass": {
      "value": "staging_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:105"
      ]
    },
    "staging_login_test_report.json": {
      "value": "staging_login_test_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:380"
      ]
    },
    "staging_refresh_token_format": {
      "value": "staging_refresh_token_format",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:294"
      ]
    },
    "staging_session": {
      "value": "staging_session",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:153"
      ]
    },
    "staging_session=": {
      "value": "staging_session=",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:124"
      ]
    },
    "staging_test_credentials.json": {
      "value": "staging_test_credentials.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:121"
      ]
    },
    "staging_validation_": {
      "value": "staging_validation_",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_deployment.py:225"
      ]
    },
    "standalone": {
      "value": "standalone",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:473"
      ]
    },
    "standard": {
      "value": "standard",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:112",
        "scripts/compliance/test_refactor_helper.py:132",
        "scripts/test_service_startup.py:32"
      ]
    },
    "start": {
      "value": "start",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:157",
        "scripts/manage_test_services.py:194"
      ]
    },
    "start_line": {
      "value": "start_line",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:59"
      ]
    },
    "start_time": {
      "value": "start_time",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:18",
        "scripts/real_service_test_metrics.py:85",
        "scripts/test_coordination_fixes.py:69"
      ]
    },
    "startup or login or websocket": {
      "value": "startup or login or websocket",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:237"
      ]
    },
    "startup.test": {
      "value": "startup.test",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:143"
      ]
    },
    "startup_timeout": {
      "value": "startup_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:44",
        "scripts/test_cold_start_e2e.py:148"
      ]
    },
    "state": {
      "value": "state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:208",
        "auth_service/tests/test_auth_comprehensive.py:209",
        "auth_service/tests/test_auth_comprehensive.py:252",
        "auth_service/tests/test_oauth_state_validation.py:243"
      ]
    },
    "statistics": {
      "value": "statistics",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:62",
        "scripts/optimize_test_performance.py:75",
        "scripts/optimize_test_performance.py:104"
      ]
    },
    "status": {
      "value": "status",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:45",
        "netra_backend/app/agents/test_agent_initialization.py:161",
        "auth_service/tests/auth-service-down-critical-scenarios.py:191",
        "auth_service/tests/test_auth_comprehensive.py:295",
        "auth_service/tests/test_auth_comprehensive.py:456",
        "scripts/fix_test_batch.py:248",
        "scripts/fix_test_batch.py:250",
        "scripts/fix_test_batch.py:263",
        "scripts/fix_test_batch.py:284",
        "scripts/fix_test_batch.py:309"
      ]
    },
    "status_code": {
      "value": "status_code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:279",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "auth_service/tests/auth-service-down-critical-scenarios.py:294",
        "auth_service/tests/auth-service-down-critical-scenarios.py:306",
        "auth_service/tests/utils/assertion_helpers.py:165",
        "auth_service/tests/utils/assertion_helpers.py:166",
        "scripts/debug_cors_test.py:23",
        "scripts/debug_cors_test.py:37",
        "scripts/debug_cors_test.py:76"
      ]
    },
    "stderr": {
      "value": "stderr",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:643"
      ]
    },
    "stdout": {
      "value": "stdout",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:642"
      ]
    },
    "stop": {
      "value": "stop",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:115",
        "scripts/manage_test_services.py:170",
        "scripts/manage_test_services.py:196"
      ]
    },
    "store": {
      "value": "store",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:33"
      ]
    },
    "store_true": {
      "value": "store_true",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:234",
        "scripts/apply_fast_test_decorators.py:136",
        "scripts/apply_fast_test_decorators.py:137",
        "scripts/auto_fix_test_sizes.py:718",
        "scripts/auto_fix_test_sizes.py:724",
        "scripts/auto_fix_test_violations.py:919",
        "scripts/auto_fix_test_violations.py:921",
        "scripts/auto_fix_test_violations.py:923",
        "scripts/auto_fix_test_violations.py:929",
        "scripts/auto_fix_test_violations.py:931"
      ]
    },
    "strategies": {
      "value": "strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:92",
        "scripts/compliance/demo_test_size_enforcement.py:94",
        "scripts/compliance/demo_test_size_enforcement.py:95",
        "scripts/compliance/test_refactor_helper.py:106",
        "scripts/compliance/test_refactor_helper.py:710",
        "scripts/compliance/test_refactor_helper.py:714",
        "scripts/compliance/test_refactor_helper.py:729"
      ]
    },
    "strategy": {
      "value": "strategy",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:589",
        "scripts/compliance/test_size_validator.py:398"
      ]
    },
    "stream": {
      "value": "stream",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:92"
      ]
    },
    "stress": {
      "value": "stress",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:100"
      ]
    },
    "structural_similarity": {
      "value": "structural_similarity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:374",
        "scripts/analyze_test_overlap.py:631"
      ]
    },
    "structure": {
      "value": "structure",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:495",
        "scripts/test_data_validator_backup.py:229",
        "scripts/test_data_validator_backup.py:246"
      ]
    },
    "stub": {
      "value": "stub",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:238",
        "scripts/comprehensive_test_fixer.py:216"
      ]
    },
    "sub": {
      "value": "sub",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:36",
        "auth_service/tests/factories/token_factory.py:132",
        "auth_service/tests/factories/token_factory.py:248",
        "auth_service/tests/integration/test_refresh_integration.py:229",
        "auth_service/tests/integration/test_refresh_integration.py:355",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:29",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:41",
        "auth_service/tests/unit/test_refresh_endpoint.py:170",
        "auth_service/tests/unit/test_refresh_endpoint.py:183",
        "auth_service/tests/unit/test_refresh_endpoint.py:203"
      ]
    },
    "subject": {
      "value": "subject",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:77"
      ]
    },
    "subprocess\\.": {
      "value": "subprocess\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:223"
      ]
    },
    "subprotocols": {
      "value": "subprotocols",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:28",
        "scripts/test_websocket_connection.py:36",
        "scripts/test_websocket_connection.py:44",
        "scripts/test_websocket_connection.py:53",
        "scripts/test_websocket_connection.py:63",
        "scripts/test_websocket_connection.py:64",
        "scripts/test_websocket_connection.py:64"
      ]
    },
    "success": {
      "value": "success",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:67",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:106",
        "auth_service/tests/auth-service-down-critical-scenarios.py:281",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:286",
        "auth_service/tests/auth-service-down-critical-scenarios.py:293",
        "auth_service/tests/auth-service-down-critical-scenarios.py:295",
        "auth_service/tests/factories/audit_factory.py:53",
        "auth_service/tests/factories/audit_factory.py:176",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:242"
      ]
    },
    "success_count": {
      "value": "success_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:210",
        "scripts/test_backend_optimized.py:268",
        "scripts/test_backend_optimized.py:335"
      ]
    },
    "success_rate": {
      "value": "success_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:157",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "scripts/batch_fix_and_test.py:145",
        "scripts/test_backend_optimized.py:211",
        "scripts/test_backend_optimized.py:233",
        "scripts/test_backend_optimized.py:233",
        "scripts/test_backend_optimized.py:269",
        "scripts/test_backend_optimized.py:336",
        "scripts/test_backend_optimized.py:438",
        "scripts/test_backend_optimized.py:440"
      ]
    },
    "successful validations": {
      "value": "successful validations",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:275"
      ]
    },
    "successful_requests": {
      "value": "successful_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "suggest": {
      "value": "suggest",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:677",
        "scripts/compliance/test_refactor_helper.py:712"
      ]
    },
    "suggested_fixes": {
      "value": "suggested_fixes",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:292"
      ]
    },
    "suggestion": {
      "value": "suggestion",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:656"
      ]
    },
    "suggestions": {
      "value": "suggestions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:82"
      ]
    },
    "summary": {
      "value": "summary",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:408",
        "scripts/analyze_test_mocks.py:191",
        "scripts/analyze_test_overlap.py:347",
        "scripts/analyze_test_overlap.py:366",
        "scripts/analyze_test_overlap.py:442",
        "scripts/analyze_test_overlap.py:444",
        "scripts/analyze_test_overlap.py:449",
        "scripts/analyze_test_overlap.py:451",
        "scripts/analyze_test_overlap.py:470",
        "scripts/analyze_test_overlap.py:523"
      ]
    },
    "sync@example.com": {
      "value": "sync@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:64"
      ]
    },
    "syntax error": {
      "value": "syntax error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:382"
      ]
    },
    "syntax errors remain - manual intervention may be needed": {
      "value": "syntax errors remain - manual intervention may be needed",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:295"
      ]
    },
    "syntax errors remain:": {
      "value": "syntax errors remain:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_syntax_errors.py:264"
      ]
    },
    "syntax_error": {
      "value": "syntax_error",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:141",
        "scripts/compliance/real_test_requirements_enforcer.py:200",
        "scripts/compliance/real_test_validator.py:96"
      ]
    },
    "syntax_valid": {
      "value": "syntax_valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:307",
        "scripts/test_workflows_with_act.py:329",
        "scripts/test_workflows_with_act.py:345"
      ]
    },
    "sys": {
      "value": "sys",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "sys.path": {
      "value": "sys.path",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:153"
      ]
    },
    "system": {
      "value": "system",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:213"
      ]
    },
    "system:manage_settings": {
      "value": "system:manage_settings",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:30"
      ]
    },
    "system:view_logs": {
      "value": "system:view_logs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:29"
      ]
    },
    "system:view_status": {
      "value": "system:view_status",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:187"
      ]
    },
    "system_message": {
      "value": "system_message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:44"
      ]
    },
    "table": {
      "value": "table",
      "category": "test_literals",
      "locations": [
        "scripts/manage_test_services.py:102",
        "scripts/test_cors.py:434",
        "scripts/test_cors.py:434"
      ]
    },
    "table does not exist": {
      "value": "table does not exist",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:380"
      ]
    },
    "table_output": {
      "value": "table_output",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:138"
      ]
    },
    "table_output_format": {
      "value": "table_output_format",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:161"
      ]
    },
    "target": {
      "value": "target",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:105",
        "scripts/analyze_test_mocks.py:126",
        "scripts/analyze_test_mocks.py:159",
        "scripts/analyze_test_mocks.py:181",
        "scripts/analyze_test_mocks.py:182"
      ]
    },
    "target_duration": {
      "value": "target_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:56",
        "scripts/test_backend_optimized.py:62",
        "scripts/test_backend_optimized.py:68",
        "scripts/test_backend_optimized.py:74",
        "scripts/test_backend_optimized.py:80",
        "scripts/test_backend_optimized.py:90",
        "scripts/test_backend_optimized.py:99",
        "scripts/test_backend_optimized.py:167",
        "scripts/test_backend_optimized.py:167"
      ]
    },
    "target_test": {
      "value": "target_test",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:124"
      ]
    },
    "tax_season": {
      "value": "tax_season",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "team_collaboration": {
      "value": "team_collaboration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:101",
        "scripts/business_value_test_index.py:422",
        "scripts/business_value_test_index.py:496"
      ]
    },
    "team|collaboration|sharing|permissions": {
      "value": "team|collaboration|sharing|permissions",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:101"
      ]
    },
    "tearDown": {
      "value": "tearDown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "teardown": {
      "value": "teardown",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "teardown_method": {
      "value": "teardown_method",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:210"
      ]
    },
    "tempfile\\.": {
      "value": "tempfile\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:225"
      ]
    },
    "test": {
      "value": "test",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:11",
        "auth_service/tests/conftest.py:33",
        "auth_service/tests/test_auth_comprehensive.py:57",
        "auth_service/tests/test_auth_comprehensive.py:64",
        "auth_service/tests/test_auth_comprehensive.py:534",
        "scripts/analyze_test_mocks.py:149",
        "scripts/auto_fix_test_sizes.py:494",
        "scripts/auto_fix_test_sizes.py:507",
        "scripts/auto_fix_test_sizes.py:513",
        "scripts/autonomous_review/test_reviewer.py:75"
      ]
    },
    "test categories passing": {
      "value": "test categories passing",
      "category": "test_literals",
      "locations": [
        "scripts/final_test_status_check.py:134"
      ]
    },
    "test directories** identified\n- **": {
      "value": "test directories** identified\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:160"
      ]
    },
    "test files": {
      "value": "test files",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:45",
        "scripts/autonomous_review/test_reviewer.py:181",
        "scripts/compliance/test_size_validator.py:73",
        "scripts/fix_all_test_issues.py:217",
        "scripts/fix_test_syntax_errors.py:236",
        "scripts/generate_test_audit.py:176"
      ]
    },
    "test files are already failing!": {
      "value": "test files are already failing!",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:723"
      ]
    },
    "test files for category '": {
      "value": "test files for category '",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:316"
      ]
    },
    "test files to check": {
      "value": "test files to check",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:144"
      ]
    },
    "test files to validate...": {
      "value": "test files to validate...",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:83"
      ]
    },
    "test files** across the project (excluding dependencies)\n- **": {
      "value": "test files** across the project (excluding dependencies)\n- **",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:158"
      ]
    },
    "test files, found": {
      "value": "test files, found",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718"
      ]
    },
    "test files. Consider using mock LLM responses for faster testing.": {
      "value": "test files. Consider using mock LLM responses for faster testing.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:151"
      ]
    },
    "test files...": {
      "value": "test files...",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:169"
      ]
    },
    "test files:": {
      "value": "test files:",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:82"
      ]
    },
    "test functions from": {
      "value": "test functions from",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:75"
      ]
    },
    "test quality issues": {
      "value": "test quality issues",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:257"
      ]
    },
    "test request": {
      "value": "test request",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:116"
      ]
    },
    "test requirement violations:": {
      "value": "test requirement violations:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:117"
      ]
    },
    "test stubs in production code": {
      "value": "test stubs in production code",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:48",
        "scripts/ci/check_test_stubs.py:61"
      ]
    },
    "test(": {
      "value": "test(",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:156"
      ]
    },
    "test(s) failed": {
      "value": "test(s) failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:428"
      ]
    },
    "test(s) failed. WebSocket CORS may need adjustment.": {
      "value": "test(s) failed. WebSocket CORS may need adjustment.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:312"
      ]
    },
    "test*": {
      "value": "test*",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:72"
      ]
    },
    "test*.py": {
      "value": "test*.py",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:41",
        "scripts/generate_test_audit.py:95"
      ]
    },
    "test-": {
      "value": "test-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:127",
        "scripts/setup_test_environment.py:250",
        "scripts/setup_test_environment.py:252",
        "scripts/setup_test_environment.py:258"
      ]
    },
    "test-access-token": {
      "value": "test-access-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:260"
      ]
    },
    "test-act-simple.yml": {
      "value": "test-act-simple.yml",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:284"
      ]
    },
    "test-agent": {
      "value": "test-agent",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:106"
      ]
    },
    "test-api-key": {
      "value": "test-api-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:84",
        "scripts/test_backend.py:90",
        "scripts/test_backend.py:91"
      ]
    },
    "test-auth-code-12345": {
      "value": "test-auth-code-12345",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:62"
      ]
    },
    "test-authorization-code": {
      "value": "test-authorization-code",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:492"
      ]
    },
    "test-branch": {
      "value": "test-branch",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:191"
      ]
    },
    "test-browser-user": {
      "value": "test-browser-user",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:139"
      ]
    },
    "test-clickhouse-password-for-integration-testing": {
      "value": "test-clickhouse-password-for-integration-testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:241"
      ]
    },
    "test-client-id": {
      "value": "test-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:220",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:482",
        "auth_service/tests/test_oauth_state_validation.py:85",
        "auth_service/tests/test_oauth_state_validation.py:108",
        "auth_service/tests/test_oauth_state_validation.py:152",
        "auth_service/tests/test_oauth_state_validation.py:171",
        "auth_service/tests/test_oauth_state_validation.py:233",
        "scripts/setup_staging_test_account.py:65"
      ]
    },
    "test-client-secret": {
      "value": "test-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:221"
      ]
    },
    "test-code-verifier-1234567890abcdef": {
      "value": "test-code-verifier-1234567890abcdef",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:113"
      ]
    },
    "test-env": {
      "value": "test-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:189"
      ]
    },
    "test-fernet-key-32-chars-exactly": {
      "value": "test-fernet-key-32-chars-exactly",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:21"
      ]
    },
    "test-fernet-key-for-testing-only-base64encode=": {
      "value": "test-fernet-key-for-testing-only-base64encode=",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:83"
      ]
    },
    "test-gemini-key-from-env": {
      "value": "test-gemini-key-from-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:53",
        "scripts/test_staging_config.py:112"
      ]
    },
    "test-google-client": {
      "value": "test-google-client",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:92"
      ]
    },
    "test-google-client-id": {
      "value": "test-google-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:202"
      ]
    },
    "test-google-client-id-for-integration-testing": {
      "value": "test-google-client-id-for-integration-testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:236"
      ]
    },
    "test-google-client-secret-for-integration-testing": {
      "value": "test-google-client-secret-for-integration-testing",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:237"
      ]
    },
    "test-google-id": {
      "value": "test-google-id",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:58"
      ]
    },
    "test-google-id-": {
      "value": "test-google-id-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:47"
      ]
    },
    "test-google-secret": {
      "value": "test-google-secret",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:93"
      ]
    },
    "test-jti": {
      "value": "test-jti",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:233"
      ]
    },
    "test-jwt-key-from-env": {
      "value": "test-jwt-key-from-env",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_config.py:54",
        "scripts/test_staging_config.py:127"
      ]
    },
    "test-jwt-secret-key": {
      "value": "test-jwt-secret-key",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:18"
      ]
    },
    "test-jwt-secret-key-for-integration-testing-must-be-32-chars-minimum": {
      "value": "test-jwt-secret-key-for-integration-testing-must-be-32-chars-minimum",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:238"
      ]
    },
    "test-jwt-secret-key-that-is-long-enough-for-testing-purposes": {
      "value": "test-jwt-secret-key-that-is-long-enough-for-testing-purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:19"
      ]
    },
    "test-nonce-67890": {
      "value": "test-nonce-67890",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:74"
      ]
    },
    "test-postgres-password": {
      "value": "test-postgres-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:19"
      ]
    },
    "test-queue": {
      "value": "test-queue",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:105"
      ]
    },
    "test-redis-password": {
      "value": "test-redis-password",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:20"
      ]
    },
    "test-refresh-": {
      "value": "test-refresh-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:76"
      ]
    },
    "test-related process(es):": {
      "value": "test-related process(es):",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:106"
      ]
    },
    "test-secret": {
      "value": "test-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:86",
        "auth_service/tests/test_oauth_state_validation.py:109",
        "auth_service/tests/test_oauth_state_validation.py:153",
        "auth_service/tests/test_oauth_state_validation.py:172",
        "auth_service/tests/test_oauth_state_validation.py:234",
        "scripts/fix_authentication_test_tokens.py:36",
        "scripts/test_jwt_fix.py:13"
      ]
    },
    "test-secret-key-for-staging": {
      "value": "test-secret-key-for-staging",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:71"
      ]
    },
    "test-secret-key-for-testing-only-must-be-at-least-32-chars": {
      "value": "test-secret-key-for-testing-only-must-be-at-least-32-chars",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:82"
      ]
    },
    "test-service": {
      "value": "test-service",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:106",
        "scripts/test_log_introspection.py:86"
      ]
    },
    "test-service-secret-for-cross-service-auth-32-chars-minimum-length": {
      "value": "test-service-secret-for-cross-service-auth-32-chars-minimum-length",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:239"
      ]
    },
    "test-session": {
      "value": "test-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:171"
      ]
    },
    "test-session-": {
      "value": "test-session-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:134"
      ]
    },
    "test-session-123": {
      "value": "test-session-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:35"
      ]
    },
    "test-staging-client-id": {
      "value": "test-staging-client-id",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:45",
        "auth_service/test_url_construction.py:46"
      ]
    },
    "test-staging-client-secret": {
      "value": "test-staging-client-secret",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:46",
        "auth_service/test_url_construction.py:47"
      ]
    },
    "test-staging-jwt-secret-key-12345678901234567890": {
      "value": "test-staging-jwt-secret-key-12345678901234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:43",
        "auth_service/test_url_construction.py:44"
      ]
    },
    "test-staging-service-secret-12345678901234567890": {
      "value": "test-staging-service-secret-12345678901234567890",
      "category": "test_literals",
      "locations": [
        "auth_service/test_actual_staging_credentials.py:42",
        "auth_service/test_url_construction.py:43"
      ]
    },
    "test-state": {
      "value": "test-state",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:438",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:493"
      ]
    },
    "test-token": {
      "value": "test-token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:115"
      ]
    },
    "test-token-123": {
      "value": "test-token-123",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:85"
      ]
    },
    "test-token-no-redis": {
      "value": "test-token-no-redis",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:443"
      ]
    },
    "test-token-server-error": {
      "value": "test-token-server-error",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:144"
      ]
    },
    "test-token-when-service-down": {
      "value": "test-token-when-service-down",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:99"
      ]
    },
    "test-url": {
      "value": "test-url",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:232"
      ]
    },
    "test-user": {
      "value": "test-user",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:229",
        "auth_service/tests/integration/test_refresh_integration.py:372",
        "auth_service/tests/integration/test_refresh_integration.py:375",
        "auth_service/tests/integration/test_refresh_integration.py:396",
        "auth_service/tests/unit/test_refresh_endpoint.py:190",
        "auth_service/tests/unit/test_refresh_endpoint.py:203",
        "auth_service/tests/unit/test_refresh_endpoint.py:227",
        "auth_service/tests/unit/test_refresh_endpoint.py:239",
        "scripts/fix_authentication_test_tokens.py:53",
        "scripts/test_jwt_fix.py:30"
      ]
    },
    "test-user-": {
      "value": "test-user-",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:88"
      ]
    },
    "test-user-123": {
      "value": "test-user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:134",
        "auth_service/tests/test_auth_comprehensive.py:151",
        "auth_service/tests/unit/test_refresh_endpoint.py:157",
        "auth_service/tests/unit/test_refresh_endpoint.py:178"
      ]
    },
    "test.agent@staging.netrasystems.ai": {
      "value": "test.agent@staging.netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:107",
        "scripts/test_staging_login_automated.py:54"
      ]
    },
    "test/repo": {
      "value": "test/repo",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow.py:44",
        "scripts/test_verify_workflow.py:62",
        "scripts/test_verify_workflow_status.py:90",
        "scripts/test_verify_workflow_status.py:97",
        "scripts/test_verify_workflow_status_corrected.py:97",
        "scripts/test_verify_workflow_status_corrected.py:106"
      ]
    },
    "test1": {
      "value": "test1",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:370",
        "scripts/analyze_test_overlap.py:424",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:591",
        "scripts/analyze_test_overlap.py:606"
      ]
    },
    "test123": {
      "value": "test123",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:58"
      ]
    },
    "test123456": {
      "value": "test123456",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:49"
      ]
    },
    "test1_category": {
      "value": "test1_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:625"
      ]
    },
    "test1_complexity": {
      "value": "test1_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:638"
      ]
    },
    "test1_file": {
      "value": "test1_file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:623"
      ]
    },
    "test1_lines": {
      "value": "test1_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:636"
      ]
    },
    "test1_name": {
      "value": "test1_name",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:624"
      ]
    },
    "test2": {
      "value": "test2",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:371",
        "scripts/analyze_test_overlap.py:425",
        "scripts/analyze_test_overlap.py:578",
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:607"
      ]
    },
    "test2_category": {
      "value": "test2_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:628"
      ]
    },
    "test2_complexity": {
      "value": "test2_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:639"
      ]
    },
    "test2_file": {
      "value": "test2_file",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:626"
      ]
    },
    "test2_lines": {
      "value": "test2_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:637"
      ]
    },
    "test2_name": {
      "value": "test2_name",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:627"
      ]
    },
    "test@example.com": {
      "value": "test@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:167",
        "auth_service/tests/integration/test_refresh_integration.py:373",
        "auth_service/tests/test_auth_comprehensive.py:135",
        "auth_service/tests/test_auth_comprehensive.py:340",
        "auth_service/tests/test_auth_comprehensive.py:396",
        "auth_service/tests/test_auth_comprehensive.py:419",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:26",
        "auth_service/tests/test_oauth_state_validation.py:127",
        "auth_service/tests/unit/test_refresh_endpoint.py:191",
        "scripts/compliance/test_limits_examples.py:11"
      ]
    },
    "test@netrasystems.ai": {
      "value": "test@netrasystems.ai",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:48"
      ]
    },
    "test\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]": {
      "value": "test\\s*\\(\\s*[\\'\"]([^\\'\"]*)[\\'\"]",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:420"
      ]
    },
    "test_": {
      "value": "test_",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/factory_status/metrics_test_coverage.py:116",
        "netra_backend/app/services/factory_status/test_coverage_calculator.py:121",
        "scripts/analyze_test_overlap.py:98",
        "scripts/analyze_test_overlap.py:123",
        "scripts/auto_fix_test_sizes.py:103",
        "scripts/auto_fix_test_sizes.py:448",
        "scripts/auto_fix_test_violations.py:106",
        "scripts/auto_fix_test_violations.py:183",
        "scripts/autonomous_review/test_generator.py:34",
        "scripts/autonomous_review/test_generator.py:86"
      ]
    },
    "test_(\\w+)_": {
      "value": "test_(\\w+)_",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:527"
      ]
    },
    "test_*.py": {
      "value": "test_*.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:141",
        "scripts/align_test_imports.py:70",
        "scripts/align_test_imports.py:75",
        "scripts/apply_fast_test_decorators.py:164",
        "scripts/autonomous_review/test_reviewer.py:139",
        "scripts/autonomous_review/test_reviewer.py:221",
        "scripts/check_test_import_order.py:65",
        "scripts/compliance/test_limits_checker.py:56",
        "scripts/compliance/test_size_validator.py:143",
        "scripts/fix_test_import_order.py:90"
      ]
    },
    "test_.*?(\\w+)_\\w+$": {
      "value": "test_.*?(\\w+)_\\w+$",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:528"
      ]
    },
    "test_.*_e2e|e2e_test_|TestE2E|test_end_to_end": {
      "value": "test_.*_e2e|e2e_test_|TestE2E|test_end_to_end",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:86"
      ]
    },
    "test_.*_integration|integration_test_|TestIntegration": {
      "value": "test_.*_integration|integration_test_|TestIntegration",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:85"
      ]
    },
    "test_.*_load|load_test_|TestLoad": {
      "value": "test_.*_load|load_test_|TestLoad",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:90"
      ]
    },
    "test_.*_performance|performance_test_|TestPerformance|test_.*_perf": {
      "value": "test_.*_performance|performance_test_|TestPerformance|test_.*_perf",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:88"
      ]
    },
    "test_.*_real_llm|real_llm_test_|with_real_llm|@real_llm|@pytest\\.mark\\.real_llm": {
      "value": "test_.*_real_llm|real_llm_test_|with_real_llm|@real_llm|@pytest\\.mark\\.real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:87"
      ]
    },
    "test_.*_security|security_test_|TestSecurity": {
      "value": "test_.*_security|security_test_|TestSecurity",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:89"
      ]
    },
    "test_.*_unit|unit_test_|TestUnit": {
      "value": "test_.*_unit|unit_test_|TestUnit",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:84"
      ]
    },
    "test_agent": {
      "value": "test_agent",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:51"
      ]
    },
    "test_agent_metrics_collection.py": {
      "value": "test_agent_metrics_collection.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:152"
      ]
    },
    "test_agent_priority_queue.py": {
      "value": "test_agent_priority_queue.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:151"
      ]
    },
    "test_backend": {
      "value": "test_backend",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_categories.py": {
      "value": "test_categories.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:204"
      ]
    },
    "test_categorization.json": {
      "value": "test_categorization.json",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:20"
      ]
    },
    "test_config.py": {
      "value": "test_config.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:215",
        "scripts/align_test_imports.py:233"
      ]
    },
    "test_configs": {
      "value": "test_configs",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:66",
        "scripts/generate_test_audit.py:92",
        "scripts/generate_test_audit.py:190",
        "scripts/generate_test_audit.py:210",
        "scripts/generate_test_audit.py:211"
      ]
    },
    "test_connection": {
      "value": "test_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:91"
      ]
    },
    "test_count": {
      "value": "test_count",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:209",
        "scripts/test_backend_optimized.py:234",
        "scripts/test_backend_optimized.py:267",
        "scripts/test_backend_optimized.py:334",
        "scripts/unified_test_runner.py:645"
      ]
    },
    "test_deployment_edge_cases.py": {
      "value": "test_deployment_edge_cases.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:148"
      ]
    },
    "test_details": {
      "value": "test_details",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:211"
      ]
    },
    "test_dir": {
      "value": "test_dir",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:163",
        "scripts/unified_test_config.py:172",
        "scripts/unified_test_config.py:181",
        "scripts/unified_test_config.py:341",
        "scripts/unified_test_config.py:396",
        "scripts/unified_test_config.py:407",
        "scripts/unified_test_config.py:408",
        "scripts/unified_test_runner.py:105",
        "scripts/unified_test_runner.py:111",
        "scripts/unified_test_runner.py:117"
      ]
    },
    "test_directories": {
      "value": "test_directories",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:63",
        "scripts/generate_test_audit.py:76",
        "scripts/generate_test_audit.py:147",
        "scripts/generate_test_audit.py:189",
        "scripts/generate_test_audit.py:197",
        "scripts/generate_test_audit.py:226",
        "scripts/generate_test_audit.py:282"
      ]
    },
    "test_discovery.py": {
      "value": "test_discovery.py",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:314",
        "scripts/align_test_imports.py:338"
      ]
    },
    "test_email": {
      "value": "test_email",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:45"
      ]
    },
    "test_failures": {
      "value": "test_failures",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:28"
      ]
    },
    "test_file": {
      "value": "test_file",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:255"
      ]
    },
    "test_file_size": {
      "value": "test_file_size",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:42",
        "scripts/compliance/test_limits_checker.py:108",
        "scripts/compliance/test_violations_reporter.py:30"
      ]
    },
    "test_fix_results_": {
      "value": "test_fix_results_",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:22"
      ]
    },
    "test_framework": {
      "value": "test_framework",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:32",
        "scripts/align_test_imports.py:215",
        "scripts/align_test_imports.py:314",
        "scripts/business_value_test_index.py:123",
        "scripts/compliance/test_size_validator.py:131",
        "scripts/generate_test_audit.py:121",
        "scripts/standardize_l3_test_names.py:58",
        "scripts/unified_test_config.py:14",
        "scripts/unified_test_runner.py:80",
        "scripts/validate_llm_test_models.py:46"
      ]
    },
    "test_framework.test_runner": {
      "value": "test_framework.test_runner",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:54"
      ]
    },
    "test_framework/test_config.py": {
      "value": "test_framework/test_config.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_coverage_system.py:27"
      ]
    },
    "test_framework_size": {
      "value": "test_framework_size",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:117",
        "scripts/generate_test_audit.py:124",
        "scripts/generate_test_audit.py:161"
      ]
    },
    "test_frameworks": {
      "value": "test_frameworks",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:68"
      ]
    },
    "test_frontend": {
      "value": "test_frontend",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80"
      ]
    },
    "test_function_complexity": {
      "value": "test_function_complexity",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:44",
        "scripts/compliance/test_limits_checker.py:150",
        "scripts/compliance/test_violations_reporter.py:31"
      ]
    },
    "test_functions": {
      "value": "test_functions",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:95"
      ]
    },
    "test_gcp_staging_database_index_creation_skipped.py": {
      "value": "test_gcp_staging_database_index_creation_skipped.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:150"
      ]
    },
    "test_gcp_staging_startup_sequence_robustness.py": {
      "value": "test_gcp_staging_startup_sequence_robustness.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:149"
      ]
    },
    "test_history.json": {
      "value": "test_history.json",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:18"
      ]
    },
    "test_id": {
      "value": "test_id",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:47"
      ]
    },
    "test_integration": {
      "value": "test_integration",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:264",
        "scripts/compliance/real_test_validator.py:226"
      ]
    },
    "test_issues.json": {
      "value": "test_issues.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:174"
      ]
    },
    "test_jwt_secret_key_that_is_long_enough_for_testing_purposes": {
      "value": "test_jwt_secret_key_that_is_long_enough_for_testing_purposes",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:13",
        "auth_service/tests/conftest.py:35"
      ]
    },
    "test_message": {
      "value": "test_message",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:52",
        "scripts/test_cold_start_e2e.py:348"
      ]
    },
    "test_message_response": {
      "value": "test_message_response",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:162"
      ]
    },
    "test_methods": {
      "value": "test_methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:330"
      ]
    },
    "test_metrics": {
      "value": "test_metrics",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:30"
      ]
    },
    "test_name": {
      "value": "test_name",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:46",
        "scripts/test_websocket_cors_comprehensive.py:60",
        "scripts/test_websocket_cors_comprehensive.py:307"
      ]
    },
    "test_oauth_regression": {
      "value": "test_oauth_regression",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:56",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:57",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:61",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:63",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:85",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:87",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:89",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:112",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:113",
        "auth_service/tests/critical/test_oauth_configuration_missing_staging_regression.py:117"
      ]
    },
    "test_overlap_report.json": {
      "value": "test_overlap_report.json",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:498"
      ]
    },
    "test_overlap_report.md": {
      "value": "test_overlap_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:506"
      ]
    },
    "test_password_123": {
      "value": "test_password_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_database_url_builder_comprehensive.py:26"
      ]
    },
    "test_priority": {
      "value": "test_priority",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:185"
      ]
    },
    "test_realistic_data_integration.py": {
      "value": "test_realistic_data_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:206"
      ]
    },
    "test_refresh_token_123": {
      "value": "test_refresh_token_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_simple.py:19"
      ]
    },
    "test_refresh_token_12345": {
      "value": "test_refresh_token_12345",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:25"
      ]
    },
    "test_report_": {
      "value": "test_report_",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:884"
      ]
    },
    "test_reports": {
      "value": "test_reports",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:415",
        "scripts/analyze_test_overlap.py:498",
        "scripts/analyze_test_overlap.py:506",
        "scripts/analyze_test_overlap.py:511",
        "scripts/business_value_test_index.py:573",
        "scripts/business_value_test_index.py:719",
        "scripts/comprehensive_test_fixer.py:349",
        "scripts/comprehensive_test_fixer.py:404",
        "scripts/fix_test_batch.py:207",
        "scripts/fix_test_batch.py:349"
      ]
    },
    "test_reports/real_test_violations.json": {
      "value": "test_reports/real_test_violations.json",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:596"
      ]
    },
    "test_results": {
      "value": "test_results",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:26",
        "scripts/real_service_test_metrics.py:76",
        "scripts/real_service_test_metrics.py:130",
        "scripts/real_service_test_metrics.py:131",
        "scripts/real_service_test_metrics.py:194"
      ]
    },
    "test_results.json": {
      "value": "test_results.json",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:573",
        "scripts/test_example_message_flow.py:133"
      ]
    },
    "test_results_100_iterations.json": {
      "value": "test_results_100_iterations.json",
      "category": "test_literals",
      "locations": [
        "scripts/batch_fix_and_test.py:137"
      ]
    },
    "test_routes/test_websocket_advanced.py": {
      "value": "test_routes/test_websocket_advanced.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:154"
      ]
    },
    "test_run_123": {
      "value": "test_run_123",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:118"
      ]
    },
    "test_runner": {
      "value": "test_runner",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:80",
        "scripts/unified_test_runner.py:49",
        "scripts/unified_test_runner.py:206",
        "scripts/unified_test_runner.py:207",
        "scripts/unified_test_runner.py:208",
        "scripts/unified_test_runner.py:209",
        "scripts/unified_test_runner.py:225",
        "scripts/unified_test_runner.py:228"
      ]
    },
    "test_runner_frontend": {
      "value": "test_runner_frontend",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:754",
        "scripts/unified_test_runner.py:756",
        "scripts/unified_test_runner.py:758"
      ]
    },
    "test_runner_nodetest": {
      "value": "test_runner_nodetest",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:811",
        "scripts/unified_test_runner.py:815",
        "scripts/unified_test_runner.py:816",
        "scripts/unified_test_runner.py:818",
        "scripts/unified_test_runner.py:819"
      ]
    },
    "test_runner_pytest": {
      "value": "test_runner_pytest",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:791",
        "scripts/unified_test_runner.py:795",
        "scripts/unified_test_runner.py:798"
      ]
    },
    "test_runner_secrets": {
      "value": "test_runner_secrets",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:248"
      ]
    },
    "test_runners": {
      "value": "test_runners",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:65",
        "scripts/generate_test_audit.py:86",
        "scripts/generate_test_audit.py:191",
        "scripts/generate_test_audit.py:213",
        "scripts/generate_test_audit.py:214"
      ]
    },
    "test_secret": {
      "value": "test_secret",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:27",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:39"
      ]
    },
    "test_server_startup_timeout_fix.py": {
      "value": "test_server_startup_timeout_fix.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:155"
      ]
    },
    "test_service": {
      "value": "test_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:129",
        "scripts/test_coordination_fixes.py:132",
        "scripts/test_coordination_fixes.py:135",
        "scripts/test_coordination_fixes.py:136",
        "scripts/test_coordination_fixes.py:139",
        "scripts/test_coordination_fixes.py:140",
        "scripts/test_coordination_fixes.py:143",
        "scripts/test_coordination_fixes.py:147"
      ]
    },
    "test_similarities.csv": {
      "value": "test_similarities.csv",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:511"
      ]
    },
    "test_size_compliance_examples.py": {
      "value": "test_size_compliance_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:28",
        "scripts/compliance/demo_test_size_enforcement.py:142"
      ]
    },
    "test_size_violations.json": {
      "value": "test_size_violations.json",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:601"
      ]
    },
    "test_statistics": {
      "value": "test_statistics",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:45",
        "scripts/optimize_test_performance.py:62",
        "scripts/optimize_test_performance.py:157"
      ]
    },
    "test_status": {
      "value": "test_status",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:27"
      ]
    },
    "test_token": {
      "value": "test_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:315"
      ]
    },
    "test_type": {
      "value": "test_type",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:514",
        "scripts/test_cors.py:522",
        "scripts/test_cors.py:530"
      ]
    },
    "test_type_distribution": {
      "value": "test_type_distribution",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:628"
      ]
    },
    "test_update_spec.xml": {
      "value": "test_update_spec.xml",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:24"
      ]
    },
    "test_user": {
      "value": "test_user",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:47",
        "scripts/test_cold_start_e2e.py:232",
        "scripts/test_cold_start_e2e.py:233",
        "scripts/test_cold_start_e2e.py:244",
        "scripts/test_example_message_flow.py:290",
        "scripts/test_ssl_certificates_staging.py:129"
      ]
    },
    "test_user_123": {
      "value": "test_user_123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:166"
      ]
    },
    "test_user_31": {
      "value": "test_user_31",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:63"
      ]
    },
    "test_user_32": {
      "value": "test_user_32",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:114",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:123"
      ]
    },
    "test_user_33": {
      "value": "test_user_33",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:145"
      ]
    },
    "test_user_34": {
      "value": "test_user_34",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:181",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:191"
      ]
    },
    "test_user_35": {
      "value": "test_user_35",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:219"
      ]
    },
    "test_user_36": {
      "value": "test_user_36",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:64"
      ]
    },
    "test_user_37": {
      "value": "test_user_37",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:122"
      ]
    },
    "test_user_38": {
      "value": "test_user_38",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:182"
      ]
    },
    "test_user_39": {
      "value": "test_user_39",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:220"
      ]
    },
    "test_user_40": {
      "value": "test_user_40",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_session_security_cycles_36_40.py:286"
      ]
    },
    "test_user_creation.py (80 lines)\n- test_user_creation_valid_data()\n- test_user_creation_invalid_email()\n- test_user_creation_duplicate_email()\n\ntest_user_authentication.py (85 lines)  \n- test_authenticate_valid_credentials()\n- test_authenticate_invalid_password()\n- test_authenticate_nonexistent_user()\n\ntest_user_permissions.py (90 lines)\n- test_user_default_permissions()\n- test_admin_permissions()\n- test_permission_inheritance()\n\ntest_user_profile.py (70 lines)\n- test_profile_update()\n- test_profile_validation()\n- test_profile_privacy()\n\ntest_user_helpers.py (50 lines)\n- create_test_user()\n- create_admin_user()\n- get_test_auth_token()": {
      "value": "test_user_creation.py (80 lines)\n- test_user_creation_valid_data()\n- test_user_creation_invalid_email()\n- test_user_creation_duplicate_email()\n\ntest_user_authentication.py (85 lines)  \n- test_authenticate_valid_credentials()\n- test_authenticate_invalid_password()\n- test_authenticate_nonexistent_user()\n\ntest_user_permissions.py (90 lines)\n- test_user_default_permissions()\n- test_admin_permissions()\n- test_permission_inheritance()\n\ntest_user_profile.py (70 lines)\n- test_profile_update()\n- test_profile_validation()\n- test_profile_privacy()\n\ntest_user_helpers.py (50 lines)\n- create_test_user()\n- create_admin_user()\n- get_test_auth_token()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_examples.py:77"
      ]
    },
    "test_user_id": {
      "value": "test_user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:29",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:41"
      ]
    },
    "test_utils": {
      "value": "test_utils",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:39",
        "scripts/fix_test_import_order.py:32"
      ]
    },
    "test_utils.py": {
      "value": "test_utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/remove_duplicate_test_setup.py:55"
      ]
    },
    "test_value": {
      "value": "test_value",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:110",
        "scripts/test_secret_manager_debug.py:112"
      ]
    },
    "test_violations_report.md": {
      "value": "test_violations_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:982"
      ]
    },
    "test_websocket_auth_cold_start_extended.py": {
      "value": "test_websocket_auth_cold_start_extended.py",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:153"
      ]
    },
    "testcontainers": {
      "value": "testcontainers",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:375"
      ]
    },
    "tested_endpoints": {
      "value": "tested_endpoints",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:114"
      ]
    },
    "testing": {
      "value": "testing",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:78",
        "scripts/test_backend.py:78",
        "scripts/test_backend.py:368",
        "scripts/unified_test_runner.py:234"
      ]
    },
    "tests": {
      "value": "tests",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:31",
        "scripts/auto_fix_test_violations.py:91",
        "scripts/auto_fix_test_violations.py:92",
        "scripts/auto_fix_test_violations.py:93",
        "scripts/auto_fix_test_violations.py:94",
        "scripts/autonomous_review/test_generator.py:32",
        "scripts/autonomous_review/test_generator.py:86",
        "scripts/autonomous_review/test_generator.py:88",
        "scripts/autonomous_review/test_generator.py:89",
        "scripts/autonomous_review/test_reviewer.py:309"
      ]
    },
    "tests\u001b[0m": {
      "value": "tests\u001b[0m",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:118"
      ]
    },
    "tests failed": {
      "value": "tests failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:177",
        "scripts/test_websocket_cors_comprehensive.py:349",
        "scripts/test_websocket_simple.py:97"
      ]
    },
    "tests failed.": {
      "value": "tests failed.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_simplified.py:126"
      ]
    },
    "tests passed": {
      "value": "tests passed",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:209",
        "auth_service/test_staging_db_connection.py:317",
        "auth_service/test_url_construction.py:238",
        "scripts/test_cors.py:542",
        "scripts/test_failure_scanner.py:180",
        "scripts/test_staging_auth_e2e.py:373",
        "scripts/test_verify_workflow_status.py:223",
        "scripts/test_verify_workflow_status_corrected.py:211"
      ]
    },
    "tests passed (": {
      "value": "tests passed (",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:246"
      ]
    },
    "tests timed out after": {
      "value": "tests timed out after",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:514"
      ]
    },
    "tests to test suite": {
      "value": "tests to test suite",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:240"
      ]
    },
    "tests without validation": {
      "value": "tests without validation",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:177"
      ]
    },
    "tests)": {
      "value": "tests)",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:711",
        "scripts/fix_test_batch.py:240"
      ]
    },
    "tests)\u001b[0m -": {
      "value": "tests)\u001b[0m -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:106"
      ]
    },
    "tests) -": {
      "value": "tests) -",
      "category": "test_literals",
      "locations": [
        "scripts/test_discovery_report.py:108"
      ]
    },
    "tests, avg score:": {
      "value": "tests, avg score:",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:742"
      ]
    },
    "tests.e2e.": {
      "value": "tests.e2e.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:78",
        "scripts/fix_e2e_test_imports.py:79"
      ]
    },
    "tests/": {
      "value": "tests/",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:76"
      ]
    },
    "tests/**/*.py": {
      "value": "tests/**/*.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:55"
      ]
    },
    "tests/**/*_test.py": {
      "value": "tests/**/*_test.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_limits_checker.py:59"
      ]
    },
    "tests/api": {
      "value": "tests/api",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:27"
      ]
    },
    "tests/conftest.py": {
      "value": "tests/conftest.py",
      "category": "test_literals",
      "locations": [
        "scripts/check_conftest_violations.py:16"
      ]
    },
    "tests/database": {
      "value": "tests/database",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:29"
      ]
    },
    "tests/e2e": {
      "value": "tests/e2e",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:21",
        "scripts/analyze_test_mocks.py:143",
        "scripts/batch_fix_and_test.py:43",
        "scripts/rapid_test_consolidation.py:33",
        "scripts/rapid_test_consolidation.py:33",
        "scripts/unified_test_runner.py:695",
        "scripts/validate_llm_test_models.py:45"
      ]
    },
    "tests/e2e/agent_isolation": {
      "value": "tests/e2e/agent_isolation",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:37"
      ]
    },
    "tests/e2e/integration": {
      "value": "tests/e2e/integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:30"
      ]
    },
    "tests/e2e/journeys": {
      "value": "tests/e2e/journeys",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:31"
      ]
    },
    "tests/e2e/performance": {
      "value": "tests/e2e/performance",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:32"
      ]
    },
    "tests/e2e/rapid_message": {
      "value": "tests/e2e/rapid_message",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:35"
      ]
    },
    "tests/e2e/resilience": {
      "value": "tests/e2e/resilience",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:33"
      ]
    },
    "tests/e2e/resource_isolation": {
      "value": "tests/e2e/resource_isolation",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:36"
      ]
    },
    "tests/e2e/websocket": {
      "value": "tests/e2e/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:34"
      ]
    },
    "tests/frontend": {
      "value": "tests/frontend",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:28"
      ]
    },
    "tests/integration": {
      "value": "tests/integration",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:22",
        "scripts/rapid_test_consolidation.py:32",
        "scripts/rapid_test_consolidation.py:32"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_agent_lifecycle_management.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:31"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_api_gateway_rate_limiting_accuracy.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_api_gateway_rate_limiting_accuracy.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:32"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_cross_database_transaction_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:33"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_database_migration_failure_recovery.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:34"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_llm_service_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:35"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_message_persistence_and_retrieval.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:36"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_oauth_database_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:37"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_service_discovery_failure_cascades.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:38"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_thread_crud_operations_data_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:39"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_websocket_authentication_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:40"
      ]
    },
    "tests/integration/red_team/tier1_catastrophic/test_websocket_message_broadcasting.py": {
      "value": "tests/integration/red_team/tier1_catastrophic/test_websocket_message_broadcasting.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:41"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_clickhouse_data_ingestion_pipeline.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:42"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_file_upload_and_storage.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:43"
      ]
    },
    "tests/integration/red_team/tier2_major_failures/test_redis_session_store_consistency.py": {
      "value": "tests/integration/red_team/tier2_major_failures/test_redis_session_store_consistency.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:44"
      ]
    },
    "tests/integration/staging/test_staging_database_connection_resilience.py": {
      "value": "tests/integration/staging/test_staging_database_connection_resilience.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:45"
      ]
    },
    "tests/integration/user_flows/test_conversion_paths.py": {
      "value": "tests/integration/user_flows/test_conversion_paths.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:46"
      ]
    },
    "tests/integration/user_flows/test_early_tier_flows.py": {
      "value": "tests/integration/user_flows/test_early_tier_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:47"
      ]
    },
    "tests/integration/user_flows/test_enterprise_flows.py": {
      "value": "tests/integration/user_flows/test_enterprise_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:48"
      ]
    },
    "tests/integration/user_flows/test_free_tier_onboarding.py": {
      "value": "tests/integration/user_flows/test_free_tier_onboarding.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:49"
      ]
    },
    "tests/integration/user_flows/test_mid_tier_flows.py": {
      "value": "tests/integration/user_flows/test_mid_tier_flows.py",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:50"
      ]
    },
    "tests/performance": {
      "value": "tests/performance",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:25"
      ]
    },
    "tests/smoke": {
      "value": "tests/smoke",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:24"
      ]
    },
    "tests/test_example_message_flow.py": {
      "value": "tests/test_example_message_flow.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:47"
      ]
    },
    "tests/test_example_message_integration.py": {
      "value": "tests/test_example_message_integration.py",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:52"
      ]
    },
    "tests/test_super_e2e.py": {
      "value": "tests/test_super_e2e.py",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:199"
      ]
    },
    "tests/test_system_startup.py": {
      "value": "tests/test_system_startup.py",
      "category": "test_literals",
      "locations": [
        "scripts/startup_test_executor.py:43"
      ]
    },
    "tests/unit": {
      "value": "tests/unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:23"
      ]
    },
    "tests/websocket": {
      "value": "tests/websocket",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:26"
      ]
    },
    "tests:": {
      "value": "tests:",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:524"
      ]
    },
    "tests\\.unified\\.e2e\\.": {
      "value": "tests\\.unified\\.e2e\\.",
      "category": "test_literals",
      "locations": [
        "scripts/fix_e2e_test_imports.py:78"
      ]
    },
    "tests_failed": {
      "value": "tests_failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:185",
        "scripts/test_websocket_cors_comprehensive.py:288",
        "scripts/test_websocket_cors_comprehensive.py:348"
      ]
    },
    "tests_passed": {
      "value": "tests_passed",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:96",
        "scripts/iterative_test_fix_loop.py:110",
        "scripts/iterative_test_fix_loop.py:149",
        "scripts/iterative_test_fix_loop.py:162",
        "scripts/test_websocket_cors_comprehensive.py:184",
        "scripts/test_websocket_cors_comprehensive.py:287"
      ]
    },
    "tests_run": {
      "value": "tests_run",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:183",
        "scripts/test_websocket_cors_comprehensive.py:286",
        "scripts/test_websocket_cors_comprehensive.py:298"
      ]
    },
    "text": {
      "value": "text",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:386",
        "scripts/compliance/fake_test_scanner.py:387",
        "scripts/compliance/fake_test_scanner.py:433",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_refactor_helper.py:674",
        "scripts/compliance/test_size_validator.py:519",
        "scripts/compliance/test_size_validator.py:520",
        "scripts/debug_cors_test.py:25",
        "scripts/debug_cors_test.py:39",
        "scripts/debug_cors_test.py:77"
      ]
    },
    "third_party": {
      "value": "third_party",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:113",
        "scripts/compliance/test_refactor_helper.py:134"
      ]
    },
    "thorough": {
      "value": "thorough",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:199",
        "scripts/unified_test_config.py:288"
      ]
    },
    "threading\\.": {
      "value": "threading\\.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:221"
      ]
    },
    "threads": {
      "value": "threads",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_auth_e2e.py:213"
      ]
    },
    "threshold_based": {
      "value": "threshold_based",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1015"
      ]
    },
    "throughput": {
      "value": "throughput",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:101",
        "scripts/test_data_validator_backup.py:47",
        "scripts/test_data_validator_backup.py:177",
        "scripts/test_data_validator_backup.py:184",
        "scripts/test_data_validator_backup.py:622",
        "scripts/test_data_validator_backup.py:625",
        "scripts/test_data_validator_backup.py:641",
        "scripts/test_data_validator_backup.py:645",
        "scripts/test_data_validator_backup.py:663",
        "scripts/test_data_validator_backup.py:664"
      ]
    },
    "throughput_rps": {
      "value": "throughput_rps",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:167",
        "netra_backend/app/services/realistic_test_data/log_generator.py:175",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:201",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:370"
      ]
    },
    "tier": {
      "value": "tier",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:492",
        "scripts/business_value_test_index.py:494",
        "scripts/business_value_test_index.py:497",
        "scripts/business_value_test_index.py:679"
      ]
    },
    "tier customer data and access control": {
      "value": "tier customer data and access control",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:490"
      ]
    },
    "tier functionality": {
      "value": "tier functionality",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:500"
      ]
    },
    "tier has insufficient test coverage": {
      "value": "tier has insufficient test coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:681"
      ]
    },
    "tier_coverage": {
      "value": "tier_coverage",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:623",
        "scripts/business_value_test_index.py:741"
      ]
    },
    "time": {
      "value": "time",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "time.sleep": {
      "value": "time.sleep",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:281"
      ]
    },
    "time.time": {
      "value": "time.time",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:178",
        "scripts/analyze_test_mocks.py:60"
      ]
    },
    "time\\.sleep\\(": {
      "value": "time\\.sleep\\(",
      "category": "test_literals",
      "locations": [
        "scripts/apply_fast_test_decorators.py:21"
      ]
    },
    "time\\.sleep\\(([0-9.]+)\\)": {
      "value": "time\\.sleep\\(([0-9.]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:177"
      ]
    },
    "time\\.sleep\\(([^)]+)\\)": {
      "value": "time\\.sleep\\(([^)]+)\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:32"
      ]
    },
    "time\\.time\\(\\)": {
      "value": "time\\.time\\(\\)",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:219"
      ]
    },
    "time_based": {
      "value": "time_based",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:165",
        "scripts/unified_test_runner.py:1040"
      ]
    },
    "time_difference": {
      "value": "time_difference",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:419"
      ]
    },
    "time_span": {
      "value": "time_span",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:302"
      ]
    },
    "time_span_hours": {
      "value": "time_span_hours",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:559",
        "scripts/test_data_validator_backup.py:599"
      ]
    },
    "time_utilities": {
      "value": "time_utilities",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:22",
        "scripts/analyze_test_mocks.py:61"
      ]
    },
    "timed out": {
      "value": "timed out",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:121"
      ]
    },
    "timeframe": {
      "value": "timeframe",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:71",
        "scripts/test_data_validator_backup.py:83",
        "scripts/test_data_validator_backup.py:106",
        "scripts/test_data_validator_backup.py:135",
        "scripts/test_data_validator_backup.py:151"
      ]
    },
    "timeout": {
      "value": "timeout",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:96",
        "netra_backend/app/services/realistic_test_data/models.py:135",
        "auth_service/tests/auth-service-down-critical-scenarios.py:284",
        "auth_service/tests/auth-service-down-critical-scenarios.py:294",
        "scripts/fix_test_batch.py:317",
        "scripts/test_staging_login_automated.py:221",
        "scripts/test_websocket_cors_comprehensive.py:82",
        "scripts/unified_test_config.py:25",
        "scripts/unified_test_config.py:33",
        "scripts/unified_test_config.py:41"
      ]
    },
    "timeout_rate": {
      "value": "timeout_rate",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:41",
        "netra_backend/app/services/realistic_test_data/models.py:51",
        "netra_backend/app/services/realistic_test_data/models.py:61",
        "netra_backend/app/services/realistic_test_data/models.py:71",
        "netra_backend/app/services/realistic_test_data/models.py:81"
      ]
    },
    "timestamp": {
      "value": "timestamp",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:75",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:108",
        "netra_backend/app/services/realistic_test_data/log_generator.py:50",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:121",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:123",
        "scripts/align_test_imports.py:404",
        "scripts/analyze_test_overlap.py:346",
        "scripts/analyze_test_overlap.py:519",
        "scripts/batch_fix_and_test.py:81",
        "scripts/comprehensive_test_fixer.py:409"
      ]
    },
    "timing-test-session": {
      "value": "timing-test-session",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:209"
      ]
    },
    "timing_test_service": {
      "value": "timing_test_service",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:196",
        "scripts/test_coordination_fixes.py:213",
        "scripts/test_coordination_fixes.py:214",
        "scripts/test_coordination_fixes.py:220"
      ]
    },
    "title": {
      "value": "title",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:284",
        "scripts/test_example_message_flow.py:406"
      ]
    },
    "to": {
      "value": "to",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:763",
        "scripts/comprehensive_test_fixer.py:212"
      ]
    },
    "to .env.test file": {
      "value": "to .env.test file",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:106"
      ]
    },
    "to <10 within 2 sprints": {
      "value": "to <10 within 2 sprints",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:570"
      ]
    },
    "to_dict": {
      "value": "to_dict",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:873"
      ]
    },
    "todo": {
      "value": "todo",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:97"
      ]
    },
    "token": {
      "value": "token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:99",
        "auth_service/tests/auth-service-down-critical-scenarios.py:144",
        "auth_service/tests/auth-service-down-critical-scenarios.py:271",
        "auth_service/tests/auth-service-down-critical-scenarios.py:330",
        "auth_service/tests/auth-service-down-critical-scenarios.py:443",
        "auth_service/tests/auth-service-down-critical-scenarios.py:476",
        "auth_service/tests/integration/test_refresh_integration.py:287",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:87",
        "auth_service/tests/test_refresh_endpoint_simple.py:42",
        "auth_service/tests/unit/test_refresh_endpoint.py:87"
      ]
    },
    "token replacements in": {
      "value": "token replacements in",
      "category": "test_literals",
      "locations": [
        "scripts/fix_authentication_test_tokens.py:113"
      ]
    },
    "token=": {
      "value": "token=",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:299"
      ]
    },
    "token_created": {
      "value": "token_created",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:26"
      ]
    },
    "token_generation": {
      "value": "token_generation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:51",
        "scripts/test_oauth_local.py:256",
        "scripts/test_oauth_local.py:275",
        "scripts/test_oauth_local.py:282",
        "scripts/test_oauth_local.py:288",
        "scripts/test_oauth_local.py:416",
        "scripts/test_oauth_local.py:416",
        "scripts/test_oauth_local.py:417"
      ]
    },
    "token_limit": {
      "value": "token_limit",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:119"
      ]
    },
    "token_limits": {
      "value": "token_limits",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:47",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:51",
        "netra_backend/app/services/realistic_test_data/models.py:36",
        "netra_backend/app/services/realistic_test_data/models.py:46",
        "netra_backend/app/services/realistic_test_data/models.py:56",
        "netra_backend/app/services/realistic_test_data/models.py:66",
        "netra_backend/app/services/realistic_test_data/models.py:76"
      ]
    },
    "token_refreshed": {
      "value": "token_refreshed",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:27"
      ]
    },
    "token_revoked": {
      "value": "token_revoked",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:28"
      ]
    },
    "token_type": {
      "value": "token_type",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:138",
        "auth_service/tests/factories/token_factory.py:195",
        "auth_service/tests/factories/token_factory.py:219",
        "auth_service/tests/integration/test_refresh_integration.py:104",
        "auth_service/tests/test_auth_comprehensive.py:228",
        "auth_service/tests/test_oauth_state_validation.py:117",
        "auth_service/tests/test_oauth_state_validation.py:262",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:62",
        "auth_service/tests/unit/test_refresh_endpoint.py:54",
        "auth_service/tests/utils/assertion_helpers.py:137"
      ]
    },
    "token_validation": {
      "value": "token_validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_local.py:52",
        "scripts/test_oauth_local.py:311",
        "scripts/test_oauth_local.py:324",
        "scripts/test_oauth_local.py:335"
      ]
    },
    "tokens_input": {
      "value": "tokens_input",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:276",
        "scripts/test_data_validator_backup.py:281",
        "scripts/test_data_validator_backup.py:516",
        "scripts/test_data_validator_backup.py:517"
      ]
    },
    "too": {
      "value": "too",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:495"
      ]
    },
    "too short (": {
      "value": "too short (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:815"
      ]
    },
    "tool_dispatcher = Mock()": {
      "value": "tool_dispatcher = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:52"
      ]
    },
    "tool_dispatcher = ToolDispatcher(llm_manager)": {
      "value": "tool_dispatcher = ToolDispatcher(llm_manager)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:54"
      ]
    },
    "top_100": {
      "value": "top_100",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:192"
      ]
    },
    "top_overlaps_by_category": {
      "value": "top_overlaps_by_category",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:360",
        "scripts/analyze_test_overlap.py:422",
        "scripts/analyze_test_overlap.py:572",
        "scripts/analyze_test_overlap.py:573"
      ]
    },
    "top_value_tests": {
      "value": "top_value_tests",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:637",
        "scripts/business_value_test_index.py:754"
      ]
    },
    "total": {
      "value": "total",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:280",
        "scripts/comprehensive_test_fixer.py:299",
        "scripts/comprehensive_test_fixer.py:391",
        "scripts/comprehensive_test_fixer.py:396",
        "scripts/fix_test_batch.py:228",
        "scripts/fix_test_batch.py:255",
        "scripts/fix_test_batch.py:380",
        "scripts/team_updates_test_analyzer.py:104",
        "scripts/team_updates_test_analyzer.py:111",
        "scripts/team_updates_test_analyzer.py:135"
      ]
    },
    "total_agents": {
      "value": "total_agents",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/agents/test_agent_initialization.py:172"
      ]
    },
    "total_business_value": {
      "value": "total_business_value",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:620"
      ]
    },
    "total_categories": {
      "value": "total_categories",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:1113"
      ]
    },
    "total_config_fixes": {
      "value": "total_config_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:410"
      ]
    },
    "total_cost": {
      "value": "total_cost",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:223"
      ]
    },
    "total_costs_usd": {
      "value": "total_costs_usd",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:265"
      ]
    },
    "total_duration": {
      "value": "total_duration",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:208",
        "scripts/test_backend_optimized.py:231",
        "scripts/test_backend_optimized.py:266",
        "scripts/test_backend_optimized.py:329",
        "scripts/unified_test_runner.py:872",
        "scripts/unified_test_runner.py:893"
      ]
    },
    "total_failures": {
      "value": "total_failures",
      "category": "test_literals",
      "locations": [
        "scripts/test_failure_scanner.py:195",
        "scripts/test_failure_scanner.py:225",
        "scripts/test_failure_scanner.py:244"
      ]
    },
    "total_fake_tests": {
      "value": "total_fake_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:83",
        "scripts/compliance/fake_test_scanner.py:115",
        "scripts/compliance/fake_test_scanner.py:140",
        "scripts/compliance/fake_test_scanner.py:259",
        "scripts/compliance/fake_test_scanner.py:416",
        "scripts/compliance/fake_test_scanner.py:442",
        "scripts/compliance/fake_test_scanner.py:455"
      ]
    },
    "total_file_fixes": {
      "value": "total_file_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:411"
      ]
    },
    "total_files": {
      "value": "total_files",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:89",
        "scripts/check_test_compliance.py:104",
        "scripts/check_test_compliance.py:132",
        "scripts/check_test_compliance.py:143",
        "scripts/check_test_compliance.py:152",
        "scripts/compliance/test_size_validator.py:76",
        "scripts/compliance/test_size_validator.py:420",
        "scripts/compliance/test_size_validator.py:459"
      ]
    },
    "total_files_scanned": {
      "value": "total_files_scanned",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:82",
        "scripts/compliance/fake_test_scanner.py:114",
        "scripts/compliance/fake_test_scanner.py:258",
        "scripts/compliance/fake_test_scanner.py:415",
        "scripts/fix_test_import_errors.py:287",
        "scripts/fix_test_import_errors.py:309"
      ]
    },
    "total_import_fixes": {
      "value": "total_import_fixes",
      "category": "test_literals",
      "locations": [
        "scripts/align_test_imports.py:409"
      ]
    },
    "total_iterations": {
      "value": "total_iterations",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:85"
      ]
    },
    "total_lines": {
      "value": "total_lines",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:63",
        "scripts/analyze_test_overlap.py:407",
        "scripts/analyze_test_overlap.py:562",
        "scripts/compliance/demo_test_size_enforcement.py:88",
        "scripts/compliance/test_refactor_helper.py:100",
        "scripts/compliance/test_refactor_helper.py:706"
      ]
    },
    "total_llm_cost": {
      "value": "total_llm_cost",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:100",
        "scripts/real_service_test_metrics.py:151"
      ]
    },
    "total_methods": {
      "value": "total_methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:329"
      ]
    },
    "total_patterns": {
      "value": "total_patterns",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:99"
      ]
    },
    "total_potential_savings_cents": {
      "value": "total_potential_savings_cents",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:330",
        "scripts/test_data_validator_backup.py:401",
        "scripts/test_data_validator_backup.py:418"
      ]
    },
    "total_requests": {
      "value": "total_requests",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "total_secrets": {
      "value": "total_secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:271",
        "scripts/test_secret_manager_builder_critical.py:348"
      ]
    },
    "total_similarity_pairs": {
      "value": "total_similarity_pairs",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:350",
        "scripts/analyze_test_overlap.py:525"
      ]
    },
    "total_test_files": {
      "value": "total_test_files",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:348",
        "scripts/analyze_test_overlap.py:523",
        "scripts/check_test_compliance.py:132",
        "scripts/check_test_compliance.py:160"
      ]
    },
    "total_test_functions": {
      "value": "total_test_functions",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:349",
        "scripts/analyze_test_overlap.py:470",
        "scripts/analyze_test_overlap.py:524",
        "scripts/analyze_test_overlap.py:656"
      ]
    },
    "total_tests": {
      "value": "total_tests",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:62",
        "scripts/analyze_test_overlap.py:406",
        "scripts/analyze_test_overlap.py:474",
        "scripts/analyze_test_overlap.py:561",
        "scripts/business_value_test_index.py:73",
        "scripts/business_value_test_index.py:539",
        "scripts/business_value_test_index.py:596",
        "scripts/business_value_test_index.py:596",
        "scripts/business_value_test_index.py:597",
        "scripts/business_value_test_index.py:619"
      ]
    },
    "total_tokens": {
      "value": "total_tokens",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:78",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:111",
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:119",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:202",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:224",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:239"
      ]
    },
    "total_tracked_tests": {
      "value": "total_tracked_tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:298"
      ]
    },
    "total_violations": {
      "value": "total_violations",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:82",
        "scripts/compliance/test_size_validator.py:118",
        "scripts/compliance/test_size_validator.py:423",
        "scripts/compliance/test_size_validator.py:462",
        "scripts/compliance/test_size_validator.py:544",
        "scripts/remove_test_stubs.py:260",
        "scripts/remove_test_stubs.py:310"
      ]
    },
    "totals": {
      "value": "totals",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:123",
        "scripts/test_backend.py:411",
        "scripts/test_coverage_system.py:94",
        "scripts/test_coverage_system.py:95"
      ]
    },
    "trace_id": {
      "value": "trace_id",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:59"
      ]
    },
    "traffic_data": {
      "value": "traffic_data",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72"
      ]
    },
    "trend_analysis": {
      "value": "trend_analysis",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:146"
      ]
    },
    "trigger": {
      "value": "trigger",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:24",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:38",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:45",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:163",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:165"
      ]
    },
    "trivial tests for refactoring": {
      "value": "trivial tests for refactoring",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:207"
      ]
    },
    "true": {
      "value": "true",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/conftest.py:43",
        "scripts/setup_e2e_test_ports.py:62",
        "scripts/setup_test_environment.py:117",
        "scripts/setup_test_environment.py:355",
        "scripts/start_test_services.py:152",
        "scripts/test_cors.py:224",
        "scripts/test_cors_implementation.py:87",
        "scripts/test_docker_websocket_fix.py:38",
        "scripts/test_docker_websocket_fix.py:39",
        "scripts/test_docker_websocket_fix.py:209"
      ]
    },
    "try {\n                nonExistentFunction();\n            } catch(e) {\n                if (window.dataLayer) {\n                    window.dataLayer.push({\n                        event: 'exception',\n                        event_category: 'error',\n                        event_action: 'test_error',\n                        event_label: e.message\n                    });\n                }\n            }": {
      "value": "try {\n                nonExistentFunction();\n            } catch(e) {\n                if (window.dataLayer) {\n                    window.dataLayer.push({\n                        event: 'exception',\n                        event_category: 'error',\n                        event_action: 'test_error',\n                        event_label: e.message\n                    });\n                }\n            }",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:77"
      ]
    },
    "tsc": {
      "value": "tsc",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:335"
      ]
    },
    "type": {
      "value": "type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:69",
        "auth_service/tests/factories/token_factory.py:38",
        "auth_service/tests/factories/token_factory.py:133",
        "auth_service/tests/integration/test_refresh_integration.py:230",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:30",
        "auth_service/tests/test_refresh_endpoint_compatibility.py:42",
        "auth_service/tests/unit/test_refresh_endpoint.py:171",
        "auth_service/tests/unit/test_refresh_endpoint.py:184",
        "auth_service/tests/unit/test_refresh_endpoint.py:204",
        "auth_service/tests/unit/test_refresh_endpoint.py:273"
      ]
    },
    "typescript": {
      "value": "typescript",
      "category": "test_literals",
      "locations": [
        "scripts/test_frontend.py:75",
        "scripts/test_frontend.py:103",
        "scripts/test_frontend.py:103"
      ]
    },
    "ultra_fast": {
      "value": "ultra_fast",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:89",
        "scripts/test_backend_optimized.py:182",
        "scripts/test_backend_optimized.py:374"
      ]
    },
    "unauthorized": {
      "value": "unauthorized",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:101"
      ]
    },
    "unavailable": {
      "value": "unavailable",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:453",
        "scripts/setup_staging_test_account.py:194",
        "scripts/setup_staging_test_account.py:209",
        "scripts/setup_test_environment.py:78",
        "scripts/test_staging_login_automated.py:162"
      ]
    },
    "unhealthy": {
      "value": "unhealthy",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/auth-service-down-critical-scenarios.py:190",
        "scripts/test_staging_login_automated.py:213"
      ]
    },
    "unified": {
      "value": "unified",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:162"
      ]
    },
    "unified_report.md": {
      "value": "unified_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/team_updates_test_analyzer.py:37"
      ]
    },
    "unified_test_runner.py": {
      "value": "unified_test_runner.py",
      "category": "test_literals",
      "locations": [
        "scripts/automated_test_fix_loop.py:17",
        "scripts/batch_fix_and_test.py:69",
        "scripts/iterative_test_fix_loop.py:30",
        "scripts/manage_test_services.py:134",
        "scripts/simple_test_fix_loop.py:18"
      ]
    },
    "unique_token_id_33": {
      "value": "unique_token_id_33",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:147",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:155"
      ]
    },
    "unit": {
      "value": "unit",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:23",
        "scripts/add_test_markers.py:52",
        "scripts/autonomous_review/test_reviewer.py:213",
        "scripts/autonomous_review/test_reviewer.py:223",
        "scripts/autonomous_review/test_reviewer.py:224",
        "scripts/business_value_test_index.py:84",
        "scripts/business_value_test_index.py:366",
        "scripts/business_value_test_index.py:386",
        "scripts/business_value_test_index.py:391",
        "scripts/business_value_test_index.py:464"
      ]
    },
    "unit test files. Unit tests should mock network calls.": {
      "value": "unit test files. Unit tests should mock network calls.",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:143"
      ]
    },
    "unittest": {
      "value": "unittest",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_reviewer.py:223",
        "scripts/compliance/test_refactor_helper.py:131"
      ]
    },
    "unittest.TestCase": {
      "value": "unittest.TestCase",
      "category": "test_literals",
      "locations": [
        "scripts/autonomous_review/test_generator.py:271",
        "scripts/compliance/real_test_requirements_enforcer.py:153",
        "scripts/fix_test_import_errors.py:240",
        "scripts/fix_test_import_errors.py:241"
      ]
    },
    "unknown": {
      "value": "unknown",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:48",
        "scripts/setup_staging_test_account.py:295",
        "scripts/setup_test_environment.py:65",
        "scripts/setup_test_environment.py:66",
        "scripts/setup_test_environment.py:67",
        "scripts/setup_test_environment.py:68",
        "scripts/setup_test_environment.py:69",
        "scripts/setup_test_environment.py:70",
        "scripts/setup_test_environment.py:71",
        "scripts/test_cors.py:88"
      ]
    },
    "unmatched": {
      "value": "unmatched",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:240"
      ]
    },
    "up": {
      "value": "up",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:47"
      ]
    },
    "update": {
      "value": "update",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:82"
      ]
    },
    "update-in-production": {
      "value": "update-in-production",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:426"
      ]
    },
    "updated_at": {
      "value": "updated_at",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:44"
      ]
    },
    "upgrade": {
      "value": "upgrade",
      "category": "test_literals",
      "locations": [
        "scripts/test_chat_errors.py:105"
      ]
    },
    "uri": {
      "value": "uri",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:59"
      ]
    },
    "url": {
      "value": "url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:195",
        "scripts/test_cold_start_e2e.py:196",
        "scripts/test_cold_start_e2e.py:436",
        "scripts/test_cold_start_e2e.py:441",
        "scripts/test_cors.py:84",
        "scripts/test_cors.py:94",
        "scripts/test_cors.py:121",
        "scripts/test_cors.py:131",
        "scripts/test_cors.py:161",
        "scripts/test_cors.py:171"
      ]
    },
    "urls": {
      "value": "urls",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:93"
      ]
    },
    "us-central1": {
      "value": "us-central1",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:33"
      ]
    },
    "usage": {
      "value": "usage",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/llm_response_generator.py:116",
        "scripts/setup_staging_test_account.py:122"
      ]
    },
    "usage_examples": {
      "value": "usage_examples",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:257"
      ]
    },
    "use_mocks": {
      "value": "use_mocks",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:129",
        "scripts/unified_test_config.py:137",
        "scripts/unified_test_config.py:145",
        "scripts/unified_test_config.py:153",
        "scripts/unified_test_config.py:303"
      ]
    },
    "user": {
      "value": "user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:58",
        "auth_service/test_staging_db_connection.py:95",
        "auth_service/tests/factories/permission_factory.py:223",
        "auth_service/tests/factories/token_factory.py:37",
        "auth_service/tests/factories/token_factory.py:190",
        "auth_service/tests/factories/token_factory.py:215",
        "auth_service/tests/factories/token_factory.py:221",
        "auth_service/tests/factories/user_factory.py:38",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:64",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:73"
      ]
    },
    "user-123": {
      "value": "user-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:273",
        "auth_service/tests/unit/test_refresh_endpoint.py:302",
        "auth_service/tests/unit/test_refresh_endpoint.py:316"
      ]
    },
    "user-id-123": {
      "value": "user-id-123",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_state_validation.py:284"
      ]
    },
    "user-session-1": {
      "value": "user-session-1",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:188"
      ]
    },
    "user-session-2": {
      "value": "user-session-2",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:189"
      ]
    },
    "user101": {
      "value": "user101",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:91"
      ]
    },
    "user123": {
      "value": "user123",
      "category": "test_literals",
      "locations": [
        "auth_service/debug_db_test.py:59",
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:26"
      ]
    },
    "user456": {
      "value": "user456",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:45"
      ]
    },
    "user789": {
      "value": "user789",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_session_persistence_edge_cases.py:64"
      ]
    },
    "user:email": {
      "value": "user:email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:220"
      ]
    },
    "user:read_profile": {
      "value": "user:read_profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:19",
        "auth_service/tests/factories/permission_factory.py:185"
      ]
    },
    "user:update_profile": {
      "value": "user:update_profile",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/permission_factory.py:20"
      ]
    },
    "user@example.com": {
      "value": "user@example.com",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:235",
        "auth_service/tests/test_oauth_security_vulnerabilities.py:148",
        "auth_service/tests/test_oauth_state_validation.py:270",
        "auth_service/tests/test_oauth_state_validation.py:285"
      ]
    },
    "user_": {
      "value": "user_",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:173",
        "scripts/test_data_validator_backup.py:239",
        "scripts/test_data_validator_backup.py:294",
        "scripts/test_data_validator_backup.py:618",
        "scripts/test_data_validator_backup.py:670"
      ]
    },
    "user_1": {
      "value": "user_1",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:208",
        "scripts/test_data_validator_backup.py:255",
        "scripts/test_data_validator_backup.py:274"
      ]
    },
    "user_agent": {
      "value": "user_agent",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:55",
        "auth_service/tests/factories/session_factory.py:36"
      ]
    },
    "user_data": {
      "value": "user_data",
      "category": "test_literals",
      "locations": [
        "scripts/setup_staging_test_account.py:170"
      ]
    },
    "user_flows": {
      "value": "user_flows",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:357"
      ]
    },
    "user_id": {
      "value": "user_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:52",
        "auth_service/tests/factories/permission_factory.py:81",
        "auth_service/tests/factories/session_factory.py:34",
        "auth_service/tests/integration/test_refresh_integration.py:62",
        "auth_service/tests/integration/test_refresh_integration.py:83",
        "auth_service/tests/integration/test_refresh_integration.py:88",
        "auth_service/tests/integration/test_refresh_integration.py:119",
        "auth_service/tests/integration/test_refresh_integration.py:119",
        "auth_service/tests/integration/test_refresh_integration.py:139",
        "auth_service/tests/integration/test_refresh_integration.py:148"
      ]
    },
    "user_initiated": {
      "value": "user_initiated",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:107",
        "auth_service/tests/factories/audit_factory.py:122"
      ]
    },
    "uses_real_clickhouse": {
      "value": "uses_real_clickhouse",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:44"
      ]
    },
    "uses_real_database": {
      "value": "uses_real_database",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:40"
      ]
    },
    "uses_real_llm": {
      "value": "uses_real_llm",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:38"
      ]
    },
    "uses_real_redis": {
      "value": "uses_real_redis",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:42"
      ]
    },
    "using mock": {
      "value": "using mock",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_import_errors.py:234"
      ]
    },
    "utf-8": {
      "value": "utf-8",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:110",
        "scripts/add_pytest_markers.py:124",
        "scripts/add_test_markers.py:150",
        "scripts/add_test_markers.py:170",
        "scripts/align_test_imports.py:88",
        "scripts/align_test_imports.py:105",
        "scripts/align_test_imports.py:222",
        "scripts/align_test_imports.py:232",
        "scripts/align_test_imports.py:321",
        "scripts/align_test_imports.py:337"
      ]
    },
    "util": {
      "value": "util",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:448",
        "scripts/auto_fix_test_violations.py:509"
      ]
    },
    "utilities": {
      "value": "utilities",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:274",
        "scripts/auto_fix_test_sizes.py:305",
        "scripts/compliance/test_refactor_helper.py:433",
        "scripts/compliance/test_refactor_helper.py:571",
        "scripts/compliance/test_refactor_helper.py:679"
      ]
    },
    "utils.py": {
      "value": "utils.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:113",
        "scripts/compliance/real_test_requirements_enforcer.py:140",
        "scripts/compliance/real_test_validator.py:70"
      ]
    },
    "uvicorn": {
      "value": "uvicorn",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:54"
      ]
    },
    "valid": {
      "value": "valid",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:260",
        "auth_service/test_staging_db_connection.py:270",
        "auth_service/tests/integration/test_refresh_integration.py:118",
        "scripts/compliance/test_refactor_helper.py:612",
        "scripts/compliance/test_refactor_helper.py:732",
        "scripts/test_data_validator_backup.py:189",
        "scripts/test_data_validator_backup.py:199",
        "scripts/test_data_validator_backup.py:216",
        "scripts/test_data_validator_backup.py:230",
        "scripts/test_data_validator_backup.py:283"
      ]
    },
    "valid.refresh.token": {
      "value": "valid.refresh.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:47",
        "auth_service/tests/unit/test_refresh_endpoint.py:58",
        "auth_service/tests/unit/test_refresh_endpoint.py:70",
        "auth_service/tests/unit/test_refresh_endpoint.py:75",
        "auth_service/tests/unit/test_refresh_endpoint.py:87",
        "auth_service/tests/unit/test_refresh_endpoint.py:92"
      ]
    },
    "valid.token": {
      "value": "valid.token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:139"
      ]
    },
    "validate": {
      "value": "validate",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_refactor_helper.py:683",
        "scripts/compliance/test_refactor_helper.py:727",
        "scripts/comprehensive_test_fixer.py:88",
        "scripts/comprehensive_test_fixer.py:251"
      ]
    },
    "validate_base_url": {
      "value": "validate_base_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_database_sessions.py:44"
      ]
    },
    "validate_llm_test_models": {
      "value": "validate_llm_test_models",
      "category": "test_literals",
      "locations": [
        "scripts/validate_llm_test_models.py:77"
      ]
    },
    "validate_token": {
      "value": "validate_token",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/unit/test_refresh_endpoint.py:269",
        "auth_service/tests/unit/test_refresh_endpoint.py:292",
        "auth_service/tests/unit/test_refresh_endpoint.py:301",
        "auth_service/tests/unit/test_refresh_endpoint.py:313"
      ]
    },
    "validation": {
      "value": "validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:267",
        "scripts/test_cors.py:286",
        "scripts/test_cors.py:462"
      ]
    },
    "validation_id": {
      "value": "validation_id",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:241",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:249"
      ]
    },
    "validation_test": {
      "value": "validation_test",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:282"
      ]
    },
    "value": {
      "value": "value",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:269",
        "scripts/optimize_test_performance.py:85",
        "scripts/optimize_test_performance.py:118",
        "scripts/optimize_test_performance.py:120",
        "scripts/setup_staging_test_account.py:154",
        "scripts/setup_staging_test_account.py:162"
      ]
    },
    "value_score": {
      "value": "value_score",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:75",
        "scripts/business_value_test_index.py:540",
        "scripts/business_value_test_index.py:597"
      ]
    },
    "vars": {
      "value": "vars",
      "category": "test_literals",
      "locations": [
        "scripts/test_oauth_dev_config.py:23",
        "scripts/test_oauth_dev_config.py:37",
        "scripts/test_oauth_dev_config.py:49",
        "scripts/test_oauth_dev_config.py:79"
      ]
    },
    "vary": {
      "value": "vary",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:246",
        "scripts/test_cors_issue.py:24",
        "scripts/test_cors_issue.py:45",
        "scripts/test_cors_issue.py:67"
      ]
    },
    "vary_header": {
      "value": "vary_header",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:204",
        "scripts/test_cors.py:247",
        "scripts/test_cors.py:248"
      ]
    },
    "venv": {
      "value": "venv",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/business_value_test_index.py:131",
        "scripts/check_conftest_violations.py:22",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19",
        "scripts/generate_test_audit.py:22",
        "scripts/test_exclusion_check.py:21"
      ]
    },
    "venv_test": {
      "value": "venv_test",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:103",
        "scripts/compliance/project_test_validator.py:40",
        "scripts/compliance/real_test_requirements_enforcer.py:133",
        "scripts/compliance/test_size_validator.py:156",
        "scripts/fix_all_test_issues.py:16",
        "scripts/fix_all_test_issues.py:19"
      ]
    },
    "verbose": {
      "value": "verbose",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:197",
        "scripts/unified_test_config.py:204",
        "scripts/unified_test_config.py:211",
        "scripts/unified_test_config.py:218",
        "scripts/unified_test_config.py:370"
      ]
    },
    "verified_email": {
      "value": "verified_email",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/user_factory.py:86",
        "auth_service/tests/test_auth_comprehensive.py:236",
        "auth_service/tests/test_oauth_state_validation.py:272"
      ]
    },
    "verify": {
      "value": "verify",
      "category": "test_literals",
      "locations": [
        "scripts/comprehensive_test_fixer.py:88",
        "scripts/comprehensive_test_fixer.py:251"
      ]
    },
    "verify_exp": {
      "value": "verify_exp",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:175"
      ]
    },
    "verify_signature": {
      "value": "verify_signature",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:175"
      ]
    },
    "version": {
      "value": "version",
      "category": "test_literals",
      "locations": [
        "scripts/test_ssl_certificates_staging.py:79",
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "version: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: netra_test\n      POSTGRES_PASSWORD: test_password\n      POSTGRES_DB: netra_test\n    ports:\n      - \"5433:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U netra_test\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6380:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5": {
      "value": "version: '3.8'\n\nservices:\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_USER: netra_test\n      POSTGRES_PASSWORD: test_password\n      POSTGRES_DB: netra_test\n    ports:\n      - \"5433:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U netra_test\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - \"6380:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:61"
      ]
    },
    "view": {
      "value": "view",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172"
      ]
    },
    "violation_type": {
      "value": "violation_type",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:627",
        "scripts/compliance/test_size_validator.py:441",
        "scripts/compliance/test_size_validator.py:470",
        "scripts/compliance/test_size_validator.py:471"
      ]
    },
    "violation_type_breakdown": {
      "value": "violation_type_breakdown",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:262",
        "scripts/remove_test_stubs.py:320"
      ]
    },
    "violations": {
      "value": "violations",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:611",
        "scripts/auto_fix_test_sizes.py:626",
        "scripts/check_test_compliance.py:119",
        "scripts/check_test_compliance.py:175",
        "scripts/check_test_compliance.py:175",
        "scripts/check_test_compliance.py:176",
        "scripts/compliance/test_size_validator.py:77",
        "scripts/compliance/test_size_validator.py:92",
        "scripts/compliance/test_size_validator.py:118",
        "scripts/compliance/test_size_validator.py:436"
      ]
    },
    "violations (dry_run=": {
      "value": "violations (dry_run=",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:796"
      ]
    },
    "violations automatically.": {
      "value": "violations automatically.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:63"
      ]
    },
    "violations in": {
      "value": "violations in",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:718",
        "scripts/remove_test_stubs.py:248",
        "scripts/validate_llm_test_models.py:164"
      ]
    },
    "violations remain after auto-fix:": {
      "value": "violations remain after auto-fix:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:74"
      ]
    },
    "violations)": {
      "value": "violations)",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:552",
        "scripts/compliance/real_test_validator.py:318",
        "scripts/compliance/test_violations_reporter.py:116"
      ]
    },
    "violations):": {
      "value": "violations):",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:69",
        "scripts/ci/check_test_stubs.py:77"
      ]
    },
    "violations.": {
      "value": "violations.",
      "category": "test_literals",
      "locations": [
        "scripts/remove_test_stubs.py:371"
      ]
    },
    "vs": {
      "value": "vs",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:273",
        "scripts/test_secret_manager_builder_critical.py:404"
      ]
    },
    "w": {
      "value": "w",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:124",
        "scripts/align_test_imports.py:418",
        "scripts/analyze_test_mocks.py:185",
        "scripts/analyze_test_overlap.py:501",
        "scripts/analyze_test_overlap.py:612",
        "scripts/apply_fast_test_decorators.py:120",
        "scripts/auto_fix_test_sizes.py:408",
        "scripts/auto_fix_test_violations.py:536",
        "scripts/auto_fix_test_violations.py:564",
        "scripts/auto_fix_test_violations.py:590"
      ]
    },
    "warning": {
      "value": "warning",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:231",
        "auth_service/tests/auth-service-down-critical-scenarios.py:378",
        "scripts/ci/check_test_stubs.py:97",
        "scripts/setup_test_environment.py:133",
        "scripts/setup_test_environment.py:168",
        "scripts/setup_test_environment.py:186",
        "scripts/setup_test_environment.py:285",
        "scripts/test_data_validator_backup.py:303",
        "scripts/test_data_validator_backup.py:304",
        "scripts/test_data_validator_backup.py:560"
      ]
    },
    "warnings": {
      "value": "warnings",
      "category": "test_literals",
      "locations": [
        "auth_service/test_staging_db_connection.py:267",
        "scripts/compliance/test_refactor_helper.py:591",
        "scripts/compliance/test_refactor_helper.py:596",
        "scripts/compliance/test_refactor_helper.py:597",
        "scripts/compliance/test_refactor_helper.py:613",
        "scripts/compliance/test_refactor_helper.py:621",
        "scripts/compliance/test_refactor_helper.py:627",
        "scripts/compliance/test_refactor_helper.py:733",
        "scripts/compliance/test_refactor_helper.py:735",
        "scripts/compliance/test_size_validator.py:400"
      ]
    },
    "warp-custom": {
      "value": "warp-custom",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:236"
      ]
    },
    "warp-custom-default=catthehacker/ubuntu:act-latest": {
      "value": "warp-custom-default=catthehacker/ubuntu:act-latest",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:116",
        "scripts/test_workflows_with_act.py:155"
      ]
    },
    "web": {
      "value": "web",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/audit_factory.py:157",
        "scripts/test_coordination_fixes.py:318"
      ]
    },
    "web_": {
      "value": "web_",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/session_factory.py:93"
      ]
    },
    "webpack": {
      "value": "webpack",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:70"
      ]
    },
    "websocket": {
      "value": "websocket",
      "category": "test_literals",
      "locations": [
        "scripts/add_pytest_markers.py:26",
        "scripts/analyze_test_mocks.py:19",
        "scripts/analyze_test_mocks.py:48",
        "scripts/analyze_test_mocks.py:49",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/auto_fix_test_sizes.py:343",
        "scripts/auto_fix_test_violations.py:495",
        "scripts/auto_fix_test_violations.py:496",
        "scripts/business_value_test_index.py:96",
        "scripts/business_value_test_index.py:381"
      ]
    },
    "websocket_bypass": {
      "value": "websocket_bypass",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:218",
        "scripts/test_docker_websocket_fix.py:274"
      ]
    },
    "websocket_config": {
      "value": "websocket_config",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:94",
        "scripts/test_websocket_dev_mode.py:96"
      ]
    },
    "websocket_connection": {
      "value": "websocket_connection",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:41",
        "scripts/test_websocket_dev_mode.py:190",
        "scripts/test_websocket_dev_mode.py:220",
        "scripts/test_websocket_dev_mode.py:229"
      ]
    },
    "websocket_cors_test_results_": {
      "value": "websocket_cors_test_results_",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:335"
      ]
    },
    "websocket_manager": {
      "value": "websocket_manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_startup.py:45"
      ]
    },
    "websocket_manager = Mock()": {
      "value": "websocket_manager = Mock()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:56"
      ]
    },
    "websocket_manager = UnifiedWebSocketManager()": {
      "value": "websocket_manager = UnifiedWebSocketManager()",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_fixer.py:58"
      ]
    },
    "websocket_timeout": {
      "value": "websocket_timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:46",
        "scripts/test_cold_start_e2e.py:294",
        "scripts/test_cold_start_e2e.py:398"
      ]
    },
    "websocket_url": {
      "value": "websocket_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_cors_comprehensive.py:61"
      ]
    },
    "websockets": {
      "value": "websockets",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:29"
      ]
    },
    "websockets library not installed - skipping WebSocket connection test": {
      "value": "websockets library not installed - skipping WebSocket connection test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_dev_mode.py:227"
      ]
    },
    "websocket|WebSocket|ws://": {
      "value": "websocket|WebSocket|ws://",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:442"
      ]
    },
    "websocket|ws|realtime|socket": {
      "value": "websocket|ws|realtime|socket",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:96"
      ]
    },
    "weekend_multiplier": {
      "value": "weekend_multiplier",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:31",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:37",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:43",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:93"
      ]
    },
    "widget": {
      "value": "widget",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/project_test_validator.py:172",
        "scripts/compliance/project_test_validator.py:184",
        "scripts/compliance/real_test_requirements_enforcer.py:239",
        "scripts/compliance/real_test_requirements_enforcer.py:261",
        "scripts/compliance/real_test_validator.py:136"
      ]
    },
    "will-be-set-by-secrets": {
      "value": "will-be-set-by-secrets",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:425"
      ]
    },
    "win32": {
      "value": "win32",
      "category": "test_literals",
      "locations": [
        "scripts/fix_common_test_issues.py:58",
        "scripts/setup_test_environment.py:10",
        "scripts/test_backend.py:56",
        "scripts/test_backend_optimized.py:456",
        "scripts/test_frontend.py:522",
        "scripts/test_oauth_local.py:21",
        "scripts/test_oauth_local.py:35",
        "scripts/test_secret_manager_debug.py:11",
        "scripts/test_workflows_with_act.py:17"
      ]
    },
    "window\\.dataLayer\\s*=\\s*window\\.dataLayer\\s*\\|\\|\\s*\\[\\]|dataLayer\\s*=\\s*\\[\\]": {
      "value": "window\\.dataLayer\\s*=\\s*window\\.dataLayer\\s*\\|\\|\\s*\\[\\]|dataLayer\\s*=\\s*\\[\\]",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_loading.py:49"
      ]
    },
    "with": {
      "value": "with",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_sizes.py:283",
        "scripts/test_log_introspection.py:91"
      ]
    },
    "worker": {
      "value": "worker",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/log_generator.py:52",
        "netra_backend/app/services/realistic_test_data/performance_simulator.py:35"
      ]
    },
    "workers": {
      "value": "workers",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_config.py:194",
        "scripts/unified_test_config.py:201",
        "scripts/unified_test_config.py:208",
        "scripts/unified_test_config.py:215",
        "scripts/unified_test_config.py:350"
      ]
    },
    "workflow": {
      "value": "workflow",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:294",
        "scripts/test_workflows_with_act.py:305",
        "scripts/test_workflows_with_act.py:340",
        "scripts/test_workflows_with_act.py:346"
      ]
    },
    "workflow-test-report.json": {
      "value": "workflow-test-report.json",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:350"
      ]
    },
    "workflow_call": {
      "value": "workflow_call",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:148"
      ]
    },
    "workflow_verification_results.md": {
      "value": "workflow_verification_results.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status_corrected.py:259"
      ]
    },
    "workflow_verification_test_report.md": {
      "value": "workflow_verification_test_report.md",
      "category": "test_literals",
      "locations": [
        "scripts/test_verify_workflow_status.py:215"
      ]
    },
    "workflows": {
      "value": "workflows",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:27"
      ]
    },
    "workflows to test": {
      "value": "workflows to test",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:280"
      ]
    },
    "workload": {
      "value": "workload",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:54"
      ]
    },
    "workload_": {
      "value": "workload_",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:174",
        "scripts/test_data_validator_backup.py:619",
        "scripts/test_data_validator_backup.py:671"
      ]
    },
    "workload_id": {
      "value": "workload_id",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:174",
        "scripts/test_data_validator_backup.py:619",
        "scripts/test_data_validator_backup.py:638",
        "scripts/test_data_validator_backup.py:671"
      ]
    },
    "workload_patterns": {
      "value": "workload_patterns",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/models.py:18"
      ]
    },
    "workload_type": {
      "value": "workload_type",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:72",
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:257"
      ]
    },
    "workloads": {
      "value": "workloads",
      "category": "test_literals",
      "locations": [
        "scripts/business_value_test_index.py:495"
      ]
    },
    "write": {
      "value": "write",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/integration/test_refresh_integration.py:85",
        "auth_service/tests/integration/test_refresh_integration.py:329",
        "auth_service/tests/test_token_validation_security_cycles_31_35.py:88",
        "scripts/fix_authentication_test_tokens.py:45",
        "scripts/setup_staging_test_account.py:91",
        "scripts/test_jwt_fix.py:22"
      ]
    },
    "wrong-challenge": {
      "value": "wrong-challenge",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_oauth_security_vulnerabilities.py:127"
      ]
    },
    "wrong-secret-key": {
      "value": "wrong-secret-key",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/factories/token_factory.py:159"
      ]
    },
    "wrongField": {
      "value": "wrongField",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_refresh_format.py:129"
      ]
    },
    "wrong_field": {
      "value": "wrong_field",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_refresh_endpoint_compatibility.py:108"
      ]
    },
    "wrongpassword": {
      "value": "wrongpassword",
      "category": "test_literals",
      "locations": [
        "auth_service/tests/test_auth_comprehensive.py:397"
      ]
    },
    "ws": {
      "value": "ws",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_mocks.py:48",
        "scripts/auto_fix_test_sizes.py:342",
        "scripts/auto_fix_test_violations.py:495"
      ]
    },
    "ws://": {
      "value": "ws://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:457",
        "scripts/test_cors.py:137"
      ]
    },
    "ws://backend:8000/ws": {
      "value": "ws://backend:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:126"
      ]
    },
    "ws://localhost:": {
      "value": "ws://localhost:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:25"
      ]
    },
    "ws://localhost:8000": {
      "value": "ws://localhost:8000",
      "category": "test_literals",
      "locations": [
        "scripts/start_test_services.py:155",
        "scripts/test_docker_websocket_fix.py:45",
        "scripts/test_websocket_cors_comprehensive.py:324",
        "scripts/test_websocket_middleware.py:21",
        "scripts/unified_test_runner.py:209"
      ]
    },
    "ws://localhost:8000/ws": {
      "value": "ws://localhost:8000/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:46",
        "scripts/test_docker_websocket_fix.py:121",
        "scripts/test_websocket_connection.py:26",
        "scripts/test_websocket_connection.py:32",
        "scripts/test_websocket_connection.py:40",
        "scripts/test_websocket_connection.py:127",
        "scripts/test_websocket_dev_mode.py:35",
        "scripts/test_websocket_manual.py:18",
        "scripts/test_websocket_simple.py:16",
        "scripts/test_websocket_simple.py:69"
      ]
    },
    "ws://localhost:8000/ws/test": {
      "value": "ws://localhost:8000/ws/test",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:70"
      ]
    },
    "ws_url": {
      "value": "ws_url",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:446"
      ]
    },
    "wss://": {
      "value": "wss://",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors.py:137"
      ]
    },
    "wss://api.staging.netrasystems.ai/ws": {
      "value": "wss://api.staging.netrasystems.ai/ws",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:31",
        "scripts/test_staging_deployment.py:147"
      ]
    },
    "wörk-löad_ñoñé": {
      "value": "wörk-löad_ñoñé",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:638"
      ]
    },
    "x": {
      "value": "x",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:330"
      ]
    },
    "xdist": {
      "value": "xdist",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend.py:153"
      ]
    },
    "xedvrr4c3r.us-central1.gcp.clickhouse.cloud": {
      "value": "xedvrr4c3r.us-central1.gcp.clickhouse.cloud",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:110"
      ]
    },
    "y": {
      "value": "y",
      "category": "test_literals",
      "locations": [
        "scripts/cleanup_test_processes.py:112",
        "scripts/iterative_test_fix_loop.py:151"
      ]
    },
    "year_end": {
      "value": "year_end",
      "category": "test_literals",
      "locations": [
        "netra_backend/app/services/realistic_test_data/workload_simulator.py:35"
      ]
    },
    "zinc": {
      "value": "zinc",
      "category": "test_literals",
      "locations": [
        "frontend/components/chat/ConnectionStatusIndicator.test.tsx:28"
      ]
    },
    "{": {
      "value": "{",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:49",
        "scripts/check_test_compliance.py:53",
        "scripts/compliance/real_test_requirements_enforcer.py:438",
        "scripts/comprehensive_test_fixer.py:202"
      ]
    },
    "{{.Names}}": {
      "value": "{{.Names}}",
      "category": "test_literals",
      "locations": [
        "scripts/setup_e2e_test_ports.py:32"
      ]
    },
    "|": {
      "value": "|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:479",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488",
        "scripts/compliance/test_size_validator.py:488"
      ]
    },
    "| $": {
      "value": "| $",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:150"
      ]
    },
    "| Avg:": {
      "value": "| Avg:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:626"
      ]
    },
    "| Database | Queries | Avg Latency (ms) |": {
      "value": "| Database | Queries | Avg Latency (ms) |",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "| Error:": {
      "value": "| Error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:500"
      ]
    },
    "| File | Function | Lines | Limit | Fix Suggestion |": {
      "value": "| File | Function | Lines | Limit | Fix Suggestion |",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:485"
      ]
    },
    "| File | Lines | Limit | Fix Suggestion |": {
      "value": "| File | Lines | Limit | Fix Suggestion |",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:476"
      ]
    },
    "| Issue:": {
      "value": "| Issue:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:507"
      ]
    },
    "| Model | Calls | Estimated Cost |": {
      "value": "| Model | Calls | Estimated Cost |",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "| Pattern:": {
      "value": "| Pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:497"
      ]
    },
    "|----------|---------|------------------|": {
      "value": "|----------|---------|------------------|",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:158"
      ]
    },
    "|-------|-------|----------------|": {
      "value": "|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/real_service_test_metrics.py:146"
      ]
    },
    "|------|----------|-------|-------|----------------|": {
      "value": "|------|----------|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:486"
      ]
    },
    "|------|-------|-------|----------------|": {
      "value": "|------|-------|-------|----------------|",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/test_size_validator.py:477"
      ]
    },
    "|def": {
      "value": "|def",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:101"
      ]
    },
    "}": {
      "value": "}",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_compliance.py:49",
        "scripts/check_test_compliance.py:53",
        "scripts/compliance/real_test_requirements_enforcer.py:438"
      ]
    },
    "•": {
      "value": "•",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:349"
      ]
    },
    "• For excessive_mocking violations: Use real components where possible": {
      "value": "• For excessive_mocking violations: Use real components where possible",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:149"
      ]
    },
    "• For file_size violations: Split large test files into focused modules": {
      "value": "• For file_size violations: Split large test files into focused modules",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:147"
      ]
    },
    "• For function_size violations: Extract helper methods": {
      "value": "• For function_size violations: Extract helper methods",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:148"
      ]
    },
    "• For mock_component violations: Replace with real component instantiation": {
      "value": "• For mock_component violations: Replace with real component instantiation",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:150"
      ]
    },
    "• Run with --fix to attempt automatic fixes": {
      "value": "• Run with --fix to attempt automatic fixes",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:146"
      ]
    },
    "ℹ [": {
      "value": "ℹ [",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:305"
      ]
    },
    "ℹ️": {
      "value": "ℹ️",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "ℹ️  Connection closed due to authentication (expected without token)": {
      "value": "ℹ️  Connection closed due to authentication (expected without token)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:58"
      ]
    },
    "ℹ️  Main endpoint requires authentication or bypass configuration": {
      "value": "ℹ️  Main endpoint requires authentication or bypass configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:134"
      ]
    },
    "→": {
      "value": "→",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:90",
        "scripts/test_staging_env.py:182"
      ]
    },
    "→ Fix:": {
      "value": "→ Fix:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:293",
        "scripts/setup_test_environment.py:300"
      ]
    },
    "↔ `": {
      "value": "↔ `",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:592",
        "scripts/analyze_test_overlap.py:607"
      ]
    },
    "⏭️": {
      "value": "⏭️",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:856"
      ]
    },
    "⏭️ SKIPPED": {
      "value": "⏭️ SKIPPED",
      "category": "test_literals",
      "locations": [
        "scripts/unified_test_runner.py:900"
      ]
    },
    "⏰": {
      "value": "⏰",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:121"
      ]
    },
    "⏰ Test timed out": {
      "value": "⏰ Test timed out",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:318"
      ]
    },
    "⏱️ No more messages received (timeout)": {
      "value": "⏱️ No more messages received (timeout)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:108"
      ]
    },
    "⏱️ STABILITY | Keeping services running for 5 seconds...": {
      "value": "⏱️ STABILITY | Keeping services running for 5 seconds...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:102"
      ]
    },
    "⏳ Waiting for services to be healthy...": {
      "value": "⏳ Waiting for services to be healthy...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:145"
      ]
    },
    "⏹️  Test interrupted by user": {
      "value": "⏹️  Test interrupted by user",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:252"
      ]
    },
    "└─": {
      "value": "└─",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:276"
      ]
    },
    "⚠": {
      "value": "⚠",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:295",
        "scripts/test_staging_login_automated.py:100",
        "scripts/test_staging_login_automated.py:277"
      ]
    },
    "⚠ Could not get service list": {
      "value": "⚠ Could not get service list",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:280"
      ]
    },
    "⚠ Docker Compose not available, skipping integration test": {
      "value": "⚠ Docker Compose not available, skipping integration test",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:257"
      ]
    },
    "⚠ Manual fix needed: Extract helpers in": {
      "value": "⚠ Manual fix needed: Extract helpers in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:175"
      ]
    },
    "⚠ Manual fix needed: Split": {
      "value": "⚠ Manual fix needed: Split",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:172"
      ]
    },
    "⚠ Needs manual review:": {
      "value": "⚠ Needs manual review:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:313"
      ]
    },
    "⚠ No GTM events were captured. Check if GTM is properly initialized.": {
      "value": "⚠ No GTM events were captured. Check if GTM is properly initialized.",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:136"
      ]
    },
    "⚠ No services running, cannot test log retrieval": {
      "value": "⚠ No services running, cannot test log retrieval",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:278"
      ]
    },
    "⚠ Some services are degraded": {
      "value": "⚠ Some services are degraded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:341"
      ]
    },
    "⚠ [": {
      "value": "⚠ [",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:298"
      ]
    },
    "⚠️": {
      "value": "⚠️",
      "category": "test_literals",
      "locations": [
        "scripts/analyze_test_overlap.py:529",
        "scripts/compliance/real_test_requirements_enforcer.py:525",
        "scripts/test_cold_start_e2e.py:209",
        "scripts/test_cold_start_e2e.py:213"
      ]
    },
    "⚠️  .secrets file not found. Creating with mock values...": {
      "value": "⚠️  .secrets file not found. Creating with mock values...",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:73"
      ]
    },
    "⚠️  Backend is configured to use port": {
      "value": "⚠️  Backend is configured to use port",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:141"
      ]
    },
    "⚠️  Exiting with warning due to": {
      "value": "⚠️  Exiting with warning due to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:463"
      ]
    },
    "⚠️  Found": {
      "value": "⚠️  Found",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:444"
      ]
    },
    "⚠️  Issues Found (": {
      "value": "⚠️  Issues Found (",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:338"
      ]
    },
    "⚠️  Issues found in": {
      "value": "⚠️  Issues found in",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:290"
      ]
    },
    "⚠️  MEDIUM SEVERITY (": {
      "value": "⚠️  MEDIUM SEVERITY (",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:77"
      ]
    },
    "⚠️  NO TESTS WERE RUN": {
      "value": "⚠️  NO TESTS WERE RUN",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:358"
      ]
    },
    "⚠️  No response received from test endpoint": {
      "value": "⚠️  No response received from test endpoint",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:99"
      ]
    },
    "⚠️  No response received within 5 seconds": {
      "value": "⚠️  No response received within 5 seconds",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:49"
      ]
    },
    "⚠️  Some CORS tests failed. Check the implementation.": {
      "value": "⚠️  Some CORS tests failed. Check the implementation.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:200"
      ]
    },
    "⚠️  Test timeout": {
      "value": "⚠️  Test timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:179"
      ]
    },
    "⚠️  Validation timeout": {
      "value": "⚠️  Validation timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:136"
      ]
    },
    "⚠️ Auth bypass may not work - check environment variables": {
      "value": "⚠️ Auth bypass may not work - check environment variables",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:227"
      ]
    },
    "⚠️ Cannot create tables (may be permission issue):": {
      "value": "⚠️ Cannot create tables (may be permission issue):",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:190"
      ]
    },
    "⚠️ Connection state changed:": {
      "value": "⚠️ Connection state changed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:157"
      ]
    },
    "⚠️ GCP connectivity not available (expected in dev)": {
      "value": "⚠️ GCP connectivity not available (expected in dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:94"
      ]
    },
    "⚠️ HIGH: Address": {
      "value": "⚠️ HIGH: Address",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:202"
      ]
    },
    "⚠️ MEDIUM": {
      "value": "⚠️ MEDIUM",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:551"
      ]
    },
    "⚠️ No model response received within timeout": {
      "value": "⚠️ No model response received within timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:426"
      ]
    },
    "⚠️ SOME TESTS FAILED": {
      "value": "⚠️ SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:495"
      ]
    },
    "⚠️ Some secrets have invalid values": {
      "value": "⚠️ Some secrets have invalid values",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:217"
      ]
    },
    "⚠️ Some tests failed. Please check the failures above.": {
      "value": "⚠️ Some tests failed. Please check the failures above.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:195"
      ]
    },
    "⚠️ Unexpected database:": {
      "value": "⚠️ Unexpected database:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:132"
      ]
    },
    "⚠️ Unexpected host:": {
      "value": "⚠️ Unexpected host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:111"
      ]
    },
    "⚠️ Unexpected port:": {
      "value": "⚠️ Unexpected port:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:118"
      ]
    },
    "⚠️ Unexpected user:": {
      "value": "⚠️ Unexpected user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:125"
      ]
    },
    "⚠️ WARNING | Auth service failed to start": {
      "value": "⚠️ WARNING | Auth service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:76"
      ]
    },
    "⚠️ WARNING | Auth system verification failed": {
      "value": "⚠️ WARNING | Auth system verification failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:97"
      ]
    },
    "⚠️ WARNING | Backend readiness check failed": {
      "value": "⚠️ WARNING | Backend readiness check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:89"
      ]
    },
    "⚠️ WARNING | Cleanup error:": {
      "value": "⚠️ WARNING | Cleanup error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:121"
      ]
    },
    "⚠️ WARNING | Migration issues, continuing...": {
      "value": "⚠️ WARNING | Migration issues, continuing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:62"
      ]
    },
    "⚠️ WARNING | Secrets loading had issues, continuing...": {
      "value": "⚠️ WARNING | Secrets loading had issues, continuing...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:49"
      ]
    },
    "⚠️ Warning:": {
      "value": "⚠️ Warning:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:608"
      ]
    },
    "⚠️ get_database_password() returned None (expected in dev)": {
      "value": "⚠️ get_database_password() returned None (expected in dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:155"
      ]
    },
    "⚠️ get_redis_password() returned None (expected in dev)": {
      "value": "⚠️ get_redis_password() returned None (expected in dev)",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:162"
      ]
    },
    "⚡ HIGH PRIORITY: Address": {
      "value": "⚡ HIGH PRIORITY: Address",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:334"
      ]
    },
    "⚡ PERFORMANCE ISSUES (": {
      "value": "⚡ PERFORMANCE ISSUES (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:224"
      ]
    },
    "⚡ PERFORMANCE REQUIREMENTS NOT MET!\nServices failing to meet <": {
      "value": "⚡ PERFORMANCE REQUIREMENTS NOT MET!\nServices failing to meet <",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:656"
      ]
    },
    "✅": {
      "value": "✅",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:883",
        "scripts/test_cold_start_e2e.py:206",
        "scripts/test_coordination_fixes.py:63",
        "scripts/test_example_message_flow.py:112",
        "scripts/test_example_message_flow.py:321",
        "scripts/test_secret_manager_debug.py:50",
        "scripts/test_staging_env.py:189",
        "scripts/unified_test_runner.py:856"
      ]
    },
    "✅  No fake tests detected - good job!": {
      "value": "✅  No fake tests detected - good job!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:450"
      ]
    },
    "✅ ACT found:": {
      "value": "✅ ACT found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:45"
      ]
    },
    "✅ ANTHROPIC_API_KEY: Found": {
      "value": "✅ ANTHROPIC_API_KEY: Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:56"
      ]
    },
    "✅ Agent System: 87 → 1 files (98.8% reduction)": {
      "value": "✅ Agent System: 87 → 1 files (98.8% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:516"
      ]
    },
    "✅ All E2E tests passed successfully!": {
      "value": "✅ All E2E tests passed successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:100"
      ]
    },
    "✅ All imports successful": {
      "value": "✅ All imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:220"
      ]
    },
    "✅ All services are healthy": {
      "value": "✅ All services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:163"
      ]
    },
    "✅ All test files comply with real test requirements!": {
      "value": "✅ All test files comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:105"
      ]
    },
    "✅ All tests appear to be legitimate - no fake tests detected!": {
      "value": "✅ All tests appear to be legitimate - no fake tests detected!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:466"
      ]
    },
    "✅ All tests comply with real test requirements!": {
      "value": "✅ All tests comply with real test requirements!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:611"
      ]
    },
    "✅ All tests passed!": {
      "value": "✅ All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:114"
      ]
    },
    "✅ Auth Service: 89 → 1 files (98.9% reduction)": {
      "value": "✅ Auth Service: 89 → 1 files (98.9% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:514"
      ]
    },
    "✅ Auth bypass is properly configured for development": {
      "value": "✅ Auth bypass is properly configured for development",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:225"
      ]
    },
    "✅ Authentication successful (user:": {
      "value": "✅ Authentication successful (user:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:247"
      ]
    },
    "✅ Backend Core: 60 → 1 files (98.3% reduction)": {
      "value": "✅ Backend Core: 60 → 1 files (98.3% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:515"
      ]
    },
    "✅ Backend is configured to use port 8000": {
      "value": "✅ Backend is configured to use port 8000",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:138"
      ]
    },
    "✅ Builder created for service:": {
      "value": "✅ Builder created for service:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:37"
      ]
    },
    "✅ Cache working correctly": {
      "value": "✅ Cache working correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:113"
      ]
    },
    "✅ Can create and drop tables": {
      "value": "✅ Can create and drop tables",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:188"
      ]
    },
    "✅ ClickHouse staging connectivity test PASSED!": {
      "value": "✅ ClickHouse staging connectivity test PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:225"
      ]
    },
    "✅ Configuration validation passed": {
      "value": "✅ Configuration validation passed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:239"
      ]
    },
    "✅ Connected successfully!": {
      "value": "✅ Connected successfully!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:67"
      ]
    },
    "✅ Connection established": {
      "value": "✅ Connection established",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:137"
      ]
    },
    "✅ Connection established but no response (may be expected)": {
      "value": "✅ Connection established but no response (may be expected)",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:50"
      ]
    },
    "✅ Created .secrets file with mock values": {
      "value": "✅ Created .secrets file with mock values",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:92"
      ]
    },
    "✅ Database is correct:": {
      "value": "✅ Database is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:134"
      ]
    },
    "✅ Development auth bypass is working!": {
      "value": "✅ Development auth bypass is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:132"
      ]
    },
    "✅ Docker found:": {
      "value": "✅ Docker found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:62"
      ]
    },
    "✅ Dry run successful": {
      "value": "✅ Dry run successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:171"
      ]
    },
    "✅ Fixed and validated successfully": {
      "value": "✅ Fixed and validated successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:317"
      ]
    },
    "✅ Fixed circular env.ACT reference": {
      "value": "✅ Fixed circular env.ACT reference",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:259"
      ]
    },
    "✅ GCP connectivity valid": {
      "value": "✅ GCP connectivity valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:92"
      ]
    },
    "✅ Graceful degradation with optional services": {
      "value": "✅ Graceful degradation with optional services",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:420"
      ]
    },
    "✅ Handler initialization successful": {
      "value": "✅ Handler initialization successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:264"
      ]
    },
    "✅ Host is correct:": {
      "value": "✅ Host is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:113"
      ]
    },
    "✅ Imports successful": {
      "value": "✅ Imports successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:388"
      ]
    },
    "✅ Initialization successful": {
      "value": "✅ Initialization successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:394"
      ]
    },
    "✅ JWT secret retrieved (length:": {
      "value": "✅ JWT secret retrieved (length:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:103"
      ]
    },
    "✅ Loaded": {
      "value": "✅ Loaded",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:77"
      ]
    },
    "✅ Message sent successfully": {
      "value": "✅ Message sent successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:359"
      ]
    },
    "✅ Message validation successful": {
      "value": "✅ Message validation successful",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:300",
        "scripts/test_example_message_flow.py:417"
      ]
    },
    "✅ Model response contains expected pattern:": {
      "value": "✅ Model response contains expected pattern:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:420"
      ]
    },
    "✅ No fake tests detected! Codebase follows testing best practices.": {
      "value": "✅ No fake tests detected! Codebase follows testing best practices.",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:186"
      ]
    },
    "✅ PASS": {
      "value": "✅ PASS",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:116",
        "scripts/test_and_fix_cors.py:132",
        "scripts/test_backend_port_binding.py:168",
        "scripts/test_backend_port_binding.py:179",
        "scripts/test_cold_start_e2e.py:486",
        "scripts/test_cors_implementation.py:187",
        "scripts/test_secret_manager_builder_critical.py:495",
        "scripts/test_secret_manager_builder_critical.py:624",
        "scripts/test_websocket_manual.py:123",
        "scripts/test_websocket_manual.py:124"
      ]
    },
    "✅ PASS: All security requirements met": {
      "value": "✅ PASS: All security requirements met",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:769"
      ]
    },
    "✅ PASSED": {
      "value": "✅ PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:148",
        "scripts/test_staging_env.py:170",
        "scripts/unified_test_runner.py:898",
        "scripts/unified_test_runner.py:903"
      ]
    },
    "✅ Passed:": {
      "value": "✅ Passed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:334"
      ]
    },
    "✅ Password is set (hidden)": {
      "value": "✅ Password is set (hidden)",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:142"
      ]
    },
    "✅ Port allocation conflict prevention": {
      "value": "✅ Port allocation conflict prevention",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:418"
      ]
    },
    "✅ Port is correct:": {
      "value": "✅ Port is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:120"
      ]
    },
    "✅ Readiness vs health check separation": {
      "value": "✅ Readiness vs health check separation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:417"
      ]
    },
    "✅ Received model event:": {
      "value": "✅ Received model event:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:412"
      ]
    },
    "✅ Received response:": {
      "value": "✅ Received response:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:41",
        "scripts/test_websocket_manual.py:92"
      ]
    },
    "✅ SSOT Violations: 14,484+ → <100 (99.3% reduction)": {
      "value": "✅ SSOT Violations: 14,484+ → <100 (99.3% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:517"
      ]
    },
    "✅ STAGING TESTS PASSED": {
      "value": "✅ STAGING TESTS PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:111"
      ]
    },
    "✅ SUCCESS | Auth service started": {
      "value": "✅ SUCCESS | Auth service started",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:74"
      ]
    },
    "✅ SUCCESS | Auth system is ready": {
      "value": "✅ SUCCESS | Auth system is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:95"
      ]
    },
    "✅ SUCCESS | Backend is ready": {
      "value": "✅ SUCCESS | Backend is ready",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:87"
      ]
    },
    "✅ SUCCESS | Backend service started": {
      "value": "✅ SUCCESS | Backend service started",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:69"
      ]
    },
    "✅ Secret Manager client initialized": {
      "value": "✅ Secret Manager client initialized",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:43"
      ]
    },
    "✅ SecretManagerBuilder imported successfully": {
      "value": "✅ SecretManagerBuilder imported successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:33"
      ]
    },
    "✅ Service dependency ordering": {
      "value": "✅ Service dependency ordering",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:416"
      ]
    },
    "✅ Service discovery timing issues": {
      "value": "✅ Service discovery timing issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:419"
      ]
    },
    "✅ Services started successfully": {
      "value": "✅ Services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:136"
      ]
    },
    "✅ Services stopped": {
      "value": "✅ Services stopped",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:475"
      ]
    },
    "✅ Stub Tests: 1,765+ → 0 (100% eliminated)": {
      "value": "✅ Stub Tests: 1,765+ → 0 (100% eliminated)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:519"
      ]
    },
    "✅ Successfully bound to port": {
      "value": "✅ Successfully bound to port",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:35"
      ]
    },
    "✅ Successfully connected to ClickHouse!": {
      "value": "✅ Successfully connected to ClickHouse!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:176"
      ]
    },
    "✅ Successfully fixed test_utils imports!": {
      "value": "✅ Successfully fixed test_utils imports!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_utils_imports.py:96"
      ]
    },
    "✅ Successfully imported backend main module": {
      "value": "✅ Successfully imported backend main module",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:131"
      ]
    },
    "✅ Syntax valid": {
      "value": "✅ Syntax valid",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:128"
      ]
    },
    "✅ System Status: BLOCKED → PRODUCTION READY": {
      "value": "✅ System Status: BLOCKED → PRODUCTION READY",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:520"
      ]
    },
    "✅ TEST PASSED | Service startup orchestration test completed successfully in": {
      "value": "✅ TEST PASSED | Service startup orchestration test completed successfully in",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:139"
      ]
    },
    "✅ Test Functions: 61,872+ → ~500 (99.2% reduction)": {
      "value": "✅ Test Functions: 61,872+ → ~500 (99.2% reduction)",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:518"
      ]
    },
    "✅ Test WebSocket connection established!": {
      "value": "✅ Test WebSocket connection established!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:77"
      ]
    },
    "✅ Test audit report generated:": {
      "value": "✅ Test audit report generated:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:271"
      ]
    },
    "✅ Test endpoint working perfectly!": {
      "value": "✅ Test endpoint working perfectly!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:95"
      ]
    },
    "✅ Thread created:": {
      "value": "✅ Thread created:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:343"
      ]
    },
    "✅ User is correct:": {
      "value": "✅ User is correct:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:127"
      ]
    },
    "✅ Uvicorn server started successfully and is responding": {
      "value": "✅ Uvicorn server started successfully and is responding",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:93"
      ]
    },
    "✅ WebSocket authentication bypass may need explicit enabling": {
      "value": "✅ WebSocket authentication bypass may need explicit enabling",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:59"
      ]
    },
    "✅ WebSocket bidirectional communication working!": {
      "value": "✅ WebSocket bidirectional communication working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:45"
      ]
    },
    "✅ WebSocket connection authenticated": {
      "value": "✅ WebSocket connection authenticated",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:299"
      ]
    },
    "✅ WebSocket connection established!": {
      "value": "✅ WebSocket connection established!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:25"
      ]
    },
    "✅ WebSocket infrastructure is working!": {
      "value": "✅ WebSocket infrastructure is working!",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:127"
      ]
    },
    "✅ get_database_password() returned value": {
      "value": "✅ get_database_password() returned value",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:153"
      ]
    },
    "✅ get_jwt_secret() works": {
      "value": "✅ get_jwt_secret() works",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:148"
      ]
    },
    "✅ get_redis_password() returned value": {
      "value": "✅ get_redis_password() returned value",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:160"
      ]
    },
    "✅ get_secret_manager() works": {
      "value": "✅ get_secret_manager() works",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:140"
      ]
    },
    "✅ load_secrets_for_service() returned": {
      "value": "✅ load_secrets_for_service() returned",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:144"
      ]
    },
    "✓": {
      "value": "✓",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:230",
        "scripts/setup_e2e_test_ports.py:104",
        "scripts/setup_test_environment.py:273",
        "scripts/test_cors.py:378",
        "scripts/test_cors.py:517",
        "scripts/test_cors.py:525",
        "scripts/test_cors.py:533",
        "scripts/test_staging_login_automated.py:97",
        "scripts/test_staging_login_automated.py:155",
        "scripts/test_staging_login_automated.py:199"
      ]
    },
    "✓ All components are implemented and working": {
      "value": "✓ All components are implemented and working",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:220"
      ]
    },
    "✓ All files have correct import order!": {
      "value": "✓ All files have correct import order!",
      "category": "test_literals",
      "locations": [
        "scripts/check_test_import_order.py:97"
      ]
    },
    "✓ All services are healthy": {
      "value": "✓ All services are healthy",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:339"
      ]
    },
    "✓ All syntax errors fixed!": {
      "value": "✓ All syntax errors fixed!",
      "category": "test_literals",
      "locations": [
        "scripts/fix_all_test_issues.py:293"
      ]
    },
    "✓ Anti-patterns to avoid": {
      "value": "✓ Anti-patterns to avoid",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:164"
      ]
    },
    "✓ Authentication tracking working": {
      "value": "✓ Authentication tracking working",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:59"
      ]
    },
    "✓ Backend is running": {
      "value": "✓ Backend is running",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:163"
      ]
    },
    "✓ CORS headers handled": {
      "value": "✓ CORS headers handled",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:183"
      ]
    },
    "✓ Composable SSL/TLS configuration": {
      "value": "✓ Composable SSL/TLS configuration",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:247"
      ]
    },
    "✓ Connected with origin:": {
      "value": "✓ Connected with origin:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:109"
      ]
    },
    "✓ Copied": {
      "value": "✓ Copied",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:254"
      ]
    },
    "✓ Correctly detected": {
      "value": "✓ Correctly detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:91"
      ]
    },
    "✓ Created .env.test file with default values": {
      "value": "✓ Created .env.test file with default values",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:332"
      ]
    },
    "✓ Created test database:": {
      "value": "✓ Created test database:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:221"
      ]
    },
    "✓ Detected": {
      "value": "✓ Detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:276"
      ]
    },
    "✓ Docker Compose version:": {
      "value": "✓ Docker Compose version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:260"
      ]
    },
    "✓ Empty service not in detailed section": {
      "value": "✓ Empty service not in detailed section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:378"
      ]
    },
    "✓ Environment set to 'staging'": {
      "value": "✓ Environment set to 'staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:190"
      ]
    },
    "✓ Environment variables exported": {
      "value": "✓ Environment variables exported",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:381"
      ]
    },
    "✓ Environment-aware fallback behavior": {
      "value": "✓ Environment-aware fallback behavior",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:245"
      ]
    },
    "✓ Error grouping and reporting works correctly": {
      "value": "✓ Error grouping and reporting works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:165"
      ]
    },
    "✓ Error tracking working": {
      "value": "✓ Error tracking working",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:96"
      ]
    },
    "✓ Examples and documentation provided": {
      "value": "✓ Examples and documentation provided",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:223"
      ]
    },
    "✓ File is compliant with size limits!": {
      "value": "✓ File is compliant with size limits!",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:45"
      ]
    },
    "✓ File splitting strategies": {
      "value": "✓ File splitting strategies",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:163"
      ]
    },
    "✓ Fixed mock component function in": {
      "value": "✓ Fixed mock component function in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:162"
      ]
    },
    "✓ Found": {
      "value": "✓ Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:268"
      ]
    },
    "✓ Functions under 8 lines": {
      "value": "✓ Functions under 8 lines",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:159"
      ]
    },
    "✓ GitHub OAuth: Redirects correctly": {
      "value": "✓ GitHub OAuth: Redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:271"
      ]
    },
    "✓ Google OAuth: Redirects correctly": {
      "value": "✓ Google OAuth: Redirects correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:265"
      ]
    },
    "✓ Helper method extraction": {
      "value": "✓ Helper method extraction",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:160"
      ]
    },
    "✓ Integrated Secret Manager support": {
      "value": "✓ Integrated Secret Manager support",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:246"
      ]
    },
    "✓ Integration with test runner is complete": {
      "value": "✓ Integration with test runner is complete",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:126",
        "scripts/compliance/demo_test_size_enforcement.py:222"
      ]
    },
    "✓ Issue deduplication works correctly": {
      "value": "✓ Issue deduplication works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:242"
      ]
    },
    "✓ Issue template creation works correctly": {
      "value": "✓ Issue template creation works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:213"
      ]
    },
    "✓ No configuration issues found!": {
      "value": "✓ No configuration issues found!",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:307"
      ]
    },
    "✓ OAuth configured for:": {
      "value": "✓ OAuth configured for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:354"
      ]
    },
    "✓ PASSED": {
      "value": "✓ PASSED",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:419"
      ]
    },
    "✓ Page view tracking working": {
      "value": "✓ Page view tracking working",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:47"
      ]
    },
    "✓ Parametrized tests": {
      "value": "✓ Parametrized tests",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:161"
      ]
    },
    "✓ Password has sufficient length": {
      "value": "✓ Password has sufficient length",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:182"
      ]
    },
    "✓ Pre-run validation function is available": {
      "value": "✓ Pre-run validation function is available",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:125"
      ]
    },
    "✓ Proper fixture usage": {
      "value": "✓ Proper fixture usage",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:162"
      ]
    },
    "✓ Reduced mocking in": {
      "value": "✓ Reduced mocking in",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:167"
      ]
    },
    "✓ Report contains": {
      "value": "✓ Report contains",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:371"
      ]
    },
    "✓ Report generation works correctly": {
      "value": "✓ Report generation works correctly",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:383"
      ]
    },
    "✓ Retrieved": {
      "value": "✓ Retrieved",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:273"
      ]
    },
    "✓ Standardized connection pooling": {
      "value": "✓ Standardized connection pooling",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:248"
      ]
    },
    "✓ Test WebSocket endpoint works": {
      "value": "✓ Test WebSocket endpoint works",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:177"
      ]
    },
    "✓ Test already passing": {
      "value": "✓ Test already passing",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:285"
      ]
    },
    "✓ Test database already exists:": {
      "value": "✓ Test database already exists:",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:223"
      ]
    },
    "✓ Test environment variables exported": {
      "value": "✓ Test environment variables exported",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:339"
      ]
    },
    "✓ Test size limits enforcement is fully functional": {
      "value": "✓ Test size limits enforcement is fully functional",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/demo_test_size_enforcement.py:221"
      ]
    },
    "✓ Test suite looks well optimized!": {
      "value": "✓ Test suite looks well optimized!",
      "category": "test_literals",
      "locations": [
        "scripts/optimize_test_performance.py:409"
      ]
    },
    "✓ This is the correct method for GCP Cloud Run": {
      "value": "✓ This is the correct method for GCP Cloud Run",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:165"
      ]
    },
    "✓ Unified configuration source for all services": {
      "value": "✓ Unified configuration source for all services",
      "category": "test_literals",
      "locations": [
        "scripts/test_redis_config_critical_failure.py:244"
      ]
    },
    "✓ Updated:": {
      "value": "✓ Updated:",
      "category": "test_literals",
      "locations": [
        "scripts/add_test_markers.py:223"
      ]
    },
    "✓ Using Cloud SQL Unix socket connection": {
      "value": "✓ Using Cloud SQL Unix socket connection",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:164"
      ]
    },
    "✓ Using standard 'postgres' user": {
      "value": "✓ Using standard 'postgres' user",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:177"
      ]
    },
    "✓ WebSocket config endpoint accessible": {
      "value": "✓ WebSocket config endpoint accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:171"
      ]
    },
    "✗": {
      "value": "✗",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:233",
        "auth_service/test_url_construction.py:235",
        "scripts/setup_e2e_test_ports.py:106",
        "scripts/setup_test_environment.py:273",
        "scripts/test_cors.py:378",
        "scripts/test_cors.py:393",
        "scripts/test_cors.py:517",
        "scripts/test_cors.py:525",
        "scripts/test_cors.py:533",
        "scripts/test_log_introspection.py:407"
      ]
    },
    "✗ Backend is not running. Please start the backend first.": {
      "value": "✗ Backend is not running. Please start the backend first.",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:165"
      ]
    },
    "✗ CORS issues detected": {
      "value": "✗ CORS issues detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:185"
      ]
    },
    "✗ Empty service incorrectly appears in detailed section": {
      "value": "✗ Empty service incorrectly appears in detailed section",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:380"
      ]
    },
    "✗ Environment not set to 'staging'": {
      "value": "✗ Environment not set to 'staging'",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:192"
      ]
    },
    "✗ Error getting database URL:": {
      "value": "✗ Error getting database URL:",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:169"
      ]
    },
    "✗ Error running tests:": {
      "value": "✗ Error running tests:",
      "category": "test_literals",
      "locations": [
        "scripts/test_gtm_tracking.py:145"
      ]
    },
    "✗ FAILED": {
      "value": "✗ FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:419"
      ]
    },
    "✗ Failed to detect error in:": {
      "value": "✗ Failed to detect error in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:99"
      ]
    },
    "✗ Failed with origin": {
      "value": "✗ Failed with origin",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:112"
      ]
    },
    "✗ No OAuth providers configured": {
      "value": "✗ No OAuth providers configured",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:356"
      ]
    },
    "✗ No password configured": {
      "value": "✗ No password configured",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:186"
      ]
    },
    "✗ Not using Cloud SQL socket - this could be the issue": {
      "value": "✗ Not using Cloud SQL socket - this could be the issue",
      "category": "test_literals",
      "locations": [
        "auth_service/test_url_construction.py:167"
      ]
    },
    "✗ Report missing": {
      "value": "✗ Report missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:373"
      ]
    },
    "✗ Test '": {
      "value": "✗ Test '",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_login_automated.py:328"
      ]
    },
    "✗ Test WebSocket endpoint failed": {
      "value": "✗ Test WebSocket endpoint failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:179"
      ]
    },
    "✗ WebSocket config endpoint not accessible": {
      "value": "✗ WebSocket config endpoint not accessible",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_middleware.py:173"
      ]
    },
    "✗ Wrong detection for:": {
      "value": "✗ Wrong detection for:",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:94"
      ]
    },
    "✗ [": {
      "value": "✗ [",
      "category": "test_literals",
      "locations": [
        "scripts/setup_test_environment.py:291"
      ]
    },
    "✨ Configuration is correctly using Secret Manager values": {
      "value": "✨ Configuration is correctly using Secret Manager values",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:226"
      ]
    },
    "✨ No placeholder or incorrect references detected": {
      "value": "✨ No placeholder or incorrect references detected",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:227"
      ]
    },
    "❌": {
      "value": "❌",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:65",
        "scripts/test_coordination_fixes.py:389",
        "scripts/test_cors_implementation.py:193",
        "scripts/test_example_message_flow.py:115",
        "scripts/test_example_message_flow.py:322",
        "scripts/test_log_introspection.py:428",
        "scripts/test_secret_manager_builder_critical.py:222",
        "scripts/test_secret_manager_debug.py:52",
        "scripts/test_staging_env.py:190",
        "scripts/unified_test_runner.py:856"
      ]
    },
    "❌ (FAILING)": {
      "value": "❌ (FAILING)",
      "category": "test_literals",
      "locations": [
        "scripts/auto_fix_test_violations.py:883"
      ]
    },
    "❌ ACT not found. Please install ACT first.": {
      "value": "❌ ACT not found. Please install ACT first.",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:47"
      ]
    },
    "❌ ANTHROPIC_API_KEY: Missing": {
      "value": "❌ ANTHROPIC_API_KEY: Missing",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:58"
      ]
    },
    "❌ Auth builder error:": {
      "value": "❌ Auth builder error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:105"
      ]
    },
    "❌ Backend main test failed:": {
      "value": "❌ Backend main test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:148"
      ]
    },
    "❌ Backward compatibility error:": {
      "value": "❌ Backward compatibility error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:165"
      ]
    },
    "❌ Cache builder error:": {
      "value": "❌ Cache builder error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:117"
      ]
    },
    "❌ Cache not working: got": {
      "value": "❌ Cache not working: got",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:115"
      ]
    },
    "❌ ClickHouse staging connectivity test FAILED!": {
      "value": "❌ ClickHouse staging connectivity test FAILED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:229"
      ]
    },
    "❌ Configuration error:": {
      "value": "❌ Configuration error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:242"
      ]
    },
    "❌ Connection closed: code=": {
      "value": "❌ Connection closed: code=",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:161"
      ]
    },
    "❌ Connection failed:": {
      "value": "❌ Connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:196"
      ]
    },
    "❌ Could not connect to test server": {
      "value": "❌ Could not connect to test server",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:105"
      ]
    },
    "❌ Debug info failed:": {
      "value": "❌ Debug info failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:125"
      ]
    },
    "❌ Docker not found or not running.": {
      "value": "❌ Docker not found or not running.",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:64"
      ]
    },
    "❌ Dry run failed:": {
      "value": "❌ Dry run failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:175"
      ]
    },
    "❌ E2E test failed:": {
      "value": "❌ E2E test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:104"
      ]
    },
    "❌ Error checking ACT:": {
      "value": "❌ Error checking ACT:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:50"
      ]
    },
    "❌ Error checking Docker:": {
      "value": "❌ Error checking Docker:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:67"
      ]
    },
    "❌ Error during lifecycle monitoring:": {
      "value": "❌ Error during lifecycle monitoring:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:170"
      ]
    },
    "❌ Error:": {
      "value": "❌ Error:",
      "category": "test_literals",
      "locations": [
        "scripts/fix_test_batch.py:324"
      ]
    },
    "❌ Exiting with error code due to": {
      "value": "❌ Exiting with error code due to",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:460"
      ]
    },
    "❌ Exiting with error:": {
      "value": "❌ Exiting with error:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:605"
      ]
    },
    "❌ FAIL": {
      "value": "❌ FAIL",
      "category": "test_literals",
      "locations": [
        "scripts/test_and_fix_cors.py:116",
        "scripts/test_and_fix_cors.py:132",
        "scripts/test_backend_port_binding.py:168",
        "scripts/test_backend_port_binding.py:179",
        "scripts/test_cold_start_e2e.py:486",
        "scripts/test_cors_implementation.py:187",
        "scripts/test_secret_manager_builder_critical.py:495",
        "scripts/test_secret_manager_builder_critical.py:624",
        "scripts/test_websocket_manual.py:123",
        "scripts/test_websocket_manual.py:124"
      ]
    },
    "❌ FAIL:": {
      "value": "❌ FAIL:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:765"
      ]
    },
    "❌ FAILED": {
      "value": "❌ FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_auth_integration.py:148",
        "scripts/test_staging_env.py:173",
        "scripts/unified_test_runner.py:898",
        "scripts/unified_test_runner.py:903"
      ]
    },
    "❌ FAILED | Backend service failed to start": {
      "value": "❌ FAILED | Backend service failed to start",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:71"
      ]
    },
    "❌ FAILED | Database validation failed": {
      "value": "❌ FAILED | Database validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:55"
      ]
    },
    "❌ FAILED | Environment check failed": {
      "value": "❌ FAILED | Environment check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:42"
      ]
    },
    "❌ FAILED | No services started successfully": {
      "value": "❌ FAILED | No services started successfully",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:107"
      ]
    },
    "❌ Failed Workflows:": {
      "value": "❌ Failed Workflows:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:343"
      ]
    },
    "❌ Failed to create Secret Manager client:": {
      "value": "❌ Failed to create Secret Manager client:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:46"
      ]
    },
    "❌ Failed to fetch": {
      "value": "❌ Failed to fetch",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:56"
      ]
    },
    "❌ Failed to fix": {
      "value": "❌ Failed to fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:178"
      ]
    },
    "❌ Failed to import SecretManagerBuilder:": {
      "value": "❌ Failed to import SecretManagerBuilder:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:172"
      ]
    },
    "❌ Failed to import backend main:": {
      "value": "❌ Failed to import backend main:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:145"
      ]
    },
    "❌ Failed to load": {
      "value": "❌ Failed to load",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:79"
      ]
    },
    "❌ Failed to load secrets from Secret Manager": {
      "value": "❌ Failed to load secrets from Secret Manager",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:212"
      ]
    },
    "❌ Failed to load secrets:": {
      "value": "❌ Failed to load secrets:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:61"
      ]
    },
    "❌ Failed to set up GCP authentication": {
      "value": "❌ Failed to set up GCP authentication",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:38"
      ]
    },
    "❌ Failed:": {
      "value": "❌ Failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:335"
      ]
    },
    "❌ Found": {
      "value": "❌ Found",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:61",
        "scripts/compliance/real_test_linter.py:117",
        "scripts/iterative_test_fix_loop.py:117"
      ]
    },
    "❌ GCP builder error:": {
      "value": "❌ GCP builder error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:97"
      ]
    },
    "❌ Handler initialization error:": {
      "value": "❌ Handler initialization error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:267"
      ]
    },
    "❌ Handler initialization failed": {
      "value": "❌ Handler initialization failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:261"
      ]
    },
    "❌ Import error:": {
      "value": "❌ Import error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:223"
      ]
    },
    "❌ Invalid host:": {
      "value": "❌ Invalid host:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:108"
      ]
    },
    "❌ Invalid or missing password": {
      "value": "❌ Invalid or missing password",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:139"
      ]
    },
    "❌ Message validation error:": {
      "value": "❌ Message validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:303"
      ]
    },
    "❌ Message validation failed": {
      "value": "❌ Message validation failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:297"
      ]
    },
    "❌ Missing required package:": {
      "value": "❌ Missing required package:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:112"
      ]
    },
    "❌ Prerequisites check failed": {
      "value": "❌ Prerequisites check failed",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:276"
      ]
    },
    "❌ Quick validation failed:": {
      "value": "❌ Quick validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:423"
      ]
    },
    "❌ Request failed:": {
      "value": "❌ Request failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:108"
      ]
    },
    "❌ SOME TESTS FAILED": {
      "value": "❌ SOME TESTS FAILED",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:361"
      ]
    },
    "❌ STAGING TESTS FAILED (exit code:": {
      "value": "❌ STAGING TESTS FAILED (exit code:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging.py:113"
      ]
    },
    "❌ Server responded with status": {
      "value": "❌ Server responded with status",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:101"
      ]
    },
    "❌ Services failed to become healthy within timeout": {
      "value": "❌ Services failed to become healthy within timeout",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:168"
      ]
    },
    "❌ Socket binding failed:": {
      "value": "❌ Socket binding failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:39"
      ]
    },
    "❌ Some coordination fixes failed validation": {
      "value": "❌ Some coordination fixes failed validation",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:423"
      ]
    },
    "❌ Syntax error:": {
      "value": "❌ Syntax error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:132"
      ]
    },
    "❌ TEST FAILED | Service startup orchestration test failed after": {
      "value": "❌ TEST FAILED | Service startup orchestration test failed after",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:142"
      ]
    },
    "❌ Test WebSocket connection failed:": {
      "value": "❌ Test WebSocket connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:102"
      ]
    },
    "❌ Test error:": {
      "value": "❌ Test error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:182"
      ]
    },
    "❌ Test file not found:": {
      "value": "❌ Test file not found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:83"
      ]
    },
    "❌ Unexpected error:": {
      "value": "❌ Unexpected error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:175",
        "scripts/test_websocket_connection.py:116"
      ]
    },
    "❌ Uvicorn test failed:": {
      "value": "❌ Uvicorn test failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:115"
      ]
    },
    "❌ Validation error:": {
      "value": "❌ Validation error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:139"
      ]
    },
    "❌ Validation failed:": {
      "value": "❌ Validation failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:78"
      ]
    },
    "❌ WebSocket connection closed:": {
      "value": "❌ WebSocket connection closed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:54"
      ]
    },
    "❌ WebSocket connection failed:": {
      "value": "❌ WebSocket connection failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:64"
      ]
    },
    "❌ WebSocket error:": {
      "value": "❌ WebSocket error:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:114"
      ]
    },
    "❌ WebSocket infrastructure needs attention": {
      "value": "❌ WebSocket infrastructure needs attention",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:129"
      ]
    },
    "❌ WebSocket manager not available": {
      "value": "❌ WebSocket manager not available",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:236"
      ]
    },
    "❌ clickhouse-connect is not installed": {
      "value": "❌ clickhouse-connect is not installed",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:246"
      ]
    },
    "用户_测试_123": {
      "value": "用户_测试_123",
      "category": "test_literals",
      "locations": [
        "scripts/test_data_validator_backup.py:637"
      ]
    },
    "🌍": {
      "value": "🌍",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:492"
      ]
    },
    "🌐 Testing ClickHouse connectivity...": {
      "value": "🌐 Testing ClickHouse connectivity...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:148"
      ]
    },
    "🎉 100-ITERATION TEST REMEDIATION COMPLETE! 🎉": {
      "value": "🎉 100-ITERATION TEST REMEDIATION COMPLETE! 🎉",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:511"
      ]
    },
    "🎉 ALL COORDINATION FIXES VALIDATED SUCCESSFULLY!": {
      "value": "🎉 ALL COORDINATION FIXES VALIDATED SUCCESSFULLY!",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:414"
      ]
    },
    "🎉 ALL TESTS PASSED - Port 8000 should work for the backend!": {
      "value": "🎉 ALL TESTS PASSED - Port 8000 should work for the backend!",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:186"
      ]
    },
    "🎉 ALL TESTS PASSED!": {
      "value": "🎉 ALL TESTS PASSED!",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:493",
        "scripts/test_example_message_flow.py:355"
      ]
    },
    "🎉 All CORS tests passed! The implementation is working correctly.": {
      "value": "🎉 All CORS tests passed! The implementation is working correctly.",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:198"
      ]
    },
    "🎉 All tests passed!": {
      "value": "🎉 All tests passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_log_introspection.py:425"
      ]
    },
    "🎉 All tests passed! Staging environment is fully operational.": {
      "value": "🎉 All tests passed! Staging environment is fully operational.",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_env.py:193"
      ]
    },
    "🎉 All tests passing after": {
      "value": "🎉 All tests passing after",
      "category": "test_literals",
      "locations": [
        "scripts/iterative_test_fix_loop.py:150"
      ]
    },
    "🎉 Quick validation passed!": {
      "value": "🎉 Quick validation passed!",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:419"
      ]
    },
    "🎯 Focus on testing real business logic, not mocks or constants": {
      "value": "🎯 Focus on testing real business logic, not mocks or constants",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:220"
      ]
    },
    "🎯 PHASE 6 | Testing service readiness...": {
      "value": "🎯 PHASE 6 | Testing service readiness...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:79"
      ]
    },
    "🏁 TESTING COMPLETE | Service startup orchestration test finished": {
      "value": "🏁 TESTING COMPLETE | Service startup orchestration test finished",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:99"
      ]
    },
    "🏗️ Testing sub-builders...": {
      "value": "🏗️ Testing sub-builders...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:81"
      ]
    },
    "🐌": {
      "value": "🐌",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:225",
        "scripts/test_secret_manager_builder_critical.py:658"
      ]
    },
    "💡 *": {
      "value": "💡 *",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:530"
      ]
    },
    "💡 BUSINESS CASE EVIDENCE:": {
      "value": "💡 BUSINESS CASE EVIDENCE:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:533"
      ]
    },
    "💡 Suggested fixes:": {
      "value": "💡 Suggested fixes:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:145"
      ]
    },
    "💡 To fix these issues:": {
      "value": "💡 To fix these issues:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:84"
      ]
    },
    "💥": {
      "value": "💥",
      "category": "test_literals",
      "locations": [
        "scripts/test_coordination_fixes.py:70",
        "scripts/test_example_message_flow.py:323"
      ]
    },
    "💥 CRITICAL SECRET MANAGER FRAGMENTATION DETECTED!\n   Issues found:": {
      "value": "💥 CRITICAL SECRET MANAGER FRAGMENTATION DETECTED!\n   Issues found:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:218"
      ]
    },
    "💥 ERROR | Test failed with exception:": {
      "value": "💥 ERROR | Test failed with exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:111"
      ]
    },
    "💥 Error running": {
      "value": "💥 Error running",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:125"
      ]
    },
    "💥 Exception:": {
      "value": "💥 Exception:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:170"
      ]
    },
    "💥 SOME TESTS FAILED - Port 8000 binding has issues": {
      "value": "💥 SOME TESTS FAILED - Port 8000 binding has issues",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:190"
      ]
    },
    "💥 Test execution failed:": {
      "value": "💥 Test execution failed:",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:255"
      ]
    },
    "💬 Testing chat message flow...": {
      "value": "💬 Testing chat message flow...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:311"
      ]
    },
    "💰 BUSINESS IMPACT:\n   • Current: 2-3 days per secret integration (4 implementations to update)\n   • Target: 30 minutes with unified SecretManagerBuilder\n   • Cost: $150K/year in prevented incidents + 60% faster development\n   • Risk: Configuration drift causing production outages\n\n✅ SOLUTION: SecretManagerBuilder following RedisConfigurationBuilder pattern\n   📋 Unified interface: builder.with_environment().with_service().build()\n   🏗️  9 Sub-builders: Connection, Security, Validation, Fallback, etc.\n   🔒 Security-first: Zero placeholder tolerance in production\n   🚀 Performance: <100ms load time per service\n   🔧 Debugging: Comprehensive validation and error reporting\n   🏢 Independence: Each service maintains its own builder instance": {
      "value": "💰 BUSINESS IMPACT:\n   • Current: 2-3 days per secret integration (4 implementations to update)\n   • Target: 30 minutes with unified SecretManagerBuilder\n   • Cost: $150K/year in prevented incidents + 60% faster development\n   • Risk: Configuration drift causing production outages\n\n✅ SOLUTION: SecretManagerBuilder following RedisConfigurationBuilder pattern\n   📋 Unified interface: builder.with_environment().with_service().build()\n   🏗️  9 Sub-builders: Connection, Security, Validation, Fallback, etc.\n   🔒 Security-first: Zero placeholder tolerance in production\n   🚀 Performance: <100ms load time per service\n   🔧 Debugging: Comprehensive validation and error reporting\n   🏢 Independence: Each service maintains its own builder instance",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:230"
      ]
    },
    "💾 PHASE 3 | Database validation...": {
      "value": "💾 PHASE 3 | Database validation...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:51"
      ]
    },
    "💾 Report saved to:": {
      "value": "💾 Report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:363"
      ]
    },
    "💾 Saved fixes to": {
      "value": "💾 Saved fixes to",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:265"
      ]
    },
    "📁": {
      "value": "📁",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:71",
        "scripts/ci/check_test_stubs.py:79"
      ]
    },
    "📄 Detailed results exported to": {
      "value": "📄 Detailed results exported to",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:226"
      ]
    },
    "📄 JSON report saved to:": {
      "value": "📄 JSON report saved to:",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:600"
      ]
    },
    "📈 **Success Metric:** Reduce violations from": {
      "value": "📈 **Success Metric:** Reduce violations from",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:570"
      ]
    },
    "📈 DETAILED METRICS": {
      "value": "📈 DETAILED METRICS",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_optimized.py:350"
      ]
    },
    "📊 Found": {
      "value": "📊 Found",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:280"
      ]
    },
    "📊 Getting debug info...": {
      "value": "📊 Getting debug info...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:120"
      ]
    },
    "📊 SUMMARY STATISTICS:": {
      "value": "📊 SUMMARY STATISTICS:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:515"
      ]
    },
    "📊 Server version:": {
      "value": "📊 Server version:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:177"
      ]
    },
    "📊 Summary:": {
      "value": "📊 Summary:",
      "category": "test_literals",
      "locations": [
        "scripts/generate_test_audit.py:276",
        "scripts/test_workflows_with_act.py:332"
      ]
    },
    "📊 TEST RESULTS SUMMARY": {
      "value": "📊 TEST RESULTS SUMMARY",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:311",
        "scripts/test_websocket_manual.py:121"
      ]
    },
    "📊 TEST SUMMARY:": {
      "value": "📊 TEST SUMMARY:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:174"
      ]
    },
    "📋 MEDIUM: Schedule": {
      "value": "📋 MEDIUM: Schedule",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:207"
      ]
    },
    "📋 PHASE 1 | Environment and pre-checks...": {
      "value": "📋 PHASE 1 | Environment and pre-checks...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:38"
      ]
    },
    "📋 Running": {
      "value": "📋 Running",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:58"
      ]
    },
    "📋 Running test:": {
      "value": "📋 Running test:",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:164"
      ]
    },
    "📋 Test Report": {
      "value": "📋 Test Report",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:325"
      ]
    },
    "📍 Line": {
      "value": "📍 Line",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:72",
        "scripts/ci/check_test_stubs.py:80"
      ]
    },
    "📖 Review SPEC/testing.xml for detailed fake test guidance": {
      "value": "📖 Review SPEC/testing.xml for detailed fake test guidance",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:219"
      ]
    },
    "📚 Available databases:": {
      "value": "📚 Available databases:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:182"
      ]
    },
    "📚 Use patterns from app/tests/examples/test_real_functionality_examples.py": {
      "value": "📚 Use patterns from app/tests/examples/test_real_functionality_examples.py",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:217"
      ]
    },
    "📝 Troubleshooting steps:": {
      "value": "📝 Troubleshooting steps:",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:230"
      ]
    },
    "📝 Validating syntax:": {
      "value": "📝 Validating syntax:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:110"
      ]
    },
    "📤 Sent ping message:": {
      "value": "📤 Sent ping message:",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:77"
      ]
    },
    "📤 Sent pong response": {
      "value": "📤 Sent pong response",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:99"
      ]
    },
    "📥 Received message": {
      "value": "📥 Received message",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:84"
      ]
    },
    "📦 Loading ClickHouse secrets from Secret Manager...": {
      "value": "📦 Loading ClickHouse secrets from Secret Manager...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:61"
      ]
    },
    "📦 Starting services with dev launcher...": {
      "value": "📦 Starting services with dev launcher...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:112"
      ]
    },
    "📦 Testing load_all_secrets()...": {
      "value": "📦 Testing load_all_secrets()...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:41"
      ]
    },
    "🔄 CONSISTENCY   | ✅ PASS | Services aligned": {
      "value": "🔄 CONSISTENCY   | ✅ PASS | Services aligned",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:509"
      ]
    },
    "🔄 CONSISTENCY   | ❌ FAIL |": {
      "value": "🔄 CONSISTENCY   | ❌ FAIL |",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:505"
      ]
    },
    "🔄 PHASE 4 | Migration check...": {
      "value": "🔄 PHASE 4 | Migration check...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:58"
      ]
    },
    "🔌 Connection closed cleanly": {
      "value": "🔌 Connection closed cleanly",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:167"
      ]
    },
    "🔌 Initiating connection to": {
      "value": "🔌 Initiating connection to",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_connection.py:131"
      ]
    },
    "🔌 Testing WebSocket connection...": {
      "value": "🔌 Testing WebSocket connection...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:263"
      ]
    },
    "🔍 Add fake test detection to CI pipeline to prevent regressions": {
      "value": "🔍 Add fake test detection to CI pipeline to prevent regressions",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:218"
      ]
    },
    "🔍 Checking prerequisites...": {
      "value": "🔍 Checking prerequisites...",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:34"
      ]
    },
    "🔍 Running Quick Validation Checks": {
      "value": "🔍 Running Quick Validation Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:370"
      ]
    },
    "🔍 Running Validation Checks": {
      "value": "🔍 Running Validation Checks",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:66"
      ]
    },
    "🔍 Validating secret values...": {
      "value": "🔍 Validating secret values...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:93"
      ]
    },
    "🔐 PHASE 2 | Loading secrets...": {
      "value": "🔐 PHASE 2 | Loading secrets...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:45"
      ]
    },
    "🔐 Setting up GCP Secret Manager client...": {
      "value": "🔐 Setting up GCP Secret Manager client...",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:34"
      ]
    },
    "🔐 Testing authentication...": {
      "value": "🔐 Testing authentication...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:218"
      ]
    },
    "🔐 Testing validate_configuration()...": {
      "value": "🔐 Testing validate_configuration()...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:64"
      ]
    },
    "🔥": {
      "value": "🔥",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:525"
      ]
    },
    "🔥 **": {
      "value": "🔥 **",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:505"
      ]
    },
    "🔥 HIGH": {
      "value": "🔥 HIGH",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_requirements_enforcer.py:551"
      ]
    },
    "🔥 URGENT: Fix": {
      "value": "🔥 URGENT: Fix",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:329"
      ]
    },
    "🔧 Action:": {
      "value": "🔧 Action:",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:73",
        "scripts/ci/check_test_stubs.py:81"
      ]
    },
    "🔧 Attempting to fix issues in:": {
      "value": "🔧 Attempting to fix issues in:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:248"
      ]
    },
    "🔧 IMPLEMENTATION FRAGMENTATION:": {
      "value": "🔧 IMPLEMENTATION FRAGMENTATION:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:528"
      ]
    },
    "🔧 LOW: Consider consolidating": {
      "value": "🔧 LOW: Consider consolidating",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:212"
      ]
    },
    "🔧 Testing backward compatibility...": {
      "value": "🔧 Testing backward compatibility...",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_debug.py:128"
      ]
    },
    "🔴": {
      "value": "🔴",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:119",
        "scripts/compliance/real_test_linter.py:141"
      ]
    },
    "🚀 ClickHouse Staging Connectivity Tester": {
      "value": "🚀 ClickHouse Staging Connectivity Tester",
      "category": "test_literals",
      "locations": [
        "scripts/test_staging_clickhouse.py:203"
      ]
    },
    "🚀 PHASE 5 | Starting services...": {
      "value": "🚀 PHASE 5 | Starting services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:64"
      ]
    },
    "🚀 Starting Cold Start E2E Test Suite": {
      "value": "🚀 Starting Cold Start E2E Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:73"
      ]
    },
    "🚀 Starting Docker WebSocket configuration tests...": {
      "value": "🚀 Starting Docker WebSocket configuration tests...",
      "category": "test_literals",
      "locations": [
        "scripts/test_docker_websocket_fix.py:234"
      ]
    },
    "🚀 Starting Example Message Flow Test Suite": {
      "value": "🚀 Starting Example Message Flow Test Suite",
      "category": "test_literals",
      "locations": [
        "scripts/test_example_message_flow.py:38"
      ]
    },
    "🚀 Starting GitHub Workflows Testing with ACT": {
      "value": "🚀 Starting GitHub Workflows Testing with ACT",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:272"
      ]
    },
    "🚀 Starting WebSocket Connection Tests": {
      "value": "🚀 Starting WebSocket Connection Tests",
      "category": "test_literals",
      "locations": [
        "scripts/test_websocket_manual.py:108"
      ]
    },
    "🚀 Starting comprehensive port 8000 binding test": {
      "value": "🚀 Starting comprehensive port 8000 binding test",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:153"
      ]
    },
    "🚀 TESTING": {
      "value": "🚀 TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:176"
      ]
    },
    "🚀 The system is now ready for production deployment!": {
      "value": "🚀 The system is now ready for production deployment!",
      "category": "test_literals",
      "locations": [
        "scripts/rapid_test_consolidation.py:521"
      ]
    },
    "🚨": {
      "value": "🚨",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:448",
        "scripts/test_secret_manager_builder_critical.py:228",
        "scripts/test_secret_manager_builder_critical.py:767"
      ]
    },
    "🚨 CRITICAL SECURITY VIOLATIONS DETECTED!\nViolations that risk production security:": {
      "value": "🚨 CRITICAL SECURITY VIOLATIONS DETECTED!\nViolations that risk production security:",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:777"
      ]
    },
    "🚨 CRITICAL: Remove": {
      "value": "🚨 CRITICAL: Remove",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/fake_test_scanner.py:197"
      ]
    },
    "🚨 HIGH SEVERITY (": {
      "value": "🚨 HIGH SEVERITY (",
      "category": "test_literals",
      "locations": [
        "scripts/ci/check_test_stubs.py:69"
      ]
    },
    "🛡️": {
      "value": "🛡️",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:779"
      ]
    },
    "🛡️  SECURITY VIOLATIONS (": {
      "value": "🛡️  SECURITY VIOLATIONS (",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:227"
      ]
    },
    "🛡️  TESTING": {
      "value": "🛡️  TESTING",
      "category": "test_literals",
      "locations": [
        "scripts/test_secret_manager_builder_critical.py:713"
      ]
    },
    "🟡": {
      "value": "🟡",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:121",
        "scripts/compliance/real_test_linter.py:141"
      ]
    },
    "🟢": {
      "value": "🟢",
      "category": "test_literals",
      "locations": [
        "scripts/compliance/real_test_linter.py:123",
        "scripts/compliance/real_test_linter.py:141"
      ]
    },
    "🤖 Testing model response...": {
      "value": "🤖 Testing model response...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:372"
      ]
    },
    "🧪 CORS Implementation Validator": {
      "value": "🧪 CORS Implementation Validator",
      "category": "test_literals",
      "locations": [
        "scripts/test_cors_implementation.py:236"
      ]
    },
    "🧪 Testing backend main module import...": {
      "value": "🧪 Testing backend main module import...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:120"
      ]
    },
    "🧪 Testing basic socket binding to port 8000...": {
      "value": "🧪 Testing basic socket binding to port 8000...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:25"
      ]
    },
    "🧪 Testing uvicorn binding to port 8000...": {
      "value": "🧪 Testing uvicorn binding to port 8000...",
      "category": "test_literals",
      "locations": [
        "scripts/test_backend_port_binding.py:48"
      ]
    },
    "🧪 Testing workflow:": {
      "value": "🧪 Testing workflow:",
      "category": "test_literals",
      "locations": [
        "scripts/test_workflows_with_act.py:144"
      ]
    },
    "🧹 CLEANUP | Shutting down services...": {
      "value": "🧹 CLEANUP | Shutting down services...",
      "category": "test_literals",
      "locations": [
        "scripts/test_service_startup.py:117"
      ]
    },
    "🧹 Cleaning up...": {
      "value": "🧹 Cleaning up...",
      "category": "test_literals",
      "locations": [
        "scripts/test_cold_start_e2e.py:463"
      ]
    }
  }
}